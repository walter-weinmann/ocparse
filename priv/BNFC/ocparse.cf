-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
-- Grammar rules.
-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Cypher01.                                        Cypher ::= Statement ";" ;
Cypher02.                                        Cypher ::= Statement     ;

Statement01.                                     Statement ::= Query ;

Query01.                                         Query ::= RegularQuery   ;
Query02.                                         Query ::= StandAloneCall ;

RegularQuery01.                                 RegularQuery ::= SingleQuery UnionList ;
RegularQuery02.                                 RegularQuery ::= SingleQuery           ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
UnionList01.                                    UnionList ::= UnionList Union ;
UnionList02.                                    UnionList ::=           Union ;
-- =============================================================================

SingleQuery01.                                  SingleQuery ::= ClauseList ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
ClauseList01.                                   ClauseList ::= ClauseList Clause ;
ClauseList02.                                   ClauseList ::=            Clause ;
-- =============================================================================

Union01.                                         Union ::= "UNION" "ALL" SingleQuery ;
Union02.                                         Union ::= "UNION"       SingleQuery ;

Clause01.                                        Clause ::= Match       ;
Clause02.                                        Clause ::= Unwind      ;
Clause03.                                        Clause ::= Merge       ;
Clause04.                                        Clause ::= Create      ;
Clause05.                                        Clause ::= Set         ;
Clause06.                                        Clause ::= Delete      ;
Clause07.                                        Clause ::= Remove      ;
Clause08.                                        Clause ::= InQueryCall ;
Clause09.                                        Clause ::= With        ;
Clause10.                                        Clause ::= Return      ;

Match01.                                         Match ::= "OPTIONAL" "MATCH" Pattern Where ;
Match02.                                         Match ::= "OPTIONAL" "MATCH" Pattern       ;
Match03.                                         Match ::=            "MATCH" Pattern Where ;
Match04.                                         Match ::=            "MATCH" Pattern       ;

Unwind01.                                        Unwind ::= "UNWIND" Expression "AS" Variable ;

Merge01.                                         Merge ::= "MERGE" PatternPart MergeActionList ;
Merge02.                                         Merge ::= "MERGE" PatternPart                 ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
MergeActionList01.                               MergeActionList ::= MergeActionList MergeAction ;
MergeActionList02.                               MergeActionList ::=                 MergeAction ;
-- -----------------------------------------------------------------------------

MergeAction01.                                   MergeAction ::= "ON" "CREATE" Set ;
MergeAction02.                                   MergeAction ::= "ON" "MATCH"  Set ;

Create01.                                        Create ::= "CREATE" Pattern ;

Set01.                                           Set ::= "SET" SetItemCommalist ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
SetItemCommalist01.                              SetItemCommalist ::= SetItem "," SetItemCommalist ;
SetItemCommalist02.                              SetItemCommalist ::= SetItem                      ;
-- -----------------------------------------------------------------------------

SetItem01.                                       SetItem ::= PropertyExpression "="  Expression ;
SetItem02.                                       SetItem ::= Variable           "="  Expression ;
SetItem03.                                       SetItem ::= Variable           "+=" Expression ;
SetItem04.                                       SetItem ::= Variable                NodeLabels ;

Delete01.                                        Delete ::= "DETACH" "DELETE" ExpressionCommalist ;
Delete02.                                        Delete ::=          "DELETE" ExpressionCommalist ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
ExpressionCommalist01.                           ExpressionCommalist ::= Expression "," ExpressionCommalist ;
ExpressionCommalist02.                           ExpressionCommalist ::= Expression                         ;
-- -----------------------------------------------------------------------------

Remove01.                                        Remove ::= "REMOVE" RemoveItemCommalist ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
RemoveItemCommalist01.                           RemoveItemCommalist ::= RemoveItem "," RemoveItemCommalist ;
RemoveItemCommalist02.                           RemoveItemCommalist ::= RemoveItem                         ;
-- -----------------------------------------------------------------------------

RemoveItem01.                                    RemoveItem ::= Variable           NodeLabels ;
RemoveItem02.                                    RemoveItem ::= PropertyExpression            ;

InQueryCall01.                                   InQueryCall ::= "CALL" ExplicitProcedureInvocation                    ;
InQueryCall02.                                   InQueryCall ::= "CALL" ExplicitProcedureInvocation "YIELD" YieldItems ;

StandAloneCall01.                                StandAloneCall ::= InQueryCall                                           ;
StandAloneCall02.                                StandAloneCall ::= "CALL" ExplicitProcedureInvocation                    ;
StandAloneCall03.                                StandAloneCall ::= "CALL" ImplicitProcedureInvocation                    ;
StandAloneCall04.                                StandAloneCall ::= "CALL" ExplicitProcedureInvocation "YIELD" YieldItems ;
StandAloneCall05.                                StandAloneCall ::= "CALL" ImplicitProcedureInvocation "YIELD" YieldItems ;

YieldItems01.                                    YieldItems ::= YieldItemCommalist ;
YieldItems02.                                    YieldItems ::= "-"                ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
YieldItemCommalist01.                            YieldItemCommalist ::= YieldItem "," YieldItemCommalist ;
YieldItemCommalist02.                            YieldItemCommalist ::= YieldItem                        ;
-- -----------------------------------------------------------------------------

YieldItem01.                                     YieldItem ::=                           Variable ;
YieldItem02.                                     YieldItem ::= ProcedureResultField "AS" Variable ;

With01.                                          With ::= "WITH" "DISTINCT" ReturnBody Where ;
With02.                                          With ::= "WITH" "DISTINCT" ReturnBody       ;
With03.                                          With ::= "WITH"            ReturnBody Where ;
With04.                                          With ::= "WITH"            ReturnBody       ;

Return01.                                        Return ::= "RETURN" "DISTINCT" ReturnBody ;
Return02.                                        Return ::= "RETURN"            ReturnBody ;

ReturnBody01.                                    ReturnBody ::= ReturnItems Order Skip Limit ;
ReturnBody02.                                    ReturnBody ::= ReturnItems Order Skip       ;
ReturnBody03.                                    ReturnBody ::= ReturnItems Order      Limit ;
ReturnBody04.                                    ReturnBody ::= ReturnItems Order            ;
ReturnBody05.                                    ReturnBody ::= ReturnItems       Skip Limit ;
ReturnBody06.                                    ReturnBody ::= ReturnItems       Skip       ;
ReturnBody07.                                    ReturnBody ::= ReturnItems            Limit ;
ReturnBody08.                                    ReturnBody ::= ReturnItems                  ;

ReturnItems01.                                   ReturnItems ::= "*" "," ReturnItemCommalist ;
ReturnItems02.                                   ReturnItems ::= "*"                         ;
ReturnItems03.                                   ReturnItems ::=         ReturnItemCommalist ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
ReturnItemCommalist01.                           ReturnItemCommalist ::= ReturnItem "," ReturnItemCommalist ;
ReturnItemCommalist02.                           ReturnItemCommalist ::= ReturnItem                         ;
-- -----------------------------------------------------------------------------

ReturnItem01.                                    ReturnItem ::= Expression "AS" Variable ;
ReturnItem02.                                    ReturnItem ::= Expression               ;

Order01.                                         Order ::= "ORDER" "BY" SortItemCommalist ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
SortItemCommalist01.                             SortItemCommalist ::= SortItem "," SortItemCommalist ;
SortItemCommalist02.                             SortItemCommalist ::= SortItem                       ;
-- -----------------------------------------------------------------------------

Skip01.                                          Skip ::= "SKIP" Expression ;

Limit01.                                         Limit ::= "LIMIT" Expression ;

SortItem01.                                      SortItem ::= Expression "ASCENDING"  ;
SortItem02.                                      SortItem ::= Expression "ASC"        ;
SortItem03.                                      SortItem ::= Expression "DESCENDING" ;
SortItem04.                                      SortItem ::= Expression "DESC"       ;
SortItem05.                                      SortItem ::= Expression              ;

Where01.                                         Where ::= "WHERE" Expression ;

Pattern01.                                       Pattern ::= PatternPartCommalist ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
PatternPartCommalist01.                          PatternPartCommalist ::= PatternPart "," PatternPartCommalist ;
PatternPartCommalist02.                          PatternPartCommalist ::= PatternPart                          ;
-- =============================================================================

PatternPart01.                                   PatternPart ::= Variable "=" AnonymousPatternPart ;
PatternPart02.                                   PatternPart ::=              AnonymousPatternPart ;

AnonymousPatternPart01.                          AnonymousPatternPart ::= PatternElement ;

PatternElement01.                                PatternElement ::= NodePattern PatternElementChainList ;
PatternElement02.                                PatternElement ::= NodePattern                         ;
PatternElement03.                                PatternElement ::= "(" PatternElement ")"              ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
PatternElementChainList01.                       PatternElementChainList ::= PatternElementChainList PatternElementChain ;
PatternElementChainList02.                       PatternElementChainList ::=                         PatternElementChain ;
-- =============================================================================

NodePattern01.                                   NodePattern ::= "(" Variable NodeLabels Properties ")" ;
NodePattern02.                                   NodePattern ::= "(" Variable NodeLabels            ")" ;
NodePattern03.                                   NodePattern ::= "(" Variable            Properties ")" ;
NodePattern04.                                   NodePattern ::= "(" Variable                       ")" ;
NodePattern05.                                   NodePattern ::= "("          NodeLabels Properties ")" ;
NodePattern06.                                   NodePattern ::= "("          NodeLabels            ")" ;
NodePattern07.                                   NodePattern ::= "("                     Properties ")" ;
NodePattern08.                                   NodePattern ::= "("                                ")" ;

PatternElementChain01.                           PatternElementChain ::= RelationshipPattern NodePattern ;

RelationshipPattern01.                           RelationshipPattern ::= "<" "-" RelationshipDetail "-" ">" ;
RelationshipPattern02.                           RelationshipPattern ::= "<" "-" RelationshipDetail "-"     ;
RelationshipPattern03.                           RelationshipPattern ::=     "-" RelationshipDetail "-" ">" ;
RelationshipPattern04.                           RelationshipPattern ::=     "-" RelationshipDetail "-"     ;
RelationshipPattern05.                           RelationshipPattern ::= "<" "-"                    "-" ">" ;
RelationshipPattern06.                           RelationshipPattern ::= "<" "-"                    "-"     ;
RelationshipPattern07.                           RelationshipPattern ::=     "-"                    "-" ">" ;
RelationshipPattern08.                           RelationshipPattern ::=     "-"                    "-"     ;

RelationshipDetail01.                            RelationshipDetail ::= "[" Variable  RelationshipTypes RangeLiteral Properties "]" ;
RelationshipDetail02.                            RelationshipDetail ::= "[" Variable  RelationshipTypes RangeLiteral            "]" ;
RelationshipDetail03.                            RelationshipDetail ::= "[" Variable  RelationshipTypes              Properties "]" ;
RelationshipDetail04.                            RelationshipDetail ::= "[" Variable  RelationshipTypes                         "]" ;
RelationshipDetail05.                            RelationshipDetail ::= "[" Variable                    RangeLiteral Properties "]" ;
RelationshipDetail06.                            RelationshipDetail ::= "[" Variable                    RangeLiteral            "]" ;
RelationshipDetail07.                            RelationshipDetail ::= "[" Variable                                 Properties "]" ;
RelationshipDetail08.                            RelationshipDetail ::= "[" Variable                                            "]" ;
RelationshipDetail09.                            RelationshipDetail ::= "["           RelationshipTypes RangeLiteral Properties "]" ;
RelationshipDetail10.                            RelationshipDetail ::= "["           RelationshipTypes RangeLiteral            "]" ;
RelationshipDetail11.                            RelationshipDetail ::= "["           RelationshipTypes              Properties "]" ;
RelationshipDetail12.                            RelationshipDetail ::= "["           RelationshipTypes                         "]" ;
RelationshipDetail13.                            RelationshipDetail ::= "["                             RangeLiteral Properties "]" ;
RelationshipDetail14.                            RelationshipDetail ::= "["                             RangeLiteral            "]" ;
RelationshipDetail15.                            RelationshipDetail ::= "["                                          Properties "]" ;
RelationshipDetail16.                            RelationshipDetail ::= "["                                                     "]" ;

Properties01.                                    Properties ::= MapLiteral ;
Properties02.                                    Properties ::= Parameter  ;

RelationshipTypes01.                             RelationshipTypes ::= ":" RelTypeName RelTypeVerticalbarlist ;
RelationshipTypes02.                             RelationshipTypes ::= ":" RelTypeName                        ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
RelTypeVerticalbarlist01.                        RelTypeVerticalbarlist ::= RelTypeVerticalbarlist "|" ":" RelTypeName ;
RelTypeVerticalbarlist02.                        RelTypeVerticalbarlist ::= RelTypeVerticalbarlist "|"     RelTypeName ;
RelTypeVerticalbarlist03.                        RelTypeVerticalbarlist ::=                        "|" ":" RelTypeName ;
RelTypeVerticalbarlist04.                        RelTypeVerticalbarlist ::=                        "|"     RelTypeName ;
-- =============================================================================

NodeLabels01.                                    NodeLabels ::= NodeLabelList ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
NodeLabelList01.                                 NodeLabelList ::= NodeLabelList NodeLabel ;
NodeLabelList02.                                 NodeLabelList ::=               NodeLabel ;
-- =============================================================================

NodeLabel01.                                     NodeLabel ::= ":" LabelName ;

RangeLiteral01.                                  RangeLiteral ::= "*" IntegerLiteral ".." IntegerLiteral ;
RangeLiteral02.                                  RangeLiteral ::= "*" IntegerLiteral ".."                ;
RangeLiteral03.                                  RangeLiteral ::= "*" IntegerLiteral                     ;
RangeLiteral04.                                  RangeLiteral ::= "*"                                    ;

LabelName01.                                     LabelName ::= SchemaName ;

RelTypeName01.                                   RelTypeName ::= SchemaName ;

Expression01.                                    Expression ::= OrExpression ;

OrExpression01.                                  OrExpression ::= XorExpression XorExpressionAddonList ;
OrExpression02.                                  OrExpression ::= XorExpression                        ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
XorExpressionAddonList01.                        XorExpressionAddonList ::= XorExpressionAddonList "OR" XorExpression ;
XorExpressionAddonList02.                        XorExpressionAddonList ::=                        "OR" XorExpression ;
-- =============================================================================

XorExpression01.                                 XorExpression ::= AndExpression AndExpressionAddonList ;
XorExpression02.                                 XorExpression ::= AndExpression                        ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
AndExpressionAddonList01.                        AndExpressionAddonList ::= AndExpressionAddonList "XOR" AndExpression ;
AndExpressionAddonList02.                        AndExpressionAddonList ::=                        "XOR" AndExpression ;
-- =============================================================================

AndExpression01.                                 AndExpression ::= NotExpression NotExpressionAddonList ;
AndExpression02.                                 AndExpression ::= NotExpression                        ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
NotExpressionAddonList01.                        NotExpressionAddonList ::= NotExpressionAddonList "AND" NotExpression ;
NotExpressionAddonList02.                        NotExpressionAddonList ::=                        "AND" NotExpression ;
-- =============================================================================

NotExpression01.                                 NotExpression ::= NotAddonList ComparisonExpression ;
NotExpression02.                                 NotExpression ::=              ComparisonExpression ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
NotAddonList01.                                  NotAddonList ::= NotAddonList "NOT" ;
NotAddonList02.                                  NotAddonList ::=              "NOT" ;
-- =============================================================================

ComparisonExpression01.                          ComparisonExpression ::= AddOrSubtractExpression PartialComparisonExpressionAddonList ;
ComparisonExpression02.                          ComparisonExpression ::= AddOrSubtractExpression                                      ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
PartialComparisonExpressionAddonList01.          PartialComparisonExpressionAddonList ::= PartialComparisonExpressionAddonList PartialComparisonExpression ;
PartialComparisonExpressionAddonList02.          PartialComparisonExpressionAddonList ::=                                      PartialComparisonExpression ;
-- =============================================================================

AddOrSubtractExpression01.                       AddOrSubtractExpression ::= MultiplyDivideModuloExpression MultiplyDivideModuloExpressionAddonList ;
AddOrSubtractExpression02.                       AddOrSubtractExpression ::= MultiplyDivideModuloExpression                                         ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
MultiplyDivideModuloExpressionAddonList01.       MultiplyDivideModuloExpressionAddonList ::= MultiplyDivideModuloExpressionAddonList "+" MultiplyDivideModuloExpression ;
MultiplyDivideModuloExpressionAddonList02.       MultiplyDivideModuloExpressionAddonList ::= MultiplyDivideModuloExpressionAddonList "-" MultiplyDivideModuloExpression ;
MultiplyDivideModuloExpressionAddonList03.       MultiplyDivideModuloExpressionAddonList ::=                                         "+" MultiplyDivideModuloExpression ;
MultiplyDivideModuloExpressionAddonList04.       MultiplyDivideModuloExpressionAddonList ::=                                         "-" MultiplyDivideModuloExpression ;
-- =============================================================================

MultiplyDivideModuloExpression01.                MultiplyDivideModuloExpression ::= PowerOfExpression PowerOfExpressionAddonList ;
MultiplyDivideModuloExpression02.                MultiplyDivideModuloExpression ::= PowerOfExpression                            ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
PowerOfExpressionAddonList01.                    PowerOfExpressionAddonList ::= PowerOfExpressionAddonList "*" PowerOfExpression ;
PowerOfExpressionAddonList02.                    PowerOfExpressionAddonList ::= PowerOfExpressionAddonList "/" PowerOfExpression ;
PowerOfExpressionAddonList03.                    PowerOfExpressionAddonList ::= PowerOfExpressionAddonList "%" PowerOfExpression ;
PowerOfExpressionAddonList04.                    PowerOfExpressionAddonList ::=                            "*" PowerOfExpression ;
PowerOfExpressionAddonList05.                    PowerOfExpressionAddonList ::=                            "/" PowerOfExpression ;
PowerOfExpressionAddonList06.                    PowerOfExpressionAddonList ::=                            "%" PowerOfExpression ;
-- =============================================================================

PowerOfExpression01.                             PowerOfExpression ::= UnaryAddOrSubtractExpression UnaryAddOrSubtractExpressionAddonList ;
PowerOfExpression02.                             PowerOfExpression ::= UnaryAddOrSubtractExpression                                       ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
UnaryAddOrSubtractExpressionAddonList01.         UnaryAddOrSubtractExpressionAddonList ::= UnaryAddOrSubtractExpressionAddonList "^" UnaryAddOrSubtractExpression ;
UnaryAddOrSubtractExpressionAddonList02.         UnaryAddOrSubtractExpressionAddonList ::=                                       "^" UnaryAddOrSubtractExpression ;
-- =============================================================================

UnaryAddOrSubtractExpression01.                  UnaryAddOrSubtractExpression ::= UnaryAddOrSubtractList StringListNullOperatorExpression ;
UnaryAddOrSubtractExpression02.                  UnaryAddOrSubtractExpression ::=                        StringListNullOperatorExpression ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
UnaryAddOrSubtractList01.                        UnaryAddOrSubtractList ::= UnaryAddOrSubtractList UnaryAddOrSubtract ;
UnaryAddOrSubtractList02.                        UnaryAddOrSubtractList ::=                        UnaryAddOrSubtract ;

UnaryAddOrSubtract01.                            UnaryAddOrSubtract ::= "+" ;
UnaryAddOrSubtract02.                            UnaryAddOrSubtract ::= "-" ;
-- =============================================================================

StringListNullOperatorExpression01.              StringListNullOperatorExpression ::= PropertyOrLabelsExpression PropertyOrLabelsExpressionAddonList ;
StringListNullOperatorExpression02.              StringListNullOperatorExpression ::= PropertyOrLabelsExpression                                     ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
PropertyOrLabelsExpressionAddonList01.           PropertyOrLabelsExpressionAddonList ::= PropertyOrLabelsExpressionAddonList PropertyOrLabelsExpressionAddon ;
PropertyOrLabelsExpressionAddonList02.           PropertyOrLabelsExpressionAddonList ::=                                     PropertyOrLabelsExpressionAddon ;

PropertyOrLabelsExpressionAddon01.               PropertyOrLabelsExpressionAddon ::= "[" Expression ".." Expression "]" ;
PropertyOrLabelsExpressionAddon02.               PropertyOrLabelsExpressionAddon ::= "[" Expression ".."            "]" ;
PropertyOrLabelsExpressionAddon03.               PropertyOrLabelsExpressionAddon ::= "[" Expression                 "]" ;
PropertyOrLabelsExpressionAddon04.               PropertyOrLabelsExpressionAddon ::= "["            ".." Expression "]" ;
PropertyOrLabelsExpressionAddon05.               PropertyOrLabelsExpressionAddon ::= "["            ".."            "]" ;
PropertyOrLabelsExpressionAddon06.               PropertyOrLabelsExpressionAddon ::= "=~"            PropertyOrLabelsExpression ;
PropertyOrLabelsExpressionAddon07.               PropertyOrLabelsExpressionAddon ::= "IN"            PropertyOrLabelsExpression ;
PropertyOrLabelsExpressionAddon08.               PropertyOrLabelsExpressionAddon ::= "STARTS" "WITH" PropertyOrLabelsExpression ;
PropertyOrLabelsExpressionAddon09.               PropertyOrLabelsExpressionAddon ::= "ENDS"   "WITH" PropertyOrLabelsExpression ;
PropertyOrLabelsExpressionAddon10.               PropertyOrLabelsExpressionAddon ::= "CONTAINS"      PropertyOrLabelsExpression ;
PropertyOrLabelsExpressionAddon11.               PropertyOrLabelsExpressionAddon ::= "IS"       "NULL" ;
PropertyOrLabelsExpressionAddon12.               PropertyOrLabelsExpressionAddon ::= "IS" "NOT" "NULL" ;
-- =============================================================================

PropertyOrLabelsExpression01.                    PropertyOrLabelsExpression ::= Atom NodeLabelsPropertyLookupList ;
PropertyOrLabelsExpression02.                    PropertyOrLabelsExpression ::= Atom                              ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
NodeLabelsPropertyLookupList01.                  NodeLabelsPropertyLookupList ::= NodeLabelsPropertyLookupList NodeLabels     ;
NodeLabelsPropertyLookupList02.                  NodeLabelsPropertyLookupList ::= NodeLabelsPropertyLookupList PropertyLookup ;
NodeLabelsPropertyLookupList03.                  NodeLabelsPropertyLookupList ::=                              NodeLabels     ;
NodeLabelsPropertyLookupList04.                  NodeLabelsPropertyLookupList ::=                              PropertyLookup ;
-- =============================================================================

Atom01.                                          Atom ::= "COUNT"   "(" "*"              ")"                ;
Atom02.                                          Atom ::= "FILTER"  "(" FilterExpression ")"                ;
Atom03.                                          Atom ::= "EXTRACT" "(" FilterExpression "|" Expression ")" ;
Atom04.                                          Atom ::= "EXTRACT" "(" FilterExpression ")"                ;
Atom05.                                          Atom ::= "ALL"     "(" FilterExpression ")"                ;
Atom06.                                          Atom ::= "ANY"     "(" FilterExpression ")"                ;
Atom07.                                          Atom ::= "NONE"    "(" FilterExpression ")"                ;
Atom08.                                          Atom ::= "SINGLE"  "(" FilterExpression ")"                ;
Atom09.                                          Atom ::= CaseExpression                                    ;
Atom10.                                          Atom ::= FunctionInvocation                                ;
Atom11.                                          Atom ::= ListComprehension                                 ;
Atom12.                                          Atom ::= Literal                                           ;
Atom13.                                          Atom ::= Parameter                                         ;
Atom14.                                          Atom ::= ParenthesizedExpression                           ;
Atom15.                                          Atom ::= PatternComprehension                              ;
Atom16.                                          Atom ::= RelationshipsPattern                              ;
Atom17.                                          Atom ::= Variable                                          ;

Literal01.                                       Literal ::= BooleanLiteral   ;
Literal02.                                       Literal ::= ListLiteral      ;
Literal03.                                       Literal ::= MapLiteral       ;
Literal04.                                       Literal ::= "NULL"           ;
Literal05.                                       Literal ::= NumberLiteral    ;
Literal06.                                       Literal ::= "STRING_LITERAL" ;

BooleanLiteral01.                                BooleanLiteral ::= "FALSE" ;
BooleanLiteral02.                                BooleanLiteral ::= "TRUE"  ;

ListLiteral01.                                   ListLiteral ::= "[" ExpressionCommalist "]" ;
ListLiteral02.                                   ListLiteral ::= "["                     "]" ;

PartialComparisonExpression01.                   PartialComparisonExpression ::= "="  AddOrSubtractExpression ;
PartialComparisonExpression02.                   PartialComparisonExpression ::= "<>" AddOrSubtractExpression ;
PartialComparisonExpression03.                   PartialComparisonExpression ::= "<"  AddOrSubtractExpression ;
PartialComparisonExpression04.                   PartialComparisonExpression ::= ">"  AddOrSubtractExpression ;
PartialComparisonExpression05.                   PartialComparisonExpression ::= "<=" AddOrSubtractExpression ;
PartialComparisonExpression06.                   PartialComparisonExpression ::= ">=" AddOrSubtractExpression ;

ParenthesizedExpression01.                       ParenthesizedExpression ::= "(" Expression ")" ;

RelationshipsPattern01.                          RelationshipsPattern ::= NodePattern PatternElementChainList ;

FilterExpression01.                              FilterExpression ::= IdInColl Where ;
FilterExpression02.                              FilterExpression ::= IdInColl       ;

IdInColl01.                                      IdInColl ::= Variable "IN" Expression ;

FunctionInvocation01.                            FunctionInvocation ::= FunctionName "(" "DISTINCT" ExpressionCommalist ")" ;
FunctionInvocation02.                            FunctionInvocation ::= FunctionName "(" "DISTINCT"                     ")" ;
FunctionInvocation03.                            FunctionInvocation ::= FunctionName "("            ExpressionCommalist ")" ;
FunctionInvocation04.                            FunctionInvocation ::= FunctionName "("                                ")" ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
FunctionInvocation05.                            FunctionInvocation ::= "COUNT"         "(" "DISTINCT" ExpressionCommalist ")" ;
FunctionInvocation06.                            FunctionInvocation ::= "COUNT"         "(" "DISTINCT"                     ")" ;
FunctionInvocation07.                            FunctionInvocation ::= "COUNT"         "("            ExpressionCommalist ")" ;
FunctionInvocation08.                            FunctionInvocation ::= "COUNT"         "("                                ")" ;
-- =============================================================================

FunctionName01.                                  FunctionName ::= SymbolicName ;
FunctionName02.                                  FunctionName ::= "EXISTS"      ;

ExplicitProcedureInvocation01.                   ExplicitProcedureInvocation ::= ProcedureName "("                     ")" ;
ExplicitProcedureInvocation02.                   ExplicitProcedureInvocation ::= ProcedureName "(" ExpressionCommalist ")" ;

ImplicitProcedureInvocation01.                   ImplicitProcedureInvocation ::= ProcedureName ;

ProcedureResultField01.                          ProcedureResultField ::= SymbolicName ;

ProcedureName01.                                 ProcedureName ::= SymbolicName ;

ListComprehension01.                             ListComprehension ::= "[" FilterExpression "|" Expression "]" ;
ListComprehension02.                             ListComprehension ::= "[" FilterExpression                "]" ;

PatternComprehension01.                          PatternComprehension ::= "[" Variable "=" RelationshipsPattern "WHERE" Expression "|" Expression "]" ;
PatternComprehension02.                          PatternComprehension ::= "[" Variable "=" RelationshipsPattern                    "|" Expression "]" ;
PatternComprehension03.                          PatternComprehension ::= "["              RelationshipsPattern "WHERE" Expression "|" Expression "]" ;
PatternComprehension04.                          PatternComprehension ::= "["              RelationshipsPattern                    "|" Expression "]" ;


PropertyLookup01.                                PropertyLookup ::= "." PropertyKeyName ;

CaseExpression01.                                CaseExpression ::= "CASE"            CaseAlternativesList                   "END" ;
CaseExpression02.                                CaseExpression ::= "CASE"            CaseAlternativesList "ELSE" Expression "END" ;
CaseExpression03.                                CaseExpression ::= "CASE" Expression CaseAlternativesList                   "END" ;
CaseExpression04.                                CaseExpression ::= "CASE" Expression CaseAlternativesList "ELSE" Expression "END" ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
CaseAlternativesList01.                          CaseAlternativesList ::= CaseAlternativesList CaseAlternatives ;
CaseAlternativesList02.                          CaseAlternativesList ::=                      CaseAlternatives ;
-- =============================================================================

CaseAlternatives01.                              CaseAlternatives ::= "WHEN" Expression "THEN" Expression ;

Variable01.                                      Variable ::= SymbolicName ;

NumberLiteral01.                                 NumberLiteral ::= DoubleLiteral  ;
NumberLiteral02.                                 NumberLiteral ::= IntegerLiteral ;

MapLiteral01.                                    MapLiteral ::= "{" PropertyKeyNameExpressionCommalist "}" ;
MapLiteral02.                                    MapLiteral ::= "{"                                    "}" ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
PropertyKeyNameExpressionCommalist01.            PropertyKeyNameExpressionCommalist ::= PropertyKeyNameExpression "," PropertyKeyNameExpressionCommalist ;
PropertyKeyNameExpressionCommalist02.            PropertyKeyNameExpressionCommalist ::= PropertyKeyNameExpression                                            ;

PropertyKeyNameExpression01.                     PropertyKeyNameExpression ::= PropertyKeyName ":" Expression ;
-- =============================================================================

Parameter01.                                     Parameter ::= "$" SymbolicName      ;
Parameter02.                                     Parameter ::= "$" "DECIMAL_INTEGER" ;

PropertyExpression01.                            PropertyExpression ::= Atom PropertyLookupList ;

-- =============================================================================
-- Helper definitions.
-- -----------------------------------------------------------------------------
PropertyLookupList01.                            PropertyLookupList ::= PropertyLookupList PropertyLookup ;
PropertyLookupList02.                            PropertyLookupList ::=                    PropertyLookup ;
-- =============================================================================

PropertyKeyName01.                               PropertyKeyName ::= SchemaName ;

IntegerLiteral01.                                IntegerLiteral ::= "DECIMAL_INTEGER" ;
IntegerLiteral02.                                IntegerLiteral ::= "HEX_INTEGER"     ;
IntegerLiteral03.                                IntegerLiteral ::= "OCTAL_INTEGER"   ;

DoubleLiteral01.                                 DoubleLiteral ::= "EXPONENT_DECIMAL_REAL" ;
DoubleLiteral02.                                 DoubleLiteral ::= "REGULAR_DECIMAL_REAL"  ;

SchemaName01.                                    SchemaName ::= SymbolicName ;
SchemaName02.                                    SchemaName ::= ReservedWord ;

ReservedWord01.                                  ReservedWord ::= "ALL"        ;
ReservedWord02.                                  ReservedWord ::= "AND"        ;
ReservedWord03.                                  ReservedWord ::= "AS"         ;
ReservedWord04.                                  ReservedWord ::= "ASC"        ;
ReservedWord05.                                  ReservedWord ::= "ASCENDING"  ;
ReservedWord06.                                  ReservedWord ::= "BY"         ;
ReservedWord07.                                  ReservedWord ::= "CASE"       ;
ReservedWord08.                                  ReservedWord ::= "CONSTRAINT" ;
ReservedWord09.                                  ReservedWord ::= "CONTAINS"   ;
ReservedWord10.                                  ReservedWord ::= "CREATE"     ;
ReservedWord11.                                  ReservedWord ::= "DELETE"     ;
ReservedWord12.                                  ReservedWord ::= "DESC"       ;
ReservedWord13.                                  ReservedWord ::= "DESCENDING" ;
ReservedWord14.                                  ReservedWord ::= "DETACH"     ;
ReservedWord15.                                  ReservedWord ::= "DISTINCT"   ;
ReservedWord16.                                  ReservedWord ::= "DO"         ;
ReservedWord17.                                  ReservedWord ::= "ELSE"       ;
ReservedWord18.                                  ReservedWord ::= "END"        ;
ReservedWord19.                                  ReservedWord ::= "ENDS"       ;
ReservedWord20.                                  ReservedWord ::= "EXISTS"     ;
ReservedWord21.                                  ReservedWord ::= "FALSE"      ;
ReservedWord22.                                  ReservedWord ::= "FOR"        ;
ReservedWord23.                                  ReservedWord ::= "IN"         ;
ReservedWord24.                                  ReservedWord ::= "IS"         ;
ReservedWord25.                                  ReservedWord ::= "LIMIT"      ;
ReservedWord26.                                  ReservedWord ::= "MATCH"      ;
ReservedWord27.                                  ReservedWord ::= "MERGE"      ;
ReservedWord28.                                  ReservedWord ::= "NOT"        ;
ReservedWord29.                                  ReservedWord ::= "NULL"       ;
ReservedWord30.                                  ReservedWord ::= "ON"         ;
ReservedWord31.                                  ReservedWord ::= "OPTIONAL"   ;
ReservedWord32.                                  ReservedWord ::= "OR"         ;
ReservedWord33.                                  ReservedWord ::= "ORDER"      ;
ReservedWord34.                                  ReservedWord ::= "REMOVE"     ;
ReservedWord35.                                  ReservedWord ::= "REQUIRE"    ;
ReservedWord36.                                  ReservedWord ::= "RETURN"     ;
ReservedWord37.                                  ReservedWord ::= "SET"        ;
ReservedWord38.                                  ReservedWord ::= "SKIP"       ;
ReservedWord39.                                  ReservedWord ::= "STARTS"     ;
ReservedWord40.                                  ReservedWord ::= "THEN"       ;
ReservedWord41.                                  ReservedWord ::= "TRUE"       ;
ReservedWord42.                                  ReservedWord ::= "WHERE"      ;
ReservedWord43.                                  ReservedWord ::= "WITH"       ;
ReservedWord44.                                  ReservedWord ::= "UNION"      ;
ReservedWord45.                                  ReservedWord ::= "UNIQUE"     ;
ReservedWord46.                                  ReservedWord ::= "UNWIND"     ;
ReservedWord47.                                  ReservedWord ::= "WHEN"       ;
ReservedWord48.                                  ReservedWord ::= "XOR"        ;

SymbolicName01.                                  SymbolicName ::= "ESCAPED_SYMBOLIC_NAME"   ;
SymbolicName02.                                  SymbolicName ::= "UNESCAPED_SYMBOLIC_NAME" ;
SymbolicName03.                                  SymbolicName ::= "HEX_LETTER"              ;
SymbolicName04.                                  SymbolicName ::= "ALL"                     ;
SymbolicName05.                                  SymbolicName ::= "ANY"                     ;
SymbolicName06.                                  SymbolicName ::= "COUNT"                   ;
SymbolicName07.                                  SymbolicName ::= "EXTRACT"                 ;
SymbolicName08.                                  SymbolicName ::= "FILTER"                  ;
SymbolicName09.                                  SymbolicName ::= "NONE"                    ;
SymbolicName10.                                  SymbolicName ::= "SINGLE"                  ;

-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
-- LBNF specifica
-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

entrypoints Cypher ;
