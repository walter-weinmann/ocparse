%%%-------------------------------------------------------------------
%%% File        : performance_statement_SUITE.erl
%%% Description : Test Suite for rule: statement.
%%%
%%% Created     : 26.08.2016
%%%-------------------------------------------------------------------
-module(performance_statement_SUITE).

-compile(export_all).

-include_lib("common_test/include/ct.hrl").
-include_lib("eunit/include/eunit.hrl").

%%--------------------------------------------------------------------
%% COMMON TEST CALLBACK FUNCTIONS - SUITE
%%--------------------------------------------------------------------

suite() ->
    [
        {timetrap, {minutes, 10}}
    ].

init_per_suite(Config) ->
    Config.

end_per_suite(_Config) ->
    ok.

%%--------------------------------------------------------------------
%% COMMON TEST CALLBACK FUNCTIONS - ALL
%%--------------------------------------------------------------------

all() ->
    [test_statement].

%%--------------------------------------------------------------------
%% TEST CASES
%%--------------------------------------------------------------------

test_statement(_Config) ->
    octest:ct_string("Unwind $`4esn`[.e1..$usn1] As `1esn` Detach Delete #usn7[.12][usn2],$_usn4[$`2esn`..],$@usn5[$_usn3] Remove usn1($`2esn` Ends With 1e1).`2esn`,All(`6esn` In .e0['s_str'..][$`8esn`..] Where 0.12[123456789..]).`4esn`,All(`3esn` In False In $`2esn` In 1e1 Where $0 Contains 7 Contains 1.e1)._usn3! Union All Detach Delete .0 =~$@usn5 =~1.e1,[usn2 Contains 0,.e0 =~7 =~False,.12] Is Null,@usn6[...12][..123.654] Return Distinct 7 Contains 1000 Contains $usn1,usn2 Contains 07 Contains False As _usn4,{#usn8:.e0 Ends With $`1esn` Ends With 1000}[Filter(#usn8 In 07['s_str'][$@usn6] Where $12[0.0..])][Filter(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..])] Order By [`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where .0 =~$@usn5 =~1.e1] =~{@usn6:0 Is Null Is Null} =~count(Distinct Null[9e1][$`6esn`],`4esn` Starts With `8esn`) Desc,{`7esn`:usn2 Starts With 00}[(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})<-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-({@usn6:`5esn` Ends With $999})..][(:`1esn`:@usn6{_usn3:$usn2 =~`6esn` =~`1esn`,`6esn`:0[1e1..00]})-[{_usn4:$`8esn` Contains .0 Contains 0.12}]->(:usn1:``{_usn4:1000[12.e12][#usn7]})-[@usn6 *00]->(`4esn` {_usn4:$`2esn`[$``..12e12]})..] Ascending,$#usn8[.e1][`2esn`] Asc Union With Distinct 999[..\"d_str\"],`7esn`(Distinct `7esn` Is Null,`4esn` Ends With 's_str' Ends With @usn6) Is Null Order By #usn7 =~$`8esn` Desc,[@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`],12e12 Ends With $_usn4 Ends With $`2esn`][Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where _usn4[.._usn4])][$@usn5] Asc Detach Delete @usn6(Distinct $0 Contains 7 Contains 1.e1)[(_usn4 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8)][Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0X0123456789ABCDEF In _usn3)],[usn1 In 123.654 =~.e0 =~9e0 Where False Starts With $123456789] Contains All(`6esn` In 1000[12.e12][#usn7] Where $`7esn`[..$`8esn`]) Contains [True,07 In Count(*),.e0['s_str'..][$`8esn`..]] Create ((`2esn` :#usn7{#usn8:$usn1[usn1..$`8esn`][12e12..$``],usn1:'s_str' Ends With $7})<-[ *0..]->(_usn3 :@usn6))"),
    octest:ct_string("Create _usn3=(:#usn7{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]}),(({_usn4:$`5esn` Starts With $`3esn` Starts With 1.e1,`3esn`:1000[Null][$`7esn`]})-[? *999]-({_usn3:123.654 Is Not Null Is Not Null})<-[usn1?:`8esn`|@usn6]->(#usn8 :#usn7{`2esn`:0.e0[.e12]})) Create _usn3=((`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null})),`5esn`=((`6esn` :_usn3:@usn5)) Union Remove None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where False In $`2esn` In 1e1).`2esn`? Unwind usn1 Is Null Is Null As usn2 With Distinct #usn8(Distinct 0x0[$7],#usn8[1e1..])[[1.e1[#usn7][1.e1]]..{usn1:`2esn` Is Null Is Null}][_usn3(Distinct usn1[$`1esn`..])..Extract(`3esn` In False In $`2esn` In 1e1 Where 1000 Ends With $`5esn`)] As `6esn`,@usn5(0X0123456789ABCDEF Is Null,0X7[0xabc][$1000])[None(`3esn` In False In $`2esn` In 1e1 Where `` Contains 010 Contains $1000)],$`1esn`[``..123456789][010..1.e1] Order By {@usn5:@usn5[..$999][..$0]} =~[`3esn` In @usn6[..\"d_str\"][..01] Where `1esn`[$7][0Xa]|.e0 Contains 999] =~[$usn2 Starts With $`7esn` Starts With _usn4] Asc,Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 01[$0])[{`5esn`:@usn6[$usn1][$`2esn`],`1esn`:12.0[9e12]['s_str']}..][Any(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0)..] Asc Union Create usn2=(`5esn` :`2esn`:@usn5{usn2:$`6esn` Starts With usn1,``:123456789 =~@usn5 =~$`5esn`})<-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}),(`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})<-[? *..010{usn1:123456789[$_usn4..]}]->(#usn7 {usn2:$#usn8 In True In #usn7}) Detach Delete `6esn` Contains \"d_str\" Contains 0X7"),
    octest:ct_string("Return Distinct `6esn` In 0e0 In _usn4 As `3esn`,12[$`5esn`..$`7esn`][$1000..$_usn4] As #usn8,7 =~$1000 =~$`5esn` Order By Any(#usn8 In 07['s_str'][$@usn6] Where $`7esn`[usn2]) In [`6esn` In 0x0[9e0..] Where `5esn`[usn1]] In {_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]} Ascending,12e12 In Null Asc Skip ``[_usn4..][$7..] Limit 123456789 =~@usn5 =~$`5esn` Union Optional Match ((#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]})),`7esn`=((:`1esn`:@usn6{`1esn`:12.0[9e12]['s_str'],`3esn`:$123456789 Is Not Null})) Create `2esn`=(#usn8 :`5esn`{_usn3:'s_str' Starts With $usn2,`2esn`:$`2esn` Starts With 9e12})<-[`2esn`:usn1|#usn7 *123456789..{`4esn`:Count(*) Ends With 7 Ends With 0,@usn5:.0[@usn6..]}]-(@usn5 {@usn6:$123456789[12.0],#usn7:usn1 =~_usn4 =~$usn1}),({_usn4:.e0[$`1esn`..][_usn4..],usn2:.12[0X0123456789ABCDEF..]}) Merge _usn4=(:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`}) On Match Set #usn7 =`2esn`(_usn3[..usn2])[Extract(usn1 In 999 Where 010 In $@usn5 In `5esn`)],`7esn`+=0.0[Null..][.12..],`7esn`+=0.0[Null..][.12..] On Match Set None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where False In $`2esn` In 1e1).usn1? =Count(*)[$1000..01],Extract(`3esn` In False In $`2esn` In 1e1 Where $`` Starts With 0x0|0.12 Is Null Is Null).@usn5! =07 Ends With $_usn4 Ends With 0.e0"),
    octest:ct_string("Return $123456789 =~0e0 As `4esn`,1.e1 =~01234567 Order By (:``:`6esn`{`8esn`:123.654[.e12..\"d_str\"]})<-[_usn3:`3esn`|_usn4]->(_usn3 :`4esn`:usn2) Is Not Null Is Not Null Desc,{_usn4:\"d_str\" Ends With $`3esn`,``:#usn8 =~#usn7 =~0x0}[Single(usn1 In 0xabc Is Not Null Is Not Null Where `7esn`[..01])..{`2esn`:.0[@usn6..]}][[1000[12.e12][#usn7],`` Is Not Null Is Not Null]..None(#usn8 In 0x0[_usn4..] Where `8esn` Ends With $`1esn`)] Descending Create ((`` :usn1:``)-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->(`8esn` :#usn7)<-[?{`5esn`:$1000 =~$`8esn` =~$`2esn`,_usn3:$`` Starts With 0x0}]->(`2esn` :`5esn`{`1esn`:$@usn6 Ends With 0.0})),#usn7=(((`6esn` :`5esn`{`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})-[`4esn`?:usn1|#usn7{`1esn`:123456789 Ends With 9e1 Ends With ``,@usn5:0xabc Contains 0}]->(`` :`3esn`{#usn8:`3esn` Is Not Null Is Not Null,#usn8:$123456789[`3esn`..`5esn`][1e1..$`5esn`]})-[? *0xabc..]->(`6esn` {`5esn`:0x0 =~@usn5 =~01}))) Union Remove _usn3(Distinct $usn2 Starts With 9e1 Starts With `7esn`,.12 =~$#usn7 =~$``).`4esn`?,Single(`6esn` In 0x0[9e0..] Where 9e0[$@usn6]).#usn7,{`8esn`:01[$0],``:0xabc Is Not Null Is Not Null}.@usn6! Union All Create `3esn`=(({`2esn`:0,`3esn`:$`7esn` Starts With 07 Starts With `1esn`})<-[?{_usn3:Count(*) Ends With 7 Ends With 0,`8esn`:@usn6 Starts With #usn8 Starts With $#usn7}]-(`3esn` {usn1:True Ends With `6esn` Ends With 9e0})<-[`7esn`?]->(:``:`6esn`{`5esn`:_usn3 =~$12})),`8esn`=((#usn8 :usn2{``:999})-[#usn8?:``{`7esn`:$`5esn` Starts With $`3esn` Starts With 1.e1}]-(#usn8 {`6esn`:$1000 =~$`8esn` =~$`2esn`})) Remove Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where `7esn` Contains .0 Contains #usn8|$_usn3[0e0..][12.0..]).``,_usn3(Distinct `4esn`).`8esn`? Merge usn2=((`5esn` :_usn4)<-[?:usn2|:``]->(_usn4 {`4esn`:01234567[..00][..$`3esn`],usn1:00[\"d_str\"][False]})<-[usn1?:@usn6{`5esn`:$7[$12],`6esn`:#usn8 Is Not Null}]-({#usn7:1e1[`3esn`]})) On Create Set (`` :#usn8:#usn7)<-[ *0Xa{#usn8:_usn4[#usn7..#usn8],usn2:9e0[0..1e1]}]->(#usn8 :#usn8:#usn7{@usn6:$#usn8[0e0..][07..],``:$`7esn` =~1.e1 =~0.e0})-[{#usn7:`2esn`[`3esn`..],@usn5:12.0[..0X7]}]-(:``:`6esn`{`8esn`:123.654[.e12..\"d_str\"]}).#usn8? =Single(#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]) Contains Single(`5esn` In $usn2 Contains $`1esn` Where `2esn` Contains `3esn` Contains $@usn5) Contains {_usn3:0xabc Contains 0,`6esn`:$`6esn`[.e12..$`6esn`][$#usn7...0]}"),
    octest:ct_string("With  *,$`8esn` Is Not Null,@usn5 Ends With 1000 Order By {`2esn`:`2esn`[``..]} =~[`6esn` In 0x0[9e0..] Where 0Xa[..1.e1]] =~None(`3esn` In @usn6[..\"d_str\"][..01] Where $@usn6 Is Null) Ascending Skip Filter(`2esn` In $``[$#usn8] Where 0e0['s_str']) Contains [`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 7 =~False|`6esn` Is Not Null] Contains None(usn1 In 123.654 =~.e0 =~9e0 Where $123456789[..$`7esn`][..\"d_str\"]) Where _usn3 =~$12 Return Distinct (`6esn` :`8esn`)-[@usn6{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]}]-(`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]})<-[`8esn`?:usn1|#usn7 *01..7{usn1:123456789[$_usn4..]}]-(usn2 :@usn6) =~$`3esn` =~`8esn`(1000[12.e12][#usn7],#usn8[1e1..]) As `7esn`"),
    octest:ct_string("Remove Single(`6esn` In 0x0[9e0..] Where `4esn` In $`2esn` In @usn5)._usn3,Filter(usn1 In 0xabc Is Not Null Is Not Null Where False Contains $`1esn` Contains @usn6)._usn3"),
    octest:ct_string("Remove Filter(`3esn` In 999 Where 0.12[123456789..]).`6esn`? Merge (:#usn7)<-[#usn7:`1esn`|@usn6 *999{`4esn`:0X7[..`5esn`][..$`7esn`]}]-(:`1esn`:@usn6{`1esn`:12.0[9e12]['s_str'],`3esn`:$123456789 Is Not Null})-[@usn6?:_usn3|`6esn` *0..]->(:`1esn`:@usn6) Unwind 9e0[123456789..0][12.0..@usn6] As `2esn` Union All Remove Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0).`5esn`,usn1:_usn4 Union Remove ({_usn4:`7esn`[_usn4..][Count(*)..],`1esn`:01234567 In \"d_str\"})-[usn2?:@usn5|:@usn6]->({#usn8:$`` Is Not Null Is Not Null,`8esn`:$usn2 Starts With 9e1 Starts With `7esn`})<-[`7esn`?]-(usn1 :`6esn`:`3esn`{`2esn`:`` In 123.654 In 0.0,usn2:#usn7 In #usn7}).usn1"),
    octest:ct_string("Remove [usn1 In 999 Where `5esn` Ends With $999|`` Contains 010 Contains $1000].`1esn`,[`6esn` In 0x0[9e0..] Where $7 Ends With 12.e12 Ends With `1esn`]._usn4? Remove Single(`2esn` In $``[$#usn8] Where `1esn`[Null..]).usn1,Single(`3esn` In False In $`2esn` In 1e1 Where 's_str' Ends With $7).`8esn`!,{`2esn`:.e12 Is Null Is Null,usn1:.e12 =~@usn5}.`3esn` Merge ((`` {``:0.12 Contains 0x0 Contains @usn5}))"),
    octest:ct_string("Return Distinct 123456789 =~@usn5 =~$`5esn` As @usn6 Delete `2esn`[0.e0..$999],$`7esn` Contains 010 Contains $_usn3,$@usn6 In 12 In 12e12 Detach Delete `6esn` Contains \"d_str\" Contains 0X7 Union Create `4esn`=((:`8esn`)-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :_usn3:@usn5)) Union Merge (usn1 :`1esn`:@usn6)-[?:`4esn`{@usn5:$`2esn` Ends With 1e1,usn1:'s_str'[$`6esn`..][$0..]}]-({@usn5:0.e0 =~01234567 =~01234567,`1esn`:.e1 =~usn2 =~`7esn`}) Unwind 01234567[9e0][.0] As #usn7 Detach Delete .e12 Contains `7esn` Contains 999"),
    octest:ct_string("Remove @usn5:#usn8:#usn7 Union Return Distinct *,usn1[0X7..] As `4esn` Limit [.12 Is Null,12 Ends With 0 Ends With Null,0x0 =~@usn5 =~01] Detach Delete $#usn7 Starts With $`1esn` Starts With 0.12,[`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12]] Ends With [0] Ends With `8esn`,$1000[..`6esn`][..123456789] Return Count(*)[..$_usn3][..$usn2] Skip .0[01234567] Limit (@usn5 :`2esn`:@usn5$#usn8)-[`6esn`?:`1esn`|@usn6 *0xabc..]->(:_usn4{_usn3:`1esn`[Null..]}) Starts With 12.0 Starts With Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null)"),
    octest:ct_string("Create (:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`})"),
    octest:ct_string("Detach Delete None(`6esn` In 0x0[9e0..] Where $123456789 In 010 In $`8esn`) Is Not Null Is Not Null Union All Unwind 1000 Ends With 01234567 Ends With usn1 As #usn7 With Distinct *,`6esn`[False..] As `6esn` Skip 12 Is Null Is Null Where 1000 Ends With 01234567 Ends With usn1"),
    octest:ct_string("Unwind {`8esn`:#usn8 =~#usn7 =~0x0} Starts With Single(`5esn` In 1e1 =~$`8esn` =~`1esn` Where `8esn` Starts With $12 Starts With $1000) Starts With All(`3esn` In False In $`2esn` In 1e1 Where 's_str'[$#usn8]) As @usn5 Union All With Distinct 0.0 =~0 =~`` As `7esn`,0.12[123456789..] Skip None(`3esn` In 999 Where 07 Ends With $_usn4 Ends With 0.e0) Is Null Is Null Limit 0.e0 In `2esn` Where 0e0 =~False =~.12 Match `8esn`=(((`1esn` {@usn6:`1esn`[$7][0Xa]})<-[`4esn`?]->(@usn6 :``:`6esn`{#usn7:9e1 Contains _usn3})<-[@usn5?:_usn4|_usn3 *..010{@usn6:$123456789[`1esn`..]}]-(`4esn` :``:`6esn`{#usn7:`2esn`[`3esn`..],usn2:$usn2 Starts With $`7esn` Starts With _usn4}))),`2esn`=((_usn4 :`6esn`:`3esn`)<-[usn1:#usn8|:`6esn` *0xabc..]->(`8esn` :`1esn`:@usn6)<-[:`5esn`|:`1esn`{#usn8:`7esn` Is Null,`4esn`:False[$12]}]->(_usn4 {`2esn`:1.e1 Is Not Null Is Not Null})) Where $`5esn` Is Not Null Remove Extract(#usn8 In 0x0[_usn4..] Where 0.e0 Is Not Null Is Not Null).`3esn`?,{`8esn`:$#usn7[`7esn`..][$`8esn`..]}.``"),
    octest:ct_string("Return $1000 =~$`8esn` =~$`2esn` As `5esn`,{`8esn`:.e12[..#usn7][..9e12]} Starts With None(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $1000[00..]) Starts With {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`},{`2esn`:`2esn`[``..]} =~[`6esn` In 0x0[9e0..] Where 0Xa[..1.e1]] =~None(`3esn` In @usn6[..\"d_str\"][..01] Where $@usn6 Is Null) As `6esn` Skip True Contains $`` Contains 01234567 Union Merge `4esn`=(usn1 :`2esn`:@usn5{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc})<-[#usn8:`3esn`|_usn4*..{``:9e0 Is Null Is Null}]->(:@usn5{#usn7:0x0 In 0X0123456789ABCDEF,`2esn`:0Xa[Count(*)][0xabc]}) With  *,{`4esn`:Count(*)[..$_usn3][..$usn2]}[[`2esn` In $``[$#usn8] Where 0e0['s_str']|0x0 =~`5esn` =~$`8esn`]] Order By Count(*)[010..1.e1]['s_str'.._usn4] Ascending,$`8esn` Ends With #usn8 Ascending,07[..1e1][..$0] Descending Limit 12 Is Null Is Null Where 12.0[9e1..][Null..] Union With  *,None(_usn4 In 12.e12 Is Null Is Null Where _usn4 In .0 In .12) Starts With {`4esn`:`8esn`[0x0..],usn2:$#usn8 =~7 =~.12} Starts With _usn3(Distinct usn1[$`1esn`..]) As #usn8,'s_str' Contains 999 Limit `2esn` Is Null Is Null Where $`8esn` Contains $`2esn` Contains False Match ((#usn7 :`3esn`)<-[`1esn`?:`3esn`|_usn4 *01234567..123456789]->(#usn7 {#usn7:999 Contains $`7esn` Contains usn2})),#usn8=(usn1 :`1esn`:@usn6)-[?:`4esn`{@usn5:$`2esn` Ends With 1e1,usn1:'s_str'[$`6esn`..][$0..]}]-({@usn5:0.e0 =~01234567 =~01234567,`1esn`:.e1 =~usn2 =~`7esn`})"),
    octest:ct_string("Create `2esn`=(`1esn` {`6esn`:07}),(#usn8 :#usn8:#usn7)-[`2esn`?:_usn4|_usn3]-(:_usn3:@usn5{`7esn`:1000[`1esn`..$12][$usn1..Null],`2esn`:9e1 Contains 07}) Match (#usn8 {`4esn`:$`3esn` Is Null})<-[usn2:_usn3|`6esn` *..0x0]-(#usn8 {`8esn`:$#usn7[$`3esn`..$999]})<-[`5esn`? *..0x0{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]-(`6esn` :@usn6) Remove #usn8:``:`6esn`"),
    octest:ct_string("Create `5esn`=((`4esn` :usn2)<-[:#usn7|`5esn`*{`8esn`:01[$0],``:0xabc Is Not Null Is Not Null}]-(_usn3 :`7esn`{#usn7:123.654 =~.e0 =~9e0,_usn3:`1esn`[Null..]})) Union Merge `7esn`=(_usn3 {`3esn`:$@usn5 Is Not Null Is Not Null}) On Create Set `1esn`:`2esn`:@usn5 Union All Detach Delete (:usn2{_usn3:``[0X7..][$@usn6..]})<-[:@usn6]->(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null})-[#usn8? *07{@usn5:0.e0 =~01234567 =~01234567,`1esn`:.e1 =~usn2 =~`7esn`}]->(`` :`5esn`{`5esn`:_usn3[0Xa..],usn1:1.e1 Ends With 0x0 Ends With 1e1}) Contains Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 0X0123456789ABCDEF[$_usn3][$_usn4]) Contains `7esn`($123456789[..`3esn`][..`7esn`]),.0[..False]"),
    octest:ct_string("Merge usn2=(:_usn3:@usn5{`6esn`:$`8esn` Ends With #usn8,`8esn`:123456789 Ends With 9e1 Ends With ``}) On Match Set `5esn`+=#usn7 Is Null On Match Set {#usn7:$123456789 Ends With 12e12,`1esn`:0e0 =~False =~.12}.`8esn`! =Extract(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $123456789[`1esn`..][`7esn`..]|usn2[.e1..][01234567..]) Is Null Is Null,`5esn` =$1000 In `7esn` In 12.0,_usn4+={_usn4:$@usn6 Ends With 0.0,`7esn`:$#usn7[123456789..][$`4esn`..]} =~Extract(`6esn` In 1000[12.e12][#usn7] Where 01234567[9e0][.0]|$@usn6 Is Null Is Null) Return *,12 Ends With 0 Ends With Null,Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null) =~[12 Is Null Is Null,9e0[$@usn6]] Skip _usn3 =~010 Union All Return Any(`6esn` In 0x0[9e0..] Where $`3esn` Is Not Null)[None(`6esn` In 1000[12.e12][#usn7] Where `4esn` In $`2esn` In @usn5)..[0x0 Contains .0]] As `7esn`,(usn1 )<-[{`5esn`:usn2[.e1..][01234567..],usn1:999 Is Not Null}]->({`7esn`:`4esn` In $`2esn` In @usn5}) Is Not Null Is Not Null As _usn4 Order By Null Contains $_usn3 Descending,`7esn`[`8esn`][#usn7] Desc,None(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1) Ends With All(usn1 In 0xabc Is Not Null Is Not Null Where $@usn6 Is Null) Ends With Any(`6esn` In 1000[12.e12][#usn7] Where 01 Starts With $`5esn` Starts With 01234567) Descending Limit 0X0123456789ABCDEF Is Not Null Delete 01 Starts With $`5esn` Starts With 01234567,`` In False In True,'s_str' =~$`4esn` =~@usn5 Return Distinct $@usn6[$#usn8..$999][Count(*)..usn1] As @usn6,\"d_str\" =~Count(*) =~$usn2,$@usn5[..$`8esn`][..`1esn`] Union Detach Delete {`7esn`:`6esn` In $``}[[123.654[.e12..\"d_str\"],1.e1[0..]]..][Any(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 999 Ends With 123456789 Ends With 12.0)..],{_usn4:\"d_str\" Ends With $`3esn`,``:#usn8 =~#usn7 =~0x0}[Single(usn1 In 0xabc Is Not Null Is Not Null Where `7esn`[..01])..{`2esn`:.0[@usn6..]}][[1000[12.e12][#usn7],`` Is Not Null Is Not Null]..None(#usn8 In 0x0[_usn4..] Where `8esn` Ends With $`1esn`)],@usn6(_usn4[.._usn4],00[$@usn5][0X7]) =~Extract(`3esn` In False In $`2esn` In 1e1 Where $`` Starts With 0x0|0.12 Is Null Is Null) =~Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null|True =~0 =~123456789)"),
    octest:ct_string("Merge `4esn`=(#usn7 :`3esn`{_usn3:.e0[$`1esn`..][_usn4..]})<-[`5esn`:_usn4|_usn3 *0X7..0x0]-(`8esn` :usn1:``{`7esn`:1.e1[0..],``:.e0 Contains 999})-[usn1:@usn6]-(@usn5 :`5esn`{@usn5:$`2esn` Ends With 1e1,usn1:'s_str'[$`6esn`..][$0..]}) With  *,(_usn3 {usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`4esn`:1.e1 Is Null Is Null})-[`1esn`?:`1esn`|@usn6 *12]->(`8esn` :@usn6)[({usn1:$usn1 Starts With Null Starts With $``,@usn5:0x0[01234567..Null][0Xa...e12]})<-[ *..0X0123456789ABCDEF]->(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]})..] As _usn3,[usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..]|$`6esn`[.e12]] Contains [`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 01 Is Null|$`4esn`[$@usn5..`7esn`]] Order By [0Xa[.e12..],'s_str' Contains 999,_usn4[.._usn4]][..Any(`6esn` In 0x0[9e0..] Where @usn5 In .e0 In \"d_str\")][..$usn2] Asc,$`6esn`[00] Asc,$@usn6 Ends With 010 Descending Skip None(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1)[None(#usn8 In 0x0[_usn4..] Where `5esn` Ends With $999)][@usn5($@usn6 Contains 0e0,9e12[\"d_str\"])] Where 1.e1 Is Null Is Null Remove (`4esn` {@usn6:_usn4[$`8esn`.._usn3][.0..$@usn6]})<-[{usn1:0.e0 =~01234567 =~01234567,``:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}]-(`6esn` :_usn3:@usn5)<-[{`5esn`:usn2[.e1..][01234567..],usn1:999 Is Not Null}]->({`7esn`:`4esn` In $`2esn` In @usn5})._usn3?,(_usn3 :@usn6{@usn5:0e0 =~False =~.12})<-[@usn6? *999{`5esn`:1e1[\"d_str\"..]}]-(`1esn` :`8esn`)-[`2esn`:#usn8|:`6esn`]->(@usn5 :`2esn`:@usn5{@usn6:123456789 =~#usn8 =~$0})._usn4,(:`2esn`:@usn5$usn1)<-[:`1esn`|@usn6*..]-(`3esn` :``:`6esn`{`5esn`:$999[9e0..010][999..010]}).`5esn`?"),
    octest:ct_string("Delete 0.12[_usn3],_usn3 Ends With $`6esn` Ends With 0e0,@usn6 Is Not Null Return Distinct [999 Contains $`7esn` Contains usn2,$999[9e0..010][999..010],1000 Is Not Null] Is Null As #usn7,True Ends With `6esn` Ends With 9e0 As _usn4 Order By `6esn`[`7esn`..$_usn3][9e0..#usn8] Desc Merge `2esn`=((:`4esn`:usn2{_usn3:Null Is Not Null Is Not Null,`4esn`:$1000 Is Not Null})) On Match Set `7esn`:`3esn`,({``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]})<-[:@usn6 *7{``:9e0 Is Null Is Null,`3esn`:.0[@usn6..]}]->(`8esn` :``:`6esn`).`5esn`! =None(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $@usn6 Is Null Is Null)[None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where .e0 Is Not Null)],`4esn`+=False In 1.e1 In $12 On Match Set `6esn`+=.e0[0X0123456789ABCDEF.._usn3][9e1..$`3esn`] Union Create @usn5=(`4esn` {@usn6:_usn4[$`8esn`.._usn3][.0..$@usn6]}) Optional Match `6esn`=(`7esn` {`8esn`:Count(*) Is Null Is Null,@usn5:.e0 Ends With $`1esn` Ends With 1000}),`7esn`=((:usn1:``{_usn3:123.654 Is Not Null Is Not Null})) Create ((@usn6 :usn1:``{usn1:#usn7 Is Not Null Is Not Null,`6esn`:$12[0.0..]})-[?:`8esn`|@usn6 *0xabc..{usn1:$#usn7[..$999][..9e1]}]-(:`6esn`:`3esn`{@usn6:#usn8 Is Not Null,usn2:1e1 Is Null})-[?{usn1:$#usn7[..$999][..9e1]}]-(_usn4 :`2esn`:@usn5)) Union All Unwind $_usn4 =~0X7 As @usn5 With Distinct All(`7esn` In $`8esn`[0.12][12]) Contains [usn1 In 123.654 =~.e0 =~9e0 Where Count(*) Contains 12e12 Contains 0xabc] Contains [`4esn` Ends With 's_str' Ends With @usn6] As #usn8,$7[..$``] As ``,(:`1esn`:@usn6)<-[{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(`3esn` :`4esn`:usn2) =~[12 Is Null Is Null,9e0[$@usn6]] Skip None(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where .e12 =~@usn5) Is Not Null Is Not Null Limit 0x0[$`2esn`..'s_str'][$@usn5..1.e1]"),
    octest:ct_string("Create usn2=((#usn7 {@usn5:$`5esn` Contains $usn2})<-[{@usn6:1000 Ends With 01234567 Ends With usn1,usn2:01234567 In \"d_str\"}]-(#usn8 {`4esn`:$`3esn` Is Null})<-[{`5esn`:usn2[.e1..][01234567..],usn1:999 Is Not Null}]->(`5esn` :`8esn`{``:00 In 1000})) Unwind Filter(`6esn` In 0x0[9e0..] Where $123456789 In 010 In $`8esn`) In ``(Distinct 0X0123456789ABCDEF In _usn3) In (_usn3 {usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`4esn`:1.e1 Is Null Is Null})-[`1esn`?:`1esn`|@usn6 *12]->(`8esn` :@usn6) As `1esn` Create _usn3=((`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null})),`5esn`=((`6esn` :_usn3:@usn5)) Union Detach Delete `1esn`[Null..],1000 Starts With 0e0 Starts With 0 Detach Delete usn2(Distinct $`3esn` Is Null) Is Null Is Null Union With  (@usn5 {`1esn`:0xabc[123.654][12]})-[:#usn8|:`6esn`{#usn8:0X7[..`5esn`][..$`7esn`]}]->(`2esn` :@usn6)-[`5esn`?:`7esn`]-({@usn6:'s_str' Ends With $7}) Ends With All(usn1 In 999 Where @usn6 Ends With 0.12 Ends With `3esn`) As #usn7,$#usn8[.e1][`2esn`] As @usn5 Skip 0X7[..`5esn`][..$`7esn`] Match ((:#usn8:#usn7{`8esn`:0Xa[Count(*)][0xabc]})<-[`2esn`?:`3esn`|_usn4]-(@usn5 :`5esn`))"),
    octest:ct_string("Optional Match (((:_usn4{_usn3:`1esn`[Null..]})<-[`8esn`? *..0X0123456789ABCDEF{`2esn`:$``[$_usn4][$`3esn`]}]-(:`6esn`:`3esn`{`5esn`:$7[$12],`6esn`:#usn8 Is Not Null})-[@usn6{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]}]-(`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]}))),(`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]}) Optional Match `4esn`=(`2esn` :@usn5{@usn6:.e0 =~7 =~False})<-[?:`1esn`|@usn6]->(#usn7 {`1esn`:$`4esn`[.e1..$usn1],``:0x0 =~`5esn` =~$`8esn`}) Where usn2 Contains 0 Return Distinct `3esn`(Distinct 0.e0 Is Not Null Is Not Null,$usn1[usn1..$`8esn`][12e12..$``])[[`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $@usn6 Is Null Is Null|999 Ends With $`4esn`]..][[0 Contains $@usn5]..] As `3esn`,`7esn` In `8esn` In 12,0Xa Ends With 07 Ends With `7esn` As _usn3 Skip 7 Contains 1000 Contains $usn1 Limit Extract(`7esn` In $`8esn`[0.12][12] Where 123456789[$_usn4..]|01234567[$`7esn`])[@usn5()..][Extract(`7esn` In $`8esn`[0.12][12] Where `5esn`[12.0]|\"d_str\"[.0][9e0])..] Union Return Distinct *,usn2 Order By $usn1 Starts With Null Starts With $`` Desc,$usn2 Starts With $`7esn` Starts With _usn4 Desc,`3esn` Starts With $999 Starts With .e1 Descending Skip (`3esn` :usn2{#usn7:usn2[`6esn`..][.0..],#usn7:\"d_str\"[..$_usn3]})<-[?{`3esn`:'s_str'[$`6esn`..][$0..]}]->(`2esn` :@usn6)<-[?{`8esn`:$`7esn`[usn2],`1esn`:1000 Is Not Null}]-(#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]}) Is Null Limit 0.e0 Ends With $123456789 Merge usn2=((`2esn` :#usn7{#usn8:$usn1[usn1..$`8esn`][12e12..$``],usn1:'s_str' Ends With $7})<-[ *0..]->(_usn3 :@usn6))"),
    octest:ct_string("With  None(usn1 In 0xabc Is Not Null Is Not Null Where .12[..07]) Contains [$#usn7[`7esn`..][$`8esn`..],$_usn4[$123456789..][12..],`6esn` In $``] Order By None(`7esn` In $`8esn`[0.12][12] Where 01 Is Null)[Single(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 999 Ends With 123456789 Ends With 12.0)..][None(usn1 In 0xabc Is Not Null Is Not Null Where 123456789[..0])..] Descending,`` Contains .e1 Contains 9e12 Asc,9e1 Contains 07 Desc Skip [`6esn` In .e0['s_str'..][$`8esn`..] Where `8esn`[0x0..]|01[$0]][Extract(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1|usn1 =~12 =~$0)][All(usn1 In 0xabc Is Not Null Is Not Null Where 0x0[$7..][`7esn`..])] Limit 01234567 Contains 0.12 Contains `5esn` Where $@usn6[..``] Remove Single(usn1 In 999 Where 0.12[123456789..]).@usn6?"),
    octest:ct_string("Unwind $`5esn`[0][.12] As `4esn` Union Return Distinct Null Is Null Is Null As #usn7,$123456789[..$usn2] As `4esn`,Filter(#usn8 In 07['s_str'][$@usn6] Where 9e0 Starts With 0e0 Starts With $`5esn`)[Filter(usn1 In 999 Where True[$usn1..12][``..\"d_str\"])] Order By Filter(usn1 In 123.654 =~.e0 =~9e0 Where 0.12 Contains 0x0 Contains @usn5) Ends With Filter(usn1 In 123.654 =~.e0 =~9e0 Where `5esn`[usn1]) Ascending"),
    octest:ct_string("Match `8esn`=((#usn8 :usn2{``:999})-[#usn8?:``{`7esn`:$`5esn` Starts With $`3esn` Starts With 1.e1}]-(#usn8 {`6esn`:$1000 =~$`8esn` =~$`2esn`})) With  *,_usn3[..usn2] As #usn7 Order By 0.0[.12..`8esn`] Descending Union Remove None(`3esn` In 999 Where 0.e0 Ends With #usn8).`8esn`!,`4esn`(`` In False In True,$_usn3 Is Not Null).usn2?,Single(`6esn` In .e0['s_str'..][$`8esn`..] Where Null In 0xabc).`8esn`? Merge #usn8=(@usn6 {@usn6:$`7esn` Ends With $_usn4 Ends With `5esn`,usn1:123.654[0Xa..0x0][.12..12e12]})<-[:@usn6]->(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null}) On Match Set [`3esn` In 999 Where .e12 =~\"d_str\" =~@usn5].usn2 =0.0[0] On Match Set `3esn`+=Extract(_usn4 In 12.e12 Is Null Is Null Where 010 =~0e0 =~9e1|0Xa =~0Xa =~`3esn`)[Any(`3esn` In 999 Where $#usn7[..$999][..9e1])..None(usn1 In 0xabc Is Not Null Is Not Null Where 123456789[..0])][[`6esn` In 0x0[9e0..]|0x0 =~@usn5 =~01]..(usn2 :_usn3:@usn5)<-[`5esn`?:`7esn`]-(`8esn` {`3esn`:Null Is Null Is Null})-[`6esn` *00]->(`2esn` :`5esn`{`1esn`:$@usn6 Ends With 0.0})],`7esn` =$usn2[$`4esn`..$`2esn`],All(#usn8 In 0x0[_usn4..] Where `8esn`[0x0..]).`1esn`! =[0X0123456789ABCDEF[$_usn3][$_usn4]][None(`5esn` In 1e1 =~$`8esn` =~`1esn` Where .12[9e1..0X7])][(`5esn` {_usn3:1.e1 Is Null Is Null})<-[_usn3?:#usn7|`5esn` *..0x0]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})<-[?:@usn5|:@usn6]-(`7esn` {@usn6:.e0[123456789..][$`2esn`..],``:$0[`5esn`][9e12]})] Merge `7esn`=((@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})-[@usn5:#usn8|:`6esn`]->(:`7esn`$12)) On Match Set `1esn`+=Extract(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0|0[_usn3][.12]) Starts With (#usn8 :`8esn`)<-[`2esn`?:`3esn`|_usn4]-(#usn7 :`7esn`{`3esn`:$#usn8[..123456789][..`2esn`],#usn8:0.e0 Ends With #usn8})-[:`5esn`|:`1esn`]-(@usn5 :`5esn`),None(`3esn` In False In $`2esn` In 1e1 Where 01 Starts With $`5esn` Starts With 01234567)._usn3? =[`6esn` In 1000[12.e12][#usn7] Where 0X0123456789ABCDEF Is Not Null] Is Null Union All Match #usn8=((`7esn` )<-[`5esn`? *..0x0{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]-(`6esn` :@usn6)),(((_usn3 :@usn6{@usn5:0e0 =~False =~.12})<-[``?:usn1|#usn7]-(:usn2{usn1:12 Is Null Is Null})<-[:`5esn`|:`1esn`{#usn8:`7esn` Is Null,`4esn`:False[$12]}]->(_usn3 :@usn5{`5esn`:12e12[..9e12][..$@usn6]}))) Return [`4esn` In 0.12['s_str'..$0][$usn1..9e0]|`7esn`[..01]] Is Not Null Is Not Null As @usn6,None(usn1 In 0xabc Is Not Null Is Not Null Where 123456789 =~@usn5 =~$`5esn`) =~[`4esn` Ends With 's_str' Ends With @usn6] Skip Any(#usn8 In 07['s_str'][$@usn6] Where $`7esn`[usn2]) In [`6esn` In 0x0[9e0..] Where `5esn`[usn1]] In {_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]} Merge `2esn`=(usn2 :@usn6{@usn5:#usn8[True..#usn7][01..@usn5]}) On Create Set Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $999[01234567][@usn5]).usn1! ={`2esn`:`2esn`[``..]} =~[`6esn` In 0x0[9e0..] Where 0Xa[..1.e1]] =~None(`3esn` In @usn6[..\"d_str\"][..01] Where $@usn6 Is Null)"),
    octest:ct_string("With  *,0.12[123456789..] As usn2 Limit {usn1:False[$12],`1esn`:0.e0 Ends With $123456789} Contains `2esn`(Distinct 01234567[`6esn`..],Count(*) Ends With $#usn8 Ends With 0Xa) With Distinct *,Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0) Is Not Null,$`5esn`[#usn7..`7esn`] As `8esn` Skip $1000[..`6esn`][..123456789] Limit $1000[..`6esn`][..123456789]"),
    octest:ct_string("Unwind \"d_str\"[1.e1][01234567] As `3esn` Return Distinct Single(`5esn` In $usn2 Contains $`1esn` Where True Contains .e1 Contains `2esn`) In None(`3esn` In False In $`2esn` In 1e1 Where #usn7[.12][usn2]),`` In usn1 In 01234567,$`3esn` Ends With 123456789 Ends With 0.e0 As `7esn` Order By [@usn5 Is Null,\"d_str\" Ends With $1000 Ends With usn2,$usn1 Is Not Null Is Not Null][..`7esn`(Distinct $`2esn`[.._usn3],9e0 Is Null Is Null)][..[.e0['s_str'..][$`8esn`..]]] Descending,9e1 =~$0 Asc Skip $`` Is Null Is Null Limit @usn6 Is Not Null Unwind 12 Starts With usn2 As #usn7 Union Unwind 00[$@usn5][0X7] As `4esn` Return Distinct 01[#usn8..1000] As `5esn`,\"d_str\"[0X7..``][@usn5.._usn4] As _usn3,Extract(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1|$`2esn` Is Not Null Is Not Null) =~[`7esn`[..01],1e1 =~$`8esn` =~`1esn`,$`6esn`[.e12..$`6esn`][$#usn7...0]] Order By Null Contains $_usn3 Descending,`7esn`[`8esn`][#usn7] Desc,None(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1) Ends With All(usn1 In 0xabc Is Not Null Is Not Null Where $@usn6 Is Null) Ends With Any(`6esn` In 1000[12.e12][#usn7] Where 01 Starts With $`5esn` Starts With 01234567) Descending Optional Match `1esn`=(({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})),``=((`4esn` {``:0.12 Contains 0x0 Contains @usn5})) Union All Return Distinct $7 Contains `2esn` Contains .0,Any(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0X0123456789ABCDEF In _usn3) Starts With Extract(`7esn` In $`8esn`[0.12][12] Where .e1[0X7..`2esn`]|0.e0[.e12]) Starts With Extract(`3esn` In @usn6[..\"d_str\"][..01] Where 1.e1[$`7esn`]|01234567[9e0][.0]),(_usn3 {_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null})-[`5esn`?:_usn4|_usn3{@usn5:7 =~False,_usn3:999 Ends With $`4esn`}]->(:`1esn`:@usn6{`8esn`:$`8esn` Contains $`2esn` Contains False})[..12.e12][..Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where usn2[.e1..][01234567..])] Order By Single(#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]) Contains Single(`5esn` In $usn2 Contains $`1esn` Where `2esn` Contains `3esn` Contains $@usn5) Contains {_usn3:0xabc Contains 0,`6esn`:$`6esn`[.e12..$`6esn`][$#usn7...0]} Ascending Limit 00[\"d_str\"][False] Remove Filter(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $@usn6 Is Null).`2esn`!,0xabc.`2esn`,(#usn7 {@usn5:$`5esn` Contains $usn2})<-[?:usn2|:``{_usn3:.e1 Ends With $123456789}]-(`4esn` {#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})<-[`3esn`{@usn6:123.654[.e12..\"d_str\"]}]-(usn1 :`2esn`:@usn5{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc}).`` Detach Delete $1000[$usn1][.e1],0e0 Is Null,12 Starts With usn2"),
    octest:ct_string("Match (((_usn3 :@usn6{@usn5:0e0 =~False =~.12})<-[``?:usn1|#usn7]-(:usn2{usn1:12 Is Null Is Null})<-[:`5esn`|:`1esn`{#usn8:`7esn` Is Null,`4esn`:False[$12]}]->(_usn3 :@usn5{`5esn`:12e12[..9e12][..$@usn6]}))) With Distinct *,[#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]][Filter(`2esn` In $``[$#usn8] Where 01234567[`6esn`..])..][[`3esn` In False In $`2esn` In 1e1 Where .12 =~$#usn7 =~$``|01234567 Is Null]..] As usn1 With  (_usn3 :#usn8:#usn7)<-[{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(`3esn` :`4esn`:usn2)[[`3esn` In 999 Where _usn4[1000..``]|Null[9e1][$`6esn`]]..({_usn4:$1000[$usn1][.e1]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`1esn` {`6esn`:07})<-[`5esn`?]-(@usn5 {`5esn`:0e0[...e1]})] As #usn7,[0Xa[..1.e1],#usn7[.12][usn2],1000 Starts With 0e0 Starts With 0][`7esn`(Distinct $#usn8[@usn5..$1000])] As #usn7,$`4esn` =~07 Order By @usn6(Distinct 0xabc Contains 0)[{_usn4:$`2esn` Ends With 1e1}..][All(_usn4 In 12.e12 Is Null Is Null Where 0e0 =~False =~.12)..] Descending,\"d_str\"[7..$999] Ascending,usn1 =~12 =~$0 Asc Skip .12[usn1] Where `` In 123.654 In 0.0 Union All Optional Match (:@usn5{_usn4:$`5esn`[0][.12]})<-[@usn5?{usn1:7 Ends With `3esn` Ends With $`2esn`}]-(_usn4 ),(_usn3 {`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`}) Where 0Xa Contains $`6esn` Merge (((`6esn` {`7esn`:12e12 Ends With 0e0,`8esn`:$_usn4[False..@usn6][`4esn`..$1000]})-[:#usn7|`5esn`]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null})<-[`3esn`:usn2|:``]-(_usn3 {`3esn`:'s_str'[$`6esn`..][$0..]}))) On Match Set Any(_usn4 In 12.e12 Is Null Is Null Where 0x0[$`2esn`..'s_str'][$@usn5..1.e1]).`1esn`! =`` In False In True,_usn3(0[1e1..00]).``! =`7esn` Contains .0 Contains #usn8"),
    octest:ct_string("Merge ((`1esn` :usn2{`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]})-[`8esn`{``:0[1.e1..#usn7],_usn4:.e12 Contains `7esn` Contains 999}]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5})<-[usn2:`6esn` *00{`5esn`:.e12[$_usn4..0],`4esn`:$#usn8 In True In #usn7}]->(:``:`6esn`{`5esn`:_usn3 =~$12}))"),
    octest:ct_string("Match (((:`7esn`{_usn3:01[$0]})<-[`2esn`?:`3esn`|_usn4]-(@usn5 :`5esn`)-[`7esn`? *0Xa{`3esn`:Count(*)[_usn3..]}]->(#usn7 :`3esn`{_usn3:.e0[$`1esn`..][_usn4..]}))) Where ``[0X7..][$@usn6..] Optional Match `7esn`=((`6esn` {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})),(@usn5 :@usn6{`5esn`:#usn8 Is Not Null,`1esn`:01234567[`6esn`..]}) Detach Delete `2esn` In usn1 Union All Return Null Contains $_usn3 As `4esn` Union All Merge (`6esn` {`4esn`:$12 Is Null Is Null,`7esn`:$`5esn` Is Null Is Null})-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-(:@usn5{#usn8:usn1 Is Null,`8esn`:7 In 1e1})-[_usn3:`3esn`|_usn4]->(@usn6 {`2esn`:123.654 Is Not Null Is Not Null}) On Match Set usn1:_usn3:@usn5,@usn5:@usn6,`6esn`+=0.e0 Contains 9e1 Contains 9e0 On Create Set _usn4 =00[0X7..9e12],usn2 =1e1 Contains @usn5 Contains 12.e12,(:@usn5{``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]})-[`6esn` *00]->(:`2esn`:@usn5{#usn8:12.0[`3esn`][_usn3]})-[:@usn5|:@usn6 *01234567..123456789]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null}).@usn5! =$@usn5[..`4esn`] With Distinct *,$123456789[..`3esn`][..`7esn`] As #usn7,[9e12 In 123.654 In True,`6esn` In $``][..All(`7esn` In $`8esn`[0.12][12] Where @usn5[..$999][..$0])][..Filter(`6esn` In .e0['s_str'..][$`8esn`..] Where \"d_str\" Ends With $1000 Ends With usn2)] Order By 12.0 In 07 Ascending Limit {#usn8:.e0 Ends With $`1esn` Ends With 1000}[Filter(#usn8 In 07['s_str'][$@usn6] Where $12[0.0..])][Filter(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..])] Where `8esn` Starts With $12 Starts With $1000 Delete [0.e0 Contains $123456789 Contains 123456789,`5esn` In 12.e12 In 1000] Starts With [123.654[.e12..\"d_str\"],1.e1[0..]] Starts With Extract(`2esn` In $``[$#usn8] Where $`5esn` Is Not Null|123456789[..#usn8]),999 In $_usn3,Any(#usn8 In 0x0[_usn4..] Where $`` Starts With 0x0) In [usn1 In 123.654 =~.e0 =~9e0 Where $7 Ends With 12.e12 Ends With `1esn`]"),
    octest:ct_string("Return Distinct {`7esn`:12.e12[.12..$_usn3][0e0..9e0],`7esn`:0X7[..True][..01234567]}[({`1esn`:$`` Starts With 0x0,#usn7:False[...e0][..$#usn8]})<-[`7esn`?]-(`` :usn2)-[`5esn`? *999{@usn6:$#usn8[0e0..][07..]}]-(`8esn` )..][Single(#usn8 In 07['s_str'][$@usn6] Where $#usn8 =~7 =~.12)..],@usn5(0X0123456789ABCDEF Is Null,0X7[0xabc][$1000])[None(`3esn` In False In $`2esn` In 1e1 Where `` Contains 010 Contains $1000)] Order By `5esn` Ends With $999 Descending Create (((`3esn` :usn1:``)<-[``{#usn7:$`2esn` =~False,``:12e12[..9e12][..$@usn6]}]-(`2esn` :`1esn`:@usn6{#usn8:.12 Is Not Null})-[@usn6{_usn4:$`` Starts With 0x0}]->(`1esn` {#usn7:$`7esn`[`2esn`]}))) Remove #usn8(.e0[123456789..][$`2esn`..],.12[0X0123456789ABCDEF..]).``!,Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 9e1 Contains _usn3).usn1? Union Delete 9e0[123456789..$`3esn`] With Distinct Extract(`6esn` In 1000[12.e12][#usn7] Where .e12 =~@usn5|$@usn6 Ends With 0.0) Is Null,#usn8[1e1..] As `6esn` Order By #usn8(Distinct 0x0[$7],#usn8[1e1..])[[1.e1[#usn7][1.e1]]..{usn1:`2esn` Is Null Is Null}][_usn3(Distinct usn1[$`1esn`..])..Extract(`3esn` In False In $`2esn` In 1e1 Where 1000 Ends With $`5esn`)] Descending Skip (_usn4 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8) Is Not Null Is Not Null"),
    octest:ct_string("Match #usn8=((:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]})-[?:`` *999{`7esn`:Count(*)[..`5esn`],`2esn`:.e12[..$_usn4][..#usn7]}]-({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]})<-[usn1]->(:`3esn`{`7esn`:12.e12[.12..$_usn3][0e0..9e0],`7esn`:0X7[..True][..01234567]})),#usn8=(`1esn` {`6esn`:07}) Where #usn7[999..$999] Detach Delete _usn3[_usn4..$`2esn`][$123456789..9e12],{`6esn`:`` In 123.654 In 0.0} Is Not Null Is Not Null Unwind $@usn5 =~$usn2 =~True As _usn3 Union Return Distinct 0Xa[$`4esn`] As `1esn`,Any(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where @usn6 Ends With 0.12 Ends With `3esn`) Contains [`5esn` In $usn2 Contains $`1esn` Where Count(*)[$1000..01]|9e1[..01234567][..`4esn`]] Contains (`3esn` {#usn8:#usn7 =~$`8esn`})-[usn2?:#usn8|:`6esn` *7]->(`6esn` :`5esn`{`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})-[?:`2esn`|:`7esn` *0..{`4esn`:010 In $@usn5 In `5esn`,#usn7:$`7esn` Is Null Is Null}]->(:`6esn`:`3esn`{`3esn`:123.654[0Xa..0x0][.12..12e12]}),123.654[.e12..\"d_str\"] As _usn4 Skip (usn2 {usn2:`7esn` Contains .0 Contains #usn8})-[usn1{`1esn`:`7esn` Contains .0 Contains #usn8}]->(@usn6 :`5esn`{@usn5:.12[9e1..0X7]})[..(`4esn` :_usn3:@usn5)<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(_usn3 :@usn5{`2esn`:1.e1[#usn7][1.e1]})][..All(`6esn` In 1000[12.e12][#usn7] Where `1esn`[$7][0Xa])] Merge _usn3=(usn2 :#usn8:#usn7{@usn5:`8esn` Ends With $`1esn`,#usn8:\"d_str\" Ends With $1000 Ends With usn2})"),
    octest:ct_string("Delete usn1[..Count(*)][..`8esn`] Union Remove ``:usn1:``,{`5esn`:.12 =~#usn7 =~01,usn2:usn1 Ends With .0 Ends With `4esn`}._usn3!,{@usn6:_usn3[0Xa..]}.`8esn`? Merge ((`7esn` {#usn7:1e1[`3esn`]})-[@usn6?:`` *0Xa]-(@usn6 :@usn5{`8esn`:$@usn6 Contains 0e0})<-[:_usn4|_usn3]-(#usn8 :`8esn`{_usn4:usn2 In 1e1 In `4esn`})) On Create Set _usn4+=01234567 Contains 0.12 Contains `5esn`,_usn3 =$`3esn` Is Null On Match Set Extract(`3esn` In @usn6[..\"d_str\"][..01] Where _usn3[..`8esn`]|01234567 Is Null Is Null).@usn6? =#usn7 Ends With 0.12,@usn5 =$`2esn` =~False"),
    octest:ct_string("With  $12[#usn8..$@usn5][9e0..usn1],$`3esn` Ends With $7 Ends With `7esn`,@usn5 Ends With 1000 Order By 010[`1esn`..`4esn`] Ascending Skip 01[..0X7] Limit [`6esn` In .e0['s_str'..][$`8esn`..] Where `8esn`[0x0..]|01[$0]][Extract(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1|usn1 =~12 =~$0)][All(usn1 In 0xabc Is Not Null Is Not Null Where 0x0[$7..][`7esn`..])] Delete Extract(usn1 In 0xabc Is Not Null Is Not Null)[{#usn8:`6esn`[`7esn`..$_usn3][9e0..#usn8],`3esn`:\"d_str\" =~_usn3 =~0.0}..Filter(#usn8 In 0x0[_usn4..] Where #usn8[..0X0123456789ABCDEF][...0])][Single(`6esn` In 0x0[9e0..] Where $`3esn` Is Not Null)..None(#usn8 In 0x0[_usn4..] Where 0.e0 Is Not Null Is Not Null)],07 =~$12 =~$@usn6 Union Merge ((`4esn` {#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})-[:`5esn`|:`1esn`]-(@usn5 :`5esn`)) Return Distinct (`2esn` :#usn7{`1esn`:`4esn` Ends With 's_str' Ends With @usn6,`6esn`:$7 Ends With 12.e12 Ends With `1esn`})-[`3esn`? *0X7..0x0{`4esn`:$_usn4[$123456789..][12..]}]->(`7esn` {@usn6:0 =~#usn8})[{@usn5:'s_str' Contains 999,`6esn`:1000[12.e12][#usn7]}],010 Starts With \"d_str\" As `4esn` Order By 00 =~999 =~07 Desc,`5esn`[0e0..] Desc,[#usn7[@usn6..]] In All(#usn8 In 0x0[_usn4..] Where 0xabc[123.654][12]) In All(usn1 In 999 Where `5esn` Ends With $999) Desc Skip 1e1 Contains 0Xa Limit $999 Contains 12e12 Detach Delete 0.0[.12..`8esn`],$7 Is Null,`4esn` Ends With $12 Ends With 0.e0"),
    octest:ct_string("Unwind [`6esn` In 1000[12.e12][#usn7] Where $`2esn` Starts With 9e12][None(#usn8 In 0x0[_usn4..] Where Count(*) Is Null Is Null)][{usn1:$@usn6 Contains 0e0,@usn6:$`6esn`[$`6esn`..][0X7..]}] As #usn8 Remove Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $`` Starts With 0x0).`2esn`,[$usn1[#usn8..`8esn`][7..`4esn`],`5esn` Ends With 0x0].`5esn` Union Merge ((`5esn` :@usn6{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`})-[`1esn`:@usn6 *01234567..123456789{`7esn`:0x0[01234567..Null][0Xa...e12]}]->(:`8esn`{``:.e1 =~usn2 =~`7esn`,#usn7:`4esn` In .12 In $#usn8})-[#usn8?:#usn8|:`6esn`*{`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`}]->(:``:`6esn`{@usn6:$`4esn`[$@usn5..`7esn`],`5esn`:_usn4 Starts With `6esn` Starts With $`8esn`})) On Match Set `4esn`+=.e1 In `` In 7,_usn3+=$`8esn` Contains .0 Contains 0.12 On Match Set All(#usn8 In 07['s_str'][$@usn6]).#usn7! =$999[0xabc..],#usn8+=7[usn1][$7] Return *,01[$0] As `5esn` Match `5esn`=((`1esn` {`7esn`:$7[`7esn`][123.654],@usn6:`1esn`[usn1]})-[:#usn7|`5esn`]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null})),usn2=(:#usn8:#usn7{`6esn`:`5esn`[12.0]}) Where 0.e0 Contains $1000 Contains 7"),
    octest:ct_string("Optional Match #usn8=(`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]})-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->($@usn6)<-[`8esn`?:usn1|#usn7 *01..7{usn1:123456789[$_usn4..]}]-(@usn5 :`2esn`:@usn5$#usn8),_usn4=(`2esn` :`5esn`{`1esn`:$@usn6 Ends With 0.0})<-[`2esn`?*{`3esn`:$@usn5 Is Not Null Is Not Null}]-(:`7esn`{``:9e1[$#usn8],`4esn`:1.e1 Is Null Is Null}) Where 0.0 =~0 =~`` Union All Optional Match #usn8=((`7esn` )<-[`5esn`? *..0x0{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]-(`6esn` :@usn6)),(((_usn3 :@usn6{@usn5:0e0 =~False =~.12})<-[``?:usn1|#usn7]-(:usn2{usn1:12 Is Null Is Null})<-[:`5esn`|:`1esn`{#usn8:`7esn` Is Null,`4esn`:False[$12]}]->(_usn3 :@usn5{`5esn`:12e12[..9e12][..$@usn6]}))) With Distinct *,0 =~#usn8 As `2esn`,$#usn8 Is Null Is Null As usn2 Order By Count(*) Ends With 7 Ends With 0 Ascending,$`3esn` Ends With $7 Ends With `7esn` Ascending Limit Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null|12.0 Contains 12.e12 Contains 0x0) Starts With Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1e1 Contains 0Xa) Return Distinct @usn6[$0..Null],(_usn3 :#usn8:#usn7)<-[{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(`3esn` :`4esn`:usn2)[[`3esn` In 999 Where _usn4[1000..``]|Null[9e1][$`6esn`]]..({_usn4:$1000[$usn1][.e1]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`1esn` {`6esn`:07})<-[`5esn`?]-(@usn5 {`5esn`:0e0[...e1]})] As _usn3,0x0[$7..][`7esn`..] As `4esn` Order By Any(`3esn` In 999 Where .12[0X0123456789ABCDEF..]) =~(:`7esn`{@usn6:`2esn`[``..]})<-[?{``:Null Is Not Null Is Not Null}]-(:_usn4{@usn6:$123456789[`1esn`..]}) =~[12e12 Ends With `6esn`] Descending,12.0 Contains 12.e12 Contains 0x0 Descending Limit `3esn`(Distinct 0.e0 Is Not Null Is Not Null,$usn1[usn1..$`8esn`][12e12..$``])[[`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $@usn6 Is Null Is Null|999 Ends With $`4esn`]..][[0 Contains $@usn5]..]"),
    octest:ct_string("Remove All(`6esn` In 0x0[9e0..] Where 0xabc Is Not Null Is Not Null)._usn4!,(_usn3 {_usn3:$#usn8 In True In #usn7,usn2:$@usn5[$_usn3..Null]})-[?:`6esn`]->(`1esn` :@usn5{`7esn`:usn2 In 1e1 In `4esn`,``:123456789 Ends With 9e1 Ends With ``}).`6esn` Remove (:#usn8:#usn7{`6esn`:`5esn`[12.0]})-[usn2?:#usn7|`5esn` *..0x0{#usn8:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}]-(:@usn5{usn2:$999 Is Not Null})<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]-({``:0.12 Contains 0x0 Contains @usn5}).usn1,Extract(`3esn` In 999 Where 0 Contains $@usn5|$usn1[usn1..$`8esn`][12e12..$``]).#usn7,(:`6esn`:`3esn`{`5esn`:$7[$12],`6esn`:#usn8 Is Not Null})-[`6esn`?:`1esn`|@usn6 *0xabc..]-(`2esn` :@usn5{@usn6:.e0 =~7 =~False}).#usn8 Union Create #usn7=((usn1 {@usn5:12e12 Ends With `6esn`,_usn4:\"d_str\" Starts With _usn4 Starts With $_usn4})-[`1esn`?]->(:#usn7{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})),_usn4=((#usn8 :_usn4{`6esn`:9e1[..01234567][..`4esn`]})) With Distinct *,.e12 Contains $usn2 Contains $@usn6,12.e12 =~00 =~010 As usn2 Order By usn2 Desc Where $123456789[`4esn`..] Union Remove [`6esn` In 1000[12.e12][#usn7] Where `7esn` Contains .0 Contains #usn8|`5esn`[usn1]].`3esn`?,None(#usn8 In 07['s_str'][$@usn6] Where $@usn6 Ends With 0.0).`7esn`! Merge usn1=(((:#usn7{`1esn`:$123456789 Starts With `6esn` Starts With 123.654})-[:`1esn`|@usn6 *999{`6esn`:$123456789[..$`7esn`][..\"d_str\"]}]->(:usn2)-[`1esn`?:`3esn`|_usn4*..]->(usn1 ))) On Match Set #usn7 =[.12 Is Null,12 Ends With 0 Ends With Null,0x0 =~@usn5 =~01],{_usn3:1.e1 Is Null Is Null}.`7esn` =`8esn`(Distinct $123456789[`3esn`..`5esn`][1e1..$`5esn`],usn1[9e1..])[..(`6esn` :#usn7)<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8)<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]-(@usn6 :``:`6esn`)] On Match Set usn1 =Extract(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0|0[_usn3][.12]) Starts With (#usn8 :`8esn`)<-[`2esn`?:`3esn`|_usn4]-(#usn7 :`7esn`{`3esn`:$#usn8[..123456789][..`2esn`],#usn8:0.e0 Ends With #usn8})-[:`5esn`|:`1esn`]-(@usn5 :`5esn`) With  *,$`4esn` In 0.0 In `3esn` As _usn4 Order By @usn6 Starts With .e0 Starts With .e12 Desc,usn2 Descending,1.e1[0..] Ascending Where _usn3[0Xa..]"),
    octest:ct_string("Remove `4esn`(123.654[$`1esn`],$123456789 In 010 In $`8esn`).`7esn`! Union All Unwind _usn4[7..$999] As `1esn` Detach Delete usn1[..`7esn`][..$`8esn`],0x0[9e0..],True[$usn1..12][``..\"d_str\"] Create _usn3=((`7esn` )<-[`5esn`? *..0x0{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]-(`6esn` :@usn6)),`2esn`=(({`7esn`:Count(*)[..`5esn`],`2esn`:.e12[..$_usn4][..#usn7]})-[_usn4?{`3esn`:1e1[`3esn`]}]-({`2esn`:``[0X7..][$@usn6..],@usn6:usn1[..`7esn`][..$`8esn`]})-[?:`2esn`|:`7esn` *0..{`4esn`:010 In $@usn5 In `5esn`,#usn7:$`7esn` Is Null Is Null}]->(`2esn` {_usn3:0[1e1..00]})) Union Optional Match ``=(:`3esn`{`1esn`:Count(*) Ends With $#usn8 Ends With 0Xa})-[@usn5:@usn6]-(:`4esn`:usn2{_usn4:`1esn`[$7][0Xa]}),(`2esn` :`8esn`)<-[?:`1esn`|@usn6]->(`6esn` :`2esn`:@usn5)"),
    octest:ct_string("Match ((:@usn5{``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]})<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(`4esn` :`5esn`)<-[?:@usn5|:@usn6]-({`1esn`:$`7esn` Ends With $_usn4 Ends With `5esn`})) Where \"d_str\" =~_usn3 =~0.0 Return Distinct 0.e0 Ends With $123456789 As `8esn` Order By [#usn8 In 0x0[_usn4..] Where $_usn3 Is Not Null] Is Not Null Is Not Null Ascending,True Contains .e1 Contains `2esn` Ascending,[0Xa[..1.e1],#usn7[.12][usn2],1000 Starts With 0e0 Starts With 0][`7esn`(Distinct $#usn8[@usn5..$1000])] Desc Skip 0Xa Is Null Is Null"),
    octest:ct_string("Unwind $123456789[`1esn`..] As #usn7 Match usn2=((@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})),@usn6=((_usn4 :`3esn`{`2esn`:999})-[`5esn`?:@usn5|:@usn6 *7{`2esn`:$`8esn`[0.12][12],`6esn`:`` Contains $_usn3 Contains 0e0}]-(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]})) Unwind None(usn1 In 0xabc Is Not Null Is Not Null Where .12[..07]) Contains [$#usn7[`7esn`..][$`8esn`..],$_usn4[$123456789..][12..],`6esn` In $``] As _usn3 Union All Remove Filter(`3esn` In False In $`2esn` In 1e1 Where $`4esn` =~07).`5esn`!,[`6esn` In 0x0[9e0..] Where $123456789 In 010 In $`8esn`|$7[$12]].@usn5?,Single(`6esn` In .e0['s_str'..][$`8esn`..] Where $@usn5 =~$usn2 =~True).`6esn`? Return Distinct 12[$`3esn`..] As _usn4 Order By 0xabc =~01 Descending,#usn7(usn2 =~`6esn`) Is Null Is Null Desc,0Xa Contains $#usn8 Contains `5esn` Asc Limit ``[@usn6][9e0] Detach Delete `1esn`[Null..],1000 Starts With 0e0 Starts With 0 Union With Distinct 1000 Starts With 0e0 Starts With 0,Any(`2esn` In $``[$#usn8] Where $`4esn`[$1000..$`4esn`][0x0..$_usn3])[Filter(`6esn` In 0x0[9e0..])],0 Is Null Is Null As #usn7 Order By [9e12 In 123.654 In True,`6esn` In $``][..All(`7esn` In $`8esn`[0.12][12] Where @usn5[..$999][..$0])][..Filter(`6esn` In .e0['s_str'..][$`8esn`..] Where \"d_str\" Ends With $1000 Ends With usn2)] Asc Skip [_usn4 In 12.e12 Is Null Is Null Where 0e0 =~False =~.12|Count(*) Contains 12e12 Contains 0xabc] Ends With {#usn7:_usn3[0Xa..]} Ends With _usn4(Distinct .e0 Contains 999) Where $`4esn`[$1000..$`4esn`][0x0..$_usn3]"),
    octest:ct_string("With Distinct *,``($#usn7[$`3esn`..$999]) Starts With {``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]} As `1esn` Skip .12 Is Null Limit 0X7 Contains $@usn6 Where `7esn` =~12.e12 =~0e0 Delete `8esn`[.e1..] Merge @usn6=(((usn1 :_usn4)-[`2esn`? *7]->(`` :``:`6esn`{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]})-[`2esn`?:`3esn`|_usn4]->({`1esn`:1e1 Starts With 010}))) On Match Set @usn6 =(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[#usn7:`1esn`|@usn6 *0..]-(@usn6 :usn2) In (`5esn` {_usn3:1.e1 Is Null Is Null})<-[_usn3?:#usn7|`5esn` *..0x0]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})<-[?:@usn5|:@usn6]-(`7esn` {@usn6:.e0[123456789..][$`2esn`..],``:$0[`5esn`][9e12]})"),
    octest:ct_string("Unwind {_usn3:`` Contains 010 Contains $1000}[Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0.0[`7esn`][`6esn`]|9e1[..01234567][..`4esn`])..`7esn`($123456789[..`3esn`][..`7esn`])][None(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where Count(*) Contains 12e12 Contains 0xabc)..Single(usn1 In 0xabc Is Not Null Is Not Null Where usn1[$`1esn`..])] As `` Union Return *,.e12 =~\"d_str\" =~@usn5 Order By `4esn` In .12 In $#usn8 Ascending,010 Starts With 0X7 Ascending Skip (#usn8 :#usn8:#usn7)<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(`4esn` :`5esn`) Contains {_usn3:12.0 In 07,`2esn`:01234567[..`6esn`][..``]} Limit 0.0 =~$#usn7 =~`1esn` Union All Merge _usn3=(:`8esn`)-[?{`2esn`:`4esn` Starts With $#usn8 Starts With $#usn8}]->(:`1esn`:@usn6{`8esn`:$`8esn` Contains $`2esn` Contains False})-[`6esn` *00]->(:`2esn`:@usn5{#usn8:12.0[`3esn`][_usn3]}) On Match Set None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where False In $`2esn` In 1e1).usn1? =Count(*)[$1000..01],Extract(`3esn` In False In $`2esn` In 1e1 Where $`` Starts With 0x0|0.12 Is Null Is Null).@usn5! =07 Ends With $_usn4 Ends With 0.e0 On Create Set #usn8+=`7esn` Is Null Optional Match `4esn`=(usn1 :`2esn`:@usn5{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc})<-[#usn8:`3esn`|_usn4*..{``:9e0 Is Null Is Null}]->(:@usn5{#usn7:0x0 In 0X0123456789ABCDEF,`2esn`:0Xa[Count(*)][0xabc]}) Where `` Contains .e1 Contains 9e12"),
    octest:ct_string("Match usn2=((@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})),@usn6=((_usn4 :`3esn`{`2esn`:999})-[`5esn`?:@usn5|:@usn6 *7{`2esn`:$`8esn`[0.12][12],`6esn`:`` Contains $_usn3 Contains 0e0}]-(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]})) Where #usn7 Ends With 0.12 Unwind [_usn4 In 12.e12 Is Null Is Null Where `2esn` Is Null Is Null|#usn7 Is Not Null Is Not Null] Starts With (`3esn` {`3esn`:@usn5[$`1esn`..][$7..]})-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->(`6esn` {`7esn`:12e12 Ends With 0e0,`8esn`:$_usn4[False..@usn6][`4esn`..$1000]}) As ``"),
    octest:ct_string("Remove Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 00[$0..usn2][$_usn4..$999]).`3esn` With Distinct *,None(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1)[None(#usn8 In 0x0[_usn4..] Where `5esn` Ends With $999)][@usn5($@usn6 Contains 0e0,9e12[\"d_str\"])] As `3esn` Order By $`4esn`[$1000..$`4esn`][0x0..$_usn3] Asc,{usn1:`` In 123.654 In 0.0,usn2:.e1 =~\"d_str\" =~'s_str'}[Filter(`3esn` In 999 Where 0 Contains $@usn5)..] Ascending Skip $`7esn`[..$`8esn`] Limit $`` Starts With 0x0 Where 0X7[..`5esn`][..$`7esn`] Unwind 1000 Starts With 0e0 Starts With 0 As usn2 Union All Match (({`7esn`:999,#usn8:01 Starts With $`5esn` Starts With 01234567})<-[`5esn`? *..0x0{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]->(:`7esn`$12)),(((`6esn` :_usn3:@usn5{`6esn`:1.e1[0..],`1esn`:'s_str' Ends With $7})<-[{`1esn`:$#usn8 Starts With usn2 Starts With .12,@usn6:07[$`8esn`]}]->(`7esn` {@usn6:$`3esn` Starts With 9e12 Starts With `8esn`})-[? *..0X0123456789ABCDEF{`7esn`:`4esn` Is Not Null,``:.12 Is Not Null}]->(`7esn` {`2esn`:9e0[$@usn6]})))"),
    octest:ct_string("With Distinct ['s_str' Contains 999,0.12 Is Null Is Null] =~{`3esn`:7[$1000][1000]} =~Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $123456789[`1esn`..][`7esn`..]),$`5esn`[0][.12] Where 01 In 0.12 In .e12 Create ``=(`` :#usn8:#usn7{@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]}) Return 12.0 Is Null Order By @usn6 Starts With .e0 Starts With .e12 Desc,usn2 Descending,1.e1[0..] Ascending Skip Count(*)[12..123.654][$`1esn`..$0] Union All Create (:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`})"),
    octest:ct_string("Unwind @usn5 As @usn6 Create `1esn`=(({``:1e1 Ends With 's_str' Ends With $@usn6,`5esn`:$`5esn` Is Not Null})<-[?:usn2|:``]->(:`6esn`:`3esn`{_usn3:00['s_str'],`5esn`:$`` Is Not Null Is Not Null})<-[? *..0x0{`1esn`:`4esn` Starts With `8esn`}]->(`4esn` {`5esn`:$0[`5esn`][9e12],``:#usn7[False..][123.654..]})) Union All Unwind 0 In `8esn` As #usn7"),
    octest:ct_string("Merge ((#usn7 {#usn7:999 Contains $`7esn` Contains usn2})<-[?:`7esn`]-(@usn5 :@usn6{`5esn`:#usn8 Is Not Null,`1esn`:01234567[`6esn`..]})-[`1esn`{usn1:00['s_str'],#usn8:$`8esn`[``..True][1000..0.12]}]->(usn1 :#usn8:#usn7)) Merge ``=((`4esn` {``:0.12 Contains 0x0 Contains @usn5})) On Create Set `` =usn1[..$123456789][..`1esn`],`4esn`+=123.654 In (:_usn3:@usn5{`1esn`:$`4esn`[.e1..$usn1],``:0x0 =~`5esn` =~$`8esn`})<-[?{``:$`6esn`[.e12]}]-(`4esn` :`3esn`) In [`2esn` In $``[$#usn8]] Remove {`8esn`:'s_str'[$#usn8]}.#usn8!,Extract(_usn4 In 12.e12 Is Null Is Null Where `2esn` Is Null Is Null).usn1?"),
    octest:ct_string("Unwind 999 Is Not Null As `4esn`"),
    octest:ct_string("Return *,9e0 Starts With 0e0 Starts With $`5esn`,(@usn5 {`1esn`:0xabc[123.654][12]})-[:#usn8|:`6esn`{#usn8:0X7[..`5esn`][..$`7esn`]}]->(`2esn` :@usn6)-[`5esn`?:`7esn`]-({@usn6:'s_str' Ends With $7}) Ends With All(usn1 In 999 Where @usn6 Ends With 0.12 Ends With `3esn`) Limit $`6esn`[$`6esn`..][0X7..] Unwind Null Is Null Is Null As `8esn`"),
    octest:ct_string("Create ``=((:#usn7{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})-[_usn4:@usn6]->(:#usn7{`4esn`:0.e0 Is Not Null Is Not Null})<-[?:@usn6 *07{_usn3:$`1esn` Is Null}]-(`5esn` {`5esn`:#usn8 Is Not Null,`1esn`:01234567[`6esn`..]}))"),
    octest:ct_string("Return 1.e1 Is Not Null Is Not Null As `1esn` Skip $#usn8[..9e12][..$`3esn`] Remove Filter(`3esn` In False In $`2esn` In 1e1 Where 1000 Ends With $`5esn`).usn1?,@usn6:`7esn` Remove #usn8:`2esn`:@usn5,usn1:`4esn`:usn2"),
    octest:ct_string("Remove Filter(`3esn` In False In $`2esn` In 1e1 Where $`4esn` =~07).`5esn`!,[`6esn` In 0x0[9e0..] Where $123456789 In 010 In $`8esn`|$7[$12]].@usn5?,Single(`6esn` In .e0['s_str'..][$`8esn`..] Where $@usn5 =~$usn2 =~True).`6esn`? Return Distinct 12[$`3esn`..] As _usn4 Order By 0xabc =~01 Descending,#usn7(usn2 =~`6esn`) Is Null Is Null Desc,0Xa Contains $#usn8 Contains `5esn` Asc Limit ``[@usn6][9e0] Detach Delete `1esn`[Null..],1000 Starts With 0e0 Starts With 0 Union All Merge ((`7esn` )<-[`5esn`? *..0x0{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]-(`6esn` :@usn6)) On Create Set `6esn`+=[`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12]] Ends With [0] Ends With `8esn`,#usn8:`5esn`,#usn7+=01234567[..`6esn`][..``]"),
    octest:ct_string("Merge `1esn`=(({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})) Optional Match (((:`2esn`:@usn5{usn1:$usn2[`6esn`..],`3esn`:$_usn4[..$`8esn`]})-[?{#usn7:123.654[``]}]-(`8esn` :`3esn`{`2esn`:$`8esn`[`7esn`],`4esn`:#usn8[1e1..]})<-[_usn3:@usn6]->({@usn6:`5esn` Ends With $999}))),usn2=(((`` :usn1:``{#usn7:$123456789[`4esn`..]})<-[@usn5?{`7esn`:`6esn` In $``}]->(usn1 {_usn3:#usn7 Ends With 0.12})<-[? *123456789..{`7esn`:.e12 =~@usn5,`3esn`:`5esn`[0e0..]}]-(`4esn` ))) With Distinct *,[`6esn` In .e0['s_str'..][$`8esn`..] Where $`7esn`[..$`8esn`]|$`8esn`[`7esn`]] Is Not Null Order By 0xabc Ends With Count(*) Ends With 0x0 Descending,{`8esn`:.12 Is Not Null,_usn3:Count(*) In $`2esn`}[..[@usn6[$0..Null],$999[010..],$`6esn`[$`6esn`..][0X7..]]] Descending,0X7[..`5esn`][..$`7esn`] Asc Skip 0Xa[Count(*)][0xabc] Where 01 In 0.12 In .e12 Union Unwind {`8esn`:12 Is Null Is Null}[[`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 1000 Starts With 0e0 Starts With 0|$#usn8 Ends With _usn4 Ends With usn2]..][[usn1 In 0xabc Is Not Null Is Not Null Where $@usn6 Is Null|$`6esn`[$`6esn`..][0X7..]]..] As @usn5"),
    octest:ct_string("With  ({`7esn`:`4esn` In $`2esn` In @usn5})-[:`1esn`|@usn6*..]->(:`8esn`{`8esn`:0X7 Contains 12.0,`3esn`:`4esn` Starts With `8esn`})<-[`4esn` *123456789..]-(:`7esn`$#usn8)[#usn7($123456789[`1esn`..][`7esn`..],$123456789 =~0e0)][[usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1]] As #usn8,.e0[123456789..][$`2esn`..],@usn5 In .e0 In \"d_str\" As `7esn` Union All With Distinct *,Count(*)[$999..0X0123456789ABCDEF][_usn4..`2esn`] As _usn4 Order By \"d_str\" =~Count(*) =~$usn2 Desc,`4esn`[$usn1..0xabc][123456789..usn1] Descending Limit $`7esn` Starts With 07 Starts With `1esn` Unwind Count(*) Starts With 1000 Starts With `` As `7esn` Return *,$`` Is Null Is Null As usn1 Order By 0x0[$7] Desc,{`1esn`:$`8esn`[``..True][1000..0.12]} Ends With Any(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where Count(*)[..`5esn`]) Ends With Single(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 010 Is Null Is Null) Asc,01 Ends With 123456789 Descending Skip #usn7($123456789[`1esn`..][`7esn`..],$123456789 =~0e0)[(usn2 :_usn3:@usn5)<-[?:`2esn`|:`7esn`{`2esn`:usn2,`3esn`:1e1 Is Null}]->(`` :`5esn`)<-[@usn5?:_usn4|_usn3 *..010{@usn6:$123456789[`1esn`..]}]-(#usn7 :@usn6)..count(Distinct $123456789[`3esn`..`5esn`][1e1..$`5esn`],`1esn`)] Union All Detach Delete Filter(`6esn` In 1000[12.e12][#usn7] Where 01 Starts With $`5esn` Starts With 01234567)[[0.12['s_str'..$0][$usn1..9e0]]..All(`3esn` In 999 Where 07 Ends With $_usn4 Ends With 0.e0)][Filter(`3esn` In 999 Where $0 Contains 7 Contains 1.e1)..Extract(`3esn` In @usn6[..\"d_str\"][..01] Where 1.e1[$`7esn`]|01234567[9e0][.0])],0.12[$`3esn`..1000][$`2esn`..01234567]"),
    octest:ct_string("Optional Match `7esn`=(_usn3 {`3esn`:$@usn5 Is Not Null Is Not Null}),((`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})) Where $`3esn` Ends With @usn6 Ends With 123.654 Union All Optional Match `8esn`=(((`2esn` {_usn3:0[1e1..00]})-[_usn4?:usn2|:`` *7]-(`5esn` {`1esn`:999 Ends With $`4esn`})<-[`1esn`:_usn4|_usn3 *00{`1esn`:$#usn8 Starts With usn2 Starts With .12,@usn6:07[$`8esn`]}]-(`3esn` :`8esn`))) Where $123456789[..$usn2]"),
    octest:ct_string("With  Filter(`6esn` In 1000[12.e12][#usn7] Where $usn2 Contains $`1esn`) As `3esn`,{`8esn`:.12 Is Not Null,_usn3:Count(*) In $`2esn`}[..[@usn6[$0..Null],$999[010..],$`6esn`[$`6esn`..][0X7..]]] Order By [`3esn` In 999 Where `7esn`[`8esn`][#usn7]|False[$12]][..{usn1:`2esn` Is Null Is Null}] Asc Limit Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 9e0[0..1e1]) Contains Any(`3esn` In 999 Where $`7esn`[`2esn`]) Union Unwind $`5esn`[$usn1..usn1][\"d_str\"...e12] As @usn5 Return Distinct *,(:`4esn`:usn2$``)-[`5esn`?:_usn4|_usn3{@usn5:7 =~False,_usn3:999 Ends With $`4esn`}]->(usn2 :``:`6esn`)<-[_usn3:`3esn`|_usn4]->(#usn7 :_usn4) Is Not Null,[`3esn` In False In $`2esn` In 1e1 Where `` Contains 010 Contains $1000|1000[12.e12][#usn7]] In [`3esn` In 999 Where `7esn` Is Null|$#usn8[0e0..][07..]] In Single(`5esn` In 1e1 =~$`8esn` =~`1esn` Where `8esn` Starts With $12 Starts With $1000) As `2esn` Order By .e1 Ends With $123456789 Descending,$`6esn`[$0] Asc,Extract(usn1 In 123.654 =~.e0 =~9e0 Where $`7esn` Starts With 07 Starts With `1esn`|`7esn` Is Not Null Is Not Null) =~`7esn`(Distinct $@usn6[..``],0.0 Starts With Null Starts With .e12) =~@usn6(Distinct 00 In 1000) Ascending Limit Single(`6esn` In 0x0[9e0..] Where $`3esn` Is Not Null) In (`3esn` :`8esn`{usn2:0e0 =~False =~.12})-[? *12{`1esn`:.e0 Ends With $`1esn` Ends With 1000}]->(#usn7 )"),
    octest:ct_string("Merge `1esn`=(({``:1e1 Ends With 's_str' Ends With $@usn6,`5esn`:$`5esn` Is Not Null})<-[?:usn2|:``]->(:`6esn`:`3esn`{_usn3:00['s_str'],`5esn`:$`` Is Not Null Is Not Null})<-[? *..0x0{`1esn`:`4esn` Starts With `8esn`}]->(`4esn` {`5esn`:$0[`5esn`][9e12],``:#usn7[False..][123.654..]})) On Match Set `3esn` =usn1[$`1esn`..] On Match Set usn2 =.e12[$_usn4..0],`2esn` =@usn5[..$999][..$0],_usn4 =False Starts With $123456789 Create (({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})) Union Unwind \"d_str\" Ends With $`3esn` As @usn6"),
    octest:ct_string("Delete (`5esn` :`8esn`{``:00 In 1000})<-[? *123456789..{`7esn`:01234567[9e0][.0],`2esn`:999 Ends With $`4esn`}]-({@usn6:$#usn8[0e0..][07..]}) Ends With (@usn6 {@usn6:$`7esn` Ends With $_usn4 Ends With `5esn`,usn1:123.654[0Xa..0x0][.12..12e12]})-[@usn5:@usn6]-(:`4esn`:usn2{_usn4:`1esn`[$7][0Xa]}),(_usn4 :_usn3:@usn5)<-[@usn6:`8esn`|@usn6{@usn6:#usn8 =~#usn7 =~0x0,`7esn`:$usn1 Ends With $`2esn`}]->(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[?:`6esn`]->(`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})[Any(`5esn` In $usn2 Contains $`1esn` Where @usn6[$usn1][$`2esn`])..][None(`3esn` In False In $`2esn` In 1e1 Where True Contains $`` Contains 01234567)..] Union With Distinct 12[$`5esn`..$`7esn`][$1000..$_usn4] As #usn8,False[...e0][..$#usn8] As `1esn`,.e1[0X7..`2esn`] As `5esn` Order By _usn3[0Xa..] Descending,01234567[$`7esn`] Asc Skip .12 =~1000 =~7 Limit 7[.0..01]"),
    octest:ct_string("Unwind $@usn6 Ends With 010 As `5esn` Union Remove All(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 7 Ends With `3esn` Ends With $`2esn`).``,0e0._usn3,[$usn1[#usn8..`8esn`][7..`4esn`],`5esn` Ends With 0x0].`2esn`? Remove `8esn`(Distinct).`3esn`,(:`4esn`:usn2$``)-[`5esn`?:_usn4|_usn3{@usn5:7 =~False,_usn3:999 Ends With $`4esn`}]->(usn2 :``:`6esn`)<-[_usn3:`3esn`|_usn4]->(#usn7 :_usn4).`5esn`!,[`5esn` In $usn2 Contains $`1esn` Where $`6esn`[$0]|`4esn`[Count(*)]].`6esn`? With  {`1esn`:$usn2 =~`6esn` =~`1esn`} Ends With 010 Ends With None(_usn4 In 12.e12 Is Null Is Null Where $`4esn` In 0x0),(:`1esn`:@usn6{`1esn`:12.0[9e12]['s_str'],`3esn`:$123456789 Is Not Null})<-[:`3esn`|_usn4 *12]->(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null})<-[usn2?:`8esn`|@usn6{#usn7:$`3esn` Is Null}]->(`2esn` :`8esn`) Starts With Any(`5esn` In $usn2 Contains $`1esn` Where `8esn` Contains 0X0123456789ABCDEF) As `3esn`,False[...e0][..$#usn8] As `8esn` Skip 1e1[`3esn`] Where $usn1[#usn8..`8esn`][7..`4esn`]"),
    octest:ct_string("Match ((:`1esn`:@usn6{`1esn`:12.0[9e12]['s_str'],`3esn`:$123456789 Is Not Null})),(`4esn` {`2esn`:0.e0[.e12]})-[`1esn`?:`3esn`|_usn4*..]->(_usn3 ) Where _usn3 =~$12 Remove {`2esn`:9e0[$@usn6]}.`1esn` Detach Delete $#usn7[$`3esn`..$999],0e0 Is Null,`7esn`[`8esn`][#usn7] Union Merge (usn2 :_usn3:@usn5) On Create Set `7esn`+=9e0[123456789..0][12.0..@usn6],`2esn` =({`7esn`:$@usn5 =~$usn2 =~True,_usn3:00[$0..usn2][$_usn4..$999]})-[`3esn`]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5})<-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]})[{usn1:$`5esn`[.e1][#usn8],_usn3:12e12 Ends With `6esn`}] Merge _usn3=(#usn7 :`3esn`{_usn3:.e0[$`1esn`..][_usn4..]})"),
    octest:ct_string("Delete 1e1 Contains 0Xa,0.e0 Contains $1000 Contains 7"),
    octest:ct_string("Return $@usn6[$#usn8..$999][Count(*)..usn1] As @usn6,\"d_str\" =~Count(*) =~$usn2,$@usn5[..$`8esn`][..`1esn`] Return (:`4esn`:usn2{_usn3:Null Is Not Null Is Not Null,`4esn`:$1000 Is Not Null})<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]->(:@usn5{usn1:12.e12 Is Null Is Null,``:Null Is Not Null Is Not Null}) Ends With {@usn6:_usn3[0Xa..]} As usn1,True Is Null Order By [12 Is Null Is Null,9e0[$@usn6]] Contains Extract(`6esn` In .e0['s_str'..][$`8esn`..] Where `8esn`[0x0..]|.e0['s_str'..][$`8esn`..]) Contains #usn7 Asc Skip 9e1[$`2esn`..][12.e12..]"),
    octest:ct_string("Unwind `7esn` Is Not Null Is Not Null As #usn8 Merge ((:`4esn`:usn2$`7esn`)-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-({@usn6:`5esn` Ends With $999})<-[`8esn`?:@usn6 *999]->(:#usn8:#usn7{`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]})) On Create Set {_usn3:0Xa[..$`2esn`][..00]}.`5esn`? =[`6esn` In 1000[12.e12][#usn7] Where 12.0[9e12]['s_str']|0.e0 =~01234567 =~01234567] Ends With Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $`8esn`[0.12][12]) Ends With count(1000[Null][$`7esn`],$123456789[`3esn`..`5esn`][1e1..$`5esn`]),[#usn8 In 07['s_str'][$@usn6] Where True|0e0 Starts With $@usn6 Starts With $7].`4esn` =1000 Ends With 01234567 Ends With usn1 On Match Set `8esn`+=$`4esn` In 0x0,@usn6+=$`1esn` =~`1esn` =~0X0123456789ABCDEF Unwind $`4esn`[$@usn5..`7esn`] As @usn5"),
    octest:ct_string("Remove ({`4esn`:Count(*)[..$_usn3][..$usn2]})<-[`3esn`? *..010{`6esn`:$123456789[..$usn2],`7esn`:$_usn4 =~0X7}]-(#usn7 {@usn5:$`5esn` Contains $usn2}).#usn7?,[`2esn` In $``[$#usn8] Where \"d_str\" =~_usn3 =~0.0].`8esn` Remove {_usn3:7 Contains 1000 Contains $usn1}.usn1?,All(`5esn` In $usn2 Contains $`1esn` Where `2esn` Contains `3esn` Contains $@usn5).#usn8?,{``:9e0 Is Null Is Null,`3esn`:.0[@usn6..]}.usn2! Detach Delete All(`7esn` In $`8esn`[0.12][12] Where @usn5[..$999][..$0])[..({usn2:1000 Starts With 0e0 Starts With 0,`6esn`:9e1[$`3esn`][$`1esn`]})<-[`3esn`:_usn3|`6esn`]->(usn1 :#usn8:#usn7)],#usn8(Distinct 0x0[$7],#usn8[1e1..])[[1.e1[#usn7][1.e1]]..{usn1:`2esn` Is Null Is Null}][_usn3(Distinct usn1[$`1esn`..])..Extract(`3esn` In False In $`2esn` In 1e1 Where 1000 Ends With $`5esn`)],`8esn` Is Not Null Union Return *,1000 =~$@usn5 Skip $123456789[..0.12] Delete `6esn`[False..],$usn2[`6esn`..],01 Ends With @usn6 Ends With $7 Remove [#usn8 In 0x0[_usn4..] Where `8esn`[12.e12][`4esn`]].#usn8!,[usn1 In 123.654 =~.e0 =~9e0 Where $usn2 Starts With $`7esn` Starts With _usn4].`2esn`?"),
    octest:ct_string("Delete .e1 =~\"d_str\" =~'s_str' Union Detach Delete [`6esn` In 1000[12.e12][#usn7] Where 0X0123456789ABCDEF Is Not Null] Is Null,All(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $@usn5 =~$usn2 =~True)[..{`7esn`:`` Is Not Null Is Not Null}][..(@usn6 :`1esn`:@usn6{usn2:#usn8 Is Not Null})-[? *12]->(:`2esn`:@usn5{#usn7:0e0['s_str'],`1esn`:$#usn8[1.e1]})<-[`6esn`:`3esn`|_usn4 *0X7..0x0$999]->({`5esn`:1e1[\"d_str\"..]})],Extract(`3esn` In False In $`2esn` In 1e1 Where `` Contains 010 Contains $1000|@usn5['s_str'..$`2esn`])[`5esn`(0e0['s_str'])][None(`6esn` In 0x0[9e0..] Where 0xabc Is Not Null Is Not Null)]"),
    octest:ct_string("Unwind Extract(`2esn` In $``[$#usn8] Where `1esn`[Null..])[[12.0[`3esn`][_usn3]]] As _usn4 Create `7esn`=(((:`7esn`$12)<-[?:usn2|:`` *7]->(`6esn` {#usn7:`2esn`[`3esn`..],usn2:$usn2 Starts With $`7esn` Starts With _usn4})-[`2esn` *01234567..123456789{usn1:False[$12],`1esn`:0.e0 Ends With $123456789}]-(#usn7 :#usn7{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2}))) Delete {@usn5:@usn5[..$999][..$0]} Starts With [#usn8 In 0x0[_usn4..] Where 7 =~$1000 =~$`5esn`|$`1esn` Is Not Null Is Not Null],$usn2 Ends With 0 Ends With 12.0 Union All Return Distinct *,.12 Is Not Null Is Not Null As `2esn` Order By Extract(usn1 In 123.654 =~.e0 =~9e0 Where $`7esn` Starts With 07 Starts With `1esn`|`7esn` Is Not Null Is Not Null) =~`7esn`(Distinct $@usn6[..``],0.0 Starts With Null Starts With .e12) =~@usn6(Distinct 00 In 1000) Ascending"),
    octest:ct_string("Unwind `1esn` Is Not Null Is Not Null As `6esn` Union All Unwind usn2[.e1..][01234567..] As _usn3"),
    octest:ct_string("Merge (`6esn` :`2esn`:@usn5)<-[`1esn`?:_usn4|_usn3]-(`1esn` {@usn6:Null In 0xabc}) On Create Set _usn4+=$_usn4 =~0X7 On Match Set {@usn5:usn2,usn1:0.0[.12..`8esn`]}._usn4 =1e1[`3esn`] Union All Remove {`2esn`:`` In 123.654 In 0.0,usn2:#usn7 In #usn7}.`7esn`?,Single(`6esn` In .e0['s_str'..][$`8esn`..] Where .e12 Is Null Is Null).`2esn`!,[`3esn` In 999 Where 0X7[..True][..01234567]|0.e0 Is Not Null Is Not Null].#usn8 With  9e1 Contains _usn3 Order By {`3esn`:.0 =~$@usn5 =~1.e1} =~Extract(_usn4 In 12.e12 Is Null Is Null Where $_usn4[False..@usn6][`4esn`..$1000]) Ascending,@usn6(`4esn` Starts With $#usn8 Starts With $#usn8,.e1 =~usn2 =~`7esn`)[..{`2esn`:Count(*) Contains 12e12 Contains 0xabc}][..Extract(#usn8 In 0x0[_usn4..] Where 0xabc[123.654][12]|$`6esn` Is Not Null)] Ascending,Any(`2esn` In $``[$#usn8] Where $`2esn`[.._usn3])[[`6esn` In .e0['s_str'..][$`8esn`..] Where $@usn5 =~$usn2 =~True|.e0[$`1esn`..][_usn4..]]..`8esn`] Asc Skip 0X0123456789ABCDEF Limit 00 In 1000 Where $#usn8[0xabc..usn2] Unwind 0e0 =~False =~.12 As `5esn`"),
    octest:ct_string("Remove (`5esn` :`8esn`{``:00 In 1000})<-[`5esn`:_usn4|_usn3 *0X7..0x0]-(#usn7 {`5esn`:00 Starts With usn1 Starts With Count(*),``:$999 Is Not Null})<-[`4esn`?]->(:`2esn`:@usn5{#usn8:$usn2 Starts With 9e1 Starts With `7esn`}).@usn6,@usn5(0.0[.12..`8esn`]).`1esn`!,Any(`3esn` In 999 Where $`3esn`[9e0..0.0][_usn4..123456789]).#usn7? Union All Remove [1.e1 Is Not Null Is Not Null,`3esn` Is Not Null Is Not Null].@usn6?,{`6esn`:0[_usn3][.12],@usn6:False[...e0][..$#usn8]}.``?,`4esn`:#usn8:#usn7 Return Distinct .e0 =~7 =~False As `8esn`,01 Starts With $`5esn` Starts With 01234567,[0.e0 Contains $123456789 Contains 123456789,`5esn` In 12.e12 In 1000][..Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12]|0.e0[.e12])][..Any(#usn8 In 0x0[_usn4..] Where $#usn7)] As `7esn` Limit $`1esn` =~`1esn` =~0X0123456789ABCDEF Union Optional Match ((({`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`})-[`1esn`?:`3esn`|_usn4*..]->(:#usn8:#usn7{`4esn`:0Xa Contains 0x0 Contains $#usn8})<-[:_usn3|`6esn`{``:`6esn`[`7esn`..$_usn3][9e0..#usn8],`8esn`:.0[01234567]}]->(`2esn` :`5esn`{@usn5:'s_str' Contains 999,`6esn`:1000[12.e12][#usn7]}))),((`6esn` :_usn3:@usn5))"),
    octest:ct_string("Create (`5esn` :#usn7{usn1:9e12 In 123.654 In True,`2esn`:True =~0 =~123456789})-[`7esn`?:``{``:00 In 1000}]-({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]}),`5esn`=(:`8esn`{@usn5:1000 Starts With 0e0 Starts With 0,#usn7:$`5esn`[`4esn`..$`2esn`]})-[:`3esn`|_usn4{usn1:$`6esn`[$`6esn`..][0X7..],@usn5:123456789 Starts With #usn8}]-(:`3esn`$`6esn`)<-[{#usn8:999}]->(:@usn6) Union Delete $#usn8 Starts With usn2 Starts With .12,[0Xa[..$`2esn`][..00]] Starts With (@usn6 )-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(:`7esn`{`2esn`:.e12 Is Not Null Is Not Null,`4esn`:_usn4[1000..``]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`6esn` ) Remove `8esn`(Distinct).`3esn`,(:`4esn`:usn2$``)-[`5esn`?:_usn4|_usn3{@usn5:7 =~False,_usn3:999 Ends With $`4esn`}]->(usn2 :``:`6esn`)<-[_usn3:`3esn`|_usn4]->(#usn7 :_usn4).`5esn`!,[`5esn` In $usn2 Contains $`1esn` Where $`6esn`[$0]|`4esn`[Count(*)]].`6esn`? Remove All(`6esn` In .e0['s_str'..][$`8esn`..] Where `4esn`).usn1?,Extract(`6esn` In .e0['s_str'..][$`8esn`..] Where .e12 Is Null Is Null|$`7esn`[..0X7][..False]).`4esn`! Union Create `5esn`=((`6esn` :_usn3:@usn5)) Merge @usn6=(`7esn` :`7esn`)-[?:`` *07{`1esn`:$#usn7[$`3esn`..$999]}]->(_usn3 {_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null}) On Create Set [$#usn8[0e0..][07..],#usn7 Is Not Null Is Not Null].#usn7? =@usn5 In 12.0 In $_usn3,Filter(usn1 In 0xabc Is Not Null Is Not Null Where 01234567[9e0][.0]).`2esn`! =@usn5[01234567..],Extract(`6esn` In 0x0[9e0..] Where Count(*)[..$_usn3][..$usn2]|0.e0 Contains @usn5 Contains 0X7).`1esn`! =$1000 =~$`8esn` =~$`2esn`"),
    octest:ct_string("Unwind Extract(`3esn` In 999 Where .e12 Is Null Is Null|$`7esn`[usn2]) =~Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where @usn5['s_str'..$`2esn`]|$@usn5[$_usn3..Null]) =~Any(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where #usn7 In #usn7) As `3esn` Match (:#usn7)<-[#usn7:`1esn`|@usn6 *999{`4esn`:0X7[..`5esn`][..$`7esn`]}]-(:`1esn`:@usn6{`1esn`:12.0[9e12]['s_str'],`3esn`:$123456789 Is Not Null})-[@usn6?:_usn3|`6esn` *0..]->(:`1esn`:@usn6),`7esn`=(usn1 :``:`6esn`)<-[usn2?]->(:`1esn`:@usn6{@usn5:`8esn`[12.e12][`4esn`]}) Return Any(`6esn` In 0x0[9e0..] Where $`3esn` Is Not Null)[None(`6esn` In 1000[12.e12][#usn7] Where `4esn` In $`2esn` In @usn5)..[0x0 Contains .0]] As `7esn`,(usn1 )<-[{`5esn`:usn2[.e1..][01234567..],usn1:999 Is Not Null}]->({`7esn`:`4esn` In $`2esn` In @usn5}) Is Not Null Is Not Null As _usn4 Order By Null Contains $_usn3 Descending,`7esn`[`8esn`][#usn7] Desc,None(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1) Ends With All(usn1 In 0xabc Is Not Null Is Not Null Where $@usn6 Is Null) Ends With Any(`6esn` In 1000[12.e12][#usn7] Where 01 Starts With $`5esn` Starts With 01234567) Descending Limit 0X0123456789ABCDEF Is Not Null Union Remove Filter(usn1 In 0xabc Is Not Null Is Not Null Where usn1[$`1esn`..]).@usn5? Detach Delete 0,$_usn3 =~`1esn`,_usn3($123456789[..`3esn`][..`7esn`]) Is Null Detach Delete 010 Is Null Union Merge `8esn`=((`5esn` :#usn7)<-[? *..010{usn1:123456789[$_usn4..]}]->(@usn5 {`2esn`:$#usn7[`7esn`..][$`8esn`..],`3esn`:0.12['s_str'..$0][$usn1..9e0]})) On Match Set `7esn` =[$@usn5[$_usn3],$_usn3 Is Not Null,#usn7 =~$`8esn`][..Filter(`7esn` In $`8esn`[0.12][12] Where 9e0[123456789..0][12.0..@usn6])]"),
    octest:ct_string("Optional Match `3esn`=((:`4esn`:usn2{_usn3:Null Is Not Null Is Not Null,`4esn`:$1000 Is Not Null})<-[ *..0X0123456789ABCDEF{@usn6:`4esn` Is Not Null,`2esn`:@usn6[.0]}]-(`3esn` :#usn8:#usn7{_usn3:$`1esn` Is Not Null Is Not Null,`2esn`:0X7 Contains 12.0})),`1esn`=((`5esn` {`1esn`:999 Ends With $`4esn`})<-[`7esn`?]->(:``:`6esn`{`5esn`:_usn3 =~$12})-[?:usn2|:`` *7]-(`1esn` {@usn6:`1esn`[$7][0Xa]})) Where $`5esn` Is Not Null Delete Extract(usn1 In 0xabc Is Not Null Is Not Null)[{#usn8:`6esn`[`7esn`..$_usn3][9e0..#usn8],`3esn`:\"d_str\" =~_usn3 =~0.0}..Filter(#usn8 In 0x0[_usn4..] Where #usn8[..0X0123456789ABCDEF][...0])][Single(`6esn` In 0x0[9e0..] Where $`3esn` Is Not Null)..None(#usn8 In 0x0[_usn4..] Where 0.e0 Is Not Null Is Not Null)],07 =~$12 =~$@usn6 Delete {`1esn`:$usn2 =~`6esn` =~`1esn`} Ends With 010 Ends With None(_usn4 In 12.e12 Is Null Is Null Where $`4esn` In 0x0) Union All Create #usn7=(`7esn` :`7esn`)-[{`5esn`:0.e0 =~01234567 =~01234567}]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]}) Return Distinct *,Any(#usn8 In 07['s_str'][$@usn6] Where $`7esn`[usn2]) In [`6esn` In 0x0[9e0..] Where `5esn`[usn1]] In {_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]} As `5esn` Limit $@usn6 Contains `5esn` Contains .e12 Return [0Xa[..1.e1],#usn7[.12][usn2],1000 Starts With 0e0 Starts With 0][`7esn`(Distinct $#usn8[@usn5..$1000])] As `4esn`,0.e0 Ends With #usn8,$12[0.0..] Skip $`8esn`[0.12][12] Union All Return *,0 =~#usn8 As `2esn` With  $123456789 =~0e0 As `4esn`,1.e1 =~01234567 Order By (:``:`6esn`{`8esn`:123.654[.e12..\"d_str\"]})<-[_usn3:`3esn`|_usn4]->(_usn3 :`4esn`:usn2) Is Not Null Is Not Null Desc,{_usn4:\"d_str\" Ends With $`3esn`,``:#usn8 =~#usn7 =~0x0}[Single(usn1 In 0xabc Is Not Null Is Not Null Where `7esn`[..01])..{`2esn`:.0[@usn6..]}][[1000[12.e12][#usn7],`` Is Not Null Is Not Null]..None(#usn8 In 0x0[_usn4..] Where `8esn` Ends With $`1esn`)] Descending"),
    octest:ct_string("Remove {_usn4:0.12[123456789..]}.`1esn`,[7 =~False,1.e1[$`7esn`]].`7esn` Union With Distinct *,Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0) Is Not Null,$`5esn`[#usn7..`7esn`] As `8esn` Skip $1000[..`6esn`][..123456789] Limit $1000[..`6esn`][..123456789] Create ((({@usn5:.e12 Is Not Null Is Not Null,_usn3:$1000[..`6esn`][..123456789]})-[{usn1:Count(*)[..12][..$999],#usn8:usn1 In 010}]->(`1esn` :`8esn`)<-[`8esn`:`7esn` *0..]->(`1esn` {`5esn`:$`7esn` Ends With $_usn4 Ends With `5esn`,#usn8:'s_str'[$#usn8]})))"),
    octest:ct_string("Optional Match (#usn7 {_usn4:`1esn`[$7][0Xa]}),@usn5=((`2esn` )-[:@usn5|:@usn6 *999{`5esn`:0x0 =~@usn5 =~01}]->(:``:`6esn`{`7esn`:12e12 Ends With 0e0,`8esn`:$_usn4[False..@usn6][`4esn`..$1000]})-[`3esn`? *12{@usn5:$#usn8[..123456789][..`2esn`],#usn7:12.0[..0X7]}]-(:`7esn`{@usn6:`2esn`[``..]})) Where 123.654 =~.e0 =~9e0 Unwind {`8esn`:.e12[..#usn7][..9e12]} Starts With None(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $1000[00..]) Starts With {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`} As usn1 Union Remove 0X0123456789ABCDEF.usn2!,Filter(`3esn` In False In $`2esn` In 1e1 Where $`4esn` =~07)._usn3!,(:`6esn`:`3esn`{_usn3:00['s_str'],`5esn`:$`` Is Not Null Is Not Null})<-[`7esn`?]->(:`2esn`:@usn5{usn2:$`3esn` Ends With @usn6 Ends With 123.654})-[usn2?:`8esn`|@usn6{`3esn`:0.0 Ends With $usn1 Ends With $999,`5esn`:1.e1 Is Null Is Null}]-(`2esn` :`5esn`{@usn5:'s_str' Contains 999,`6esn`:1000[12.e12][#usn7]})._usn4! Optional Match (`` :#usn8:#usn7{@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]}) Union With Distinct [$999[@usn5..][Null..]] Ends With ({usn2:0Xa Contains $`6esn`,_usn3:\"d_str\" Ends With $`3esn`})-[@usn5? *00{@usn5:usn1 Ends With 1.e1 Ends With `4esn`}]-(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})-[:`5esn`|:`1esn`]-(`2esn` ) As `7esn` Order By Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0) Is Not Null Descending"),
    octest:ct_string("Detach Delete 0xabc[.12..][#usn8..],Single(`6esn` In 1000[12.e12][#usn7] Where usn1[9e1..]) =~Any(_usn4 In 12.e12 Is Null Is Null Where .e0['s_str'..][$`8esn`..]) =~Filter(usn1 In 999 Where 010 In $@usn5 In `5esn`),1000[Null][$`7esn`] With  $0 Contains 7 Contains 1.e1,All(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $@usn6 Is Null) Is Not Null Is Not Null Skip $`6esn`[$usn1] Limit Extract(`7esn` In $`8esn`[0.12][12] Where .e1[0X7..`2esn`]) Is Null Is Null With Distinct 01[#usn8..1000] As `5esn`,\"d_str\"[0X7..``][@usn5.._usn4] As _usn3,Extract(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1|$`2esn` Is Not Null Is Not Null) =~[`7esn`[..01],1e1 =~$`8esn` =~`1esn`,$`6esn`[.e12..$`6esn`][$#usn7...0]] Order By usn1 Is Null Is Null Desc,`4esn` Starts With $#usn8 Starts With $#usn8 Desc,0.e0[.e12] Descending Limit usn1(Distinct 0 Is Null Is Null,$@usn5 =~$usn2 =~True) In Any(usn1 In 999 Where @usn6 Ends With 0.12 Ends With `3esn`) In [`4esn` Ends With 's_str' Ends With @usn6,$`4esn` In 0x0] Where $999[@usn5..][Null..]"),
    octest:ct_string("Detach Delete {#usn8:.e0 Ends With $`1esn` Ends With 1000}[Filter(#usn8 In 07['s_str'][$@usn6] Where $12[0.0..])][Filter(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..])],0Xa[.e12..] Merge `8esn`=((`1esn` :`7esn`{`6esn`:1e1 In 12.e12})<-[:#usn7|`5esn`*{`8esn`:01[$0],``:0xabc Is Not Null Is Not Null}]-(_usn3 :`7esn`{#usn7:123.654 =~.e0 =~9e0,_usn3:`1esn`[Null..]})<-[`5esn` *0Xa]-(:usn1:``))"),
    octest:ct_string("Remove (:`2esn`:@usn5)-[`4esn`?:usn1|#usn7{`1esn`:123456789 Ends With 9e1 Ends With ``,@usn5:0xabc Contains 0}]-(`6esn` :@usn6).`2esn`?,count($12[0.0..],0X0123456789ABCDEF In _usn3)._usn3? Union All Unwind Extract(`3esn` In 999 Where .e12 Is Null Is Null|$`7esn`[usn2]) Is Not Null As `2esn` Union Create `1esn`=(({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})),``=((`4esn` {``:0.12 Contains 0x0 Contains @usn5}))"),
    octest:ct_string("Unwind $1000[..`6esn`][..123456789] As `4esn` Merge `4esn`=((:usn1:``{`8esn`:123.654[$``][#usn7],`1esn`:0e0 Starts With $@usn6 Starts With $7})) On Match Set usn2 =0Xa Contains $`6esn`,`7esn`+=`8esn`[.e1..] Return *,[`6esn` In 1000[12.e12][#usn7] Where $`7esn`[..$`8esn`]|$`6esn` Starts With usn1][Extract(`3esn` In 999 Where usn1[$`1esn`..])..{`3esn`:usn2 Contains 07 Contains False,#usn8:usn2[.e1..][01234567..]}][{@usn5:.12[9e1..0X7]}..[_usn4 In 12.e12 Is Null Is Null Where $123456789 In 010 In $`8esn`|0.12['s_str'..$0][$usn1..9e0]]] As usn1 Order By Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $@usn5 =~$usn2 =~True) In (@usn5 :`3esn`)<-[``?:usn1|#usn7]-(:`2esn`:@usn5$usn1)-[usn1?:@usn5|:@usn6 *01..7{`1esn`:`8esn` Ends With $`1esn`}]-(#usn8 :_usn4) Desc,Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) Ends With [1.e1[#usn7][1.e1],Null =~Count(*)] Ends With [#usn8[..0X0123456789ABCDEF][...0],$usn1 Is Not Null Is Not Null] Desc Limit $``[12e12..01][$`5esn`..12e12]"),
    octest:ct_string("Create `1esn`=(((_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[`7esn`?:`2esn`|:`7esn`]->(`3esn` {#usn8:#usn7 =~$`8esn`})-[ *07{`1esn`:$``}]->(`1esn` :usn1:``))),_usn4=(@usn5 :`3esn`)<-[:`4esn` *..0X0123456789ABCDEF{`1esn`:0X7[..True][..01234567],``:`1esn`[usn1]}]->(@usn6 :usn1:``{usn1:#usn7 Is Not Null Is Not Null,`6esn`:$12[0.0..]})<-[`2esn`{`2esn`:999 Contains $`7esn` Contains usn2}]->(`4esn` :usn2) Union All Delete 0e0[$123456789..$999][\"d_str\"..Null] Create _usn4=(((:#usn8:#usn7{`8esn`:12e12 Ends With 0e0})<-[_usn3?:`` *..010{usn2:`7esn`[_usn4..][Count(*)..]}]->(`8esn` :``:`6esn`{#usn7:$`3esn` Is Null})<-[@usn5{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(:`5esn`{@usn5:True Contains $`` Contains 01234567}))),(((`` :`5esn`{`5esn`:_usn3[0Xa..],usn1:1.e1 Ends With 0x0 Ends With 1e1})<-[`6esn`{`3esn`:`2esn` Contains `3esn` Contains $@usn5}]-(`4esn` :`2esn`:@usn5{#usn8:$#usn7[9e12..12]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`6esn` ))) Union Remove `8esn`(Distinct).`3esn`"),
    octest:ct_string("Remove None(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where @usn6 Ends With 0.12 Ends With `3esn`).`2esn`!,[#usn8 In 0x0[_usn4..] Where 0X0123456789ABCDEF In _usn3|$123456789 =~usn1 =~0xabc].@usn6,{usn2:1e1 =~$`8esn` =~`1esn`}.`2esn`! Detach Delete 0.e0 Ends With #usn8 Remove {usn2:0}.`5esn`,`8esn`:#usn7 Union Merge (:``:`6esn`{`5esn`:$`` Is Not Null Is Not Null,`5esn`:_usn3 Is Not Null})-[`7esn`{``:01234567 In \"d_str\",`5esn`:01234567[`6esn`..]}]-(@usn6 $_usn3)-[?:`1esn`|@usn6 *0Xa]-(`1esn` {`5esn`:$`7esn` Ends With $_usn4 Ends With `5esn`,#usn8:'s_str'[$#usn8]}) Union All With  *,.0[01234567] As `2esn`,Extract(`2esn` In $``[$#usn8] Where `1esn`[Null..])[[12.0[`3esn`][_usn3]]] As @usn6 Skip `7esn`[7..$123456789][$0..$7] Where $123456789[`1esn`..][`7esn`..] With Distinct *,123.654[$`1esn`] As @usn5 Skip _usn4[1000..``] Limit @usn5['s_str'..$`2esn`] Where `3esn`[0x0][$`5esn`]"),
    octest:ct_string("Return Distinct $`` Is Null Is Null As usn1 Order By 010[`1esn`..`4esn`] Ascending Match `5esn`=((`` :usn1:``{#usn7:$123456789[`4esn`..]})),`5esn`=((`1esn` {`7esn`:$7[`7esn`][123.654],@usn6:`1esn`[usn1]})-[:#usn7|`5esn`]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null})) Union All Remove [usn1 Ends With $`8esn` Ends With 7,07 Ends With $_usn4 Ends With 0.e0,$12 Is Null Is Null].#usn8!,[usn1 In 999 Where 12e12[..9e12][..$@usn6]].`7esn` Merge `6esn`=((:`7esn`{`8esn`:'s_str'[$#usn8]})-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})<-[usn2?:#usn8|:`6esn` *7]-(:@usn6)) On Create Set Single(`3esn` In 999 Where 0.e0 Ends With #usn8).usn2 =`4esn` In .12 In $#usn8,`8esn` =`1esn`[0],usn2 =_usn4 =~1000 =~_usn3 With  0x0 In 0X0123456789ABCDEF As usn1,.e1 Ends With $123456789 As @usn6 Skip 0.12[..0.0] Limit Filter(`5esn` In $usn2 Contains $`1esn`) Starts With Filter(usn1 In 999 Where `4esn` Is Null Is Null) Starts With [usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..]|$`6esn`[.e12]] Where @usn5[$`1esn`..][$7..] Union Match ({@usn6:$#usn8[0e0..][07..],``:$`7esn` =~1.e1 =~0.e0})-[?:#usn8|:`6esn` *..0X0123456789ABCDEF]->(#usn8 :#usn8:#usn7{@usn6:$#usn8[0e0..][07..],``:$`7esn` =~1.e1 =~0.e0})<-[`6esn`:`3esn`|_usn4 *0X7..0x0$999]->({`5esn`:1e1[\"d_str\"..]}) Return Distinct Extract(`3esn` In 999 Where .e12 Is Null Is Null|$`7esn`[usn2]) =~Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where @usn5['s_str'..$`2esn`]|$@usn5[$_usn3..Null]) =~Any(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where #usn7 In #usn7) As `2esn`,$`3esn` Ends With 123456789 Ends With 0.e0 As `7esn` Skip 00 =~999 =~07 Remove Single(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $@usn6 Is Null Is Null).`1esn`"),
    octest:ct_string("Create (`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]})<-[`3esn`{@usn6:123.654[.e12..\"d_str\"]}]-(@usn5 :`2esn`:@usn5$#usn8)<-[_usn4 *..0x0{``:$_usn4 =~0X7,`3esn`:Count(*)[12..123.654][$`1esn`..$0]}]-(:`4esn`:usn2{`2esn`:0Xa Contains $`6esn`}),(`5esn` :#usn7)-[`5esn`?:@usn5|:@usn6 *7{`2esn`:$`8esn`[0.12][12],`6esn`:`` Contains $_usn3 Contains 0e0}]-(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]}) Detach Delete 999 In 0,.e12 Contains `7esn` Contains 999,$@usn6 Is Null Is Null Unwind Filter(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $usn2[12.0..][`8esn`..]) Ends With [usn1[..$123456789][..`1esn`],0e0 Is Not Null] Ends With [0 Contains $@usn5,False Contains $`1esn` Contains @usn6] As `4esn` Union Remove ({_usn4:`7esn`[_usn4..][Count(*)..],`1esn`:01234567 In \"d_str\"})-[usn2?:@usn5|:@usn6]->({#usn8:$`` Is Not Null Is Not Null,`8esn`:$usn2 Starts With 9e1 Starts With `7esn`})<-[`7esn`?]-(usn1 :`6esn`:`3esn`{`2esn`:`` In 123.654 In 0.0,usn2:#usn7 In #usn7}).usn1"),
    octest:ct_string("Optional Match #usn8=(((usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})<-[`4esn`:`8esn`|@usn6 *..0X0123456789ABCDEF]-(`6esn` $_usn3)<-[?:`6esn`]-(usn1 :`8esn`{`5esn`:$usn1 Starts With Null Starts With $``,`5esn`:0 Contains $@usn5}))) Where `7esn` =~12.e12 =~0e0 Return Distinct Filter(`3esn` In 999 Where 0X0123456789ABCDEF) Contains Any(`6esn` In .e0['s_str'..][$`8esn`..] Where \"d_str\" Ends With $1000 Ends With usn2) Contains (`4esn` :usn2{@usn6:@usn6[..\"d_str\"][..01],usn2:$`6esn`[$`6esn`..][0X7..]})-[:#usn8|:`6esn`]-(:`7esn`{#usn8:12e12 Ends With `6esn`,_usn4:0Xa Contains $#usn8 Contains `5esn`})<-[usn2?:#usn8|:`6esn` *7]-({_usn4:`7esn`[_usn4..][Count(*)..],`1esn`:01234567 In \"d_str\"}) As `8esn`,$123456789[`1esn`..] As `5esn` Order By [0Xa[..1.e1],#usn7[.12][usn2],1000 Starts With 0e0 Starts With 0][`7esn`(Distinct $#usn8[@usn5..$1000])] Desc,Any(`6esn` In 0x0[9e0..] Where $`3esn` Is Not Null)[None(`6esn` In 1000[12.e12][#usn7] Where `4esn` In $`2esn` In @usn5)..[0x0 Contains .0]] Descending Union With Distinct *,0.0[`7esn`][`6esn`],.e1[0X7..`2esn`] Order By @usn5 In .e0 In \"d_str\" Asc,[$999[@usn5..][Null..]] Ends With ({usn2:0Xa Contains $`6esn`,_usn3:\"d_str\" Ends With $`3esn`})-[@usn5? *00{@usn5:usn1 Ends With 1.e1 Ends With `4esn`}]-(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})-[:`5esn`|:`1esn`]-(`2esn` ) Descending,12.0 Contains 12.e12 Contains 0x0 Descending Limit 0xabc[..$999] Where $_usn3[0e0..][12.0..] With Distinct [0x0[9e0..],1.e1[0..]] Contains [$`3esn`[9e0..0.0][_usn4..123456789],#usn7[False..][123.654..],$#usn8[..9e12][..$`3esn`]] Contains ({usn2:0Xa Contains $`6esn`,_usn3:\"d_str\" Ends With $`3esn`})-[@usn5? *00{@usn5:usn1 Ends With 1.e1 Ends With `4esn`}]-(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})-[:`5esn`|:`1esn`]-(`2esn` ),[_usn3 =~$12,.0[..False],Null In 0xabc] Is Null Is Null As `3esn` Order By 0x0 In 0X0123456789ABCDEF Ascending,`7esn` In `8esn` In 12 Desc Skip $123456789 In 010 In #usn7 Limit [#usn8 In 07['s_str'][$@usn6] Where 9e0 Starts With 0e0 Starts With $`5esn`] Starts With Extract(_usn4 In 12.e12 Is Null Is Null Where _usn4 In .0 In .12|usn2 In 1e1 In `4esn`) Starts With None(`3esn` In @usn6[..\"d_str\"][..01] Where 12[`5esn`..$`3esn`][0.12..usn2]) Where `1esn` Match (({`5esn`:0.0 Starts With Null Starts With .e12})-[`5esn`?:_usn4|_usn3{@usn5:7 =~False,_usn3:999 Ends With $`4esn`}]->(usn2 :``:`6esn`)<-[:`1esn`|@usn6*..]-(`3esn` :``:`6esn`{`5esn`:$999[9e0..010][999..010]})),`4esn`=((`8esn` {`3esn`:Null Is Null Is Null})) Union Unwind $#usn8[@usn5..$1000] As `5esn`"),
    octest:ct_string("Detach Delete 010 =~0e0 =~9e1 Union Create (`7esn` :`1esn`:@usn6)-[`2esn`?:`8esn`|@usn6]-({`4esn`:True Contains .e1 Contains `2esn`}),(#usn8 :`6esn`:`3esn`$#usn7) Union All Optional Match usn2=(`2esn` :`5esn`{`1esn`:$@usn6 Ends With 0.0})<-[`2esn`?*{`3esn`:$@usn5 Is Not Null Is Not Null}]-(:`7esn`{``:9e1[$#usn8],`4esn`:1.e1 Is Null Is Null}) Where $1000 Is Not Null"),
    octest:ct_string("Create ((:`6esn`:`3esn`)) Return Distinct $`2esn` =~$123456789 =~usn2 As #usn7,.e12[..#usn7][..9e12],Null Contains $_usn3 As @usn6 Remove ``:usn1:``,{`5esn`:.12 =~#usn7 =~01,usn2:usn1 Ends With .0 Ends With `4esn`}._usn3!,{@usn6:_usn3[0Xa..]}.`8esn`? Union All Merge (({@usn6:$#usn8[0e0..][07..]})<-[? *12{`1esn`:.e0 Ends With $`1esn` Ends With 1000}]-(@usn5 :usn1:``{usn2:9e0[0..1e1]})) On Match Set Extract(#usn8 In 0x0[_usn4..] Where `8esn`[0x0..]|.e12 Contains `7esn` Contains 999).#usn7 =$#usn8 Contains `5esn` Contains $#usn8 On Match Set `` =1000 Starts With ``,`1esn`(Distinct $`5esn`[`4esn`..$`2esn`],_usn3[..usn2]).@usn6 =$@usn6 Contains 0e0,Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $@usn5 =~$usn2 =~True).usn2? =Filter(`6esn` In 1000[12.e12][#usn7] Where $usn2 Contains $`1esn`) Remove Extract(_usn4 In 12.e12 Is Null Is Null Where 00[0X7..9e12]).usn1!,{#usn8:usn1 Is Null,`8esn`:7 In 1e1}._usn4,[0,`7esn`[_usn4..][Count(*)..]]._usn4!"),
    octest:ct_string("Match (((#usn8 {`4esn`:$`3esn` Is Null})-[#usn8?:usn1|#usn7{`8esn`:$#usn7[`7esn`..][$`8esn`..]}]-(:@usn5{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2})-[`8esn`?:`` *7]->(usn2 :`6esn`:`3esn`{#usn7:$@usn6 Is Not Null,`8esn`:12e12 Ends With $_usn4 Ends With $`2esn`})))"),
    octest:ct_string("Detach Delete (@usn5 :usn2{`3esn`:0.0 Ends With $usn1 Ends With $999,`5esn`:1.e1 Is Null Is Null})-[`3esn`? *0..]->(:`2esn`:@usn5{#usn8:$usn2 Starts With 9e1 Starts With `7esn`})-[:`5esn`|:`1esn`]-(`8esn` :``:`6esn`{#usn7:$`3esn` Is Null}) Is Not Null Is Not Null,(#usn7 {_usn4:`1esn`[$7][0Xa]})<-[:`4esn` *..0X0123456789ABCDEF{`1esn`:0X7[..True][..01234567],``:`1esn`[usn1]}]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})[[#usn8 In 0x0[_usn4..] Where $`8esn`[`7esn`]|$_usn3 Is Not Null]..][{`5esn`:00 Starts With usn1 Starts With Count(*),``:$999 Is Not Null}..] Unwind $#usn7[9e12..12] As #usn8 Unwind Single(`6esn` In 1000[12.e12][#usn7] Where `4esn` In $`2esn` In @usn5)[[`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 123456789[0.0..`2esn`][1.e1..$_usn4]|12e12 Ends With 0e0]..None(_usn4 In 12.e12 Is Null Is Null Where $`4esn` In 0x0)] As @usn6 Union All With  .e0 Is Not Null,01 In $7 In $1000 As #usn7,$0 Starts With `5esn` Starts With 0 Skip .e1[`2esn`..$`8esn`] Where True Return $123456789 =~0e0 As `4esn`,1.e1 =~01234567 Order By (:``:`6esn`{`8esn`:123.654[.e12..\"d_str\"]})<-[_usn3:`3esn`|_usn4]->(_usn3 :`4esn`:usn2) Is Not Null Is Not Null Desc,{_usn4:\"d_str\" Ends With $`3esn`,``:#usn8 =~#usn7 =~0x0}[Single(usn1 In 0xabc Is Not Null Is Not Null Where `7esn`[..01])..{`2esn`:.0[@usn6..]}][[1000[12.e12][#usn7],`` Is Not Null Is Not Null]..None(#usn8 In 0x0[_usn4..] Where `8esn` Ends With $`1esn`)] Descending Merge ``=((`4esn` :``:`6esn`{#usn7:`2esn`[`3esn`..],usn2:$usn2 Starts With $`7esn` Starts With _usn4})<-[`8esn` *0..$12]-(:usn2{usn1:_usn4[.._usn4],@usn6:@usn5 In .e0 In \"d_str\"})-[@usn5:@usn6]-(:`4esn`:usn2{_usn4:`1esn`[$7][0Xa]})) On Match Set `1esn`+=Extract(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0|0[_usn3][.12]) Starts With (#usn8 :`8esn`)<-[`2esn`?:`3esn`|_usn4]-(#usn7 :`7esn`{`3esn`:$#usn8[..123456789][..`2esn`],#usn8:0.e0 Ends With #usn8})-[:`5esn`|:`1esn`]-(@usn5 :`5esn`),None(`3esn` In False In $`2esn` In 1e1 Where 01 Starts With $`5esn` Starts With 01234567)._usn3? =[`6esn` In 1000[12.e12][#usn7] Where 0X0123456789ABCDEF Is Not Null] Is Null Union All Return Distinct 7 Contains 1000 Contains $usn1,usn2 Contains 07 Contains False As _usn4,{#usn8:.e0 Ends With $`1esn` Ends With 1000}[Filter(#usn8 In 07['s_str'][$@usn6] Where $12[0.0..])][Filter(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..])] Order By $#usn7[123456789..][$`4esn`..] Asc Limit #usn8[..0X0123456789ABCDEF][...0] Return Distinct $usn1[usn1..$`8esn`][12e12..$``] As usn1 Order By $`3esn`[0.12..][$@usn5..] Asc,(`5esn` :`2esn`:@usn5{usn2:$`6esn` Starts With usn1,``:123456789 =~@usn5 =~$`5esn`})-[{#usn8:999}]-(:usn1:``{_usn3:123.654 Is Not Null Is Not Null}) =~{`6esn`:9e1[..01234567][..`4esn`]} =~None(`6esn` In 1000[12.e12][#usn7] Where 0X0123456789ABCDEF Is Not Null) Ascending Skip 0X0123456789ABCDEF Is Not Null Limit $`6esn` Is Null Is Null"),
    octest:ct_string("Delete 0.12[$usn1..$7]"),
    octest:ct_string("Create ((`7esn` {@usn6:.e0[123456789..][$`2esn`..],``:$0[`5esn`][9e12]})-[:`1esn`|@usn6 *0..{``:$`4esn` In 0x0}]-(:_usn3:@usn5{_usn3:.e0[$`1esn`..][_usn4..]})<-[?:#usn8|:`6esn`*]->(@usn6 :@usn5{`8esn`:$@usn6 Contains 0e0})),((:`8esn`$`1esn`)-[ *..010]-({@usn6:`5esn`[0e0..],_usn4:$#usn8[0xabc..usn2]})<-[usn2?:`7esn`{``:`5esn`[usn1]}]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]})) Unwind Extract(_usn4 In 12.e12 Is Null Is Null Where _usn4 In .0 In .12|usn2 In 1e1 In `4esn`) Contains None(`3esn` In @usn6[..\"d_str\"][..01] Where `4esn` In .12 In $#usn8) Contains Filter(`5esn` In $usn2 Contains $`1esn` Where usn2[Count(*)][$`1esn`]) As usn1"),
    octest:ct_string("With  $123456789 =~0e0 As `4esn`,1.e1 =~01234567 Order By (:``:`6esn`{`8esn`:123.654[.e12..\"d_str\"]})<-[_usn3:`3esn`|_usn4]->(_usn3 :`4esn`:usn2) Is Not Null Is Not Null Desc,{_usn4:\"d_str\" Ends With $`3esn`,``:#usn8 =~#usn7 =~0x0}[Single(usn1 In 0xabc Is Not Null Is Not Null Where `7esn`[..01])..{`2esn`:.0[@usn6..]}][[1000[12.e12][#usn7],`` Is Not Null Is Not Null]..None(#usn8 In 0x0[_usn4..] Where `8esn` Ends With $`1esn`)] Descending"),
    octest:ct_string("Remove [00[0X7..9e12]].`5esn`? Union Merge (:`7esn`{_usn3:01[$0]})<-[{usn1:0.e0 =~01234567 =~01234567,``:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}]-(`2esn` {_usn3:0[1e1..00]})-[_usn3:_usn3|`6esn`]->({usn2:0[1e1..00],@usn6:$`6esn`[.e12..$`6esn`][$#usn7...0]}) On Create Set `` =usn1[..$123456789][..`1esn`],None(`7esn` In $`8esn`[0.12][12] Where 0Xa[..9e12][...e0]).`2esn`? =$0[$1000..][_usn4..]"),
    octest:ct_string("With Distinct (_usn4 :_usn3:@usn5)<-[@usn6:`8esn`|@usn6{@usn6:#usn8 =~#usn7 =~0x0,`7esn`:$usn1 Ends With $`2esn`}]->(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[?:`6esn`]->(`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})[Any(`5esn` In $usn2 Contains $`1esn` Where @usn6[$usn1][$`2esn`])..][None(`3esn` In False In $`2esn` In 1e1 Where True Contains $`` Contains 01234567)..] As ``,.e1[123.654..] Union Remove Any(`7esn` In $`8esn`[0.12][12] Where `5esn`[12.0]).`5esn`"),
    octest:ct_string("Unwind Extract(`3esn` In 999 Where $`3esn`[9e0..0.0][_usn4..123456789]|$@usn6 Is Null) Ends With [@usn5 Is Null] Ends With [usn1 In 999 Where `4esn` Is Null Is Null|$123456789[`1esn`..]] As `7esn` Union All Optional Match `7esn`=((`6esn` {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})),`3esn`=(:`4esn`:usn2$``) Where $123456789[..`3esn`][..`7esn`] Remove All(`6esn` In 1000[12.e12][#usn7] Where $`2esn` Starts With 9e12).@usn5?,({@usn5:$usn1 Ends With $`2esn`})<-[?:`8esn`|@usn6*{``:0.e0 Contains $123456789 Contains 123456789,`4esn`:#usn7 Is Not Null Is Not Null}]-(`4esn` :``:`6esn`{#usn7:`2esn`[`3esn`..],usn2:$usn2 Starts With $`7esn` Starts With _usn4}).#usn8? Delete `4esn`,(_usn3 {usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`4esn`:1.e1 Is Null Is Null})-[`1esn`?:`1esn`|@usn6 *12]->(`8esn` :@usn6) Is Null Is Null Union All Create (:#usn7{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})<-[?:@usn6 *07{_usn3:$`1esn` Is Null}]-(`5esn` {`5esn`:#usn8 Is Not Null,`1esn`:01234567[`6esn`..]})<-[`7esn`:@usn5|:@usn6]->({_usn4:`7esn`[_usn4..][Count(*)..],`1esn`:01234567 In \"d_str\"}),(#usn8 :_usn4{`6esn`:9e1[..01234567][..`4esn`]})-[`7esn`?:``]->(@usn6 {`1esn`:$#usn8 Starts With usn2 Starts With .12,@usn6:07[$`8esn`]})<-[usn1?:@usn6{`5esn`:$7[$12],`6esn`:#usn8 Is Not Null}]-({#usn7:1e1[`3esn`]})"),
    octest:ct_string("Return Distinct *,[`3esn` In False In $`2esn` In 1e1 Where `` Contains 010 Contains $1000|1000[12.e12][#usn7]] In [`3esn` In 999 Where `7esn` Is Null|$#usn8[0e0..][07..]] In Single(`5esn` In 1e1 =~$`8esn` =~`1esn` Where `8esn` Starts With $12 Starts With $1000),0X7[..`5esn`][..$`7esn`] As `5esn` Order By None(`3esn` In 999 Where 0.e0 Ends With #usn8)[..{usn1:$`2esn` Is Not Null Is Not Null,``:True Ends With `6esn` Ends With 9e0}][..{_usn4:usn2[9e0..0.e0][@usn5..`4esn`],_usn4:.e0['s_str'..][$`8esn`..]}] Desc,Extract(`3esn` In 999 Where $`3esn`[9e0..0.0][_usn4..123456789]|$@usn6 Is Null) Ends With [@usn5 Is Null] Ends With [usn1 In 999 Where `4esn` Is Null Is Null|$123456789[`1esn`..]] Desc Skip `` In usn1 In 01234567 Limit 010[0e0][0xabc]"),
    octest:ct_string("Merge (({usn2:$`3esn`[9e0..0.0][_usn4..123456789]})) On Create Set usn2+=[`3esn` In 999 Where 0 Contains $@usn5] Starts With {usn1:$usn1 Starts With Null Starts With $``,@usn5:0x0[01234567..Null][0Xa...e12]} Starts With {usn1:$`2esn` Is Not Null Is Not Null,``:True Ends With `6esn` Ends With 9e0},#usn8+=`4esn` Ends With $12 Ends With 0.e0,_usn4+=01234567 Contains 0.12 Contains `5esn` On Create Set _usn3 =[@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`],12e12 Ends With $_usn4 Ends With $`2esn`][Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where _usn4[.._usn4])][$@usn5],`3esn` =.e1 =~\"d_str\" =~'s_str' Unwind $`5esn` Ends With `6esn` Ends With 0x0 As `` Union All With  01[#usn8..1000] As `5esn`,\"d_str\"[0X7..``][@usn5.._usn4] As _usn3,Extract(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1|$`2esn` Is Not Null Is Not Null) =~[`7esn`[..01],1e1 =~$`8esn` =~`1esn`,$`6esn`[.e12..$`6esn`][$#usn7...0]] Order By [#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]][Filter(`2esn` In $``[$#usn8] Where 01234567[`6esn`..])..][[`3esn` In False In $`2esn` In 1e1 Where .12 =~$#usn7 =~$``|01234567 Is Null]..] Ascending,(`` :`8esn`{`5esn`:True Contains .e1 Contains `2esn`})-[@usn6:@usn6 *7]->(`2esn` :_usn4{_usn4:$`8esn` Contains .0 Contains 0.12})<-[? *01234567..123456789]->(:`3esn`{`7esn`:$123456789[`4esn`..]}) Starts With (:#usn8:#usn7{`6esn`:`5esn`[12.0]})-[`5esn`?:usn2|:``{usn2:1000 Starts With 0e0 Starts With 0,`6esn`:9e1[$`3esn`][$`1esn`]}]->(#usn7 :`7esn`)-[:@usn5|:@usn6 *07]-(@usn5 :`1esn`:@usn6{@usn5:`4esn` Is Not Null,`3esn`:.e1 =~usn2 =~`7esn`}) Starts With {`4esn`:`8esn` Is Not Null} Desc Skip $`8esn`[0.12][12] Limit $7 =~`4esn` =~$7 Match _usn3=(#usn8 :`7esn`)-[:#usn8|:`6esn`{#usn8:0X7[..`5esn`][..$`7esn`]}]->(`2esn` :@usn6),#usn8=((usn1 {_usn3:#usn7 Ends With 0.12})<-[?:@usn6 *07{_usn3:$`1esn` Is Null}]-(`5esn` {`5esn`:#usn8 Is Not Null,`1esn`:01234567[`6esn`..]})<-[*]->(usn1 :`1esn`:@usn6{`2esn`:$123456789[..$usn2],_usn4:0X0123456789ABCDEF In _usn3})) Match @usn6=(usn2 )<-[? *..0X0123456789ABCDEF{usn2:123456789 Ends With 9e1 Ends With ``,`3esn`:9e0[123456789..0][12.0..@usn6]}]-({``:0.12 Contains 0x0 Contains @usn5}) Where 01 Starts With $`5esn` Starts With 01234567"),
    octest:ct_string("Merge (#usn7 {_usn4:`1esn`[$7][0Xa]})-[``{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null}]->(#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]})-[``:@usn6{`3esn`:.e12[$_usn4..0],usn1:00[$0..usn2][$_usn4..$999]}]-({``:_usn3[9e0..$123456789][0X7..999]}) On Match Set @usn5+=`2esn`(Distinct 01234567[`6esn`..],Count(*) Ends With $#usn8 Ends With 0Xa)[..All(_usn4 In 12.e12 Is Null Is Null Where 0e0 =~False =~.12)][..Filter(`7esn` In $`8esn`[0.12][12] Where 9e0[123456789..0][12.0..@usn6])],{@usn6:0[1e1..00],`2esn`:1000 Starts With 0x0}.@usn5 =7[$1000][1000],_usn4 =Extract(`6esn` In .e0['s_str'..][$`8esn`..] Where `6esn` In $``) In Extract(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where .e12 =~@usn5|9e0[$@usn6]) In Filter(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 1000 Starts With ``) Union All Merge usn1=(@usn5 :usn1:``{usn2:9e0[0..1e1]})<-[#usn8?:`5esn`|:`1esn`{`8esn`:.12 Is Not Null,_usn3:Count(*) In $`2esn`}]-({`1esn`:1e1 Starts With 010}) On Create Set `` =usn1[..$123456789][..`1esn`],None(`7esn` In $`8esn`[0.12][12] Where 0Xa[..9e12][...e0]).`2esn`? =$0[$1000..][_usn4..] Optional Match #usn8=((#usn7 {usn2:$#usn8 In True In #usn7})-[`6esn` *00]->(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})) Delete (`6esn` :`8esn`{usn2:#usn7 In #usn7,`1esn`:00['s_str']})<-[``?:@usn6]-(:`2esn`:@usn5{usn2:$`3esn` Ends With @usn6 Ends With 123.654})<-[@usn5?:@usn6 *..010]->(#usn7 :#usn7{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2}) Is Null,Extract(`2esn` In $``[$#usn8] Where 01 Starts With $`5esn` Starts With 01234567) Contains Extract(`2esn` In $``[$#usn8] Where $`2esn`[.._usn3]|@usn5 In .e0 In \"d_str\") Contains None(`3esn` In 999 Where 07 Ends With $_usn4 Ends With 0.e0),$`2esn` Ends With `5esn` Ends With 0"),
    octest:ct_string("Match #usn7=(`7esn` {`2esn`:1.e1[#usn7][1.e1]})<-[:`5esn`|:`1esn`{#usn8:`7esn` Is Null,`4esn`:False[$12]}]->(`8esn` :`3esn`{`2esn`:$`8esn`[`7esn`],`4esn`:#usn8[1e1..]})<-[#usn8:@usn6]-(:_usn4{@usn6:'s_str' Contains 999}) Where 0.0[`7esn`][`6esn`] Union All Optional Match ((:@usn5{usn1:12.e12 Is Null Is Null,``:Null Is Not Null Is Not Null})-[? *..0x0{`1esn`:`4esn` Starts With `8esn`}]->(`2esn` {_usn3:.e1 Ends With $123456789})<-[`2esn`?:`6esn` *0xabc..]-(_usn4 {`2esn`:1.e1 Is Not Null Is Not Null})),@usn5=(({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})-[`4esn`?:usn1|#usn7{`1esn`:123456789 Ends With 9e1 Ends With ``,@usn5:0xabc Contains 0}]-(`7esn` :@usn6)) Remove None(#usn8 In 0x0[_usn4..] Where `8esn`[12.e12][`4esn`]).#usn7? Remove Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where `4esn` In $`2esn` In @usn5)._usn3,[`3esn` In 999 Where $`5esn`[.e1][#usn8]].`3esn`?"),
    octest:ct_string("Merge (((:usn1:``)<-[:@usn5|:@usn6 *01234567..123456789]->(`1esn` :`7esn`{`6esn`:1e1 In 12.e12})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`1esn` {`6esn`:07}))) On Match Set All(#usn8 In 07['s_str'][$@usn6]).#usn7! =$999[0xabc..],#usn8+=7[usn1][$7] On Match Set Any(_usn4 In 12.e12 Is Null Is Null Where 0x0[$`2esn`..'s_str'][$@usn5..1.e1]).`1esn`! =`` In False In True,_usn3(0[1e1..00]).``! =`7esn` Contains .0 Contains #usn8 Merge _usn3=(((usn2 :@usn6)-[{usn1:Count(*)[..12][..$999],#usn8:usn1 In 010}]->(`1esn` :`8esn`)<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]-(@usn6 :``:`6esn`))) On Create Set `1esn`+=usn2[Count(*)][$`1esn`] Merge ``=(_usn4 )-[ *0xabc..{``:0xabc =~01,`7esn`:$#usn7[123456789..][$`4esn`..]}]-({#usn7:1e1[`3esn`]}) On Create Set {`4esn`:Count(*)[..$_usn3][..$usn2]}.@usn5 =Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0]|.0 =~$@usn5 =~1.e1)[({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`4esn` :``:`6esn`)<-[_usn3:@usn6]->({@usn6:`5esn` Ends With $999})..],#usn7 =({`7esn`:`4esn` In $`2esn` In @usn5})-[:`1esn`|@usn6*..]->(:`8esn`{`8esn`:0X7 Contains 12.0,`3esn`:`4esn` Starts With `8esn`})<-[`4esn` *123456789..]-(:`7esn`$#usn8)[#usn7($123456789[`1esn`..][`7esn`..],$123456789 =~0e0)][[usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1]],`` =0.0 =~0 =~`` On Create Set Filter(`6esn` In .e0['s_str'..][$`8esn`..] Where $123456789[..`3esn`][..`7esn`]).`8esn`? =_usn3 Is Not Null,`3esn` =$`4esn`,`2esn`+=`7esn`(Distinct 0X0123456789ABCDEF) Is Not Null Is Not Null Union All Unwind $usn2['s_str'..usn1] As `` Return Distinct $7[..$``] As ``,Any(`7esn` In $`8esn`[0.12][12] Where usn1 In 010) As `6esn` Skip 01234567[01234567][.e12] Limit {`8esn`:Count(*) Is Null Is Null,@usn5:.e0 Ends With $`1esn` Ends With 1000} Is Not Null Remove None(usn1 In 0xabc Is Not Null Is Not Null Where 0x0[$7..][`7esn`..]).``!,Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where $`6esn`[$0])._usn4?,[$`3esn` Is Null,.12[usn1]].`6esn`?"),
    octest:ct_string("Match ``=(`` :#usn8:#usn7{@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]}) Union Remove {_usn3:7 Contains 1000 Contains $usn1}.usn1?,All(`5esn` In $usn2 Contains $`1esn` Where `2esn` Contains `3esn` Contains $@usn5).#usn8?,{``:9e0 Is Null Is Null,`3esn`:.0[@usn6..]}.usn2!"),
    octest:ct_string("Delete 0e0[$123456789..$999][\"d_str\"..Null],0X7 Contains $@usn6 Merge `5esn`=(:`1esn`:@usn6{`7esn`:00['s_str'],#usn8:$`7esn`[`2esn`]})<-[usn2?:#usn8|:`6esn` *7]-(:`2esn`:@usn5{#usn8:0.e0 Contains @usn5 Contains 0X7,`5esn`:0x0[9e0..]})<-[@usn5:#usn8|:`6esn`]->(`7esn` :_usn3:@usn5{_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null}) On Create Set usn2 =0x0[01234567..Null][0Xa...e12],{#usn8:#usn7[@usn6..]}.@usn6 =#usn7[False..][123.654..] On Create Set `` =usn1[..$123456789][..`1esn`],None(`7esn` In $`8esn`[0.12][12] Where 0Xa[..9e12][...e0]).`2esn`? =$0[$1000..][_usn4..] Union All Remove [1000[Null][$`7esn`],12e12 Ends With 0 Ends With $@usn6].`4esn`!,Extract(`3esn` In @usn6[..\"d_str\"][..01] Where .e0[..$`5esn`][..``]|$#usn8 Starts With usn2 Starts With .12).usn2? Union Match ((#usn8 :_usn3:@usn5{`3esn`:@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`],`4esn`:0e0 Is Null}))"),
    octest:ct_string("Remove {`8esn`:'s_str'[$#usn8]}.#usn8!,Extract(_usn4 In 12.e12 Is Null Is Null Where `2esn` Is Null Is Null).usn1? Detach Delete `6esn` Contains \"d_str\" Contains 0X7 Detach Delete #usn7 Ends With 9e0,(`2esn` {_usn3:.e1 Ends With $123456789})<-[?{usn2:9e0[0..1e1]}]->({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})[(`3esn` {`3esn`:@usn5[$`1esn`..][$7..]})-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->(`6esn` {`7esn`:12e12 Ends With 0e0,`8esn`:$_usn4[False..@usn6][`4esn`..$1000]})..[`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0X0123456789ABCDEF In _usn3|0.12[123456789..]]][(_usn4 :`8esn`)-[?:_usn4|_usn3]->(:_usn3:@usn5{`6esn`:$`8esn` Ends With #usn8,`8esn`:123456789 Ends With 9e1 Ends With ``})-[`4esn`?:#usn8|:`6esn` *999{`8esn`:010[`1esn`..`4esn`]}]-({@usn5:07[0..],`8esn`:Count(*)[..$_usn3][..$usn2]})..None(usn1 In 123.654 =~.e0 =~9e0 Where $123456789[`3esn`..`5esn`][1e1..$`5esn`])]"),
    octest:ct_string("Optional Match (`8esn` {usn2:\"d_str\"[1.e1][01234567]})<-[_usn4?:_usn3|`6esn` *..0X0123456789ABCDEF]->(usn1 :`3esn`{`4esn`:$123456789 =~usn1 =~0xabc,`7esn`:999 Is Not Null})-[?:`8esn`|@usn6*{``:0.e0 Contains $123456789 Contains 123456789,`4esn`:#usn7 Is Not Null Is Not Null}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]}),usn2=(`5esn` :`2esn`:@usn5{usn2:$`6esn` Starts With usn1,``:123456789 =~@usn5 =~$`5esn`})<-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}) Where 0 Contains $@usn5 With  [$999[9e0..010][999..010],12e12 Ends With $_usn4 Ends With $`2esn`][None(_usn4 In 12.e12 Is Null Is Null Where $`4esn` In 0x0)..],`7esn`(Distinct Count(*)[$1000..01],`7esn`[`8esn`][#usn7]) Is Not Null As @usn6 Order By @usn6 Starts With .e0 Starts With .e12 Desc,0.e0[$usn2..$@usn5] Desc Limit [.12 Is Not Null,00[01234567][Count(*)]] =~Filter(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 's_str'[$#usn8]) Create (((`5esn` :`2esn`:@usn5{usn2:$`6esn` Starts With usn1,``:123456789 =~@usn5 =~$`5esn`})-[`1esn`?:`3esn`|_usn4*..]->($`8esn`)<-[:#usn7|`5esn`*{`8esn`:01[$0],``:0xabc Is Not Null Is Not Null}]-(`1esn` {#usn7:$`7esn`[`2esn`]}))) Union All Unwind 0X7 Contains 12.0 As `3esn`"),
    octest:ct_string("With  _usn4[#usn7..#usn8] Order By $#usn8 In `` Desc Limit @usn6(Distinct 0xabc Contains 0)[{_usn4:$`2esn` Ends With 1e1}..][All(_usn4 In 12.e12 Is Null Is Null Where 0e0 =~False =~.12)..] Where 7 Starts With $@usn6 Unwind 0 Is Null Is Null As `` With  *,.e1[0X7..`2esn`],Filter(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $usn2[12.0..][`8esn`..]) Ends With [usn1[..$123456789][..`1esn`],0e0 Is Not Null] Ends With [0 Contains $@usn5,False Contains $`1esn` Contains @usn6] Skip $#usn8 Starts With usn2 Starts With .12 Where .12 =~$#usn7 =~$`` Union Detach Delete Single(`5esn` In $usn2 Contains $`1esn` Where 0e0['s_str']) =~{`2esn`:`4esn` Starts With $#usn8 Starts With $#usn8} Optional Match usn1=((({`5esn`:0.0 Starts With Null Starts With .e12})-[{`5esn`:0.e0 =~01234567 =~01234567}]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]})<-[`5esn`?:`1esn`|@usn6{`5esn`:#usn8 =~$1000 =~$1000,`2esn`:0x0[$7]}]-(_usn4 {`1esn`:$usn2 =~`6esn` =~`1esn`}))),`1esn`=(({``:1e1 Ends With 's_str' Ends With $@usn6,`5esn`:$`5esn` Is Not Null})<-[?:usn2|:``]->(:`6esn`:`3esn`{_usn3:00['s_str'],`5esn`:$`` Is Not Null Is Not Null})<-[? *..0x0{`1esn`:`4esn` Starts With `8esn`}]->(`4esn` {`5esn`:$0[`5esn`][9e12],``:#usn7[False..][123.654..]})) Unwind #usn7 Starts With 's_str' Starts With usn2 As usn2 Union All With  0.e0[.e12],$123456789 Is Null Is Null,$@usn6[$#usn8..$999][Count(*)..usn1] As @usn6 Order By 07 In Count(*) Descending,07 =~0.e0 Descending,(@usn5 :usn2{`3esn`:0.0 Ends With $usn1 Ends With $999,`5esn`:1.e1 Is Null Is Null})-[`3esn`? *0..]->(:`2esn`:@usn5{#usn8:$usn2 Starts With 9e1 Starts With `7esn`})-[:`5esn`|:`1esn`]-(`8esn` :``:`6esn`{#usn7:$`3esn` Is Null}) Is Not Null Is Not Null Ascending Skip 0X0123456789ABCDEF In _usn3 Unwind 0.12[_usn3] As `2esn` Remove (`6esn` {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})<-[`2esn`?:`3esn`|_usn4]-(@usn5 :`5esn`)<-[:@usn5|:@usn6 *01234567..123456789]->(`1esn` :`7esn`{`6esn`:1e1 In 12.e12}).#usn7"),
    octest:ct_string("Create `5esn`=((`` :usn1:``{#usn7:$123456789[`4esn`..]})),((`` {``:0.12 Contains 0x0 Contains @usn5})) Create `4esn`=(`7esn` {`8esn`:Count(*) Is Null Is Null,@usn5:.e0 Ends With $`1esn` Ends With 1000})<-[`8esn`?:@usn6 *999]->(:#usn8:#usn7{`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]})<-[@usn5:`7esn`{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null}) Create `3esn`=((#usn7 {#usn7:999 Contains $`7esn` Contains usn2})<-[?:`7esn`]-(@usn5 :@usn6{`5esn`:#usn8 Is Not Null,`1esn`:01234567[`6esn`..]})-[`1esn`{usn1:00['s_str'],#usn8:$`8esn`[``..True][1000..0.12]}]->(usn1 :#usn8:#usn7)) Union Unwind [`6esn` In 1000[12.e12][#usn7] Where 12.0[9e12]['s_str']|0.e0 =~01234567 =~01234567] Ends With Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $`8esn`[0.12][12]) Ends With count(1000[Null][$`7esn`],$123456789[`3esn`..`5esn`][1e1..$`5esn`]) As `1esn` Detach Delete [`3esn` In @usn6[..\"d_str\"][..01] Where `2esn` Is Null Is Null] Starts With Extract(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where .12 Is Null),$`8esn`[0.12][12],All(`7esn` In $`8esn`[0.12][12] Where @usn5[..$999][..$0])[..({usn2:1000 Starts With 0e0 Starts With 0,`6esn`:9e1[$`3esn`][$`1esn`]})<-[`3esn`:_usn3|`6esn`]->(usn1 :#usn8:#usn7)] Unwind {`3esn`:'s_str'[$`6esn`..][$0..]}[[`5esn` Ends With 0x0,.0 =~$@usn5 =~1.e1]][{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}] As _usn4"),
    octest:ct_string("Unwind {`7esn`:00['s_str'],#usn8:$`7esn`[`2esn`]} Is Null As #usn7 Union With Distinct Null Contains $_usn3 As `4esn` Skip Any(#usn8 In 07['s_str'][$@usn6] Where $@usn6 Ends With 0.0) Starts With Extract(#usn8 In 07['s_str'][$@usn6] Where 010[`1esn`..`4esn`]) Starts With (#usn8 :`6esn`:`3esn`)<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(`4esn` :`5esn`)"),
    octest:ct_string("Merge (_usn4 {`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})-[`2esn`?:`7esn` *0X7..0x0]->({_usn4:`7esn`[_usn4..][Count(*)..],`1esn`:01234567 In \"d_str\"})<-[@usn6?{usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`4esn`:1.e1 Is Null Is Null}]->(`3esn` :`2esn`:@usn5{`1esn`:#usn8 =~#usn7 =~0x0,_usn4:01[$0]}) Optional Match `8esn`=((`1esn` :`7esn`{`6esn`:1e1 In 12.e12})<-[:#usn7|`5esn`*{`8esn`:01[$0],``:0xabc Is Not Null Is Not Null}]-(_usn3 :`7esn`{#usn7:123.654 =~.e0 =~9e0,_usn3:`1esn`[Null..]})<-[`5esn` *0Xa]-(:usn1:``)),((`6esn` :`2esn`:@usn5)) Where `` In usn1 In 01234567 Union All Match _usn3=((:`5esn`{`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})) Merge `6esn`=((`6esn` {`7esn`:`4esn` In $`2esn` In @usn5})-[:@usn5|:@usn6 *01234567..123456789]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null})) On Create Set #usn7 =$usn1[12e12],usn2 ={`5esn`:@usn6[$usn1][$`2esn`],`1esn`:12.0[9e12]['s_str']}[Extract(`2esn` In $``[$#usn8] Where 12e12 Ends With $_usn4 Ends With $`2esn`|.12 =~$#usn7 =~$``)][[12.0[`3esn`][_usn3]]],_usn4 =`3esn`($usn2 Starts With $`7esn` Starts With _usn4) Is Not Null Is Not Null On Create Set `2esn`:``:`6esn`,Extract(`6esn` In 0x0[9e0..] Where `7esn`[`8esn`][#usn7]|`8esn` Ends With $`1esn`).`1esn`? =1.e1 =~01234567,{@usn6:$123456789[12.0],#usn7:usn1 =~_usn4 =~$usn1}.`8esn`! =@usn6(Distinct $0 Contains 7 Contains 1.e1)[(_usn4 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8)][Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0X0123456789ABCDEF In _usn3)] Union Create _usn3=(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})<-[``{#usn7:$`2esn` =~False,``:12e12[..9e12][..$@usn6]}]-(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010}) Unwind 12.0 Is Null As usn2"),
    octest:ct_string("With  9e1 Contains _usn3 Order By {`3esn`:.0 =~$@usn5 =~1.e1} =~Extract(_usn4 In 12.e12 Is Null Is Null Where $_usn4[False..@usn6][`4esn`..$1000]) Ascending,@usn6(`4esn` Starts With $#usn8 Starts With $#usn8,.e1 =~usn2 =~`7esn`)[..{`2esn`:Count(*) Contains 12e12 Contains 0xabc}][..Extract(#usn8 In 0x0[_usn4..] Where 0xabc[123.654][12]|$`6esn` Is Not Null)] Ascending,Any(`2esn` In $``[$#usn8] Where $`2esn`[.._usn3])[[`6esn` In .e0['s_str'..][$`8esn`..] Where $@usn5 =~$usn2 =~True|.e0[$`1esn`..][_usn4..]]..`8esn`] Asc Skip 0X0123456789ABCDEF Limit 00 In 1000 Where $#usn8[0xabc..usn2] Union Optional Match @usn5=(`` :#usn8:#usn7{usn1:7 Ends With `3esn` Ends With $`2esn`})-[`6esn` *00]->(`` :`5esn`),((#usn8 :_usn3:@usn5{`3esn`:@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`],`4esn`:0e0 Is Null})) Where 01[..0X7] With  (@usn5 {`1esn`:0xabc[123.654][12]})-[:#usn8|:`6esn`{#usn8:0X7[..`5esn`][..$`7esn`]}]->(`2esn` :@usn6)-[`5esn`?:`7esn`]-({@usn6:'s_str' Ends With $7}) Ends With All(usn1 In 999 Where @usn6 Ends With 0.12 Ends With `3esn`) As #usn7,$#usn8[.e1][`2esn`] As @usn5 Skip 0X7[..`5esn`][..$`7esn`] Remove (:_usn3:@usn5{`4esn`:9e0[$@usn6]})-[`1esn`?:`3esn`|_usn4*..]->($`8esn`)-[@usn6 *00]->(`4esn` {_usn4:$`2esn`[$``..12e12]}).#usn7?,Single(`3esn` In 999 Where `7esn`[`8esn`][#usn7]).#usn7,Any(_usn4 In 12.e12 Is Null Is Null Where True =~0 =~123456789).`7esn` Union All Merge (#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})<-[?:usn1|#usn7$_usn4]->(`8esn` :``:`6esn`) Create #usn8=(`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]})-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->($@usn6)<-[`8esn`?:usn1|#usn7 *01..7{usn1:123456789[$_usn4..]}]-(@usn5 :`2esn`:@usn5$#usn8)"),
    octest:ct_string("Merge `1esn`=(((_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[`7esn`?:`2esn`|:`7esn`]->(`3esn` {#usn8:#usn7 =~$`8esn`})-[ *07{`1esn`:$``}]->(`1esn` :usn1:``))) Union Match ({@usn6:#usn8 =~#usn7 =~0x0,`7esn`:$usn1 Ends With $`2esn`})<-[?:usn1|#usn7 *0Xa]->(:`3esn`{`7esn`:12.e12[.12..$_usn3][0e0..9e0],`7esn`:0X7[..True][..01234567]}),((`4esn` {_usn4:$`2esn`[$``..12e12]})<-[`1esn`?:`3esn`|_usn4{_usn4:12e12 Ends With $_usn4 Ends With $`2esn`,``:.12 Is Not Null}]-(:`1esn`:@usn6{`5esn`:.e12[$_usn4..0],`4esn`:$#usn8 In True In #usn7})<-[?:usn1|#usn7 *0Xa]->(`1esn` :usn2{`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]}))"),
    octest:ct_string("Remove @usn6(Distinct _usn4[$`8esn`.._usn3][.0..$@usn6],0X7[..$0][..0.12]).`5esn`?,Any(`3esn` In False In $`2esn` In 1e1 Where 01[$0])._usn3?,Extract(`2esn` In $``[$#usn8] Where \"d_str\" Starts With _usn4 Starts With $_usn4).`4esn`? Detach Delete {`8esn`:#usn8 =~#usn7 =~0x0} Starts With Single(`5esn` In 1e1 =~$`8esn` =~`1esn` Where `8esn` Starts With $12 Starts With $1000) Starts With All(`3esn` In False In $`2esn` In 1e1 Where 's_str'[$#usn8]),Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 123.654 Is Not Null Is Not Null)[{usn1:$7[$12]}][Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where \"d_str\"[..$_usn3])] Union Create `1esn`=(`` :``:`6esn`{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]}),`5esn`=(((`6esn` {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})<-[`5esn`:_usn4|_usn3 *0X7..0x0]-(#usn7 {`5esn`:00 Starts With usn1 Starts With Count(*),``:$999 Is Not Null})<-[`4esn` *123456789..]-(:`7esn`$#usn8))) Create (:`7esn`$#usn8)-[`3esn`? *12{@usn5:$#usn8[..123456789][..`2esn`],#usn7:12.0[..0X7]}]-(:`7esn`{@usn6:`2esn`[``..]})<-[``?:#usn8|:`6esn`{usn1:$#usn7[..$999][..9e1]}]->(`1esn` :`4esn`:usn2),#usn8=((`8esn` :#usn7))"),
    octest:ct_string("Merge (((#usn8 :`3esn`)<-[? *..0X0123456789ABCDEF{usn2:123456789 Ends With 9e1 Ends With ``,`3esn`:9e0[123456789..0][12.0..@usn6]}]-(@usn6 $_usn3)<-[``?:#usn8|:`6esn`{usn1:$#usn7[..$999][..9e1]}]->(`3esn` {#usn8:True[7][``]}))) On Match Set {`8esn`:$@usn6 Is Null}.@usn6 =\"d_str\" Is Not Null,#usn7+=[`7esn` In $`8esn`[0.12][12] Where 9e0[123456789..0][12.0..@usn6]|`4esn`[$#usn7][$#usn7]] Is Not Null Is Not Null On Create Set @usn5 =0.e0[$usn2..$@usn5] Union All Unwind `7esn` Is Not Null Is Not Null As #usn8 Merge ((:`4esn`:usn2$`7esn`)-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-({@usn6:`5esn` Ends With $999})<-[`8esn`?:@usn6 *999]->(:#usn8:#usn7{`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]})) On Create Set {_usn3:0Xa[..$`2esn`][..00]}.`5esn`? =[`6esn` In 1000[12.e12][#usn7] Where 12.0[9e12]['s_str']|0.e0 =~01234567 =~01234567] Ends With Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $`8esn`[0.12][12]) Ends With count(1000[Null][$`7esn`],$123456789[`3esn`..`5esn`][1e1..$`5esn`]),[#usn8 In 07['s_str'][$@usn6] Where True|0e0 Starts With $@usn6 Starts With $7].`4esn` =1000 Ends With 01234567 Ends With usn1 On Match Set `8esn`+=$`4esn` In 0x0,@usn6+=$`1esn` =~`1esn` =~0X0123456789ABCDEF Unwind $`4esn`[$@usn5..`7esn`] As @usn5 Union Match _usn3=((`7esn` )<-[`5esn`? *..0x0{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]-(`6esn` :@usn6)) Return Distinct [0Xa[..$`2esn`][..00]] Starts With (@usn6 )-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(:`7esn`{`2esn`:.e12 Is Not Null Is Not Null,`4esn`:_usn4[1000..``]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`6esn` ),00[01234567][Count(*)] As #usn7 Order By 7 In 1e1 Ascending,(`2esn` {_usn3:.e1 Ends With $123456789})<-[?{usn2:9e0[0..1e1]}]->({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})[Any(`6esn` In .e0['s_str'..][$`8esn`..] Where Null In 0xabc)..Filter(usn1 In 123.654 =~.e0 =~9e0 Where Count(*) Contains 12e12 Contains 0xabc)][[$`` Is Not Null Is Not Null,$#usn7[9e12..12],`7esn` Is Null Is Null]..Extract(`5esn` In $usn2 Contains $`1esn` Where \"d_str\" Contains $999 Contains `2esn`|.e12[``][$1000])] Asc,$7 Contains `2esn` Contains .0 Desc Limit $7[$12]"),
    octest:ct_string("Merge (`4esn` {@usn6:_usn4[$`8esn`.._usn3][.0..$@usn6]})<-[@usn5?:_usn4|_usn3 *1000..01234567]->({@usn6:$#usn8[0e0..][07..]})<-[@usn5?:usn2|:``*..]->(`7esn` {#usn7:1e1[`3esn`]}) Match #usn8=((`` :usn2)<-[_usn4?:`3esn`|_usn4 *7]-(`5esn` :usn1:``)) Create #usn8=((usn1 {@usn5:12e12 Ends With `6esn`,_usn4:\"d_str\" Starts With _usn4 Starts With $_usn4})-[`1esn`?]->(:#usn7{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})),((`8esn` :`4esn`:usn2{`5esn`:$0[`5esn`][9e12],``:#usn7[False..][123.654..]})-[:`5esn`|:`1esn`]-(`3esn` :`7esn`$`6esn`)-[`1esn`?:`3esn`|_usn4*..]->(_usn3 ))"),
    octest:ct_string("Remove Extract(`2esn` In $``[$#usn8] Where \"d_str\" Starts With _usn4 Starts With $_usn4).`2esn`? Return \"d_str\" Starts With _usn4 Starts With $_usn4 As `5esn`,`7esn`[0.e0..False][0e0..$_usn4] As `1esn` Skip $`1esn` Is Not Null Is Not Null Union Delete (`5esn` :`8esn`{``:00 In 1000})<-[? *123456789..{`7esn`:01234567[9e0][.0],`2esn`:999 Ends With $`4esn`}]-({@usn6:$#usn8[0e0..][07..]}) Ends With (@usn6 {@usn6:$`7esn` Ends With $_usn4 Ends With `5esn`,usn1:123.654[0Xa..0x0][.12..12e12]})-[@usn5:@usn6]-(:`4esn`:usn2{_usn4:`1esn`[$7][0Xa]}),(_usn4 :_usn3:@usn5)<-[@usn6:`8esn`|@usn6{@usn6:#usn8 =~#usn7 =~0x0,`7esn`:$usn1 Ends With $`2esn`}]->(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[?:`6esn`]->(`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})[Any(`5esn` In $usn2 Contains $`1esn` Where @usn6[$usn1][$`2esn`])..][None(`3esn` In False In $`2esn` In 1e1 Where True Contains $`` Contains 01234567)..] Union Unwind Single(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]) Starts With (:usn1:``{_usn4:1000[12.e12][#usn7]})-[ *7{`4esn`:$#usn7[$`3esn`..$999],`8esn`:$0[00..]}]-({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]}) Starts With {`1esn`:`5esn` In 12.e12 In 1000,`3esn`:0Xa Contains $`6esn`} As `3esn` With Distinct $_usn3[0e0..][12.0..] As `3esn` Order By None(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1) In {`6esn`:1.e1[0..],usn2:`` Contains $_usn3 Contains 0e0} Descending,$123456789 In `8esn` In 0X7 Descending Skip 12.0[9e1..][Null..] Where 1e1 Contains 0Xa"),
    octest:ct_string("Return Distinct [`4esn` In 0.12['s_str'..$0][$usn1..9e0]|`7esn`[..01]] Is Not Null Is Not Null As @usn6,None(usn1 In 0xabc Is Not Null Is Not Null Where 123456789 =~@usn5 =~$`5esn`) =~[`4esn` Ends With 's_str' Ends With @usn6] Skip Any(#usn8 In 07['s_str'][$@usn6] Where $`7esn`[usn2]) In [`6esn` In 0x0[9e0..] Where `5esn`[usn1]] In {_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]} Return Distinct (`2esn` {_usn3:.e1 Ends With $123456789})<-[?{usn2:9e0[0..1e1]}]->({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})[Any(`6esn` In .e0['s_str'..][$`8esn`..] Where Null In 0xabc)..Filter(usn1 In 123.654 =~.e0 =~9e0 Where Count(*) Contains 12e12 Contains 0xabc)][[$`` Is Not Null Is Not Null,$#usn7[9e12..12],`7esn` Is Null Is Null]..Extract(`5esn` In $usn2 Contains $`1esn` Where \"d_str\" Contains $999 Contains `2esn`|.e12[``][$1000])] As usn1 Order By $usn1 Contains 12.0 Asc,`1esn`[..$@usn6][..`3esn`] Ascending Limit Count(*) Starts With 1000 Starts With `` Optional Match (usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[@usn6{_usn4:$`` Starts With 0x0}]-(usn2 :`7esn`),#usn7=((({_usn3:`2esn`[`3esn`..]})<-[{@usn6:1000 Ends With 01234567 Ends With usn1,usn2:01234567 In \"d_str\"}]-(#usn8 {`4esn`:$`3esn` Is Null})-[?:`3esn`|_usn4 *01..7{@usn5:`4esn`}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]})))"),
    octest:ct_string("Create @usn5=(_usn4 {`2esn`:1.e1 Is Not Null Is Not Null})<-[_usn4?:`3esn`|_usn4 *7]->({@usn6:0.e0 Contains $1000 Contains 7}),`5esn`=(:`1esn`:@usn6{`7esn`:00['s_str'],#usn8:$`7esn`[`2esn`]})<-[usn2?:#usn8|:`6esn` *7]-(:`2esn`:@usn5{#usn8:0.e0 Contains @usn5 Contains 0X7,`5esn`:0x0[9e0..]})<-[@usn5:#usn8|:`6esn`]->(`7esn` :_usn3:@usn5{_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null}) Return True[07],usn1 =~_usn4 =~$usn1 As `7esn` Limit [`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]] Is Null Is Null Match _usn4=(((:#usn8:#usn7{`8esn`:12e12 Ends With 0e0})<-[_usn3?:`` *..010{usn2:`7esn`[_usn4..][Count(*)..]}]->(`8esn` :``:`6esn`{#usn7:$`3esn` Is Null})<-[@usn5{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(:`5esn`{@usn5:True Contains $`` Contains 01234567}))),(((`` :`5esn`{`5esn`:_usn3[0Xa..],usn1:1.e1 Ends With 0x0 Ends With 1e1})<-[`6esn`{`3esn`:`2esn` Contains `3esn` Contains $@usn5}]-(`4esn` :`2esn`:@usn5{#usn8:$#usn7[9e12..12]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`6esn` ))) Where 12.0[`3esn`][_usn3] Union All Unwind .e1 Starts With $`` As @usn6 With Distinct \"d_str\" Ends With $`3esn` As `5esn`,All(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..]) In {_usn3:$@usn6 Contains `5esn` Contains .e12} Skip 1.e1 Ends With 0x0 Ends With 1e1 Where .e12[``][$1000] Union Return 999[..\"d_str\"],`7esn`(Distinct `7esn` Is Null,`4esn` Ends With 's_str' Ends With @usn6) Is Null Order By $#usn8[1.e1..] Ascending,_usn4[7..$999] Desc,Filter(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where Count(*)[..`5esn`])[Filter(`3esn` In False In $`2esn` In 1e1 Where .12 =~$#usn7 =~$``)][{`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]}] Descending Skip (`3esn` :usn2{#usn7:usn2[`6esn`..][.0..],#usn7:\"d_str\"[..$_usn3]})<-[?{`3esn`:'s_str'[$`6esn`..][$0..]}]->(`2esn` :@usn6)<-[?{`8esn`:$`7esn`[usn2],`1esn`:1000 Is Not Null}]-(#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]}) Is Null Limit `3esn`[$`7esn`..12] With Distinct *,True[$usn1..12][``..\"d_str\"] As `` Order By 01[#usn8..1000] Desc Where _usn4[#usn7..#usn8] Return Distinct *,$_usn4 In $12 As `4esn`,`5esn` In $usn1 In `4esn` As @usn6 Limit Any(`3esn` In 999 Where .12[0X0123456789ABCDEF..]) =~(:`7esn`{@usn6:`2esn`[``..]})<-[?{``:Null Is Not Null Is Not Null}]-(:_usn4{@usn6:$123456789[`1esn`..]}) =~[12e12 Ends With `6esn`]"),
    octest:ct_string("Delete $#usn8[0e0..][07..] Merge #usn8=(`` :`8esn`{`5esn`:True Contains .e1 Contains `2esn`}) Union All Detach Delete {#usn8:.e0 Ends With $`1esn` Ends With 1000}[Filter(#usn8 In 07['s_str'][$@usn6] Where $12[0.0..])][Filter(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..])],0Xa[.e12..] Merge `8esn`=((`1esn` :`7esn`{`6esn`:1e1 In 12.e12})<-[:#usn7|`5esn`*{`8esn`:01[$0],``:0xabc Is Not Null Is Not Null}]-(_usn3 :`7esn`{#usn7:123.654 =~.e0 =~9e0,_usn3:`1esn`[Null..]})<-[`5esn` *0Xa]-(:usn1:``)) Union Remove [`2esn` In $#usn8 Starts With usn2 Starts With .12]._usn4?,{`8esn`:123.654[$``][#usn7],`1esn`:0e0 Starts With $@usn6 Starts With $7}.usn1 Remove [0Xa[..9e12][...e0],0Xa =~0Xa =~`3esn`,.e1[0X7..`2esn`]].`6esn`! Detach Delete $`3esn` Starts With 9e12 Starts With `8esn`,$@usn6 Ends With 010,#usn7[.12][usn2]"),
    octest:ct_string("Match (_usn3 :`3esn`{`1esn`:$999[@usn5..][Null..]})<-[{#usn8:999}]->(:@usn6) Where $`7esn` =~1.e1 =~0.e0 Match usn2=((_usn4 )<-[`7esn`?{@usn5:`4esn` Is Not Null,`3esn`:.e1 =~usn2 =~`7esn`}]-(:`4esn`:usn2{`2esn`:12e12 Ends With 0 Ends With $@usn6,``:`1esn`[Null..]})<-[?:#usn7|`5esn`{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]})),usn1=(`2esn` :``:`6esn`)<-[ *..0X0123456789ABCDEF]->(`1esn` {`5esn`:$`7esn` Ends With $_usn4 Ends With `5esn`,#usn8:'s_str'[$#usn8]}) Where 00 In 1000 Union Delete $`` With Distinct 12[`5esn`..$`3esn`][0.12..usn2] As `4esn` Order By 010 Starts With 0X7 Ascending,12e12 In Null Desc Where 9e1 Contains _usn3 Union With Distinct *,{`1esn`:$usn2 =~`6esn` =~`1esn`} Ends With 010 Ends With None(_usn4 In 12.e12 Is Null Is Null Where $`4esn` In 0x0) Order By True Ends With `6esn` Ends With 9e0 Desc Skip $_usn4[..$`8esn`] Limit True Contains $`` Contains 01234567 Unwind [`6esn` In 1000[12.e12][#usn7] Where $999[@usn5..][Null..]|$123456789[`4esn`..]][All(`6esn` In .e0['s_str'..][$`8esn`..] Where 1.e1 Ends With 0x0 Ends With 1e1)..] As `7esn`"),
    octest:ct_string("With Distinct *,Extract(`3esn` In 999 Where .e12 Is Null Is Null|$`7esn`[usn2]) Is Not Null As @usn5 Order By `3esn`[0x0][$`5esn`] Desc,Any(#usn8 In 07['s_str'][$@usn6] Where $`7esn`[usn2]) In [`6esn` In 0x0[9e0..] Where `5esn`[usn1]] In {_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]} Descending,_usn3[9e0..$123456789][0X7..999] Asc Where $7[$12] Return Distinct *,{#usn8:.e0 Ends With $`1esn` Ends With 1000}[Filter(#usn8 In 07['s_str'][$@usn6] Where $12[0.0..])][Filter(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..])],$_usn3 =~`1esn` Order By 999[..\"d_str\"] Ascending Skip {usn1:`` In 123.654 In 0.0,usn2:.e1 =~\"d_str\" =~'s_str'}[Filter(`3esn` In 999 Where 0 Contains $@usn5)..]"),
    octest:ct_string("Remove Single(`3esn` In 999 Where #usn7 Ends With 9e0).#usn7?"),
    octest:ct_string("Remove {_usn3:0e0['s_str'],`6esn`:9e12[\"d_str\"]}.`6esn`,(:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`})<-[?{_usn3:Count(*) Ends With 7 Ends With 0,`8esn`:@usn6 Starts With #usn8 Starts With $#usn7}]-(_usn3 :`4esn`:usn2).#usn7 Remove {@usn5:123456789[..#usn8],#usn8:usn1 =~`2esn`}.`6esn`,[@usn5[$`1esn`..][$7..],$#usn8 Is Null Is Null,`4esn` Ends With $12 Ends With 0.e0].@usn5 Merge usn1=(usn1 :`2esn`:@usn5{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc})<-[#usn8:`3esn`|_usn4*..{``:9e0 Is Null Is Null}]->(:@usn5{#usn7:0x0 In 0X0123456789ABCDEF,`2esn`:0Xa[Count(*)][0xabc]})"),
    octest:ct_string("Merge @usn6=(((usn1 :_usn4)-[`2esn`? *7]->(`` :``:`6esn`{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]})-[`2esn`?:`3esn`|_usn4]->({`1esn`:1e1 Starts With 010}))) On Match Set `5esn`+=\"d_str\" Ends With 123456789,`3esn` =12 Is Null On Create Set `2esn`:``:`6esn`,Extract(`6esn` In 0x0[9e0..] Where `7esn`[`8esn`][#usn7]|`8esn` Ends With $`1esn`).`1esn`? =1.e1 =~01234567,{@usn6:$123456789[12.0],#usn7:usn1 =~_usn4 =~$usn1}.`8esn`! =@usn6(Distinct $0 Contains 7 Contains 1.e1)[(_usn4 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8)][Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0X0123456789ABCDEF In _usn3)] Remove [`5esn` In $usn2 Contains $`1esn` Where $`6esn`[$0]].`2esn`,[`6esn` In 1000[12.e12][#usn7] Where $0[1e1][`4esn`]|False Starts With $123456789].usn2? With Distinct .e1[01234567] As `6esn`,01 In $7 In $1000 As #usn7,$`1esn` Starts With True Starts With @usn5 Order By @usn5 In .e0 In \"d_str\" Asc"),
    octest:ct_string("Remove {`2esn`:`` In 123.654 In 0.0,usn2:#usn7 In #usn7}.`7esn`?,Single(`6esn` In .e0['s_str'..][$`8esn`..] Where .e12 Is Null Is Null).`2esn`!,[`3esn` In 999 Where 0X7[..True][..01234567]|0.e0 Is Not Null Is Not Null].#usn8 With  9e1 Contains _usn3 Order By {`3esn`:.0 =~$@usn5 =~1.e1} =~Extract(_usn4 In 12.e12 Is Null Is Null Where $_usn4[False..@usn6][`4esn`..$1000]) Ascending,@usn6(`4esn` Starts With $#usn8 Starts With $#usn8,.e1 =~usn2 =~`7esn`)[..{`2esn`:Count(*) Contains 12e12 Contains 0xabc}][..Extract(#usn8 In 0x0[_usn4..] Where 0xabc[123.654][12]|$`6esn` Is Not Null)] Ascending,Any(`2esn` In $``[$#usn8] Where $`2esn`[.._usn3])[[`6esn` In .e0['s_str'..][$`8esn`..] Where $@usn5 =~$usn2 =~True|.e0[$`1esn`..][_usn4..]]..`8esn`] Asc Skip 0X0123456789ABCDEF Limit 00 In 1000 Where $#usn8[0xabc..usn2] Unwind 0e0 =~False =~.12 As `5esn` Union Detach Delete [`3esn` In @usn6[..\"d_str\"][..01] Where `2esn` Is Null Is Null] Starts With Extract(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where .12 Is Null),$`8esn`[0.12][12],All(`7esn` In $`8esn`[0.12][12] Where @usn5[..$999][..$0])[..({usn2:1000 Starts With 0e0 Starts With 0,`6esn`:9e1[$`3esn`][$`1esn`]})<-[`3esn`:_usn3|`6esn`]->(usn1 :#usn8:#usn7)] Union All Create `4esn`=(usn1 :usn1:``{@usn6:_usn3[0Xa..]})-[{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}),_usn4=(({@usn5:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`3esn`:`4esn` In .12 In $#usn8})-[?:`` *07{`1esn`:$#usn7[$`3esn`..$999]}]->(@usn6 {``:12.e12 Contains 's_str' Contains 0.12})<-[? *..0X0123456789ABCDEF{usn2:123456789 Ends With 9e1 Ends With ``,`3esn`:9e0[123456789..0][12.0..@usn6]}]-({``:0.12 Contains 0x0 Contains @usn5}))"),
    octest:ct_string("Return *,$7[0.e0][`8esn`],.e1[0X7..`2esn`] Order By Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) Ends With [1.e1[#usn7][1.e1],Null =~Count(*)] Ends With [#usn8[..0X0123456789ABCDEF][...0],$usn1 Is Not Null Is Not Null] Desc Skip [12 Is Null Is Null,9e0[$@usn6]][Filter(`6esn` In 0x0[9e0..] Where $123456789 In 010 In $`8esn`)..] Limit $@usn6 Contains `5esn` Contains .e12 Create (((@usn6 {@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})-[`5esn`:@usn5|:@usn6*{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]->(#usn8 :`2esn`:@usn5)<-[`5esn`:_usn4|_usn3 *0X7..0x0]-(:#usn7{_usn4:\"d_str\"[7..$999]}))),((`7esn` {#usn7:1e1[`3esn`]})-[@usn6?:`` *0Xa]-(@usn6 :@usn5{`8esn`:$@usn6 Contains 0e0})<-[:_usn4|_usn3]-(#usn8 :`8esn`{_usn4:usn2 In 1e1 In `4esn`})) Remove {`8esn`:$@usn5 Starts With Count(*) Starts With $usn1,#usn7:0.e0[.e12]}.`4esn`!,[`5esn` In 1e1 =~$`8esn` =~`1esn` Where $_usn4[False..@usn6][`4esn`..$1000]].`1esn` Union All Merge `6esn`=((:`7esn`{`8esn`:'s_str'[$#usn8]})-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})<-[usn2?:#usn8|:`6esn` *7]-(:@usn6)) On Match Set `2esn`+=`6esn` Is Null,`7esn`+=$`7esn` Is Null Is Null,`6esn`+=(:_usn4{_usn3:`1esn`[Null..]})-[{`8esn`:'s_str'[$#usn8]}]->(`8esn` :@usn5) Is Not Null Is Not Null Merge ((`7esn` {#usn7:1e1[`3esn`]})-[@usn6?:`` *0Xa]-(@usn6 :@usn5{`8esn`:$@usn6 Contains 0e0})<-[:_usn4|_usn3]-(#usn8 :`8esn`{_usn4:usn2 In 1e1 In `4esn`})) On Create Set _usn4+=01234567 Contains 0.12 Contains `5esn`,_usn3 =$`3esn` Is Null On Match Set Extract(`3esn` In @usn6[..\"d_str\"][..01] Where _usn3[..`8esn`]|01234567 Is Null Is Null).@usn6? =#usn7 Ends With 0.12,@usn5 =$`2esn` =~False Match ((({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})-[ *0..{`1esn`:0xabc Contains 0}]->(:_usn3:@usn5)<-[_usn3?:#usn7|`5esn` *..0x0]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})))"),
    octest:ct_string("Create ((`` {_usn4:False[...e0][..$#usn8],`4esn`:.e12[..$_usn4][..#usn7]})<-[? *..010{usn1:123456789[$_usn4..]}]->(@usn5 {`2esn`:$#usn7[`7esn`..][$`8esn`..],`3esn`:0.12['s_str'..$0][$usn1..9e0]})) Delete [`7esn` In $`8esn`[0.12][12] Where usn1 In 010] Is Not Null Is Not Null,usn1[..$123456789][..`1esn`],_usn3[_usn4..$`2esn`][$123456789..9e12] Union All Match `6esn`=(({@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]}))"),
    octest:ct_string("Match `5esn`=(((`6esn` {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})<-[`5esn`:_usn4|_usn3 *0X7..0x0]-(#usn7 {`5esn`:00 Starts With usn1 Starts With Count(*),``:$999 Is Not Null})<-[`4esn` *123456789..]-(:`7esn`$#usn8))) Return Distinct \"d_str\" Starts With _usn4 Starts With $_usn4 As `5esn`,`7esn`[0.e0..False][0e0..$_usn4] As `1esn` Order By 0x0 Is Not Null Ascending,123456789[True..][12..] Desc,All(`2esn` In $``[$#usn8] Where $`2esn`[.._usn3]) =~[`6esn`[_usn3],12.0 In 07] =~[123456789[0.0..`2esn`][1.e1..$_usn4]] Ascending Skip 0X7[$`6esn`..0e0] Limit 0.e0 =~$@usn5 Match usn2=(`5esn` {`1esn`:999 Ends With $`4esn`})<-[usn2:`5esn`|:`1esn`{usn1:`2esn` Is Null Is Null}]->(`5esn` {usn1:1000 Ends With $`5esn`}) Where 0e0 Starts With $@usn6 Starts With $7 Union All Optional Match `3esn`=((:`4esn`:usn2{_usn3:Null Is Not Null Is Not Null,`4esn`:$1000 Is Not Null})<-[ *..0X0123456789ABCDEF{@usn6:`4esn` Is Not Null,`2esn`:@usn6[.0]}]-(`3esn` :#usn8:#usn7{_usn3:$`1esn` Is Not Null Is Not Null,`2esn`:0X7 Contains 12.0})),`1esn`=((`5esn` {`1esn`:999 Ends With $`4esn`})<-[`7esn`?]->(:``:`6esn`{`5esn`:_usn3 =~$12})-[?:usn2|:`` *7]-(`1esn` {@usn6:`1esn`[$7][0Xa]})) Where $`5esn` Is Not Null Delete Extract(usn1 In 0xabc Is Not Null Is Not Null)[{#usn8:`6esn`[`7esn`..$_usn3][9e0..#usn8],`3esn`:\"d_str\" =~_usn3 =~0.0}..Filter(#usn8 In 0x0[_usn4..] Where #usn8[..0X0123456789ABCDEF][...0])][Single(`6esn` In 0x0[9e0..] Where $`3esn` Is Not Null)..None(#usn8 In 0x0[_usn4..] Where 0.e0 Is Not Null Is Not Null)],07 =~$12 =~$@usn6 Delete {`1esn`:$usn2 =~`6esn` =~`1esn`} Ends With 010 Ends With None(_usn4 In 12.e12 Is Null Is Null Where $`4esn` In 0x0) Union All Match `4esn`=((`8esn` :`4esn`:usn2{`5esn`:$0[`5esn`][9e12],``:#usn7[False..][123.654..]})<-[`4esn`{#usn8:123456789[..0],#usn8:.e12 =~\"d_str\" =~@usn5}]-(:``:`6esn`)),(:#usn8:#usn7{`8esn`:12e12 Ends With 0e0})-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2) Where #usn7[False..][123.654..] Delete 010[0e0][0xabc] Match `3esn`=((#usn7 {#usn7:999 Contains $`7esn` Contains usn2})<-[?:`7esn`]-(@usn5 :@usn6{`5esn`:#usn8 Is Not Null,`1esn`:01234567[`6esn`..]})-[`1esn`{usn1:00['s_str'],#usn8:$`8esn`[``..True][1000..0.12]}]->(usn1 :#usn8:#usn7))"),
    octest:ct_string("Remove None(`2esn` In $``[$#usn8] Where 0.12 Is Null Is Null).`5esn`?,Any(usn1 In 0xabc Is Not Null Is Not Null Where 7[$1000][1000]).usn1,@usn6(`4esn` Starts With $#usn8 Starts With $#usn8,12.0[9e1..][Null..]).usn1! Union Return *,0.0[`7esn`][`6esn`],.e1[0X7..`2esn`] Order By @usn5 In .e0 In \"d_str\" Asc,[$999[@usn5..][Null..]] Ends With ({usn2:0Xa Contains $`6esn`,_usn3:\"d_str\" Ends With $`3esn`})-[@usn5? *00{@usn5:usn1 Ends With 1.e1 Ends With `4esn`}]-(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})-[:`5esn`|:`1esn`]-(`2esn` ) Descending,12.0 Contains 12.e12 Contains 0x0 Descending Limit 0xabc[..$999] Detach Delete (_usn4 :_usn3:@usn5)<-[@usn6:`8esn`|@usn6{@usn6:#usn8 =~#usn7 =~0x0,`7esn`:$usn1 Ends With $`2esn`}]->(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[?:`6esn`]->(`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})[Any(`5esn` In $usn2 Contains $`1esn` Where @usn6[$usn1][$`2esn`])..][None(`3esn` In False In $`2esn` In 1e1 Where True Contains $`` Contains 01234567)..] Merge _usn3=(:`8esn`)-[?{`2esn`:`4esn` Starts With $#usn8 Starts With $#usn8}]->(:`1esn`:@usn6{`8esn`:$`8esn` Contains $`2esn` Contains False})-[`6esn` *00]->(:`2esn`:@usn5{#usn8:12.0[`3esn`][_usn3]}) On Match Set None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where False In $`2esn` In 1e1).usn1? =Count(*)[$1000..01],Extract(`3esn` In False In $`2esn` In 1e1 Where $`` Starts With 0x0|0.12 Is Null Is Null).@usn5! =07 Ends With $_usn4 Ends With 0.e0 On Create Set #usn8+=`7esn` Is Null"),
    octest:ct_string("Return Distinct *,[`6esn` In .e0['s_str'..][$`8esn`..] Where $`7esn`[..$`8esn`]|$`8esn`[`7esn`]] Is Not Null Order By Filter(usn1 In 999 Where True[$usn1..12][``..\"d_str\"]) Is Null Is Null Descending Skip 9e0 Contains Null Limit [`5esn` Ends With 0x0,.e1 Ends With $123456789,$7[`7esn`][123.654]][..[0.e0 Contains $123456789 Contains 123456789,0 =~#usn8,False Starts With $123456789]][..Extract(`3esn` In False In $`2esn` In 1e1 Where 12e12 Ends With $_usn4 Ends With $`2esn`|0xabc Contains 0)] Return `5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789] As `7esn` Order By 9e0 Is Null Is Null Desc"),
    octest:ct_string("Match @usn6=((:`8esn`{`8esn`:$`7esn` =~$usn1 =~00,@usn6:`6esn` In $``})-[ *..010]-({@usn6:`5esn`[0e0..],_usn4:$#usn8[0xabc..usn2]})),`6esn`=({_usn4:`7esn`[_usn4..][Count(*)..],`1esn`:01234567 In \"d_str\"})-[? *..0x0{`1esn`:`4esn` Starts With `8esn`}]->(:_usn3:@usn5{_usn3:$#usn8 In True In #usn7,usn2:$@usn5[$_usn3..Null]}) Where \"d_str\" =~_usn3 =~0.0"),
    octest:ct_string("Remove {usn2:`7esn` Contains .0 Contains #usn8}._usn3,(usn2 :@usn6{#usn7:$`7esn` Starts With 07 Starts With `1esn`,`2esn`:$123456789[..$usn2]})<-[?:#usn8|:`6esn`*]->(@usn6 :@usn5{`8esn`:$@usn6 Contains 0e0}).#usn7?"),
    octest:ct_string("Return Any(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where $0 Ends With .12) Is Null Order By [`7esn` In $`8esn`[0.12][12] Where usn1 In 010] Is Not Null Is Not Null Ascending,{`5esn`:$`5esn`[`4esn`..$`2esn`],#usn7:999 Ends With 123456789 Ends With 12.0} Ends With #usn8(Distinct 1e1 Ends With 's_str' Ends With $@usn6,\"d_str\"[..$_usn3]) Ends With 0X0123456789ABCDEF Descending,Null[9e1][$`6esn`] Ascending Union Delete None(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where .e12 =~@usn5) Is Not Null Is Not Null,010 In 01234567 In `5esn`,(`4esn` :`3esn`)-[:`1esn`|@usn6 *0..]-(_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})<-[?:`1esn`|@usn6 *0Xa]-(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]}) Is Not Null Is Not Null Union All Optional Match #usn8=(`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]})-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->($@usn6)<-[`8esn`?:usn1|#usn7 *01..7{usn1:123456789[$_usn4..]}]-(@usn5 :`2esn`:@usn5$#usn8),_usn4=(`2esn` :`5esn`{`1esn`:$@usn6 Ends With 0.0})<-[`2esn`?*{`3esn`:$@usn5 Is Not Null Is Not Null}]-(:`7esn`{``:9e1[$#usn8],`4esn`:1.e1 Is Null Is Null}) Create (((@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})-[:`8esn`|@usn6*..]->(#usn8 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})-[? *..0X0123456789ABCDEF]-(@usn5 {@usn6:$123456789[12.0],#usn7:usn1 =~_usn4 =~$usn1}))),`7esn`=(((:`3esn`{#usn7:_usn3 =~$12})-[`7esn`? *123456789..]-(:`2esn`:@usn5{#usn8:$usn2 Starts With 9e1 Starts With `7esn`})-[ *..0X0123456789ABCDEF{@usn6:`4esn` Is Not Null,`2esn`:@usn6[.0]}]->(`` :usn1:``{@usn6:010[`1esn`..`4esn`]})))"),
    octest:ct_string("Create ((#usn8 :_usn3:@usn5{`3esn`:@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`],`4esn`:0e0 Is Null})) Unwind Single(`6esn` In 1000[12.e12][#usn7] Where usn1[9e1..]) =~Any(_usn4 In 12.e12 Is Null Is Null Where .e0['s_str'..][$`8esn`..]) =~Filter(usn1 In 999 Where 010 In $@usn5 In `5esn`) As `8esn` Return Distinct Any(`7esn` In $`8esn`[0.12][12] Where usn1 In 010),.e12[01..12e12][`7esn`.._usn3] Limit $`5esn` Starts With .0 Starts With 123.654 Union Unwind $999[010..] As #usn7 Detach Delete usn1[..`7esn`][..$`8esn`],0x0[9e0..],True[$usn1..12][``..\"d_str\"]"),
    octest:ct_string("Create (`1esn` ),`2esn`=({@usn6:.12 In 01234567 In _usn4})-[:#usn8|:`6esn`]->(@usn5 {usn2:123.654 =~.e0 =~9e0,`3esn`:@usn6[.0]}) Create `7esn`=((`5esn` :``:`6esn`)-[:@usn5|:@usn6 *999{`5esn`:0x0 =~@usn5 =~01}]->(_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})) Union Match (_usn3 :@usn6{@usn5:0e0 =~False =~.12})-[?:``]->(@usn6 :``:`6esn`{#usn7:9e1 Contains _usn3}) Remove All(`6esn` In 0x0[9e0..] Where 01234567[..`6esn`][..``]).usn1 Union With  *,.12 As `5esn` Order By $1000[..`6esn`][..123456789] Ascending,None(`6esn` In 1000[12.e12][#usn7] Where 9e12[\"d_str\"]) Ends With None(`6esn` In 1000[12.e12][#usn7] Where usn1[9e1..]) Ends With [`5esn` In 12.e12 In 1000,False In $`2esn` In 1e1] Ascending,0.e0 =~01234567 =~01234567 Desc Skip (`3esn` :usn2{#usn7:usn2[`6esn`..][.0..],#usn7:\"d_str\"[..$_usn3]})<-[?{`3esn`:'s_str'[$`6esn`..][$0..]}]->(`2esn` :@usn6)<-[?{`8esn`:$`7esn`[usn2],`1esn`:1000 Is Not Null}]-(#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]}) Is Null Limit 0x0[$`2esn`..'s_str'][$@usn5..1.e1] Where usn1 Ends With $`8esn` Ends With 7"),
    octest:ct_string("Remove (usn1 :usn2{#usn8:0.e0 Contains $1000 Contains 7})<-[?:usn2|:`` *7]->(`` :_usn3:@usn5).`6esn`?,All(`3esn` In @usn6[..\"d_str\"][..01] Where .e12 Is Not Null Is Not Null)._usn4! Remove None(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where @usn6 Ends With 0.12 Ends With `3esn`).`2esn`!,[#usn8 In 0x0[_usn4..] Where 0X0123456789ABCDEF In _usn3|$123456789 =~usn1 =~0xabc].@usn6,{usn2:1e1 =~$`8esn` =~`1esn`}.`2esn`!"),
    octest:ct_string("With  $`3esn`[0.12..][$@usn5..],0x0[9e0..] Order By {#usn8:.e0 Ends With $`1esn` Ends With 1000}[Filter(#usn8 In 07['s_str'][$@usn6] Where $12[0.0..])][Filter(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..])] Asc,usn2[9e12] Ascending Limit Extract(`3esn` In 999 Where 0x0 Contains .0|@usn5[..$999][..$0])[[usn1 In 0xabc Is Not Null Is Not Null Where $@usn6 Is Null|$`6esn`[$`6esn`..][0X7..]]..(`4esn` :#usn8:#usn7)-[?:@usn5|:@usn6 *0Xa]-(:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`})-[usn2?:#usn8|:`6esn` *7]->(_usn4 :`8esn`)]"),
    octest:ct_string("Match _usn4=(@usn5 {`4esn`:0.12 Is Null}),(((`3esn` {`3esn`:1e1[`3esn`]})<-[usn1?:`8esn`|@usn6]->(#usn8 :#usn7{`2esn`:0.e0[.e12]})-[:`5esn`|:`1esn`]-(`2esn` ))) Match _usn3=((`7esn` )<-[`5esn`? *..0x0{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]-(`6esn` :@usn6)) Where $`8esn`[``..True][1000..0.12] Union All Return Distinct *,$`5esn` Starts With .0 Starts With 123.654 As @usn6 Skip [`3esn` In @usn6[..\"d_str\"][..01] Where 1.e1[$`7esn`]|123456789[..0]] =~[.e0['s_str'..][$`8esn`..],.e0 =~7 =~False] =~[`7esn` In $`8esn`[0.12][12] Where 9e0[123456789..0][12.0..@usn6]|`4esn`[$#usn7][$#usn7]] Limit 9e0[$`4esn`] Match (({`1esn`:1e1 Starts With 010})-[`2esn` *123456789..{`8esn`:.12 =~#usn7 =~01}]-(@usn6 {``:12.e12 Contains 's_str' Contains 0.12})<-[{#usn7:$123456789[..$`7esn`][..\"d_str\"]}]-({`3esn`:Null Is Null Is Null})),usn2=(((:@usn5{usn2:$999 Is Not Null})<-[``?:#usn8|:`6esn`]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]})-[usn2?:@usn5|:@usn6]->({#usn8:$`` Is Not Null Is Not Null,`8esn`:$usn2 Starts With 9e1 Starts With `7esn`}))) Return Distinct *,9e0[12..$`8esn`] As _usn4 Order By $`1esn` =~`1esn` =~0X0123456789ABCDEF Desc,_usn4[7..$999] Ascending Skip Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 9e1 Contains _usn3) In [\"d_str\"[.0][9e0],0X7[0xabc][$1000]] Limit All(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]) In Single(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 1000 Starts With ``) Union Detach Delete Null =~Count(*) Detach Delete (:_usn4{_usn3:`1esn`[Null..]})-[{`8esn`:'s_str'[$#usn8]}]->(`8esn` :@usn5) Is Not Null Is Not Null Remove All(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 0 Is Not Null Is Not Null).#usn8,All(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $`2esn`[$``..12e12]).`8esn`?,Single(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 01 Is Null)._usn3!"),
    octest:ct_string("Detach Delete [`6esn` In 1000[12.e12][#usn7] Where 0X0123456789ABCDEF Is Not Null] Is Null,All(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $@usn5 =~$usn2 =~True)[..{`7esn`:`` Is Not Null Is Not Null}][..(@usn6 :`1esn`:@usn6{usn2:#usn8 Is Not Null})-[? *12]->(:`2esn`:@usn5{#usn7:0e0['s_str'],`1esn`:$#usn8[1.e1]})<-[`6esn`:`3esn`|_usn4 *0X7..0x0$999]->({`5esn`:1e1[\"d_str\"..]})],Extract(`3esn` In False In $`2esn` In 1e1 Where `` Contains 010 Contains $1000|@usn5['s_str'..$`2esn`])[`5esn`(0e0['s_str'])][None(`6esn` In 0x0[9e0..] Where 0xabc Is Not Null Is Not Null)] Union All Remove Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where `7esn` Contains .0 Contains #usn8|$_usn3[0e0..][12.0..]).``,_usn3(Distinct `4esn`).`8esn`? Match `4esn`=((({@usn5:.e12 Is Not Null Is Not Null,_usn3:$1000[..`6esn`][..123456789]})-[{usn1:Count(*)[..12][..$999],#usn8:usn1 In 010}]->(`1esn` :`8esn`)<-[`8esn`:`7esn` *0..]->(`1esn` {`5esn`:$`7esn` Ends With $_usn4 Ends With `5esn`,#usn8:'s_str'[$#usn8]}))),`3esn`=(((`2esn` :_usn4{`7esn`:`2esn`[`3esn`..],`6esn`:.12 Is Not Null})<-[`1esn`?:`3esn`|_usn4*..]-(:`6esn`:`3esn`{`3esn`:123.654[0Xa..0x0][.12..12e12]})-[?:`8esn`|@usn6*{``:0.e0 Contains $123456789 Contains 123456789,`4esn`:#usn7 Is Not Null Is Not Null}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]}))) Where $#usn7[123456789..][$`4esn`..] Unwind Single(`6esn` In 1000[12.e12][#usn7] Where usn1[9e1..]) =~Any(_usn4 In 12.e12 Is Null Is Null Where .e0['s_str'..][$`8esn`..]) =~Filter(usn1 In 999 Where 010 In $@usn5 In `5esn`) As `8esn`"),
    octest:ct_string("Merge _usn4=({_usn4:1000 Starts With ``,#usn7:$123456789 In 010 In $`8esn`}) On Create Set #usn7 =$123456789 Starts With `6esn` Starts With 123.654,[`2esn` In $``[$#usn8] Where 01234567[`6esn`..]].`6esn` =$@usn6[$#usn8..$999][Count(*)..usn1] On Create Set `3esn` =Single(usn1 In 123.654 =~.e0 =~9e0 Where $123456789[..$`7esn`][..\"d_str\"])[..Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 9e1 Contains _usn3)][..None(usn1 In 123.654 =~.e0 =~9e0 Where $7 Ends With 12.e12 Ends With `1esn`)],Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0]|.0 =~$@usn5 =~1.e1).`4esn`? =[0e0 Is Null,#usn7 Ends With 9e0,$7[`7esn`][123.654]][{_usn3:0e0 =~False =~.12,`3esn`:`` Contains .e1 Contains 9e12}][{_usn3:$#usn8[0xabc..usn2]}] Union All Remove [`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $123456789 Is Not Null|`5esn`[$7..01]].#usn7?,Single(`6esn` In 0x0[9e0..] Where $`4esn`[$1000..$`4esn`][0x0..$_usn3])._usn4!,Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where `4esn` In $`2esn` In @usn5)._usn3 Unwind $usn1[1e1..1e1] As `2esn`"),
    octest:ct_string("Remove (:`2esn`:@usn5{#usn7:0.e0 Contains @usn5 Contains 0X7})-[:`1esn`|@usn6*..]->(:`8esn`{`8esn`:0X7 Contains 12.0,`3esn`:`4esn` Starts With `8esn`}).usn2? Return `2esn`[`3esn`..] As `8esn`,{`6esn`:`` In 123.654 In 0.0} Is Not Null Is Not Null Skip 07 =~0.e0"),
    octest:ct_string("Return [999 Contains $`7esn` Contains usn2,$999[9e0..010][999..010],1000 Is Not Null] Is Null As #usn7,``[{`6esn`:12[`5esn`..$`3esn`][0.12..usn2]}..],$999[0xabc..] As `5esn` Order By $_usn3[0e0..][12.0..] Ascending,_usn3 Ends With $`6esn` Ends With 0e0 Descending,(_usn3 {usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`4esn`:1.e1 Is Null Is Null})-[`1esn`?:`1esn`|@usn6 *12]->(`8esn` :@usn6)[({usn1:$usn1 Starts With Null Starts With $``,@usn5:0x0[01234567..Null][0Xa...e12]})<-[ *..0X0123456789ABCDEF]->(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]})..] Descending Limit All(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $usn2[12.0..][`8esn`..])[(`6esn` :`5esn`{`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})-[:@usn5|:@usn6 *01234567..123456789]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null})<-[?:`4esn`*]->(@usn5 :usn2{`3esn`:0.0 Ends With $usn1 Ends With $999,`5esn`:1.e1 Is Null Is Null})..] Return Distinct *,00[$@usn5][0X7],$`` Is Null Is Null As usn1 With  All(`2esn` In $``[$#usn8] Where $`2esn`[.._usn3]) =~[`6esn`[_usn3],12.0 In 07] =~[123456789[0.0..`2esn`][1.e1..$_usn4]] As `1esn` Order By [12 Is Null Is Null,9e0[$@usn6]] Contains Extract(`6esn` In .e0['s_str'..][$`8esn`..] Where `8esn`[0x0..]|.e0['s_str'..][$`8esn`..]) Contains #usn7 Desc"),
    octest:ct_string("Remove Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0e0 Starts With $@usn6 Starts With $7).@usn6!,[12e12 Ends With 0e0].`2esn`? With  *,.e12[..$_usn4][..#usn7] As usn2 Order By {#usn8:.e0 Ends With $`1esn` Ends With 1000}[Filter(#usn8 In 07['s_str'][$@usn6] Where $12[0.0..])][Filter(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..])] Asc Where 1e1 Is Null Union Return Distinct *,$7[0.e0][`8esn`],.e1[0X7..`2esn`] Order By Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) Ends With [1.e1[#usn7][1.e1],Null =~Count(*)] Ends With [#usn8[..0X0123456789ABCDEF][...0],$usn1 Is Not Null Is Not Null] Desc Skip [12 Is Null Is Null,9e0[$@usn6]][Filter(`6esn` In 0x0[9e0..] Where $123456789 In 010 In $`8esn`)..] Limit $@usn6 Contains `5esn` Contains .e12 Merge ``=(`7esn` :_usn3:@usn5)<-[? *01..7]->(`8esn` :usn2)<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]-(@usn6 :``:`6esn`) On Create Set `5esn`+=All(`6esn` In .e0['s_str'..][$`8esn`..] Where 12.0[9e12]['s_str'])[[`5esn` Ends With 0x0,.0 =~$@usn5 =~1.e1]..[`6esn` In .e0['s_str'..][$`8esn`..] Where $0[`5esn`][9e12]|.12[..07]]][{`8esn`:.0[..False]}..[usn1 In 0xabc Is Not Null Is Not Null Where 9e0[123456789..0][12.0..@usn6]|.e12 Is Not Null Is Not Null]] On Create Set usn1+=123456789[$_usn4..],[123.654 =~.e0 =~9e0,$#usn7[9e12..12],$12 Is Null Is Null].`3esn` =$12 Contains `` Contains 0x0 Merge `1esn`=((@usn6 {`3esn`:#usn7 Ends With 9e0})-[`4esn`?:usn1|#usn7{`1esn`:123456789 Ends With 9e1 Ends With ``,@usn5:0xabc Contains 0}]->(:_usn4{@usn6:$`4esn`[$@usn5..`7esn`],`5esn`:_usn4 Starts With `6esn` Starts With $`8esn`})) Union Remove ({`4esn`:Count(*)[..$_usn3][..$usn2]})<-[`3esn`? *..010{`6esn`:$123456789[..$usn2],`7esn`:$_usn4 =~0X7}]-(#usn7 {@usn5:$`5esn` Contains $usn2}).usn2! Return *,usn2 Starts With 00,Any(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where @usn6 Ends With 0.12 Ends With `3esn`) Contains [`5esn` In $usn2 Contains $`1esn` Where Count(*)[$1000..01]|9e1[..01234567][..`4esn`]] Contains (`3esn` {#usn8:#usn7 =~$`8esn`})-[usn2?:#usn8|:`6esn` *7]->(`6esn` :`5esn`{`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})-[?:`2esn`|:`7esn` *0..{`4esn`:010 In $@usn5 In `5esn`,#usn7:$`7esn` Is Null Is Null}]->(:`6esn`:`3esn`{`3esn`:123.654[0Xa..0x0][.12..12e12]}) Order By $_usn4 Starts With 0.e0 Starts With $12 Ascending Limit `8esn` Starts With $usn2"),
    octest:ct_string("Create ((@usn5 :usn1:``{usn2:9e0[0..1e1]})-[#usn7? *123456789..{`2esn`:999 Contains $`7esn` Contains usn2}]-($#usn7)) Remove [`3esn` In @usn6[..\"d_str\"][..01] Where .e0[..$`5esn`][..``]|$`4esn` In 0.0 In `3esn`]._usn3? Union Create `3esn`=((@usn6 :#usn8:#usn7{``:Null Is Not Null Is Not Null})<-[`2esn`?:`5esn`|:`1esn`]->($1000)-[`6esn`? *999{_usn4:\"d_str\" Contains $999 Contains `2esn`}]-(`1esn` {_usn3:12.0 In 07,`2esn`:01234567[..`6esn`][..``]})) Delete [`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12]] Ends With [0] Ends With `8esn`,(#usn8 :#usn8:#usn7)<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(`4esn` :`5esn`) Contains {_usn3:12.0 In 07,`2esn`:01234567[..`6esn`][..``]} Create (#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})"),
    octest:ct_string("Detach Delete 0[..07][..False],Filter(usn1 In 0xabc Is Not Null Is Not Null Where False[...e0][..$#usn8]) Is Null Is Null,'s_str'[..01234567][..$`3esn`] Union All Delete {``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]} Ends With {`2esn`:.e12 Is Null Is Null,usn1:.e12 =~@usn5} Ends With Extract(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Is Not Null Is Not Null),(`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`` )[..`2esn`(Distinct `7esn`[_usn4..][Count(*)..],0[1.e1..#usn7])][..(_usn4 {`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})<-[@usn5?:_usn4|_usn3{#usn7:0.12 Is Null Is Null,#usn8:$1000 =~00}]-(`4esn` :_usn3:@usn5)-[@usn5? *01234567..123456789{`2esn`:01234567[`6esn`..]}]-(@usn5 {`4esn`:0.12 Is Null})] Unwind $`8esn` Ends With #usn8 As _usn3 Create ``=((:_usn3:@usn5)-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :_usn3:@usn5)),usn2=(((`1esn` {usn2:@usn5[$`1esn`..][$7..],@usn6:$#usn8[0xabc..usn2]})-[:@usn5|:@usn6]->(`5esn` {usn2:`6esn` In $``})-[? *0xabc..]->(`6esn` {`5esn`:0x0 =~@usn5 =~01}))) Union All Unwind `1esn`[..$999][..\"d_str\"] As `3esn`"),
    octest:ct_string("Merge `5esn`=((@usn5 {`5esn`:0e0[...e1]})<-[`8esn` *0..$12]-(:`2esn`:@usn5{#usn8:0.e0 Contains @usn5 Contains 0X7,`5esn`:0x0[9e0..]})<-[:`3esn`|_usn4]->(_usn3 {_usn4:usn2[9e0..0.e0][@usn5..`4esn`],_usn4:.e0['s_str'..][$`8esn`..]})) On Match Set #usn7 =`2esn`(_usn3[..usn2])[Extract(usn1 In 999 Where 010 In $@usn5 In `5esn`)],`7esn`+=0.0[Null..][.12..],`7esn`+=0.0[Null..][.12..] Merge `2esn`=((:`4esn`:usn2{_usn3:Null Is Not Null Is Not Null,`4esn`:$1000 Is Not Null})) On Match Set `7esn`:`3esn`,({``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]})<-[:@usn6 *7{``:9e0 Is Null Is Null,`3esn`:.0[@usn6..]}]->(`8esn` :``:`6esn`).`5esn`! =None(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $@usn6 Is Null Is Null)[None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where .e0 Is Not Null)],`4esn`+=False In 1.e1 In $12 On Match Set `6esn`+=.e0[0X0123456789ABCDEF.._usn3][9e1..$`3esn`] Merge `7esn`=(((`6esn` :_usn3:@usn5{`6esn`:1.e1[0..],`1esn`:'s_str' Ends With $7})<-[{`1esn`:$#usn8 Starts With usn2 Starts With .12,@usn6:07[$`8esn`]}]->(`7esn` {@usn6:$`3esn` Starts With 9e12 Starts With `8esn`})-[? *..0X0123456789ABCDEF{`7esn`:`4esn` Is Not Null,``:.12 Is Not Null}]->(`7esn` {`2esn`:9e0[$@usn6]}))) On Match Set `4esn`+=Extract(`3esn` In 999 Where $`5esn`[.e1][#usn8]|$#usn8[@usn5..$1000]) =~Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $#usn8 =~7 =~.12) =~Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 123.654 Is Not Null Is Not Null),[`6esn` In 0x0[9e0..] Where `7esn` Is Null Is Null|$`4esn`[.e1..$usn1]].usn2! =1.e1[0..] Union Unwind (usn1 )<-[{`5esn`:usn2[.e1..][01234567..],usn1:999 Is Not Null}]->({`7esn`:`4esn` In $`2esn` In @usn5}) Is Not Null Is Not Null As `` Unwind .e12 Contains $usn2 Contains $@usn6 As @usn5 Remove @usn6(`4esn` Starts With $#usn8 Starts With $#usn8,12.0[9e1..][Null..]).usn1!,All(`7esn` In $`8esn`[0.12][12] Where usn1 In 010).#usn7!,All(`6esn` In 1000[12.e12][#usn7] Where $0[1e1][`4esn`]).`7esn`! Union All Unwind $12[#usn8..$@usn5][9e0..usn1] As ``"),
    octest:ct_string("Optional Match #usn7=(`7esn` :`7esn`)-[{`5esn`:0.e0 =~01234567 =~01234567}]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]}) Match `3esn`=(($_usn3)) Where 1000 Is Not Null Union Create `2esn`=(`1esn` {`6esn`:07}),(#usn8 :#usn8:#usn7)-[`2esn`?:_usn4|_usn3]-(:_usn3:@usn5{`7esn`:1000[`1esn`..$12][$usn1..Null],`2esn`:9e1 Contains 07}) Match (#usn8 {`4esn`:$`3esn` Is Null})<-[usn2:_usn3|`6esn` *..0x0]-(#usn8 {`8esn`:$#usn7[$`3esn`..$999]})<-[`5esn`? *..0x0{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]-(`6esn` :@usn6) Remove #usn8:``:`6esn`"),
    octest:ct_string("Return ``[{`6esn`:12[`5esn`..$`3esn`][0.12..usn2]}..],[.12 Is Null,12 Ends With 0 Ends With Null,0x0 =~@usn5 =~01][{usn2:$`6esn`[.e12]}],$_usn3 Is Not Null Limit @usn5 Ends With 1000 With  *,0x0 In 0X0123456789ABCDEF As usn1,0e0[$123456789..$999][\"d_str\"..Null] Limit [`2esn` In $#usn8 Starts With usn2 Starts With .12 Where `` Is Not Null Is Not Null] In Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 0X0123456789ABCDEF[$_usn3][$_usn4]) Return *,$`5esn`[0][.12] As `3esn`,(`1esn` :`7esn`)-[`4esn`?:usn1|#usn7{`1esn`:123456789 Ends With 9e1 Ends With ``,@usn5:0xabc Contains 0}]->(:`7esn`{@usn6:`2esn`[``..]})[..{``:`` In 123.654 In 0.0}] As #usn8 Skip {`7esn`:usn2 Starts With 00}[(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})<-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-({@usn6:`5esn` Ends With $999})..][(:`1esn`:@usn6{_usn3:$usn2 =~`6esn` =~`1esn`,`6esn`:0[1e1..00]})-[{_usn4:$`8esn` Contains .0 Contains 0.12}]->(:usn1:``{_usn4:1000[12.e12][#usn7]})-[@usn6 *00]->(`4esn` {_usn4:$`2esn`[$``..12e12]})..] Limit [`2esn` In $``[$#usn8] Where \"d_str\" Starts With _usn4 Starts With $_usn4|@usn5[01234567..]][[$`7esn`[usn2],`5esn`[12.0]]][[.0 =~$@usn5 =~1.e1,`8esn`[0x0..],`` In usn1 In 01234567]] Union All Delete Count(*) Contains 12e12 Contains 0xabc,Null Contains $_usn3"),
    octest:ct_string("With  *,0.12[$usn1..$7] As `1esn`,True Is Null Skip All(#usn8 In 0x0[_usn4..] Where 0X0123456789ABCDEF In _usn3) Ends With Single(`6esn` In 0x0[9e0..] Where $#usn8[0e0..][07..]) Limit 7[$`5esn`..`4esn`] Where 0.e0[.e12] Return False In 0e0 As @usn6,12e12 In Null As #usn8 Unwind $@usn6 Contains $_usn4 As usn2 Union Detach Delete Filter(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $usn2[12.0..][`8esn`..]) Ends With [usn1[..$123456789][..`1esn`],0e0 Is Not Null] Ends With [0 Contains $@usn5,False Contains $`1esn` Contains @usn6],{`2esn`:`2esn`[``..]} =~[`6esn` In 0x0[9e0..] Where 0Xa[..1.e1]] =~None(`3esn` In @usn6[..\"d_str\"][..01] Where $@usn6 Is Null) Unwind $`5esn`[#usn7..`7esn`] As #usn7 Optional Match `1esn`=(((usn1 :`1esn`:@usn6{`2esn`:$123456789[..$usn2],_usn4:0X0123456789ABCDEF In _usn3})<-[{#usn8:999}]->(:usn1:``{#usn7:#usn8[$`7esn`..12.0],`1esn`:9e12 In 123.654 In True})-[``?:#usn8|:`6esn`]-(:#usn8:#usn7{`8esn`:12e12 Ends With 0e0}))) Where Null In 0xabc"),
    octest:ct_string("Remove [`7esn` In $`8esn`[0.12][12] Where $999[010..]].`4esn`! Union All Unwind $999[...12][...e12] As @usn6 Union Unwind usn1[..$123456789][..`1esn`] As `7esn`"),
    octest:ct_string("Remove Extract(`7esn` In $`8esn`[0.12][12] Where $999[010..]|.e12[$_usn4..0]).#usn8?,(_usn3 {_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null})<-[`1esn`?:_usn4|_usn3]-(:@usn6{`7esn`:0.0 Starts With Null Starts With .e12,_usn3:1000 Ends With $`5esn`})<-[{@usn6:1000 Ends With 01234567 Ends With usn1,usn2:01234567 In \"d_str\"}]-(`5esn` :#usn8:#usn7).`5esn`,{#usn8:_usn4[$`8esn`.._usn3][.0..$@usn6]}.usn2 Remove (:usn1:``{`8esn`:123.654[$``][#usn7],`1esn`:0e0 Starts With $@usn6 Starts With $7})<-[:_usn4|_usn3]-({``:1e1 Ends With 's_str' Ends With $@usn6,`5esn`:$`5esn` Is Not Null}).#usn8,Extract(`3esn` In 999 Where $123456789 =~usn1 =~0xabc).#usn8,`1esn`:`2esn`:@usn5 Union Remove None(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $`` Starts With 0x0).`3esn`,Single(usn1 In 0xabc Is Not Null Is Not Null Where False[...e0][..$#usn8]).`8esn` Delete {``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]} Ends With {`2esn`:.e12 Is Null Is Null,usn1:.e12 =~@usn5} Ends With Extract(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Is Not Null Is Not Null),(`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`` )[..`2esn`(Distinct `7esn`[_usn4..][Count(*)..],0[1.e1..#usn7])][..(_usn4 {`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})<-[@usn5?:_usn4|_usn3{#usn7:0.12 Is Null Is Null,#usn8:$1000 =~00}]-(`4esn` :_usn3:@usn5)-[@usn5? *01234567..123456789{`2esn`:01234567[`6esn`..]}]-(@usn5 {`4esn`:0.12 Is Null})] Return Distinct $`1esn` =~`1esn` =~0X0123456789ABCDEF As _usn3,`1esn`[..$#usn7] Union All With  ['s_str' Contains 999,0.12 Is Null Is Null] =~{`3esn`:7[$1000][1000]} =~Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $123456789[`1esn`..][`7esn`..]),$`5esn`[0][.12] Order By Extract(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0|0[_usn3][.12]) Starts With (#usn8 :`8esn`)<-[`2esn`?:`3esn`|_usn4]-(#usn7 :`7esn`{`3esn`:$#usn8[..123456789][..`2esn`],#usn8:0.e0 Ends With #usn8})-[:`5esn`|:`1esn`]-(@usn5 :`5esn`) Desc,@usn6 Starts With #usn8 Starts With $#usn7 Descending,.0[..\"d_str\"][..usn2] Asc Skip (@usn5 :`1esn`:@usn6{@usn5:`4esn` Is Not Null,`3esn`:.e1 =~usn2 =~`7esn`})<-[#usn7?:#usn7|`5esn` *01..7{`2esn`:.e0 =~01 =~9e12,#usn8:$123456789 Starts With `6esn` Starts With 123.654}]-(`2esn` )-[ *999]->(_usn3 {_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null})[..Extract(#usn8 In 07['s_str'][$@usn6] Where _usn4[.._usn4])][..Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where usn2[.e1..][01234567..])]"),
    octest:ct_string("With  @usn5[01234567..] As `8esn` Limit Single(`3esn` In @usn6[..\"d_str\"][..01] Where 12[`5esn`..$`3esn`][0.12..usn2])[[`6esn` In 0x0[9e0..] Where $#usn8[0e0..][07..]|0 Is Not Null Is Not Null]..][(`6esn` :usn1:``)<-[``?:usn1|#usn7]-(@usn5 :`2esn`:@usn5{@usn6:123456789 =~#usn8 =~$0})..] Where 07['s_str'][$@usn6] Optional Match @usn5=(((:`1esn`:@usn6)<-[@usn5?:_usn4|_usn3 *1000..01234567]->({@usn6:$#usn8[0e0..][07..]})<-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}))) Return *,$0 Ends With .12,$`4esn` In 0x0 Order By 1.e1[0..] Ascending,`2esn`[``..] Ascending,$123456789 Is Not Null Ascending Skip 12.e12[`2esn`..7] Limit 999[..01234567][..7] Union All Merge (:usn1:``{_usn3:123.654 Is Not Null Is Not Null}) On Match Set #usn8+=0.e0 In `2esn`,`5esn`+=False[$_usn4..][`8esn`..],@usn6+=(usn1 {@usn5:12e12 Ends With `6esn`,_usn4:\"d_str\" Starts With _usn4 Starts With $_usn4})<-[?:#usn7|`5esn`{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}]->(@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})<-[?:`1esn`|@usn6]->(`6esn` :`2esn`:@usn5) Is Null Merge `1esn`=(usn1 {usn1:_usn4[.._usn4],_usn4:@usn5[$`1esn`..][$7..]})<-[:`5esn`|:`1esn`{#usn8:`7esn` Is Null,`4esn`:False[$12]}]->(`8esn` :`3esn`{`2esn`:$`8esn`[`7esn`],`4esn`:#usn8[1e1..]})-[?:`3esn`|_usn4 *01..7{@usn5:`4esn`}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]}) On Create Set All(usn1 In 0xabc Is Not Null Is Not Null Where $``).`5esn`? =Extract(#usn8 In 0x0[_usn4..] Where 7 =~$1000 =~$`5esn`|`2esn`[`3esn`..])[{`3esn`:#usn8[..0X0123456789ABCDEF][...0]}][Any(`6esn` In .e0['s_str'..][$`8esn`..] Where \"d_str\" Ends With $1000 Ends With usn2)] On Match Set Any(`6esn` In 1000[12.e12][#usn7] Where `1esn`[$7][0Xa]).`4esn`? =$`2esn` Starts With 9e12 Unwind (@usn6 )<-[`7esn`?:@usn6]-(_usn4 :usn1:``{`2esn`:$`2esn` Is Not Null Is Not Null,`2esn`:@usn5['s_str'..$`2esn`]})[``(Distinct `` In False In True,0xabc Contains 0)] As `3esn` Union All Unwind Any(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where $0 Ends With .12) Is Null As @usn6 Match @usn5=(((usn2 :`2esn`:@usn5)-[?:`` *07{`1esn`:$#usn7[$`3esn`..$999]}]->(`7esn` :`8esn`{usn2:`5esn` =~``,`7esn`:`7esn` Is Not Null Is Not Null})<-[`2esn`?:_usn4|_usn3]->(:`3esn`{usn2:$`3esn`[9e0..0.0][_usn4..123456789]}))) Where `7esn`[..01]"),
    octest:ct_string("Merge _usn3=(#usn7 :`3esn`{_usn3:.e0[$`1esn`..][_usn4..]}) Union All Return Distinct 123456789 Ends With 9e1 Ends With ``,1.e1[$usn1..$`7esn`] Skip 12.0[`3esn`][_usn3] Limit [9e0 Starts With 0e0 Starts With $`5esn`] Contains {`6esn`:#usn7[False..][123.654..]} Merge @usn5=(@usn6 {`1esn`:$#usn8 Starts With usn2 Starts With .12,@usn6:07[$`8esn`]})<-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]-(:`4esn`:usn2{`2esn`:0Xa Contains $`6esn`}) On Create Set `6esn`+=[`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12]] Ends With [0] Ends With `8esn`,#usn8:`5esn`,#usn7+=01234567[..`6esn`][..``] Union All Optional Match ((:`5esn`{`7esn`:0Xa[Count(*)][0xabc],`2esn`:`4esn` Ends With 's_str' Ends With @usn6})<-[`8esn`?:usn1|#usn7 *01..7{usn1:123456789[$_usn4..]}]-(@usn5 :`2esn`:@usn5$#usn8)-[`4esn`?:#usn8|:`6esn` *999{`8esn`:010[`1esn`..`4esn`]}]-({@usn5:07[0..],`8esn`:Count(*)[..$_usn3][..$usn2]})) Where $`8esn`[`7esn`] Optional Match (#usn8 :`6esn`:`3esn`),(({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})) Detach Delete $`7esn` =~1.e1 =~0.e0,$``[$_usn4][$`3esn`],usn2[Count(*)][$`1esn`]"),
    octest:ct_string("Remove All(`6esn` In 1000[12.e12][#usn7] Where `4esn` In $`2esn` In @usn5).`1esn`?,(`3esn` :`4esn`:usn2)<-[{@usn6:1000 Ends With 01234567 Ends With usn1,usn2:01234567 In \"d_str\"}]-(`5esn` :#usn8:#usn7).#usn7?,[9e0[123456789..0][12.0..@usn6],`8esn` Ends With $`1esn`,usn1[9e1..]].usn1! Merge #usn8=(`` :`8esn`{`5esn`:True Contains .e1 Contains `2esn`}) Unwind All(`6esn` In .e0['s_str'..][$`8esn`..] Where .e12 Is Null Is Null)[@usn5(Distinct)..][[0 Contains $@usn5,False Contains $`1esn` Contains @usn6]..] As `5esn` Union All Create `2esn`=((`2esn` {_usn3:Null =~Count(*),@usn5:7 =~$1000 =~$`5esn`})<-[#usn7:`1esn`|@usn6 *999{`4esn`:0X7[..`5esn`][..$`7esn`]}]-(:`1esn`:@usn6{`1esn`:12.0[9e12]['s_str'],`3esn`:$123456789 Is Not Null}))"),
    octest:ct_string("Detach Delete Any(`6esn` In 1000[12.e12][#usn7] Where 1e1 =~$`8esn` =~`1esn`)[..(_usn4 :`3esn`{`2esn`:999})-[`4esn`?:#usn8|:`6esn` *999{`8esn`:010[`1esn`..`4esn`]}]-(`6esn` {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})][..[$999[@usn5..][Null..]]] Union All Remove `3esn`(Distinct `4esn`[Count(*)],$`3esn`[9e0..0.0][_usn4..123456789]).`1esn`?,Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $#usn8 =~7 =~.12|@usn6[..\"d_str\"][..01])._usn3?,``:@usn6"),
    octest:ct_string("Create ((usn1 {`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})-[:#usn7|`5esn`{_usn3:`` Contains 010 Contains $1000}]->(:`4esn`:usn2{usn2:1.e1[0x0][$123456789]})) Create `3esn`=(($_usn3)),`2esn`=((#usn8 {`4esn`:$`3esn` Is Null})) Remove Extract(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where .12 Is Null).`5esn`!,[`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where @usn6[.0]|True =~0 =~123456789].usn1! Union Unwind 1000 Ends With $`5esn` As `8esn` Remove usn1('s_str' Ends With $7,01[$0]).``?,[$_usn3 =~`1esn`,\"d_str\"[7..$999]].#usn8"),
    octest:ct_string("Remove Single(usn1 In 999 Where 0.12[123456789..]).@usn6? Match (((usn1 :_usn4)-[`2esn`? *7]->(`` :``:`6esn`{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]})-[`2esn`?:`3esn`|_usn4]->({`1esn`:1e1 Starts With 010}))),(((:`3esn`{`7esn`:$123456789[`4esn`..]})-[@usn6?$`3esn`]->(@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->(`8esn` :#usn7))) Where @usn5 Is Null Unwind `7esn`[0.e0..False][0e0..$_usn4] As `` Union With  Extract(`3esn` In False In $`2esn` In 1e1 Where `` Contains 010 Contains $1000|@usn5['s_str'..$`2esn`])[`5esn`(0e0['s_str'])][None(`6esn` In 0x0[9e0..] Where 0xabc Is Not Null Is Not Null)] As @usn5 Order By {`6esn`:$1000 =~$`8esn` =~$`2esn`}[{_usn3:12.0[..0X7],usn2:$_usn3[0e0..][12.0..]}] Descending,All(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $usn2[12.0..][`8esn`..])[(`6esn` :`5esn`{`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})-[:@usn5|:@usn6 *01234567..123456789]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null})<-[?:`4esn`*]->(@usn5 :usn2{`3esn`:0.0 Ends With $usn1 Ends With $999,`5esn`:1.e1 Is Null Is Null})..] Desc Limit $12[`3esn`][`3esn`] Union All Unwind 123456789 Ends With Extract(`2esn` In $``[$#usn8] Where \"d_str\" Is Not Null|$`1esn` Is Not Null Is Not Null) Ends With [999 Contains $`7esn` Contains usn2] As @usn5 Remove Extract(usn1 In 0xabc Is Not Null Is Not Null|9e0 Starts With 0e0 Starts With $`5esn`).@usn5,[7 =~False,1.e1[$`7esn`]].`7esn` Return Distinct *,.12 Is Not Null Is Not Null As `2esn` Order By Extract(usn1 In 123.654 =~.e0 =~9e0 Where $`7esn` Starts With 07 Starts With `1esn`|`7esn` Is Not Null Is Not Null) =~`7esn`(Distinct $@usn6[..``],0.0 Starts With Null Starts With .e12) =~@usn6(Distinct 00 In 1000) Ascending"),
    octest:ct_string("Return Distinct Single(`5esn` In $usn2 Contains $`1esn` Where True Contains .e1 Contains `2esn`) In None(`3esn` In False In $`2esn` In 1e1 Where #usn7[.12][usn2]),`` In usn1 In 01234567,$`3esn` Ends With 123456789 Ends With 0.e0 As `7esn` Order By [@usn5 Is Null,\"d_str\" Ends With $1000 Ends With usn2,$usn1 Is Not Null Is Not Null][..`7esn`(Distinct $`2esn`[.._usn3],9e0 Is Null Is Null)][..[.e0['s_str'..][$`8esn`..]]] Descending,9e1 =~$0 Asc Skip $`` Is Null Is Null Limit @usn6 Is Not Null Create `2esn`=((@usn6 $_usn3)-[?:`8esn`|@usn6*{``:0.e0 Contains $123456789 Contains 123456789,`4esn`:#usn7 Is Not Null Is Not Null}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]})<-[ *..010]->(_usn4 :`3esn`{`2esn`:999})) Union All Unwind usn1[..`7esn`][..$`8esn`] As `4esn` With  _usn4 Ends With .e12 As @usn6,$`1esn` =~`1esn` =~0X0123456789ABCDEF As _usn3 Order By ``($#usn7[$`3esn`..$999]) Starts With {``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]} Ascending,1e1 =~$`8esn` =~`1esn` Descending Skip Null Is Null Is Null Limit 0.e0 Is Not Null Where $`7esn`[..0X7][..False]"),
    octest:ct_string("Unwind `` In 123.654 In 0.0 As `3esn` Union All Merge @usn6=(((usn1 :_usn4)-[`2esn`? *7]->(`` :``:`6esn`{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]})-[`2esn`?:`3esn`|_usn4]->({`1esn`:1e1 Starts With 010}))) On Match Set @usn6 =(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[#usn7:`1esn`|@usn6 *0..]-(@usn6 :usn2) In (`5esn` {_usn3:1.e1 Is Null Is Null})<-[_usn3?:#usn7|`5esn` *..0x0]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})<-[?:@usn5|:@usn6]-(`7esn` {@usn6:.e0[123456789..][$`2esn`..],``:$0[`5esn`][9e12]})"),
    octest:ct_string("Remove [`7esn` In $`8esn`[0.12][12] Where .e1 =~\"d_str\" =~'s_str'].`8esn`! Union All Detach Delete $@usn5 =~$usn2 =~True,$`3esn`[0.12..][$@usn5..] Union Optional Match (({_usn4:.e0[$`1esn`..][_usn4..],usn2:.12[0X0123456789ABCDEF..]})),`2esn`=((#usn8 {`4esn`:$`3esn` Is Null})) Detach Delete Filter(`6esn` In 0x0[9e0..] Where `7esn`[`8esn`][#usn7]) Is Not Null Is Not Null"),
    octest:ct_string("Create (`5esn` :`8esn`{`1esn`:`7esn` Contains .0 Contains #usn8})<-[?{usn2:9e0[0..1e1]}]->({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})-[?{`4esn`:1000 Ends With $`5esn`}]->(`1esn` :`7esn`),((:#usn8:#usn7)<-[{_usn3:12.e12 Contains 0X7 Contains Count(*)}]-(`7esn` :@usn6)<-[ *07{usn1:010 =~0e0 =~9e1}]->({@usn5:07[0..],`8esn`:Count(*)[..$_usn3][..$usn2]})) Unwind [`6esn` In .e0['s_str'..][$`8esn`..] Where $@usn5 =~$usn2 =~True|.e0[$`1esn`..][_usn4..]] Starts With {_usn3:12.0 In 07,`2esn`:01234567[..`6esn`][..``]} Starts With All(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where _usn4[.._usn4]) As _usn3 Union All Unwind $usn1[9e0..] As @usn6 Return Distinct *,1000 =~$@usn5 Skip $123456789[..0.12] Merge #usn8=(((@usn6 {@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})-[`5esn`:@usn5|:@usn6*{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]->(#usn8 :`2esn`:@usn5)<-[`5esn`:_usn4|_usn3 *0X7..0x0]-(:#usn7{_usn4:\"d_str\"[7..$999]}))) On Match Set (`3esn` :`3esn`{_usn4:$123456789 Is Not Null,_usn4:#usn8 =~#usn7 =~0x0})<-[`4esn`?{`8esn`:$@usn5 Starts With Count(*) Starts With $usn1,#usn7:0.e0[.e12]}]->(:`6esn`:`3esn`{@usn6:#usn8 Is Not Null,usn2:1e1 Is Null})<-[?{`3esn`:'s_str'[$`6esn`..][$0..]}]->(`2esn` :@usn6).`3esn`? =0x0 In 0X0123456789ABCDEF"),
    octest:ct_string("Create (`5esn` :`8esn`{`1esn`:`7esn` Contains .0 Contains #usn8})<-[?{usn2:9e0[0..1e1]}]->({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})-[?{`4esn`:1000 Ends With $`5esn`}]->(`1esn` :`7esn`),(_usn4 {`4esn`:01234567[..00][..$`3esn`],usn1:00[\"d_str\"][False]}) Delete Count(*) Starts With 01234567 Starts With 0x0,usn2[.e1..][01234567..],`8esn` Is Not Null"),
    octest:ct_string("Optional Match ((#usn7 {@usn5:$`5esn` Contains $usn2})<-[{@usn6:1000 Ends With 01234567 Ends With usn1,usn2:01234567 In \"d_str\"}]-(#usn8 {`4esn`:$`3esn` Is Null})<-[{`5esn`:usn2[.e1..][01234567..],usn1:999 Is Not Null}]->(`5esn` :`8esn`{``:00 In 1000})) Where 9e12[\"d_str\"] Return Distinct *,``($#usn7[$`3esn`..$999]) Starts With {``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]} As `1esn` Skip .12 Is Null Limit 0X7 Contains $@usn6 Remove usn1(999 Is Not Null,0.12[123456789..]).`3esn` Union All Optional Match ((usn2 :`2esn`:@usn5)) Remove [0x0[01234567..Null][0Xa...e12],$`7esn`[`2esn`]]._usn4,[`5esn` In $usn2 Contains $`1esn` Where 0e0['s_str']|`8esn` Contains 0X0123456789ABCDEF]._usn3?,(`3esn` {`3esn`:1e1[`3esn`]})-[`6esn`? *999{_usn4:\"d_str\" Contains $999 Contains `2esn`}]-(`1esn` {_usn3:12.0 In 07,`2esn`:01234567[..`6esn`][..``]}).`3esn` Union All With Distinct $`5esn` Starts With 0X0123456789ABCDEF Starts With Null,$#usn7[9e12..12],`8esn`[9e12] Order By 12e12 Ends With 0e0 Desc,`1esn`[..$@usn6][..`3esn`] Asc Delete $123456789 In `8esn` In 0X7"),
    octest:ct_string("Merge `4esn`=((`5esn` :``:`6esn`)-[:@usn5|:@usn6 *999{`5esn`:0x0 =~@usn5 =~01}]->(_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})) Create ((usn1 {`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})-[:#usn7|`5esn`{_usn3:`` Contains 010 Contains $1000}]->(:`4esn`:usn2{usn2:1.e1[0x0][$123456789]})) Unwind 1000 Is Not Null As usn2 Union With Distinct $@usn5 =~$usn2 =~True,.e1 =~$#usn8 Order By $@usn6[9e1..$`2esn`] Descending,#usn8 =~#usn7 =~0x0 Desc,Count(*)[..12][..$999] Desc Limit Extract(`7esn` In $`8esn`[0.12][12] Where 123456789[$_usn4..]|01234567[$`7esn`])[@usn5()..][Extract(`7esn` In $`8esn`[0.12][12] Where `5esn`[12.0]|\"d_str\"[.0][9e0])..] Where @usn5 Is Null Union All Create usn1=(:`5esn`{`7esn`:'s_str'[$#usn8],``:`1esn`[..$#usn7]})<-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-(`5esn` {_usn3:1.e1 Is Null Is Null})<-[_usn4 *00]-(#usn7 :`7esn`)"),
    octest:ct_string("With  $`7esn`[`2esn`] As @usn6 Order By All(`2esn` In $``[$#usn8] Where $`2esn`[.._usn3]) =~[`6esn`[_usn3],12.0 In 07] =~[123456789[0.0..`2esn`][1.e1..$_usn4]] Ascending,@usn6[..$usn1][..010] Asc,`4esn` In .12 In $#usn8 Asc Skip 0x0 Starts With $usn2 Starts With $@usn6 Where .12 Is Not Null"),
    octest:ct_string("Remove ({#usn8:$`` Is Not Null Is Not Null,`8esn`:$usn2 Starts With 9e1 Starts With `7esn`})-[?:`` *07{`1esn`:$#usn7[$`3esn`..$999]}]->(`7esn` :`8esn`{usn2:`5esn` =~``,`7esn`:`7esn` Is Not Null Is Not Null})<-[``?:#usn8|:`6esn`]->({@usn6:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`5esn`:.12[usn1]})._usn4?,{_usn4:\"d_str\" Ends With $`3esn`,``:#usn8 =~#usn7 =~0x0}.#usn8?,{``:9e0 Is Null Is Null}.`6esn`! Union Remove ({usn2:0[1e1..00],@usn6:$`6esn`[.e12..$`6esn`][$#usn7...0]})-[? *999]-({_usn3:123.654 Is Not Null Is Not Null}).`7esn`!,[123456789 =~@usn5 =~$`5esn`,01 Starts With $`5esn` Starts With 01234567].`5esn`?,[9e12 In 123.654 In True,`6esn` In $``].`6esn`"),
    octest:ct_string("Merge (((@usn6 {`2esn`:123.654 Is Not Null Is Not Null})<-[{#usn8:07[0..],``:_usn3[..`8esn`]}]-(`` :`8esn`{`5esn`:True Contains .e1 Contains `2esn`})<-[`5esn`?:_usn3|`6esn` *..0X0123456789ABCDEF{`5esn`:usn2[.e1..][01234567..],usn1:999 Is Not Null}]->({@usn5:_usn3[_usn4..$`2esn`][$123456789..9e12]}))) On Create Set usn2 =0x0[01234567..Null][0Xa...e12],{#usn8:#usn7[@usn6..]}.@usn6 =#usn7[False..][123.654..] On Create Set Extract(`6esn` In 1000[12.e12][#usn7] Where 1.e1 Ends With 0x0 Ends With 1e1|@usn5[..$999][..$0]).`7esn`! =$12[usn2][12.0],_usn3:@usn6 Union All Detach Delete [usn1 In 0xabc Is Not Null Is Not Null Where .12[..07]][{`7esn`:12.e12[.12..$_usn3][0e0..9e0],`7esn`:0X7[..True][..01234567]}..{usn2:$`6esn`[.e12]}],$#usn8 In `` Union Return Distinct 9e0[.e0] As `8esn`,{_usn3:`1esn`[..$#usn7]} Contains Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1) Contains [$1000[00..],$`6esn`[.e12..$`6esn`][$#usn7...0],0Xa[..1.e1]],0x0 In 0X0123456789ABCDEF As usn1 Skip Any(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where $0 Ends With .12) Is Null Limit All(`6esn` In .e0['s_str'..][$`8esn`..] Where 12.0[9e12]['s_str'])[[`5esn` Ends With 0x0,.0 =~$@usn5 =~1.e1]..[`6esn` In .e0['s_str'..][$`8esn`..] Where $0[`5esn`][9e12]|.12[..07]]][{`8esn`:.0[..False]}..[usn1 In 0xabc Is Not Null Is Not Null Where 9e0[123456789..0][12.0..@usn6]|.e12 Is Not Null Is Not Null]]"),
    octest:ct_string("Remove Any(usn1 In 0xabc Is Not Null Is Not Null Where 0x0[$7..][`7esn`..]).@usn6!,Extract(#usn8 In 0x0[_usn4..] Where 00[01234567][Count(*)])._usn3?,({@usn5:07[0..],`8esn`:Count(*)[..$_usn3][..$usn2]})-[usn1:_usn3|`6esn`{#usn8:`6esn`[`7esn`..$_usn3][9e0..#usn8],`3esn`:\"d_str\" =~_usn3 =~0.0}]-({``:9e1[$#usn8],`4esn`:1.e1 Is Null Is Null})-[`2esn`:#usn8|:`6esn`]->(`4esn` :#usn8:#usn7)._usn4! Detach Delete 9e0 Is Null Is Null,`6esn`[`7esn`..$_usn3][9e0..#usn8] Union Detach Delete _usn4 =~1000 =~_usn3,`8esn`['s_str'..] Merge @usn6=(`8esn` :#usn7)-[ *0xabc..{``:0xabc =~01,`7esn`:$#usn7[123456789..][$`4esn`..]}]-(:#usn7{_usn3:7 Contains 1000 Contains $usn1})-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :`5esn`) On Match Set `5esn`+=\"d_str\" Ends With 123456789,`3esn` =12 Is Null On Create Set Single(`5esn` In 1e1 =~$`8esn` =~`1esn` Where .e12[$_usn4..0]).`2esn`! =$`8esn` Is Not Null,`2esn` =0 Is Null Is Null,_usn4 =Filter(`6esn` In 0x0[9e0..] Where $123456789 In 010 In $`8esn`) In ``(Distinct 0X0123456789ABCDEF In _usn3) In (_usn3 {usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`4esn`:1.e1 Is Null Is Null})-[`1esn`?:`1esn`|@usn6 *12]->(`8esn` :@usn6) Union All Remove {#usn8:1e1[\"d_str\"..],`2esn`:$#usn8 Ends With _usn4 Ends With usn2}.@usn5,Extract(`3esn` In 999 Where $0 Contains 7 Contains 1.e1).@usn5,{`4esn`:$#usn7[123456789..][$`4esn`..]}.`5esn`!"),
    octest:ct_string("Detach Delete `2esn`[``..] Match ((:@usn5{``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]})<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(`4esn` :`5esn`)<-[?:@usn5|:@usn6]-({`1esn`:$`7esn` Ends With $_usn4 Ends With `5esn`})),(:@usn5{_usn4:$`5esn`[0][.12]})<-[@usn5?{usn1:7 Ends With `3esn` Ends With $`2esn`}]-(_usn4 ) Where 9e1 =~$0 Match (@usn6 :`6esn`:`3esn`)-[:`3esn`|_usn4{usn1:$`6esn`[$`6esn`..][0X7..],@usn5:123456789 Starts With #usn8}]-(_usn3 :`1esn`:@usn6) Union With  _usn4[#usn7..#usn8] Order By Single(`6esn` In 1000[12.e12][#usn7] Where usn1[9e1..]) =~Any(_usn4 In 12.e12 Is Null Is Null Where .e0['s_str'..][$`8esn`..]) =~Filter(usn1 In 999 Where 010 In $@usn5 In `5esn`) Descending Where $123456789[..$usn2] Delete $@usn6 Ends With 0.0,#usn8 =~#usn7 =~0x0"),
    octest:ct_string("Unwind $usn1 Is Not Null Is Not Null As @usn6 Union All With Distinct 0Xa Ends With 07 Ends With `7esn` As _usn3,All(`6esn` In 1000[12.e12][#usn7] Where 9e12[\"d_str\"]) Contains [usn1 In 0xabc Is Not Null Is Not Null Where 9e0[123456789..0][12.0..@usn6]|True] Contains [_usn3 =~$12,`5esn`[0e0..]] As `6esn` Skip Extract(_usn4 In 12.e12 Is Null Is Null Where _usn4 In .0 In .12|usn2 In 1e1 In `4esn`) Contains None(`3esn` In @usn6[..\"d_str\"][..01] Where `4esn` In .12 In $#usn8) Contains Filter(`5esn` In $usn2 Contains $`1esn` Where usn2[Count(*)][$`1esn`]) Limit $999 Contains 12e12 Union All Match @usn5=(`8esn` :#usn7)-[ *0xabc..{``:0xabc =~01,`7esn`:$#usn7[123456789..][$`4esn`..]}]-(:#usn7{_usn3:7 Contains 1000 Contains $usn1})-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :`5esn`) Where .0[..False] Return Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null) =~[12 Is Null Is Null,9e0[$@usn6]] As `2esn`,`8esn`[..0xabc][..01234567] Skip $7[0.e0][`8esn`] Limit 0X7 Contains 12e12 Remove None(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $usn2[12.0..][`8esn`..]).`4esn`,Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where `` Contains $_usn3 Contains 0e0|$@usn5 Is Not Null Is Not Null)._usn4"),
    octest:ct_string("Create usn2=(`5esn` {`1esn`:999 Ends With $`4esn`})<-[usn2:`5esn`|:`1esn`{usn1:`2esn` Is Null Is Null}]->(`5esn` {usn1:1000 Ends With $`5esn`}) Delete 01 In 0.12 In .e12 Match (((usn1 :usn1:``{@usn6:_usn3[0Xa..]})<-[`2esn`?:@usn6]-(`2esn` :_usn4{`7esn`:`2esn`[`3esn`..],`6esn`:.12 Is Not Null})-[`4esn`?:#usn8|:`6esn` *999{`8esn`:010[`1esn`..`4esn`]}]-(`5esn` )))"),
    octest:ct_string("With Distinct Extract(`2esn` In $``[$#usn8] Where `1esn`[Null..])[[12.0[`3esn`][_usn3]]] Order By [12 Is Null Is Null,9e0[$@usn6]] Contains Extract(`6esn` In .e0['s_str'..][$`8esn`..] Where `8esn`[0x0..]|.e0['s_str'..][$`8esn`..]) Contains #usn7 Asc Skip 123.654[$`1esn`] Limit `7esn`(Distinct Count(*)[$1000..01],`7esn`[`8esn`][#usn7]) Is Not Null Return Distinct 123.654 In (:_usn3:@usn5{`1esn`:$`4esn`[.e1..$usn1],``:0x0 =~`5esn` =~$`8esn`})<-[?{``:$`6esn`[.e12]}]-(`4esn` :`3esn`) In [`2esn` In $``[$#usn8]] As #usn8 Limit False Starts With $123456789 Union Merge ``=(((`1esn` :`2esn`:@usn5{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})-[``:_usn4|_usn3]-(:``:`6esn`{@usn6:$`4esn`[$@usn5..`7esn`],`5esn`:_usn4 Starts With `6esn` Starts With $`8esn`})<-[`3esn`:usn2|:``]-(:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`}))) On Create Set @usn5 =$0 Ends With .12 On Match Set @usn5 =Filter(`6esn` In .e0['s_str'..][$`8esn`..]) Is Not Null Is Not Null,`5esn`+=[_usn4 In 12.e12 Is Null Is Null Where 0e0 =~False =~.12|Count(*) Contains 12e12 Contains 0xabc] Ends With {#usn7:_usn3[0Xa..]} Ends With _usn4(Distinct .e0 Contains 999) Return 7 Contains 1000 Contains $usn1,usn2 Contains 07 Contains False As _usn4,{#usn8:.e0 Ends With $`1esn` Ends With 1000}[Filter(#usn8 In 07['s_str'][$@usn6] Where $12[0.0..])][Filter(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..])] Order By $#usn7[123456789..][$`4esn`..] Asc Limit #usn8[..0X0123456789ABCDEF][...0] With Distinct 12[$`5esn`..$`7esn`][$1000..$_usn4] As #usn8,False[...e0][..$#usn8] As `1esn`,.e1[0X7..`2esn`] As `5esn` Order By _usn3[0Xa..] Descending,01234567[$`7esn`] Asc Skip .12 =~1000 =~7 Limit 7[.0..01] Union With  *,123456789 Ends With 9e1 Ends With ``,0xabc[.12..][#usn8..] As `3esn` Order By `4esn` In $`2esn` In @usn5 Asc,Extract(usn1 In 123.654 =~.e0 =~9e0 Where $123456789[`3esn`..`5esn`][1e1..$`5esn`]) Ends With [usn1 In 123.654 =~.e0 =~9e0 Where `5esn`[usn1]] Ascending Match ((:`1esn`:@usn6{`2esn`:12e12 Ends With 0 Ends With $@usn6,``:`1esn`[Null..]})) Where 1e1 In 12.e12"),
    octest:ct_string("Delete 1e1[\"d_str\"..],$@usn5[..`4esn`] Unwind Null Is Null Is Null As `8esn` Union Match @usn5=(`4esn` {@usn6:_usn4[$`8esn`.._usn3][.0..$@usn6]}) Where `5esn`[12.0] Union All Merge `1esn`=(((_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[`7esn`?:`2esn`|:`7esn`]->(`3esn` {#usn8:#usn7 =~$`8esn`})-[ *07{`1esn`:$``}]->(`1esn` :usn1:``)))"),
    octest:ct_string("Return $`7esn`[`2esn`] As @usn6,$#usn8 =~7 =~.12 As `5esn`,Single(#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]) Contains Single(`5esn` In $usn2 Contains $`1esn` Where `2esn` Contains `3esn` Contains $@usn5) Contains {_usn3:0xabc Contains 0,`6esn`:$`6esn`[.e12..$`6esn`][$#usn7...0]} As _usn3 Limit Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null) =~[12 Is Null Is Null,9e0[$@usn6]] Return `2esn`(_usn3[..usn2])[Extract(usn1 In 999 Where 010 In $@usn5 In `5esn`)] As #usn8,999[..\"d_str\"],07 =~0.e0 Limit 0x0[$7] Merge `8esn`=(usn2 {``:`6esn`[`7esn`..$_usn3][9e0..#usn8],`8esn`:.0[01234567]}) Union All Return *,$`6esn` Starts With $@usn6 Order By Any(`3esn` In False In $`2esn` In 1e1 Where #usn7[.12][usn2])[{#usn7:0e0['s_str'],`1esn`:$#usn8[1.e1]}..[@usn6[.0],0X0123456789ABCDEF Is Not Null,0x0[$`2esn`..'s_str'][$@usn5..1.e1]]][[`4esn` Ends With 's_str' Ends With @usn6]..$`5esn`] Asc,0Xa[Count(*)][0xabc] Desc,9e0[0Xa..][`3esn`..] Desc Remove All(usn1 In 123.654 =~.e0 =~9e0 Where $`7esn` Starts With 07 Starts With `1esn`).`4esn`!,$`5esn`.`4esn`? Merge `4esn`=((:`8esn`)-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :_usn3:@usn5)) Union All With Distinct *,999 Ends With $`4esn`,All(`6esn` In .e0['s_str'..][$`8esn`..] Where $0[`5esn`][9e12])[Extract(#usn8 In 0x0[_usn4..] Where `8esn`[0x0..]|$12[#usn8..$@usn5][9e0..usn1])] Order By Extract(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1|$`2esn` Is Not Null Is Not Null) =~[`7esn`[..01],1e1 =~$`8esn` =~`1esn`,$`6esn`[.e12..$`6esn`][$#usn7...0]] Descending,{`5esn`:$`5esn`[`4esn`..$`2esn`],#usn7:999 Ends With 123456789 Ends With 12.0} Ends With #usn8(Distinct 1e1 Ends With 's_str' Ends With $@usn6,\"d_str\"[..$_usn3]) Ends With 0X0123456789ABCDEF Descending,`5esn`[usn1] Asc Skip $@usn5[All(`3esn` In @usn6[..\"d_str\"][..01] Where .12 Is Not Null Is Not Null)..] Where 1000 Starts With 0e0 Starts With 0 Unwind {`8esn`:Count(*) Is Null Is Null,@usn5:.e0 Ends With $`1esn` Ends With 1000} Is Not Null As `4esn` Optional Match _usn3=(:#usn7{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]}),(({_usn4:$`5esn` Starts With $`3esn` Starts With 1.e1,`3esn`:1000[Null][$`7esn`]})-[? *999]-({_usn3:123.654 Is Not Null Is Not Null})<-[usn1?:`8esn`|@usn6]->(#usn8 :#usn7{`2esn`:0.e0[.e12]})) Where `4esn` Ends With $12 Ends With 0.e0"),
    octest:ct_string("Merge #usn8=(usn1 :#usn8:#usn7)<-[_usn4?:#usn8|:`6esn`]->(:`1esn`:@usn6{_usn4:1000 Ends With $`5esn`}) On Match Set `2esn`:``:`6esn`,Extract(`6esn` In 0x0[9e0..] Where `7esn`[`8esn`][#usn7]|`8esn` Ends With $`1esn`).`1esn`? =1.e1 =~01234567,{@usn6:$123456789[12.0],#usn7:usn1 =~_usn4 =~$usn1}.`8esn`! =@usn6(Distinct $0 Contains 7 Contains 1.e1)[(_usn4 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8)][Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0X0123456789ABCDEF In _usn3)] Union Return 1.e1[0..] As `3esn`,$#usn8[@usn5..$1000] Order By 010 Starts With 0X7 Ascending,1e1[`4esn`..] Ascending Skip #usn7[.12][usn2] Match (({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`4esn` :``:`6esn`)-[@usn5{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(`8esn` :`1esn`:@usn6))"),
    octest:ct_string("Optional Match `2esn`=(#usn8 :`5esn`{_usn3:'s_str' Starts With $usn2,`2esn`:$`2esn` Starts With 9e12})<-[`2esn`:usn1|#usn7 *123456789..{`4esn`:Count(*) Ends With 7 Ends With 0,@usn5:.0[@usn6..]}]-(@usn5 {@usn6:$123456789[12.0],#usn7:usn1 =~_usn4 =~$usn1}),(((usn2 {`1esn`:`7esn` Is Null Is Null})-[?:_usn4|_usn3]->(:_usn3:@usn5{`6esn`:$`8esn` Ends With #usn8,`8esn`:123456789 Ends With 9e1 Ends With ``})<-[`5esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]}]->({_usn3:.e12 =~\"d_str\" =~@usn5})))"),
    octest:ct_string("Return $_usn3[0e0..][12.0..] As `3esn` Order By None(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1) In {`6esn`:1.e1[0..],usn2:`` Contains $_usn3 Contains 0e0} Descending,$123456789 In `8esn` In 0X7 Descending Skip 12.0[9e1..][Null..] Union All Merge (({usn2:$`3esn`[9e0..0.0][_usn4..123456789]})) On Create Set usn2+=[`3esn` In 999 Where 0 Contains $@usn5] Starts With {usn1:$usn1 Starts With Null Starts With $``,@usn5:0x0[01234567..Null][0Xa...e12]} Starts With {usn1:$`2esn` Is Not Null Is Not Null,``:True Ends With `6esn` Ends With 9e0},#usn8+=`4esn` Ends With $12 Ends With 0.e0,_usn4+=01234567 Contains 0.12 Contains `5esn` On Create Set _usn3 =[@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`],12e12 Ends With $_usn4 Ends With $`2esn`][Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where _usn4[.._usn4])][$@usn5],`3esn` =.e1 =~\"d_str\" =~'s_str' Unwind $`5esn` Ends With `6esn` Ends With 0x0 As ``"),
    octest:ct_string("Delete `6esn` Is Not Null Optional Match ((:@usn5{usn1:12.e12 Is Null Is Null,``:Null Is Not Null Is Not Null})-[? *..0x0{`1esn`:`4esn` Starts With `8esn`}]->(`2esn` {_usn3:.e1 Ends With $123456789})<-[`2esn`?:`6esn` *0xabc..]-(_usn4 {`2esn`:1.e1 Is Not Null Is Not Null})),@usn5=(({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})-[`4esn`?:usn1|#usn7{`1esn`:123456789 Ends With 9e1 Ends With ``,@usn5:0xabc Contains 0}]-(`7esn` :@usn6)) Merge usn1=(@usn5 :usn1:``{usn2:9e0[0..1e1]})<-[#usn8?:`5esn`|:`1esn`{`8esn`:.12 Is Not Null,_usn3:Count(*) In $`2esn`}]-({`1esn`:1e1 Starts With 010}) On Create Set `` =usn1[..$123456789][..`1esn`],None(`7esn` In $`8esn`[0.12][12] Where 0Xa[..9e12][...e0]).`2esn`? =$0[$1000..][_usn4..] Union All Remove _usn4(Distinct 00[0X7..9e12]).usn1!,[1e1 =~$`8esn` =~`1esn`].`3esn`? Return 0Xa Is Null Is Null Skip .e1 =~\"d_str\" =~'s_str'"),
    octest:ct_string("Remove usn2(1000 Ends With $`5esn`,$`3esn` Ends With `1esn` Ends With 1.e1).`3esn`? Union Merge _usn4=(((`6esn` :_usn3:@usn5{`6esn`:1.e1[0..],`1esn`:'s_str' Ends With $7})<-[{`1esn`:$#usn8 Starts With usn2 Starts With .12,@usn6:07[$`8esn`]}]->(`7esn` {@usn6:$`3esn` Starts With 9e12 Starts With `8esn`})-[? *..0X0123456789ABCDEF{`7esn`:`4esn` Is Not Null,``:.12 Is Not Null}]->(`7esn` {`2esn`:9e0[$@usn6]}))) On Create Set `7esn`+={`8esn`:Count(*)[12..123.654][$`1esn`..$0]}[{``:0 Is Null Is Null,@usn6:07['s_str'][$@usn6]}..{@usn5:.12[9e1..0X7]}][`1esn`..(`7esn` {#usn7:1e1[`3esn`]})-[`3esn`]->(#usn8 {`7esn`:12.e12[.12..$_usn3][0e0..9e0],`7esn`:0X7[..True][..01234567]})-[:`1esn`|@usn6*..]->(:`8esn`{`8esn`:0X7 Contains 12.0,`3esn`:`4esn` Starts With `8esn`})] Merge (@usn6 {@usn6:$`7esn` Ends With $_usn4 Ends With `5esn`,usn1:123.654[0Xa..0x0][.12..12e12]})<-[:@usn6]->(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null})"),
    octest:ct_string("With Distinct *,Any(usn1 In 0xabc Is Not Null Is Not Null Where 12e12 Ends With `6esn`)[[`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 7 =~False|`6esn` Is Not Null]],0X7 Contains 12.0 As `5esn` Skip 12.e12 Is Null Is Null Delete 12.0[..0X7] Union All Optional Match (((_usn4 :`2esn`:@usn5)-[:_usn3|`6esn` *01..7{_usn4:$`2esn`[$``..12e12]}]-(`5esn` {usn1:1000 Ends With $`5esn`})-[`7esn`?:``]->(usn1 :_usn4))),(({usn1:False[$12],`1esn`:0.e0 Ends With $123456789})) Merge _usn3=(#usn7 :`3esn`{_usn3:.e0[$`1esn`..][_usn4..]}) On Match Set _usn3(1000 Starts With ``,.e1 =~\"d_str\" =~'s_str').@usn5? =7 =~$1000 =~$`5esn` On Create Set _usn3+={_usn3:`1esn`[..$#usn7]} Contains Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1) Contains [$1000[00..],$`6esn`[.e12..$`6esn`][$#usn7...0],0Xa[..1.e1]],#usn7+=$12[`3esn`][`3esn`],{_usn3:0Xa[..$`2esn`][..00]}.`5esn`? =[`6esn` In 1000[12.e12][#usn7] Where 12.0[9e12]['s_str']|0.e0 =~01234567 =~01234567] Ends With Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $`8esn`[0.12][12]) Ends With count(1000[Null][$`7esn`],$123456789[`3esn`..`5esn`][1e1..$`5esn`]) With  $0 Contains 7 Contains 1.e1,{@usn5:Count(*)[..$_usn3][..$usn2],@usn5:$1000[$usn1][.e1]}[Single(`6esn` In 1000[12.e12][#usn7] Where $usn2 Contains $`1esn`)..{#usn7:usn1 Ends With .0 Ends With `4esn`,_usn3:$`1esn` Is Null}][[`7esn` In $`8esn`[0.12][12] Where usn1 In 010]..usn1(1e1 Is Null)] Order By usn2[9e12] Descending,$@usn6 Ends With 010 Descending Skip Single(#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]) Contains Single(`5esn` In $usn2 Contains $`1esn` Where `2esn` Contains `3esn` Contains $@usn5) Contains {_usn3:0xabc Contains 0,`6esn`:$`6esn`[.e12..$`6esn`][$#usn7...0]} Where 123456789[0.0..`2esn`][1.e1..$_usn4]"),
    octest:ct_string("Match (`5esn` :#usn7)-[`5esn`?:@usn5|:@usn6 *7{`2esn`:$`8esn`[0.12][12],`6esn`:`` Contains $_usn3 Contains 0e0}]-(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]}) Where Null =~Count(*) Union Unwind 0Xa[..1.e1] As `8esn` Unwind `7esn`[..$`5esn`] As _usn4 Union All Return $`8esn` Is Not Null Order By #usn7(usn2 =~`6esn`) Is Null Is Null Desc Skip [0e0 In `8esn` In 0xabc,12.0[9e12]['s_str'],@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`]][..{usn1:\"d_str\"[7..$999],`8esn`:$1000[$usn1][.e1]}][..[0]] Delete @usn6 Contains $_usn3 Contains 12.0 Create `2esn`=((#usn7 {@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})<-[:_usn4|_usn3]-(#usn8 :`8esn`{_usn4:usn2 In 1e1 In `4esn`})),`7esn`=((#usn8 :#usn8:#usn7{@usn6:$#usn8[0e0..][07..],``:$`7esn` =~1.e1 =~0.e0})<-[`1esn`?:`3esn`|_usn4{_usn4:12e12 Ends With $_usn4 Ends With $`2esn`,``:.12 Is Not Null}]-(:`1esn`:@usn6{`5esn`:.e12[$_usn4..0],`4esn`:$#usn8 In True In #usn7}))"),
    octest:ct_string("Remove All(`5esn` In $usn2 Contains $`1esn` Where 0e0['s_str'])._usn4,[$#usn8 In True In #usn7,`2esn`[_usn4..`7esn`],$usn2 Ends With 0 Ends With 12.0].`2esn`,{_usn3:01[$0]}.@usn5? Match `1esn`=((:#usn7{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]})),(((:#usn7{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})-[{usn1:Count(*)[..12][..$999],#usn8:usn1 In 010}]->(:`7esn`{#usn8:12e12 Ends With `6esn`,_usn4:0Xa Contains $#usn8 Contains `5esn`})-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]->(_usn3 {`3esn`:$@usn5 Is Not Null Is Not Null}))) Where 123456789 Starts With #usn8 Merge ((_usn3 )<-[?{`3esn`:'s_str'[$`6esn`..][$0..]}]->(`2esn` :@usn6)) Union All Remove `6esn`(01[$0]).@usn6,Extract(usn1 In 123.654 =~.e0 =~9e0 Where _usn3[0Xa..]).`2esn`?,(@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})<-[`1esn`?:_usn4|_usn3]-(:`1esn`:@usn6{`2esn`:12e12 Ends With 0 Ends With $@usn6,``:`1esn`[Null..]})<-[ *..010]->(_usn4 :`3esn`{`2esn`:999}).#usn8! Unwind #usn7 Is Null As usn2"),
    octest:ct_string("Return 0xabc Is Not Null As `6esn` Limit [$999[9e0..010][999..010],12e12 Ends With $_usn4 Ends With $`2esn`][None(_usn4 In 12.e12 Is Null Is Null Where $`4esn` In 0x0)..]"),
    octest:ct_string("Return 0 Contains $@usn5 As `8esn` Order By $`` Starts With 0x0 Descending Limit All(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $123456789 Is Not Null) Is Null Is Null Match `6esn`=(({@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})),({`2esn`:0,`3esn`:$`7esn` Starts With 07 Starts With `1esn`}) Where 9e12[1.e1] Union Return Distinct $`5esn` Starts With 0X0123456789ABCDEF Starts With Null,$#usn7[9e12..12],`8esn`[9e12] Order By 12e12 Ends With 0e0 Desc,`1esn`[..$@usn6][..`3esn`] Asc With  0.0 =~0 =~`` As `7esn`,0.12[123456789..] Skip None(`3esn` In 999 Where 07 Ends With $_usn4 Ends With 0.e0) Is Null Is Null Limit 0.e0 In `2esn` Where 1e1 Contains 0Xa Match ``=((:`2esn`:@usn5{@usn5:`4esn`})) Where $`4esn` In 0.0 In `3esn` Union Create #usn8=((_usn3 :@usn5{`2esn`:1.e1[#usn7][1.e1]})-[#usn8?*..{#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]}]->(:`2esn`:@usn5{@usn5:`4esn`})),(@usn5 {`3esn`:usn1[$`1esn`..]})-[?:`8esn`|@usn6*{``:0.e0 Contains $123456789 Contains 123456789,`4esn`:#usn7 Is Not Null Is Not Null}]-(usn2 :@usn6{@usn5:#usn8[True..#usn7][01..@usn5]}) Merge `7esn`=((`3esn` :usn1:``)<-[`5esn`?:_usn3|`6esn` *..0X0123456789ABCDEF{`5esn`:usn2[.e1..][01234567..],usn1:999 Is Not Null}]->({@usn5:_usn3[_usn4..$`2esn`][$123456789..9e12]})<-[ *0Xa{#usn8:_usn4[#usn7..#usn8],usn2:9e0[0..1e1]}]->(#usn8 :#usn8:#usn7{@usn6:$#usn8[0e0..][07..],``:$`7esn` =~1.e1 =~0.e0})) On Match Set _usn3+=$7 Contains `2esn` Contains .0,{`2esn`:`2esn`[``..]}.`3esn` =@usn6(Distinct 0xabc Contains 0)[{_usn4:$`2esn` Ends With 1e1}..][All(_usn4 In 12.e12 Is Null Is Null Where 0e0 =~False =~.12)..] On Create Set `6esn` =999[..01234567][..7],usn2:``:`6esn` Create (:usn1:``{_usn3:123.654 Is Not Null Is Not Null})-[`1esn`?:`1esn`|@usn6 *12]->({`6esn`:usn1[$`1esn`..],_usn4:$usn2 Contains $`1esn`})-[:usn1|#usn7]->(usn1 :`3esn`{`4esn`:$123456789 =~usn1 =~0xabc,`7esn`:999 Is Not Null}),@usn6=(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null})<-[{`8esn`:'s_str'[$#usn8]}]->(:#usn7{``:$`6esn` Starts With usn1})"),
    octest:ct_string("Detach Delete 999 Ends With $`4esn`,`7esn`[_usn4..][Count(*)..],[False Starts With $123456789][[usn1 In 0xabc Is Not Null Is Not Null Where 0x0[$7..][`7esn`..]|00 In 1000]..[.e12 Is Null Is Null]][Extract(#usn8 In 07['s_str'][$@usn6] Where 7 =~$1000 =~$`5esn`|\"d_str\"[1.e1][01234567])..Single(`3esn` In False In $`2esn` In 1e1 Where .e12[..$_usn4][..#usn7])] With Distinct *,Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0) Is Not Null,$`5esn`[#usn7..`7esn`] As `8esn` Skip $1000[..`6esn`][..123456789] Limit $1000[..`6esn`][..123456789] Union Unwind 00 Contains $7 Contains $`8esn` As `5esn` Union All Unwind 7[$`5esn`..`4esn`] As usn1"),
    octest:ct_string("Unwind {#usn7:0.e0 Contains @usn5 Contains 0X7} =~[$999[01234567][@usn5],_usn4 In .0 In .12,$#usn8[1.e1]] =~{_usn4:$`2esn` Ends With 1e1} As usn1 Union Remove Extract(`3esn` In @usn6[..\"d_str\"][..01] Where 12[`5esn`..$`3esn`][0.12..usn2]|`5esn` In 12.e12 In 1000)._usn4?,[usn2[.e1..][01234567..],`5esn` Ends With $999]._usn3,`7esn`(Distinct 7[$1000][1000]).`1esn`? Detach Delete @usn5 In .e0 In \"d_str\" Remove `5esn`:_usn3:@usn5,`6esn`:`7esn`"),
    octest:ct_string("Create ({_usn3:.12[usn1],_usn4:$usn1 Starts With Null Starts With $``})-[`3esn`]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5}) Create `5esn`=((`` :usn1:``{#usn7:$123456789[`4esn`..]})),`5esn`=((`1esn` {`7esn`:$7[`7esn`][123.654],@usn6:`1esn`[usn1]})-[:#usn7|`5esn`]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null})) Return *,.e12 =~\"d_str\" =~@usn5 Order By `4esn` In .12 In $#usn8 Ascending,010 Starts With 0X7 Ascending Skip (#usn8 :#usn8:#usn7)<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(`4esn` :`5esn`) Contains {_usn3:12.0 In 07,`2esn`:01234567[..`6esn`][..``]} Limit 0.0 =~$#usn7 =~`1esn`"),
    octest:ct_string("Optional Match (:@usn5{_usn4:$`5esn`[0][.12]})<-[@usn5?{usn1:7 Ends With `3esn` Ends With $`2esn`}]-(_usn4 ),(_usn3 {`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`}) Merge usn2=((#usn7 {@usn5:$`5esn` Contains $usn2})<-[{@usn6:1000 Ends With 01234567 Ends With usn1,usn2:01234567 In \"d_str\"}]-(#usn8 {`4esn`:$`3esn` Is Null})<-[{`5esn`:usn2[.e1..][01234567..],usn1:999 Is Not Null}]->(`5esn` :`8esn`{``:00 In 1000})) On Create Set _usn4+=.12 =~1000 =~7"),
    octest:ct_string("Optional Match `4esn`=(usn1 :usn1:``{@usn6:_usn3[0Xa..]})-[{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}) Where 1e1 Is Null Union All Create `3esn`=(($_usn3)),`2esn`=((#usn8 {`4esn`:$`3esn` Is Null})) Delete $123456789 In `8esn` In 0X7 Unwind (:`7esn`{@usn6:`2esn`[``..]})<-[?{``:Null Is Not Null Is Not Null}]-(:_usn4{@usn6:$123456789[`1esn`..]}) Ends With [1e1 Starts With 010,.e0 Is Not Null] Ends With All(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0e0 Starts With $@usn6 Starts With $7) As usn2 Union All Unwind @usn6[$0..Null] As usn1"),
    octest:ct_string("Return $`3esn` Ends With `1esn` Ends With 1.e1 As _usn3,9e0[0Xa..][`3esn`..] As #usn7 Skip 7[$`5esn`..`4esn`]"),
    octest:ct_string("Detach Delete 1000 Starts With 0x0,Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 9e1 Contains _usn3|.0[01234567])[[$@usn6[..``],12 Is Null]][Filter(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 9e12[$123456789..$usn2])],$#usn8[0xabc..usn2]"),
    octest:ct_string("Merge `6esn`=(({@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})) On Create Set _usn4 =0xabc[9e1..][07..],Filter(`3esn` In 999 Where _usn4[1000..``]).`2esn`? =$`2esn` Contains `6esn` Contains $`2esn` Optional Match ((({@usn6:$@usn5 =~$usn2 =~True,`4esn`:$#usn8 =~7 =~.12})<-[:usn2|:`` *01234567..123456789{usn2:00[0X7..9e12]}]->(`6esn` {`5esn`:0x0 =~@usn5 =~01})-[#usn8?:``{`7esn`:$`5esn` Starts With $`3esn` Starts With 1.e1}]-(`1esn` {@usn5:9e1 Starts With 12.e12 Starts With 010,`8esn`:$0[@usn6..][.e12..]}))) Where $999[010..] Remove Single(`6esn` In 0x0[9e0..] Where `4esn` In $`2esn` In @usn5)._usn3,Filter(usn1 In 0xabc Is Not Null Is Not Null Where False Contains $`1esn` Contains @usn6)._usn3 Union All Unwind Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0) =~Filter(`6esn` In 0x0[9e0..] Where `7esn` Is Null Is Null) =~[`6esn` In 0x0[9e0..] Where `7esn` Is Null Is Null|$`4esn`[.e1..$usn1]] As @usn5 Unwind @usn6(`4esn` Starts With $#usn8 Starts With $#usn8,.e1 =~usn2 =~`7esn`)[..{`2esn`:Count(*) Contains 12e12 Contains 0xabc}][..Extract(#usn8 In 0x0[_usn4..] Where 0xabc[123.654][12]|$`6esn` Is Not Null)] As `7esn`"),
    octest:ct_string("Create ((({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]})-[#usn8?:#usn7|`5esn`{`3esn`:`5esn`[usn1],`2esn`:`6esn` In $``}]->(:@usn5{usn1:12 Is Null Is Null})<-[?{``:$`6esn`[.e12]}]-(`4esn` :`3esn`))) With Distinct *,$_usn3[0e0..][12.0..] As `3esn` Where $#usn8 In True In #usn7 Union Return `2esn`[`3esn`..] As `8esn`,{`6esn`:`` In 123.654 In 0.0} Is Not Null Is Not Null Skip 07 =~0.e0 Remove `5esn`(Distinct 1e1 Ends With 's_str' Ends With $@usn6,.e1 =~\"d_str\" =~'s_str').@usn6!,usn1:@usn5 Create ((`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]})),(((`1esn` {@usn6:$12[#usn8..$@usn5][9e0..usn1]})<-[?:usn2|:``{_usn3:.e1 Ends With $123456789}]-(`4esn` {#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})-[`3esn`]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5})))"),
    octest:ct_string("Detach Delete $999 Ends With $`` Ends With 07 Union All Remove usn1:`3esn`,[usn1 In 0xabc Is Not Null Is Not Null Where True Contains .e1 Contains `2esn`].`1esn`! Union All Match (:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`}),usn2=((_usn3 :@usn6{@usn5:0e0 =~False =~.12})-[?:@usn5|:@usn6 *0Xa]-(:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`})) Where 1e1 Is Null Unwind @usn6(`4esn` Starts With $#usn8 Starts With $#usn8,.e1 =~usn2 =~`7esn`)[..{`2esn`:Count(*) Contains 12e12 Contains 0xabc}][..Extract(#usn8 In 0x0[_usn4..] Where 0xabc[123.654][12]|$`6esn` Is Not Null)] As `7esn` Merge usn1=((`` :usn2{@usn5:usn2,usn1:0.0[.12..`8esn`]})<-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]-(`8esn` :#usn7)) On Match Set @usn6 =$`8esn`[0.12][12],`8esn` =999[..01234567][..7] On Create Set @usn6 ={`8esn`:.12 Is Not Null,_usn3:Count(*) In $`2esn`}[..[@usn6[$0..Null],$999[010..],$`6esn`[$`6esn`..][0X7..]]]"),
    octest:ct_string("Merge usn2=((({@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})-[?:`2esn`|:`7esn` *0X7..0x0{usn2:0.12 Contains 0x0 Contains @usn5,_usn3:.e12 Contains $usn2 Contains $@usn6}]-(:`2esn`:@usn5{`4esn`:_usn3 =~$12,_usn4:.e1 =~usn2 =~`7esn`})-[`6esn` *00]-(:`8esn`{@usn5:1000 Starts With 0e0 Starts With 0,#usn7:$`5esn`[`4esn`..$`2esn`]}))) On Match Set `3esn`+=#usn8 Return *,12 Ends With 0 Ends With Null,Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null) =~[12 Is Null Is Null,9e0[$@usn6]] Order By $123456789 In `8esn` In 0X7 Descending,123456789[$_usn4..] Asc Skip `` Is Not Null Is Not Null Detach Delete 999,`8esn`[..0xabc][..01234567],`8esn`[12.e12][`4esn`]"),
    octest:ct_string("Unwind .12 Is Null As _usn4"),
    octest:ct_string("Merge _usn4=(({usn2:$`3esn`[9e0..0.0][_usn4..123456789]})) On Match Set `3esn`+=Extract(_usn4 In 12.e12 Is Null Is Null Where 010 =~0e0 =~9e1|0Xa =~0Xa =~`3esn`)[Any(`3esn` In 999 Where $#usn7[..$999][..9e1])..None(usn1 In 0xabc Is Not Null Is Not Null Where 123456789[..0])][[`6esn` In 0x0[9e0..]|0x0 =~@usn5 =~01]..(usn2 :_usn3:@usn5)<-[`5esn`?:`7esn`]-(`8esn` {`3esn`:Null Is Null Is Null})-[`6esn` *00]->(`2esn` :`5esn`{`1esn`:$@usn6 Ends With 0.0})],`7esn` =$usn2[$`4esn`..$`2esn`],All(#usn8 In 0x0[_usn4..] Where `8esn`[0x0..]).`1esn`! =[0X0123456789ABCDEF[$_usn3][$_usn4]][None(`5esn` In 1e1 =~$`8esn` =~`1esn` Where .12[9e1..0X7])][(`5esn` {_usn3:1.e1 Is Null Is Null})<-[_usn3?:#usn7|`5esn` *..0x0]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})<-[?:@usn5|:@usn6]-(`7esn` {@usn6:.e0[123456789..][$`2esn`..],``:$0[`5esn`][9e12]})] On Match Set #usn8 =Single(usn1 In 123.654 =~.e0 =~9e0 Where $123456789[..$`7esn`][..\"d_str\"])[..Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 9e1 Contains _usn3)][..None(usn1 In 123.654 =~.e0 =~9e0 Where $7 Ends With 12.e12 Ends With `1esn`)],`4esn` =$0[`5esn`][9e12],@usn5+=({#usn7:$`3esn` Is Null})<-[`8esn` *0..$12]-(:`2esn`:@usn5{#usn8:0.e0 Contains @usn5 Contains 0X7,`5esn`:0x0[9e0..]}) Ends With Extract(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]) Union Unwind (@usn5 :`2esn`:@usn5$#usn8)-[`6esn`?:`1esn`|@usn6 *0xabc..]->(:_usn4{_usn3:`1esn`[Null..]}) Starts With 12.0 Starts With Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) As _usn4 Union Optional Match usn2=(((:#usn8:#usn7{`8esn`:12e12 Ends With 0e0})<-[_usn3?:`` *..010{usn2:`7esn`[_usn4..][Count(*)..]}]->(`8esn` :``:`6esn`{#usn7:$`3esn` Is Null})<-[@usn5{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(:`5esn`{@usn5:True Contains $`` Contains 01234567}))),`4esn`=((`8esn` :`4esn`:usn2{`5esn`:$0[`5esn`][9e12],``:#usn7[False..][123.654..]})<-[`4esn`{#usn8:123456789[..0],#usn8:.e12 =~\"d_str\" =~@usn5}]-(:``:`6esn`)) Where .e0[$`1esn`..][_usn4..]"),
    octest:ct_string("Remove (`3esn` {`3esn`:1e1[`3esn`]})<-[:@usn6]->(#usn8 ).#usn7?,[`7esn` In $`8esn`[0.12][12] Where 0.12 Is Null]._usn3? Union All Remove Any(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $`2esn`[$``..12e12]).``!"),
    octest:ct_string("Unwind 123456789 =~#usn8 =~$0 As #usn7 With Distinct All(`7esn` In $`8esn`[0.12][12]) Contains [usn1 In 123.654 =~.e0 =~9e0 Where Count(*) Contains 12e12 Contains 0xabc] Contains [`4esn` Ends With 's_str' Ends With @usn6] As #usn8,$7[..$``] As ``,(:`1esn`:@usn6)<-[{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(`3esn` :`4esn`:usn2) =~[12 Is Null Is Null,9e0[$@usn6]] Skip None(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where .e12 =~@usn5) Is Not Null Is Not Null Limit 0x0[$`2esn`..'s_str'][$@usn5..1.e1] Union Return Distinct {`8esn`:$0[`5esn`][9e12]}[Extract(`6esn` In 0x0[9e0..] Where $`3esn` Is Not Null|Count(*) In $`2esn`)..][(`7esn` {#usn7:1e1[`3esn`]})-[usn2?:@usn5|:@usn6]->(#usn7 {`2esn`:999})<-[{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(#usn8 :_usn4)..] Union All Create `4esn`=((:`8esn`)-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :_usn3:@usn5)),@usn6=(usn2 )<-[? *..0X0123456789ABCDEF{usn2:123456789 Ends With 9e1 Ends With ``,`3esn`:9e0[123456789..0][12.0..@usn6]}]-({``:0.12 Contains 0x0 Contains @usn5}) Remove All(`5esn` In $usn2 Contains $`1esn` Where $#usn8[..123456789][..`2esn`]).@usn5,[$`3esn` Is Null,.12[usn1]].`6esn`?"),
    octest:ct_string("Merge `8esn`=(`8esn` :@usn6)<-[ *7]-(@usn6 {`4esn`:$#usn7 =~usn2 =~`3esn`,_usn4:01 In 0.12 In .e12}) On Create Set _usn4+=Single(usn1 In 123.654 =~.e0 =~9e0 Where 7[$1000][1000])[(`7esn` {`8esn`:0 Is Null Is Null})<-[ *..0X0123456789ABCDEF{@usn6:`4esn` Is Not Null,`2esn`:@usn6[.0]}]-(`6esn` :usn2)][Single(`3esn` In False In $`2esn` In 1e1 Where True Contains .e1 Contains `2esn`)] Detach Delete .0 =~$@usn5 =~1.e1,[usn2 Contains 0,.e0 =~7 =~False,.12] Is Null,@usn6[...12][..123.654] Unwind 12[$`3esn`..] As `2esn` Union Remove [`7esn` In $`8esn`[0.12][12] Where usn1 In 010|@usn6[$usn1][$`2esn`]].usn2?,(_usn3 :@usn6{@usn5:0e0 =~False =~.12})<-[_usn4?:``{@usn5:1000 Starts With 0e0 Starts With 0,#usn7:$`5esn`[`4esn`..$`2esn`]}]-(_usn4 :#usn8:#usn7).#usn7!,[$usn2[12.0..][`8esn`..],0xabc Contains 0].`1esn` Remove All(`6esn` In 1000[12.e12][#usn7] Where 1.e1 Ends With 0x0 Ends With 1e1).`6esn`!,Filter(#usn8 In 07['s_str'][$@usn6] Where $@usn6 Ends With 0.0).`4esn`,{`7esn`:123.654[0Xa..0x0][.12..12e12],`4esn`:$`8esn`[0.12][12]}.usn2! Detach Delete .e1 =~\"d_str\" =~'s_str',(`2esn` :#usn7{`1esn`:`4esn` Ends With 's_str' Ends With @usn6,`6esn`:$7 Ends With 12.e12 Ends With `1esn`})-[`3esn`? *0X7..0x0{`4esn`:$_usn4[$123456789..][12..]}]->(`7esn` {@usn6:0 =~#usn8})[{@usn5:'s_str' Contains 999,`6esn`:1000[12.e12][#usn7]}]"),
    octest:ct_string("Remove Single(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1).`2esn`,Filter(usn1 In 999 Where True[$usn1..12][``..\"d_str\"]).#usn8?,[$#usn7[$`3esn`..$999],$999 Is Not Null].#usn7! Union Optional Match `6esn`=(((:#usn8:#usn7{usn1:00['s_str'],#usn8:$`8esn`[``..True][1000..0.12]})<-[?:`1esn`|@usn6]->(#usn7 {`1esn`:$`4esn`[.e1..$usn1],``:0x0 =~`5esn` =~$`8esn`})-[{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]}]->(`3esn` :#usn7{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}))) Remove [usn1 In 0xabc Is Not Null Is Not Null Where .e12[..#usn7][..9e12]]._usn4,(@usn6 )<-[ *0Xa{#usn8:_usn4[#usn7..#usn8],usn2:9e0[0..1e1]}]->(#usn8 :#usn8:#usn7{@usn6:$#usn8[0e0..][07..],``:$`7esn` =~1.e1 =~0.e0})<-[#usn8?:#usn7|`5esn`{`3esn`:`5esn`[usn1],`2esn`:`6esn` In $``}]-(@usn5 {usn2:123.654 =~.e0 =~9e0,`3esn`:@usn6[.0]}).`5esn`,{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]}.`3esn`"),
    octest:ct_string("With Distinct *,$#usn8[1.e1] As #usn7 Skip $0 Contains 7 Contains 1.e1 Limit [`7esn` In `8esn` In 12,usn2 =~`6esn`,.e12 =~\"d_str\" =~@usn5][(:@usn6{usn2:12.e12[.12..$_usn3][0e0..9e0]})-[`7esn`?:`2esn`|:`7esn`]-(#usn8 :`7esn`)][`5esn`(1000 Is Not Null)] Where 12e12 Ends With 0 Ends With $@usn6 Unwind $_usn3[0e0..][12.0..] As `2esn`"),
    octest:ct_string("Return Distinct @usn6 In [00[0X7..9e12]] In Single(`3esn` In False In $`2esn` In 1e1 Where 's_str' Ends With $7) Merge usn1=({usn1:$7[$12]})<-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]-(#usn8 :#usn7{`2esn`:0.e0[.e12]})<-[:@usn6]->(:`7esn`$12) On Match Set None(usn1 In 999 Where @usn6 Ends With 0.12 Ends With `3esn`).`3esn`! =`5esn`[0e0..],_usn3+=01234567[..00][..$`3esn`] On Create Set usn2+=$123456789 Is Null Is Null,`1esn` =None(`7esn` In $`8esn`[0.12][12] Where 01 Is Null)[Single(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 999 Ends With 123456789 Ends With 12.0)..][None(usn1 In 0xabc Is Not Null Is Not Null Where 123456789[..0])..] Create (_usn3 :@usn6{@usn5:0e0 =~False =~.12})-[?:``]->(@usn6 :``:`6esn`{#usn7:9e1 Contains _usn3})"),
    octest:ct_string("Merge `5esn`=((`4esn` :usn2)<-[:#usn7|`5esn`*{`8esn`:01[$0],``:0xabc Is Not Null Is Not Null}]-(_usn3 :`7esn`{#usn7:123.654 =~.e0 =~9e0,_usn3:`1esn`[Null..]})) Union All Optional Match #usn7=(`7esn` :`7esn`)-[{`5esn`:0.e0 =~01234567 =~01234567}]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]}),``=(((`6esn` {`5esn`:0x0 =~@usn5 =~01})<-[?{`5esn`:$1000 =~$`8esn` =~$`2esn`,_usn3:$`` Starts With 0x0}]->({`2esn`:``[0X7..][$@usn6..],@usn6:usn1[..`7esn`][..$`8esn`]})<-[`6esn`? *999]->(@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]}))) Delete (`5esn` :`8esn`{``:00 In 1000})<-[? *123456789..{`7esn`:01234567[9e0][.0],`2esn`:999 Ends With $`4esn`}]-({@usn6:$#usn8[0e0..][07..]}) Ends With (@usn6 {@usn6:$`7esn` Ends With $_usn4 Ends With `5esn`,usn1:123.654[0Xa..0x0][.12..12e12]})-[@usn5:@usn6]-(:`4esn`:usn2{_usn4:`1esn`[$7][0Xa]}),(_usn4 :_usn3:@usn5)<-[@usn6:`8esn`|@usn6{@usn6:#usn8 =~#usn7 =~0x0,`7esn`:$usn1 Ends With $`2esn`}]->(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[?:`6esn`]->(`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})[Any(`5esn` In $usn2 Contains $`1esn` Where @usn6[$usn1][$`2esn`])..][None(`3esn` In False In $`2esn` In 1e1 Where True Contains $`` Contains 01234567)..]"),
    octest:ct_string("Merge _usn3=(@usn5 :`5esn`{@usn5:$`2esn` Ends With 1e1,usn1:'s_str'[$`6esn`..][$0..]}) Remove None(`6esn` In .e0['s_str'..][$`8esn`..] Where .12).`1esn`,{_usn4:$1000[$usn1][.e1]}.`7esn`!"),
    octest:ct_string("With  *,False Ends With $_usn4 Ends With $#usn7,0[_usn3][.12] Skip $#usn7[123456789..][$`4esn`..] Limit None(`3esn` In False In $`2esn` In 1e1 Where .0[@usn6..]) Is Null Is Null Return Distinct $usn1[usn1..$`8esn`][12e12..$``] As usn1 Order By $`3esn`[0.12..][$@usn5..] Asc,(`5esn` :`2esn`:@usn5{usn2:$`6esn` Starts With usn1,``:123456789 =~@usn5 =~$`5esn`})-[{#usn8:999}]-(:usn1:``{_usn3:123.654 Is Not Null Is Not Null}) =~{`6esn`:9e1[..01234567][..`4esn`]} =~None(`6esn` In 1000[12.e12][#usn7] Where 0X0123456789ABCDEF Is Not Null) Ascending Skip 0X0123456789ABCDEF Is Not Null Limit $`6esn` Is Null Is Null Optional Match _usn3=(#usn7 :`3esn`{_usn3:.e0[$`1esn`..][_usn4..]}) Where 0xabc Ends With Count(*) Ends With 0x0 Union Unwind [.12 Is Null,12 Ends With 0 Ends With Null,0x0 =~@usn5 =~01][{usn2:$`6esn`[.e12]}] As @usn5 Merge usn2=((({@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})-[?:`2esn`|:`7esn` *0X7..0x0{usn2:0.12 Contains 0x0 Contains @usn5,_usn3:.e12 Contains $usn2 Contains $@usn6}]-(:`2esn`:@usn5{`4esn`:_usn3 =~$12,_usn4:.e1 =~usn2 =~`7esn`})-[`6esn` *00]-(:`8esn`{@usn5:1000 Starts With 0e0 Starts With 0,#usn7:$`5esn`[`4esn`..$`2esn`]}))) On Match Set `6esn`+=.e0[0X0123456789ABCDEF.._usn3][9e1..$`3esn`] On Match Set _usn3(1000 Starts With ``,.e1 =~\"d_str\" =~'s_str').@usn5? =7 =~$1000 =~$`5esn` Union All With  *,_usn3[0Xa..] As usn2,$#usn8 Ends With _usn4 Ends With usn2 As #usn7 Order By $`3esn` Ends With @usn6 Ends With 123.654 Asc Limit 0e0 Is Not Null Remove {_usn4:0.12[123456789..]}.`1esn`,[7 =~False,1.e1[$`7esn`]].`7esn`"),
    octest:ct_string("Delete 123456789[..#usn8],$`` Is Not Null Is Not Null,.0 =~$@usn5 =~1.e1"),
    octest:ct_string("Merge `4esn`=(:usn2{usn1:_usn4[.._usn4],@usn6:@usn5 In .e0 In \"d_str\"})<-[_usn3?:#usn7|`5esn` *..0x0]->(`7esn` {#usn7:1e1[`3esn`]}) Optional Match usn1=(:`5esn`{`7esn`:'s_str'[$#usn8],``:`1esn`[..$#usn7]})<-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-(`5esn` {_usn3:1.e1 Is Null Is Null})<-[_usn4 *00]-(#usn7 :`7esn`) Union All With Distinct (`6esn` :`8esn`)-[@usn6{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]}]-(`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]})<-[`8esn`?:usn1|#usn7 *01..7{usn1:123456789[$_usn4..]}]-(usn2 :@usn6) =~$`3esn` =~`8esn`(1000[12.e12][#usn7],#usn8[1e1..]) As `7esn` Order By [usn1 In 123.654 =~.e0 =~9e0 Where $@usn5[$_usn3]|$`2esn` Ends With 1e1] Contains All(#usn8 In 0x0[_usn4..] Where 0xabc[123.654][12]) Descending,Extract(usn1 In 999 Where 1e1 =~$`8esn` =~`1esn`|7 Starts With $@usn6) Is Not Null Is Not Null Desc Where 0e0 Is Not Null Create usn2=(`7esn` {`8esn`:0 Is Null Is Null})<-[`4esn`?{`8esn`:$@usn5 Starts With Count(*) Starts With $usn1,#usn7:0.e0[.e12]}]->(:`6esn`:`3esn`{@usn6:#usn8 Is Not Null,usn2:1e1 Is Null})-[#usn8?:usn1|#usn7{`8esn`:$#usn7[`7esn`..][$`8esn`..]}]-(:`1esn`:@usn6)"),
    octest:ct_string("Merge ({@usn5:0x0 =~`5esn` =~$`8esn`})-[:`1esn`|@usn6 *7{@usn5:0X7[..True][..01234567]}]->(`1esn` :_usn3:@usn5) On Match Set _usn4+=(usn1 {@usn5:12e12 Ends With `6esn`,_usn4:\"d_str\" Starts With _usn4 Starts With $_usn4})<-[?:#usn7|`5esn`{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}]->(@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})<-[?:`1esn`|@usn6]->(`6esn` :`2esn`:@usn5) Is Null,`5esn`+=.12[usn1],`8esn`+=usn1[..Count(*)][..`8esn`] On Match Set _usn4+=(usn1 {@usn5:12e12 Ends With `6esn`,_usn4:\"d_str\" Starts With _usn4 Starts With $_usn4})<-[?:#usn7|`5esn`{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}]->(@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})<-[?:`1esn`|@usn6]->(`6esn` :`2esn`:@usn5) Is Null,`5esn`+=.12[usn1],`8esn`+=usn1[..Count(*)][..`8esn`] Union Merge ((`4esn` {#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})-[:`5esn`|:`1esn`]-(@usn5 :`5esn`)) Return Distinct (`2esn` :#usn7{`1esn`:`4esn` Ends With 's_str' Ends With @usn6,`6esn`:$7 Ends With 12.e12 Ends With `1esn`})-[`3esn`? *0X7..0x0{`4esn`:$_usn4[$123456789..][12..]}]->(`7esn` {@usn6:0 =~#usn8})[{@usn5:'s_str' Contains 999,`6esn`:1000[12.e12][#usn7]}],010 Starts With \"d_str\" As `4esn` Order By 00 =~999 =~07 Desc,`5esn`[0e0..] Desc,[#usn7[@usn6..]] In All(#usn8 In 0x0[_usn4..] Where 0xabc[123.654][12]) In All(usn1 In 999 Where `5esn` Ends With $999) Desc Skip 1e1 Contains 0Xa Limit $999 Contains 12e12 Detach Delete 0.0[.12..`8esn`],$7 Is Null,`4esn` Ends With $12 Ends With 0.e0 Union With  *,.0[..\"d_str\"][..usn2] As `1esn` Limit $1000 =~.e12 =~0.e0 Where #usn8[$`7esn`..12.0] Match #usn7=((#usn7 :`5esn`)<-[`2esn`?:`5esn`|:`1esn`]->(:usn2)),((_usn3 :`6esn`:`3esn`{`7esn`:1000 Ends With 01234567 Ends With usn1})-[usn2?:_usn4|_usn3{#usn8:12.0[`3esn`][_usn3]}]-(usn2 :`4esn`:usn2{`3esn`:@usn5[$`1esn`..][$7..]})<-[usn2:`3esn`|_usn4]-(usn2 :@usn6{@usn5:#usn8[True..#usn7][01..@usn5]})) Where 9e1[$`3esn`][$`1esn`] Remove None(#usn8 In 0x0[_usn4..] Where $@usn6 Is Not Null).`3esn`?,[`3esn` In False In $`2esn` In 1e1 Where 12e12 Ends With $_usn4 Ends With $`2esn`|@usn5[01234567..]].`3esn`?,(`3esn` :`4esn`:usn2{usn2:`8esn` Contains 0X0123456789ABCDEF,`8esn`:12.0[..0X7]})<-[`7esn`? *01234567..123456789{_usn3:12.e12 =~.0}]->(:``:`6esn`{`6esn`:1.e1[0..],usn2:`` Contains $_usn3 Contains 0e0})<-[? *01..7{usn2:1e1 =~$`8esn` =~`1esn`}]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]}).`3esn`!"),
    octest:ct_string("Unwind 00 Contains $7 Contains $`8esn` As `5esn`"),
    octest:ct_string("Create (((:_usn4{_usn3:`1esn`[Null..]})-[`2esn`? *7]-(#usn8 :_usn3:@usn5{`3esn`:@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`],`4esn`:0e0 Is Null})<-[?:#usn8|:`6esn`*]->(@usn6 :@usn5{`8esn`:$@usn6 Contains 0e0}))),`6esn`=((`3esn` :`2esn`:@usn5)<-[usn2?:#usn8|:`6esn` *7]-(:@usn6)) Return Distinct *,usn1 Is Null Order By #usn7 Is Not Null Descending,$`3esn` Ends With @usn6 Ends With 123.654 Asc Skip {`7esn`:usn2 Starts With 00}[(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})<-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-({@usn6:`5esn` Ends With $999})..][(:`1esn`:@usn6{_usn3:$usn2 =~`6esn` =~`1esn`,`6esn`:0[1e1..00]})-[{_usn4:$`8esn` Contains .0 Contains 0.12}]->(:usn1:``{_usn4:1000[12.e12][#usn7]})-[@usn6 *00]->(`4esn` {_usn4:$`2esn`[$``..12e12]})..] Limit (@usn6 :_usn4{`2esn`:\"d_str\"[..$_usn3],@usn6:$7[`7esn`][123.654]})-[``:`2esn`|:`7esn` *..0x0{`3esn`:`` Contains 010 Contains $1000}]->(:_usn4)<-[:`5esn`|:`1esn`{#usn8:`7esn` Is Null,`4esn`:False[$12]}]->(_usn3 :@usn5{`5esn`:12e12[..9e12][..$@usn6]})[Single(`3esn` In 999 Where usn1[$`1esn`..])..] Union All Delete 1.e1[0..],usn1(Distinct 0 Is Null Is Null,$@usn5 =~$usn2 =~True) In Any(usn1 In 999 Where @usn6 Ends With 0.12 Ends With `3esn`) In [`4esn` Ends With 's_str' Ends With @usn6,$`4esn` In 0x0]"),
    octest:ct_string("Optional Match (((`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})<-[?:@usn5|:@usn6]->(#usn8 :#usn8:#usn7)-[#usn7?:`7esn` *..010]-(`1esn` {usn2:@usn5[$`1esn`..][$7..],@usn6:$#usn8[0xabc..usn2]}))),@usn6=(#usn8 :_usn4{`6esn`:9e1[..01234567][..`4esn`]})<-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]-(@usn6 :`4esn`:usn2{`4esn`:_usn3 =~$12,_usn4:.e1 =~usn2 =~`7esn`}) Where usn2 Contains 0 Merge usn2=((#usn7 {@usn5:$`5esn` Contains $usn2})<-[{@usn6:1000 Ends With 01234567 Ends With usn1,usn2:01234567 In \"d_str\"}]-(#usn8 {`4esn`:$`3esn` Is Null})<-[{`5esn`:usn2[.e1..][01234567..],usn1:999 Is Not Null}]->(`5esn` :`8esn`{``:00 In 1000})) On Create Set _usn4+=.12 =~1000 =~7 With Distinct *,None(_usn4 In 12.e12 Is Null Is Null Where _usn4 In .0 In .12) Starts With {`4esn`:`8esn`[0x0..],usn2:$#usn8 =~7 =~.12} Starts With _usn3(Distinct usn1[$`1esn`..]) As #usn8,'s_str' Contains 999 Order By Filter(`6esn` In 1000[12.e12][#usn7] Where 01 Starts With $`5esn` Starts With 01234567)[[0.12['s_str'..$0][$usn1..9e0]]..All(`3esn` In 999 Where 07 Ends With $_usn4 Ends With 0.e0)][Filter(`3esn` In 999 Where $0 Contains 7 Contains 1.e1)..Extract(`3esn` In @usn6[..\"d_str\"][..01] Where 1.e1[$`7esn`]|01234567[9e0][.0])] Desc,[0.e0 Contains $123456789 Contains 123456789,`5esn` In 12.e12 In 1000] Starts With [123.654[.e12..\"d_str\"],1.e1[0..]] Starts With Extract(`2esn` In $``[$#usn8] Where $`5esn` Is Not Null|123456789[..#usn8]) Descending Limit Filter(`6esn` In 1000[12.e12][#usn7] Where $usn2 Contains $`1esn`) Union All Detach Delete usn1[0X7..],`7esn`[`8esn`][#usn7],$`2esn` Starts With 9e12"),
    octest:ct_string("Return Distinct True[07],usn1 =~_usn4 =~$usn1 As `7esn` Order By usn1[..Count(*)][..`8esn`] Ascending,`8esn`['s_str'..] Descending,Single(#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]) Contains Single(`5esn` In $usn2 Contains $`1esn` Where `2esn` Contains `3esn` Contains $@usn5) Contains {_usn3:0xabc Contains 0,`6esn`:$`6esn`[.e12..$`6esn`][$#usn7...0]} Descending Remove @usn6(Distinct _usn4[$`8esn`.._usn3][.0..$@usn6],0X7[..$0][..0.12]).`5esn`?,Any(`3esn` In False In $`2esn` In 1e1 Where 01[$0])._usn3?,Extract(`2esn` In $``[$#usn8] Where \"d_str\" Starts With _usn4 Starts With $_usn4).`4esn`? Return $`8esn`[`7esn`] As `2esn`,01 In 0.0 In 9e1 Skip ``(Distinct `7esn`[`8esn`][#usn7]) Contains (:@usn6{usn2:12.e12[.12..$_usn3][0e0..9e0]})-[`7esn`?:`2esn`|:`7esn`]-(#usn8 :`7esn`) Contains Any(`3esn` In False In $`2esn` In 1e1 Where True Contains .e1 Contains `2esn`) Limit $`6esn`[0e0..] Union All Delete {``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]} Ends With {`2esn`:.e12 Is Null Is Null,usn1:.e12 =~@usn5} Ends With Extract(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Is Not Null Is Not Null),(`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`` )[..`2esn`(Distinct `7esn`[_usn4..][Count(*)..],0[1.e1..#usn7])][..(_usn4 {`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})<-[@usn5?:_usn4|_usn3{#usn7:0.12 Is Null Is Null,#usn8:$1000 =~00}]-(`4esn` :_usn3:@usn5)-[@usn5? *01234567..123456789{`2esn`:01234567[`6esn`..]}]-(@usn5 {`4esn`:0.12 Is Null})] Unwind $`8esn` Ends With #usn8 As _usn3 Create ``=((:_usn3:@usn5)-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :_usn3:@usn5)),usn2=(((`1esn` {usn2:@usn5[$`1esn`..][$7..],@usn6:$#usn8[0xabc..usn2]})-[:@usn5|:@usn6]->(`5esn` {usn2:`6esn` In $``})-[? *0xabc..]->(`6esn` {`5esn`:0x0 =~@usn5 =~01})))"),
    octest:ct_string("Return $`7esn`[`2esn`] As @usn6,None(usn1 In 0xabc Is Not Null Is Not Null Where .12[..07]) Contains [$#usn7[`7esn`..][$`8esn`..],$_usn4[$123456789..][12..],`6esn` In $``] Limit $`8esn`[``..True][1000..0.12] Return Distinct 9e0[.e0] As `8esn`,{_usn3:`1esn`[..$#usn7]} Contains Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1) Contains [$1000[00..],$`6esn`[.e12..$`6esn`][$#usn7...0],0Xa[..1.e1]],0x0 In 0X0123456789ABCDEF As usn1 Skip Any(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where $0 Ends With .12) Is Null Limit All(`6esn` In .e0['s_str'..][$`8esn`..] Where 12.0[9e12]['s_str'])[[`5esn` Ends With 0x0,.0 =~$@usn5 =~1.e1]..[`6esn` In .e0['s_str'..][$`8esn`..] Where $0[`5esn`][9e12]|.12[..07]]][{`8esn`:.0[..False]}..[usn1 In 0xabc Is Not Null Is Not Null Where 9e0[123456789..0][12.0..@usn6]|.e12 Is Not Null Is Not Null]] Remove usn1:`3esn`,[usn1 In 0xabc Is Not Null Is Not Null Where True Contains .e1 Contains `2esn`].`1esn`! Union All Unwind [0.12['s_str'..$0][$usn1..9e0]] Starts With [123.654 =~.e0 =~9e0,$@usn5 Is Not Null Is Not Null,$`` Starts With 0x0] Starts With @usn6(Distinct 7 Ends With `3esn` Ends With $`2esn`,False[$12]) As `3esn` Create @usn5=(`4esn` {@usn6:_usn4[$`8esn`.._usn3][.0..$@usn6]}) Unwind `7esn`[..$`5esn`] As _usn4"),
    octest:ct_string("Return Distinct True In `1esn` In 0.12,`2esn`(Distinct 999 Is Not Null)[[usn1 In 999 Where @usn6 Ends With 0.12 Ends With `3esn`|$12 Is Null Is Null]][Single(#usn8 In 07['s_str'][$@usn6])],0Xa Ends With 07 Ends With `7esn` As `6esn` Order By $#usn8[.e1][`2esn`] Descending,`5esn`[usn1] Ascending Limit Count(*)[12..123.654][$`1esn`..$0] With  *,0.12[123456789..] As usn2 Limit {usn1:False[$12],`1esn`:0.e0 Ends With $123456789} Contains `2esn`(Distinct 01234567[`6esn`..],Count(*) Ends With $#usn8 Ends With 0Xa) Delete Extract(_usn4 In 12.e12 Is Null Is Null Where _usn4 In .0 In .12|usn2 In 1e1 In `4esn`) Contains None(`3esn` In @usn6[..\"d_str\"][..01] Where `4esn` In .12 In $#usn8) Contains Filter(`5esn` In $usn2 Contains $`1esn` Where usn2[Count(*)][$`1esn`]),.12"),
    octest:ct_string("Unwind `7esn`[7..$123456789][$0..$7] As `3esn` Return Distinct 9e0[.e0] As `8esn`,{_usn3:`1esn`[..$#usn7]} Contains Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1) Contains [$1000[00..],$`6esn`[.e12..$`6esn`][$#usn7...0],0Xa[..1.e1]],0x0 In 0X0123456789ABCDEF As usn1 Skip Any(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where $0 Ends With .12) Is Null Limit All(`6esn` In .e0['s_str'..][$`8esn`..] Where 12.0[9e12]['s_str'])[[`5esn` Ends With 0x0,.0 =~$@usn5 =~1.e1]..[`6esn` In .e0['s_str'..][$`8esn`..] Where $0[`5esn`][9e12]|.12[..07]]][{`8esn`:.0[..False]}..[usn1 In 0xabc Is Not Null Is Not Null Where 9e0[123456789..0][12.0..@usn6]|.e12 Is Not Null Is Not Null]]"),
    octest:ct_string("Detach Delete None(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1) In {`6esn`:1.e1[0..],usn2:`` Contains $_usn3 Contains 0e0},9e1 =~$0 Union All Remove Extract(`3esn` In 999 Where #usn7 Ends With 9e0|12 Ends With 0 Ends With Null).@usn5?,({usn2:0e0 Is Null,`3esn`:Count(*)[_usn3..]})-[{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]}]->(usn1 :`1esn`:@usn6)-[`7esn`? *0Xa{`3esn`:Count(*)[_usn3..]}]->({usn1:$123456789[`4esn`..],usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`]}).`6esn`,[`3esn` In False In $`2esn` In 1e1 Where _usn3 =~$12|True].#usn8? Remove Extract(usn1 In 999 Where 1e1 =~$`8esn` =~`1esn`|7 Starts With $@usn6).usn2? Optional Match _usn3=(:#usn7{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]}),(({_usn4:$`5esn` Starts With $`3esn` Starts With 1.e1,`3esn`:1000[Null][$`7esn`]})-[? *999]-({_usn3:123.654 Is Not Null Is Not Null})<-[usn1?:`8esn`|@usn6]->(#usn8 :#usn7{`2esn`:0.e0[.e12]})) Where `4esn` Ends With $12 Ends With 0.e0"),
    octest:ct_string("Detach Delete All(`6esn` In .e0['s_str'..][$`8esn`..] Where usn1 Ends With 1.e1 Ends With `4esn`)[Extract(usn1 In 123.654 =~.e0 =~9e0 Where _usn3[0Xa..])..None(`3esn` In False In $`2esn` In 1e1 Where #usn7[.12][usn2])][({_usn4:$`5esn` Starts With $`3esn` Starts With 1.e1,`3esn`:1000[Null][$`7esn`]})-[_usn3?:#usn7|`5esn` *..0x0]->(`1esn` {`3esn`:@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`],`4esn`:0e0 Is Null})<-[? *01234567..123456789]->(:`3esn`{`7esn`:$123456789[`4esn`..]})..(@usn6 :`1esn`:@usn6{usn2:#usn8 Is Not Null})-[? *12]->(:`2esn`:@usn5{#usn7:0e0['s_str'],`1esn`:$#usn8[1.e1]})<-[`6esn`:`3esn`|_usn4 *0X7..0x0$999]->({`5esn`:1e1[\"d_str\"..]})],_usn3[0Xa..] With Distinct *,usn1[..Count(*)][..`8esn`],`5esn` Ends With 0x0 Limit $#usn7[`7esn`..][$`8esn`..] Optional Match ``=(((`` :`5esn`{`5esn`:_usn3[0Xa..],usn1:1.e1 Ends With 0x0 Ends With 1e1})<-[`6esn`{`3esn`:`2esn` Contains `3esn` Contains $@usn5}]-(`4esn` :`2esn`:@usn5{#usn8:$#usn7[9e12..12]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`6esn` ))) Where 7 In 1e1 Union All Merge `1esn`=((:#usn7{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]})) Match #usn8=(:@usn5{_usn4:$`5esn`[0][.12]})<-[@usn5?{usn1:7 Ends With `3esn` Ends With $`2esn`}]-(_usn4 ),`7esn`=((`3esn` :usn1:``)<-[`5esn`?:_usn3|`6esn` *..0X0123456789ABCDEF{`5esn`:usn2[.e1..][01234567..],usn1:999 Is Not Null}]->({@usn5:_usn3[_usn4..$`2esn`][$123456789..9e12]})<-[ *0Xa{#usn8:_usn4[#usn7..#usn8],usn2:9e0[0..1e1]}]->(#usn8 :#usn8:#usn7{@usn6:$#usn8[0e0..][07..],``:$`7esn` =~1.e1 =~0.e0})) Union Optional Match `7esn`=(usn1 :_usn4)<-[usn1]->(:`3esn`{`7esn`:12.e12[.12..$_usn3][0e0..9e0],`7esn`:0X7[..True][..01234567]})<-[_usn3?:`` *..010{usn2:`7esn`[_usn4..][Count(*)..]}]->(`8esn` :``:`6esn`{#usn7:$`3esn` Is Null}),usn1=(`7esn` :`7esn`)-[?:`` *07{`1esn`:$#usn7[$`3esn`..$999]}]->(_usn3 {_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null}) Return Distinct `8esn`['s_str'..],usn1 Is Null Is Null As `2esn` Order By 01[`3esn`][_usn3] Asc,$`6esn` Starts With usn1 Descending Skip `7esn`[`7esn`] Limit 0.e0 Contains $123456789 Contains 123456789"),
    octest:ct_string("Delete True Contains $`7esn` Contains .e12 Delete _usn3 Is Not Null,All(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $123456789 Is Not Null) Is Null Is Null,Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0) Is Not Null"),
    octest:ct_string("Merge ({`2esn`:0,`3esn`:$`7esn` Starts With 07 Starts With `1esn`}) On Create Set _usn4+=(usn1 {@usn5:12e12 Ends With `6esn`,_usn4:\"d_str\" Starts With _usn4 Starts With $_usn4})<-[?:#usn7|`5esn`{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}]->(@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})<-[?:`1esn`|@usn6]->(`6esn` :`2esn`:@usn5) Is Null,`5esn`+=.12[usn1],`8esn`+=usn1[..Count(*)][..`8esn`] On Match Set @usn6 =(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[#usn7:`1esn`|@usn6 *0..]-(@usn6 :usn2) In (`5esn` {_usn3:1.e1 Is Null Is Null})<-[_usn3?:#usn7|`5esn` *..0x0]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})<-[?:@usn5|:@usn6]-(`7esn` {@usn6:.e0[123456789..][$`2esn`..],``:$0[`5esn`][9e12]}) Delete $123456789[`3esn`..`5esn`][1e1..$`5esn`] With Distinct Extract(`2esn` In $``[$#usn8] Where `1esn`[Null..])[[12.0[`3esn`][_usn3]]] Order By [12 Is Null Is Null,9e0[$@usn6]] Contains Extract(`6esn` In .e0['s_str'..][$`8esn`..] Where `8esn`[0x0..]|.e0['s_str'..][$`8esn`..]) Contains #usn7 Asc Skip 123.654[$`1esn`] Limit `7esn`(Distinct Count(*)[$1000..01],`7esn`[`8esn`][#usn7]) Is Not Null Union Remove usn2(12 Ends With 0 Ends With Null).`4esn`? Detach Delete $`3esn` Starts With 9e12 Starts With `8esn`,$@usn6 Ends With 010,#usn7[.12][usn2] With  *,#usn7(Distinct $999[@usn5..][Null..],010[`1esn`..`4esn`])[..{_usn3:0e0['s_str'],`6esn`:9e12[\"d_str\"]}][..{`5esn`:@usn6[$usn1][$`2esn`],`1esn`:12.0[9e12]['s_str']}],Extract(`3esn` In 999 Where .e12 Is Null Is Null|$`7esn`[usn2]) =~Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where @usn5['s_str'..$`2esn`]|$@usn5[$_usn3..Null]) =~Any(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where #usn7 In #usn7) As `2esn` Order By _usn4[7..$999] Desc Skip #usn8 Starts With 0 Limit .12 =~$#usn7 =~$`` Union Detach Delete $`4esn`,9e1 Contains 07 Return Distinct 12.e12 Contains 0X7 Contains Count(*),(`5esn` :`2esn`:@usn5{usn2:$`6esn` Starts With usn1,``:123456789 =~@usn5 =~$`5esn`})-[{#usn8:999}]-(:usn1:``{_usn3:123.654 Is Not Null Is Not Null}) =~{`6esn`:9e1[..01234567][..`4esn`]} =~None(`6esn` In 1000[12.e12][#usn7] Where 0X0123456789ABCDEF Is Not Null) As _usn4,$@usn6[$#usn8..$999][Count(*)..usn1] As @usn6 Limit ``[{`6esn`:12[`5esn`..$`3esn`][0.12..usn2]}..] Create ((({`7esn`:Count(*)[..`5esn`],`2esn`:.e12[..$_usn4][..#usn7]})<-[:@usn6]->(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null})<-[#usn7:``{`4esn`:0.e0 Is Not Null Is Not Null}]-(:`3esn`{usn2:$`3esn`[9e0..0.0][_usn4..123456789]}))),((`3esn` :`8esn`)<-[`2esn`?:`3esn`|_usn4]-(@usn5 :`5esn`))"),
    octest:ct_string("With  {`7esn`:01234567[9e0][.0],`2esn`:999 Ends With $`4esn`}[`4esn`(.12 In 01234567 In _usn4,12.0[9e12]['s_str'])..] Order By Null Is Not Null Is Not Null Asc,\"d_str\"[7..$999] Ascending,0xabc[..9e1] Asc Where 0 Is Null Is Null Unwind \"d_str\" Ends With $`3esn` As @usn6"),
    octest:ct_string("Unwind 999 Ends With $`4esn` As _usn3 Create #usn8=((#usn7 {usn2:$#usn8 In True In #usn7})-[`6esn` *00]->(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})) Detach Delete $7[`7esn`][123.654],Single(#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]) Contains Single(`5esn` In $usn2 Contains $`1esn` Where `2esn` Contains `3esn` Contains $@usn5) Contains {_usn3:0xabc Contains 0,`6esn`:$`6esn`[.e12..$`6esn`][$#usn7...0]},#usn8 Is Not Null Union All Unwind .e0[..$`5esn`][..``] As `1esn` Detach Delete 123.654[.e12..\"d_str\"],Extract(`5esn` In $usn2 Contains $`1esn` Where Count(*)[_usn3..])[..None(`5esn` In $usn2 Contains $`1esn` Where `3esn` Is Not Null Is Not Null)][..Extract(#usn8 In 07['s_str'][$@usn6] Where True)] With  [$999[9e0..010][999..010],12e12 Ends With $_usn4 Ends With $`2esn`][None(_usn4 In 12.e12 Is Null Is Null Where $`4esn` In 0x0)..],`7esn`(Distinct Count(*)[$1000..01],`7esn`[`8esn`][#usn7]) Is Not Null As @usn6 Order By @usn6 Starts With .e0 Starts With .e12 Desc,0.e0[$usn2..$@usn5] Desc Limit [.12 Is Not Null,00[01234567][Count(*)]] =~Filter(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 's_str'[$#usn8]) Union All Match `5esn`=((`` :usn1:``{#usn7:$123456789[`4esn`..]})),`5esn`=((`1esn` {`7esn`:$7[`7esn`][123.654],@usn6:`1esn`[usn1]})-[:#usn7|`5esn`]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null})) Unwind $#usn7[$`3esn`..$999] As usn1 Return Distinct *,$`6esn` Is Not Null Is Not Null,(`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`` )[..`2esn`(Distinct `7esn`[_usn4..][Count(*)..],0[1.e1..#usn7])][..(_usn4 {`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})<-[@usn5?:_usn4|_usn3{#usn7:0.12 Is Null Is Null,#usn8:$1000 =~00}]-(`4esn` :_usn3:@usn5)-[@usn5? *01234567..123456789{`2esn`:01234567[`6esn`..]}]-(@usn5 {`4esn`:0.12 Is Null})] As #usn7 Order By [`3esn` In 999 Where 07 Ends With $_usn4 Ends With 0.e0|`5esn` In 12.e12 In 1000] Descending,1.e1 Desc,All(`2esn` In $``[$#usn8] Where $`2esn`[.._usn3]) =~[`6esn`[_usn3],12.0 In 07] =~[123456789[0.0..`2esn`][1.e1..$_usn4]] Descending Skip $`5esn` Ends With `6esn` Ends With 0x0"),
    octest:ct_string("With Distinct *,.e1[01234567],.e0[..$`5esn`][..``] As `8esn` Limit Single(`3esn` In @usn6[..\"d_str\"][..01] Where 12[`5esn`..$`3esn`][0.12..usn2])[[`6esn` In 0x0[9e0..] Where $#usn8[0e0..][07..]|0 Is Not Null Is Not Null]..][(`6esn` :usn1:``)<-[``?:usn1|#usn7]-(@usn5 :`2esn`:@usn5{@usn6:123456789 =~#usn8 =~$0})..] Where `4esn` Ends With $12 Ends With 0.e0 Return \"d_str\" Starts With _usn4 Starts With $_usn4 As `5esn`,`7esn`[0.e0..False][0e0..$_usn4] As `1esn` Skip $`1esn` Is Not Null Is Not Null"),
    octest:ct_string("Delete .e0[0X0123456789ABCDEF.._usn3][9e1..$`3esn`],@usn6[...12][..123.654] Return _usn4 In .0 In .12 As `4esn`,$123456789 Is Null Is Null Order By Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 01[$0])[{`5esn`:@usn6[$usn1][$`2esn`],`1esn`:12.0[9e12]['s_str']}..][Any(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0)..] Asc,$7[`7esn`][123.654] Descending,usn1[..`7esn`][..$`8esn`] Ascending Skip 0e0 Ends With usn1 Ends With `1esn` Limit `2esn` Contains `3esn` Contains $@usn5 Union All Create usn1=((({`5esn`:0.0 Starts With Null Starts With .e12})-[{`5esn`:0.e0 =~01234567 =~01234567}]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]})<-[`5esn`?:`1esn`|@usn6{`5esn`:#usn8 =~$1000 =~$1000,`2esn`:0x0[$7]}]-(_usn4 {`1esn`:$usn2 =~`6esn` =~`1esn`}))),`4esn`=({usn1:0Xa[..1.e1]}) Create ((:_usn3:@usn5)) With Distinct *,`1esn`[usn1] As `4esn`,[`7esn` In $`8esn`[0.12][12] Where 's_str'[$#usn8]][None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1)..(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})-[``?:@usn6]->({``:_usn3[9e0..$123456789][0X7..999]})][[$#usn8 =~7 =~.12,$`6esn`[.e12],_usn4 Starts With `6esn` Starts With $`8esn`]..{usn2:123.654[.e12..\"d_str\"]}] Order By @usn6(_usn4[.._usn4],00[$@usn5][0X7]) =~Extract(`3esn` In False In $`2esn` In 1e1 Where $`` Starts With 0x0|0.12 Is Null Is Null) =~Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null|True =~0 =~123456789) Ascending,@usn6 Contains $_usn3 Contains 12.0 Descending Limit $`6esn`[$0] Union Create `5esn`=((`4esn` :usn2)<-[:#usn7|`5esn`*{`8esn`:01[$0],``:0xabc Is Not Null Is Not Null}]-(_usn3 :`7esn`{#usn7:123.654 =~.e0 =~9e0,_usn3:`1esn`[Null..]}))"),
    octest:ct_string("Remove `7esn`:`8esn`,(`3esn` :`4esn`:usn2{usn2:`8esn` Contains 0X0123456789ABCDEF,`8esn`:12.0[..0X7]})<-[`7esn`? *01234567..123456789{_usn3:12.e12 =~.0}]->(:``:`6esn`{`6esn`:1.e1[0..],usn2:`` Contains $_usn3 Contains 0e0})<-[? *01..7{usn2:1e1 =~$`8esn` =~`1esn`}]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]}).`3esn`!,{usn2:1e1 =~$`8esn` =~`1esn`}.`2esn`!"),
    octest:ct_string("Remove Extract(`3esn` In @usn6[..\"d_str\"][..01] Where @usn6 Contains $_usn3 Contains 12.0)._usn3? Detach Delete 999 In 0,.e12 Contains `7esn` Contains 999,$@usn6 Is Null Is Null Union Unwind _usn4 As #usn8 With  (@usn5 {`1esn`:0xabc[123.654][12]})-[:#usn8|:`6esn`{#usn8:0X7[..`5esn`][..$`7esn`]}]->(`2esn` :@usn6)-[`5esn`?:`7esn`]-({@usn6:'s_str' Ends With $7}) Ends With All(usn1 In 999 Where @usn6 Ends With 0.12 Ends With `3esn`) As #usn7,$#usn8[.e1][`2esn`] As @usn5 Skip 0X7[..`5esn`][..$`7esn`] Unwind 0.e0 In `2esn` As #usn8 Union Remove Filter(`5esn` In $usn2 Contains $`1esn` Where True Contains .e1 Contains `2esn`).`8esn`! Create (`6esn` {`4esn`:$12 Is Null Is Null,`7esn`:$`5esn` Is Null Is Null})-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-(:@usn5{#usn8:usn1 Is Null,`8esn`:7 In 1e1})-[_usn3:`3esn`|_usn4]->(@usn6 {`2esn`:123.654 Is Not Null Is Not Null}) Match ((@usn5 :_usn3:@usn5)<-[``? *01234567..123456789{``:9e12 In 123.654 In True}]->(:`5esn`{`7esn`:0Xa[Count(*)][0xabc],`2esn`:`4esn` Ends With 's_str' Ends With @usn6})<-[?:@usn5|:@usn6]->(#usn8 :`4esn`:usn2))"),
    octest:ct_string("Unwind `4esn` Starts With `8esn` As #usn8 Union Unwind 0.e0 Is Not Null As `8esn`"),
    octest:ct_string("Match ((:#usn8:#usn7{`8esn`:0Xa[Count(*)][0xabc]})<-[?:`7esn`{`1esn`:0.12 Is Null,@usn6:9e12[$123456789..$usn2]}]->({#usn8:$`` Is Not Null Is Not Null,`8esn`:$usn2 Starts With 9e1 Starts With `7esn`})<-[*{`6esn`:`6esn` In $``}]->(`7esn` :`8esn`{usn2:`5esn` =~``,`7esn`:`7esn` Is Not Null Is Not Null})),`3esn`=((`7esn` :``:`6esn`)<-[usn1]->(usn1 :usn2{#usn8:0.e0 Contains $1000 Contains 7})<-[`8esn`? *..0X0123456789ABCDEF{`2esn`:$``[$_usn4][$`3esn`]}]-(:`6esn`:`3esn`{`5esn`:$7[$12],`6esn`:#usn8 Is Not Null})) Union All Detach Delete 123.654[.e12..\"d_str\"],Extract(`5esn` In $usn2 Contains $`1esn` Where Count(*)[_usn3..])[..None(`5esn` In $usn2 Contains $`1esn` Where `3esn` Is Not Null Is Not Null)][..Extract(#usn8 In 07['s_str'][$@usn6] Where True)] Return Distinct $`2esn` =~$123456789 =~usn2 As #usn7,.e12[..#usn7][..9e12],Null Contains $_usn3 As @usn6 Union All With Distinct *,$`7esn` =~1.e1 =~0.e0,12.0 =~{`7esn`:`7esn`[`8esn`][#usn7]} =~[0.0 Ends With $usn1 Ends With $999,.e12[..$_usn4][..#usn7],$@usn5 =~$usn2 =~True] As usn2 Order By 1000[Null][$`7esn`] Ascending,{`7esn`:usn2 Starts With 00}[(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})<-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-({@usn6:`5esn` Ends With $999})..][(:`1esn`:@usn6{_usn3:$usn2 =~`6esn` =~`1esn`,`6esn`:0[1e1..00]})-[{_usn4:$`8esn` Contains .0 Contains 0.12}]->(:usn1:``{_usn4:1000[12.e12][#usn7]})-[@usn6 *00]->(`4esn` {_usn4:$`2esn`[$``..12e12]})..] Ascending Where 9e1 =~$0 Return *,.e1 =~$#usn8,$0[00..] As _usn4"),
    octest:ct_string("Optional Match #usn8=((usn2 :`4esn`:usn2{`3esn`:@usn5[$`1esn`..][$7..]})-[{@usn6:1000 Ends With 01234567 Ends With usn1,usn2:01234567 In \"d_str\"}]->(#usn8 :_usn3:@usn5{`3esn`:@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`],`4esn`:0e0 Is Null})<-[_usn4 *00]-(_usn3 :`6esn`:`3esn`{`7esn`:1000 Ends With 01234567 Ends With usn1})) Where #usn8[1e1..] Union All Delete $usn2[$`4esn`..$`2esn`],`3esn` Is Not Null Is Not Null,None(usn1 In 999 Where _usn3 Is Not Null) In ``(7 Starts With $@usn6) In Extract(#usn8 In 07['s_str'][$@usn6] Where usn2[..1e1][..$_usn3]) Delete $1000 =~.e12 =~0.e0,[usn2 Contains 0,.e0 =~7 =~False,.12] Is Null,0.12[$usn1..$7] With Distinct 0X7[0xabc][$1000],.e1[123.654..] Order By $`5esn`[12.0..`3esn`][1000..12] Descending,`8esn`['s_str'..] Descending,0.e0[07..] Ascending Limit Any(`2esn` In $``[$#usn8] Where 0 Is Null Is Null)[[usn1 Is Null]..All(usn1 In 123.654 =~.e0 =~9e0 Where $7 Ends With 12.e12 Ends With `1esn`)]"),
    octest:ct_string("Return *,'s_str'[..Null][..$`5esn`],usn2 Starts With 00 Order By $`2esn` Contains `6esn` Contains $`2esn` Desc,0[1.e1..#usn7] Desc,$123456789 Ends With 12e12 Asc Skip Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null) =~[12 Is Null Is Null,9e0[$@usn6]] Limit 0[_usn3][.12]"),
    octest:ct_string("Optional Match (({`3esn`:.e12[$_usn4..0],usn1:00[$0..usn2][$_usn4..$999]})-[`3esn`? *0X7..0x0{`4esn`:$_usn4[$123456789..][12..]}]->(`7esn` {@usn6:0 =~#usn8})-[#usn8 *00]->(`5esn` {`6esn`:$`6esn` Starts With usn1})) Union Optional Match #usn7=(`7esn` :`7esn`)-[{`5esn`:0.e0 =~01234567 =~01234567}]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]}) Match `3esn`=(($_usn3)) Where 1000 Is Not Null"),
    octest:ct_string("Merge @usn6=(#usn8 :_usn4{`6esn`:9e1[..01234567][..`4esn`]})<-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]-(@usn6 :`4esn`:usn2{`4esn`:_usn3 =~$12,_usn4:.e1 =~usn2 =~`7esn`}) On Match Set `6esn` =$`8esn`[`7esn`],`7esn`+=False[$_usn4..][`8esn`..] On Match Set `1esn` =9e1[$#usn8],#usn7 =`8esn` Is Not Null Merge ((`` :usn2{@usn5:usn2,usn1:0.0[.12..`8esn`]})<-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]-(`8esn` :#usn7)) On Create Set [True =~0 =~123456789,$`6esn`[.e12],0 =~#usn8].`6esn`? =$`6esn`[$0],(`2esn` :@usn6)-[?:`8esn`|@usn6 *0xabc..{usn1:$#usn7[..$999][..9e1]}]-(`3esn` :@usn6)<-[_usn3]-(`6esn` :`8esn`).`7esn`! =12.0 Is Null On Create Set @usn6 =[0Xa[..$`2esn`][..00]] Starts With (@usn6 )-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(:`7esn`{`2esn`:.e12 Is Not Null Is Not Null,`4esn`:_usn4[1000..``]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`6esn` ),`6esn`+=$12[usn2][12.0] Union With Distinct .e12[``][$1000],{@usn5:$`4esn` In 0x0,`3esn`:`1esn`[..$#usn7]}[{@usn5:@usn5[..$999][..$0]}] Skip #usn8[1e1..] Limit 01[#usn8..1000] Where $usn2[12.0..][`8esn`..] Create #usn8=((_usn3 :@usn5{`2esn`:1.e1[#usn7][1.e1]})-[#usn8?*..{#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]}]->(:`2esn`:@usn5{@usn5:`4esn`})) Union All Unwind {#usn8:.e0 Ends With $`1esn` Ends With 1000}[Filter(#usn8 In 07['s_str'][$@usn6] Where $12[0.0..])][Filter(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..])] As usn2 Match `5esn`=((@usn5 {`5esn`:0e0[...e1]})<-[`8esn` *0..$12]-(:`2esn`:@usn5{#usn8:0.e0 Contains @usn5 Contains 0X7,`5esn`:0x0[9e0..]})<-[:`3esn`|_usn4]->(_usn3 {_usn4:usn2[9e0..0.e0][@usn5..`4esn`],_usn4:.e0['s_str'..][$`8esn`..]})),`2esn`=(@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})"),
    octest:ct_string("Delete [#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$`5esn`[`4esn`..$`2esn`]] Is Not Null Is Not Null Union Return $7[`8esn`..False][.e12..0.e0],Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 123.654 Is Not Null Is Not Null)[{usn1:$7[$12]}][Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where \"d_str\"[..$_usn3])] As ``,'s_str' Ends With $7 As #usn8 Order By `7esn` In `8esn` In 12 Desc,usn1 =~12 =~$0 Desc"),
    octest:ct_string("Merge #usn7=(({_usn4:$`5esn` Starts With $`3esn` Starts With 1.e1,`3esn`:1000[Null][$`7esn`]})-[? *999]-({_usn3:123.654 Is Not Null Is Not Null})<-[usn1?:`8esn`|@usn6]->(#usn8 :#usn7{`2esn`:0.e0[.e12]})) Create (((_usn3 :@usn6{@usn5:0e0 =~False =~.12})<-[``?:usn1|#usn7]-(:usn2{usn1:12 Is Null Is Null})<-[:`5esn`|:`1esn`{#usn8:`7esn` Is Null,`4esn`:False[$12]}]->(_usn3 :@usn5{`5esn`:12e12[..9e12][..$@usn6]}))) Union All With  *,Filter(usn1 In 123.654 =~.e0 =~9e0 Where 123.654[$`1esn`])[(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})<-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-({@usn6:`5esn` Ends With $999})..[`2esn` In $``[$#usn8] Where \"d_str\" Starts With _usn4 Starts With $_usn4|$usn1[#usn8..`8esn`][7..`4esn`]]] As _usn4 Order By $`1esn` Ascending,0X7[0xabc][$1000] Ascending,0Xa[Count(*)][0xabc] Desc Skip None(usn1 In 0xabc Is Not Null Is Not Null Where 123456789 =~@usn5 =~$`5esn`) =~[`4esn` Ends With 's_str' Ends With @usn6] Limit Any(`3esn` In 999 Where .12[0X0123456789ABCDEF..]) =~(:`7esn`{@usn6:`2esn`[``..]})<-[?{``:Null Is Not Null Is Not Null}]-(:_usn4{@usn6:$123456789[`1esn`..]}) =~[12e12 Ends With `6esn`] Where 0 Contains $@usn5 Return *,usn1[0X7..] As `4esn` Union All Optional Match (({`3esn`:.e12[$_usn4..0],usn1:00[$0..usn2][$_usn4..$999]})-[`3esn`? *0X7..0x0{`4esn`:$_usn4[$123456789..][12..]}]->(`7esn` {@usn6:0 =~#usn8})-[#usn8 *00]->(`5esn` {`6esn`:$`6esn` Starts With usn1}))"),
    octest:ct_string("Return (_usn3 :#usn8:#usn7)<-[{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(`3esn` :`4esn`:usn2)[[`3esn` In 999 Where _usn4[1000..``]|Null[9e1][$`6esn`]]..({_usn4:$1000[$usn1][.e1]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`1esn` {`6esn`:07})<-[`5esn`?]-(@usn5 {`5esn`:0e0[...e1]})] As #usn7,[`3esn` In @usn6[..\"d_str\"][..01] Where `1esn`[$7][0Xa]|.e0 Contains 999] =~Extract(`2esn` In $``[$#usn8] Where 12e12 Ends With $_usn4 Ends With $`2esn`|`4esn` Starts With `8esn`) =~[#usn8 =~$1000 =~$1000,$`7esn`[`2esn`]] Return True[$usn1..12][``..\"d_str\"] As `` Detach Delete $_usn3 Is Not Null Union All Delete `6esn`[False..],$usn2[`6esn`..],01 Ends With @usn6 Ends With $7 Merge `7esn`=(`8esn` :usn2)<-[ *..0X0123456789ABCDEF{@usn6:`4esn` Is Not Null,`2esn`:@usn6[.0]}]-(`6esn` :usn2) With Distinct *,Count(*)[$999..0X0123456789ABCDEF][_usn4..`2esn`] As _usn4 Order By \"d_str\" =~Count(*) =~$usn2 Desc,`4esn`[$usn1..0xabc][123456789..usn1] Descending Limit $`7esn` Starts With 07 Starts With `1esn`"),
    octest:ct_string("Merge usn2=((({@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})-[?:`2esn`|:`7esn` *0X7..0x0{usn2:0.12 Contains 0x0 Contains @usn5,_usn3:.e12 Contains $usn2 Contains $@usn6}]-(:`2esn`:@usn5{`4esn`:_usn3 =~$12,_usn4:.e1 =~usn2 =~`7esn`})-[`6esn` *00]-(:`8esn`{@usn5:1000 Starts With 0e0 Starts With 0,#usn7:$`5esn`[`4esn`..$`2esn`]}))) On Match Set `6esn`+=.e0[0X0123456789ABCDEF.._usn3][9e1..$`3esn`] On Match Set _usn3(1000 Starts With ``,.e1 =~\"d_str\" =~'s_str').@usn5? =7 =~$1000 =~$`5esn` Create `5esn`=(((`6esn` {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})<-[`5esn`:_usn4|_usn3 *0X7..0x0]-(#usn7 {`5esn`:00 Starts With usn1 Starts With Count(*),``:$999 Is Not Null})<-[`4esn` *123456789..]-(:`7esn`$#usn8))) Create usn2=(`7esn` {`8esn`:0 Is Null Is Null})<-[`4esn`?{`8esn`:$@usn5 Starts With Count(*) Starts With $usn1,#usn7:0.e0[.e12]}]->(:`6esn`:`3esn`{@usn6:#usn8 Is Not Null,usn2:1e1 Is Null})-[#usn8?:usn1|#usn7{`8esn`:$#usn7[`7esn`..][$`8esn`..]}]-(:`1esn`:@usn6) Union All Detach Delete 1e1[`3esn`] With Distinct *,`5esn` In $usn1 In `4esn` As @usn6,.0 Ends With $`4esn` Ends With @usn6 Order By {`3esn`:$_usn4[False..@usn6][`4esn`..$1000],`1esn`:$`7esn`[`2esn`]} In All(`3esn` In False In $`2esn` In 1e1 Where .0[@usn6..]) Asc Skip $7 Is Null Create `8esn`=(((`1esn` {@usn6:`1esn`[$7][0Xa]})<-[`4esn`?]->(@usn6 :``:`6esn`{#usn7:9e1 Contains _usn3})<-[@usn5?:_usn4|_usn3 *..010{@usn6:$123456789[`1esn`..]}]-(`4esn` :``:`6esn`{#usn7:`2esn`[`3esn`..],usn2:$usn2 Starts With $`7esn` Starts With _usn4}))),`2esn`=((_usn4 :`6esn`:`3esn`)<-[usn1:#usn8|:`6esn` *0xabc..]->(`8esn` :`1esn`:@usn6)<-[:`5esn`|:`1esn`{#usn8:`7esn` Is Null,`4esn`:False[$12]}]->(_usn4 {`2esn`:1.e1 Is Not Null Is Not Null}))"),
    octest:ct_string("Create usn2=(`7esn` {`8esn`:0 Is Null Is Null})<-[`4esn`?{`8esn`:$@usn5 Starts With Count(*) Starts With $usn1,#usn7:0.e0[.e12]}]->(:`6esn`:`3esn`{@usn6:#usn8 Is Not Null,usn2:1e1 Is Null})-[#usn8?:usn1|#usn7{`8esn`:$#usn7[`7esn`..][$`8esn`..]}]-(:`1esn`:@usn6) With Distinct @usn5 Is Null As `5esn`,.0[..\"d_str\"][..usn2] As `1esn` Union All Match ((:@usn5{``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]})<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(`4esn` :`5esn`)<-[?:@usn5|:@usn6]-({`1esn`:$`7esn` Ends With $_usn4 Ends With `5esn`})),(`` :`5esn`)-[:@usn5|:@usn6]->(`5esn` {usn2:`6esn` In $``})<-[:`4esn` *..0X0123456789ABCDEF{`1esn`:0X7[..True][..01234567],``:`1esn`[usn1]}]->(@usn6 :usn1:``{usn1:#usn7 Is Not Null Is Not Null,`6esn`:$12[0.0..]}) Where 123.654[0Xa..0x0][.12..12e12] Union With Distinct $_usn3[0e0..][12.0..] As `3esn` Skip 123456789 =~usn2 =~0.0 Limit 0x0 Contains .0 With  *,0.12[$usn1..$7] As `1esn`,True Is Null Skip All(#usn8 In 0x0[_usn4..] Where 0X0123456789ABCDEF In _usn3) Ends With Single(`6esn` In 0x0[9e0..] Where $#usn8[0e0..][07..]) Limit 7[$`5esn`..`4esn`] Where 0.e0[.e12] Create ``=(`` :#usn8:#usn7{@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})"),
    octest:ct_string("Remove {`2esn`:9e0[$@usn6]}.`1esn` Create #usn8=((#usn7 {usn2:$#usn8 In True In #usn7})-[`6esn` *00]->(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})),`7esn`=((`5esn` :``:`6esn`)-[:@usn5|:@usn6 *999{`5esn`:0x0 =~@usn5 =~01}]->(_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})) Remove Extract(`3esn` In @usn6[..\"d_str\"][..01] Where 12[`5esn`..$`3esn`][0.12..usn2]|`5esn` In 12.e12 In 1000)._usn4?,[usn2[.e1..][01234567..],`5esn` Ends With $999]._usn3,`7esn`(Distinct 7[$1000][1000]).`1esn`? Union With  Filter(usn1 In 123.654 =~.e0 =~9e0 Where 123.654[$`1esn`])[(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})<-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-({@usn6:`5esn` Ends With $999})..[`2esn` In $``[$#usn8] Where \"d_str\" Starts With _usn4 Starts With $_usn4|$usn1[#usn8..`8esn`][7..`4esn`]]] As _usn4,$_usn3 =~`1esn`,`2esn`[`3esn`..] As `8esn` Skip 0.e0 Is Not Null Limit (usn2 {usn2:`7esn` Contains .0 Contains #usn8})-[usn1{`1esn`:`7esn` Contains .0 Contains #usn8}]->(@usn6 :`5esn`{@usn5:.12[9e1..0X7]})[..(`4esn` :_usn3:@usn5)<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(_usn3 :@usn5{`2esn`:1.e1[#usn7][1.e1]})][..All(`6esn` In 1000[12.e12][#usn7] Where `1esn`[$7][0Xa])] Where 0e0 Starts With $@usn6 Starts With $7"),
    octest:ct_string("Create (((`4esn` {_usn3:7 Contains 1000 Contains $usn1})<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(_usn3 :@usn5{`2esn`:1.e1[#usn7][1.e1]})<-[`5esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]}]->({_usn3:.e12 =~\"d_str\" =~@usn5}))) With Distinct 7[.0..01] Limit usn1[..`7esn`][..$`8esn`] Match `6esn`=((:#usn8:#usn7{`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]}))"),
    octest:ct_string("Return Distinct 7 Contains 1000 Contains $usn1,usn2 Contains 07 Contains False As _usn4,{#usn8:.e0 Ends With $`1esn` Ends With 1000}[Filter(#usn8 In 07['s_str'][$@usn6] Where $12[0.0..])][Filter(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..])] Order By Null Is Not Null Is Not Null Desc,[False Starts With $123456789][[usn1 In 0xabc Is Not Null Is Not Null Where 0x0[$7..][`7esn`..]|00 In 1000]..[.e12 Is Null Is Null]][Extract(#usn8 In 07['s_str'][$@usn6] Where 7 =~$1000 =~$`5esn`|\"d_str\"[1.e1][01234567])..Single(`3esn` In False In $`2esn` In 1e1 Where .e12[..$_usn4][..#usn7])] Asc,Extract(_usn4 In 12.e12 Is Null Is Null Where 010 =~0e0 =~9e1|0Xa =~0Xa =~`3esn`)[Any(`3esn` In 999 Where $#usn7[..$999][..9e1])..None(usn1 In 0xabc Is Not Null Is Not Null Where 123456789[..0])][[`6esn` In 0x0[9e0..]|0x0 =~@usn5 =~01]..(usn2 :_usn3:@usn5)<-[`5esn`?:`7esn`]-(`8esn` {`3esn`:Null Is Null Is Null})-[`6esn` *00]->(`2esn` :`5esn`{`1esn`:$@usn6 Ends With 0.0})] Asc Skip .e1 In `` In 7 With Distinct [0Xa[..$`2esn`][..00]] Starts With (@usn6 )-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(:`7esn`{`2esn`:.e12 Is Not Null Is Not Null,`4esn`:_usn4[1000..``]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`6esn` ) As #usn8,[123.654 =~.e0 =~9e0] Starts With {`8esn`:0X7[0xabc][$1000]} Starts With [00['s_str']],$`1esn` Order By Extract(`3esn` In 999|0 Is Null Is Null)[[1e1 Ends With 's_str' Ends With $@usn6]..] Descending,9e0[$`4esn`] Descending Where 0.12[$usn1..$7] Return *,'s_str'[..Null][..$`5esn`],usn2 Starts With 00 Order By $`2esn` Contains `6esn` Contains $`2esn` Desc,0[1.e1..#usn7] Desc,$123456789 Ends With 12e12 Asc Skip Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null) =~[12 Is Null Is Null,9e0[$@usn6]] Limit 0[_usn3][.12] Union Create @usn5=(_usn4 {`2esn`:1.e1 Is Not Null Is Not Null})<-[_usn4?:`3esn`|_usn4 *7]->({@usn6:0.e0 Contains $1000 Contains 7}),@usn6=(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[@usn6{_usn4:$`` Starts With 0x0}]-(usn2 :`7esn`) Match (`1esn` :`4esn`:usn2{`2esn`:9e0[$@usn6]})<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]-({@usn6:`6esn` Is Not Null}),((@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]})-[? *0xabc..{`3esn`:.e12[$_usn4..0],usn1:00[$0..usn2][$_usn4..$999]}]->(@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]})<-[_usn3:`3esn`|_usn4 *0Xa]-({`4esn`:Count(*)[..$_usn3][..$usn2]})) Where `` Contains 010 Contains $1000 Union Optional Match @usn6=(`8esn` :`8esn`{`3esn`:Null Is Null Is Null})-[`4esn`?:#usn8|:`6esn` *999{`8esn`:010[`1esn`..`4esn`]}]->(`3esn` :`3esn`{_usn4:$123456789 Is Not Null,_usn4:#usn8 =~#usn7 =~0x0}),(`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})<-[? *..010{usn1:123456789[$_usn4..]}]->(#usn7 {usn2:$#usn8 In True In #usn7}) Remove {`1esn`:`4esn` Ends With 's_str' Ends With @usn6,`6esn`:$7 Ends With 12.e12 Ends With `1esn`}._usn4?,{`1esn`:$7[..$``],usn1:$#usn8[0e0..][07..]}.usn1,[`6esn` In 0x0[9e0..] Where $#usn8[0e0..][07..]]._usn3 Remove Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 9e1 Contains _usn3).usn1?,(`7esn` {`8esn`:Count(*) Is Null Is Null,@usn5:.e0 Ends With $`1esn` Ends With 1000})<-[usn1?]-(:`7esn`{usn2:0e0 Is Null})<-[`7esn`?]->(:`2esn`:@usn5{usn2:$`3esn` Ends With @usn6 Ends With 123.654}).`8esn`,{_usn4:12 Is Null Is Null}.`2esn`?"),
    octest:ct_string("Match ((:`7esn`{_usn3:01[$0]})-[:_usn3|`6esn` *01..7{_usn4:$`2esn`[$``..12e12]}]-(`5esn` {usn1:1000 Ends With $`5esn`})<-[`2esn`?:@usn6]->($`8esn`)) Unwind 0[1.e1..#usn7] As `7esn` Union All Return $@usn6[9e1..$`2esn`] As `8esn`,$1000[999] As `2esn`,`8esn` Is Not Null Order By 01[#usn8..1000] Desc Match @usn5=(((:`1esn`:@usn6)<-[@usn5?:_usn4|_usn3 *1000..01234567]->({@usn6:$#usn8[0e0..][07..]})<-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}))),(:usn1:``{_usn3:123.654 Is Not Null Is Not Null}) Create ((#usn7 {@usn5:$`5esn` Contains $usn2})<-[{@usn6:1000 Ends With 01234567 Ends With usn1,usn2:01234567 In \"d_str\"}]-(#usn8 {`4esn`:$`3esn` Is Null})<-[{`5esn`:usn2[.e1..][01234567..],usn1:999 Is Not Null}]->(`5esn` :`8esn`{``:00 In 1000}))"),
    octest:ct_string("Merge `3esn`=((@usn6 :#usn8:#usn7{``:Null Is Not Null Is Not Null})<-[`2esn`?:`5esn`|:`1esn`]->($1000)-[`6esn`? *999{_usn4:\"d_str\" Contains $999 Contains `2esn`}]-(`1esn` {_usn3:12.0 In 07,`2esn`:01234567[..`6esn`][..``]})) On Create Set [$0[00..],0.e0 =~01234567 =~01234567].`5esn`! =False In 1.e1 In $12 On Create Set {`8esn`:`7esn` =~12.e12 =~0e0}.``! =$`6esn`[00],[0Xa[.e12..],`5esn`[$7..01]].usn1 =Any(#usn8 In 0x0[_usn4..] Where $`` Starts With 0x0) In [usn1 In 123.654 =~.e0 =~9e0 Where $7 Ends With 12.e12 Ends With `1esn`],@usn6 =$_usn3[0.0][$@usn6] Optional Match `5esn`=(((`6esn` {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})<-[`5esn`:_usn4|_usn3 *0X7..0x0]-(#usn7 {`5esn`:00 Starts With usn1 Starts With Count(*),``:$999 Is Not Null})<-[`4esn` *123456789..]-(:`7esn`$#usn8))),(((`4esn` {_usn3:7 Contains 1000 Contains $usn1})<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(_usn3 :@usn5{`2esn`:1.e1[#usn7][1.e1]})<-[`5esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]}]->({_usn3:.e12 =~\"d_str\" =~@usn5}))) Where $`5esn` Is Null Is Null Unwind .12[usn1] As @usn5 Union Create `4esn`=((:`8esn`)-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :_usn3:@usn5)),`6esn`=({@usn6:$@usn5 =~$usn2 =~True,`4esn`:$#usn8 =~7 =~.12})<-[:@usn5|:@usn6 *01234567..123456789]->(`5esn` :``:`6esn`)<-[@usn5?:@usn6 *..010]-(`7esn` :`6esn`:`3esn`) Match (_usn3 :@usn6{@usn5:0e0 =~False =~.12})-[?:``]->(@usn6 :``:`6esn`{#usn7:9e1 Contains _usn3}) Merge (:`1esn`:@usn6{`8esn`:$`8esn` Contains $`2esn` Contains False})-[:`5esn`|:`1esn` *..0X0123456789ABCDEF]->(usn2 :`1esn`:@usn6)<-[`5esn`?:`1esn`|@usn6{`5esn`:#usn8 =~$1000 =~$1000,`2esn`:0x0[$7]}]-(@usn5 {`2esn`:$#usn7[`7esn`..][$`8esn`..],`3esn`:0.12['s_str'..$0][$usn1..9e0]}) Union Create @usn6=(`8esn` :`8esn`{`3esn`:Null Is Null Is Null})-[`4esn`?:#usn8|:`6esn` *999{`8esn`:010[`1esn`..`4esn`]}]->(`3esn` :`3esn`{_usn4:$123456789 Is Not Null,_usn4:#usn8 =~#usn7 =~0x0}),(`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})<-[? *..010{usn1:123456789[$_usn4..]}]->(#usn7 {usn2:$#usn8 In True In #usn7})"),
    octest:ct_string("Delete Filter(`6esn` In 1000[12.e12][#usn7] Where $usn2 Contains $`1esn`),.12,`7esn` =~12.e12 =~0e0 Union All Unwind .12[usn1] As @usn5 Match (((:`6esn`:`3esn`{`1esn`:0X7[..True][..01234567],``:`1esn`[usn1]})<-[_usn4 *00]-(#usn7 :`7esn`)<-[ *0..]->(_usn3 :@usn6))) With Distinct 0x0[$7..][`7esn`..] As _usn4 Order By [`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where .0 =~$@usn5 =~1.e1] =~{@usn6:0 Is Null Is Null} =~count(Distinct Null[9e1][$`6esn`],`4esn` Starts With `8esn`) Desc,{`7esn`:usn2 Starts With 00}[(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})<-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-({@usn6:`5esn` Ends With $999})..][(:`1esn`:@usn6{_usn3:$usn2 =~`6esn` =~`1esn`,`6esn`:0[1e1..00]})-[{_usn4:$`8esn` Contains .0 Contains 0.12}]->(:usn1:``{_usn4:1000[12.e12][#usn7]})-[@usn6 *00]->(`4esn` {_usn4:$`2esn`[$``..12e12]})..] Ascending,$#usn8[.e1][`2esn`] Asc Skip 00[$12...e0] Limit $@usn6 Contains 0e0"),
    octest:ct_string("Return Distinct 0Xa[$`4esn`] As `1esn`,Any(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where @usn6 Ends With 0.12 Ends With `3esn`) Contains [`5esn` In $usn2 Contains $`1esn` Where Count(*)[$1000..01]|9e1[..01234567][..`4esn`]] Contains (`3esn` {#usn8:#usn7 =~$`8esn`})-[usn2?:#usn8|:`6esn` *7]->(`6esn` :`5esn`{`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})-[?:`2esn`|:`7esn` *0..{`4esn`:010 In $@usn5 In `5esn`,#usn7:$`7esn` Is Null Is Null}]->(:`6esn`:`3esn`{`3esn`:123.654[0Xa..0x0][.12..12e12]}),123.654[.e12..\"d_str\"] As _usn4 Skip (usn2 {usn2:`7esn` Contains .0 Contains #usn8})-[usn1{`1esn`:`7esn` Contains .0 Contains #usn8}]->(@usn6 :`5esn`{@usn5:.12[9e1..0X7]})[..(`4esn` :_usn3:@usn5)<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(_usn3 :@usn5{`2esn`:1.e1[#usn7][1.e1]})][..All(`6esn` In 1000[12.e12][#usn7] Where `1esn`[$7][0Xa])] Merge _usn3=(usn2 :#usn8:#usn7{@usn5:`8esn` Ends With $`1esn`,#usn8:\"d_str\" Ends With $1000 Ends With usn2}) Union Match ((@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})),(((:usn2{_usn3:``[0X7..][$@usn6..]})<-[_usn3?:#usn8|:`6esn` *0xabc..{@usn6:123.654[.e12..\"d_str\"],`8esn`:$usn2 Starts With $`7esn` Starts With _usn4}]->(#usn7 {`1esn`:$`4esn`[.e1..$usn1],``:0x0 =~`5esn` =~$`8esn`})<-[@usn5?:usn2|:``*..]->(`7esn` {#usn7:1e1[`3esn`]}))) Create (:`1esn`:@usn6{`5esn`:123.654[0Xa..0x0][.12..12e12],`8esn`:_usn3[..usn2]})<-[usn1:#usn8|:`6esn` *0xabc..]->(`8esn` :`1esn`:@usn6) Create ``=((@usn6 :`5esn`)<-[`4esn` *123456789..]-(:`7esn`$#usn8)<-[`7esn`?:``]->(@usn6 :_usn4{`2esn`:\"d_str\"[..$_usn3],@usn6:$7[`7esn`][123.654]})),`3esn`=(`7esn` {`2esn`:1.e1[#usn7][1.e1]})<-[`2esn`?:@usn6]->(`3esn` :`7esn`$`6esn`)<-[`6esn`?:`1esn`|@usn6 *0xabc..]-(:`7esn`{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc})"),
    octest:ct_string("Return Distinct *,_usn3($123456789[..`3esn`][..`7esn`]) Is Null,0x0 Contains .0 As `8esn` Limit 01234567 Contains 0.12 Contains `5esn` Union All Create `1esn`=(((_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[`7esn`?:`2esn`|:`7esn`]->(`3esn` {#usn8:#usn7 =~$`8esn`})-[ *07{`1esn`:$``}]->(`1esn` :usn1:``))),_usn4=(@usn5 :`3esn`)<-[:`4esn` *..0X0123456789ABCDEF{`1esn`:0X7[..True][..01234567],``:`1esn`[usn1]}]->(@usn6 :usn1:``{usn1:#usn7 Is Not Null Is Not Null,`6esn`:$12[0.0..]})<-[`2esn`{`2esn`:999 Contains $`7esn` Contains usn2}]->(`4esn` :usn2)"),
    octest:ct_string("Delete `8esn`['s_str'..],{`8esn`:Count(*) Is Null Is Null,@usn5:.e0 Ends With $`1esn` Ends With 1000} Is Not Null Union All Detach Delete _usn3 Contains Count(*) Contains _usn3,{@usn6:$#usn7[$`3esn`..$999],`5esn`:$`6esn`[00]}[..[1000 Ends With 01234567 Ends With usn1,Count(*) Contains 12e12 Contains 0xabc]],.e12[``][$1000] With Distinct *,.e12 Contains $usn2 Contains $@usn6,12.e12 =~00 =~010 As usn2 Order By usn2 Desc Where $123456789[`4esn`..] Union Optional Match (_usn3 :`1esn`:@usn6)<-[_usn3:@usn6]->({@usn6:`5esn`[0e0..],_usn4:$#usn8[0xabc..usn2]})-[_usn4 *0..]->(:#usn7{_usn3:7 Contains 1000 Contains $usn1}),usn2=(`5esn` :`2esn`:@usn5{usn2:$`6esn` Starts With usn1,``:123456789 =~@usn5 =~$`5esn`})<-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}) Where Count(*) Is Null Is Null"),
    octest:ct_string("Remove [1000[Null][$`7esn`],12e12 Ends With 0 Ends With $@usn6].`4esn`!,Extract(`3esn` In @usn6[..\"d_str\"][..01] Where .e0[..$`5esn`][..``]|$#usn8 Starts With usn2 Starts With .12).usn2? Union Unwind `7esn`[0.e0..False][0e0..$_usn4] As `` Merge #usn8=(:@usn5{_usn4:$`5esn`[0][.12]})<-[@usn5?{usn1:7 Ends With `3esn` Ends With $`2esn`}]-(_usn4 ) On Match Set Filter(`5esn` In $usn2 Contains $`1esn` Where _usn3[9e0..$123456789][0X7..999]).#usn8! =`` In usn1 In 01234567 On Match Set `7esn`:`3esn`,({``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]})<-[:@usn6 *7{``:9e0 Is Null Is Null,`3esn`:.0[@usn6..]}]->(`8esn` :``:`6esn`).`5esn`! =None(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $@usn6 Is Null Is Null)[None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where .e0 Is Not Null)],`4esn`+=False In 1.e1 In $12"),
    octest:ct_string("Remove Extract(usn1 In 0xabc Is Not Null Is Not Null Where $``).`2esn` Match (_usn3 :@usn6{@usn5:0e0 =~False =~.12})-[?:``]->(@usn6 :``:`6esn`{#usn7:9e1 Contains _usn3}) Union All Detach Delete `5esn` In 12.e12 In 1000,1000 Starts With ``,[`6esn` In 0x0[9e0..] Where \"d_str\"[.0][9e0]][{`4esn`:$#usn7 =~usn2 =~`3esn`,_usn4:01 In 0.12 In .e12}..][None(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $123456789 Is Not Null)..] Match _usn3=(#usn8 :`7esn`)-[:#usn8|:`6esn`{#usn8:0X7[..`5esn`][..$`7esn`]}]->(`2esn` :@usn6),#usn8=((usn1 {_usn3:#usn7 Ends With 0.12})<-[?:@usn6 *07{_usn3:$`1esn` Is Null}]-(`5esn` {`5esn`:#usn8 Is Not Null,`1esn`:01234567[`6esn`..]})<-[*]->(usn1 :`1esn`:@usn6{`2esn`:$123456789[..$usn2],_usn4:0X0123456789ABCDEF In _usn3})) Where $_usn4[False..@usn6][`4esn`..$1000] Union Return .12[0xabc..],$0 Is Not Null Is Not Null As `8esn`,@usn6[..\"d_str\"][..01] Limit 1000[12.e12][#usn7] With  {@usn5:$`2esn` Ends With 1e1,usn1:'s_str'[$`6esn`..][$0..]} Is Null,({`7esn`:`4esn` In $`2esn` In @usn5})-[:`1esn`|@usn6*..]->(:`8esn`{`8esn`:0X7 Contains 12.0,`3esn`:`4esn` Starts With `8esn`})<-[`4esn` *123456789..]-(:`7esn`$#usn8)[#usn7($123456789[`1esn`..][`7esn`..],$123456789 =~0e0)][[usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1]] As #usn8 Order By @usn6 Starts With #usn8 Starts With $#usn7 Descending,Null[9e1][$`6esn`] Ascending,9e0[$`4esn`] Ascending Skip `3esn` Is Not Null Is Not Null Where .e1[0X7..`2esn`] Remove Extract(#usn8 In 0x0[_usn4..] Where `8esn`[0x0..]|.e12 Contains `7esn` Contains 999).`6esn`,Extract(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $1000[00..]|\"d_str\" Is Not Null).usn1!"),
    octest:ct_string("Return Distinct `3esn`(Distinct 0.e0 Is Not Null Is Not Null,$usn1[usn1..$`8esn`][12e12..$``])[[`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $@usn6 Is Null Is Null|999 Ends With $`4esn`]..][[0 Contains $@usn5]..] As `3esn`,`7esn` In `8esn` In 12,0Xa Ends With 07 Ends With `7esn` As _usn3 Skip 7 Contains 1000 Contains $usn1 Limit Extract(`7esn` In $`8esn`[0.12][12] Where 123456789[$_usn4..]|01234567[$`7esn`])[@usn5()..][Extract(`7esn` In $`8esn`[0.12][12] Where `5esn`[12.0]|\"d_str\"[.0][9e0])..] With  *,(`7esn` {#usn7:1e1[`3esn`]})-[`3esn`]->(#usn8 {`7esn`:12.e12[.12..$_usn3][0e0..9e0],`7esn`:0X7[..True][..01234567]})-[:`1esn`|@usn6*..]->(:`8esn`{`8esn`:0X7 Contains 12.0,`3esn`:`4esn` Starts With `8esn`}) Is Not Null As @usn5,@usn6 Ends With 0.12 Ends With `3esn` As `2esn` Order By $`6esn`[00] Asc,All(`7esn` In $`8esn`[0.12][12] Where .e1 =~\"d_str\" =~'s_str') Ends With Any(usn1 In 999 Where $999[01234567][@usn5]) Ends With [01234567 Is Null Is Null] Desc,$#usn8[1.e1] Descending Skip Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) Ends With [1.e1[#usn7][1.e1],Null =~Count(*)] Ends With [#usn8[..0X0123456789ABCDEF][...0],$usn1 Is Not Null Is Not Null] Limit {@usn5:@usn5[..$999][..$0]} =~[`3esn` In @usn6[..\"d_str\"][..01] Where `1esn`[$7][0Xa]|.e0 Contains 999] =~[$usn2 Starts With $`7esn` Starts With _usn4] Where _usn3[0Xa..] Match (`7esn` :`7esn`)-[{`5esn`:0.e0 =~01234567 =~01234567}]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]}),((`` {_usn4:False[...e0][..$#usn8],`4esn`:.e12[..$_usn4][..#usn7]})<-[? *..010{usn1:123456789[$_usn4..]}]->(@usn5 {`2esn`:$#usn7[`7esn`..][$`8esn`..],`3esn`:0.12['s_str'..$0][$usn1..9e0]})) Union Remove `2esn`:`5esn` With  None(usn1 In 0xabc Is Not Null Is Not Null Where .12[..07]) Contains [$#usn7[`7esn`..][$`8esn`..],$_usn4[$123456789..][12..],`6esn` In $``] Order By None(`7esn` In $`8esn`[0.12][12] Where 01 Is Null)[Single(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 999 Ends With 123456789 Ends With 12.0)..][None(usn1 In 0xabc Is Not Null Is Not Null Where 123456789[..0])..] Descending,`` Contains .e1 Contains 9e12 Asc,9e1 Contains 07 Desc Skip [`6esn` In .e0['s_str'..][$`8esn`..] Where `8esn`[0x0..]|01[$0]][Extract(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1|usn1 =~12 =~$0)][All(usn1 In 0xabc Is Not Null Is Not Null Where 0x0[$7..][`7esn`..])] Limit 01234567 Contains 0.12 Contains `5esn` Where $@usn6[..``] Remove #usn8(Distinct @usn6[$0..Null],`4esn`).#usn7,[`6esn` In 1000[12.e12][#usn7] Where 0xabc[123.654][12]|usn1[0X7..]].`8esn`,All(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $`` Starts With 0x0)._usn4 Union All Merge #usn8=(`3esn` :usn2{#usn7:usn2[`6esn`..][.0..],#usn7:\"d_str\"[..$_usn3]})<-[#usn7? *123456789..{`2esn`:999 Contains $`7esn` Contains usn2}]-(`5esn` :_usn3:@usn5)"),
    octest:ct_string("Unwind 1000 Starts With 0e0 Starts With 0 As usn2 With Distinct *,07[..1e1][..$0] As _usn3 Order By $1000[00..] Descending Where 9e1[..01234567][..`4esn`] Return Distinct *,[`3esn` In 999 Where 07 Ends With $_usn4 Ends With 0.e0|$`7esn`[`2esn`]] Starts With Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0) As `8esn`,9e12[..0x0] Order By 7 =~$1000 =~$`5esn` Asc,usn1(Distinct 0e0[...e1],$usn2 Ends With 0 Ends With 12.0)[[#usn8 In 0x0[_usn4..] Where 1e1[`3esn`]]] Asc,[.e1 =~\"d_str\" =~'s_str',$`` Is Not Null Is Not Null,$0[@usn6..][.e12..]] Contains Filter(`6esn` In 0x0[9e0..] Where 0xabc Is Not Null Is Not Null) Asc"),
    octest:ct_string("Merge `4esn`=(usn1 :`2esn`:@usn5{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc})<-[#usn8:`3esn`|_usn4*..{``:9e0 Is Null Is Null}]->(:@usn5{#usn7:0x0 In 0X0123456789ABCDEF,`2esn`:0Xa[Count(*)][0xabc]}) With  *,{`4esn`:Count(*)[..$_usn3][..$usn2]}[[`2esn` In $``[$#usn8] Where 0e0['s_str']|0x0 =~`5esn` =~$`8esn`]] Order By Count(*)[010..1.e1]['s_str'.._usn4] Ascending,$`8esn` Ends With #usn8 Ascending,07[..1e1][..$0] Descending Limit 12 Is Null Is Null Where 12.0[9e1..][Null..]"),
    octest:ct_string("Delete (`6esn` :`8esn`{usn2:#usn7 In #usn7,`1esn`:00['s_str']})<-[``?:@usn6]-(:`2esn`:@usn5{usn2:$`3esn` Ends With @usn6 Ends With 123.654})<-[@usn5?:@usn6 *..010]->(#usn7 :#usn7{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2}) Is Null,All(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $123456789 Is Not Null) Is Null Is Null Unwind 1.e1[$usn1..$`7esn`] As @usn6 Return *,usn1 =~`2esn` As @usn6,Extract(`3esn` In 999 Where 0.12[123456789..]|00[01234567][Count(*)]) Contains [#usn8 In 0x0[_usn4..] Where 1e1[`3esn`]|$_usn3[0e0..][12.0..]] Contains All(`5esn` In $usn2 Contains $`1esn` Where \"d_str\" Contains $999 Contains `2esn`) Limit 01 In 0.0 In 9e1"),
    octest:ct_string("With Distinct [0x0[9e0..],1.e1[0..]] Contains [$`3esn`[9e0..0.0][_usn4..123456789],#usn7[False..][123.654..],$#usn8[..9e12][..$`3esn`]] Contains ({usn2:0Xa Contains $`6esn`,_usn3:\"d_str\" Ends With $`3esn`})-[@usn5? *00{@usn5:usn1 Ends With 1.e1 Ends With `4esn`}]-(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})-[:`5esn`|:`1esn`]-(`2esn` ),[_usn3 =~$12,.0[..False],Null In 0xabc] Is Null Is Null As `3esn` Order By 0x0 In 0X0123456789ABCDEF Ascending,`7esn` In `8esn` In 12 Desc Skip $123456789 In 010 In #usn7 Limit [#usn8 In 07['s_str'][$@usn6] Where 9e0 Starts With 0e0 Starts With $`5esn`] Starts With Extract(_usn4 In 12.e12 Is Null Is Null Where _usn4 In .0 In .12|usn2 In 1e1 In `4esn`) Starts With None(`3esn` In @usn6[..\"d_str\"][..01] Where 12[`5esn`..$`3esn`][0.12..usn2]) Where `1esn` Merge (:`1esn`:@usn6{`8esn`:$`8esn` Contains $`2esn` Contains False})-[:`5esn`|:`1esn` *..0X0123456789ABCDEF]->(usn2 :`1esn`:@usn6)<-[`5esn`?:`1esn`|@usn6{`5esn`:#usn8 =~$1000 =~$1000,`2esn`:0x0[$7]}]-(@usn5 {`2esn`:$#usn7[`7esn`..][$`8esn`..],`3esn`:0.12['s_str'..$0][$usn1..9e0]}) Union All With  _usn3 =~$12 As `2esn` Order By #usn7 Ends With 9e0 Desc,$`3esn`[...0][..$#usn7] Asc Limit `5esn` In $usn1 In `4esn` Merge `2esn`=(((_usn4 :`2esn`:@usn5)-[:_usn3|`6esn` *01..7{_usn4:$`2esn`[$``..12e12]}]-(`5esn` {usn1:1000 Ends With $`5esn`})-[`7esn`?:``]->(usn1 :_usn4))) On Create Set Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $999[01234567][@usn5]).usn1! ={`2esn`:`2esn`[``..]} =~[`6esn` In 0x0[9e0..] Where 0Xa[..1.e1]] =~None(`3esn` In @usn6[..\"d_str\"][..01] Where $@usn6 Is Null),``+=010 In 01234567 In `5esn` Union All Match ``=((({`3esn`:.e12[$_usn4..0],usn1:00[$0..usn2][$_usn4..$999]})<-[_usn4?:_usn3|`6esn`]-(:usn2$`4esn`)<-[``?:#usn8|:`6esn`{usn1:$#usn7[..$999][..9e1]}]->(`1esn` :`4esn`:usn2))),`6esn`=(_usn4 {`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})-[`2esn`?:`7esn` *0X7..0x0]->({_usn4:`7esn`[_usn4..][Count(*)..],`1esn`:01234567 In \"d_str\"})<-[@usn6?{usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`4esn`:1.e1 Is Null Is Null}]->(`3esn` :`2esn`:@usn5{`1esn`:#usn8 =~#usn7 =~0x0,_usn4:01[$0]}) Where $usn1 Starts With $0 Starts With $123456789"),
    octest:ct_string("Match #usn8=((#usn7 {usn2:$#usn8 In True In #usn7})-[`6esn` *00]->(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})) Where $`7esn` Ends With $_usn4 Ends With `5esn` Union All Return *,$usn1 Is Not Null Is Not Null As `2esn`,Filter(`6esn` In .e0['s_str'..][$`8esn`..] Where 12.0[9e12]['s_str'])[None(usn1 In 123.654 =~.e0 =~9e0 Where False Starts With $123456789)..`3esn`(Distinct 0.12[$usn1..$7],01234567[$`7esn`])] Order By (@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]})<-[``?:_usn4|_usn3 *0xabc..{#usn8:$#usn8[..9e12][..$`3esn`],@usn5:\"d_str\"[7..$999]}]->(`5esn` {usn2:`6esn` In $``}) Is Not Null Is Not Null Asc,(:``:`6esn`{`8esn`:123.654[.e12..\"d_str\"]})<-[_usn3:`3esn`|_usn4]->(_usn3 :`4esn`:usn2) Is Not Null Is Not Null Descending Limit 0.e0[07..] Unwind `3esn`[0x0][$`5esn`] As #usn7 Union All Remove [999 Is Not Null,`7esn`[`8esn`][#usn7]].`3esn`! With  $12[#usn8..$@usn5][9e0..usn1],9e1 Contains _usn3,1000 Ends With $`5esn` Order By .e0[123456789..][$`2esn`..] Asc,0.e0[$usn2..$@usn5] Desc,`7esn`[01..1.e1] Descending Where 's_str' Starts With $usn2"),
    octest:ct_string("With Distinct .e0 =~7 =~False As `8esn`,01 Starts With $`5esn` Starts With 01234567,[0.e0 Contains $123456789 Contains 123456789,`5esn` In 12.e12 In 1000][..Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12]|0.e0[.e12])][..Any(#usn8 In 0x0[_usn4..] Where $#usn7)] As `7esn` Limit $`1esn` =~`1esn` =~0X0123456789ABCDEF Delete (`2esn` {_usn3:.e1 Ends With $123456789})<-[?{usn2:9e0[0..1e1]}]->({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})[Any(`6esn` In .e0['s_str'..][$`8esn`..] Where Null In 0xabc)..Filter(usn1 In 123.654 =~.e0 =~9e0 Where Count(*) Contains 12e12 Contains 0xabc)][[$`` Is Not Null Is Not Null,$#usn7[9e12..12],`7esn` Is Null Is Null]..Extract(`5esn` In $usn2 Contains $`1esn` Where \"d_str\" Contains $999 Contains `2esn`|.e12[``][$1000])],.e0 =~$1000,Filter(`6esn` In 1000[12.e12][#usn7] Where #usn7 Ends With 0.12) In (usn2 :_usn3:@usn5)<-[`5esn`?:`7esn`]-(`8esn` {`3esn`:Null Is Null Is Null})-[`6esn` *00]->(`2esn` :`5esn`{`1esn`:$@usn6 Ends With 0.0}) With Distinct Count(*) In $`2esn`,_usn4[$@usn6..999][$usn2..$123456789] As #usn8 Order By {`3esn`:$_usn4[False..@usn6][`4esn`..$1000],`1esn`:$`7esn`[`2esn`]} In All(`3esn` In False In $`2esn` In 1e1 Where .0[@usn6..]) Asc Skip `7esn`[0.e0..False][0e0..$_usn4] Union All Return Distinct $0[00..] As #usn8,$`6esn` Starts With usn1,\"d_str\" Starts With _usn4 Starts With $_usn4 As `5esn` Order By 1.e1 Ascending Limit $`8esn`[0.12][12] Union Match ((@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]})-[? *0xabc..{`3esn`:.e12[$_usn4..0],usn1:00[$0..usn2][$_usn4..$999]}]->(@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]})<-[_usn3:`3esn`|_usn4 *0Xa]-({`4esn`:Count(*)[..$_usn3][..$usn2]})),_usn4=(({usn2:$`3esn`[9e0..0.0][_usn4..123456789]})) Where \"d_str\" Is Not Null"),
    octest:ct_string("Merge `4esn`=(`2esn` :@usn5{@usn6:.e0 =~7 =~False})<-[?:`1esn`|@usn6]->(#usn7 {`1esn`:$`4esn`[.e1..$usn1],``:0x0 =~`5esn` =~$`8esn`}) On Match Set #usn8+=@usn5 Is Not Null Is Not Null,``+=Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) Ends With [1.e1[#usn7][1.e1],Null =~Count(*)] Ends With [#usn8[..0X0123456789ABCDEF][...0],$usn1 Is Not Null Is Not Null],`3esn`+={`1esn`:$`8esn`[``..True][1000..0.12]} Ends With Any(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where Count(*)[..`5esn`]) Ends With Single(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 010 Is Null Is Null)"),
    octest:ct_string("Remove Extract(`3esn` In 999 Where 0.12[123456789..]|`1esn`[9e12..$123456789]).@usn5!,`6esn`(0e0 Is Not Null).usn1,#usn8:`3esn` Union All Unwind $0[`5esn`][9e12] As `1esn` Merge `8esn`=(usn1 {_usn3:#usn7 Ends With 0.12})<-[{@usn6:1000 Ends With 01234567 Ends With usn1,usn2:01234567 In \"d_str\"}]-(#usn8 {`4esn`:$`3esn` Is Null})-[?{`8esn`:Count(*)[12..123.654][$`1esn`..$0]}]->(_usn3 :`7esn`{#usn7:123.654 =~.e0 =~9e0,_usn3:`1esn`[Null..]}) On Create Set _usn4 =All(usn1 In 0xabc Is Not Null Is Not Null Where .12[..07])[..[`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $usn2[12.0..][`8esn`..]|$7[`7esn`][123.654]]][..Any(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1e1 Contains 0Xa)] Merge ({@usn5:0x0 =~`5esn` =~$`8esn`})-[:`1esn`|@usn6 *7{@usn5:0X7[..True][..01234567]}]->(`1esn` :_usn3:@usn5) On Match Set `3esn`+=#usn8 Union Merge `3esn`=((`7esn` {#usn7:1e1[`3esn`]})<-[_usn4?:``{@usn5:1000 Starts With 0e0 Starts With 0,#usn7:$`5esn`[`4esn`..$`2esn`]}]-(_usn4 :#usn8:#usn7)) On Create Set `2esn`:``:`6esn`,Extract(`6esn` In 0x0[9e0..] Where `7esn`[`8esn`][#usn7]|`8esn` Ends With $`1esn`).`1esn`? =1.e1 =~01234567,{@usn6:$123456789[12.0],#usn7:usn1 =~_usn4 =~$usn1}.`8esn`! =@usn6(Distinct $0 Contains 7 Contains 1.e1)[(_usn4 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8)][Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0X0123456789ABCDEF In _usn3)] Remove [0Xa[..9e12][...e0],0Xa =~0Xa =~`3esn`,.e1[0X7..`2esn`]].`6esn`!,(`7esn` {@usn6:$`3esn` Starts With 9e12 Starts With `8esn`})<-[`3esn`:usn2|:``]-(:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`})<-[?{_usn3:Count(*) Ends With 7 Ends With 0,`8esn`:@usn6 Starts With #usn8 Starts With $#usn7}]->({_usn4:$1000[$usn1][.e1]}).`3esn`?,(`2esn` :`1esn`:@usn6{#usn8:.12 Is Not Null})<-[:`7esn`{`6esn`:usn1[$`1esn`..],_usn4:$usn2 Contains $`1esn`}]->({`1esn`:1e1 Starts With 010})<-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->(@usn5 :`5esn`).usn1 Remove All(_usn4 In 12.e12 Is Null Is Null Where 0x0[$`2esn`..'s_str'][$@usn5..1.e1]).``?"),
    octest:ct_string("Unwind [#usn8 In 07['s_str'][$@usn6] Where $#usn8 =~7 =~.12|Null Is Null Is Null][..Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0 Contains $@usn5)] As `5esn` Merge (`1esn` :`4esn`:usn2{`2esn`:9e0[$@usn6]})<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]-({@usn6:`6esn` Is Not Null}) On Create Set `5esn`+=$`2esn`[.._usn3],[`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0X0123456789ABCDEF In _usn3|0.12[123456789..]].`7esn`! =$@usn5[..`4esn`],@usn5 =0e0 In `8esn` In 0xabc Optional Match usn2=(`5esn` :`2esn`:@usn5{usn2:$`6esn` Starts With usn1,``:123456789 =~@usn5 =~$`5esn`})<-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}),(`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})<-[? *..010{usn1:123456789[$_usn4..]}]->(#usn7 {usn2:$#usn8 In True In #usn7}) Where ``[0X7..][$@usn6..] Union All Unwind 9e0[123456789..0][12.0..@usn6] As `2esn`"),
    octest:ct_string("Match (:`4esn`:usn2{_usn3:Null Is Not Null Is Not Null,`4esn`:$1000 Is Not Null})-[?:`3esn`|_usn4 *01..7{@usn5:`4esn`}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]})<-[?:usn2|:`` *7]->(`` :_usn3:@usn5),`1esn`=(usn1 :usn1:``{@usn6:_usn3[0Xa..]})-[{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}) Where 123456789[..0] Return Distinct Single(`5esn` In $usn2 Contains $`1esn` Where True Contains .e1 Contains `2esn`) In None(`3esn` In False In $`2esn` In 1e1 Where #usn7[.12][usn2]),`` In usn1 In 01234567,$`3esn` Ends With 123456789 Ends With 0.e0 As `7esn` Order By [@usn5 Is Null,\"d_str\" Ends With $1000 Ends With usn2,$usn1 Is Not Null Is Not Null][..`7esn`(Distinct $`2esn`[.._usn3],9e0 Is Null Is Null)][..[.e0['s_str'..][$`8esn`..]]] Descending,9e1 =~$0 Asc Skip $`` Is Null Is Null Limit @usn6 Is Not Null Union Optional Match `8esn`=(((`2esn` {_usn3:0[1e1..00]})-[_usn4?:usn2|:`` *7]-(`5esn` {`1esn`:999 Ends With $`4esn`})<-[`1esn`:_usn4|_usn3 *00{`1esn`:$#usn8 Starts With usn2 Starts With .12,@usn6:07[$`8esn`]}]-(`3esn` :`8esn`))),`2esn`=(:@usn5{#usn7:0x0 In 0X0123456789ABCDEF,`2esn`:0Xa[Count(*)][0xabc]})-[{usn1:Count(*)[..12][..$999],#usn8:usn1 In 010}]->(`1esn` :`8esn`) Create (`3esn` :#usn8:#usn7{_usn3:$`1esn` Is Not Null Is Not Null,`2esn`:0X7 Contains 12.0})-[`4esn`?:#usn8|:`6esn` *999{`8esn`:010[`1esn`..`4esn`]}]-(`` )-[:@usn5|:@usn6 *999{`5esn`:0x0 =~@usn5 =~01}]->(:``:`6esn`{`7esn`:12e12 Ends With 0e0,`8esn`:$_usn4[False..@usn6][`4esn`..$1000]}),((`` :`3esn`{#usn8:`3esn` Is Not Null Is Not Null,#usn8:$123456789[`3esn`..`5esn`][1e1..$`5esn`]})<-[?{``:Null Is Not Null Is Not Null}]-({#usn8:$123456789 =~usn1 =~0xabc})) Optional Match ((`6esn` :`2esn`:@usn5)) Where `` Is Not Null Is Not Null Union Create `2esn`=(`1esn` {`6esn`:07}) Unwind $`3esn`[9e0..0.0][_usn4..123456789] As #usn7 Merge `3esn`=(((_usn3 )-[:usn2|:`` *0..]->(:#usn7{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]})-[? *..0X0123456789ABCDEF{#usn8:0X7[..`5esn`][..$`7esn`]}]-(:#usn8:#usn7{usn1:00['s_str'],#usn8:$`8esn`[``..True][1000..0.12]}))) On Create Set Filter(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 1000 Starts With ``).`6esn`! =Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0) Is Not Null,`5esn` =0x0[01234567..Null][0Xa...e12]"),
    octest:ct_string("Detach Delete .e1 =~\"d_str\" =~'s_str',[usn2 Contains 0,.e0 =~7 =~False,.12] Is Null"),
    octest:ct_string("Unwind `5esn` Ends With 0x0 As `3esn` Unwind [usn1 In 123.654 =~.e0 =~9e0 Where $@usn5[$_usn3]|$`2esn` Ends With 1e1] Contains All(#usn8 In 0x0[_usn4..] Where 0xabc[123.654][12]) As `2esn` Create #usn7=(`7esn` :`7esn`)-[{`5esn`:0.e0 =~01234567 =~01234567}]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]}) Union All Return *,[`6esn` In 1000[12.e12][#usn7] Where $`7esn`[..$`8esn`]|$`6esn` Starts With usn1][Extract(`3esn` In 999 Where usn1[$`1esn`..])..{`3esn`:usn2 Contains 07 Contains False,#usn8:usn2[.e1..][01234567..]}][{@usn5:.12[9e1..0X7]}..[_usn4 In 12.e12 Is Null Is Null Where $123456789 In 010 In $`8esn`|0.12['s_str'..$0][$usn1..9e0]]] As usn1 Order By Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $@usn5 =~$usn2 =~True) In (@usn5 :`3esn`)<-[``?:usn1|#usn7]-(:`2esn`:@usn5$usn1)-[usn1?:@usn5|:@usn6 *01..7{`1esn`:`8esn` Ends With $`1esn`}]-(#usn8 :_usn4) Desc,Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) Ends With [1.e1[#usn7][1.e1],Null =~Count(*)] Ends With [#usn8[..0X0123456789ABCDEF][...0],$usn1 Is Not Null Is Not Null] Desc Limit $``[12e12..01][$`5esn`..12e12] Union Return Distinct *,$`5esn` Starts With .0 Starts With 123.654 As @usn6 Skip 01234567[01234567][.e12] Limit $`6esn` Is Null Is Null Remove `8esn`(Distinct).`3esn`,(:`4esn`:usn2$``)-[`5esn`?:_usn4|_usn3{@usn5:7 =~False,_usn3:999 Ends With $`4esn`}]->(usn2 :``:`6esn`)<-[_usn3:`3esn`|_usn4]->(#usn7 :_usn4).`5esn`!,[`5esn` In $usn2 Contains $`1esn` Where $`6esn`[$0]|`4esn`[Count(*)]].`6esn`?"),
    octest:ct_string("Return *,0Xa[Count(*)][0xabc] As _usn4,$usn2 =~`6esn` =~`1esn` Limit Single(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]) Starts With (:usn1:``{_usn4:1000[12.e12][#usn7]})-[ *7{`4esn`:$#usn7[$`3esn`..$999],`8esn`:$0[00..]}]-({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]}) Starts With {`1esn`:`5esn` In 12.e12 In 1000,`3esn`:0Xa Contains $`6esn`} Union All Return *,`1esn`[usn1] As `4esn`,[`7esn` In $`8esn`[0.12][12] Where 's_str'[$#usn8]][None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1)..(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})-[``?:@usn6]->({``:_usn3[9e0..$123456789][0X7..999]})][[$#usn8 =~7 =~.12,$`6esn`[.e12],_usn4 Starts With `6esn` Starts With $`8esn`]..{usn2:123.654[.e12..\"d_str\"]}] Order By @usn6(_usn4[.._usn4],00[$@usn5][0X7]) =~Extract(`3esn` In False In $`2esn` In 1e1 Where $`` Starts With 0x0|0.12 Is Null Is Null) =~Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null|True =~0 =~123456789) Ascending,@usn6 Contains $_usn3 Contains 12.0 Descending Limit $`6esn`[$0] Merge `5esn`=((:@usn5{``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]})<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(`4esn` :`5esn`)<-[?:@usn5|:@usn6]-({`1esn`:$`7esn` Ends With $_usn4 Ends With `5esn`})) On Create Set Extract(#usn8 In 0x0[_usn4..] Where `8esn`[0x0..]|.e12 Contains `7esn` Contains 999).#usn7 =$#usn8 Contains `5esn` Contains $#usn8 Delete 12.0[9e1..][Null..],7 Contains 1000 Contains $usn1,_usn3($123456789[..`3esn`][..`7esn`]) Is Null Union With Distinct _usn4 In .0 In .12 As `4esn`,$123456789 Is Null Is Null Order By Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 01[$0])[{`5esn`:@usn6[$usn1][$`2esn`],`1esn`:12.0[9e12]['s_str']}..][Any(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0)..] Asc,$7[`7esn`][123.654] Descending,usn1[..`7esn`][..$`8esn`] Ascending Skip 0e0 Ends With usn1 Ends With `1esn` Limit `2esn` Contains `3esn` Contains $@usn5 Where $123456789 Is Not Null"),
    octest:ct_string("With  $`7esn`[`2esn`] As @usn6,$#usn8 =~7 =~.12 As `5esn`,Single(#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]) Contains Single(`5esn` In $usn2 Contains $`1esn` Where `2esn` Contains `3esn` Contains $@usn5) Contains {_usn3:0xabc Contains 0,`6esn`:$`6esn`[.e12..$`6esn`][$#usn7...0]} As _usn3 Limit Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null) =~[12 Is Null Is Null,9e0[$@usn6]] With Distinct *,Any(usn1 In 0xabc Is Not Null Is Not Null Where 12e12 Ends With `6esn`)[[`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 7 =~False|`6esn` Is Not Null]],0X7 Contains 12.0 As `5esn` Skip 12.e12 Is Null Is Null"),
    octest:ct_string("Create ``=((`4esn` {``:0.12 Contains 0x0 Contains @usn5})) Match (((#usn8 {`4esn`:$`3esn` Is Null})-[#usn8?:usn1|#usn7{`8esn`:$#usn7[`7esn`..][$`8esn`..]}]-(:@usn5{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2})-[`8esn`?:`` *7]->(usn2 :`6esn`:`3esn`{#usn7:$@usn6 Is Not Null,`8esn`:12e12 Ends With $_usn4 Ends With $`2esn`})))"),
    octest:ct_string("Delete .e12[``][$1000] Remove Single(`3esn` In False In $`2esn` In 1e1 Where `2esn`[``..]).`6esn`? Union All Match (`5esn` :#usn7)-[`5esn`?:@usn5|:@usn6 *7{`2esn`:$`8esn`[0.12][12],`6esn`:`` Contains $_usn3 Contains 0e0}]-(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]}),(:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`}) Where _usn4[.._usn4] Union All Create `8esn`=(:`1esn`:@usn6{`5esn`:123.654[0Xa..0x0][.12..12e12],`8esn`:_usn3[..usn2]})<-[usn1:#usn8|:`6esn` *0xabc..]->(`8esn` :`1esn`:@usn6),({_usn3:.12[usn1],_usn4:$usn1 Starts With Null Starts With $``})-[`3esn`]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5}) Detach Delete $`7esn`[usn2],01 Is Null,{#usn7:0.e0 Contains @usn5 Contains 0X7} =~[$999[01234567][@usn5],_usn4 In .0 In .12,$#usn8[1.e1]] =~{_usn4:$`2esn` Ends With 1e1} Return Distinct 0.e0[.e12],$123456789 Is Null Is Null,$@usn6[$#usn8..$999][Count(*)..usn1] As @usn6"),
    octest:ct_string("Remove Extract(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where .12 Is Null).`5esn`!,[`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where @usn6[.0]|True =~0 =~123456789].usn1! Match @usn5=(((:`1esn`:@usn6)<-[@usn5?:_usn4|_usn3 *1000..01234567]->({@usn6:$#usn8[0e0..][07..]})<-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}))) Unwind (usn1 )<-[{`5esn`:usn2[.e1..][01234567..],usn1:999 Is Not Null}]->({`7esn`:`4esn` In $`2esn` In @usn5}) Is Not Null Is Not Null As `` Union Remove All(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null).`2esn`!"),
    octest:ct_string("Return Distinct *,$0 Ends With .12 Order By .e0[123456789..][$`2esn`..] Asc,0.e0[$usn2..$@usn5] Desc,`7esn`[01..1.e1] Descending Limit Single(`3esn` In @usn6[..\"d_str\"][..01] Where 12[`5esn`..$`3esn`][0.12..usn2])[[`6esn` In 0x0[9e0..] Where $#usn8[0e0..][07..]|0 Is Not Null Is Not Null]..][(`6esn` :usn1:``)<-[``?:usn1|#usn7]-(@usn5 :`2esn`:@usn5{@usn6:123456789 =~#usn8 =~$0})..] Merge `3esn`=(:`4esn`:usn2$``) On Create Set `5esn`+=`6esn`(1000[12.e12][#usn7],0x0 =~`5esn` =~$`8esn`) Is Null,`8esn`:usn2 On Match Set _usn3+={_usn3:`1esn`[..$#usn7]} Contains Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1) Contains [$1000[00..],$`6esn`[.e12..$`6esn`][$#usn7...0],0Xa[..1.e1]],#usn7+=$12[`3esn`][`3esn`],{_usn3:0Xa[..$`2esn`][..00]}.`5esn`? =[`6esn` In 1000[12.e12][#usn7] Where 12.0[9e12]['s_str']|0.e0 =~01234567 =~01234567] Ends With Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $`8esn`[0.12][12]) Ends With count(1000[Null][$`7esn`],$123456789[`3esn`..`5esn`][1e1..$`5esn`]) With  All(`7esn` In $`8esn`[0.12][12]) Contains [usn1 In 123.654 =~.e0 =~9e0 Where Count(*) Contains 12e12 Contains 0xabc] Contains [`4esn` Ends With 's_str' Ends With @usn6] As #usn8,$7[..$``] As ``,(:`1esn`:@usn6)<-[{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(`3esn` :`4esn`:usn2) =~[12 Is Null Is Null,9e0[$@usn6]] Order By 0Xa[..$`2esn`][..00] Descending Limit $123456789[..$`7esn`][..\"d_str\"] Union Detach Delete 0.0[.12..`8esn`],$7 Is Null,`4esn` Ends With $12 Ends With 0.e0 With Distinct (`6esn` :`8esn`)-[@usn6{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]}]-(`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]})<-[`8esn`?:usn1|#usn7 *01..7{usn1:123456789[$_usn4..]}]-(usn2 :@usn6) =~$`3esn` =~`8esn`(1000[12.e12][#usn7],#usn8[1e1..]) As `7esn` Order By [usn1 In 123.654 =~.e0 =~9e0 Where $@usn5[$_usn3]|$`2esn` Ends With 1e1] Contains All(#usn8 In 0x0[_usn4..] Where 0xabc[123.654][12]) Descending,Extract(usn1 In 999 Where 1e1 =~$`8esn` =~`1esn`|7 Starts With $@usn6) Is Not Null Is Not Null Desc Where `5esn`[$7..01] With  01 Starts With $`5esn` Starts With 01234567,{usn1:False[$12],`1esn`:0.e0 Ends With $123456789} Contains `2esn`(Distinct 01234567[`6esn`..],Count(*) Ends With $#usn8 Ends With 0Xa) As _usn3 Order By (usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[#usn7:`1esn`|@usn6 *0..]-(@usn6 :usn2) In (`5esn` {_usn3:1.e1 Is Null Is Null})<-[_usn3?:#usn7|`5esn` *..0x0]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})<-[?:@usn5|:@usn6]-(`7esn` {@usn6:.e0[123456789..][$`2esn`..],``:$0[`5esn`][9e12]}) Ascending,[00[$0..usn2][$_usn4..$999]] Descending,{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]}[All(`7esn` In $`8esn`[0.12][12])..[#usn8[$`7esn`..12.0],.e0 Is Not Null]] Ascending Limit @usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`] Union All Match `6esn`=(({@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})) Where 9e1[$#usn8] Create (((:`5esn`{_usn4:\"d_str\"[.0][9e0],usn1:.e12 Is Not Null Is Not Null})<-[ *..0X0123456789ABCDEF]->(`1esn` {`5esn`:$`7esn` Ends With $_usn4 Ends With `5esn`,#usn8:'s_str'[$#usn8]})<-[usn2?:`7esn`{``:`5esn`[usn1]}]->(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]})))"),
    octest:ct_string("Return *,[usn1[..$123456789][..`1esn`],0e0 Is Not Null][Extract(#usn8 In 0x0[_usn4..] Where 0X0123456789ABCDEF In _usn3|$`5esn`[0][.12])][[`6esn` In 0x0[9e0..] Where #usn7[@usn6..]]] As #usn8 Skip .12[usn1] Limit Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 01[$0])[{`5esn`:@usn6[$usn1][$`2esn`],`1esn`:12.0[9e12]['s_str']}..][Any(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0)..] Unwind .12 =~#usn7 =~01 As `1esn` Optional Match #usn7=((#usn7 :`5esn`)<-[`2esn`?:`5esn`|:`1esn`]->(:usn2)),((_usn3 :`6esn`:`3esn`{`7esn`:1000 Ends With 01234567 Ends With usn1})-[usn2?:_usn4|_usn3{#usn8:12.0[`3esn`][_usn3]}]-(usn2 :`4esn`:usn2{`3esn`:@usn5[$`1esn`..][$7..]})<-[usn2:`3esn`|_usn4]-(usn2 :@usn6{@usn5:#usn8[True..#usn7][01..@usn5]})) Union All Match `5esn`=((`4esn` :usn2)<-[:#usn7|`5esn`*{`8esn`:01[$0],``:0xabc Is Not Null Is Not Null}]-(_usn3 :`7esn`{#usn7:123.654 =~.e0 =~9e0,_usn3:`1esn`[Null..]})) Where 1.e1[$`7esn`] Detach Delete All(usn1 In 0xabc Is Not Null Is Not Null Where .12[..07])[..[`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $usn2[12.0..][`8esn`..]|$7[`7esn`][123.654]]][..Any(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1e1 Contains 0Xa)] Merge `4esn`=(`7esn` {`2esn`:1.e1[#usn7][1.e1]})<-[`2esn`?:@usn6]->(`3esn` :`7esn`$`6esn`)<-[`6esn`?:`1esn`|@usn6 *0xabc..]-(:`7esn`{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc}) On Create Set usn1:_usn3:@usn5,@usn5:@usn6,`6esn`+=0.e0 Contains 9e1 Contains 9e0 Union Delete `8esn`[.e1..],[\"d_str\" Ends With $1000 Ends With usn2] Is Null Is Null With Distinct .e1[01234567] As `6esn`,01 In $7 In $1000 As #usn7,$`1esn` Starts With True Starts With @usn5 Order By @usn5 In .e0 In \"d_str\" Asc"),
    octest:ct_string("Unwind #usn8 Is Null As `7esn` Return Distinct `2esn`[`3esn`..] As `8esn`,{`6esn`:`` In 123.654 In 0.0} Is Not Null Is Not Null Skip 07 =~0.e0 Union All Optional Match usn2=(`7esn` {`8esn`:0 Is Null Is Null})<-[`4esn`?{`8esn`:$@usn5 Starts With Count(*) Starts With $usn1,#usn7:0.e0[.e12]}]->(:`6esn`:`3esn`{@usn6:#usn8 Is Not Null,usn2:1e1 Is Null})-[#usn8?:usn1|#usn7{`8esn`:$#usn7[`7esn`..][$`8esn`..]}]-(:`1esn`:@usn6),#usn8=((`` :usn2)<-[_usn4?:`3esn`|_usn4 *7]-(`5esn` :usn1:``)) Remove usn1(999 Is Not Null,0.12[123456789..]).`3esn` Union Remove All(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 7 Ends With `3esn` Ends With $`2esn`).``,0e0._usn3,[$usn1[#usn8..`8esn`][7..`4esn`],`5esn` Ends With 0x0].`2esn`? Remove `8esn`(Distinct).`3esn`,(:`4esn`:usn2$``)-[`5esn`?:_usn4|_usn3{@usn5:7 =~False,_usn3:999 Ends With $`4esn`}]->(usn2 :``:`6esn`)<-[_usn3:`3esn`|_usn4]->(#usn7 :_usn4).`5esn`!,[`5esn` In $usn2 Contains $`1esn` Where $`6esn`[$0]|`4esn`[Count(*)]].`6esn`? With  {`1esn`:$usn2 =~`6esn` =~`1esn`} Ends With 010 Ends With None(_usn4 In 12.e12 Is Null Is Null Where $`4esn` In 0x0),(:`1esn`:@usn6{`1esn`:12.0[9e12]['s_str'],`3esn`:$123456789 Is Not Null})<-[:`3esn`|_usn4 *12]->(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null})<-[usn2?:`8esn`|@usn6{#usn7:$`3esn` Is Null}]->(`2esn` :`8esn`) Starts With Any(`5esn` In $usn2 Contains $`1esn` Where `8esn` Contains 0X0123456789ABCDEF) As `3esn`,False[...e0][..$#usn8] As `8esn` Skip 1e1[`3esn`] Where $usn1[#usn8..`8esn`][7..`4esn`]"),
    octest:ct_string("Detach Delete 123.654[``],0xabc[123.654][12] Return {`1esn`:$usn2 =~`6esn` =~`1esn`} Ends With 010 Ends With None(_usn4 In 12.e12 Is Null Is Null Where $`4esn` In 0x0),(:`1esn`:@usn6{`1esn`:12.0[9e12]['s_str'],`3esn`:$123456789 Is Not Null})<-[:`3esn`|_usn4 *12]->(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null})<-[usn2?:`8esn`|@usn6{#usn7:$`3esn` Is Null}]->(`2esn` :`8esn`) Starts With Any(`5esn` In $usn2 Contains $`1esn` Where `8esn` Contains 0X0123456789ABCDEF) As `3esn`,False[...e0][..$#usn8] As `8esn` Order By Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) Ends With [1.e1[#usn7][1.e1],Null =~Count(*)] Ends With [#usn8[..0X0123456789ABCDEF][...0],$usn1 Is Not Null Is Not Null] Ascending,{@usn5:$`4esn` In 0x0,`3esn`:`1esn`[..$#usn7]}[{@usn5:@usn5[..$999][..$0]}] Ascending Skip (_usn3 {usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`4esn`:1.e1 Is Null Is Null})-[`1esn`?:`1esn`|@usn6 *12]->(`8esn` :@usn6)[({usn1:$usn1 Starts With Null Starts With $``,@usn5:0x0[01234567..Null][0Xa...e12]})<-[ *..0X0123456789ABCDEF]->(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]})..] Union All Delete $`3esn` Contains $12 Contains 1000,'s_str' In usn1 In 12.0,`3esn` Starts With $@usn5 Starts With 0xabc Merge ``=((({`3esn`:.e12[$_usn4..0],usn1:00[$0..usn2][$_usn4..$999]})<-[_usn4?:_usn3|`6esn`]-(:usn2$`4esn`)<-[``?:#usn8|:`6esn`{usn1:$#usn7[..$999][..9e1]}]->(`1esn` :`4esn`:usn2))) On Create Set `7esn`:`3esn`,({``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]})<-[:@usn6 *7{``:9e0 Is Null Is Null,`3esn`:.0[@usn6..]}]->(`8esn` :``:`6esn`).`5esn`! =None(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $@usn6 Is Null Is Null)[None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where .e0 Is Not Null)],`4esn`+=False In 1.e1 In $12 On Create Set @usn6 =[0Xa[..$`2esn`][..00]] Starts With (@usn6 )-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(:`7esn`{`2esn`:.e12 Is Not Null Is Not Null,`4esn`:_usn4[1000..``]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`6esn` ),`6esn`+=$12[usn2][12.0]"),
    octest:ct_string("Remove Extract(`6esn` In .e0['s_str'..][$`8esn`..] Where 0.12[123456789..]|.12[usn1]).#usn7!,Filter(_usn4 In 12.e12 Is Null Is Null Where 0e0 Is Not Null)._usn3! Unwind $usn1[1e1..1e1] As `2esn` Unwind @usn6[$0..Null] As usn1 Union All Delete `5esn` Ends With 0x0,[#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]][Filter(`2esn` In $``[$#usn8] Where 01234567[`6esn`..])..][[`3esn` In False In $`2esn` In 1e1 Where .12 =~$#usn7 =~$``|01234567 Is Null]..] Create `7esn`=((:`1esn`:@usn6{`1esn`:12.0[9e12]['s_str'],`3esn`:$123456789 Is Not Null})),(({_usn4:$`5esn` Starts With $`3esn` Starts With 1.e1,`3esn`:1000[Null][$`7esn`]})-[? *999]-({_usn3:123.654 Is Not Null Is Not Null})<-[usn1?:`8esn`|@usn6]->(#usn8 :#usn7{`2esn`:0.e0[.e12]})) Remove Extract(`2esn` In $``[$#usn8] Where \"d_str\" Starts With _usn4 Starts With $_usn4).`2esn`?"),
    octest:ct_string("Merge (`4esn` :#usn8:#usn7) On Create Set `5esn`+=`6esn`(1000[12.e12][#usn7],0x0 =~`5esn` =~$`8esn`) Is Null,`8esn`:usn2 Union All Unwind $@usn5 =~$usn2 =~True As _usn3 Remove {@usn5:123456789[..#usn8],#usn8:usn1 =~`2esn`}.`6esn`,[@usn5[$`1esn`..][$7..],$#usn8 Is Null Is Null,`4esn` Ends With $12 Ends With 0.e0].@usn5 Union All Delete 12.0 Is Null Optional Match _usn4=(@usn5 :usn1:``{usn2:9e0[0..1e1]})<-[#usn8?:`5esn`|:`1esn`{`8esn`:.12 Is Not Null,_usn3:Count(*) In $`2esn`}]-({`1esn`:1e1 Starts With 010})"),
    octest:ct_string("Unwind True Ends With `6esn` Ends With 9e0 As `` Union Return Distinct $7[`8esn`..False][.e12..0.e0],Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 123.654 Is Not Null Is Not Null)[{usn1:$7[$12]}][Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where \"d_str\"[..$_usn3])] As ``,'s_str' Ends With $7 As #usn8 Delete 12.0[9e1..][Null..],7 Contains 1000 Contains $usn1,_usn3($123456789[..`3esn`][..`7esn`]) Is Null Unwind $#usn8[1.e1..] As @usn6 Union All With  $1000 Is Not Null Is Not Null,(:`4esn`:usn2{_usn3:Null Is Not Null Is Not Null,`4esn`:$1000 Is Not Null})<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]->(:@usn5{usn1:12.e12 Is Null Is Null,``:Null Is Not Null Is Not Null}) Ends With {@usn6:_usn3[0Xa..]} As usn1,$#usn8 Ends With _usn4 Ends With usn2 As #usn7 Skip _usn4[#usn7..#usn8] Limit `8esn` Ends With $`1esn` Unwind None(`6esn` In 1000[12.e12][#usn7] Where 9e12[\"d_str\"]) Ends With None(`6esn` In 1000[12.e12][#usn7] Where usn1[9e1..]) Ends With [`5esn` In 12.e12 In 1000,False In $`2esn` In 1e1] As `` With  *,#usn7(Distinct $999[@usn5..][Null..],010[`1esn`..`4esn`])[..{_usn3:0e0['s_str'],`6esn`:9e12[\"d_str\"]}][..{`5esn`:@usn6[$usn1][$`2esn`],`1esn`:12.0[9e12]['s_str']}],Extract(`3esn` In 999 Where .e12 Is Null Is Null|$`7esn`[usn2]) =~Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where @usn5['s_str'..$`2esn`]|$@usn5[$_usn3..Null]) =~Any(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where #usn7 In #usn7) As `2esn` Order By _usn4[7..$999] Desc Skip #usn8 Starts With 0 Limit .12 =~$#usn7 =~$``"),
    octest:ct_string("Unwind `7esn`[_usn4..][Count(*)..] As `7esn` Create #usn7=(`1esn` {`3esn`:@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`],`4esn`:0e0 Is Null})-[?:usn1|#usn7]-(:``:`6esn`{@usn6:`2esn`[``..],_usn3:12.0 In 07}) Unwind usn1[..$123456789][..`1esn`] As @usn6 Union All Remove (:`2esn`:@usn5$usn1)<-[:`1esn`|@usn6*..]-(`3esn` :``:`6esn`{`5esn`:$999[9e0..010][999..010]}).usn2?,All(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 7 In 1e1).usn1!,All(`7esn` In $`8esn`[0.12][12] Where $123456789 =~usn1 =~0xabc).usn2 Merge `7esn`=(usn1 :_usn4)<-[usn1]->(:`3esn`{`7esn`:12.e12[.12..$_usn3][0e0..9e0],`7esn`:0X7[..True][..01234567]})<-[_usn3?:`` *..010{usn2:`7esn`[_usn4..][Count(*)..]}]->(`8esn` :``:`6esn`{#usn7:$`3esn` Is Null}) Remove None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where False In $`2esn` In 1e1).`2esn`?,[`3esn` In 999 Where usn1[$`1esn`..]].usn2? Union All Unwind Null In 0xabc As `` Unwind usn1[..$123456789][..`1esn`] As @usn6"),
    octest:ct_string("Create (#usn7 {_usn4:`1esn`[$7][0Xa]}),@usn5=((`2esn` )-[:@usn5|:@usn6 *999{`5esn`:0x0 =~@usn5 =~01}]->(:``:`6esn`{`7esn`:12e12 Ends With 0e0,`8esn`:$_usn4[False..@usn6][`4esn`..$1000]})-[`3esn`? *12{@usn5:$#usn8[..123456789][..`2esn`],#usn7:12.0[..0X7]}]-(:`7esn`{@usn6:`2esn`[``..]})) Union All Create (#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})<-[``{#usn7:$`2esn` =~False,``:12e12[..9e12][..$@usn6]}]-(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010}),((`1esn` :`4esn`:usn2)) Create #usn7=(`7esn` :`7esn`)-[{`5esn`:0.e0 =~01234567 =~01234567}]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]})"),
    octest:ct_string("Merge _usn4=((`1esn` {@usn6:`1esn`[$7][0Xa]})<-[@usn6{#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]}]-(`2esn` :#usn8:#usn7)) On Create Set All(`6esn` In 1000[12.e12][#usn7] Where `1esn`[$7][0Xa]).`7esn` =010 In $@usn5 In `5esn`,usn2 =0.e0 =~01234567 =~01234567,`3esn`:`5esn` On Create Set Extract(`3esn` In False In $`2esn` In 1e1 Where 01 Starts With $`5esn` Starts With 01234567).`8esn`! =None(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1) Ends With All(usn1 In 0xabc Is Not Null Is Not Null Where $@usn6 Is Null) Ends With Any(`6esn` In 1000[12.e12][#usn7] Where 01 Starts With $`5esn` Starts With 01234567),[`5esn` In $usn2 Contains $`1esn` Where False[$12]|.e12[``][$1000]].usn1! =_usn3[0Xa..],None(`3esn` In False In $`2esn` In 1e1 Where #usn7[.12][usn2]).@usn5 =Filter(_usn4 In 12.e12 Is Null Is Null Where 0e0 Is Not Null) =~All(`2esn` In $``[$#usn8] Where 12e12 Ends With $_usn4 Ends With $`2esn`) Union All Merge ((:usn1:``{#usn7:#usn8[$`7esn`..12.0],`1esn`:9e12 In 123.654 In True})) On Match Set `3esn`+=#usn8 On Match Set usn2 =Single(`6esn` In 1000[12.e12][#usn7] Where $`3esn` Starts With 01234567 Starts With $`5esn`) Ends With ``(0X7[..True][..01234567]) Ends With [0.12['s_str'..$0][$usn1..9e0]] Return $`7esn`[`2esn`] As @usn6,$#usn8 =~7 =~.12 As `5esn`,Single(#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]) Contains Single(`5esn` In $usn2 Contains $`1esn` Where `2esn` Contains `3esn` Contains $@usn5) Contains {_usn3:0xabc Contains 0,`6esn`:$`6esn`[.e12..$`6esn`][$#usn7...0]} As _usn3 Limit Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null) =~[12 Is Null Is Null,9e0[$@usn6]]"),
    octest:ct_string("Merge (((:`5esn`{_usn4:\"d_str\"[.0][9e0],usn1:.e12 Is Not Null Is Not Null})<-[ *..0X0123456789ABCDEF]->(`1esn` {`5esn`:$`7esn` Ends With $_usn4 Ends With `5esn`,#usn8:'s_str'[$#usn8]})<-[usn2?:`7esn`{``:`5esn`[usn1]}]->(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]}))) On Match Set usn2+=[`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $1000[00..]|`1esn`[usn1]][{usn2:$`6esn`[.e12],`4esn`:`4esn` In .12 In $#usn8}..],@usn5+=@usn6[..$usn1][..010],[`6esn` In .e0['s_str'..][$`8esn`..] Where 0.12[123456789..]|$`3esn` Ends With @usn6 Ends With 123.654].`8esn`! =7[usn1][$7] Unwind .12 Is Null As _usn4"),
    octest:ct_string("Unwind (_usn4 :_usn3:@usn5)<-[@usn6:`8esn`|@usn6{@usn6:#usn8 =~#usn7 =~0x0,`7esn`:$usn1 Ends With $`2esn`}]->(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[?:`6esn`]->(`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})[Any(`5esn` In $usn2 Contains $`1esn` Where @usn6[$usn1][$`2esn`])..][None(`3esn` In False In $`2esn` In 1e1 Where True Contains $`` Contains 01234567)..] As #usn8 Create (((usn1 :usn1:``{@usn6:_usn3[0Xa..]})<-[`2esn`?:@usn6]-(`2esn` :_usn4{`7esn`:`2esn`[`3esn`..],`6esn`:.12 Is Not Null})-[`4esn`?:#usn8|:`6esn` *999{`8esn`:010[`1esn`..`4esn`]}]-(`5esn` ))),`4esn`=(`1esn` {_usn3:12.0 In 07,`2esn`:01234567[..`6esn`][..``]})"),
    octest:ct_string("Return Distinct _usn4[#usn7..#usn8] Order By $#usn8 In `` Desc Limit @usn6(Distinct 0xabc Contains 0)[{_usn4:$`2esn` Ends With 1e1}..][All(_usn4 In 12.e12 Is Null Is Null Where 0e0 =~False =~.12)..] Create `8esn`=(((`1esn` {@usn6:`1esn`[$7][0Xa]})<-[`4esn`?]->(@usn6 :``:`6esn`{#usn7:9e1 Contains _usn3})<-[@usn5?:_usn4|_usn3 *..010{@usn6:$123456789[`1esn`..]}]-(`4esn` :``:`6esn`{#usn7:`2esn`[`3esn`..],usn2:$usn2 Starts With $`7esn` Starts With _usn4}))),`2esn`=((_usn4 :`6esn`:`3esn`)<-[usn1:#usn8|:`6esn` *0xabc..]->(`8esn` :`1esn`:@usn6)<-[:`5esn`|:`1esn`{#usn8:`7esn` Is Null,`4esn`:False[$12]}]->(_usn4 {`2esn`:1.e1 Is Not Null Is Not Null}))"),
    octest:ct_string("Delete [`6esn` In .e0['s_str'..][$`8esn`..] Where $@usn5 =~$usn2 =~True|.e0[$`1esn`..][_usn4..]] Ends With (`2esn` {_usn3:.e1 Ends With $123456789})<-[?{usn2:9e0[0..1e1]}]->({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]}) Ends With [.e0['s_str'..][$`8esn`..],.e0 =~7 =~False] Detach Delete [`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12]] Ends With [0] Ends With `8esn`,0X7[..$0][..0.12] Optional Match #usn7=(`7esn` :`7esn`)-[{`5esn`:0.e0 =~01234567 =~01234567}]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]})"),
    octest:ct_string("Create ``=(((_usn3 :`1esn`:@usn6)<-[:@usn5|:@usn6 *01234567..123456789]->(`1esn` :`7esn`{`6esn`:1e1 In 12.e12})<-[``?:#usn8|:`6esn`{usn1:$#usn7[..$999][..9e1]}]->(`1esn` :`4esn`:usn2))),@usn6=(((usn1 :_usn4)-[`2esn`? *7]->(`` :``:`6esn`{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]})-[`2esn`?:`3esn`|_usn4]->({`1esn`:1e1 Starts With 010}))) Detach Delete Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where `7esn` Contains .0 Contains #usn8|$_usn3[0e0..][12.0..])[(@usn6 :`1esn`:@usn6{usn2:#usn8 Is Not Null})<-[#usn7? *123456789..{`2esn`:999 Contains $`7esn` Contains usn2}]-(:#usn7{_usn3:7 Contains 1000 Contains $usn1})..],Filter(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $_usn3 =~`1esn`)[[`6esn` In .e0['s_str'..][$`8esn`..] Where 12.0[9e12]['s_str']|_usn4[#usn7..#usn8]]][[`7esn` In `8esn` In 12,usn2 =~`6esn`,.e12 =~\"d_str\" =~@usn5]],0e0[...e1]"),
    octest:ct_string("Remove Extract(`7esn` In $`8esn`[0.12][12] Where 01 Is Null).#usn7? Detach Delete $1000 =~.e12 =~0.e0 Merge ``=((`4esn` :``:`6esn`{#usn7:`2esn`[`3esn`..],usn2:$usn2 Starts With $`7esn` Starts With _usn4})<-[`8esn` *0..$12]-(:usn2{usn1:_usn4[.._usn4],@usn6:@usn5 In .e0 In \"d_str\"})-[@usn5:@usn6]-(:`4esn`:usn2{_usn4:`1esn`[$7][0Xa]})) On Match Set `1esn`+=Extract(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0|0[_usn3][.12]) Starts With (#usn8 :`8esn`)<-[`2esn`?:`3esn`|_usn4]-(#usn7 :`7esn`{`3esn`:$#usn8[..123456789][..`2esn`],#usn8:0.e0 Ends With #usn8})-[:`5esn`|:`1esn`]-(@usn5 :`5esn`),None(`3esn` In False In $`2esn` In 1e1 Where 01 Starts With $`5esn` Starts With 01234567)._usn3? =[`6esn` In 1000[12.e12][#usn7] Where 0X0123456789ABCDEF Is Not Null] Is Null"),
    octest:ct_string("With  *,#usn7(Distinct $999[@usn5..][Null..],010[`1esn`..`4esn`])[..{_usn3:0e0['s_str'],`6esn`:9e12[\"d_str\"]}][..{`5esn`:@usn6[$usn1][$`2esn`],`1esn`:12.0[9e12]['s_str']}],Extract(`3esn` In 999 Where .e12 Is Null Is Null|$`7esn`[usn2]) =~Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where @usn5['s_str'..$`2esn`]|$@usn5[$_usn3..Null]) =~Any(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where #usn7 In #usn7) As `2esn` Order By _usn4[7..$999] Desc Skip #usn8 Starts With 0 Limit .12 =~$#usn7 =~$`` Unwind False In 1.e1 In $12 As @usn6 Delete .e1 =~\"d_str\" =~'s_str' Union All Remove Extract(`3esn` In 999 Where $`7esn`[`2esn`]).`3esn`"),
    octest:ct_string("Remove {@usn6:$usn1 Is Not Null Is Not Null,`7esn`:0x0 In 0X0123456789ABCDEF}.@usn5 Merge (_usn3 :`3esn`{`1esn`:$999[@usn5..][Null..]})<-[{#usn8:999}]->(:@usn6) On Match Set usn2+={#usn8:.e0 Ends With $`1esn` Ends With 1000}[Filter(#usn8 In 07['s_str'][$@usn6] Where $12[0.0..])][Filter(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..])],`6esn`+=$@usn5[All(`3esn` In @usn6[..\"d_str\"][..01] Where .12 Is Not Null Is Not Null)..] Union All Return 0 Contains $@usn5 As `8esn` Order By $`` Starts With 0x0 Descending Limit All(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $123456789 Is Not Null) Is Null Is Null Match `6esn`=(({@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})),({`2esn`:0,`3esn`:$`7esn` Starts With 07 Starts With `1esn`}) Where 9e12[1.e1] Union All Match (((_usn3 :`1esn`:@usn6)<-[:@usn5|:@usn6 *01234567..123456789]->(`1esn` :`7esn`{`6esn`:1e1 In 12.e12})<-[``?:#usn8|:`6esn`{usn1:$#usn7[..$999][..9e1]}]->(`1esn` :`4esn`:usn2))),((`6esn` :usn1:``)<-[@usn5?{`7esn`:`6esn` In $``}]->(usn1 {_usn3:#usn7 Ends With 0.12})) Create @usn5=(((usn2 :`2esn`:@usn5)-[?:`` *07{`1esn`:$#usn7[$`3esn`..$999]}]->(`7esn` :`8esn`{usn2:`5esn` =~``,`7esn`:`7esn` Is Not Null Is Not Null})<-[`2esn`?:_usn4|_usn3]->(:`3esn`{usn2:$`3esn`[9e0..0.0][_usn4..123456789]}))),_usn3=(#usn7 :`3esn`{_usn3:.e0[$`1esn`..][_usn4..]}) Merge #usn8=((`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})-[{`5esn`:0.e0 =~01234567 =~01234567}]->(`7esn` :_usn3:@usn5))"),
    octest:ct_string("With Distinct $7 =~`4esn` =~$7,07[..1e1][..$0] As _usn3 Where 9e1[$#usn8] Merge ({usn1:0X7[0xabc][$1000]}) On Match Set `2esn`+=@usn5 Ends With 1000,`7esn` =Extract(`3esn` In 999 Where $`5esn`[.e1][#usn8]|$#usn8[@usn5..$1000]) =~Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $#usn8 =~7 =~.12) =~Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 123.654 Is Not Null Is Not Null)"),
    octest:ct_string("Unwind usn2 =~`6esn` As `5esn` Merge `3esn`=((@usn6 :#usn8:#usn7{``:Null Is Not Null Is Not Null})<-[`2esn`?:`5esn`|:`1esn`]->($1000)-[`6esn`? *999{_usn4:\"d_str\" Contains $999 Contains `2esn`}]-(`1esn` {_usn3:12.0 In 07,`2esn`:01234567[..`6esn`][..``]})) On Create Set [$0[00..],0.e0 =~01234567 =~01234567].`5esn`! =False In 1.e1 In $12 On Create Set {`8esn`:`7esn` =~12.e12 =~0e0}.``! =$`6esn`[00],[0Xa[.e12..],`5esn`[$7..01]].usn1 =Any(#usn8 In 0x0[_usn4..] Where $`` Starts With 0x0) In [usn1 In 123.654 =~.e0 =~9e0 Where $7 Ends With 12.e12 Ends With `1esn`],@usn6 =$_usn3[0.0][$@usn6] Union All Unwind $_usn4[$123456789..][12..] As `5esn` Union With Distinct *,None(_usn4 In 12.e12 Is Null Is Null Where _usn4 In .0 In .12) Starts With {`4esn`:`8esn`[0x0..],usn2:$#usn8 =~7 =~.12} Starts With _usn3(Distinct usn1[$`1esn`..]) As #usn8,'s_str' Contains 999 Order By Filter(`6esn` In 1000[12.e12][#usn7] Where 01 Starts With $`5esn` Starts With 01234567)[[0.12['s_str'..$0][$usn1..9e0]]..All(`3esn` In 999 Where 07 Ends With $_usn4 Ends With 0.e0)][Filter(`3esn` In 999 Where $0 Contains 7 Contains 1.e1)..Extract(`3esn` In @usn6[..\"d_str\"][..01] Where 1.e1[$`7esn`]|01234567[9e0][.0])] Desc,[0.e0 Contains $123456789 Contains 123456789,`5esn` In 12.e12 In 1000] Starts With [123.654[.e12..\"d_str\"],1.e1[0..]] Starts With Extract(`2esn` In $``[$#usn8] Where $`5esn` Is Not Null|123456789[..#usn8]) Descending Limit Filter(`6esn` In 1000[12.e12][#usn7] Where $usn2 Contains $`1esn`)"),
    octest:ct_string("Merge ((`2esn` :_usn4{_usn4:$`8esn` Contains .0 Contains 0.12})-[`1esn`?:`1esn`|@usn6 *12]->(usn1 :#usn8:#usn7)-[@usn6{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]}]-(`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]})) Merge (_usn3 :`1esn`:@usn6)<-[_usn3:@usn6]->({@usn6:`5esn`[0e0..],_usn4:$#usn8[0xabc..usn2]})-[_usn4 *0..]->(:#usn7{_usn3:7 Contains 1000 Contains $usn1}) On Create Set {usn1:$7[$12]}._usn4? =1000 =~$@usn5,Single(usn1 In 999 Where @usn6 Ends With 0.12 Ends With `3esn`).#usn7 =01 Ends With @usn6 Ends With $7 Union Merge (((@usn6 {`2esn`:123.654 Is Not Null Is Not Null})<-[{#usn8:07[0..],``:_usn3[..`8esn`]}]-(`` :`8esn`{`5esn`:True Contains .e1 Contains `2esn`})<-[`5esn`?:_usn3|`6esn` *..0X0123456789ABCDEF{`5esn`:usn2[.e1..][01234567..],usn1:999 Is Not Null}]->({@usn5:_usn3[_usn4..$`2esn`][$123456789..9e12]}))) On Create Set usn2 =0x0[01234567..Null][0Xa...e12],{#usn8:#usn7[@usn6..]}.@usn6 =#usn7[False..][123.654..] On Create Set Extract(`6esn` In 1000[12.e12][#usn7] Where 1.e1 Ends With 0x0 Ends With 1e1|@usn5[..$999][..$0]).`7esn`! =$12[usn2][12.0],_usn3:@usn6"),
    octest:ct_string("Merge ((`4esn` {_usn4:$`2esn`[$``..12e12]})<-[`1esn`?:`3esn`|_usn4{_usn4:12e12 Ends With $_usn4 Ends With $`2esn`,``:.12 Is Not Null}]-(:`1esn`:@usn6{`5esn`:.e12[$_usn4..0],`4esn`:$#usn8 In True In #usn7})<-[?:usn1|#usn7 *0Xa]->(`1esn` :usn2{`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]})) On Create Set `4esn` =`6esn` Is Null On Match Set (usn1 :usn2{#usn8:0.e0 Contains $1000 Contains 7})<-[?:usn2|:`` *7]->(`` :_usn3:@usn5).`6esn`? =`5esn` =~`` Unwind Count(*)[123.654..12][.0..\"d_str\"] As @usn5 Union Unwind _usn3[..usn2] As @usn6 Remove [`2esn` In $#usn8 Starts With usn2 Starts With .12]._usn4?,[$usn2[12.0..][`8esn`..],0xabc Contains 0].`1esn`,usn2:`6esn`:`3esn`"),
    octest:ct_string("Detach Delete All(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $@usn5 =~$usn2 =~True)[..{`7esn`:`` Is Not Null Is Not Null}][..(@usn6 :`1esn`:@usn6{usn2:#usn8 Is Not Null})-[? *12]->(:`2esn`:@usn5{#usn7:0e0['s_str'],`1esn`:$#usn8[1.e1]})<-[`6esn`:`3esn`|_usn4 *0X7..0x0$999]->({`5esn`:1e1[\"d_str\"..]})],$1000[999],{`4esn`:Count(*)[..$_usn3][..$usn2]}[[`2esn` In $``[$#usn8] Where 0e0['s_str']|0x0 =~`5esn` =~$`8esn`]] With  Any(`7esn` In $`8esn`[0.12][12] Where usn1 In 010) As `6esn` Order By 0 Asc,Filter(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1)[Extract(usn1 In 123.654 =~.e0 =~9e0 Where _usn3[0Xa..])..][{`4esn`:$123456789 =~usn1 =~0xabc,_usn4:True}..] Asc Where #usn8[True..#usn7][01..@usn5] Create ((`5esn` :``:`6esn`)-[:@usn5|:@usn6 *999{`5esn`:0x0 =~@usn5 =~01}]->(_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})),`5esn`=(@usn5 :`5esn`{@usn5:$`2esn` Ends With 1e1,usn1:'s_str'[$`6esn`..][$0..]}) Union Unwind All(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]) In Single(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 1000 Starts With ``) As @usn5 Optional Match ``=((:`5esn`{`7esn`:'s_str'[$#usn8],``:`1esn`[..$#usn7]})<-[``?:usn1|#usn7]-(@usn5 :`2esn`:@usn5{@usn6:123456789 =~#usn8 =~$0})) Where False Starts With $123456789 Merge _usn4=(:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`}) On Match Set #usn7 =`2esn`(_usn3[..usn2])[Extract(usn1 In 999 Where 010 In $@usn5 In `5esn`)],`7esn`+=0.0[Null..][.12..],`7esn`+=0.0[Null..][.12..] On Match Set None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where False In $`2esn` In 1e1).usn1? =Count(*)[$1000..01],Extract(`3esn` In False In $`2esn` In 1e1 Where $`` Starts With 0x0|0.12 Is Null Is Null).@usn5! =07 Ends With $_usn4 Ends With 0.e0 Union All Remove [usn1 In 0xabc Is Not Null Is Not Null Where .e12[..#usn7][..9e12]]._usn4,(@usn6 )<-[ *0Xa{#usn8:_usn4[#usn7..#usn8],usn2:9e0[0..1e1]}]->(#usn8 :#usn8:#usn7{@usn6:$#usn8[0e0..][07..],``:$`7esn` =~1.e1 =~0.e0})<-[#usn8?:#usn7|`5esn`{`3esn`:`5esn`[usn1],`2esn`:`6esn` In $``}]-(@usn5 {usn2:123.654 =~.e0 =~9e0,`3esn`:@usn6[.0]}).`5esn`,{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]}.`3esn` Create (:usn2{usn1:_usn4[.._usn4],@usn6:@usn5 In .e0 In \"d_str\"})<-[_usn3?:#usn7|`5esn` *..0x0]->(`7esn` {#usn7:1e1[`3esn`]})"),
    octest:ct_string("Unwind 0e0 =~False =~.12 As usn1 Union All Merge usn2=((#usn7 {@usn5:$`5esn` Contains $usn2})<-[{@usn6:1000 Ends With 01234567 Ends With usn1,usn2:01234567 In \"d_str\"}]-(#usn8 {`4esn`:$`3esn` Is Null})<-[{`5esn`:usn2[.e1..][01234567..],usn1:999 Is Not Null}]->(`5esn` :`8esn`{``:00 In 1000})) On Create Set _usn4+=.12 =~1000 =~7 Union Detach Delete 01234567 In \"d_str\",False Contains $`1esn` Contains @usn6"),
    octest:ct_string("With Distinct *,`8esn` Is Not Null,(@usn6 :_usn4{`2esn`:\"d_str\"[..$_usn3],@usn6:$7[`7esn`][123.654]})-[``:`2esn`|:`7esn` *..0x0{`3esn`:`` Contains 010 Contains $1000}]->(:_usn4)<-[:`5esn`|:`1esn`{#usn8:`7esn` Is Null,`4esn`:False[$12]}]->(_usn3 :@usn5{`5esn`:12e12[..9e12][..$@usn6]})[Single(`3esn` In 999 Where usn1[$`1esn`..])..] Order By 1e1 =~01 Descending,$7[..$``] Descending Limit (`6esn` {`7esn`:12e12 Ends With 0e0,`8esn`:$_usn4[False..@usn6][`4esn`..$1000]})<-[?{``:$`6esn`[.e12]}]-(usn1 :`2esn`:@usn5{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc}) Starts With {@usn5:`8esn` Is Not Null,`6esn`:$@usn6 Ends With 0.0} Starts With [$#usn7[`7esn`..][$`8esn`..]] Where .e0 Ends With $`1esn` Ends With 1000 Delete [`7esn` In $`8esn`[0.12][12] Where 's_str'[$#usn8]][None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1)..(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})-[``?:@usn6]->({``:_usn3[9e0..$123456789][0X7..999]})][[$#usn8 =~7 =~.12,$`6esn`[.e12],_usn4 Starts With `6esn` Starts With $`8esn`]..{usn2:123.654[.e12..\"d_str\"]}],[.e0 =~7 =~False,0e0 Is Not Null] =~(`5esn` :`8esn`{`1esn`:`7esn` Contains .0 Contains #usn8})<-[`8esn` *0..$12]-(:`2esn`:@usn5{#usn8:0.e0 Contains @usn5 Contains 0X7,`5esn`:0x0[9e0..]})-[_usn3:_usn3|`6esn`]->({usn2:0[1e1..00],@usn6:$`6esn`[.e12..$`6esn`][$#usn7...0]}) =~(`7esn` {`2esn`:9e0[$@usn6]})<-[``?:#usn8|:`6esn`]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]}) Union Merge `4esn`=(usn2 {`4esn`:$123456789 Ends With 12e12})<-[`5esn`?:_usn4|_usn3{@usn5:7 =~False,_usn3:999 Ends With $`4esn`}]-(_usn3 :@usn6) On Match Set @usn5 =`8esn`['s_str'..]"),
    octest:ct_string("Return $usn1[usn1..$`8esn`][12e12..$``] Remove {``:@usn6[.0]}.`2esn`?,{`8esn`:$#usn7[`7esn`..][$`8esn`..]}.``,usn2(Distinct $`` Is Not Null Is Not Null).`6esn`! Union All With  All(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Is Not Null Is Not Null) Starts With Single(usn1 In 999 Where `4esn` Is Null Is Null) Starts With (`7esn` :_usn3:@usn5{_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null})<-[? *..0x0{`1esn`:`7esn` Contains .0 Contains #usn8}]->(`4esn` {_usn3:7 Contains 1000 Contains $usn1})-[`5esn` *12{`8esn`:0Xa[Count(*)][0xabc]}]-(#usn8 :#usn8:#usn7) As `1esn`,$`5esn`[.e1][#usn8] As `4esn` Order By usn1[..`1esn`][..$999] Asc,$0 Starts With `5esn` Starts With 0 Ascending Skip {_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]}[All(`7esn` In $`8esn`[0.12][12])..[#usn8[$`7esn`..12.0],.e0 Is Not Null]] Limit [9e1[..01234567][..`4esn`]][[$@usn6 Is Not Null]][Extract(`3esn` In 999 Where 0x0 Contains .0|@usn5[..$999][..$0])] Where 12.e12 Contains 's_str' Contains 0.12 Create @usn5=((:`8esn`)-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :_usn3:@usn5)),_usn4=(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})<-[``{#usn7:$`2esn` =~False,``:12e12[..9e12][..$@usn6]}]-(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010}) Union All Merge _usn3=(((usn2 :@usn6)-[{usn1:Count(*)[..12][..$999],#usn8:usn1 In 010}]->(`1esn` :`8esn`)<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]-(@usn6 :``:`6esn`))) On Create Set `1esn`+=usn2[Count(*)][$`1esn`]"),
    octest:ct_string("Return Distinct *,{`1esn`:$usn2 =~`6esn` =~`1esn`} Ends With 010 Ends With None(_usn4 In 12.e12 Is Null Is Null Where $`4esn` In 0x0) Order By True Ends With `6esn` Ends With 9e0 Desc Skip $_usn4[..$`8esn`] Limit True Contains $`` Contains 01234567 With Distinct `7esn`[..$`5esn`] As ``,[#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]][Filter(`2esn` In $``[$#usn8] Where 01234567[`6esn`..])..][[`3esn` In False In $`2esn` In 1e1 Where .12 =~$#usn7 =~$``|01234567 Is Null]..] As usn1,_usn3 =~010 As usn1 Skip $`5esn`['s_str'..] Unwind 01234567 Ends With $`6esn` Ends With 7 As #usn7 Union Unwind $_usn3 In 0.e0 In 999 As `8esn` Union Unwind 0e0 =~False =~.12 As usn1"),
    octest:ct_string("Delete [`4esn` In 0.12['s_str'..$0][$usn1..9e0]|`7esn`[..01]] Is Not Null Is Not Null Union All With Distinct *,$`6esn` Is Not Null Is Not Null,(`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`` )[..`2esn`(Distinct `7esn`[_usn4..][Count(*)..],0[1.e1..#usn7])][..(_usn4 {`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})<-[@usn5?:_usn4|_usn3{#usn7:0.12 Is Null Is Null,#usn8:$1000 =~00}]-(`4esn` :_usn3:@usn5)-[@usn5? *01234567..123456789{`2esn`:01234567[`6esn`..]}]-(@usn5 {`4esn`:0.12 Is Null})] As #usn7 Order By [`3esn` In 999 Where 07 Ends With $_usn4 Ends With 0.e0|`5esn` In 12.e12 In 1000] Descending,1.e1 Desc,All(`2esn` In $``[$#usn8] Where $`2esn`[.._usn3]) =~[`6esn`[_usn3],12.0 In 07] =~[123456789[0.0..`2esn`][1.e1..$_usn4]] Descending Skip $`5esn` Ends With `6esn` Ends With 0x0 Return Distinct $123456789[..$usn2] As `4esn`,$usn2 Starts With $`7esn` Starts With _usn4 As `1esn`,Filter(`6esn` In 1000[12.e12][#usn7] Where $usn2 Contains $`1esn`) As `5esn` Order By 12e12 Ends With 0e0 Desc,Extract(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0|0[_usn3][.12]) Starts With (#usn8 :`8esn`)<-[`2esn`?:`3esn`|_usn4]-(#usn7 :`7esn`{`3esn`:$#usn8[..123456789][..`2esn`],#usn8:0.e0 Ends With #usn8})-[:`5esn`|:`1esn`]-(@usn5 :`5esn`) Desc Limit $usn2 Ends With 0 Ends With 12.0 Union Return $123456789 =~0e0 As `4esn`,1.e1 =~01234567 Order By (:``:`6esn`{`8esn`:123.654[.e12..\"d_str\"]})<-[_usn3:`3esn`|_usn4]->(_usn3 :`4esn`:usn2) Is Not Null Is Not Null Desc,{_usn4:\"d_str\" Ends With $`3esn`,``:#usn8 =~#usn7 =~0x0}[Single(usn1 In 0xabc Is Not Null Is Not Null Where `7esn`[..01])..{`2esn`:.0[@usn6..]}][[1000[12.e12][#usn7],`` Is Not Null Is Not Null]..None(#usn8 In 0x0[_usn4..] Where `8esn` Ends With $`1esn`)] Descending Create ((`` :usn1:``)-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->(`8esn` :#usn7)<-[?{`5esn`:$1000 =~$`8esn` =~$`2esn`,_usn3:$`` Starts With 0x0}]->(`2esn` :`5esn`{`1esn`:$@usn6 Ends With 0.0})),#usn7=(((`6esn` :`5esn`{`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})-[`4esn`?:usn1|#usn7{`1esn`:123456789 Ends With 9e1 Ends With ``,@usn5:0xabc Contains 0}]->(`` :`3esn`{#usn8:`3esn` Is Not Null Is Not Null,#usn8:$123456789[`3esn`..`5esn`][1e1..$`5esn`]})-[? *0xabc..]->(`6esn` {`5esn`:0x0 =~@usn5 =~01})))"),
    octest:ct_string("Create ((usn1 {`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})-[:#usn7|`5esn`{_usn3:`` Contains 010 Contains $1000}]->(:`4esn`:usn2{usn2:1.e1[0x0][$123456789]})),usn1=({`4esn`:$123456789 =~usn1 =~0xabc,_usn4:True})-[`2esn`?:_usn4|_usn3]-({#usn8:$`` Is Not Null Is Not Null,`8esn`:$usn2 Starts With 9e1 Starts With `7esn`})"),
    octest:ct_string("Remove [usn1 =~`2esn`,$123456789[..$`7esn`][..\"d_str\"]].usn2? Union All Unwind Extract(`3esn` In 999 Where .e12 Is Null Is Null|$`7esn`[usn2]) =~Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where @usn5['s_str'..$`2esn`]|$@usn5[$_usn3..Null]) =~Any(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where #usn7 In #usn7) As `3esn` Match (:#usn7)<-[#usn7:`1esn`|@usn6 *999{`4esn`:0X7[..`5esn`][..$`7esn`]}]-(:`1esn`:@usn6{`1esn`:12.0[9e12]['s_str'],`3esn`:$123456789 Is Not Null})-[@usn6?:_usn3|`6esn` *0..]->(:`1esn`:@usn6),`7esn`=(usn1 :``:`6esn`)<-[usn2?]->(:`1esn`:@usn6{@usn5:`8esn`[12.e12][`4esn`]}) Return Any(`6esn` In 0x0[9e0..] Where $`3esn` Is Not Null)[None(`6esn` In 1000[12.e12][#usn7] Where `4esn` In $`2esn` In @usn5)..[0x0 Contains .0]] As `7esn`,(usn1 )<-[{`5esn`:usn2[.e1..][01234567..],usn1:999 Is Not Null}]->({`7esn`:`4esn` In $`2esn` In @usn5}) Is Not Null Is Not Null As _usn4 Order By Null Contains $_usn3 Descending,`7esn`[`8esn`][#usn7] Desc,None(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1) Ends With All(usn1 In 0xabc Is Not Null Is Not Null Where $@usn6 Is Null) Ends With Any(`6esn` In 1000[12.e12][#usn7] Where 01 Starts With $`5esn` Starts With 01234567) Descending Limit 0X0123456789ABCDEF Is Not Null"),
    octest:ct_string("Remove [.12 Is Not Null].#usn8? Match `3esn`=(($_usn3)) Union Merge ``=(#usn7 {_usn4:`1esn`[$7][0Xa]})-[``{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null}]->(#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]})-[``:@usn6{`3esn`:.e12[$_usn4..0],usn1:00[$0..usn2][$_usn4..$999]}]-({``:_usn3[9e0..$123456789][0X7..999]}) On Create Set `7esn` =0.e0 =~$@usn5,`6esn`(Distinct #usn8 Is Not Null)._usn4 =1000 Is Not Null"),
    octest:ct_string("Create usn2=(((_usn3 :`1esn`:@usn6)<-[:@usn5|:@usn6 *01234567..123456789]->(`1esn` :`7esn`{`6esn`:1e1 In 12.e12})<-[``?:#usn8|:`6esn`{usn1:$#usn7[..$999][..9e1]}]->(`1esn` :`4esn`:usn2))) Return *,[`6esn` In 1000[12.e12][#usn7] Where $`7esn`[..$`8esn`]|$`6esn` Starts With usn1][Extract(`3esn` In 999 Where usn1[$`1esn`..])..{`3esn`:usn2 Contains 07 Contains False,#usn8:usn2[.e1..][01234567..]}][{@usn5:.12[9e1..0X7]}..[_usn4 In 12.e12 Is Null Is Null Where $123456789 In 010 In $`8esn`|0.12['s_str'..$0][$usn1..9e0]]] As usn1 Skip Single(`6esn` In .e0['s_str'..][$`8esn`..] Where $`5esn` Contains $usn2) In usn1($@usn6 Is Null Is Null) In All(#usn8 In 0x0[_usn4..] Where $_usn3 Is Not Null) Limit 1000 Starts With `` Union All Match _usn4=(((:#usn8:#usn7{`8esn`:12e12 Ends With 0e0})<-[_usn3?:`` *..010{usn2:`7esn`[_usn4..][Count(*)..]}]->(`8esn` :``:`6esn`{#usn7:$`3esn` Is Null})<-[@usn5{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(:`5esn`{@usn5:True Contains $`` Contains 01234567}))),(((`` :`5esn`{`5esn`:_usn3[0Xa..],usn1:1.e1 Ends With 0x0 Ends With 1e1})<-[`6esn`{`3esn`:`2esn` Contains `3esn` Contains $@usn5}]-(`4esn` :`2esn`:@usn5{#usn8:$#usn7[9e12..12]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`6esn` ))) Where 12.0[`3esn`][_usn3] Delete Extract(`5esn` In $usn2 Contains $`1esn` Where $#usn8[..123456789][..`2esn`])[Any(#usn8 In 0x0[_usn4..] Where $`` Starts With 0x0)],0xabc[9e1..][07..] Remove Extract(`3esn` In @usn6[..\"d_str\"][..01] Where @usn6 Contains $_usn3 Contains 12.0|$`3esn`[9e0..0.0][_usn4..123456789])._usn4!,Filter(`6esn` In 0x0[9e0..] Where \"d_str\" Starts With _usn4 Starts With $_usn4).usn1!,All(`5esn` In 1e1 =~$`8esn` =~`1esn` Where .e12[$_usn4..0])._usn4! Union Create @usn6=(`8esn` :`8esn`{`3esn`:Null Is Null Is Null})-[`4esn`?:#usn8|:`6esn` *999{`8esn`:010[`1esn`..`4esn`]}]->(`3esn` :`3esn`{_usn4:$123456789 Is Not Null,_usn4:#usn8 =~#usn7 =~0x0}),`3esn`=((`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]})) Merge ((`1esn` :usn2{`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]})-[`8esn`{``:0[1.e1..#usn7],_usn4:.e12 Contains `7esn` Contains 999}]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5})<-[usn2:`6esn` *00{`5esn`:.e12[$_usn4..0],`4esn`:$#usn8 In True In #usn7}]->(:``:`6esn`{`5esn`:_usn3 =~$12})) On Create Set #usn7 =.e0 =~$1000 On Create Set _usn4+=(usn1 {@usn5:12e12 Ends With `6esn`,_usn4:\"d_str\" Starts With _usn4 Starts With $_usn4})<-[?:#usn7|`5esn`{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}]->(@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})<-[?:`1esn`|@usn6]->(`6esn` :`2esn`:@usn5) Is Null,`5esn`+=.12[usn1],`8esn`+=usn1[..Count(*)][..`8esn`] Detach Delete Extract(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where .12 Is Null|0X0123456789ABCDEF[$_usn3][$_usn4])[..All(usn1 In 123.654 =~.e0 =~9e0 Where False Starts With $123456789)]"),
    octest:ct_string("Unwind 0e0[$123456789..$999][\"d_str\"..Null] As usn1 Return Distinct *,_usn3($123456789[..`3esn`][..`7esn`]) Is Null,0x0 Contains .0 As `8esn` Limit 01234567 Contains 0.12 Contains `5esn` Create @usn5=((:`8esn`)-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :_usn3:@usn5))"),
    octest:ct_string("Create ((@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]})-[? *0xabc..{`3esn`:.e12[$_usn4..0],usn1:00[$0..usn2][$_usn4..$999]}]->(@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]})<-[_usn3:`3esn`|_usn4 *0Xa]-({`4esn`:Count(*)[..$_usn3][..$usn2]})) Union All Merge `3esn`=(@usn5 ) On Match Set None(`7esn` In $`8esn`[0.12][12] Where usn1 In 010).usn1 =$usn2 Contains $1000 Contains @usn5,#usn8+=True =~0 =~123456789 On Create Set _usn4 =False Is Not Null Is Not Null,`7esn`+={`8esn`:.12 Is Not Null,_usn3:Count(*) In $`2esn`}[..[@usn6[$0..Null],$999[010..],$`6esn`[$`6esn`..][0X7..]]],``+=Extract(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 123456789[0.0..`2esn`][1.e1..$_usn4]) Ends With Extract(#usn8 In 07['s_str'][$@usn6] Where 9e12[$123456789..$usn2]|12.e12 Is Null Is Null) Ends With Filter(`3esn` In 999 Where .12[0X0123456789ABCDEF..]) Remove ``(123456789[..#usn8]).#usn7? Merge ((usn2 :`2esn`:@usn5)) On Create Set `6esn`+=[`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12]] Ends With [0] Ends With `8esn`,#usn8:`5esn`,#usn7+=01234567[..`6esn`][..``] Union Remove Extract(`6esn` In 0x0[9e0..] Where $`3esn` Is Not Null).`7esn`! With  *,.0[..\"d_str\"][..usn2] As `1esn` Limit $1000 =~.e12 =~0.e0 Where #usn8[$`7esn`..12.0]"),
    octest:ct_string("Merge `1esn`=((`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null})-[`1esn`?:#usn8|:`6esn`]->(`8esn` :@usn5{_usn3:Count(*) Ends With 7 Ends With 0,`8esn`:@usn6 Starts With #usn8 Starts With $#usn7})-[{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]}]->(usn1 :`1esn`:@usn6)) On Create Set [True =~0 =~123456789,$`6esn`[.e12],0 =~#usn8].`6esn`? =$`6esn`[$0],(`2esn` :@usn6)-[?:`8esn`|@usn6 *0xabc..{usn1:$#usn7[..$999][..9e1]}]-(`3esn` :@usn6)<-[_usn3]-(`6esn` :`8esn`).`7esn`! =12.0 Is Null On Match Set @usn6 =(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[#usn7:`1esn`|@usn6 *0..]-(@usn6 :usn2) In (`5esn` {_usn3:1.e1 Is Null Is Null})<-[_usn3?:#usn7|`5esn` *..0x0]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})<-[?:@usn5|:@usn6]-(`7esn` {@usn6:.e0[123456789..][$`2esn`..],``:$0[`5esn`][9e12]}) Create ((({`7esn`:Count(*)[..`5esn`],`2esn`:.e12[..$_usn4][..#usn7]})<-[:@usn6]->(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null})<-[#usn7:``{`4esn`:0.e0 Is Not Null Is Not Null}]-(:`3esn`{usn2:$`3esn`[9e0..0.0][_usn4..123456789]}))),((`3esn` :`8esn`)<-[`2esn`?:`3esn`|_usn4]-(@usn5 :`5esn`)) Union All Create #usn7=((#usn7 :`5esn`)<-[`2esn`?:`5esn`|:`1esn`]->(:usn2)),((_usn3 :`6esn`:`3esn`{`7esn`:1000 Ends With 01234567 Ends With usn1})-[usn2?:_usn4|_usn3{#usn8:12.0[`3esn`][_usn3]}]-(usn2 :`4esn`:usn2{`3esn`:@usn5[$`1esn`..][$7..]})<-[usn2:`3esn`|_usn4]-(usn2 :@usn6{@usn5:#usn8[True..#usn7][01..@usn5]})) Return Distinct *,12.0 Is Null Order By True Ends With `6esn` Ends With 9e0 Desc Delete 01[$0],0.e0 =~01234567 =~01234567,12e12 Ends With $_usn4 Ends With $`2esn`"),
    octest:ct_string("Return Distinct .12 As `3esn`,0.e0 Ends With #usn8,$`6esn` Starts With usn1 As `8esn`"),
    octest:ct_string("With Distinct None(usn1 In 0xabc Is Not Null Is Not Null Where .12[..07]) Contains [$#usn7[`7esn`..][$`8esn`..],$_usn4[$123456789..][12..],`6esn` In $``] Order By @usn6[..$usn1][..010] Asc,`` In 123.654 In 0.0 Desc,{`7esn`:1.e1 Is Null Is Null,_usn3:@usn6[$0..Null]}[..[_usn4 Starts With `6esn` Starts With $`8esn`,``[0X7..][$@usn6..],$usn2 Starts With 9e1 Starts With `7esn`]][..Single(#usn8 In 07['s_str'][$@usn6] Where 9e0 Starts With 0e0 Starts With $`5esn`)] Ascending Where 7 =~False Union All Merge (`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]})-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->($@usn6)<-[`8esn`?:usn1|#usn7 *01..7{usn1:123456789[$_usn4..]}]-(@usn5 :`2esn`:@usn5$#usn8) On Match Set #usn8 =Null Contains $_usn3,@usn6+=[0.12['s_str'..$0][$usn1..9e0]] Starts With [123.654 =~.e0 =~9e0,$@usn5 Is Not Null Is Not Null,$`` Starts With 0x0] Starts With @usn6(Distinct 7 Ends With `3esn` Ends With $`2esn`,False[$12]),``+=$`5esn` Starts With .0 Starts With 123.654 On Create Set (:_usn3:@usn5{_usn3:$#usn8 In True In #usn7,usn2:$@usn5[$_usn3..Null]})<-[`7esn`?]->(:`2esn`:@usn5{usn2:$`3esn` Ends With @usn6 Ends With 123.654})-[`6esn`?:usn1|#usn7]-(#usn7 :`3esn`{usn2:$`6esn`[.e12]}).@usn5 =(:`1esn`:@usn6{`1esn`:12.0[9e12]['s_str'],`3esn`:$123456789 Is Not Null})<-[:`3esn`|_usn4 *12]->(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null})<-[usn2?:`8esn`|@usn6{#usn7:$`3esn` Is Null}]->(`2esn` :`8esn`) Starts With Any(`5esn` In $usn2 Contains $`1esn` Where `8esn` Contains 0X0123456789ABCDEF),`4esn`(123.654[$`1esn`],$123456789 In 010 In $`8esn`).`7esn`! =$#usn8 Starts With usn2 Starts With .12,`3esn`+=`7esn` Is Null Union All Merge `1esn`=((:#usn7{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]})) On Match Set Filter(#usn8 In 07['s_str'][$@usn6] Where 01234567 In \"d_str\").`4esn`? =$123456789[..$`7esn`][..\"d_str\"]"),
    octest:ct_string("With  $`4esn`[$@usn5..`7esn`],$`3esn` Ends With $7 Ends With `7esn` As `5esn` Order By {`3esn`:.0 =~$@usn5 =~1.e1} =~Extract(_usn4 In 12.e12 Is Null Is Null Where $_usn4[False..@usn6][`4esn`..$1000]) Ascending,@usn6(`4esn` Starts With $#usn8 Starts With $#usn8,.e1 =~usn2 =~`7esn`)[..{`2esn`:Count(*) Contains 12e12 Contains 0xabc}][..Extract(#usn8 In 0x0[_usn4..] Where 0xabc[123.654][12]|$`6esn` Is Not Null)] Ascending,Any(`2esn` In $``[$#usn8] Where $`2esn`[.._usn3])[[`6esn` In .e0['s_str'..][$`8esn`..] Where $@usn5 =~$usn2 =~True|.e0[$`1esn`..][_usn4..]]..`8esn`] Asc Skip _usn3 Ends With $`6esn` Ends With 0e0 Limit Single(`5esn` In $usn2 Contains $`1esn` Where True Contains .e1 Contains `2esn`) In None(`3esn` In False In $`2esn` In 1e1 Where #usn7[.12][usn2]) Merge (`6esn` :@usn6)<-[`1esn`?:`3esn`|_usn4 *01234567..123456789]->(#usn7 {#usn7:999 Contains $`7esn` Contains usn2}) Union All With Distinct *,0e0 Ends With usn1 Ends With `1esn`,0X0123456789ABCDEF In _usn3 Order By [`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $1000[00..]|`1esn`[usn1]][{usn2:$`6esn`[.e12],`4esn`:`4esn` In .12 In $#usn8}..] Descending,$0 Contains 7 Contains 1.e1 Descending,(@usn5 :usn2{`3esn`:0.0 Ends With $usn1 Ends With $999,`5esn`:1.e1 Is Null Is Null})-[`3esn`? *0..]->(:`2esn`:@usn5{#usn8:$usn2 Starts With 9e1 Starts With `7esn`})-[:`5esn`|:`1esn`]-(`8esn` :``:`6esn`{#usn7:$`3esn` Is Null}) Is Not Null Is Not Null Ascending Skip $12[#usn8..$@usn5][9e0..usn1] Limit 0.0 =~$#usn7 =~`1esn` Match _usn3=(#usn8 :`7esn`)-[:#usn8|:`6esn`{#usn8:0X7[..`5esn`][..$`7esn`]}]->(`2esn` :@usn6),#usn8=((usn1 {_usn3:#usn7 Ends With 0.12})<-[?:@usn6 *07{_usn3:$`1esn` Is Null}]-(`5esn` {`5esn`:#usn8 Is Not Null,`1esn`:01234567[`6esn`..]})<-[*]->(usn1 :`1esn`:@usn6{`2esn`:$123456789[..$usn2],_usn4:0X0123456789ABCDEF In _usn3})) Where $_usn4[False..@usn6][`4esn`..$1000]"),
    octest:ct_string("Create (usn1 :`1esn`:@usn6)-[?:`4esn`{@usn5:$`2esn` Ends With 1e1,usn1:'s_str'[$`6esn`..][$0..]}]-({@usn5:0.e0 =~01234567 =~01234567,`1esn`:.e1 =~usn2 =~`7esn`}),(((:usn1:``)<-[:@usn5|:@usn6 *01234567..123456789]->(`1esn` :`7esn`{`6esn`:1e1 In 12.e12})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`1esn` {`6esn`:07}))) Return *,usn1 =~`2esn` As @usn6,Extract(`3esn` In 999 Where 0.12[123456789..]|00[01234567][Count(*)]) Contains [#usn8 In 0x0[_usn4..] Where 1e1[`3esn`]|$_usn3[0e0..][12.0..]] Contains All(`5esn` In $usn2 Contains $`1esn` Where \"d_str\" Contains $999 Contains `2esn`) Limit 01 In 0.0 In 9e1 Union All Unwind (@usn5 :usn2{`3esn`:0.0 Ends With $usn1 Ends With $999,`5esn`:1.e1 Is Null Is Null})-[`3esn`? *0..]->(:`2esn`:@usn5{#usn8:$usn2 Starts With 9e1 Starts With `7esn`})-[:`5esn`|:`1esn`]-(`8esn` :``:`6esn`{#usn7:$`3esn` Is Null}) Is Not Null Is Not Null As _usn4 Union All With Distinct [0Xa[..1.e1],#usn7[.12][usn2],1000 Starts With 0e0 Starts With 0][`7esn`(Distinct $#usn8[@usn5..$1000])] As `4esn`,0.e0 Ends With #usn8,$12[0.0..] Skip $`8esn`[0.12][12] Where 12.e12 Is Null Is Null"),
    octest:ct_string("Create `3esn`=((@usn6 :#usn8:#usn7{``:Null Is Not Null Is Not Null})<-[`2esn`?:`5esn`|:`1esn`]->($1000)-[`6esn`? *999{_usn4:\"d_str\" Contains $999 Contains `2esn`}]-(`1esn` {_usn3:12.0 In 07,`2esn`:01234567[..`6esn`][..``]})) Delete [`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12]] Ends With [0] Ends With `8esn`,(#usn8 :#usn8:#usn7)<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(`4esn` :`5esn`) Contains {_usn3:12.0 In 07,`2esn`:01234567[..`6esn`][..``]} Create (#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})"),
    octest:ct_string("Detach Delete 0,$_usn3 =~`1esn`,_usn3($123456789[..`3esn`][..`7esn`]) Is Null Union Create ((`4esn` :usn2)<-[:#usn7|`5esn`*{`8esn`:01[$0],``:0xabc Is Not Null Is Not Null}]-(_usn3 :`7esn`{#usn7:123.654 =~.e0 =~9e0,_usn3:`1esn`[Null..]})) Union All With  *,0.12[$usn1..$7] As `1esn`,True Is Null Skip All(#usn8 In 0x0[_usn4..] Where 0X0123456789ABCDEF In _usn3) Ends With Single(`6esn` In 0x0[9e0..] Where $#usn8[0e0..][07..]) Limit 7[$`5esn`..`4esn`] Where 0.e0[.e12] Return False In 0e0 As @usn6,12e12 In Null As #usn8 Unwind $@usn6 Contains $_usn4 As usn2"),
    octest:ct_string("Match ((_usn3 :`6esn`:`3esn`{`7esn`:1000 Ends With 01234567 Ends With usn1})-[usn2?:_usn4|_usn3{#usn8:12.0[`3esn`][_usn3]}]-(usn2 :`4esn`:usn2{`3esn`:@usn5[$`1esn`..][$7..]})<-[usn2:`3esn`|_usn4]-(usn2 :@usn6{@usn5:#usn8[True..#usn7][01..@usn5]})),`6esn`=((:`7esn`{`8esn`:'s_str'[$#usn8]})-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})<-[usn2?:#usn8|:`6esn` *7]-(:@usn6)) Detach Delete [`2esn` In $#usn8 Starts With usn2 Starts With .12 Where .0 =~$@usn5 =~1.e1][Any(`3esn` In 999 Where $`5esn`[.e1][#usn8])..Single(`5esn` In $usn2 Contains $`1esn` Where $#usn8[..123456789][..`2esn`])][count($usn1 Starts With Null Starts With $``)..`3esn`(Distinct 7[$1000][1000])],$999[010..] Union Unwind Any(`6esn` In 1000[12.e12][#usn7] Where 12.e12 Is Not Null) Contains All(#usn8 In 0x0[_usn4..] Where #usn8[..0X0123456789ABCDEF][...0]) As _usn4 Unwind (@usn5 :usn2{`3esn`:0.0 Ends With $usn1 Ends With $999,`5esn`:1.e1 Is Null Is Null})-[`3esn`? *0..]->(:`2esn`:@usn5{#usn8:$usn2 Starts With 9e1 Starts With `7esn`})-[:`5esn`|:`1esn`]-(`8esn` :``:`6esn`{#usn7:$`3esn` Is Null}) Is Not Null Is Not Null As _usn4 Match `7esn`=(usn1 :``:`6esn`)<-[usn2?]->(:`1esn`:@usn6{@usn5:`8esn`[12.e12][`4esn`]}),((@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})) Union Unwind @usn6[$usn1][$`2esn`] As usn2"),
    octest:ct_string("Match usn1=((`` :usn2{@usn5:usn2,usn1:0.0[.12..`8esn`]})<-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]-(`8esn` :#usn7)),``=(($1000)<-[`2esn`{`2esn`:999 Contains $`7esn` Contains usn2}]->(`4esn` :usn2)) Merge `4esn`=(usn1 :`2esn`:@usn5{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc})<-[#usn8:`3esn`|_usn4*..{``:9e0 Is Null Is Null}]->(:@usn5{#usn7:0x0 In 0X0123456789ABCDEF,`2esn`:0Xa[Count(*)][0xabc]}) Merge ((@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})) On Match Set `3esn`+=$`2esn` Is Not Null Is Not Null,{usn2:123.654 Is Not Null Is Not Null}._usn4! =`2esn`[0.e0..$999] On Create Set [#usn8 In 0x0[_usn4..] Where `8esn`[12.e12][`4esn`]].#usn8! =usn2[..1e1][..$_usn3],Any(`3esn` In 999 Where .e12 Is Null Is Null).@usn6? =$#usn8[@usn5..$1000] Union All Delete _usn4[.._usn4],`7esn`(.e0 =~7 =~False,010 Is Null Is Null) Starts With [$_usn4 =~0X7,`4esn`,0.0 Ends With $usn1 Ends With $999] Starts With {@usn5:Count(*)[..$_usn3][..$usn2],@usn5:$1000[$usn1][.e1]} With Distinct $`8esn` Is Not Null Order By @usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`] Ascending Limit Extract(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where .12 Is Null|0X0123456789ABCDEF[$_usn3][$_usn4])[..All(usn1 In 123.654 =~.e0 =~9e0 Where False Starts With $123456789)] Where 0xabc =~01 Merge (:`7esn`{_usn3:01[$0]})<-[{usn1:0.e0 =~01234567 =~01234567,``:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}]-(`2esn` {_usn3:0[1e1..00]})-[_usn3:_usn3|`6esn`]->({usn2:0[1e1..00],@usn6:$`6esn`[.e12..$`6esn`][$#usn7...0]}) On Match Set [`6esn` In 1000[12.e12][#usn7] Where 0X0123456789ABCDEF Is Not Null].`8esn` =`1esn`[9e12..] On Create Set `6esn` =999[..01234567][..7],usn2:``:`6esn`"),
    octest:ct_string("Remove Extract(`6esn` In 1000[12.e12][#usn7] Where 's_str'[$`6esn`..][$0..]).usn1? Create ((:`8esn`{`8esn`:$`7esn` =~$usn1 =~00,@usn6:`6esn` In $``})-[ *..010]-({@usn6:`5esn`[0e0..],_usn4:$#usn8[0xabc..usn2]})) Unwind $`3esn` Ends With 123456789 Ends With 0.e0 As `1esn` Union All Remove (`3esn` :usn2{#usn7:usn2[`6esn`..][.0..],#usn7:\"d_str\"[..$_usn3]})<-[?{`3esn`:'s_str'[$`6esn`..][$0..]}]->(`2esn` :@usn6)<-[?{`8esn`:$`7esn`[usn2],`1esn`:1000 Is Not Null}]-(#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]})._usn4 Return 12.e12 Contains 0X7 Contains Count(*) As #usn7,01[..12e12][..$usn2] As `5esn` Order By usn1(Distinct 0 Is Null Is Null,$@usn5 =~$usn2 =~True) In Any(usn1 In 999 Where @usn6 Ends With 0.12 Ends With `3esn`) In [`4esn` Ends With 's_str' Ends With @usn6,$`4esn` In 0x0] Desc,0x0[01234567..Null][0Xa...e12] Asc,.e1 Is Not Null Is Not Null Descending Skip [0.12['s_str'..$0][$usn1..9e0]] Starts With [123.654 =~.e0 =~9e0,$@usn5 Is Not Null Is Not Null,$`` Starts With 0x0] Starts With @usn6(Distinct 7 Ends With `3esn` Ends With $`2esn`,False[$12]) Limit 07 =~$12 =~$@usn6 Return _usn4 In .0 In .12 As `4esn`,$123456789 Is Null Is Null Order By Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 01[$0])[{`5esn`:@usn6[$usn1][$`2esn`],`1esn`:12.0[9e12]['s_str']}..][Any(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0)..] Asc,$7[`7esn`][123.654] Descending,usn1[..`7esn`][..$`8esn`] Ascending Skip 0e0 Ends With usn1 Ends With `1esn` Limit `2esn` Contains `3esn` Contains $@usn5 Union Detach Delete 123456789 Ends With Extract(`2esn` In $``[$#usn8] Where \"d_str\" Is Not Null|$`1esn` Is Not Null Is Not Null) Ends With [999 Contains $`7esn` Contains usn2],Extract(`3esn` In 999 Where $`5esn`[.e1][#usn8]|$#usn8[@usn5..$1000]) =~Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $#usn8 =~7 =~.12) =~Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 123.654 Is Not Null Is Not Null) Return Distinct `7esn`(Distinct 0X0123456789ABCDEF) Is Not Null Is Not Null,.e1[01234567] Limit 0.12 Contains 0x0 Contains @usn5"),
    octest:ct_string("Return Distinct `6esn` Is Null Order By $``[$_usn4][$`3esn`] Asc,0x0 In 0X0123456789ABCDEF Ascending,`7esn` =~12.e12 =~0e0 Desc Limit Filter(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $usn2[12.0..][`8esn`..]) Ends With [usn1[..$123456789][..`1esn`],0e0 Is Not Null] Ends With [0 Contains $@usn5,False Contains $`1esn` Contains @usn6] Union Return Distinct 's_str'[..Null][..$`5esn`] As usn2 Order By @usn6 Is Null Is Null Desc,Extract(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1|$`2esn` Is Not Null Is Not Null) =~[`7esn`[..01],1e1 =~$`8esn` =~`1esn`,$`6esn`[.e12..$`6esn`][$#usn7...0]] Ascending,999 Descending Skip 12[$`5esn`..$`7esn`][$1000..$_usn4] Remove #usn8:usn1:``,usn1:`6esn`:`3esn` Union Delete 1e1[\"d_str\"..],$@usn5[..`4esn`] Unwind Null Is Null Is Null As `8esn`"),
    octest:ct_string("Return Distinct 0xabc Contains 0 As `8esn`,.e0 =~7 =~False As `8esn` Unwind {`8esn`:12 Is Null Is Null}[[`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 1000 Starts With 0e0 Starts With 0|$#usn8 Ends With _usn4 Ends With usn2]..][[usn1 In 0xabc Is Not Null Is Not Null Where $@usn6 Is Null|$`6esn`[$`6esn`..][0X7..]]..] As @usn5 With Distinct 9e0[.e0] As `8esn`,{_usn3:`1esn`[..$#usn7]} Contains Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1) Contains [$1000[00..],$`6esn`[.e12..$`6esn`][$#usn7...0],0Xa[..1.e1]],0x0 In 0X0123456789ABCDEF As usn1 Order By [`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where .0 =~$@usn5 =~1.e1] =~{@usn6:0 Is Null Is Null} =~count(Distinct Null[9e1][$`6esn`],`4esn` Starts With `8esn`) Desc,{`7esn`:usn2 Starts With 00}[(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})<-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-({@usn6:`5esn` Ends With $999})..][(:`1esn`:@usn6{_usn3:$usn2 =~`6esn` =~`1esn`,`6esn`:0[1e1..00]})-[{_usn4:$`8esn` Contains .0 Contains 0.12}]->(:usn1:``{_usn4:1000[12.e12][#usn7]})-[@usn6 *00]->(`4esn` {_usn4:$`2esn`[$``..12e12]})..] Ascending,$#usn8[.e1][`2esn`] Asc Limit 's_str'[$`6esn`..][$0..] Where _usn4 In .0 In .12"),
    octest:ct_string("With Distinct *,_usn3[0Xa..] As usn2,$#usn8 Ends With _usn4 Ends With usn2 As #usn7 Order By True =~0 =~123456789 Descending Limit $`1esn` Match #usn7=((@usn5 :_usn3:@usn5)),((:#usn7{usn1:$usn2[`6esn`..],`3esn`:$_usn4[..$`8esn`]})-[`5esn`?:_usn4|_usn3{@usn5:7 =~False,_usn3:999 Ends With $`4esn`}]->(:`1esn`:@usn6{`8esn`:$`8esn` Contains $`2esn` Contains False})) Where #usn8 Is Not Null"),
    octest:ct_string("Remove [`7esn` In $`8esn`[0.12][12] Where usn1 In 010|@usn6[$usn1][$`2esn`]].usn2?,(_usn3 :@usn6{@usn5:0e0 =~False =~.12})<-[_usn4?:``{@usn5:1000 Starts With 0e0 Starts With 0,#usn7:$`5esn`[`4esn`..$`2esn`]}]-(_usn4 :#usn8:#usn7).#usn7!,[$usn2[12.0..][`8esn`..],0xabc Contains 0].`1esn` Remove All(`6esn` In 1000[12.e12][#usn7] Where 1.e1 Ends With 0x0 Ends With 1e1).`6esn`!,Filter(#usn8 In 07['s_str'][$@usn6] Where $@usn6 Ends With 0.0).`4esn`,{`7esn`:123.654[0Xa..0x0][.12..12e12],`4esn`:$`8esn`[0.12][12]}.usn2! Detach Delete .e1 =~\"d_str\" =~'s_str',(`2esn` :#usn7{`1esn`:`4esn` Ends With 's_str' Ends With @usn6,`6esn`:$7 Ends With 12.e12 Ends With `1esn`})-[`3esn`? *0X7..0x0{`4esn`:$_usn4[$123456789..][12..]}]->(`7esn` {@usn6:0 =~#usn8})[{@usn5:'s_str' Contains 999,`6esn`:1000[12.e12][#usn7]}]"),
    octest:ct_string("Unwind .e1 =~$#usn8 As `1esn` Merge ``=((:``:`6esn`{@usn6:$`4esn`[$@usn5..`7esn`],`5esn`:_usn4 Starts With `6esn` Starts With $`8esn`})<-[`6esn`?:#usn8|:`6esn` *0X7..0x0{``:`6esn`[`7esn`..$_usn3][9e0..#usn8],`8esn`:.0[01234567]}]->(:@usn5{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2})) On Create Set Single(`3esn` In 999 Where 0.e0 Ends With #usn8).usn2 =`4esn` In .12 In $#usn8,Extract(usn1 In 999 Where 1e1 =~$`8esn` =~`1esn`|7 Starts With $@usn6).usn2? =Single(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where `` Contains $_usn3 Contains 0e0)[[`6esn` In .e0['s_str'..][$`8esn`..] Where `6esn` In $``|#usn7[.12][usn2]]..][[.e12[..#usn7][..9e12]]..],usn1 =$_usn4 Contains $`5esn` Contains @usn5 On Create Set @usn5+=(usn1 :`8esn`{`5esn`:$usn1 Starts With Null Starts With $``,`5esn`:0 Contains $@usn5})<-[:`3esn`|_usn4{usn1:$`6esn`[$`6esn`..][0X7..],@usn5:123456789 Starts With #usn8}]->(@usn6 {`1esn`:$#usn8 Starts With usn2 Starts With .12,@usn6:07[$`8esn`]})<-[`7esn`?:`` *0Xa]-(`1esn` :usn2{_usn3:$`1esn` Is Not Null Is Not Null,`2esn`:0X7 Contains 12.0})[{`7esn`:_usn3 Is Not Null,`1esn`:$0[@usn6..][.e12..]}..Single(`2esn` In $``[$#usn8] Where 0X7[..$0][..0.12])][Filter(#usn8 In 0x0[_usn4..] Where 0xabc[123.654][12])..All(`7esn` In $`8esn`[0.12][12] Where 's_str'[$#usn8])],#usn8+=Count(*) Starts With 01234567 Starts With 0x0 Union All Delete $1000 =~.e12 =~0.e0,[usn2 Contains 0,.e0 =~7 =~False,.12] Is Null,0.12[$usn1..$7] With Distinct [usn1[..$123456789][..`1esn`],0e0 Is Not Null][Extract(#usn8 In 0x0[_usn4..] Where 0X0123456789ABCDEF In _usn3|$`5esn`[0][.12])][[`6esn` In 0x0[9e0..] Where #usn7[@usn6..]]] As #usn8,usn2 As @usn5 Skip [_usn4 In 12.e12 Is Null Is Null|12.e12 Is Not Null][[9e1[$`3esn`][$`1esn`]]..`7esn`($123456789 =~usn1 =~0xabc,`1esn`[Null..])][(:usn2{usn1:_usn4[.._usn4],@usn6:@usn5 In .e0 In \"d_str\"})<-[? *..0X0123456789ABCDEF{usn2:123456789 Ends With 9e1 Ends With ``,`3esn`:9e0[123456789..0][12.0..@usn6]}]-({usn1:123456789[$_usn4..]})<-[?{``:$`6esn`[.e12]}]-(_usn4 :`2esn`:@usn5)..All(`3esn` In @usn6[..\"d_str\"][..01] Where 1.e1[$`7esn`])] Limit 1e1 Starts With 010 Where _usn3[_usn4..$`2esn`][$123456789..9e12] Delete _usn3 Is Not Null,All(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $123456789 Is Not Null) Is Null Is Null,Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0) Is Not Null Union All Unwind [`6esn` In 1000[12.e12][#usn7] Where $`7esn`[..$`8esn`]|$`6esn` Starts With usn1][Extract(`3esn` In 999 Where usn1[$`1esn`..])..{`3esn`:usn2 Contains 07 Contains False,#usn8:usn2[.e1..][01234567..]}][{@usn5:.12[9e1..0X7]}..[_usn4 In 12.e12 Is Null Is Null Where $123456789 In 010 In $`8esn`|0.12['s_str'..$0][$usn1..9e0]]] As `6esn` With Distinct Null Contains $_usn3 As `4esn` Order By (`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`` )[..`2esn`(Distinct `7esn`[_usn4..][Count(*)..],0[1.e1..#usn7])][..(_usn4 {`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})<-[@usn5?:_usn4|_usn3{#usn7:0.12 Is Null Is Null,#usn8:$1000 =~00}]-(`4esn` :_usn3:@usn5)-[@usn5? *01234567..123456789{`2esn`:01234567[`6esn`..]}]-(@usn5 {`4esn`:0.12 Is Null})] Ascending Limit 1e1 Contains 0Xa Where 12.e12[.12..$_usn3][0e0..9e0]"),
    octest:ct_string("Return 123.654 In (:_usn3:@usn5{`1esn`:$`4esn`[.e1..$usn1],``:0x0 =~`5esn` =~$`8esn`})<-[?{``:$`6esn`[.e12]}]-(`4esn` :`3esn`) In [`2esn` In $``[$#usn8]] As #usn8 Limit False Starts With $123456789 Union Merge `8esn`=((`5esn` :#usn7)<-[? *..010{usn1:123456789[$_usn4..]}]->(@usn5 {`2esn`:$#usn7[`7esn`..][$`8esn`..],`3esn`:0.12['s_str'..$0][$usn1..9e0]})) On Match Set `7esn` =[$@usn5[$_usn3],$_usn3 Is Not Null,#usn7 =~$`8esn`][..Filter(`7esn` In $`8esn`[0.12][12] Where 9e0[123456789..0][12.0..@usn6])]"),
    octest:ct_string("Return $`8esn`[`7esn`] As `2esn`,01 In 0.0 In 9e1 Skip ``(Distinct `7esn`[`8esn`][#usn7]) Contains (:@usn6{usn2:12.e12[.12..$_usn3][0e0..9e0]})-[`7esn`?:`2esn`|:`7esn`]-(#usn8 :`7esn`) Contains Any(`3esn` In False In $`2esn` In 1e1 Where True Contains .e1 Contains `2esn`) Limit $`6esn`[0e0..] Unwind [`6esn` In 0x0[9e0..] Where 01234567[..`6esn`][..``]|01 Is Null] Starts With usn1(Distinct 0e0[...e1],$usn2 Ends With 0 Ends With 12.0) Starts With {@usn6:$usn1 Is Not Null Is Not Null,`7esn`:0x0 In 0X0123456789ABCDEF} As `1esn`"),
    octest:ct_string("Unwind _usn3[..usn2] As @usn6 Remove [`2esn` In $#usn8 Starts With usn2 Starts With .12]._usn4?,[$usn2[12.0..][`8esn`..],0xabc Contains 0].`1esn`,usn2:`6esn`:`3esn` Union All With  *,[#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]][Filter(`2esn` In $``[$#usn8] Where 01234567[`6esn`..])..][[`3esn` In False In $`2esn` In 1e1 Where .12 =~$#usn7 =~$``|01234567 Is Null]..] As usn1 Where $123456789 Starts With `6esn` Starts With 123.654 Optional Match `8esn`=(:`1esn`:@usn6{`5esn`:123.654[0Xa..0x0][.12..12e12],`8esn`:_usn3[..usn2]})<-[usn1:#usn8|:`6esn` *0xabc..]->(`8esn` :`1esn`:@usn6) Where $@usn6 Contains `5esn` Contains .e12 Delete @usn5($#usn8 Ends With _usn4 Ends With usn2)[`4esn`(Distinct 's_str' Ends With $7)][{`4esn`:$`6esn`[00..$12],_usn3:`5esn`[0e0..]}]"),
    octest:ct_string("With  *,0e0[$123456789..$999][\"d_str\"..Null] Order By [usn1[..$123456789][..`1esn`],0e0 Is Not Null][Extract(#usn8 In 0x0[_usn4..] Where 0X0123456789ABCDEF In _usn3|$`5esn`[0][.12])][[`6esn` In 0x0[9e0..] Where #usn7[@usn6..]]] Desc Skip `4esn` Ends With 's_str' Ends With @usn6 Limit $`6esn` Starts With $@usn6 Where $usn2 Starts With $`7esn` Starts With _usn4 Remove Filter(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $@usn6 Is Null).`2esn`!,0xabc.`2esn`,(#usn7 {@usn5:$`5esn` Contains $usn2})<-[?:usn2|:``{_usn3:.e1 Ends With $123456789}]-(`4esn` {#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})<-[`3esn`{@usn6:123.654[.e12..\"d_str\"]}]-(usn1 :`2esn`:@usn5{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc}).`` Optional Match usn2=((_usn4 )<-[`7esn`?{@usn5:`4esn` Is Not Null,`3esn`:.e1 =~usn2 =~`7esn`}]-(:`4esn`:usn2{`2esn`:12e12 Ends With 0 Ends With $@usn6,``:`1esn`[Null..]})<-[?:#usn7|`5esn`{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]})),usn1=(`2esn` :``:`6esn`)<-[ *..0X0123456789ABCDEF]->(`1esn` {`5esn`:$`7esn` Ends With $_usn4 Ends With `5esn`,#usn8:'s_str'[$#usn8]}) Where $0[1e1][`4esn`] Union Delete `1esn`[$7][0Xa],Extract(#usn8 In 07['s_str'][$@usn6] Where 7 =~$1000 =~$`5esn`|\"d_str\"[1.e1][01234567])[..(`6esn` :`1esn`:@usn6{#usn7:01234567 In \"d_str\"})<-[`1esn`?:`3esn`|_usn4 *01234567..123456789]->(#usn7 {#usn7:999 Contains $`7esn` Contains usn2})][..None(_usn4 In 12.e12 Is Null Is Null Where 9e1 =~$0)],Extract(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 123456789[0.0..`2esn`][1.e1..$_usn4]) Ends With Extract(#usn8 In 07['s_str'][$@usn6] Where 9e12[$123456789..$usn2]|12.e12 Is Null Is Null) Ends With Filter(`3esn` In 999 Where .12[0X0123456789ABCDEF..]) Remove (`5esn` :`8esn`{``:00 In 1000})<-[`5esn`:_usn4|_usn3 *0X7..0x0]-(#usn7 {`5esn`:00 Starts With usn1 Starts With Count(*),``:$999 Is Not Null})<-[`4esn`?]->(:`2esn`:@usn5{#usn8:$usn2 Starts With 9e1 Starts With `7esn`}).@usn6,@usn5(0.0[.12..`8esn`]).`1esn`!,Any(`3esn` In 999 Where $`3esn`[9e0..0.0][_usn4..123456789]).#usn7?"),
    octest:ct_string("Unwind 7[07] As #usn7 Create `7esn`=((:`1esn`:@usn6{`1esn`:12.0[9e12]['s_str'],`3esn`:$123456789 Is Not Null})),(({_usn4:$`5esn` Starts With $`3esn` Starts With 1.e1,`3esn`:1000[Null][$`7esn`]})-[? *999]-({_usn3:123.654 Is Not Null Is Not Null})<-[usn1?:`8esn`|@usn6]->(#usn8 :#usn7{`2esn`:0.e0[.e12]}))"),
    octest:ct_string("Match `6esn`=(({@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})),({`2esn`:0,`3esn`:$`7esn` Starts With 07 Starts With `1esn`}) Where 9e0[0..1e1] Remove Filter(`3esn` In False In $`2esn` In 1e1 Where `2esn`[``..]).usn2,[$12[0.0..],123456789[$_usn4..]].`2esn`!,Single(`3esn` In False In $`2esn` In 1e1 Where _usn3[9e0..$123456789][0X7..999])._usn4!"),
    octest:ct_string("Return True[$usn1..12][``..\"d_str\"] As `` Union All Remove (:`7esn`)<-[? *..0X0123456789ABCDEF]->(:`6esn`:`3esn`{usn2:1e1[`3esn`]}).usn2! Union All Merge ``=((:#usn7{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})-[_usn4:@usn6]->(:#usn7{`4esn`:0.e0 Is Not Null Is Not Null})<-[?:@usn6 *07{_usn3:$`1esn` Is Null}]-(`5esn` {`5esn`:#usn8 Is Not Null,`1esn`:01234567[`6esn`..]})) On Create Set `7esn`+={@usn5:$`2esn` Ends With 1e1,usn1:'s_str'[$`6esn`..][$0..]} Is Null,usn2+=`7esn`(Distinct $#usn8[@usn5..$1000]) Ends With Extract(`6esn` In 0x0[9e0..] Where @usn5 In .e0 In \"d_str\"|@usn6[..\"d_str\"][..01]),#usn8 =1.e1 Is Not Null Is Not Null On Create Set Filter(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 1000 Starts With ``).`6esn`! =Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0) Is Not Null,`5esn` =0x0[01234567..Null][0Xa...e12] Optional Match (:@usn5{_usn4:$`5esn`[0][.12]})<-[@usn5?{usn1:7 Ends With `3esn` Ends With $`2esn`}]-(_usn4 ),(_usn3 {`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`}) Remove (:`4esn`:usn2{_usn4:`1esn`[$7][0Xa]})<-[? *..010{usn1:123456789[$_usn4..]}]->(@usn5 {`2esn`:$#usn7[`7esn`..][$`8esn`..],`3esn`:0.12['s_str'..$0][$usn1..9e0]})-[@usn6?$`3esn`]->(@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8}).`7esn`"),
    octest:ct_string("Delete \"d_str\" =~Count(*) =~$usn2,All(`6esn` In 1000[12.e12][#usn7] Where 9e12[\"d_str\"]) Contains [usn1 In 0xabc Is Not Null Is Not Null Where 9e0[123456789..0][12.0..@usn6]|True] Contains [_usn3 =~$12,`5esn`[0e0..]],`6esn`(1000[12.e12][#usn7],0x0 =~`5esn` =~$`8esn`) Is Null Union With Distinct *,$_usn3[0e0..][12.0..] As `3esn` Where $#usn8 In True In #usn7"),
    octest:ct_string("Match (({`5esn`:0.0 Starts With Null Starts With .e12})-[`5esn`?:_usn4|_usn3{@usn5:7 =~False,_usn3:999 Ends With $`4esn`}]->(usn2 :``:`6esn`)<-[:`1esn`|@usn6*..]-(`3esn` :``:`6esn`{`5esn`:$999[9e0..010][999..010]})),`4esn`=((`8esn` {`3esn`:Null Is Null Is Null}))"),
    octest:ct_string("Remove (:usn1:``{`8esn`:123.654[$``][#usn7],`1esn`:0e0 Starts With $@usn6 Starts With $7})<-[:_usn4|_usn3]-({``:1e1 Ends With 's_str' Ends With $@usn6,`5esn`:$`5esn` Is Not Null}).#usn8,Extract(`3esn` In 999 Where $123456789 =~usn1 =~0xabc).#usn8,`1esn`:`2esn`:@usn5 Union All Unwind Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0) =~Filter(`6esn` In 0x0[9e0..] Where `7esn` Is Null Is Null) =~[`6esn` In 0x0[9e0..] Where `7esn` Is Null Is Null|$`4esn`[.e1..$usn1]] As @usn5 Unwind @usn6(`4esn` Starts With $#usn8 Starts With $#usn8,.e1 =~usn2 =~`7esn`)[..{`2esn`:Count(*) Contains 12e12 Contains 0xabc}][..Extract(#usn8 In 0x0[_usn4..] Where 0xabc[123.654][12]|$`6esn` Is Not Null)] As `7esn`"),
    octest:ct_string("Optional Match (((@usn5 :#usn7{#usn7:$`2esn` =~False,``:12e12[..9e12][..$@usn6]})<-[:`6esn` *123456789..{@usn5:07[0..],`8esn`:Count(*)[..$_usn3][..$usn2]}]->(`6esn` :usn2)-[@usn5:usn1|#usn7{`7esn`:True Ends With `6esn` Ends With 9e0,`8esn`:0e0 Is Null}]->(@usn5 :`1esn`:@usn6{@usn5:`4esn` Is Not Null,`3esn`:.e1 =~usn2 =~`7esn`}))),`5esn`=((:#usn8:#usn7{usn1:00['s_str'],#usn8:$`8esn`[``..True][1000..0.12]})<-[?:`7esn`]-(@usn5 :@usn6{`5esn`:#usn8 Is Not Null,`1esn`:01234567[`6esn`..]})<-[`2esn`?:@usn6]->($`8esn`)) Where 07['s_str'][$@usn6] With Distinct *,$0[00..] As `5esn`,`1esn`[9e12..$123456789] As usn1 Order By .e12 Contains $usn2 Contains $@usn6 Descending,01234567[$`7esn`] Asc Skip 123456789 =~@usn5 =~$`5esn` Limit $#usn7[$`3esn`..$999] Where 0e0 Is Null Union All Return Distinct @usn5[01234567..] As `8esn` Order By `4esn` Starts With `8esn` Ascending,$999 Contains 12e12 Desc,@usn6[..$usn1][..010] Asc Limit `2esn` Contains `3esn` Contains $@usn5 Return Distinct *,None(`3esn` In False In $`2esn` In 1e1 Where .0[@usn6..]) Is Null Is Null,$12[#usn8..$@usn5][9e0..usn1] As `5esn` Order By (:`4esn`:usn2$``)-[`5esn`?:_usn4|_usn3{@usn5:7 =~False,_usn3:999 Ends With $`4esn`}]->(usn2 :``:`6esn`)<-[_usn3:`3esn`|_usn4]->(#usn7 :_usn4) Is Not Null Descending Union All Optional Match (#usn8 :`6esn`:`3esn`),(({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})) Delete $#usn8[0xabc..usn2],0X0123456789ABCDEF Is Not Null Is Not Null,#usn7($123456789[`1esn`..][`7esn`..],$123456789 =~0e0)[(usn2 :_usn3:@usn5)<-[?:`2esn`|:`7esn`{`2esn`:usn2,`3esn`:1e1 Is Null}]->(`` :`5esn`)<-[@usn5?:_usn4|_usn3 *..010{@usn6:$123456789[`1esn`..]}]-(#usn7 :@usn6)..count(Distinct $123456789[`3esn`..`5esn`][1e1..$`5esn`],`1esn`)]"),
    octest:ct_string("Return Distinct `3esn`[$`7esn`..12],Any(`3esn` In False In $`2esn` In 1e1 Where #usn7[.12][usn2])[{#usn7:0e0['s_str'],`1esn`:$#usn8[1.e1]}..[@usn6[.0],0X0123456789ABCDEF Is Not Null,0x0[$`2esn`..'s_str'][$@usn5..1.e1]]][[`4esn` Ends With 's_str' Ends With @usn6]..$`5esn`] As `3esn`,.12[`7esn`..True][12.e12..#usn7] As `8esn` Skip 999 Ends With 123456789 Ends With 12.0 Union Remove Extract(`7esn` In $`8esn`[0.12][12] Where 01 Is Null).#usn7?,(:#usn7{usn1:$usn2[`6esn`..],`3esn`:$_usn4[..$`8esn`]})-[`4esn`?:#usn8|:`6esn` *999{`8esn`:010[`1esn`..`4esn`]}]-(`6esn` {`7esn`:`4esn` In $`2esn` In @usn5})-[@usn6 *00]->(#usn7 :`7esn`{`3esn`:$#usn8[..123456789][..`2esn`],#usn8:0.e0 Ends With #usn8})._usn3!,Single(#usn8 In 0x0[_usn4..] Where 1e1[`3esn`]).@usn6! Union All Unwind $1000 =~.e12 =~0.e0 As `` Create usn1=((@usn5 :usn1:``{usn2:9e0[0..1e1]})-[#usn7? *123456789..{`2esn`:999 Contains $`7esn` Contains usn2}]-($#usn7))"),
    octest:ct_string("Optional Match `7esn`=(((:`7esn`$12)<-[?:usn2|:`` *7]->(`6esn` {#usn7:`2esn`[`3esn`..],usn2:$usn2 Starts With $`7esn` Starts With _usn4})-[`2esn` *01234567..123456789{usn1:False[$12],`1esn`:0.e0 Ends With $123456789}]-(#usn7 :#usn7{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2}))),({#usn7:usn1 Ends With $`8esn` Ends With 7})"),
    octest:ct_string("Return *,.e12 Contains `7esn` Contains 999 As ``,`8esn`[9e12] Limit .e0 Contains 999 Remove (#usn8 :`4esn`:usn2)<-[:#usn7|`5esn`*{`8esn`:01[$0],``:0xabc Is Not Null Is Not Null}]-(`1esn` {#usn7:$`7esn`[`2esn`]}).`3esn`? Union All Return *,$`6esn` Contains 0xabc,Count(*)[123.654..12][.0..\"d_str\"] Create (:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`}) With  12[$`5esn`..$`7esn`][$1000..$_usn4] As #usn8,01[..12e12][..$usn2] As `5esn`,({`7esn`:$@usn5 =~$usn2 =~True,_usn3:00[$0..usn2][$_usn4..$999]})-[`3esn`]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5})<-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]})[{usn1:$`5esn`[.e1][#usn8],_usn3:12e12 Ends With `6esn`}] Limit $`7esn` Is Not Null Is Not Null Union All Detach Delete Any(`2esn` In $``[$#usn8] Where 0 Is Null Is Null)[[usn1 Is Null]..All(usn1 In 123.654 =~.e0 =~9e0 Where $7 Ends With 12.e12 Ends With `1esn`)],All(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $999[01234567][@usn5]) Starts With Extract(`3esn` In @usn6[..\"d_str\"][..01]) Starts With Extract(#usn8 In 07['s_str'][$@usn6] Where True),Filter(`6esn` In .e0['s_str'..][$`8esn`..]) Is Not Null Is Not Null"),
    octest:ct_string("Return Distinct _usn4[999..9e1] As #usn8,$`7esn` =~$usn1 =~00,12e12 In Null Order By .e1 Is Not Null Is Not Null Descending,``(Distinct `7esn`[`8esn`][#usn7]) Contains (:@usn6{usn2:12.e12[.12..$_usn3][0e0..9e0]})-[`7esn`?:`2esn`|:`7esn`]-(#usn8 :`7esn`) Contains Any(`3esn` In False In $`2esn` In 1e1 Where True Contains .e1 Contains `2esn`) Ascending Detach Delete 0e0 Ends With usn1 Ends With `1esn`,(_usn4 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8) Is Not Null Is Not Null Union Unwind `2esn`(_usn3[..usn2])[Extract(usn1 In 999 Where 010 In $@usn5 In `5esn`)] As `6esn` Merge (#usn7 {_usn4:`1esn`[$7][0Xa]})-[``{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null}]->(#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]})-[``:@usn6{`3esn`:.e12[$_usn4..0],usn1:00[$0..usn2][$_usn4..$999]}]-({``:_usn3[9e0..$123456789][0X7..999]}) On Match Set #usn8 ={`8esn`:.e12[..#usn7][..9e12]} Starts With None(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $1000[00..]) Starts With {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`}"),
    octest:ct_string("Unwind 0 Is Null Is Null As `` Remove {``:$`7esn` =~$usn1 =~00,`2esn`:Count(*) Ends With 7 Ends With 0}.`5esn`?,{_usn4:$`5esn` Starts With $`3esn` Starts With 1.e1,`3esn`:1000[Null][$`7esn`]}.``?,`3esn`:@usn5 Delete usn1[..Count(*)][..`8esn`] Union All Detach Delete #usn7 =~$`8esn`,0X7 Contains 12e12 Delete (`6esn` :`8esn`{usn2:#usn7 In #usn7,`1esn`:00['s_str']})<-[``?:@usn6]-(:`2esn`:@usn5{usn2:$`3esn` Ends With @usn6 Ends With 123.654})<-[@usn5?:@usn6 *..010]->(#usn7 :#usn7{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2}) Is Null,All(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $123456789 Is Not Null) Is Null Is Null"),
    octest:ct_string("Unwind .e1[01234567] As `1esn` Merge #usn7=((`5esn` {usn2:`6esn` In $``})) On Match Set `1esn` =$#usn8[@usn5..$1000] On Match Set `4esn`+=Extract(`3esn` In 999 Where $`5esn`[.e1][#usn8]|$#usn8[@usn5..$1000]) =~Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $#usn8 =~7 =~.12) =~Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 123.654 Is Not Null Is Not Null),[`6esn` In 0x0[9e0..] Where `7esn` Is Null Is Null|$`4esn`[.e1..$usn1]].usn2! =1.e1[0..] Detach Delete 123.654[``],0xabc[123.654][12] Union All Optional Match @usn6=(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[@usn6{_usn4:$`` Starts With 0x0}]-(usn2 :`7esn`),`6esn`=(((`3esn` :usn1:``)<-[``{#usn7:$`2esn` =~False,``:12e12[..9e12][..$@usn6]}]-(`2esn` :`1esn`:@usn6{#usn8:.12 Is Not Null})-[@usn6{_usn4:$`` Starts With 0x0}]->(`1esn` {#usn7:$`7esn`[`2esn`]}))) Detach Delete 0.e0 Ends With #usn8 Union Merge (((:`5esn`{_usn4:\"d_str\"[.0][9e0],usn1:.e12 Is Not Null Is Not Null})<-[ *..0X0123456789ABCDEF]->(`1esn` {`5esn`:$`7esn` Ends With $_usn4 Ends With `5esn`,#usn8:'s_str'[$#usn8]})<-[usn2?:`7esn`{``:`5esn`[usn1]}]->(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]}))) On Match Set usn2+=[`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $1000[00..]|`1esn`[usn1]][{usn2:$`6esn`[.e12],`4esn`:`4esn` In .12 In $#usn8}..],@usn5+=@usn6[..$usn1][..010],[`6esn` In .e0['s_str'..][$`8esn`..] Where 0.12[123456789..]|$`3esn` Ends With @usn6 Ends With 123.654].`8esn`! =7[usn1][$7] Unwind .12 Is Null As _usn4"),
    octest:ct_string("With  7 Starts With Null Starts With Null Order By @usn6 Starts With #usn8 Starts With $#usn7 Descending Limit 12.e12 Is Not Null Where 0.12 Contains 0x0 Contains @usn5 Union All Merge ((_usn4 {`2esn`:1.e1 Is Not Null Is Not Null})) Match `3esn`=(($_usn3))"),
    octest:ct_string("Optional Match (((_usn3 )-[:usn2|:`` *0..]->(:#usn7{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]})-[? *..0X0123456789ABCDEF{#usn8:0X7[..`5esn`][..$`7esn`]}]-(:#usn8:#usn7{usn1:00['s_str'],#usn8:$`8esn`[``..True][1000..0.12]}))),`6esn`=(_usn4 {`4esn`:01234567[..00][..$`3esn`],usn1:00[\"d_str\"][False]}) Unwind 9e1[$`5esn`..][`5esn`..] As @usn6 Unwind Filter(`6esn` In 0x0[9e0..] Where `7esn`[`8esn`][#usn7]) Is Not Null Is Not Null As `5esn`"),
    octest:ct_string("Unwind Count(*)[123.654..12][.0..\"d_str\"] As @usn5 Merge `2esn`=((`2esn` {_usn3:Null =~Count(*),@usn5:7 =~$1000 =~$`5esn`})<-[#usn7:`1esn`|@usn6 *999{`4esn`:0X7[..`5esn`][..$`7esn`]}]-(:`1esn`:@usn6{`1esn`:12.0[9e12]['s_str'],`3esn`:$123456789 Is Not Null})) Union Optional Match `1esn`=(((usn1 :`1esn`:@usn6{`2esn`:$123456789[..$usn2],_usn4:0X0123456789ABCDEF In _usn3})<-[{#usn8:999}]->(:usn1:``{#usn7:#usn8[$`7esn`..12.0],`1esn`:9e12 In 123.654 In True})-[``?:#usn8|:`6esn`]-(:#usn8:#usn7{`8esn`:12e12 Ends With 0e0}))) Where $`2esn` Is Not Null Is Not Null With Distinct $`1esn` =~`1esn` =~0X0123456789ABCDEF As _usn3,`1esn`[..$#usn7] Where 0.12[_usn3] Optional Match (`4esn` {@usn6:_usn4[$`8esn`.._usn3][.0..$@usn6]})<-[@usn5?:_usn4|_usn3 *1000..01234567]->({@usn6:$#usn8[0e0..][07..]})<-[@usn5?:usn2|:``*..]->(`7esn` {#usn7:1e1[`3esn`]}) Union All Return Distinct (`6esn` :`8esn`)-[@usn6{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]}]-(`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]})<-[`8esn`?:usn1|#usn7 *01..7{usn1:123456789[$_usn4..]}]-(usn2 :@usn6) =~$`3esn` =~`8esn`(1000[12.e12][#usn7],#usn8[1e1..]) As `7esn` Unwind #usn7 Is Not Null As _usn3"),
    octest:ct_string("Return Distinct *,`8esn` Is Not Null,(@usn6 :_usn4{`2esn`:\"d_str\"[..$_usn3],@usn6:$7[`7esn`][123.654]})-[``:`2esn`|:`7esn` *..0x0{`3esn`:`` Contains 010 Contains $1000}]->(:_usn4)<-[:`5esn`|:`1esn`{#usn8:`7esn` Is Null,`4esn`:False[$12]}]->(_usn3 :@usn5{`5esn`:12e12[..9e12][..$@usn6]})[Single(`3esn` In 999 Where usn1[$`1esn`..])..] Order By 1e1 =~01 Descending,$7[..$``] Descending Limit (`6esn` {`7esn`:12e12 Ends With 0e0,`8esn`:$_usn4[False..@usn6][`4esn`..$1000]})<-[?{``:$`6esn`[.e12]}]-(usn1 :`2esn`:@usn5{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc}) Starts With {@usn5:`8esn` Is Not Null,`6esn`:$@usn6 Ends With 0.0} Starts With [$#usn7[`7esn`..][$`8esn`..]] Create @usn5=(`4esn` {@usn6:_usn4[$`8esn`.._usn3][.0..$@usn6]})"),
    octest:ct_string("Detach Delete .0[..False] Remove Single(`2esn` In $``[$#usn8] Where `1esn`[Null..]).usn1,Single(`3esn` In False In $`2esn` In 1e1 Where 's_str' Ends With $7).`8esn`!,{`2esn`:.e12 Is Null Is Null,usn1:.e12 =~@usn5}.`3esn` Union All With Distinct Any(`7esn` In $`8esn`[0.12][12] Where usn1 In 010) As `6esn` Skip $0 Is Not Null Is Not Null Limit [.12 Is Null,12 Ends With 0 Ends With Null,0x0 =~@usn5 =~01][{usn2:$`6esn`[.e12]}] Where $`6esn` Is Not Null Create @usn5=(_usn4 {`2esn`:1.e1 Is Not Null Is Not Null})<-[_usn4?:`3esn`|_usn4 *7]->({@usn6:0.e0 Contains $1000 Contains 7}),`5esn`=(:`1esn`:@usn6{`7esn`:00['s_str'],#usn8:$`7esn`[`2esn`]})<-[usn2?:#usn8|:`6esn` *7]-(:`2esn`:@usn5{#usn8:0.e0 Contains @usn5 Contains 0X7,`5esn`:0x0[9e0..]})<-[@usn5:#usn8|:`6esn`]->(`7esn` :_usn3:@usn5{_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null})"),
    octest:ct_string("With  (@usn5 {`1esn`:0xabc[123.654][12]})-[:#usn8|:`6esn`{#usn8:0X7[..`5esn`][..$`7esn`]}]->(`2esn` :@usn6)-[`5esn`?:`7esn`]-({@usn6:'s_str' Ends With $7}) Ends With All(usn1 In 999 Where @usn6 Ends With 0.12 Ends With `3esn`) As #usn7,$#usn8[.e1][`2esn`] As @usn5 Skip 0X7[..`5esn`][..$`7esn`] Match ((:#usn8:#usn7{`8esn`:0Xa[Count(*)][0xabc]})<-[`2esn`?:`3esn`|_usn4]-(@usn5 :`5esn`))"),
    octest:ct_string("Unwind `2esn`(_usn3[..usn2])[Extract(usn1 In 999 Where 010 In $@usn5 In `5esn`)] As `6esn` Merge (#usn7 {_usn4:`1esn`[$7][0Xa]})-[``{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null}]->(#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]})-[``:@usn6{`3esn`:.e12[$_usn4..0],usn1:00[$0..usn2][$_usn4..$999]}]-({``:_usn3[9e0..$123456789][0X7..999]}) On Match Set #usn8 ={`8esn`:.e12[..#usn7][..9e12]} Starts With None(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $1000[00..]) Starts With {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`}"),
    octest:ct_string("With Distinct (`6esn` :`8esn`)-[@usn6{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]}]-(`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]})<-[`8esn`?:usn1|#usn7 *01..7{usn1:123456789[$_usn4..]}]-(usn2 :@usn6) =~$`3esn` =~`8esn`(1000[12.e12][#usn7],#usn8[1e1..]) As `7esn` Order By [usn1 In 123.654 =~.e0 =~9e0 Where $@usn5[$_usn3]|$`2esn` Ends With 1e1] Contains All(#usn8 In 0x0[_usn4..] Where 0xabc[123.654][12]) Descending,Extract(usn1 In 999 Where 1e1 =~$`8esn` =~`1esn`|7 Starts With $@usn6) Is Not Null Is Not Null Desc Where `5esn`[$7..01] With Distinct $1000 Is Not Null Is Not Null,(:`4esn`:usn2{_usn3:Null Is Not Null Is Not Null,`4esn`:$1000 Is Not Null})<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]->(:@usn5{usn1:12.e12 Is Null Is Null,``:Null Is Not Null Is Not Null}) Ends With {@usn6:_usn3[0Xa..]} As usn1,$#usn8 Ends With _usn4 Ends With usn2 As #usn7 Where 999 Ends With $`4esn` Remove Extract(usn1 In 999 Where #usn8[$`7esn`..12.0]|$usn2 Ends With 0 Ends With 12.0).`6esn`,[9e0[123456789..0][12.0..@usn6],`8esn` Ends With $`1esn`,usn1[9e1..]].usn1,[0Xa Contains $`6esn`,$0 Contains 7 Contains 1.e1].`8esn` Union Return Distinct *,[`3esn` In False In $`2esn` In 1e1 Where `` Contains 010 Contains $1000|1000[12.e12][#usn7]] In [`3esn` In 999 Where `7esn` Is Null|$#usn8[0e0..][07..]] In Single(`5esn` In 1e1 =~$`8esn` =~`1esn` Where `8esn` Starts With $12 Starts With $1000),0X7[..`5esn`][..$`7esn`] As `5esn` Order By None(`3esn` In 999 Where 0.e0 Ends With #usn8)[..{usn1:$`2esn` Is Not Null Is Not Null,``:True Ends With `6esn` Ends With 9e0}][..{_usn4:usn2[9e0..0.e0][@usn5..`4esn`],_usn4:.e0['s_str'..][$`8esn`..]}] Desc,Extract(`3esn` In 999 Where $`3esn`[9e0..0.0][_usn4..123456789]|$@usn6 Is Null) Ends With [@usn5 Is Null] Ends With [usn1 In 999 Where `4esn` Is Null Is Null|$123456789[`1esn`..]] Desc Skip `` In usn1 In 01234567 Limit 010[0e0][0xabc] Union All Unwind .12[usn1] As @usn5 Match (((:`6esn`:`3esn`{`1esn`:0X7[..True][..01234567],``:`1esn`[usn1]})<-[_usn4 *00]-(#usn7 :`7esn`)<-[ *0..]->(_usn3 :@usn6))) With Distinct 0x0[$7..][`7esn`..] As _usn4 Order By [`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where .0 =~$@usn5 =~1.e1] =~{@usn6:0 Is Null Is Null} =~count(Distinct Null[9e1][$`6esn`],`4esn` Starts With `8esn`) Desc,{`7esn`:usn2 Starts With 00}[(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})<-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-({@usn6:`5esn` Ends With $999})..][(:`1esn`:@usn6{_usn3:$usn2 =~`6esn` =~`1esn`,`6esn`:0[1e1..00]})-[{_usn4:$`8esn` Contains .0 Contains 0.12}]->(:usn1:``{_usn4:1000[12.e12][#usn7]})-[@usn6 *00]->(`4esn` {_usn4:$`2esn`[$``..12e12]})..] Ascending,$#usn8[.e1][`2esn`] Asc Skip 00[$12...e0] Limit $@usn6 Contains 0e0"),
    octest:ct_string("Delete 0.0 =~0 =~`` Union Unwind (_usn4 :_usn3:@usn5)<-[@usn6:`8esn`|@usn6{@usn6:#usn8 =~#usn7 =~0x0,`7esn`:$usn1 Ends With $`2esn`}]->(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[?:`6esn`]->(`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})[Any(`5esn` In $usn2 Contains $`1esn` Where @usn6[$usn1][$`2esn`])..][None(`3esn` In False In $`2esn` In 1e1 Where True Contains $`` Contains 01234567)..] As #usn8 Create (((usn1 :usn1:``{@usn6:_usn3[0Xa..]})<-[`2esn`?:@usn6]-(`2esn` :_usn4{`7esn`:`2esn`[`3esn`..],`6esn`:.12 Is Not Null})-[`4esn`?:#usn8|:`6esn` *999{`8esn`:010[`1esn`..`4esn`]}]-(`5esn` ))),`4esn`=(`1esn` {_usn3:12.0 In 07,`2esn`:01234567[..`6esn`][..``]}) Union All Detach Delete 0xabc =~01 Create (((@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})-[:`8esn`|@usn6*..]->(#usn8 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})-[? *..0X0123456789ABCDEF]-(@usn5 {@usn6:$123456789[12.0],#usn7:usn1 =~_usn4 =~$usn1}))),`7esn`=(((:`3esn`{#usn7:_usn3 =~$12})-[`7esn`? *123456789..]-(:`2esn`:@usn5{#usn8:$usn2 Starts With 9e1 Starts With `7esn`})-[ *..0X0123456789ABCDEF{@usn6:`4esn` Is Not Null,`2esn`:@usn6[.0]}]->(`` :usn1:``{@usn6:010[`1esn`..`4esn`]}))) Merge usn2=((`5esn` :_usn4)<-[?:usn2|:``]->(_usn4 {`4esn`:01234567[..00][..$`3esn`],usn1:00[\"d_str\"][False]})<-[usn1?:@usn6{`5esn`:$7[$12],`6esn`:#usn8 Is Not Null}]-({#usn7:1e1[`3esn`]})) On Create Set (`` :#usn8:#usn7)<-[ *0Xa{#usn8:_usn4[#usn7..#usn8],usn2:9e0[0..1e1]}]->(#usn8 :#usn8:#usn7{@usn6:$#usn8[0e0..][07..],``:$`7esn` =~1.e1 =~0.e0})-[{#usn7:`2esn`[`3esn`..],@usn5:12.0[..0X7]}]-(:``:`6esn`{`8esn`:123.654[.e12..\"d_str\"]}).#usn8? =Single(#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]) Contains Single(`5esn` In $usn2 Contains $`1esn` Where `2esn` Contains `3esn` Contains $@usn5) Contains {_usn3:0xabc Contains 0,`6esn`:$`6esn`[.e12..$`6esn`][$#usn7...0]}"),
    octest:ct_string("Create (`5esn` :@usn6{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`})<-[*{`6esn`:`6esn` In $``}]->(`7esn` :`8esn`{usn2:`5esn` =~``,`7esn`:`7esn` Is Not Null Is Not Null})<-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]-(:`8esn`{@usn5:1000 Starts With 0e0 Starts With 0,#usn7:$`5esn`[`4esn`..$`2esn`]}) Match (`3esn` :#usn8:#usn7{_usn3:$`1esn` Is Not Null Is Not Null,`2esn`:0X7 Contains 12.0})-[`4esn`?:#usn8|:`6esn` *999{`8esn`:010[`1esn`..`4esn`]}]-(`` )-[:@usn5|:@usn6 *999{`5esn`:0x0 =~@usn5 =~01}]->(:``:`6esn`{`7esn`:12e12 Ends With 0e0,`8esn`:$_usn4[False..@usn6][`4esn`..$1000]}),(@usn6 {`4esn`:$#usn7 =~usn2 =~`3esn`,_usn4:01 In 0.12 In .e12}) Where $_usn3 =~`1esn` Union All Return Distinct *,usn2 Starts With 00,Any(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where @usn6 Ends With 0.12 Ends With `3esn`) Contains [`5esn` In $usn2 Contains $`1esn` Where Count(*)[$1000..01]|9e1[..01234567][..`4esn`]] Contains (`3esn` {#usn8:#usn7 =~$`8esn`})-[usn2?:#usn8|:`6esn` *7]->(`6esn` :`5esn`{`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})-[?:`2esn`|:`7esn` *0..{`4esn`:010 In $@usn5 In `5esn`,#usn7:$`7esn` Is Null Is Null}]->(:`6esn`:`3esn`{`3esn`:123.654[0Xa..0x0][.12..12e12]}) Order By $_usn4 Starts With 0.e0 Starts With $12 Ascending Limit `8esn` Starts With $usn2 Union All Return False In 0e0 As @usn6,12e12 In Null As #usn8 Skip @usn6 Is Null Is Null Remove @usn5:#usn8:#usn7 Optional Match `5esn`=(((`6esn` {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})<-[`5esn`:_usn4|_usn3 *0X7..0x0]-(#usn7 {`5esn`:00 Starts With usn1 Starts With Count(*),``:$999 Is Not Null})<-[`4esn` *123456789..]-(:`7esn`$#usn8))),(((`4esn` {_usn3:7 Contains 1000 Contains $usn1})<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(_usn3 :@usn5{`2esn`:1.e1[#usn7][1.e1]})<-[`5esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]}]->({_usn3:.e12 =~\"d_str\" =~@usn5}))) Where $`5esn` Is Null Is Null"),
    octest:ct_string("Return *,.12 Is Not Null Is Not Null,.12[0X0123456789ABCDEF..] As `7esn` Order By [`6esn` In 0x0[9e0..] Where 01234567[..`6esn`][..``]|01 Is Null] Starts With usn1(Distinct 0e0[...e1],$usn2 Ends With 0 Ends With 12.0) Starts With {@usn6:$usn1 Is Not Null Is Not Null,`7esn`:0x0 In 0X0123456789ABCDEF} Desc Limit Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 01[$0])[{`5esn`:@usn6[$usn1][$`2esn`],`1esn`:12.0[9e12]['s_str']}..][Any(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0)..]"),
    octest:ct_string("Unwind [`3esn` In @usn6[..\"d_str\"][..01] Where `1esn`[$7][0Xa]|.e0 Contains 999] =~Extract(`2esn` In $``[$#usn8] Where 12e12 Ends With $_usn4 Ends With $`2esn`|`4esn` Starts With `8esn`) =~[#usn8 =~$1000 =~$1000,$`7esn`[`2esn`]] As `6esn`"),
    octest:ct_string("Return $123456789[..$usn2] As `4esn`,$usn2 Starts With $`7esn` Starts With _usn4 As `1esn`,Filter(`6esn` In 1000[12.e12][#usn7] Where $usn2 Contains $`1esn`) As `5esn` Order By 12e12 Ends With 0e0 Desc,Extract(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0|0[_usn3][.12]) Starts With (#usn8 :`8esn`)<-[`2esn`?:`3esn`|_usn4]-(#usn7 :`7esn`{`3esn`:$#usn8[..123456789][..`2esn`],#usn8:0.e0 Ends With #usn8})-[:`5esn`|:`1esn`]-(@usn5 :`5esn`) Desc Limit $usn2 Ends With 0 Ends With 12.0 Merge @usn6=(`7esn` :`7esn`)-[?:`` *07{`1esn`:$#usn7[$`3esn`..$999]}]->(_usn3 {_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null}) On Create Set [$#usn8[0e0..][07..],#usn7 Is Not Null Is Not Null].#usn7? =@usn5 In 12.0 In $_usn3,Filter(usn1 In 0xabc Is Not Null Is Not Null Where 01234567[9e0][.0]).`2esn`! =@usn5[01234567..],Extract(`6esn` In 0x0[9e0..] Where Count(*)[..$_usn3][..$usn2]|0.e0 Contains @usn5 Contains 0X7).`1esn`! =$1000 =~$`8esn` =~$`2esn` Union Merge `4esn`=((:`8esn`)-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :_usn3:@usn5)) Merge @usn6=(`8esn` :#usn7)-[ *0xabc..{``:0xabc =~01,`7esn`:$#usn7[123456789..][$`4esn`..]}]-(:#usn7{_usn3:7 Contains 1000 Contains $usn1})-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :`5esn`) On Match Set `5esn`+=\"d_str\" Ends With 123456789,`3esn` =12 Is Null On Create Set Single(`5esn` In 1e1 =~$`8esn` =~`1esn` Where .e12[$_usn4..0]).`2esn`! =$`8esn` Is Not Null,`2esn` =0 Is Null Is Null,_usn4 =Filter(`6esn` In 0x0[9e0..] Where $123456789 In 010 In $`8esn`) In ``(Distinct 0X0123456789ABCDEF In _usn3) In (_usn3 {usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`4esn`:1.e1 Is Null Is Null})-[`1esn`?:`1esn`|@usn6 *12]->(`8esn` :@usn6)"),
    octest:ct_string("Merge _usn4=(((:#usn8:#usn7{`8esn`:12e12 Ends With 0e0})<-[_usn3?:`` *..010{usn2:`7esn`[_usn4..][Count(*)..]}]->(`8esn` :``:`6esn`{#usn7:$`3esn` Is Null})<-[@usn5{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(:`5esn`{@usn5:True Contains $`` Contains 01234567}))) On Match Set `7esn` =0xabc =~01,`5esn` =[usn1 In 123.654 =~.e0 =~9e0 Where False Starts With $123456789] Contains All(`6esn` In 1000[12.e12][#usn7] Where $`7esn`[..$`8esn`]) Contains [True,07 In Count(*),.e0['s_str'..][$`8esn`..]] On Create Set usn1 =Extract(`6esn` In 1000[12.e12][#usn7] Where `7esn` Contains .0 Contains #usn8|$0[00..])[{`2esn`:07['s_str'][$@usn6],``:usn1[..$123456789][..`1esn`]}..`4esn`(Distinct 9e1 Contains 07,1000[07..][1.e1..])][Single(`5esn` In $usn2 Contains $`1esn` Where 0e0['s_str'])..[123456789[0.0..`2esn`][1.e1..$_usn4]]],`6esn`+=01234567[$`7esn`] Delete $`6esn`[.e12..$`6esn`][$#usn7...0],$`8esn` Is Not Null Is Not Null Union Merge `4esn`=(usn1 :`2esn`:@usn5{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc})<-[#usn8:`3esn`|_usn4*..{``:9e0 Is Null Is Null}]->(:@usn5{#usn7:0x0 In 0X0123456789ABCDEF,`2esn`:0Xa[Count(*)][0xabc]}) With  *,{`4esn`:Count(*)[..$_usn3][..$usn2]}[[`2esn` In $``[$#usn8] Where 0e0['s_str']|0x0 =~`5esn` =~$`8esn`]] Order By Count(*)[010..1.e1]['s_str'.._usn4] Ascending,$`8esn` Ends With #usn8 Ascending,07[..1e1][..$0] Descending Limit 12 Is Null Is Null Where 12.0[9e1..][Null..] Union All Return Distinct $7[..$``] As ``,Any(`7esn` In $`8esn`[0.12][12] Where usn1 In 010) As `6esn` Skip 01234567[01234567][.e12] Limit {`8esn`:Count(*) Is Null Is Null,@usn5:.e0 Ends With $`1esn` Ends With 1000} Is Not Null With Distinct 1000 Starts With 0e0 Starts With 0,Any(`2esn` In $``[$#usn8] Where $`4esn`[$1000..$`4esn`][0x0..$_usn3])[Filter(`6esn` In 0x0[9e0..])],0 Is Null Is Null As #usn7 Order By [9e12 In 123.654 In True,`6esn` In $``][..All(`7esn` In $`8esn`[0.12][12] Where @usn5[..$999][..$0])][..Filter(`6esn` In .e0['s_str'..][$`8esn`..] Where \"d_str\" Ends With $1000 Ends With usn2)] Asc Skip [_usn4 In 12.e12 Is Null Is Null Where 0e0 =~False =~.12|Count(*) Contains 12e12 Contains 0xabc] Ends With {#usn7:_usn3[0Xa..]} Ends With _usn4(Distinct .e0 Contains 999) Where $`4esn`[$1000..$`4esn`][0x0..$_usn3]"),
    octest:ct_string("Unwind .e0['s_str'..][$`8esn`..] As _usn4 Union Return Distinct @usn5 Is Null As `5esn`,Filter(`6esn` In .e0['s_str'..][$`8esn`..] Where 12.0[9e12]['s_str'])[None(usn1 In 123.654 =~.e0 =~9e0 Where False Starts With $123456789)..`3esn`(Distinct 0.12[$usn1..$7],01234567[$`7esn`])],Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0e0 Starts With $@usn6 Starts With $7) =~[usn1 In 123.654 =~.e0 =~9e0 Where 0.12 Contains 0x0 Contains @usn5] =~{@usn5:$usn1 Ends With $`2esn`} Order By (`6esn` :`8esn`{usn2:#usn7 In #usn7,`1esn`:00['s_str']})<-[``?:@usn6]-(:`2esn`:@usn5{usn2:$`3esn` Ends With @usn6 Ends With 123.654})<-[@usn5?:@usn6 *..010]->(#usn7 :#usn7{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2}) Is Null Desc Optional Match (((:_usn4{_usn3:`1esn`[Null..]})<-[`8esn`? *..0X0123456789ABCDEF{`2esn`:$``[$_usn4][$`3esn`]}]-(:`6esn`:`3esn`{`5esn`:$7[$12],`6esn`:#usn8 Is Not Null})-[@usn6{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]}]-(`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]}))),(`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]}) Union Create (usn1 :`2esn`:@usn5{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc})<-[#usn8:`3esn`|_usn4*..{``:9e0 Is Null Is Null}]->(:@usn5{#usn7:0x0 In 0X0123456789ABCDEF,`2esn`:0Xa[Count(*)][0xabc]}),`4esn`=(`1esn` {_usn3:12.0 In 07,`2esn`:01234567[..`6esn`][..``]}) Match ((usn2 :@usn6{@usn5:#usn8[True..#usn7][01..@usn5]})<-[`2esn`?:`6esn` *0xabc..]-({@usn6:'s_str' Ends With $7})<-[:@usn6]->(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null})) Merge _usn3=(@usn5 :`5esn`{@usn5:$`2esn` Ends With 1e1,usn1:'s_str'[$`6esn`..][$0..]})"),
    octest:ct_string("Unwind $#usn8[1.e1..] As `3esn` Optional Match (((@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})-[:`8esn`|@usn6*..]->(#usn8 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})-[? *..0X0123456789ABCDEF]-(@usn5 {@usn6:$123456789[12.0],#usn7:usn1 =~_usn4 =~$usn1}))),`7esn`=(((:`3esn`{#usn7:_usn3 =~$12})-[`7esn`? *123456789..]-(:`2esn`:@usn5{#usn8:$usn2 Starts With 9e1 Starts With `7esn`})-[ *..0X0123456789ABCDEF{@usn6:`4esn` Is Not Null,`2esn`:@usn6[.0]}]->(`` :usn1:``{@usn6:010[`1esn`..`4esn`]}))) Delete 9e1[$`5esn`..][`5esn`..],True[7][``] Union All Merge ((`3esn` :`8esn`)<-[`2esn`?:`3esn`|_usn4]-(@usn5 :`5esn`)) On Create Set All(usn1 In 0xabc Is Not Null Is Not Null Where $``).`5esn`? =Extract(#usn8 In 0x0[_usn4..] Where 7 =~$1000 =~$`5esn`|`2esn`[`3esn`..])[{`3esn`:#usn8[..0X0123456789ABCDEF][...0]}][Any(`6esn` In .e0['s_str'..][$`8esn`..] Where \"d_str\" Ends With $1000 Ends With usn2)] Union Create (:``:`6esn`{`5esn`:$`` Is Not Null Is Not Null,`5esn`:_usn3 Is Not Null})-[`7esn`{``:01234567 In \"d_str\",`5esn`:01234567[`6esn`..]}]-(@usn6 $_usn3)-[?:`1esn`|@usn6 *0Xa]-(`1esn` {`5esn`:$`7esn` Ends With $_usn4 Ends With `5esn`,#usn8:'s_str'[$#usn8]}),((({@usn6:`4esn`})<-[@usn5?{`7esn`:`6esn` In $``}]->(`1esn` {_usn4:$123456789 Starts With `6esn` Starts With 123.654})-[``?:usn1|#usn7]->(@usn6 :_usn4{`2esn`:\"d_str\"[..$_usn3],@usn6:$7[`7esn`][123.654]}))) Remove [`2esn` In $#usn8 Starts With usn2 Starts With .12]._usn4?,[$usn2[12.0..][`8esn`..],0xabc Contains 0].`1esn`,usn2:`6esn`:`3esn` Remove None(`2esn` In $``[$#usn8] Where 0.12 Is Null Is Null).`5esn`?,Any(usn1 In 0xabc Is Not Null Is Not Null Where 7[$1000][1000]).usn1,@usn6(`4esn` Starts With $#usn8 Starts With $#usn8,12.0[9e1..][Null..]).usn1!"),
    octest:ct_string("Match usn1=((@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})) Return Distinct *,Filter(usn1 In 123.654 =~.e0 =~9e0 Where 123.654[$`1esn`])[(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})<-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-({@usn6:`5esn` Ends With $999})..[`2esn` In $``[$#usn8] Where \"d_str\" Starts With _usn4 Starts With $_usn4|$usn1[#usn8..`8esn`][7..`4esn`]]] As _usn4 Order By $`1esn` Ascending,0X7[0xabc][$1000] Ascending,0Xa[Count(*)][0xabc] Desc Skip None(usn1 In 0xabc Is Not Null Is Not Null Where 123456789 =~@usn5 =~$`5esn`) =~[`4esn` Ends With 's_str' Ends With @usn6] Limit Any(`3esn` In 999 Where .12[0X0123456789ABCDEF..]) =~(:`7esn`{@usn6:`2esn`[``..]})<-[?{``:Null Is Not Null Is Not Null}]-(:_usn4{@usn6:$123456789[`1esn`..]}) =~[12e12 Ends With `6esn`] Union All With Distinct *,07[..1e1][..$0] As _usn3 Order By $1000[00..] Descending Where $#usn8 In True In #usn7"),
    octest:ct_string("Match _usn3=(((usn2 :@usn6)-[{usn1:Count(*)[..12][..$999],#usn8:usn1 In 010}]->(`1esn` :`8esn`)<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]-(@usn6 :``:`6esn`))),`2esn`=(`1esn` {`6esn`:07}) Where .12 Is Null Union Return Distinct *,$_usn4 In $12 As `4esn`,`5esn` In $usn1 In `4esn` As @usn6 Limit Any(`3esn` In 999 Where .12[0X0123456789ABCDEF..]) =~(:`7esn`{@usn6:`2esn`[``..]})<-[?{``:Null Is Not Null Is Not Null}]-(:_usn4{@usn6:$123456789[`1esn`..]}) =~[12e12 Ends With `6esn`]"),
    octest:ct_string("Create (_usn4 :usn1:``{`5esn`:$0[`5esn`][9e12],``:#usn7[False..][123.654..]})<-[_usn4]-(`8esn` :usn1:``{`7esn`:1.e1[0..],``:.e0 Contains 999})-[#usn8:@usn6]-(:`3esn`{`7esn`:$123456789[`4esn`..]}),({`4esn`:$123456789 =~usn1 =~0xabc,_usn4:True}) Optional Match (#usn7 {_usn4:`1esn`[$7][0Xa]}),@usn5=((`2esn` )-[:@usn5|:@usn6 *999{`5esn`:0x0 =~@usn5 =~01}]->(:``:`6esn`{`7esn`:12e12 Ends With 0e0,`8esn`:$_usn4[False..@usn6][`4esn`..$1000]})-[`3esn`? *12{@usn5:$#usn8[..123456789][..`2esn`],#usn7:12.0[..0X7]}]-(:`7esn`{@usn6:`2esn`[``..]})) Where 123.654 =~.e0 =~9e0 Create `8esn`=(((`1esn` {@usn6:`1esn`[$7][0Xa]})<-[`4esn`?]->(@usn6 :``:`6esn`{#usn7:9e1 Contains _usn3})<-[@usn5?:_usn4|_usn3 *..010{@usn6:$123456789[`1esn`..]}]-(`4esn` :``:`6esn`{#usn7:`2esn`[`3esn`..],usn2:$usn2 Starts With $`7esn` Starts With _usn4}))),`2esn`=((_usn4 :`6esn`:`3esn`)<-[usn1:#usn8|:`6esn` *0xabc..]->(`8esn` :`1esn`:@usn6)<-[:`5esn`|:`1esn`{#usn8:`7esn` Is Null,`4esn`:False[$12]}]->(_usn4 {`2esn`:1.e1 Is Not Null Is Not Null})) Union Optional Match (((_usn3 )-[:usn2|:`` *0..]->(:#usn7{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]})-[? *..0X0123456789ABCDEF{#usn8:0X7[..`5esn`][..$`7esn`]}]-(:#usn8:#usn7{usn1:00['s_str'],#usn8:$`8esn`[``..True][1000..0.12]}))),`6esn`=(_usn4 {`4esn`:01234567[..00][..$`3esn`],usn1:00[\"d_str\"][False]}) Unwind 9e1[$`5esn`..][`5esn`..] As @usn6 Unwind Filter(`6esn` In 0x0[9e0..] Where `7esn`[`8esn`][#usn7]) Is Not Null Is Not Null As `5esn`"),
    octest:ct_string("Detach Delete [$123456789[`3esn`..`5esn`][1e1..$`5esn`],0x0 =~`5esn` =~$`8esn`,123.654[.e12..\"d_str\"]] In {#usn8:#usn7 In #usn7} In {usn1:7 Ends With `3esn` Ends With $`2esn`},(#usn8 :#usn8:#usn7)<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(`4esn` :`5esn`) Contains {_usn3:12.0 In 07,`2esn`:01234567[..`6esn`][..``]},$usn2 Ends With 0 Ends With 12.0 Return Distinct 0[..07][..False] As `2esn` Limit $@usn5 Ends With 1.e1 Remove {_usn4:\"d_str\" Contains $999 Contains `2esn`}.#usn7? Union Return Distinct $123456789 =~0e0 As `4esn`,1.e1 =~01234567 Order By (:``:`6esn`{`8esn`:123.654[.e12..\"d_str\"]})<-[_usn3:`3esn`|_usn4]->(_usn3 :`4esn`:usn2) Is Not Null Is Not Null Desc,{_usn4:\"d_str\" Ends With $`3esn`,``:#usn8 =~#usn7 =~0x0}[Single(usn1 In 0xabc Is Not Null Is Not Null Where `7esn`[..01])..{`2esn`:.0[@usn6..]}][[1000[12.e12][#usn7],`` Is Not Null Is Not Null]..None(#usn8 In 0x0[_usn4..] Where `8esn` Ends With $`1esn`)] Descending"),
    octest:ct_string("Merge usn2=(((_usn3 :`1esn`:@usn6)<-[:@usn5|:@usn6 *01234567..123456789]->(`1esn` :`7esn`{`6esn`:1e1 In 12.e12})<-[``?:#usn8|:`6esn`{usn1:$#usn7[..$999][..9e1]}]->(`1esn` :`4esn`:usn2))) Union All Remove {`4esn`:$12 Is Null Is Null,`7esn`:$`5esn` Is Null Is Null}.`` Detach Delete #usn7(usn2 =~`6esn`) Is Null Is Null,\"d_str\" Ends With 123456789,.12[0X0123456789ABCDEF..] Match ((`1esn` :usn1:``)<-[#usn7:`1esn`|@usn6 *999{`4esn`:0X7[..`5esn`][..$`7esn`]}]-(`` {``:0.12 Contains 0x0 Contains @usn5})-[#usn8:@usn6]-(#usn7 :`3esn`)),((`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})) Union Merge @usn6=((_usn4 :`3esn`{`2esn`:999})-[`5esn`?:@usn5|:@usn6 *7{`2esn`:$`8esn`[0.12][12],`6esn`:`` Contains $_usn3 Contains 0e0}]-(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]})) Detach Delete .0 =~$@usn5 =~1.e1,[usn2 Contains 0,.e0 =~7 =~False,.12] Is Null,@usn6[...12][..123.654]"),
    octest:ct_string("Merge usn1=((`` :usn2{@usn5:usn2,usn1:0.0[.12..`8esn`]})<-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]-(`8esn` :#usn7)) On Create Set {`4esn`:Count(*)[..$_usn3][..$usn2]}.@usn5 =Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0]|.0 =~$@usn5 =~1.e1)[({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`4esn` :``:`6esn`)<-[_usn3:@usn6]->({@usn6:`5esn` Ends With $999})..],#usn7 =({`7esn`:`4esn` In $`2esn` In @usn5})-[:`1esn`|@usn6*..]->(:`8esn`{`8esn`:0X7 Contains 12.0,`3esn`:`4esn` Starts With `8esn`})<-[`4esn` *123456789..]-(:`7esn`$#usn8)[#usn7($123456789[`1esn`..][`7esn`..],$123456789 =~0e0)][[usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1]],`` =0.0 =~0 =~`` Unwind 00 =~999 =~07 As `4esn` Unwind `7esn`[7..$123456789][$0..$7] As `3esn` Union All With  $12[#usn8..$@usn5][9e0..usn1],$`3esn` Ends With $7 Ends With `7esn`,@usn5 Ends With 1000 Order By 010[`1esn`..`4esn`] Ascending Skip 01[..0X7] Limit [`6esn` In .e0['s_str'..][$`8esn`..] Where `8esn`[0x0..]|01[$0]][Extract(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1|usn1 =~12 =~$0)][All(usn1 In 0xabc Is Not Null Is Not Null Where 0x0[$7..][`7esn`..])] Delete Extract(usn1 In 0xabc Is Not Null Is Not Null)[{#usn8:`6esn`[`7esn`..$_usn3][9e0..#usn8],`3esn`:\"d_str\" =~_usn3 =~0.0}..Filter(#usn8 In 0x0[_usn4..] Where #usn8[..0X0123456789ABCDEF][...0])][Single(`6esn` In 0x0[9e0..] Where $`3esn` Is Not Null)..None(#usn8 In 0x0[_usn4..] Where 0.e0 Is Not Null Is Not Null)],07 =~$12 =~$@usn6 Union All Merge (`6esn` {`4esn`:$12 Is Null Is Null,`7esn`:$`5esn` Is Null Is Null})-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-(:@usn5{#usn8:usn1 Is Null,`8esn`:7 In 1e1})-[_usn3:`3esn`|_usn4]->(@usn6 {`2esn`:123.654 Is Not Null Is Not Null}) On Match Set usn1:_usn3:@usn5,@usn5:@usn6,`6esn`+=0.e0 Contains 9e1 Contains 9e0 On Create Set _usn4 =00[0X7..9e12],usn2 =1e1 Contains @usn5 Contains 12.e12,(:@usn5{``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]})-[`6esn` *00]->(:`2esn`:@usn5{#usn8:12.0[`3esn`][_usn3]})-[:@usn5|:@usn6 *01234567..123456789]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null}).@usn5! =$@usn5[..`4esn`] With Distinct *,$123456789[..`3esn`][..`7esn`] As #usn7,[9e12 In 123.654 In True,`6esn` In $``][..All(`7esn` In $`8esn`[0.12][12] Where @usn5[..$999][..$0])][..Filter(`6esn` In .e0['s_str'..][$`8esn`..] Where \"d_str\" Ends With $1000 Ends With usn2)] Order By 12.0 In 07 Ascending Limit {#usn8:.e0 Ends With $`1esn` Ends With 1000}[Filter(#usn8 In 07['s_str'][$@usn6] Where $12[0.0..])][Filter(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..])] Where `8esn` Starts With $12 Starts With $1000 Delete [0.e0 Contains $123456789 Contains 123456789,`5esn` In 12.e12 In 1000] Starts With [123.654[.e12..\"d_str\"],1.e1[0..]] Starts With Extract(`2esn` In $``[$#usn8] Where $`5esn` Is Not Null|123456789[..#usn8]),999 In $_usn3,Any(#usn8 In 0x0[_usn4..] Where $`` Starts With 0x0) In [usn1 In 123.654 =~.e0 =~9e0 Where $7 Ends With 12.e12 Ends With `1esn`]"),
    octest:ct_string("Detach Delete `5esn` Ends With $999,[$999[@usn5..][Null..]] Ends With ({usn2:0Xa Contains $`6esn`,_usn3:\"d_str\" Ends With $`3esn`})-[@usn5? *00{@usn5:usn1 Ends With 1.e1 Ends With `4esn`}]-(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})-[:`5esn`|:`1esn`]-(`2esn` ),00['s_str'] Match (_usn3 :`3esn`{`1esn`:$999[@usn5..][Null..]})<-[{#usn8:999}]->(:@usn6) Where $`7esn` =~1.e1 =~0.e0 Match ((`` :usn1:``)-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->(`8esn` :#usn7)<-[?{`5esn`:$1000 =~$`8esn` =~$`2esn`,_usn3:$`` Starts With 0x0}]->(`2esn` :`5esn`{`1esn`:$@usn6 Ends With 0.0})),#usn7=(((`6esn` :`5esn`{`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})-[`4esn`?:usn1|#usn7{`1esn`:123456789 Ends With 9e1 Ends With ``,@usn5:0xabc Contains 0}]->(`` :`3esn`{#usn8:`3esn` Is Not Null Is Not Null,#usn8:$123456789[`3esn`..`5esn`][1e1..$`5esn`]})-[? *0xabc..]->(`6esn` {`5esn`:0x0 =~@usn5 =~01})))"),
    octest:ct_string("Delete Extract(`6esn` In 1000[12.e12][#usn7] Where `7esn` In `8esn` In 12|$123456789[`3esn`..`5esn`][1e1..$`5esn`]) Contains [usn1[0X7..]] Contains Filter(`5esn` In $usn2 Contains $`1esn` Where False[$12]) With Distinct *,$0[00..] As `5esn`,`1esn`[9e12..$123456789] As usn1 Order By .e12 Contains $usn2 Contains $@usn6 Descending,01234567[$`7esn`] Asc Skip 123456789 =~@usn5 =~$`5esn` Limit $#usn7[$`3esn`..$999] Where 0e0 Is Null Union All Delete {_usn4:$123456789 Starts With `6esn` Starts With 123.654} Starts With `6esn`($#usn8[0e0..][07..],.e12[``][$1000]),01234567 =~0.0 =~0e0 Delete 00[$12...e0],$`3esn` Starts With 9e12 Starts With `8esn` Merge usn1=(`8esn` :`1esn`:@usn6{usn1:00['s_str'],#usn8:$`8esn`[``..True][1000..0.12]}) On Match Set {`3esn`:$0[@usn6..][.e12..],`6esn`:\"d_str\"[7..$999]}.`` =12.0 Contains 12.e12 Contains 0x0"),
    octest:ct_string("With  .e12[..#usn7][..9e12] Order By .12 In 01234567 In _usn4 Desc,({#usn7:$`3esn` Is Null})<-[?:usn2|:`` *7]->(`6esn` {#usn7:`2esn`[`3esn`..],usn2:$usn2 Starts With $`7esn` Starts With _usn4})-[?:``*{_usn3:12.e12 =~.0}]-({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]}) =~{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]} =~None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1) Ascending,1000 Ends With $`5esn` Descending Limit 0x0[_usn4..] Where .e1[0X7..`2esn`]"),
    octest:ct_string("Remove [`6esn` In 1000[12.e12][#usn7] Where usn1[..$123456789][..`1esn`]|\"d_str\" Starts With _usn4 Starts With $_usn4].``! Union With Distinct @usn5[01234567..] As `8esn` Order By `4esn` Starts With `8esn` Ascending,$999 Contains 12e12 Desc,@usn6[..$usn1][..010] Asc Limit `2esn` Contains `3esn` Contains $@usn5 Match (`` :usn1:``{@usn6:010[`1esn`..`4esn`]}) Delete _usn3[$0],$`3esn` Is Not Null,.e12 Is Null Is Null Union All Return Distinct 0X7[..True][..01234567] As `7esn`,[12 Is Null Is Null,9e0[$@usn6]] Contains Extract(`6esn` In .e0['s_str'..][$`8esn`..] Where `8esn`[0x0..]|.e0['s_str'..][$`8esn`..]) Contains #usn7 As usn2,#usn8[..0X0123456789ABCDEF][...0]"),
    octest:ct_string("With  $1000 Is Not Null Is Not Null,(:`4esn`:usn2{_usn3:Null Is Not Null Is Not Null,`4esn`:$1000 Is Not Null})<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]->(:@usn5{usn1:12.e12 Is Null Is Null,``:Null Is Not Null Is Not Null}) Ends With {@usn6:_usn3[0Xa..]} As usn1,$#usn8 Ends With _usn4 Ends With usn2 As #usn7 Skip _usn4[#usn7..#usn8] Limit `8esn` Ends With $`1esn` Unwind None(`6esn` In 1000[12.e12][#usn7] Where 9e12[\"d_str\"]) Ends With None(`6esn` In 1000[12.e12][#usn7] Where usn1[9e1..]) Ends With [`5esn` In 12.e12 In 1000,False In $`2esn` In 1e1] As `` With  *,#usn7(Distinct $999[@usn5..][Null..],010[`1esn`..`4esn`])[..{_usn3:0e0['s_str'],`6esn`:9e12[\"d_str\"]}][..{`5esn`:@usn6[$usn1][$`2esn`],`1esn`:12.0[9e12]['s_str']}],Extract(`3esn` In 999 Where .e12 Is Null Is Null|$`7esn`[usn2]) =~Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where @usn5['s_str'..$`2esn`]|$@usn5[$_usn3..Null]) =~Any(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where #usn7 In #usn7) As `2esn` Order By _usn4[7..$999] Desc Skip #usn8 Starts With 0 Limit .12 =~$#usn7 =~$`` Union All Delete (usn2 {usn2:`7esn` Contains .0 Contains #usn8})-[usn1{`1esn`:`7esn` Contains .0 Contains #usn8}]->(@usn6 :`5esn`{@usn5:.12[9e1..0X7]}) Is Not Null Is Not Null,7 Starts With Null Starts With Null,.e1[123.654..] Match (:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`}),_usn4=(({@usn5:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`3esn`:`4esn` In .12 In $#usn8})-[?:`` *07{`1esn`:$#usn7[$`3esn`..$999]}]->(@usn6 {``:12.e12 Contains 's_str' Contains 0.12})<-[? *..0X0123456789ABCDEF{usn2:123456789 Ends With 9e1 Ends With ``,`3esn`:9e0[123456789..0][12.0..@usn6]}]-({``:0.12 Contains 0x0 Contains @usn5})) Where 1000 Starts With 0e0 Starts With 0 Union All Remove All(`5esn` In $usn2 Contains $`1esn` Where $#usn8[..123456789][..`2esn`]).@usn5,[$`3esn` Is Null,.12[usn1]].`6esn`? Create @usn6=(_usn3 {`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`}) Return Distinct `6esn` In 0e0 In _usn4 As `3esn`,12[$`5esn`..$`7esn`][$1000..$_usn4] As #usn8,7 =~$1000 =~$`5esn` Order By Any(#usn8 In 07['s_str'][$@usn6] Where $`7esn`[usn2]) In [`6esn` In 0x0[9e0..] Where `5esn`[usn1]] In {_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]} Ascending,12e12 In Null Asc Skip ``[_usn4..][$7..] Limit 123456789 =~@usn5 =~$`5esn`"),
    octest:ct_string("Detach Delete {`7esn`:`6esn` In $``}[[123.654[.e12..\"d_str\"],1.e1[0..]]..][Any(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 999 Ends With 123456789 Ends With 12.0)..],{_usn4:\"d_str\" Ends With $`3esn`,``:#usn8 =~#usn7 =~0x0}[Single(usn1 In 0xabc Is Not Null Is Not Null Where `7esn`[..01])..{`2esn`:.0[@usn6..]}][[1000[12.e12][#usn7],`` Is Not Null Is Not Null]..None(#usn8 In 0x0[_usn4..] Where `8esn` Ends With $`1esn`)],@usn6(_usn4[.._usn4],00[$@usn5][0X7]) =~Extract(`3esn` In False In $`2esn` In 1e1 Where $`` Starts With 0x0|0.12 Is Null Is Null) =~Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null|True =~0 =~123456789) Union Optional Match `6esn`=((:#usn8:#usn7{`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]})) Remove $_usn3.`4esn`,(:`4esn`:usn2$``)<-[usn2?]->(usn2 {usn2:`7esn` Contains .0 Contains #usn8}).`3esn`! Union All Delete @usn6 Contains $_usn3 Contains 12.0 Detach Delete 9e1[$`2esn`..][12.e12..] Match `6esn`=(({@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})) Where 9e1[$#usn8]"),
    octest:ct_string("Delete 1e1[`3esn`],$usn2 In 12 Union Return *,$0[00..] As `5esn` Order By (:`4esn`:usn2$``)-[`5esn`?:_usn4|_usn3{@usn5:7 =~False,_usn3:999 Ends With $`4esn`}]->(usn2 :``:`6esn`)<-[_usn3:`3esn`|_usn4]->(#usn7 :_usn4) Is Not Null Descending Skip 0.0[0] Limit [$`` Is Not Null Is Not Null,$#usn7[9e12..12],`7esn` Is Null Is Null][[#usn8 In 0x0[_usn4..] Where `8esn`[0x0..]]..] Delete Any(#usn8 In 0x0[_usn4..] Where $`` Starts With 0x0) In [usn1 In 123.654 =~.e0 =~9e0 Where $7 Ends With 12.e12 Ends With `1esn`],0Xa[.e12..],0.0[`7esn`][`6esn`] With  .e0 =~7 =~False As `8esn`,01 Starts With $`5esn` Starts With 01234567,[0.e0 Contains $123456789 Contains 123456789,`5esn` In 12.e12 In 1000][..Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12]|0.e0[.e12])][..Any(#usn8 In 0x0[_usn4..] Where $#usn7)] As `7esn` Limit $`1esn` =~`1esn` =~0X0123456789ABCDEF"),
    octest:ct_string("Optional Match ``=((:`5esn`{`7esn`:'s_str'[$#usn8],``:`1esn`[..$#usn7]})<-[``?:usn1|#usn7]-(@usn5 :`2esn`:@usn5{@usn6:123456789 =~#usn8 =~$0})) Where False Starts With $123456789 Unwind $usn1[1e1..1e1] As `2esn` Remove All(`5esn` In $usn2 Contains $`1esn` Where @usn6[$usn1][$`2esn`]).`3esn`?,(_usn4 :`1esn`:@usn6)<-[`5esn`? *..0x0{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]->(:`7esn`$12).``?"),
    octest:ct_string("Detach Delete Single(`5esn` In $usn2 Contains $`1esn` Where True Contains .e1 Contains `2esn`) In None(`3esn` In False In $`2esn` In 1e1 Where #usn7[.12][usn2]),$#usn8[0xabc..usn2] Return *,{#usn8:.e0 Ends With $`1esn` Ends With 1000}[Filter(#usn8 In 07['s_str'][$@usn6] Where $12[0.0..])][Filter(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..])],$_usn3 =~`1esn` Order By $usn2[$`4esn`..$`2esn`] Desc Skip .e1 =~\"d_str\" =~'s_str' Match (((:`2esn`:@usn5{usn1:$usn2[`6esn`..],`3esn`:$_usn4[..$`8esn`]})-[?{#usn7:123.654[``]}]-(`8esn` :`3esn`{`2esn`:$`8esn`[`7esn`],`4esn`:#usn8[1e1..]})<-[_usn3:@usn6]->({@usn6:`5esn` Ends With $999}))),(`1esn` :`4esn`:usn2{`2esn`:9e0[$@usn6]})<-[`1esn`?:_usn4|_usn3]-(`1esn` {@usn6:Null In 0xabc})<-[`5esn`?:`1esn`|@usn6{`5esn`:#usn8 =~$1000 =~$1000,`2esn`:0x0[$7]}]-(:_usn3:@usn5{_usn3:.e0[$`1esn`..][_usn4..]}) Union Match (((usn1 :_usn4)-[`2esn`? *7]->(`` :``:`6esn`{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]})-[`2esn`?:`3esn`|_usn4]->({`1esn`:1e1 Starts With 010}))),(((:`3esn`{`7esn`:$123456789[`4esn`..]})-[@usn6?$`3esn`]->(@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->(`8esn` :#usn7))) Unwind False Is Not Null Is Not Null As `8esn` Union All Create (_usn3 {`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`}) Unwind 123.654 Ends With $@usn5 Ends With .0 As @usn5 Create usn2=((_usn4 )<-[`7esn`?{@usn5:`4esn` Is Not Null,`3esn`:.e1 =~usn2 =~`7esn`}]-(:`4esn`:usn2{`2esn`:12e12 Ends With 0 Ends With $@usn6,``:`1esn`[Null..]})<-[?:#usn7|`5esn`{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]})),``=(((:#usn7{``:$`6esn` Starts With usn1})-[{usn1:Count(*)[..12][..$999],#usn8:usn1 In 010}]->(`1esn` :`8esn`)<-[:`6esn`$123456789]-(@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]})))"),
    octest:ct_string("Optional Match (((_usn4 :`2esn`:@usn5)-[:_usn3|`6esn` *01..7{_usn4:$`2esn`[$``..12e12]}]-(`5esn` {usn1:1000 Ends With $`5esn`})-[`7esn`?:``]->(usn1 :_usn4))),(({usn1:False[$12],`1esn`:0.e0 Ends With $123456789})) Merge _usn3=(#usn7 :`3esn`{_usn3:.e0[$`1esn`..][_usn4..]}) On Match Set _usn3(1000 Starts With ``,.e1 =~\"d_str\" =~'s_str').@usn5? =7 =~$1000 =~$`5esn` On Create Set _usn3+={_usn3:`1esn`[..$#usn7]} Contains Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1) Contains [$1000[00..],$`6esn`[.e12..$`6esn`][$#usn7...0],0Xa[..1.e1]],#usn7+=$12[`3esn`][`3esn`],{_usn3:0Xa[..$`2esn`][..00]}.`5esn`? =[`6esn` In 1000[12.e12][#usn7] Where 12.0[9e12]['s_str']|0.e0 =~01234567 =~01234567] Ends With Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $`8esn`[0.12][12]) Ends With count(1000[Null][$`7esn`],$123456789[`3esn`..`5esn`][1e1..$`5esn`]) With  $0 Contains 7 Contains 1.e1,{@usn5:Count(*)[..$_usn3][..$usn2],@usn5:$1000[$usn1][.e1]}[Single(`6esn` In 1000[12.e12][#usn7] Where $usn2 Contains $`1esn`)..{#usn7:usn1 Ends With .0 Ends With `4esn`,_usn3:$`1esn` Is Null}][[`7esn` In $`8esn`[0.12][12] Where usn1 In 010]..usn1(1e1 Is Null)] Order By usn2[9e12] Descending,$@usn6 Ends With 010 Descending Skip Single(#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]) Contains Single(`5esn` In $usn2 Contains $`1esn` Where `2esn` Contains `3esn` Contains $@usn5) Contains {_usn3:0xabc Contains 0,`6esn`:$`6esn`[.e12..$`6esn`][$#usn7...0]} Where 123456789[0.0..`2esn`][1.e1..$_usn4]"),
    octest:ct_string("Remove Filter(_usn4 In 12.e12 Is Null Is Null Where $`2esn`[.._usn3]).`6esn` Return *,$0[00..] As `5esn` Order By (:`4esn`:usn2$``)-[`5esn`?:_usn4|_usn3{@usn5:7 =~False,_usn3:999 Ends With $`4esn`}]->(usn2 :``:`6esn`)<-[_usn3:`3esn`|_usn4]->(#usn7 :_usn4) Is Not Null Descending Skip 0.0[0] Limit [$`` Is Not Null Is Not Null,$#usn7[9e12..12],`7esn` Is Null Is Null][[#usn8 In 0x0[_usn4..] Where `8esn`[0x0..]]..] Merge (((@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})-[:`8esn`|@usn6*..]->(#usn8 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})-[? *..0X0123456789ABCDEF]-(@usn5 {@usn6:$123456789[12.0],#usn7:usn1 =~_usn4 =~$usn1}))) On Match Set [`5esn` In $usn2 Contains $`1esn` Where Count(*)[_usn3..]].#usn7! =`8esn`[.e1..],@usn5+=0xabc[.12..][#usn8..],`2esn` =$`1esn` In $#usn7 In 0X7 Union All With  (_usn3 :#usn8:#usn7)<-[{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(`3esn` :`4esn`:usn2)[[`3esn` In 999 Where _usn4[1000..``]|Null[9e1][$`6esn`]]..({_usn4:$1000[$usn1][.e1]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`1esn` {`6esn`:07})<-[`5esn`?]-(@usn5 {`5esn`:0e0[...e1]})] As #usn7,[0Xa[..1.e1],#usn7[.12][usn2],1000 Starts With 0e0 Starts With 0][`7esn`(Distinct $#usn8[@usn5..$1000])] As #usn7,$`4esn` =~07 Order By @usn6(Distinct 0xabc Contains 0)[{_usn4:$`2esn` Ends With 1e1}..][All(_usn4 In 12.e12 Is Null Is Null Where 0e0 =~False =~.12)..] Descending,\"d_str\"[7..$999] Ascending,usn1 =~12 =~$0 Asc Skip .12[usn1] Where `` In 123.654 In 0.0 Optional Match `1esn`=(_usn4 {`4esn`:01234567[..00][..$`3esn`],usn1:00[\"d_str\"][False]}) Where $`4esn`[.e1..$usn1] Union Unwind $usn1 Is Not Null Is Not Null As @usn6"),
    octest:ct_string("With  *,.12 As `5esn` Order By $1000[..`6esn`][..123456789] Ascending,None(`6esn` In 1000[12.e12][#usn7] Where 9e12[\"d_str\"]) Ends With None(`6esn` In 1000[12.e12][#usn7] Where usn1[9e1..]) Ends With [`5esn` In 12.e12 In 1000,False In $`2esn` In 1e1] Ascending,0.e0 =~01234567 =~01234567 Desc Skip (`3esn` :usn2{#usn7:usn2[`6esn`..][.0..],#usn7:\"d_str\"[..$_usn3]})<-[?{`3esn`:'s_str'[$`6esn`..][$0..]}]->(`2esn` :@usn6)<-[?{`8esn`:$`7esn`[usn2],`1esn`:1000 Is Not Null}]-(#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]}) Is Null Limit 0x0[$`2esn`..'s_str'][$@usn5..1.e1] Where usn1 Ends With $`8esn` Ends With 7"),
    octest:ct_string("Merge ((:usn1:``{#usn7:#usn8[$`7esn`..12.0],`1esn`:9e12 In 123.654 In True})) On Match Set `3esn`+=#usn8 On Match Set usn2 =Single(`6esn` In 1000[12.e12][#usn7] Where $`3esn` Starts With 01234567 Starts With $`5esn`) Ends With ``(0X7[..True][..01234567]) Ends With [0.12['s_str'..$0][$usn1..9e0]] Return $`7esn`[`2esn`] As @usn6,$#usn8 =~7 =~.12 As `5esn`,Single(#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]) Contains Single(`5esn` In $usn2 Contains $`1esn` Where `2esn` Contains `3esn` Contains $@usn5) Contains {_usn3:0xabc Contains 0,`6esn`:$`6esn`[.e12..$`6esn`][$#usn7...0]} As _usn3 Limit Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null) =~[12 Is Null Is Null,9e0[$@usn6]]"),
    octest:ct_string("Delete #usn8(usn1 Ends With .0 Ends With `4esn`,`7esn`[`8esn`][#usn7]) Is Null Merge (usn2 :`7esn`) On Match Set usn2 ={`8esn`:12 Is Null Is Null}[[`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 1000 Starts With 0e0 Starts With 0|$#usn8 Ends With _usn4 Ends With usn2]..][[usn1 In 0xabc Is Not Null Is Not Null Where $@usn6 Is Null|$`6esn`[$`6esn`..][0X7..]]..],[`2esn` In $``[$#usn8] Where 1000 Starts With 0x0|00 Starts With usn1 Starts With Count(*)].usn1 =#usn7[False..][123.654..] Union All Optional Match ((@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]})-[? *0xabc..{`3esn`:.e12[$_usn4..0],usn1:00[$0..usn2][$_usn4..$999]}]->(@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]})<-[_usn3:`3esn`|_usn4 *0Xa]-({`4esn`:Count(*)[..$_usn3][..$usn2]})) Where 9e1[$`3esn`][$`1esn`] Union Remove `8esn`:`3esn`,`7esn`(\"d_str\" Is Not Null,$123456789[`4esn`..]).usn1 Detach Delete Any(`2esn` In $``[$#usn8] Where $`2esn`[.._usn3])[[`6esn` In .e0['s_str'..][$`8esn`..] Where $@usn5 =~$usn2 =~True|.e0[$`1esn`..][_usn4..]]..`8esn`],All(`6esn` In .e0['s_str'..][$`8esn`..] Where .e12 Is Null Is Null)[@usn5(Distinct)..][[0 Contains $@usn5,False Contains $`1esn` Contains @usn6]..]"),
    octest:ct_string("Remove Extract(#usn8 In 0x0[_usn4..] Where 00[01234567][Count(*)]|7 Ends With `3esn` Ends With $`2esn`).`4esn`?,[`3esn` In @usn6[..\"d_str\"][..01] Where .0[01234567]|.e12 Is Not Null Is Not Null].usn1!,[0,`4esn` Is Not Null].`2esn`? Remove (:@usn6{`8esn`:.0[..False]})-[`2esn`? *7]->(`` :``:`6esn`{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]})<-[:`1esn`|@usn6*..]-(`3esn` :``:`6esn`{`5esn`:$999[9e0..010][999..010]}).``,{``:@usn6[.0]}.`7esn`! Merge `1esn`=(({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]}))"),
    octest:ct_string("Create (({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`4esn` :``:`6esn`)-[@usn5{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(`8esn` :`1esn`:@usn6)),`4esn`=(usn1 :usn1:``{@usn6:_usn3[0Xa..]})-[{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]})"),
    octest:ct_string("Delete `8esn`[.e1..] Match ((#usn7 {@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})) Where `7esn` =~12.e12 =~0e0 Create (((@usn6 {@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})-[`5esn`:@usn5|:@usn6*{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]->(#usn8 :`2esn`:@usn5)<-[`5esn`:_usn4|_usn3 *0X7..0x0]-(:#usn7{_usn4:\"d_str\"[7..$999]}))),((`7esn` {#usn7:1e1[`3esn`]})-[@usn6?:`` *0Xa]-(@usn6 :@usn5{`8esn`:$@usn6 Contains 0e0})<-[:_usn4|_usn3]-(#usn8 :`8esn`{_usn4:usn2 In 1e1 In `4esn`}))"),
    octest:ct_string("With Distinct *,.e1 =~$#usn8,`1esn` As `2esn` Order By `` In 123.654 In 0.0 Desc Limit Filter(`5esn` In $usn2 Contains $`1esn`)[`8esn`(1000[12.e12][#usn7],#usn8[1e1..])..][(`3esn` :usn2{#usn7:usn2[`6esn`..][.0..],#usn7:\"d_str\"[..$_usn3]})<-[?{`3esn`:'s_str'[$`6esn`..][$0..]}]->(`2esn` :@usn6)<-[?{`8esn`:$`7esn`[usn2],`1esn`:1000 Is Not Null}]-(#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]})..] Where Count(*)[$1000..01] Return *,$_usn3[0e0..][12.0..] As usn2 Delete Any(#usn8 In 0x0[_usn4..] Where $`` Starts With 0x0) In [usn1 In 123.654 =~.e0 =~9e0 Where $7 Ends With 12.e12 Ends With `1esn`],0Xa[.e12..],0.0[`7esn`][`6esn`] Union All With  0x0[$7..][`7esn`..] As _usn4,7 =~$12 =~0X7 As #usn8,$7 Ends With 12.e12 Ends With `1esn` As `` Order By ``($#usn7[$`3esn`..$999]) Starts With {``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]} Ascending,All(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $999[01234567][@usn5]) Starts With Extract(`3esn` In @usn6[..\"d_str\"][..01]) Starts With Extract(#usn8 In 07['s_str'][$@usn6] Where True) Ascending,False Is Not Null Is Not Null Descending Delete Filter(`6esn` In 1000[12.e12][#usn7] Where $usn2 Contains $`1esn`),.12,`7esn` =~12.e12 =~0e0 Unwind All(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]) In Single(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 1000 Starts With ``) As @usn5 Union With Distinct [$999[@usn5..][Null..]] Ends With ({usn2:0Xa Contains $`6esn`,_usn3:\"d_str\" Ends With $`3esn`})-[@usn5? *00{@usn5:usn1 Ends With 1.e1 Ends With `4esn`}]-(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})-[:`5esn`|:`1esn`]-(`2esn` ) As `7esn`,00[0X7..9e12] As #usn8 Order By 00 =~999 =~07 Asc,None(`6esn` In 1000[12.e12][#usn7] Where 9e12[\"d_str\"]) Ends With None(`6esn` In 1000[12.e12][#usn7] Where usn1[9e1..]) Ends With [`5esn` In 12.e12 In 1000,False In $`2esn` In 1e1] Descending,.e0 =~$1000 Ascending Limit {`7esn`:01234567[9e0][.0],`2esn`:999 Ends With $`4esn`}[`4esn`(.12 In 01234567 In _usn4,12.0[9e12]['s_str'])..] Where .e0 Contains 999 Merge @usn5=(`` :_usn3:@usn5) On Match Set `6esn`:@usn5,Single(`7esn` In $`8esn`[0.12][12] Where 01 Is Null).`8esn` =Single(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]) Starts With (:usn1:``{_usn4:1000[12.e12][#usn7]})-[ *7{`4esn`:$#usn7[$`3esn`..$999],`8esn`:$0[00..]}]-({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]}) Starts With {`1esn`:`5esn` In 12.e12 In 1000,`3esn`:0Xa Contains $`6esn`},`5esn` =010 Starts With 0X7 On Create Set `` =usn1 Is Null Is Null"),
    octest:ct_string("Match ``=(((`6esn` {`5esn`:0x0 =~@usn5 =~01})<-[?{`5esn`:$1000 =~$`8esn` =~$`2esn`,_usn3:$`` Starts With 0x0}]->({`2esn`:``[0X7..][$@usn6..],@usn6:usn1[..`7esn`][..$`8esn`]})<-[`6esn`? *999]->(@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]}))),(`6esn` {`5esn`:0x0 =~@usn5 =~01})<-[`8esn`?:usn1|#usn7 *01..7{usn1:123456789[$_usn4..]}]-(@usn5 :`2esn`:@usn5$#usn8) Where $#usn8[1.e1] Return True[07],usn1 =~_usn4 =~$usn1 As `7esn` Order By usn1[..Count(*)][..`8esn`] Ascending,`8esn`['s_str'..] Descending,Single(#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]) Contains Single(`5esn` In $usn2 Contains $`1esn` Where `2esn` Contains `3esn` Contains $@usn5) Contains {_usn3:0xabc Contains 0,`6esn`:$`6esn`[.e12..$`6esn`][$#usn7...0]} Descending Union Unwind Single(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]) Starts With (:usn1:``{_usn4:1000[12.e12][#usn7]})-[ *7{`4esn`:$#usn7[$`3esn`..$999],`8esn`:$0[00..]}]-({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]}) Starts With {`1esn`:`5esn` In 12.e12 In 1000,`3esn`:0Xa Contains $`6esn`} As `3esn` With Distinct $_usn3[0e0..][12.0..] As `3esn` Order By None(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1) In {`6esn`:1.e1[0..],usn2:`` Contains $_usn3 Contains 0e0} Descending,$123456789 In `8esn` In 0X7 Descending Skip 12.0[9e1..][Null..] Where 1e1 Contains 0Xa Union All Create ({@usn6:#usn8 =~#usn7 =~0x0,`7esn`:$usn1 Ends With $`2esn`})<-[?:usn1|#usn7 *0Xa]->(:`3esn`{`7esn`:12.e12[.12..$_usn3][0e0..9e0],`7esn`:0X7[..True][..01234567]}),((`4esn` {_usn4:$`2esn`[$``..12e12]})<-[`1esn`?:`3esn`|_usn4{_usn4:12e12 Ends With $_usn4 Ends With $`2esn`,``:.12 Is Not Null}]-(:`1esn`:@usn6{`5esn`:.e12[$_usn4..0],`4esn`:$#usn8 In True In #usn7})<-[?:usn1|#usn7 *0Xa]->(`1esn` :usn2{`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]})) Detach Delete None(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where .e12 =~@usn5) Is Not Null Is Not Null,Extract(#usn8 In 07['s_str'][$@usn6] Where 7 =~$1000 =~$`5esn`|\"d_str\"[1.e1][01234567])[..(`6esn` :`1esn`:@usn6{#usn7:01234567 In \"d_str\"})<-[`1esn`?:`3esn`|_usn4 *01234567..123456789]->(#usn7 {#usn7:999 Contains $`7esn` Contains usn2})][..None(_usn4 In 12.e12 Is Null Is Null Where 9e1 =~$0)],7 Contains 1000 Contains $usn1 Merge ((`4esn` :usn2)<-[:#usn7|`5esn`*{`8esn`:01[$0],``:0xabc Is Not Null Is Not Null}]-(_usn3 :`7esn`{#usn7:123.654 =~.e0 =~9e0,_usn3:`1esn`[Null..]})) On Create Set _usn4 =All(usn1 In 0xabc Is Not Null Is Not Null Where .12[..07])[..[`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $usn2[12.0..][`8esn`..]|$7[`7esn`][123.654]]][..Any(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1e1 Contains 0Xa)] On Match Set usn2 =Single(`6esn` In 1000[12.e12][#usn7] Where $`3esn` Starts With 01234567 Starts With $`5esn`) Ends With ``(0X7[..True][..01234567]) Ends With [0.12['s_str'..$0][$usn1..9e0]]"),
    octest:ct_string("Merge #usn7=(((`6esn` :`5esn`{`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})-[`4esn`?:usn1|#usn7{`1esn`:123456789 Ends With 9e1 Ends With ``,@usn5:0xabc Contains 0}]->(`` :`3esn`{#usn8:`3esn` Is Not Null Is Not Null,#usn8:$123456789[`3esn`..`5esn`][1e1..$`5esn`]})-[? *0xabc..]->(`6esn` {`5esn`:0x0 =~@usn5 =~01}))) Detach Delete [.0[@usn6..],`2esn`[`3esn`..],Count(*) Contains 12e12 Contains 0xabc][..{usn1:#usn7 Is Not Null Is Not Null,`6esn`:$12[0.0..]}][..(:usn2{usn1:_usn4[.._usn4],@usn6:@usn5 In .e0 In \"d_str\"})-[?:`8esn`|@usn6 *0xabc..{usn1:$#usn7[..$999][..9e1]}]-(:`6esn`:`3esn`{@usn6:#usn8 Is Not Null,usn2:1e1 Is Null})-[usn1{`1esn`:`7esn` Contains .0 Contains #usn8}]->(_usn3 {usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`4esn`:1.e1 Is Null Is Null})],Extract(_usn4 In 12.e12 Is Null Is Null Where `2esn` Is Null Is Null|0X7[$`6esn`..0e0])[(`7esn` {`8esn`:Count(*) Is Null Is Null,@usn5:.e0 Ends With $`1esn` Ends With 1000})<-[usn1?]-(:`7esn`{usn2:0e0 Is Null})<-[`7esn`?]->(:`2esn`:@usn5{usn2:$`3esn` Ends With @usn6 Ends With 123.654})..] Union All Merge `3esn`=((#usn8 :`7esn`{`5esn`:$#usn8[0e0..][07..]})<-[{`4esn`:010 In $@usn5 In `5esn`,#usn7:$`7esn` Is Null Is Null}]-(:`3esn`{`1esn`:Count(*) Ends With $#usn8 Ends With 0Xa})) On Match Set `5esn` =9e12 =~0.12 =~0.0,`7esn` =999 Contains $`7esn` Contains usn2,usn1+=Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 123.654 Is Not Null Is Not Null)[{usn1:$7[$12]}][Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where \"d_str\"[..$_usn3])] Return Distinct *,$`1esn` Starts With True Starts With @usn5,.e0[123456789..][$`2esn`..] As #usn8 Order By ``($#usn7[$`3esn`..$999]) Starts With {``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]} Ascending,12e12 In Null Asc,0.12[123456789..] Desc Skip (@usn5 :`1esn`:@usn6{@usn5:`4esn` Is Not Null,`3esn`:.e1 =~usn2 =~`7esn`})<-[#usn7?:#usn7|`5esn` *01..7{`2esn`:.e0 =~01 =~9e12,#usn8:$123456789 Starts With `6esn` Starts With 123.654}]-(`2esn` )-[ *999]->(_usn3 {_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null})[..Extract(#usn8 In 07['s_str'][$@usn6] Where _usn4[.._usn4])][..Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where usn2[.e1..][01234567..])] Create _usn4=((`` {``:0.12 Contains 0x0 Contains @usn5})),(((`4esn` {_usn3:7 Contains 1000 Contains $usn1})<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(_usn3 :@usn5{`2esn`:1.e1[#usn7][1.e1]})<-[`5esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]}]->({_usn3:.e12 =~\"d_str\" =~@usn5})))"),
    octest:ct_string("Delete 1.e1 =~01234567,$usn2 Is Not Null Is Not Null,`7esn` Is Null"),
    octest:ct_string("Remove (#usn7 {`3esn`:`` Contains 010 Contains $1000})-[usn1{`1esn`:`7esn` Contains .0 Contains #usn8}]->(:`4esn`:usn2{_usn3:Null Is Not Null Is Not Null,`4esn`:$1000 Is Not Null})<-[``?:usn1|#usn7]-(:usn2{usn1:12 Is Null Is Null}).#usn7!,[`3esn` In 999 Where $`5esn`[.e1][#usn8]].`3esn`? With  *,_usn3 =~$12 As `2esn` Skip $999[9e0..010][999..010] Union All Return Distinct Single(`5esn` In $usn2 Contains $`1esn` Where True Contains .e1 Contains `2esn`) In None(`3esn` In False In $`2esn` In 1e1 Where #usn7[.12][usn2]),`` In usn1 In 01234567,$`3esn` Ends With 123456789 Ends With 0.e0 As `7esn` Skip [`6esn` In 0x0[9e0..] Where 01234567[..`6esn`][..``]|01 Is Null] Starts With usn1(Distinct 0e0[...e1],$usn2 Ends With 0 Ends With 12.0) Starts With {@usn6:$usn1 Is Not Null Is Not Null,`7esn`:0x0 In 0X0123456789ABCDEF} Union Detach Delete [9e12 In 123.654 In True,`6esn` In $``][..All(`7esn` In $`8esn`[0.12][12] Where @usn5[..$999][..$0])][..Filter(`6esn` In .e0['s_str'..][$`8esn`..] Where \"d_str\" Ends With $1000 Ends With usn2)],0x0 Is Not Null Is Not Null Return 0Xa Is Null Is Null Skip .e1 =~\"d_str\" =~'s_str'"),
    octest:ct_string("Match ((:#usn8:#usn7{`8esn`:0Xa[Count(*)][0xabc]})<-[`2esn`?:`3esn`|_usn4]-(@usn5 :`5esn`)) Detach Delete usn1[0X7..],`7esn`[`8esn`][#usn7],$`2esn` Starts With 9e12 Create (usn1 :`2esn`:@usn5{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc})<-[#usn8:`3esn`|_usn4*..{``:9e0 Is Null Is Null}]->(:@usn5{#usn7:0x0 In 0X0123456789ABCDEF,`2esn`:0Xa[Count(*)][0xabc]}),`4esn`=(`1esn` {_usn3:12.0 In 07,`2esn`:01234567[..`6esn`][..``]}) Union All With Distinct $999 Ends With $`` Ends With 07 As @usn5,True Contains .e1 Contains `2esn` As @usn6,Filter(usn1 In 123.654 =~.e0 =~9e0 Where 123.654[$`1esn`])[(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})<-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-({@usn6:`5esn` Ends With $999})..[`2esn` In $``[$#usn8] Where \"d_str\" Starts With _usn4 Starts With $_usn4|$usn1[#usn8..`8esn`][7..`4esn`]]] As _usn4 Skip False In $`2esn` In 1e1 Limit 0x0 Is Not Null Return *,{#usn8:.e0 Ends With $`1esn` Ends With 1000}[Filter(#usn8 In 07['s_str'][$@usn6] Where $12[0.0..])][Filter(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..])],$_usn3 =~`1esn` Order By $usn2[$`4esn`..$`2esn`] Desc Skip .e1 =~\"d_str\" =~'s_str' With Distinct *,$123456789[..`3esn`][..`7esn`] As #usn7,[9e12 In 123.654 In True,`6esn` In $``][..All(`7esn` In $`8esn`[0.12][12] Where @usn5[..$999][..$0])][..Filter(`6esn` In .e0['s_str'..][$`8esn`..] Where \"d_str\" Ends With $1000 Ends With usn2)] Order By 12.0 In 07 Ascending Limit {#usn8:.e0 Ends With $`1esn` Ends With 1000}[Filter(#usn8 In 07['s_str'][$@usn6] Where $12[0.0..])][Filter(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..])] Where `8esn` Starts With $12 Starts With $1000"),
    octest:ct_string("Remove Any(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where @usn5['s_str'..$`2esn`]).``? With Distinct *,$`5esn` Starts With .0 Starts With 123.654 As @usn6,$`3esn`[_usn3] As #usn8 Order By $#usn7 Contains 9e12 Contains 0e0 Desc Skip 0X0123456789ABCDEF Is Not Null Limit `4esn` Is Not Null"),
    octest:ct_string("With  *,.12 As usn1 Limit 0.e0 Contains 9e1 Contains 9e0 Delete $`3esn`[9e0..0.0][_usn4..123456789] Union Optional Match (((`4esn` :`3esn`)-[?:`6esn`]->(`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})-[`2esn`? *7]->(usn1 :`8esn`{`5esn`:$usn1 Starts With Null Starts With $``,`5esn`:0 Contains $@usn5}))) Optional Match #usn7=((#usn7 :`5esn`)<-[`2esn`?:`5esn`|:`1esn`]->(:usn2)),((_usn3 :`6esn`:`3esn`{`7esn`:1000 Ends With 01234567 Ends With usn1})-[usn2?:_usn4|_usn3{#usn8:12.0[`3esn`][_usn3]}]-(usn2 :`4esn`:usn2{`3esn`:@usn5[$`1esn`..][$7..]})<-[usn2:`3esn`|_usn4]-(usn2 :@usn6{@usn5:#usn8[True..#usn7][01..@usn5]})) Union Detach Delete 1000 Starts With 0x0,Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 9e1 Contains _usn3|.0[01234567])[[$@usn6[..``],12 Is Null]][Filter(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 9e12[$123456789..$usn2])],$#usn8[0xabc..usn2]"),
    octest:ct_string("Remove Any(`6esn` In 1000[12.e12][#usn7] Where usn1[9e1..])._usn3! Union All Return Distinct .e1 =~$#usn8 Order By [`3esn` In @usn6[..\"d_str\"][..01] Where `1esn`[$7][0Xa]|.e0 Contains 999] In (_usn4 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8) Descending,None(`3esn` In False In $`2esn` In 1e1 Where .0[@usn6..]) Is Null Is Null Asc,usn1[9e1..] Ascending Remove (#usn8 :`4esn`:usn2)<-[:#usn7|`5esn`*{`8esn`:01[$0],``:0xabc Is Not Null Is Not Null}]-(`1esn` {#usn7:$`7esn`[`2esn`]}).`3esn`? Union Merge (`4esn` {@usn6:_usn4[$`8esn`.._usn3][.0..$@usn6]})<-[@usn5?:_usn4|_usn3 *1000..01234567]->({@usn6:$#usn8[0e0..][07..]})<-[@usn5?:usn2|:``*..]->(`7esn` {#usn7:1e1[`3esn`]}) Match #usn8=((`` :usn2)<-[_usn4?:`3esn`|_usn4 *7]-(`5esn` :usn1:``)) Create #usn8=((usn1 {@usn5:12e12 Ends With `6esn`,_usn4:\"d_str\" Starts With _usn4 Starts With $_usn4})-[`1esn`?]->(:#usn7{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})),((`8esn` :`4esn`:usn2{`5esn`:$0[`5esn`][9e12],``:#usn7[False..][123.654..]})-[:`5esn`|:`1esn`]-(`3esn` :`7esn`$`6esn`)-[`1esn`?:`3esn`|_usn4*..]->(_usn3 ))"),
    octest:ct_string("Unwind [999 Is Not Null,\"d_str\" Starts With _usn4 Starts With $_usn4,@usn5[01234567..]] Contains Any(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where #usn7 In #usn7) As `4esn` Merge ((:@usn5{``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]})<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(`4esn` :`5esn`)<-[?:@usn5|:@usn6]-({`1esn`:$`7esn` Ends With $_usn4 Ends With `5esn`})) Union All Merge ((:`8esn`)-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :_usn3:@usn5)) On Create Set `1esn`+=[01[..0X7],0 =~#usn8,$``[$_usn4][$`3esn`]][0e0..Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 0X0123456789ABCDEF[$_usn3][$_usn4])][None(`2esn` In $``[$#usn8] Where 0x0[$7..][`7esn`..])..[`5esn` Ends With 0x0,.0 =~$@usn5 =~1.e1]],`8esn`+=Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0) Is Not Null Union Merge usn2=((({@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})-[?:`2esn`|:`7esn` *0X7..0x0{usn2:0.12 Contains 0x0 Contains @usn5,_usn3:.e12 Contains $usn2 Contains $@usn6}]-(:`2esn`:@usn5{`4esn`:_usn3 =~$12,_usn4:.e1 =~usn2 =~`7esn`})-[`6esn` *00]-(:`8esn`{@usn5:1000 Starts With 0e0 Starts With 0,#usn7:$`5esn`[`4esn`..$`2esn`]}))) On Match Set `6esn`+=.e0[0X0123456789ABCDEF.._usn3][9e1..$`3esn`] On Match Set _usn3(1000 Starts With ``,.e1 =~\"d_str\" =~'s_str').@usn5? =7 =~$1000 =~$`5esn` Create `5esn`=(((`6esn` {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})<-[`5esn`:_usn4|_usn3 *0X7..0x0]-(#usn7 {`5esn`:00 Starts With usn1 Starts With Count(*),``:$999 Is Not Null})<-[`4esn` *123456789..]-(:`7esn`$#usn8))) Create usn2=(`7esn` {`8esn`:0 Is Null Is Null})<-[`4esn`?{`8esn`:$@usn5 Starts With Count(*) Starts With $usn1,#usn7:0.e0[.e12]}]->(:`6esn`:`3esn`{@usn6:#usn8 Is Not Null,usn2:1e1 Is Null})-[#usn8?:usn1|#usn7{`8esn`:$#usn7[`7esn`..][$`8esn`..]}]-(:`1esn`:@usn6)"),
    octest:ct_string("With Distinct $_usn3[0e0..][12.0..] As `3esn` Order By None(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1) In {`6esn`:1.e1[0..],usn2:`` Contains $_usn3 Contains 0e0} Descending,$123456789 In `8esn` In 0X7 Descending Skip 12.0[9e1..][Null..] Where 1e1 Contains 0Xa"),
    octest:ct_string("Delete _usn4[.._usn4],`7esn`(.e0 =~7 =~False,010 Is Null Is Null) Starts With [$_usn4 =~0X7,`4esn`,0.0 Ends With $usn1 Ends With $999] Starts With {@usn5:Count(*)[..$_usn3][..$usn2],@usn5:$1000[$usn1][.e1]} With Distinct $`8esn` Is Not Null Order By @usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`] Ascending Limit Extract(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where .12 Is Null|0X0123456789ABCDEF[$_usn3][$_usn4])[..All(usn1 In 123.654 =~.e0 =~9e0 Where False Starts With $123456789)] Where 0xabc =~01 Merge (:`7esn`{_usn3:01[$0]})<-[{usn1:0.e0 =~01234567 =~01234567,``:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}]-(`2esn` {_usn3:0[1e1..00]})-[_usn3:_usn3|`6esn`]->({usn2:0[1e1..00],@usn6:$`6esn`[.e12..$`6esn`][$#usn7...0]}) On Match Set [`6esn` In 1000[12.e12][#usn7] Where 0X0123456789ABCDEF Is Not Null].`8esn` =`1esn`[9e12..] On Create Set `6esn` =999[..01234567][..7],usn2:``:`6esn`"),
    octest:ct_string("Create #usn8=({usn1:False[$12],`1esn`:0.e0 Ends With $123456789})-[usn1:_usn3|`6esn`{#usn8:`6esn`[`7esn`..$_usn3][9e0..#usn8],`3esn`:\"d_str\" =~_usn3 =~0.0}]-({``:9e1[$#usn8],`4esn`:1.e1 Is Null Is Null})<-[@usn5?{`7esn`:`6esn` In $``}]->(usn1 {_usn3:#usn7 Ends With 0.12}) Merge (@usn6 {@usn6:$`7esn` Ends With $_usn4 Ends With `5esn`,usn1:123.654[0Xa..0x0][.12..12e12]})<-[?:`4esn`*]->(`5esn` {_usn3:1.e1 Is Null Is Null})<-[`7esn`? *01234567..123456789{_usn3:12.e12 =~.0}]->({``:9e1[$#usn8],`4esn`:1.e1 Is Null Is Null}) Create `3esn`=(:`4esn`:usn2$``),(((usn1 :usn1:``{@usn6:_usn3[0Xa..]})<-[`3esn`? *0..]-({_usn4:.e0[$`1esn`..][_usn4..],usn2:.12[0X0123456789ABCDEF..]})<-[:@usn5|:@usn6 *999{`5esn`:0x0 =~@usn5 =~01}]->(:@usn6{``:00 In 1000}))) Union Unwind $#usn8 =~$usn1 As `4esn` Delete 010[0e0][0xabc] With Distinct *,$0[00..] As `5esn` Skip 7[$`5esn`..`4esn`] Where .e12 =~\"d_str\" =~@usn5 Union Match (:#usn7)<-[#usn7:`1esn`|@usn6 *999{`4esn`:0X7[..`5esn`][..$`7esn`]}]-(:`1esn`:@usn6{`1esn`:12.0[9e12]['s_str'],`3esn`:$123456789 Is Not Null})-[@usn6?:_usn3|`6esn` *0..]->(:`1esn`:@usn6),`7esn`=(usn1 :``:`6esn`)<-[usn2?]->(:`1esn`:@usn6{@usn5:`8esn`[12.e12][`4esn`]}) Unwind 0.12[$usn1..$7] As _usn3"),
    octest:ct_string("Remove (@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]})-[:@usn5|:@usn6 *01234567..123456789]-(usn2 :`4esn`:usn2{`3esn`:@usn5[$`1esn`..][$7..]})<-[:usn2|:`` *0..]-(`6esn` ).`` With Distinct *,Count(*)[$999..0X0123456789ABCDEF][_usn4..`2esn`] As _usn4 Order By \"d_str\" =~Count(*) =~$usn2 Desc,`4esn`[$usn1..0xabc][123456789..usn1] Descending Limit $`7esn` Starts With 07 Starts With `1esn` Unwind 0e0 =~False =~.12 As @usn5"),
    octest:ct_string("Remove [Null Is Not Null Is Not Null,\"d_str\" Contains $999 Contains `2esn`,0X7[..True][..01234567]].usn2,[`2esn` In $#usn8 Starts With usn2 Starts With .12 Where Count(*)[..`5esn`]|0X0123456789ABCDEF In _usn3].usn1"),
    octest:ct_string("Create usn2=((#usn7 {@usn5:$`5esn` Contains $usn2})<-[{@usn6:1000 Ends With 01234567 Ends With usn1,usn2:01234567 In \"d_str\"}]-(#usn8 {`4esn`:$`3esn` Is Null})<-[{`5esn`:usn2[.e1..][01234567..],usn1:999 Is Not Null}]->(`5esn` :`8esn`{``:00 In 1000})),((({`3esn`:\"d_str\" Starts With _usn4 Starts With $_usn4,`6esn`:$`6esn`[.e12]})<-[_usn3?:#usn8|:`6esn` *0xabc..{@usn6:123.654[.e12..\"d_str\"],`8esn`:$usn2 Starts With $`7esn` Starts With _usn4}]->(#usn7 {`1esn`:$`4esn`[.e1..$usn1],``:0x0 =~`5esn` =~$`8esn`})-[@usn6 *00]->(#usn8 {`7esn`:12.e12[.12..$_usn3][0e0..9e0],`7esn`:0X7[..True][..01234567]}))) Union With  $#usn8[..9e12][..$`3esn`],Single(#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]) Contains Single(`5esn` In $usn2 Contains $`1esn` Where `2esn` Contains `3esn` Contains $@usn5) Contains {_usn3:0xabc Contains 0,`6esn`:$`6esn`[.e12..$`6esn`][$#usn7...0]} As _usn4,[#usn8 In 07['s_str'][$@usn6] Where 9e0 Starts With 0e0 Starts With $`5esn`] Starts With Extract(_usn4 In 12.e12 Is Null Is Null Where _usn4 In .0 In .12|usn2 In 1e1 In `4esn`) Starts With None(`3esn` In @usn6[..\"d_str\"][..01] Where 12[`5esn`..$`3esn`][0.12..usn2]) Order By $`3esn`[9e1..][`2esn`..] Desc,Filter(usn1 In 999 Where True[$usn1..12][``..\"d_str\"]) Starts With [$`2esn`[.._usn3]] Ascending,(_usn3 :#usn8:#usn7)<-[{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(`3esn` :`4esn`:usn2)[[`3esn` In 999 Where _usn4[1000..``]|Null[9e1][$`6esn`]]..({_usn4:$1000[$usn1][.e1]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`1esn` {`6esn`:07})<-[`5esn`?]-(@usn5 {`5esn`:0e0[...e1]})] Desc Limit (@usn5 :`2esn`:@usn5$#usn8)-[`6esn`?:`1esn`|@usn6 *0xabc..]->(:_usn4{_usn3:`1esn`[Null..]}) Starts With 12.0 Starts With Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) Where $`6esn`[00..$12]"),
    octest:ct_string("With Distinct *,$0[00..] As `5esn` Skip 7[$`5esn`..`4esn`] Where `4esn` Starts With $#usn8 Starts With $#usn8 Merge usn2=(`2esn` {_usn3:0[1e1..00]})-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2) On Match Set Extract(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $`6esn`[00..$12]).`2esn` =$@usn6[_usn4..][$1000..],#usn7 =usn1[..$123456789][..`1esn`] On Match Set `7esn`+=Extract(`5esn` In $usn2 Contains $`1esn` Where Count(*)[_usn3..])[..None(`5esn` In $usn2 Contains $`1esn` Where `3esn` Is Not Null Is Not Null)][..Extract(#usn8 In 07['s_str'][$@usn6] Where True)] Union With  0.0 Starts With Null Starts With .e12 As `4esn`,.12 Is Not Null As usn2 Skip `3esn`[$`7esn`..12] With Distinct ['s_str' Contains 999,0.12 Is Null Is Null] =~{`3esn`:7[$1000][1000]} =~Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $123456789[`1esn`..][`7esn`..]),$`5esn`[0][.12] Where 01 In 0.12 In .e12"),
    octest:ct_string("With Distinct *,None(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1)[None(#usn8 In 0x0[_usn4..] Where `5esn` Ends With $999)][@usn5($@usn6 Contains 0e0,9e12[\"d_str\"])] As `3esn` Order By $`4esn`[$1000..$`4esn`][0x0..$_usn3] Asc,{usn1:`` In 123.654 In 0.0,usn2:.e1 =~\"d_str\" =~'s_str'}[Filter(`3esn` In 999 Where 0 Contains $@usn5)..] Ascending Skip $`7esn`[..$`8esn`] Limit $`` Starts With 0x0 Where 0X7[..`5esn`][..$`7esn`] Create ((({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]})-[#usn8?:#usn7|`5esn`{`3esn`:`5esn`[usn1],`2esn`:`6esn` In $``}]->(:@usn5{usn1:12 Is Null Is Null})<-[?{``:$`6esn`[.e12]}]-(`4esn` :`3esn`))) Remove [9e0[123456789..0][12.0..@usn6],`8esn` Ends With $`1esn`,usn1[9e1..]].usn1,@usn5:``:`6esn`,(@usn6 :``:`6esn`{#usn7:$#usn7[9e12..12],@usn5:@usn6 Starts With #usn8 Starts With $#usn7})<-[? *..0X0123456789ABCDEF{#usn8:0X7[..`5esn`][..$`7esn`]}]->(usn1 :`2esn`:@usn5{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc}).`5esn`? Union All Merge (_usn3 :`1esn`:@usn6)<-[_usn3:@usn6]->({@usn6:`5esn`[0e0..],_usn4:$#usn8[0xabc..usn2]})-[_usn4 *0..]->(:#usn7{_usn3:7 Contains 1000 Contains $usn1}) On Create Set {usn1:$7[$12]}._usn4? =1000 =~$@usn5,Single(usn1 In 999 Where @usn6 Ends With 0.12 Ends With `3esn`).#usn7 =01 Ends With @usn6 Ends With $7 Create (((#usn7 {#usn7:999 Contains $`7esn` Contains usn2})-[@usn6?:`` *0Xa]-(@usn6 :@usn5{`8esn`:$@usn6 Contains 0e0})-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2))) Detach Delete _usn3($123456789[..`3esn`][..`7esn`]) Is Null,{_usn3:Null =~Count(*),@usn5:7 =~$1000 =~$`5esn`} Starts With {`1esn`:0.12 Is Null Is Null,#usn8:.e12 =~@usn5} Starts With {`7esn`:0Xa Contains 0x0 Contains $#usn8},0xabc[..$999] Union Remove None(#usn8 In 07['s_str'][$@usn6] Where 01234567 In \"d_str\").`8esn`?,None(`3esn` In 999 Where 07 Ends With $_usn4 Ends With 0.e0)._usn3!,usn1:usn1:`` Unwind 07 In $`1esn` In $#usn8 As `7esn` Unwind 0xabc[..$999] As `5esn`"),
    octest:ct_string("Delete 0x0 In 0X0123456789ABCDEF,0X0123456789ABCDEF Unwind [`3esn` In @usn6[..\"d_str\"][..01] Where 1.e1[$`7esn`]|123456789[..0]] =~[.e0['s_str'..][$`8esn`..],.e0 =~7 =~False] =~[`7esn` In $`8esn`[0.12][12] Where 9e0[123456789..0][12.0..@usn6]|`4esn`[$#usn7][$#usn7]] As `1esn` Merge (((@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})-[:`8esn`|@usn6*..]->(#usn8 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})-[? *..0X0123456789ABCDEF]-(@usn5 {@usn6:$123456789[12.0],#usn7:usn1 =~_usn4 =~$usn1}))) On Match Set [`5esn` In $usn2 Contains $`1esn` Where Count(*)[_usn3..]].#usn7! =`8esn`[.e1..],@usn5+=0xabc[.12..][#usn8..],`2esn` =$`1esn` In $#usn7 In 0X7"),
    octest:ct_string("Create (:`1esn`:@usn6{`5esn`:123.654[0Xa..0x0][.12..12e12],`8esn`:_usn3[..usn2]})<-[usn1:#usn8|:`6esn` *0xabc..]->(`8esn` :`1esn`:@usn6) Union All Create usn2=((_usn3 :@usn6{@usn5:0e0 =~False =~.12})-[?:@usn5|:@usn6 *0Xa]-(:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`})) Merge #usn7=(((`6esn` :`5esn`{`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})-[`4esn`?:usn1|#usn7{`1esn`:123456789 Ends With 9e1 Ends With ``,@usn5:0xabc Contains 0}]->(`` :`3esn`{#usn8:`3esn` Is Not Null Is Not Null,#usn8:$123456789[`3esn`..`5esn`][1e1..$`5esn`]})-[? *0xabc..]->(`6esn` {`5esn`:0x0 =~@usn5 =~01})))"),
    octest:ct_string("Return *,{`1esn`:$usn2 =~`6esn` =~`1esn`} Ends With 010 Ends With None(_usn4 In 12.e12 Is Null Is Null Where $`4esn` In 0x0),All(`7esn` In $`8esn`[0.12][12] Where @usn5[..$999][..$0])[..({usn2:1000 Starts With 0e0 Starts With 0,`6esn`:9e1[$`3esn`][$`1esn`]})<-[`3esn`:_usn3|`6esn`]->(usn1 :#usn8:#usn7)] Order By 0Xa[.e12..] Descending,@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`] Asc Remove #usn8($_usn4[$123456789..][12..]).`2esn`! Union Merge #usn8=(:@usn5{_usn4:$`5esn`[0][.12]})<-[@usn5?{usn1:7 Ends With `3esn` Ends With $`2esn`}]-(_usn4 ) On Match Set usn2+=12e12 In Null Union All Match `4esn`=((({@usn5:.e12 Is Not Null Is Not Null,_usn3:$1000[..`6esn`][..123456789]})-[{usn1:Count(*)[..12][..$999],#usn8:usn1 In 010}]->(`1esn` :`8esn`)<-[`8esn`:`7esn` *0..]->(`1esn` {`5esn`:$`7esn` Ends With $_usn4 Ends With `5esn`,#usn8:'s_str'[$#usn8]}))),`3esn`=(((`2esn` :_usn4{`7esn`:`2esn`[`3esn`..],`6esn`:.12 Is Not Null})<-[`1esn`?:`3esn`|_usn4*..]-(:`6esn`:`3esn`{`3esn`:123.654[0Xa..0x0][.12..12e12]})-[?:`8esn`|@usn6*{``:0.e0 Contains $123456789 Contains 123456789,`4esn`:#usn7 Is Not Null Is Not Null}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]}))) Where $#usn7[123456789..][$`4esn`..] With  [0Xa[..$`2esn`][..00]] Starts With (@usn6 )-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(:`7esn`{`2esn`:.e12 Is Not Null Is Not Null,`4esn`:_usn4[1000..``]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`6esn` ) As #usn8,[123.654 =~.e0 =~9e0] Starts With {`8esn`:0X7[0xabc][$1000]} Starts With [00['s_str']],$`1esn` Skip None(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1) In {`6esn`:1.e1[0..],usn2:`` Contains $_usn3 Contains 0e0} Limit $7 =~`4esn` =~$7"),
    octest:ct_string("Remove {`8esn`:$@usn5 Starts With Count(*) Starts With $usn1,#usn7:0.e0[.e12]}.`4esn`!,[`5esn` In 1e1 =~$`8esn` =~`1esn` Where $_usn4[False..@usn6][`4esn`..$1000]].`1esn` Remove #usn8(.e0 Is Not Null).`` With Distinct $_usn3[0e0..][12.0..] As `3esn` Skip 123456789 =~usn2 =~0.0 Limit 0x0 Contains .0 Union All Return *,$``[$_usn4][$`3esn`] Limit @usn5[$`1esn`..][$7..] With  0Xa Contains 12.e12 As `6esn` Limit _usn3 =~$12 Where 1.e1[0..] Union All Unwind 999 Is Not Null As #usn8 Create ``=((:_usn3:@usn5)-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :_usn3:@usn5)) Remove Filter(`3esn` In False In $`2esn` In 1e1 Where `2esn`[``..]).usn2,[$12[0.0..],123456789[$_usn4..]].`2esn`!,Single(`3esn` In False In $`2esn` In 1e1 Where _usn3[9e0..$123456789][0X7..999])._usn4!"),
    octest:ct_string("Optional Match `4esn`=((`8esn` :`4esn`:usn2{`5esn`:$0[`5esn`][9e12],``:#usn7[False..][123.654..]})<-[`4esn`{#usn8:123456789[..0],#usn8:.e12 =~\"d_str\" =~@usn5}]-(:``:`6esn`)) Match `2esn`=((`5esn` {`1esn`:999 Ends With $`4esn`})<-[`7esn`?]->(:``:`6esn`{`5esn`:_usn3 =~$12})-[?:usn2|:`` *7]-(`1esn` {@usn6:`1esn`[$7][0Xa]})),`2esn`=(@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8}) Delete `8esn`['s_str'..],{`8esn`:Count(*) Is Null Is Null,@usn5:.e0 Ends With $`1esn` Ends With 1000} Is Not Null Union All With Distinct *,#usn7[.12][usn2] Order By [`6esn` In 1000[12.e12][#usn7] Where 0X0123456789ABCDEF Is Not Null] Is Null Desc,0.e0 Starts With $`6esn` Descending,0xabc Ends With Count(*) Ends With 0x0 Descending Skip 0X7 Contains 12.0 Where $0[1e1][`4esn`]"),
    octest:ct_string("Unwind (_usn3 {_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null})-[`5esn`?:_usn4|_usn3{@usn5:7 =~False,_usn3:999 Ends With $`4esn`}]->(:`1esn`:@usn6{`8esn`:$`8esn` Contains $`2esn` Contains False})[..12.e12][..Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where usn2[.e1..][01234567..])] As @usn6 Create (@usn6 {``:12.e12 Contains 's_str' Contains 0.12})-[:@usn5|:@usn6{#usn7:0.12 Is Null Is Null,@usn6:12e12 Ends With $_usn4 Ends With $`2esn`}]->(:`7esn`{usn1:1000 Starts With 0x0,_usn4:$usn2 In 12}),usn2=(:`8esn`{_usn3:$`1esn` Is Not Null Is Not Null,`2esn`:0X7 Contains 12.0})<-[`8esn`?:@usn6 *999]->(:#usn8:#usn7{`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]}) Union Unwind 00[$@usn5][0X7] As `8esn` Merge ``=(((:#usn7{_usn4:\"d_str\"[7..$999]})-[#usn8:@usn5|:@usn6 *0..{`6esn`:`6esn` In $``}]->(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})<-[`4esn`?]->(@usn6 :``:`6esn`{#usn7:9e1 Contains _usn3}))) On Match Set {usn1:$7[$12]}._usn4? =1000 =~$@usn5,Single(usn1 In 999 Where @usn6 Ends With 0.12 Ends With `3esn`).#usn7 =01 Ends With @usn6 Ends With $7 Union All Unwind 0.e0 In `2esn` As #usn8 Remove _usn4(Distinct 00[0X7..9e12]).usn1!,[1e1 =~$`8esn` =~`1esn`].`3esn`? Unwind 0.e0 In `2esn` As #usn8"),
    octest:ct_string("Unwind $`5esn`[`4esn`..$`2esn`] As `5esn` Merge (((usn2 {`1esn`:`7esn` Is Null Is Null})-[?:_usn4|_usn3]->(:_usn3:@usn5{`6esn`:$`8esn` Ends With #usn8,`8esn`:123456789 Ends With 9e1 Ends With ``})<-[`5esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]}]->({_usn3:.e12 =~\"d_str\" =~@usn5}))) On Match Set @usn5+={``:False Starts With $123456789,#usn8:7 =~False} Is Null Is Null On Match Set _usn3+={_usn3:`1esn`[..$#usn7]} Contains Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1) Contains [$1000[00..],$`6esn`[.e12..$`6esn`][$#usn7...0],0Xa[..1.e1]],_usn3 =[@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`],12e12 Ends With $_usn4 Ends With $`2esn`][Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where _usn4[.._usn4])][$@usn5],usn1+=Count(*)[..$_usn3][..$usn2] Union With Distinct *,`5esn` In $usn1 In `4esn` As @usn6,.0 Ends With $`4esn` Ends With @usn6 Order By {`3esn`:$_usn4[False..@usn6][`4esn`..$1000],`1esn`:$`7esn`[`2esn`]} In All(`3esn` In False In $`2esn` In 1e1 Where .0[@usn6..]) Asc Skip $7 Is Null Where 0x0 In 0X0123456789ABCDEF With  .e0 Is Not Null,01 In $7 In $1000 As #usn7,$0 Starts With `5esn` Starts With 0 Skip .e1[`2esn`..$`8esn`] Where True Unwind (_usn3 {usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`4esn`:1.e1 Is Null Is Null})-[`1esn`?:`1esn`|@usn6 *12]->(`8esn` :@usn6)[({usn1:$usn1 Starts With Null Starts With $``,@usn5:0x0[01234567..Null][0Xa...e12]})<-[ *..0X0123456789ABCDEF]->(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]})..] As `7esn`"),
    octest:ct_string("Unwind #usn7[@usn6..] As #usn8 Create (usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[@usn6{_usn4:$`` Starts With 0x0}]-(usn2 :`7esn`),(((`` :`5esn`{`5esn`:_usn3[0Xa..],usn1:1.e1 Ends With 0x0 Ends With 1e1})<-[`6esn`{`3esn`:`2esn` Contains `3esn` Contains $@usn5}]-(`4esn` :`2esn`:@usn5{#usn8:$#usn7[9e12..12]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`6esn` )))"),
    octest:ct_string("Unwind Filter(`6esn` In 0x0[9e0..] Where $123456789 In 010 In $`8esn`) In ``(Distinct 0X0123456789ABCDEF In _usn3) In (_usn3 {usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`4esn`:1.e1 Is Null Is Null})-[`1esn`?:`1esn`|@usn6 *12]->(`8esn` :@usn6) As `1esn` With Distinct 0x0[$7..][`7esn`..] As _usn4 Order By [`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where .0 =~$@usn5 =~1.e1] =~{@usn6:0 Is Null Is Null} =~count(Distinct Null[9e1][$`6esn`],`4esn` Starts With `8esn`) Desc,{`7esn`:usn2 Starts With 00}[(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})<-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-({@usn6:`5esn` Ends With $999})..][(:`1esn`:@usn6{_usn3:$usn2 =~`6esn` =~`1esn`,`6esn`:0[1e1..00]})-[{_usn4:$`8esn` Contains .0 Contains 0.12}]->(:usn1:``{_usn4:1000[12.e12][#usn7]})-[@usn6 *00]->(`4esn` {_usn4:$`2esn`[$``..12e12]})..] Ascending,$#usn8[.e1][`2esn`] Asc Skip 00[$12...e0] Limit $@usn6 Contains 0e0 Union All Optional Match ((`` {_usn4:False[...e0][..$#usn8],`4esn`:.e12[..$_usn4][..#usn7]})<-[? *..010{usn1:123456789[$_usn4..]}]->(@usn5 {`2esn`:$#usn7[`7esn`..][$`8esn`..],`3esn`:0.12['s_str'..$0][$usn1..9e0]})) Create ``=(_usn4 )-[ *0xabc..{``:0xabc =~01,`7esn`:$#usn7[123456789..][$`4esn`..]}]-({#usn7:1e1[`3esn`]}),`8esn`=(@usn6 {`1esn`:$#usn8 Starts With usn2 Starts With .12,@usn6:07[$`8esn`]})<-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]-(:`4esn`:usn2{`2esn`:0Xa Contains $`6esn`})"),
    octest:ct_string("Merge @usn5=((_usn3 {usn2:0})-[`7esn`? *0Xa{`3esn`:Count(*)[_usn3..]}]->({usn1:$123456789[`4esn`..],usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`]})) On Create Set `3esn`+=1.e1[$`7esn`],[.e0 Is Not Null,9e1 Contains 07,True[7][``]].#usn7 =0e0['s_str'] On Create Set `5esn` =9e12 =~0.12 =~0.0,`7esn` =999 Contains $`7esn` Contains usn2,usn1+=Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 123.654 Is Not Null Is Not Null)[{usn1:$7[$12]}][Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where \"d_str\"[..$_usn3])] Union Return Distinct *,Any(#usn8 In 07['s_str'][$@usn6] Where $`7esn`[usn2]) In [`6esn` In 0x0[9e0..] Where `5esn`[usn1]] In {_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]} As `5esn` Limit $@usn6 Contains `5esn` Contains .e12 Unwind None(#usn8 In 0x0[_usn4..] Where #usn8 Is Not Null) Is Not Null As @usn5"),
    octest:ct_string("With  0X7[..True][..01234567] As `7esn`,`5esn`[7][$_usn4] Skip `4esn` Ends With $12 Ends With 0.e0 Detach Delete [.e0 =~7 =~False,0e0 Is Not Null] =~(`5esn` :`8esn`{`1esn`:`7esn` Contains .0 Contains #usn8})<-[`8esn` *0..$12]-(:`2esn`:@usn5{#usn8:0.e0 Contains @usn5 Contains 0X7,`5esn`:0x0[9e0..]})-[_usn3:_usn3|`6esn`]->({usn2:0[1e1..00],@usn6:$`6esn`[.e12..$`6esn`][$#usn7...0]}) =~(`7esn` {`2esn`:9e0[$@usn6]})<-[``?:#usn8|:`6esn`]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]}),True Ends With $@usn6"),
    octest:ct_string("Match ((@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]})-[? *0xabc..{`3esn`:.e12[$_usn4..0],usn1:00[$0..usn2][$_usn4..$999]}]->(@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]})<-[_usn3:`3esn`|_usn4 *0Xa]-({`4esn`:Count(*)[..$_usn3][..$usn2]})),_usn4=(({usn2:$`3esn`[9e0..0.0][_usn4..123456789]})) Where \"d_str\" Is Not Null"),
    octest:ct_string("Delete usn1[9e1..],9e1[$#usn8] Return *,usn2 Starts With 00,Any(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where @usn6 Ends With 0.12 Ends With `3esn`) Contains [`5esn` In $usn2 Contains $`1esn` Where Count(*)[$1000..01]|9e1[..01234567][..`4esn`]] Contains (`3esn` {#usn8:#usn7 =~$`8esn`})-[usn2?:#usn8|:`6esn` *7]->(`6esn` :`5esn`{`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})-[?:`2esn`|:`7esn` *0..{`4esn`:010 In $@usn5 In `5esn`,#usn7:$`7esn` Is Null Is Null}]->(:`6esn`:`3esn`{`3esn`:123.654[0Xa..0x0][.12..12e12]}) Order By $_usn4 Starts With 0.e0 Starts With $12 Ascending Limit `8esn` Starts With $usn2 Optional Match ((usn2 :@usn6{@usn5:#usn8[True..#usn7][01..@usn5]})<-[`2esn`?:`6esn` *0xabc..]-({@usn6:'s_str' Ends With $7})<-[:@usn6]->(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null})) Where $usn2 Ends With 0 Ends With 12.0"),
    octest:ct_string("Merge _usn4=(((:#usn8:#usn7{`8esn`:12e12 Ends With 0e0})<-[_usn3?:`` *..010{usn2:`7esn`[_usn4..][Count(*)..]}]->(`8esn` :``:`6esn`{#usn7:$`3esn` Is Null})<-[@usn5{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(:`5esn`{@usn5:True Contains $`` Contains 01234567}))) On Create Set _usn4+=(usn1 {@usn5:12e12 Ends With `6esn`,_usn4:\"d_str\" Starts With _usn4 Starts With $_usn4})<-[?:#usn7|`5esn`{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}]->(@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})<-[?:`1esn`|@usn6]->(`6esn` :`2esn`:@usn5) Is Null,`5esn`+=.12[usn1],`8esn`+=usn1[..Count(*)][..`8esn`] On Match Set `3esn`+=07 =~0.e0,@usn5 =$`1esn`[``..123456789][010..1.e1],`1esn`($`7esn` Ends With $_usn4 Ends With `5esn`)._usn3 =[$@usn6[..``]] In [0.e0 Contains $1000 Contains 7,$`6esn` Starts With usn1] In {@usn5:9e1 Starts With 12.e12 Starts With 010} Merge `2esn`=(({`7esn`:Count(*)[..`5esn`],`2esn`:.e12[..$_usn4][..#usn7]})-[_usn4?{`3esn`:1e1[`3esn`]}]-({`2esn`:``[0X7..][$@usn6..],@usn6:usn1[..`7esn`][..$`8esn`]})-[?:`2esn`|:`7esn` *0..{`4esn`:010 In $@usn5 In `5esn`,#usn7:$`7esn` Is Null Is Null}]->(`2esn` {_usn3:0[1e1..00]})) On Create Set usn1:`1esn`:@usn6,`8esn` =$123456789[`1esn`..][`7esn`..] On Create Set `7esn` =0.e0 =~$@usn5,`6esn`(Distinct #usn8 Is Not Null)._usn4 =1000 Is Not Null Union All Optional Match _usn3=(usn2 :#usn8:#usn7{@usn5:`8esn` Ends With $`1esn`,#usn8:\"d_str\" Ends With $1000 Ends With usn2}) Match `5esn`=((@usn5 {`5esn`:0e0[...e1]})<-[`8esn` *0..$12]-(:`2esn`:@usn5{#usn8:0.e0 Contains @usn5 Contains 0X7,`5esn`:0x0[9e0..]})<-[:`3esn`|_usn4]->(_usn3 {_usn4:usn2[9e0..0.e0][@usn5..`4esn`],_usn4:.e0['s_str'..][$`8esn`..]})),`2esn`=(@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8}) Create `1esn`=((:#usn7{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]})),(((:#usn7{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})-[{usn1:Count(*)[..12][..$999],#usn8:usn1 In 010}]->(:`7esn`{#usn8:12e12 Ends With `6esn`,_usn4:0Xa Contains $#usn8 Contains `5esn`})-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]->(_usn3 {`3esn`:$@usn5 Is Not Null Is Not Null})))"),
    octest:ct_string("Create `4esn`=((:`8esn`)-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :_usn3:@usn5)),`6esn`=({@usn6:$@usn5 =~$usn2 =~True,`4esn`:$#usn8 =~7 =~.12})<-[:@usn5|:@usn6 *01234567..123456789]->(`5esn` :``:`6esn`)<-[@usn5?:@usn6 *..010]-(`7esn` :`6esn`:`3esn`) Match (_usn3 :@usn6{@usn5:0e0 =~False =~.12})-[?:``]->(@usn6 :``:`6esn`{#usn7:9e1 Contains _usn3}) Merge (:`1esn`:@usn6{`8esn`:$`8esn` Contains $`2esn` Contains False})-[:`5esn`|:`1esn` *..0X0123456789ABCDEF]->(usn2 :`1esn`:@usn6)<-[`5esn`?:`1esn`|@usn6{`5esn`:#usn8 =~$1000 =~$1000,`2esn`:0x0[$7]}]-(@usn5 {`2esn`:$#usn7[`7esn`..][$`8esn`..],`3esn`:0.12['s_str'..$0][$usn1..9e0]}) Union Optional Match `6esn`=((:#usn8:#usn7{`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]})) Remove $_usn3.`4esn`,(:`4esn`:usn2$``)<-[usn2?]->(usn2 {usn2:`7esn` Contains .0 Contains #usn8}).`3esn`!"),
    octest:ct_string("Delete Filter(`2esn` In $``[$#usn8] Where 0e0['s_str']) Contains [`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 7 =~False|`6esn` Is Not Null] Contains None(usn1 In 123.654 =~.e0 =~9e0 Where $123456789[..$`7esn`][..\"d_str\"]),$12[0.0..] Match (@usn6 {`4esn`:$#usn7 =~usn2 =~`3esn`,_usn4:01 In 0.12 In .e12}) Where $_usn4[$123456789..][12..] Union Unwind Null Is Null Is Null As `8esn` With Distinct 0[..07][..False] As `2esn` Limit $@usn5 Ends With 1.e1 Detach Delete $`1esn` Starts With False Starts With 1000,(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})<-[#usn7:``{`4esn`:0.e0 Is Not Null Is Not Null}]-(:`3esn`{usn2:$`3esn`[9e0..0.0][_usn4..123456789]})-[#usn7? *123456789..{`2esn`:999 Contains $`7esn` Contains usn2}]-($#usn7) =~$_usn3 =~Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 00[0X7..9e12]|$#usn7)"),
    octest:ct_string("Optional Match usn2=((_usn4 )<-[`7esn`?{@usn5:`4esn` Is Not Null,`3esn`:.e1 =~usn2 =~`7esn`}]-(:`4esn`:usn2{`2esn`:12e12 Ends With 0 Ends With $@usn6,``:`1esn`[Null..]})<-[?:#usn7|`5esn`{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]})),usn1=(`2esn` :``:`6esn`)<-[ *..0X0123456789ABCDEF]->(`1esn` {`5esn`:$`7esn` Ends With $_usn4 Ends With `5esn`,#usn8:'s_str'[$#usn8]}) Where $0[1e1][`4esn`] Union All Unwind Any(`2esn` In $``[$#usn8] Where $`4esn`[$1000..$`4esn`][0x0..$_usn3])[Filter(`6esn` In 0x0[9e0..])] As @usn6 Union Create ((({`7esn`:Count(*)[..`5esn`],`2esn`:.e12[..$_usn4][..#usn7]})<-[:@usn6]->(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null})<-[#usn7:``{`4esn`:0.e0 Is Not Null Is Not Null}]-(:`3esn`{usn2:$`3esn`[9e0..0.0][_usn4..123456789]}))),((`3esn` :`8esn`)<-[`2esn`?:`3esn`|_usn4]-(@usn5 :`5esn`)) Merge usn2=(:#usn8:#usn7{`6esn`:`5esn`[12.0]}) On Create Set {``:$`3esn` Is Null,`1esn`:$123456789[`1esn`..][`7esn`..]}._usn4 =`1esn`,[`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where _usn3[0Xa..]].@usn6 =$#usn8 Contains `5esn` Contains $#usn8,None(`3esn` In 999 Where $123456789 =~usn1 =~0xabc).`5esn`! =`5esn` =~`` On Match Set _usn3+={_usn3:`1esn`[..$#usn7]} Contains Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1) Contains [$1000[00..],$`6esn`[.e12..$`6esn`][$#usn7...0],0Xa[..1.e1]],#usn7+=$12[`3esn`][`3esn`],{_usn3:0Xa[..$`2esn`][..00]}.`5esn`? =[`6esn` In 1000[12.e12][#usn7] Where 12.0[9e12]['s_str']|0.e0 =~01234567 =~01234567] Ends With Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $`8esn`[0.12][12]) Ends With count(1000[Null][$`7esn`],$123456789[`3esn`..`5esn`][1e1..$`5esn`]) Remove {#usn8:1e1[\"d_str\"..],`2esn`:$#usn8 Ends With _usn4 Ends With usn2}.@usn5,Extract(`3esn` In 999 Where $0 Contains 7 Contains 1.e1).@usn5,{`4esn`:$#usn7[123456789..][$`4esn`..]}.`5esn`!"),
    octest:ct_string("Unwind $123456789[..$usn2] As @usn5 With Distinct 123456789 Ends With 9e1 Ends With ``,1.e1[$usn1..$`7esn`] Skip 12.0[`3esn`][_usn3] Limit [9e0 Starts With 0e0 Starts With $`5esn`] Contains {`6esn`:#usn7[False..][123.654..]} Optional Match ((#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]})),`7esn`=((:`1esn`:@usn6{`1esn`:12.0[9e12]['s_str'],`3esn`:$123456789 Is Not Null})) Union Create (`5esn` :#usn7)-[`5esn`?:@usn5|:@usn6 *7{`2esn`:$`8esn`[0.12][12],`6esn`:`` Contains $_usn3 Contains 0e0}]-(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]}) Union All With  *,123456789 Ends With 9e1 Ends With ``,0xabc[.12..][#usn8..] As `3esn` Order By $`3esn` Contains $12 Contains 1000 Descending,[0Xa[.e12..],'s_str' Contains 999,_usn4[.._usn4]][..Any(`6esn` In 0x0[9e0..] Where @usn5 In .e0 In \"d_str\")][..$usn2] Asc Skip [$`` Is Not Null Is Not Null,$#usn7[9e12..12],`7esn` Is Null Is Null][[#usn8 In 0x0[_usn4..] Where `8esn`[0x0..]]..] Limit 1000[$@usn6..][$#usn8..] Where $_usn3[0e0..][12.0..] Match (@usn6 {`4esn`:$#usn7 =~usn2 =~`3esn`,_usn4:01 In 0.12 In .e12}) Remove `5esn`:_usn3:@usn5,Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 9e0[0..1e1]).`5esn`!"),
    octest:ct_string("Return *,.e1[01234567],.e0[..$`5esn`][..``] As `8esn` Limit Single(`3esn` In @usn6[..\"d_str\"][..01] Where 12[`5esn`..$`3esn`][0.12..usn2])[[`6esn` In 0x0[9e0..] Where $#usn8[0e0..][07..]|0 Is Not Null Is Not Null]..][(`6esn` :usn1:``)<-[``?:usn1|#usn7]-(@usn5 :`2esn`:@usn5{@usn6:123456789 =~#usn8 =~$0})..] Union All Return $`1esn` =~`1esn` =~0X0123456789ABCDEF As _usn3,`1esn`[..$#usn7] Order By #usn7 Starts With 's_str' Starts With usn2 Desc"),
    octest:ct_string("Remove Single(_usn4 In 12.e12 Is Null Is Null Where .e0['s_str'..][$`8esn`..]).#usn8?,[12.e12[`2esn`..7]].`7esn`? Union All With Distinct Extract(`3esn` In 999 Where .e12 Is Null Is Null|$`7esn`[usn2])[Extract(usn1 In 999 Where 7 =~False|$usn2 Starts With 9e1 Starts With `7esn`)] As `8esn`,0Xa Contains $#usn8 Contains `5esn`,Any(`6esn` In 1000[12.e12][#usn7] Where True[$usn1..12][``..\"d_str\"])[..[_usn4 Starts With `6esn` Starts With $`8esn`,``[0X7..][$@usn6..],$usn2 Starts With 9e1 Starts With `7esn`]] As `5esn` Order By 0[..123456789][..False] Asc Skip $`3esn`[...0][..$#usn7] Optional Match #usn7=(`7esn` :`7esn`)-[{`5esn`:0.e0 =~01234567 =~01234567}]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]}),``=(((`6esn` {`5esn`:0x0 =~@usn5 =~01})<-[?{`5esn`:$1000 =~$`8esn` =~$`2esn`,_usn3:$`` Starts With 0x0}]->({`2esn`:``[0X7..][$@usn6..],@usn6:usn1[..`7esn`][..$`8esn`]})<-[`6esn`? *999]->(@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]}))) Create #usn7=(({_usn4:$`5esn` Starts With $`3esn` Starts With 1.e1,`3esn`:1000[Null][$`7esn`]})-[? *999]-({_usn3:123.654 Is Not Null Is Not Null})<-[usn1?:`8esn`|@usn6]->(#usn8 :#usn7{`2esn`:0.e0[.e12]})),((`` :usn1:``)-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->(`8esn` :#usn7)<-[?{`5esn`:$1000 =~$`8esn` =~$`2esn`,_usn3:$`` Starts With 0x0}]->(`2esn` :`5esn`{`1esn`:$@usn6 Ends With 0.0}))"),
    octest:ct_string("With  (`2esn` :#usn7{`1esn`:`4esn` Ends With 's_str' Ends With @usn6,`6esn`:$7 Ends With 12.e12 Ends With `1esn`})-[`3esn`? *0X7..0x0{`4esn`:$_usn4[$123456789..][12..]}]->(`7esn` {@usn6:0 =~#usn8})[{@usn5:'s_str' Contains 999,`6esn`:1000[12.e12][#usn7]}],`7esn` In `8esn` In 12 Skip 0.0 In usn1 In $1000 Where 123.654[$`1esn`] Remove usn1('s_str' Ends With $7,01[$0]).``?,[$_usn3 =~`1esn`,\"d_str\"[7..$999]].#usn8 Return Distinct *,(`7esn` {#usn7:1e1[`3esn`]})-[`3esn`]->(#usn8 {`7esn`:12.e12[.12..$_usn3][0e0..9e0],`7esn`:0X7[..True][..01234567]})-[:`1esn`|@usn6*..]->(:`8esn`{`8esn`:0X7 Contains 12.0,`3esn`:`4esn` Starts With `8esn`}) Is Not Null As @usn5,@usn6 Ends With 0.12 Ends With `3esn` As `2esn` Order By $`6esn`[00] Asc,All(`7esn` In $`8esn`[0.12][12] Where .e1 =~\"d_str\" =~'s_str') Ends With Any(usn1 In 999 Where $999[01234567][@usn5]) Ends With [01234567 Is Null Is Null] Desc,$#usn8[1.e1] Descending Skip Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) Ends With [1.e1[#usn7][1.e1],Null =~Count(*)] Ends With [#usn8[..0X0123456789ABCDEF][...0],$usn1 Is Not Null Is Not Null] Limit {@usn5:@usn5[..$999][..$0]} =~[`3esn` In @usn6[..\"d_str\"][..01] Where `1esn`[$7][0Xa]|.e0 Contains 999] =~[$usn2 Starts With $`7esn` Starts With _usn4] Union Detach Delete True[07],$`2esn` Is Not Null Is Not Null,None(usn1 In 0xabc Is Not Null Is Not Null Where 123456789 =~@usn5 =~$`5esn`) =~[`4esn` Ends With 's_str' Ends With @usn6] Unwind _usn3 =~$12 As `6esn` Match `8esn`=(((`1esn` {@usn6:`1esn`[$7][0Xa]})<-[`4esn`?]->(@usn6 :``:`6esn`{#usn7:9e1 Contains _usn3})<-[@usn5?:_usn4|_usn3 *..010{@usn6:$123456789[`1esn`..]}]-(`4esn` :``:`6esn`{#usn7:`2esn`[`3esn`..],usn2:$usn2 Starts With $`7esn` Starts With _usn4}))),`2esn`=((_usn4 :`6esn`:`3esn`)<-[usn1:#usn8|:`6esn` *0xabc..]->(`8esn` :`1esn`:@usn6)<-[:`5esn`|:`1esn`{#usn8:`7esn` Is Null,`4esn`:False[$12]}]->(_usn4 {`2esn`:1.e1 Is Not Null Is Not Null})) Where $`5esn` Is Not Null Union Merge `2esn`=(((:#usn7{_usn4:\"d_str\"[7..$999]})-[#usn8:@usn5|:@usn6 *0..{`6esn`:`6esn` In $``}]->(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})<-[`4esn`?]->(@usn6 :``:`6esn`{#usn7:9e1 Contains _usn3}))) On Create Set `8esn`+=$#usn7 Starts With $`1esn` Starts With 0.12,`8esn`+=$_usn4 =~0X7,@usn5+=$999[..0e0][..@usn6] Return Distinct 9e0[0..1e1] Order By (`1esn` :@usn5{`7esn`:usn2 In 1e1 In `4esn`,``:123456789 Ends With 9e1 Ends With ``})<-[`2esn`:``]->(`7esn` :_usn3:@usn5{_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null})-[`2esn`? *7]->(:#usn8:#usn7{#usn7:$`7esn`[`2esn`]})[[0X0123456789ABCDEF[$_usn3][$_usn4]]] Descending,Null[..$0][..12.0] Descending Limit {@usn5:Count(*)[..$_usn3][..$usn2],@usn5:$1000[$usn1][.e1]}[Single(`6esn` In 1000[12.e12][#usn7] Where $usn2 Contains $`1esn`)..{#usn7:usn1 Ends With .0 Ends With `4esn`,_usn3:$`1esn` Is Null}][[`7esn` In $`8esn`[0.12][12] Where usn1 In 010]..usn1(1e1 Is Null)]"),
    octest:ct_string("Return *,1000 =~$@usn5 Skip $123456789[..0.12] Delete `6esn`[False..],$usn2[`6esn`..],01 Ends With @usn6 Ends With $7 Remove [#usn8 In 0x0[_usn4..] Where `8esn`[12.e12][`4esn`]].#usn8!,[usn1 In 123.654 =~.e0 =~9e0 Where $usn2 Starts With $`7esn` Starts With _usn4].`2esn`?"),
    octest:ct_string("Merge (:`7esn`{_usn3:01[$0]})<-[{usn1:0.e0 =~01234567 =~01234567,``:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}]-(`2esn` {_usn3:0[1e1..00]})-[_usn3:_usn3|`6esn`]->({usn2:0[1e1..00],@usn6:$`6esn`[.e12..$`6esn`][$#usn7...0]}) On Match Set [`6esn` In 1000[12.e12][#usn7] Where 0X0123456789ABCDEF Is Not Null].`8esn` =`1esn`[9e12..] On Create Set `6esn` =999[..01234567][..7],usn2:``:`6esn` Match #usn7=(`7esn` {`2esn`:1.e1[#usn7][1.e1]})<-[:`5esn`|:`1esn`{#usn8:`7esn` Is Null,`4esn`:False[$12]}]->(`8esn` :`3esn`{`2esn`:$`8esn`[`7esn`],`4esn`:#usn8[1e1..]})<-[#usn8:@usn6]-(:_usn4{@usn6:'s_str' Contains 999}) Union All Return $`1esn` =~`1esn` =~0X0123456789ABCDEF As _usn3,`1esn`[..$#usn7] Order By #usn7 Starts With 's_str' Starts With usn2 Desc"),
    octest:ct_string("Optional Match ``=(((_usn3 :`1esn`:@usn6)<-[:@usn5|:@usn6 *01234567..123456789]->(`1esn` :`7esn`{`6esn`:1e1 In 12.e12})<-[``?:#usn8|:`6esn`{usn1:$#usn7[..$999][..9e1]}]->(`1esn` :`4esn`:usn2))),`5esn`=(:`4esn`:usn2{_usn3:Null Is Not Null Is Not Null,`4esn`:$1000 Is Not Null})-[?:`3esn`|_usn4 *01..7{@usn5:`4esn`}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]})<-[?:usn2|:`` *7]->(`` :_usn3:@usn5) Optional Match ``=((:`2esn`:@usn5{@usn5:`4esn`})),@usn5=(`` :_usn3:@usn5) Return *,(:`4esn`:usn2$``)-[`5esn`?:_usn4|_usn3{@usn5:7 =~False,_usn3:999 Ends With $`4esn`}]->(usn2 :``:`6esn`)<-[_usn3:`3esn`|_usn4]->(#usn7 :_usn4) Is Not Null,[`3esn` In False In $`2esn` In 1e1 Where `` Contains 010 Contains $1000|1000[12.e12][#usn7]] In [`3esn` In 999 Where `7esn` Is Null|$#usn8[0e0..][07..]] In Single(`5esn` In 1e1 =~$`8esn` =~`1esn` Where `8esn` Starts With $12 Starts With $1000) As `2esn` Limit All(`7esn` In $`8esn`[0.12][12] Where @usn5[..$999][..$0])[..({usn2:1000 Starts With 0e0 Starts With 0,`6esn`:9e1[$`3esn`][$`1esn`]})<-[`3esn`:_usn3|`6esn`]->(usn1 :#usn8:#usn7)] Union All Remove Extract(usn1 In 0xabc Is Not Null Is Not Null Where $``).`2esn` Match (_usn3 :@usn6{@usn5:0e0 =~False =~.12})-[?:``]->(@usn6 :``:`6esn`{#usn7:9e1 Contains _usn3})"),
    octest:ct_string("Remove All(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where .0 =~$@usn5 =~1.e1).`4esn`?,(`4esn` {@usn6:_usn4[$`8esn`.._usn3][.0..$@usn6]})<-[{usn1:0.e0 =~01234567 =~01234567,``:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}]-(`6esn` :_usn3:@usn5)<-[{`5esn`:usn2[.e1..][01234567..],usn1:999 Is Not Null}]->({`7esn`:`4esn` In $`2esn` In @usn5})._usn3?"),
    octest:ct_string("Return Distinct *,`4esn` In .12 In $#usn8,(`1esn` :`7esn`)-[`4esn`?:usn1|#usn7{`1esn`:123456789 Ends With 9e1 Ends With ``,@usn5:0xabc Contains 0}]->(:`7esn`{@usn6:`2esn`[``..]})[..{``:`` In 123.654 In 0.0}] Order By Extract(usn1 In 0xabc Is Not Null Is Not Null)[{#usn8:`6esn`[`7esn`..$_usn3][9e0..#usn8],`3esn`:\"d_str\" =~_usn3 =~0.0}..Filter(#usn8 In 0x0[_usn4..] Where #usn8[..0X0123456789ABCDEF][...0])][Single(`6esn` In 0x0[9e0..] Where $`3esn` Is Not Null)..None(#usn8 In 0x0[_usn4..] Where 0.e0 Is Not Null Is Not Null)] Desc,12.0 Contains 12.e12 Contains 0x0 Asc Skip $usn1[1e1..1e1] Unwind [.12 Is Null,$`7esn` =~$usn1 =~00][All(`3esn` In @usn6[..\"d_str\"][..01] Where `5esn`[12.0])..`3esn`(Distinct 7[$1000][1000])][[1000[12.e12][#usn7],`4esn`[Count(*)]]..[123.654 =~.e0 =~9e0,$@usn5 Is Not Null Is Not Null,$`` Starts With 0x0]] As `3esn` With  *,{`4esn`:Count(*)[..$_usn3][..$usn2]}[[`2esn` In $``[$#usn8] Where 0e0['s_str']|0x0 =~`5esn` =~$`8esn`]] Order By Count(*)[010..1.e1]['s_str'.._usn4] Ascending,$`8esn` Ends With #usn8 Ascending,07[..1e1][..$0] Descending Limit 12 Is Null Is Null Where 12.0[9e1..][Null..] Union All Match _usn3=(({_usn4:`7esn`[_usn4..][Count(*)..],`1esn`:01234567 In \"d_str\"})-[`2esn`:#usn8|:`6esn`]->(@usn5 :`2esn`:@usn5{@usn6:123456789 =~#usn8 =~$0})<-[:`5esn`|:`1esn`]->(:`4esn`:usn2$``)),_usn3=(usn2 :#usn8:#usn7{@usn5:`8esn` Ends With $`1esn`,#usn8:\"d_str\" Ends With $1000 Ends With usn2}) Where `5esn`[..123456789][..$999]"),
    octest:ct_string("Unwind $`8esn` Ends With #usn8 As `7esn` Union Delete 00[\"d_str\"][False],Extract(_usn4 In 12.e12 Is Null Is Null Where _usn4 In .0 In .12|usn2 In 1e1 In `4esn`) Contains None(`3esn` In @usn6[..\"d_str\"][..01] Where `4esn` In .12 In $#usn8) Contains Filter(`5esn` In $usn2 Contains $`1esn` Where usn2[Count(*)][$`1esn`]) Union Remove @usn6:#usn8:#usn7,Filter(usn1 In 0xabc Is Not Null Is Not Null Where 01234567[9e0][.0]).`4esn`!,{_usn4:False[...e0][..$#usn8],@usn6:0Xa[..1.e1]}.usn2?"),
    octest:ct_string("With Distinct 0x0[$7..][`7esn`..] As ``,#usn7[False..][123.654..],0xabc[..1e1] As `4esn` Order By _usn3 Ends With $`6esn` Ends With 0e0 Descending,_usn4[7..$999] Desc,0X0123456789ABCDEF[$_usn3][$_usn4] Desc Where 1.e1 Ends With 0x0 Ends With 1e1 Create `3esn`=((:`4esn`:usn2{_usn3:Null Is Not Null Is Not Null,`4esn`:$1000 Is Not Null})<-[ *..0X0123456789ABCDEF{@usn6:`4esn` Is Not Null,`2esn`:@usn6[.0]}]-(`3esn` :#usn8:#usn7{_usn3:$`1esn` Is Not Null Is Not Null,`2esn`:0X7 Contains 12.0})),`1esn`=((`5esn` {`1esn`:999 Ends With $`4esn`})<-[`7esn`?]->(:``:`6esn`{`5esn`:_usn3 =~$12})-[?:usn2|:`` *7]-(`1esn` {@usn6:`1esn`[$7][0Xa]}))"),
    octest:ct_string("Remove [`3esn` In @usn6[..\"d_str\"][..01] Where `1esn`[$7][0Xa]|7 In 1e1].#usn7? Merge (`6esn` :`2esn`:@usn5)<-[`1esn`?:_usn4|_usn3]-(`1esn` {@usn6:Null In 0xabc}) Union Delete (`7esn` :_usn4)-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2)-[{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]}]->(`3esn` :#usn7{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}) Contains {_usn3:12.e12 Contains 0X7 Contains Count(*)} Contains {usn2:@usn5[01234567..],usn1:0X0123456789ABCDEF Is Not Null},usn1 =~12 =~$0,(`2esn` {_usn3:.e1 Ends With $123456789})<-[?{usn2:9e0[0..1e1]}]->({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})[Any(`6esn` In .e0['s_str'..][$`8esn`..] Where Null In 0xabc)..Filter(usn1 In 123.654 =~.e0 =~9e0 Where Count(*) Contains 12e12 Contains 0xabc)][[$`` Is Not Null Is Not Null,$#usn7[9e12..12],`7esn` Is Null Is Null]..Extract(`5esn` In $usn2 Contains $`1esn` Where \"d_str\" Contains $999 Contains `2esn`|.e12[``][$1000])]"),
    octest:ct_string("Detach Delete Extract(`2esn` In $``[$#usn8] Where `1esn`[Null..])[[12.0[`3esn`][_usn3]]] Union Optional Match `2esn`=(#usn8 :`5esn`{_usn3:'s_str' Starts With $usn2,`2esn`:$`2esn` Starts With 9e12})<-[`2esn`:usn1|#usn7 *123456789..{`4esn`:Count(*) Ends With 7 Ends With 0,@usn5:.0[@usn6..]}]-(@usn5 {@usn6:$123456789[12.0],#usn7:usn1 =~_usn4 =~$usn1}),(((usn2 {`1esn`:`7esn` Is Null Is Null})-[?:_usn4|_usn3]->(:_usn3:@usn5{`6esn`:$`8esn` Ends With #usn8,`8esn`:123456789 Ends With 9e1 Ends With ``})<-[`5esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]}]->({_usn3:.e12 =~\"d_str\" =~@usn5})))"),
    octest:ct_string("With Distinct *,None(_usn4 In 12.e12 Is Null Is Null Where _usn4 In .0 In .12) Starts With {`4esn`:`8esn`[0x0..],usn2:$#usn8 =~7 =~.12} Starts With _usn3(Distinct usn1[$`1esn`..]) As #usn8,'s_str' Contains 999 Order By Filter(`6esn` In 1000[12.e12][#usn7] Where 01 Starts With $`5esn` Starts With 01234567)[[0.12['s_str'..$0][$usn1..9e0]]..All(`3esn` In 999 Where 07 Ends With $_usn4 Ends With 0.e0)][Filter(`3esn` In 999 Where $0 Contains 7 Contains 1.e1)..Extract(`3esn` In @usn6[..\"d_str\"][..01] Where 1.e1[$`7esn`]|01234567[9e0][.0])] Desc,[0.e0 Contains $123456789 Contains 123456789,`5esn` In 12.e12 In 1000] Starts With [123.654[.e12..\"d_str\"],1.e1[0..]] Starts With Extract(`2esn` In $``[$#usn8] Where $`5esn` Is Not Null|123456789[..#usn8]) Descending Limit Filter(`6esn` In 1000[12.e12][#usn7] Where $usn2 Contains $`1esn`) Union All Unwind .e1 =~$#usn8 As `1esn` Merge ``=((:``:`6esn`{@usn6:$`4esn`[$@usn5..`7esn`],`5esn`:_usn4 Starts With `6esn` Starts With $`8esn`})<-[`6esn`?:#usn8|:`6esn` *0X7..0x0{``:`6esn`[`7esn`..$_usn3][9e0..#usn8],`8esn`:.0[01234567]}]->(:@usn5{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2})) On Create Set Single(`3esn` In 999 Where 0.e0 Ends With #usn8).usn2 =`4esn` In .12 In $#usn8,Extract(usn1 In 999 Where 1e1 =~$`8esn` =~`1esn`|7 Starts With $@usn6).usn2? =Single(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where `` Contains $_usn3 Contains 0e0)[[`6esn` In .e0['s_str'..][$`8esn`..] Where `6esn` In $``|#usn7[.12][usn2]]..][[.e12[..#usn7][..9e12]]..],usn1 =$_usn4 Contains $`5esn` Contains @usn5 On Create Set @usn5+=(usn1 :`8esn`{`5esn`:$usn1 Starts With Null Starts With $``,`5esn`:0 Contains $@usn5})<-[:`3esn`|_usn4{usn1:$`6esn`[$`6esn`..][0X7..],@usn5:123456789 Starts With #usn8}]->(@usn6 {`1esn`:$#usn8 Starts With usn2 Starts With .12,@usn6:07[$`8esn`]})<-[`7esn`?:`` *0Xa]-(`1esn` :usn2{_usn3:$`1esn` Is Not Null Is Not Null,`2esn`:0X7 Contains 12.0})[{`7esn`:_usn3 Is Not Null,`1esn`:$0[@usn6..][.e12..]}..Single(`2esn` In $``[$#usn8] Where 0X7[..$0][..0.12])][Filter(#usn8 In 0x0[_usn4..] Where 0xabc[123.654][12])..All(`7esn` In $`8esn`[0.12][12] Where 's_str'[$#usn8])],#usn8+=Count(*) Starts With 01234567 Starts With 0x0 Union All Return Distinct *,Any(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where $0 Ends With .12) Is Null Order By 1000[Null][$`7esn`] Ascending,{`7esn`:usn2 Starts With 00}[(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})<-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-({@usn6:`5esn` Ends With $999})..][(:`1esn`:@usn6{_usn3:$usn2 =~`6esn` =~`1esn`,`6esn`:0[1e1..00]})-[{_usn4:$`8esn` Contains .0 Contains 0.12}]->(:usn1:``{_usn4:1000[12.e12][#usn7]})-[@usn6 *00]->(`4esn` {_usn4:$`2esn`[$``..12e12]})..] Ascending Skip None(`3esn` In False In $`2esn` In 1e1 Where .0[@usn6..]) Is Null Is Null Remove Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0e0 Starts With $@usn6 Starts With $7).@usn6!,[12e12 Ends With 0e0].`2esn`?"),
    octest:ct_string("Match `5esn`=((`1esn` {`7esn`:$7[`7esn`][123.654],@usn6:`1esn`[usn1]})-[:#usn7|`5esn`]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null})),usn2=(:#usn8:#usn7{`6esn`:`5esn`[12.0]}) Where 0.e0 Contains $1000 Contains 7 Create `8esn`=(((:usn1:``)<-[:@usn5|:@usn6 *01234567..123456789]->(`1esn` :`7esn`{`6esn`:1e1 In 12.e12})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`1esn` {`6esn`:07}))),`3esn`=(((`2esn` :_usn4{`7esn`:`2esn`[`3esn`..],`6esn`:.12 Is Not Null})<-[`1esn`?:`3esn`|_usn4*..]-(:`6esn`:`3esn`{`3esn`:123.654[0Xa..0x0][.12..12e12]})-[?:`8esn`|@usn6*{``:0.e0 Contains $123456789 Contains 123456789,`4esn`:#usn7 Is Not Null Is Not Null}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]})))"),
    octest:ct_string("Create `2esn`=(`1esn` {#usn7:$`7esn`[`2esn`]}),`5esn`=(((`6esn` {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})<-[`5esn`:_usn4|_usn3 *0X7..0x0]-(#usn7 {`5esn`:00 Starts With usn1 Starts With Count(*),``:$999 Is Not Null})<-[`4esn` *123456789..]-(:`7esn`$#usn8))) Create (({@usn6:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`5esn`:.12[usn1]})) Union All Delete \"d_str\" =~Count(*) =~$usn2,$@usn6 Is Null Is Null,Any(`2esn` In $``[$#usn8] Where $`4esn`[$1000..$`4esn`][0x0..$_usn3])[All(#usn8 In 0x0[_usn4..] Where $`` Starts With 0x0)..None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1e1 Contains 0Xa)][[$`` Starts With 0x0,.e1 =~\"d_str\" =~'s_str']..Any(usn1 In 0xabc Is Not Null Is Not Null Where usn1[$`1esn`..])]"),
    octest:ct_string("Return Distinct *,Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 00[0X7..9e12]) In [`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 1000 Starts With 0e0 Starts With 0] In (:`4esn`:usn2{`2esn`:0Xa Contains $`6esn`})-[`1esn`?:`1esn`|@usn6 *12]->({`6esn`:usn1[$`1esn`..],_usn4:$usn2 Contains $`1esn`})<-[?{`8esn`:$`7esn`[usn2],`1esn`:1000 Is Not Null}]-(#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]}),0 Is Null Is Null As #usn7 Order By 07 =~0.e0 Descending,$`3esn` Is Null Asc Skip 0.e0 Is Not Null Is Not Null Limit 0[0Xa..] Union All Match (`1esn` ),`2esn`=({@usn6:.12 In 01234567 In _usn4})-[:#usn8|:`6esn`]->(@usn5 {usn2:123.654 =~.e0 =~9e0,`3esn`:@usn6[.0]}) Where _usn4[.._usn4] Create `2esn`=(#usn8 :`5esn`{_usn3:'s_str' Starts With $usn2,`2esn`:$`2esn` Starts With 9e12})<-[`2esn`:usn1|#usn7 *123456789..{`4esn`:Count(*) Ends With 7 Ends With 0,@usn5:.0[@usn6..]}]-(@usn5 {@usn6:$123456789[12.0],#usn7:usn1 =~_usn4 =~$usn1}),(((usn2 {`1esn`:`7esn` Is Null Is Null})-[?:_usn4|_usn3]->(:_usn3:@usn5{`6esn`:$`8esn` Ends With #usn8,`8esn`:123456789 Ends With 9e1 Ends With ``})<-[`5esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]}]->({_usn3:.e12 =~\"d_str\" =~@usn5})))"),
    octest:ct_string("Optional Match ``=(_usn4 )-[ *0xabc..{``:0xabc =~01,`7esn`:$#usn7[123456789..][$`4esn`..]}]-({#usn7:1e1[`3esn`]}),`8esn`=(@usn6 {`1esn`:$#usn8 Starts With usn2 Starts With .12,@usn6:07[$`8esn`]})<-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]-(:`4esn`:usn2{`2esn`:0Xa Contains $`6esn`}) Union Remove None(`7esn` In $`8esn`[0.12][12]).`6esn`!,[`5esn` In $usn2 Contains $`1esn` Where 0e0['s_str']|`8esn` Contains 0X0123456789ABCDEF]._usn3?"),
    octest:ct_string("Create @usn6=(`7esn` :`7esn`)-[?:`` *07{`1esn`:$#usn7[$`3esn`..$999]}]->(_usn3 {_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null})"),
    octest:ct_string("Delete usn2[$``..1e1] Unwind Any(`6esn` In 1000[12.e12][#usn7] Where 12.e12 Is Not Null) Contains All(#usn8 In 0x0[_usn4..] Where #usn8[..0X0123456789ABCDEF][...0]) As _usn4 Union All Return Distinct Null Contains $_usn3 As @usn6 Match (({`7esn`:999,#usn8:01 Starts With $`5esn` Starts With 01234567})<-[`5esn`? *..0x0{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]->(:`7esn`$12)),(((`6esn` :_usn3:@usn5{`6esn`:1.e1[0..],`1esn`:'s_str' Ends With $7})<-[{`1esn`:$#usn8 Starts With usn2 Starts With .12,@usn6:07[$`8esn`]}]->(`7esn` {@usn6:$`3esn` Starts With 9e12 Starts With `8esn`})-[? *..0X0123456789ABCDEF{`7esn`:`4esn` Is Not Null,``:.12 Is Not Null}]->(`7esn` {`2esn`:9e0[$@usn6]})))"),
    octest:ct_string("Create `5esn`=((`6esn` :_usn3:@usn5)) Merge @usn6=(`7esn` :`7esn`)-[?:`` *07{`1esn`:$#usn7[$`3esn`..$999]}]->(_usn3 {_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null}) On Create Set [$#usn8[0e0..][07..],#usn7 Is Not Null Is Not Null].#usn7? =@usn5 In 12.0 In $_usn3,Filter(usn1 In 0xabc Is Not Null Is Not Null Where 01234567[9e0][.0]).`2esn`! =@usn5[01234567..],Extract(`6esn` In 0x0[9e0..] Where Count(*)[..$_usn3][..$usn2]|0.e0 Contains @usn5 Contains 0X7).`1esn`! =$1000 =~$`8esn` =~$`2esn`"),
    octest:ct_string("Unwind $@usn5 Starts With Count(*) Starts With $usn1 As _usn4 Union Detach Delete Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) Ends With [1.e1[#usn7][1.e1],Null =~Count(*)] Ends With [#usn8[..0X0123456789ABCDEF][...0],$usn1 Is Not Null Is Not Null],12.e12[$_usn4..$1000][$`7esn`..`3esn`] Return Distinct `7esn`(Distinct 0X0123456789ABCDEF) Is Not Null Is Not Null,.e1[01234567] Limit 0.12 Contains 0x0 Contains @usn5"),
    octest:ct_string("Optional Match (`5esn` :@usn6{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`})<-[*{`6esn`:`6esn` In $``}]->(`7esn` :`8esn`{usn2:`5esn` =~``,`7esn`:`7esn` Is Not Null Is Not Null})<-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]-(:`8esn`{@usn5:1000 Starts With 0e0 Starts With 0,#usn7:$`5esn`[`4esn`..$`2esn`]}),usn1=((`4esn` {``:0.12 Contains 0x0 Contains @usn5})) Where `5esn` Ends With 0x0 Remove (_usn3 {usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`4esn`:1.e1 Is Null Is Null})<-[_usn4 *00]-(_usn3 :`6esn`:`3esn`{`7esn`:1000 Ends With 01234567 Ends With usn1})-[:@usn5|:@usn6]-({``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]}).`` Union All Unwind None(`6esn` In .e0['s_str'..][$`8esn`..] Where #usn7 Ends With 0.12)[{usn1:$`6esn`[.e12..$`6esn`][$#usn7...0]}..Single(#usn8 In 07['s_str'][$@usn6] Where $#usn7[$`3esn`..$999])][Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 00[0X7..9e12]|$#usn7)..All(`6esn` In 1000[12.e12][#usn7] Where 12.e12 Is Not Null)] As _usn3 Union Unwind 0[..07][..False] As `2esn` Merge `4esn`=((`2esn` )-[:@usn5|:@usn6 *999{`5esn`:0x0 =~@usn5 =~01}]->(:``:`6esn`{`7esn`:12e12 Ends With 0e0,`8esn`:$_usn4[False..@usn6][`4esn`..$1000]})-[`3esn`? *12{@usn5:$#usn8[..123456789][..`2esn`],#usn7:12.0[..0X7]}]-(:`7esn`{@usn6:`2esn`[``..]})) On Create Set Extract(`3esn` In False In $`2esn` In 1e1 Where 01 Starts With $`5esn` Starts With 01234567).`8esn`! =None(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1) Ends With All(usn1 In 0xabc Is Not Null Is Not Null Where $@usn6 Is Null) Ends With Any(`6esn` In 1000[12.e12][#usn7] Where 01 Starts With $`5esn` Starts With 01234567),[`5esn` In $usn2 Contains $`1esn` Where False[$12]|.e12[``][$1000]].usn1! =_usn3[0Xa..],None(`3esn` In False In $`2esn` In 1e1 Where #usn7[.12][usn2]).@usn5 =Filter(_usn4 In 12.e12 Is Null Is Null Where 0e0 Is Not Null) =~All(`2esn` In $``[$#usn8] Where 12e12 Ends With $_usn4 Ends With $`2esn`)"),
    octest:ct_string("With  *,usn1($`2esn` Ends With 1e1)[..None(`6esn` In .e0['s_str'..][$`8esn`..] Where Null In 0xabc)][..Filter(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1)],Filter(`6esn` In .e0['s_str'..][$`8esn`..]) Is Not Null Is Not Null As `4esn` Order By usn2 Desc Skip Any(`6esn` In 0x0[9e0..] Where $`3esn` Is Not Null)[None(`6esn` In 1000[12.e12][#usn7] Where `4esn` In $`2esn` In @usn5)..[0x0 Contains .0]] Limit @usn6[$0..Null] Where $999[9e0..010][999..010] Delete [`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12]] Ends With [0] Ends With `8esn`,(#usn8 :#usn8:#usn7)<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(`4esn` :`5esn`) Contains {_usn3:12.0 In 07,`2esn`:01234567[..`6esn`][..``]} With  *,$`3esn` Ends With 123456789 Ends With 0.e0 Limit usn2[Count(*)][$`1esn`] Where $0[1e1][`4esn`] Union All Detach Delete #usn7($123456789[`1esn`..][`7esn`..],$123456789 =~0e0)[(usn2 :_usn3:@usn5)<-[?:`2esn`|:`7esn`{`2esn`:usn2,`3esn`:1e1 Is Null}]->(`` :`5esn`)<-[@usn5?:_usn4|_usn3 *..010{@usn6:$123456789[`1esn`..]}]-(#usn7 :@usn6)..count(Distinct $123456789[`3esn`..`5esn`][1e1..$`5esn`],`1esn`)],7 Contains 1000 Contains $usn1 Delete $#usn7,[`3esn` In False In $`2esn` In 1e1 Where .12 =~$#usn7 =~$``] Is Not Null,(@usn6 {@usn6:$`7esn` Ends With $_usn4 Ends With `5esn`,usn1:123.654[0Xa..0x0][.12..12e12]})-[@usn5:@usn6]-(:`4esn`:usn2{_usn4:`1esn`[$7][0Xa]}) Contains [$_usn4[False..@usn6][`4esn`..$1000],$`2esn` Ends With 1e1] Optional Match (((`4esn` :`3esn`)-[?:`6esn`]->(`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})-[`2esn`? *7]->(usn1 :`8esn`{`5esn`:$usn1 Starts With Null Starts With $``,`5esn`:0 Contains $@usn5}))) Union Merge (((@usn5 {`1esn`:0xabc[123.654][12]})<-[`2esn`?:`6esn` *0xabc..]-({`6esn`:usn1[$`1esn`..],_usn4:$usn2 Contains $`1esn`})<-[usn2:`3esn`|_usn4]-(usn2 :@usn6{@usn5:#usn8[True..#usn7][01..@usn5]}))) On Match Set `5esn`+=$`2esn`[.._usn3],[`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0X0123456789ABCDEF In _usn3|0.12[123456789..]].`7esn`! =$@usn5[..`4esn`],@usn5 =0e0 In `8esn` In 0xabc On Create Set #usn8+=`7esn` Is Null"),
    octest:ct_string("Return Distinct [$999[@usn5..][Null..]] Ends With ({usn2:0Xa Contains $`6esn`,_usn3:\"d_str\" Ends With $`3esn`})-[@usn5? *00{@usn5:usn1 Ends With 1.e1 Ends With `4esn`}]-(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})-[:`5esn`|:`1esn`]-(`2esn` ) As `7esn`,00[0X7..9e12] As #usn8 Order By 00 =~999 =~07 Asc,None(`6esn` In 1000[12.e12][#usn7] Where 9e12[\"d_str\"]) Ends With None(`6esn` In 1000[12.e12][#usn7] Where usn1[9e1..]) Ends With [`5esn` In 12.e12 In 1000,False In $`2esn` In 1e1] Descending,.e0 =~$1000 Ascending Limit {`7esn`:01234567[9e0][.0],`2esn`:999 Ends With $`4esn`}[`4esn`(.12 In 01234567 In _usn4,12.0[9e12]['s_str'])..] With  *,Count(*)[010..1.e1]['s_str'.._usn4] As `3esn` Order By usn1 =~`2esn` Ascending Skip $`7esn`[..$`8esn`] Merge ``=(_usn4 )-[ *0xabc..{``:0xabc =~01,`7esn`:$#usn7[123456789..][$`4esn`..]}]-({#usn7:1e1[`3esn`]}) On Create Set usn1+=.e0[..$`5esn`][..``],`2esn`+=@usn5 Ends With 1000,[`4esn` Ends With 's_str' Ends With @usn6,$`4esn` In 0x0].`6esn`! =_usn3 =~$12"),
    octest:ct_string("Remove [$@usn6[..``],12 Is Null].``! Unwind [0Xa[..1.e1],#usn7[.12][usn2],1000 Starts With 0e0 Starts With 0][`7esn`(Distinct $#usn8[@usn5..$1000])] As `8esn` Create (:#usn7{_usn4:\"d_str\"[7..$999]})<-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]-(:`8esn`{@usn5:1000 Starts With 0e0 Starts With 0,#usn7:$`5esn`[`4esn`..$`2esn`]})-[?:`4esn`{@usn5:$`2esn` Ends With 1e1,usn1:'s_str'[$`6esn`..][$0..]}]-(:`3esn`)"),
    octest:ct_string("Merge ((`6esn` :`2esn`:@usn5)) On Match Set usn1+=.e0[..$`5esn`][..``],`2esn`+=@usn5 Ends With 1000,[`4esn` Ends With 's_str' Ends With @usn6,$`4esn` In 0x0].`6esn`! =_usn3 =~$12 On Match Set Extract(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $`6esn`[00..$12]).`2esn` =$@usn6[_usn4..][$1000..] Union All With Distinct 0.0 =~0 =~`` As `7esn`,0.12[123456789..] Skip None(`3esn` In 999 Where 07 Ends With $_usn4 Ends With 0.e0) Is Null Is Null Limit 0.e0 In `2esn` Where 0e0 =~False =~.12 Match `8esn`=(((`1esn` {@usn6:`1esn`[$7][0Xa]})<-[`4esn`?]->(@usn6 :``:`6esn`{#usn7:9e1 Contains _usn3})<-[@usn5?:_usn4|_usn3 *..010{@usn6:$123456789[`1esn`..]}]-(`4esn` :``:`6esn`{#usn7:`2esn`[`3esn`..],usn2:$usn2 Starts With $`7esn` Starts With _usn4}))),`2esn`=((_usn4 :`6esn`:`3esn`)<-[usn1:#usn8|:`6esn` *0xabc..]->(`8esn` :`1esn`:@usn6)<-[:`5esn`|:`1esn`{#usn8:`7esn` Is Null,`4esn`:False[$12]}]->(_usn4 {`2esn`:1.e1 Is Not Null Is Not Null})) Where $`5esn` Is Not Null Remove Extract(#usn8 In 0x0[_usn4..] Where 0.e0 Is Not Null Is Not Null).`3esn`?,{`8esn`:$#usn7[`7esn`..][$`8esn`..]}.`` Union All Remove [usn1 In 0xabc Is Not Null Is Not Null Where .e12[..#usn7][..9e12]]._usn4,(@usn6 )<-[ *0Xa{#usn8:_usn4[#usn7..#usn8],usn2:9e0[0..1e1]}]->(#usn8 :#usn8:#usn7{@usn6:$#usn8[0e0..][07..],``:$`7esn` =~1.e1 =~0.e0})<-[#usn8?:#usn7|`5esn`{`3esn`:`5esn`[usn1],`2esn`:`6esn` In $``}]-(@usn5 {usn2:123.654 =~.e0 =~9e0,`3esn`:@usn6[.0]}).`5esn`,{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]}.`3esn` Create (:usn2{usn1:_usn4[.._usn4],@usn6:@usn5 In .e0 In \"d_str\"})<-[_usn3?:#usn7|`5esn` *..0x0]->(`7esn` {#usn7:1e1[`3esn`]})"),
    octest:ct_string("Detach Delete [0Xa[..1.e1],#usn7[.12][usn2],1000 Starts With 0e0 Starts With 0][`7esn`(Distinct $#usn8[@usn5..$1000])],`` In usn1 In 01234567,[usn1 In 123.654 =~.e0 =~9e0 Where False Starts With $123456789] Contains All(`6esn` In 1000[12.e12][#usn7] Where $`7esn`[..$`8esn`]) Contains [True,07 In Count(*),.e0['s_str'..][$`8esn`..]]"),
    octest:ct_string("With  *,'s_str'[..Null][..$`5esn`],usn2 Starts With 00 Order By $`2esn` Contains `6esn` Contains $`2esn` Desc,0[1.e1..#usn7] Desc,$123456789 Ends With 12e12 Asc Skip Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null) =~[12 Is Null Is Null,9e0[$@usn6]] Limit 0[_usn3][.12] Create (({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})) Optional Match ((usn1 {_usn3:#usn7 Ends With 0.12})<-[?:@usn6 *07{_usn3:$`1esn` Is Null}]-(`5esn` {`5esn`:#usn8 Is Not Null,`1esn`:01234567[`6esn`..]})<-[*]->(usn1 :`1esn`:@usn6{`2esn`:$123456789[..$usn2],_usn4:0X0123456789ABCDEF In _usn3})),`8esn`=((#usn8 :usn2{``:999})-[#usn8?:``{`7esn`:$`5esn` Starts With $`3esn` Starts With 1.e1}]-(#usn8 {`6esn`:$1000 =~$`8esn` =~$`2esn`})) Where .e12[..$_usn4][..#usn7] Union All Optional Match (`4esn` :#usn8:#usn7),(({@usn6:$#usn8[0e0..][07..]})<-[? *12{`1esn`:.e0 Ends With $`1esn` Ends With 1000}]-(@usn5 :usn1:``{usn2:9e0[0..1e1]})) Where .12 Is Null Create ({usn1:$usn1 Starts With Null Starts With $``,@usn5:0x0[01234567..Null][0Xa...e12]})<-[{`4esn`:010 In $@usn5 In `5esn`,#usn7:$`7esn` Is Null Is Null}]-(:`3esn`{`1esn`:Count(*) Ends With $#usn8 Ends With 0Xa})"),
    octest:ct_string("Merge `5esn`=(:`7esn`{``:9e1[$#usn8],`4esn`:1.e1 Is Null Is Null}) On Create Set `4esn`+=$`5esn` Starts With 0X0123456789ABCDEF Starts With Null Unwind 9e0[123456789..0][12.0..@usn6] As `2esn` Detach Delete $`1esn` Is Null,All(`2esn` In $``[$#usn8] Where $`2esn`[.._usn3]) =~[`6esn`[_usn3],12.0 In 07] =~[123456789[0.0..`2esn`][1.e1..$_usn4]],$usn2 Ends With 0 Ends With 12.0 Union Unwind `` Is Not Null Is Not Null As @usn6 Unwind 0X7 Contains 12.0 As @usn6 With Distinct Any(`7esn` In $`8esn`[0.12][12] Where usn1 In 010) As `6esn` Order By 0 Asc,Filter(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1)[Extract(usn1 In 123.654 =~.e0 =~9e0 Where _usn3[0Xa..])..][{`4esn`:$123456789 =~usn1 =~0xabc,_usn4:True}..] Asc Where 999 Ends With $`4esn`"),
    octest:ct_string("Match (((:`2esn`:@usn5{usn1:$usn2[`6esn`..],`3esn`:$_usn4[..$`8esn`]})-[?{#usn7:123.654[``]}]-(`8esn` :`3esn`{`2esn`:$`8esn`[`7esn`],`4esn`:#usn8[1e1..]})<-[_usn3:@usn6]->({@usn6:`5esn` Ends With $999}))),(`1esn` :`4esn`:usn2{`2esn`:9e0[$@usn6]})<-[`1esn`?:_usn4|_usn3]-(`1esn` {@usn6:Null In 0xabc})<-[`5esn`?:`1esn`|@usn6{`5esn`:#usn8 =~$1000 =~$1000,`2esn`:0x0[$7]}]-(:_usn3:@usn5{_usn3:.e0[$`1esn`..][_usn4..]}) Where 1e1 Ends With 's_str' Ends With $@usn6 Unwind `6esn`[.._usn3][..0Xa] As _usn3 Union With Distinct *,(:`5esn`{`7esn`:'s_str'[$#usn8],``:`1esn`[..$#usn7]})<-[@usn5]->(`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]}) Ends With (usn2 :`7esn`)-[{`5esn`:0.e0 =~01234567 =~01234567}]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]}) Ends With None(`6esn` In 0x0[9e0..] Where `7esn`[`8esn`][#usn7]) Skip $`6esn` Is Null Is Null Limit Extract(_usn4 In 12.e12 Is Null Is Null Where _usn4 In .0 In .12|usn2 In 1e1 In `4esn`) Contains None(`3esn` In @usn6[..\"d_str\"][..01] Where `4esn` In .12 In $#usn8) Contains Filter(`5esn` In $usn2 Contains $`1esn` Where usn2[Count(*)][$`1esn`]) With Distinct *,[.12 Is Null,12 Ends With 0 Ends With Null,0x0 =~@usn5 =~01][{usn2:$`6esn`[.e12]}] As @usn5 Order By $7[$12] Descending,[999 Contains $`7esn` Contains usn2,$999[9e0..010][999..010],1000 Is Not Null] Is Null Asc,{usn2:@usn5[$`1esn`..][$7..],@usn6:$#usn8[0xabc..usn2]} Is Not Null Is Not Null Desc Skip `1esn`[0] Limit 0 Is Not Null Is Not Null Union Return Distinct *,Any(#usn8 In 07['s_str'][$@usn6] Where $`7esn`[usn2]) In [`6esn` In 0x0[9e0..] Where `5esn`[usn1]] In {_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]} As `5esn` Limit $@usn6 Contains `5esn` Contains .e12 Unwind None(#usn8 In 0x0[_usn4..] Where #usn8 Is Not Null) Is Not Null As @usn5"),
    octest:ct_string("Remove Extract(#usn8 In 07['s_str'][$@usn6] Where usn2[..1e1][..$_usn3]).``,[9e12[$123456789..$usn2]].`6esn`!,All(usn1 In 0xabc Is Not Null Is Not Null Where 01234567[9e0][.0]).`4esn`? Unwind 0.e0 Ends With #usn8 As ``"),
    octest:ct_string("Merge `6esn`=((`6esn` {`7esn`:`4esn` In $`2esn` In @usn5})-[:@usn5|:@usn6 *01234567..123456789]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null})) On Create Set #usn7 =$usn1[12e12],usn2 ={`5esn`:@usn6[$usn1][$`2esn`],`1esn`:12.0[9e12]['s_str']}[Extract(`2esn` In $``[$#usn8] Where 12e12 Ends With $_usn4 Ends With $`2esn`|.12 =~$#usn7 =~$``)][[12.0[`3esn`][_usn3]]],_usn4 =`3esn`($usn2 Starts With $`7esn` Starts With _usn4) Is Not Null Is Not Null On Create Set `2esn`:``:`6esn`,Extract(`6esn` In 0x0[9e0..] Where `7esn`[`8esn`][#usn7]|`8esn` Ends With $`1esn`).`1esn`? =1.e1 =~01234567,{@usn6:$123456789[12.0],#usn7:usn1 =~_usn4 =~$usn1}.`8esn`! =@usn6(Distinct $0 Contains 7 Contains 1.e1)[(_usn4 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8)][Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0X0123456789ABCDEF In _usn3)] Optional Match #usn8=(((_usn4 :@usn5)-[? *..0X0123456789ABCDEF{#usn8:0X7[..`5esn`][..$`7esn`]}]-(#usn7 {@usn5:$`5esn` Contains $usn2})-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2))) Where @usn5[01234567..] With  *,usn1 Ends With _usn4 Ends With `4esn` As `4esn`,$#usn7 Starts With $`1esn` Starts With 0.12 As #usn7 Order By None(`3esn` In 999 Where 0.e0 Ends With #usn8)[..{usn1:$`2esn` Is Not Null Is Not Null,``:True Ends With `6esn` Ends With 9e0}][..{_usn4:usn2[9e0..0.e0][@usn5..`4esn`],_usn4:.e0['s_str'..][$`8esn`..]}] Desc,Extract(`3esn` In 999 Where $`3esn`[9e0..0.0][_usn4..123456789]|$@usn6 Is Null) Ends With [@usn5 Is Null] Ends With [usn1 In 999 Where `4esn` Is Null Is Null|$123456789[`1esn`..]] Desc Limit `8esn` Starts With $usn2"),
    octest:ct_string("Unwind (`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`` )[..`2esn`(Distinct `7esn`[_usn4..][Count(*)..],0[1.e1..#usn7])][..(_usn4 {`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})<-[@usn5?:_usn4|_usn3{#usn7:0.12 Is Null Is Null,#usn8:$1000 =~00}]-(`4esn` :_usn3:@usn5)-[@usn5? *01234567..123456789{`2esn`:01234567[`6esn`..]}]-(@usn5 {`4esn`:0.12 Is Null})] As `2esn` Union Remove None(#usn8 In 07['s_str'][$@usn6] Where 01234567 In \"d_str\").`8esn`?,None(`3esn` In 999 Where 07 Ends With $_usn4 Ends With 0.e0)._usn3!,usn1:usn1:`` Unwind 07 In $`1esn` In $#usn8 As `7esn` Unwind 0xabc[..$999] As `5esn` Union All Unwind 12.0 Is Null As usn2"),
    octest:ct_string("Unwind 7 =~$1000 =~$`5esn` As `6esn` Unwind 0Xa[$`4esn`] As @usn5 Union Unwind Extract(`3esn` In 999 Where $`5esn`[.e1][#usn8]|$#usn8[@usn5..$1000]) =~Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $#usn8 =~7 =~.12) =~Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 123.654 Is Not Null Is Not Null) As usn2 Union Optional Match ((`4esn` :@usn6$usn1)<-[:@usn5|:@usn6 *999{`5esn`:0x0 =~@usn5 =~01}]->(:@usn6{``:00 In 1000})<-[? *..010{#usn8:$usn1[usn1..$`8esn`][12e12..$``],usn1:'s_str' Ends With $7}]->(:`7esn`$12)) Where 0.0 =~0 =~``"),
    octest:ct_string("With Distinct $`3esn`[0.12..][$@usn5..],$1000[..$`7esn`] As `4esn` Skip 9e12[\"d_str\"] Where 0x0[$7..][`7esn`..] With Distinct $`5esn` Ends With `6esn` Ends With 0x0 As @usn6,`1esn`[..$#usn7] Limit $usn2[12.0..][`8esn`..] Union Merge ``=(#usn7 {_usn4:`1esn`[$7][0Xa]})-[``{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null}]->(#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]})-[``:@usn6{`3esn`:.e12[$_usn4..0],usn1:00[$0..usn2][$_usn4..$999]}]-({``:_usn3[9e0..$123456789][0X7..999]}) On Create Set `7esn` =0.e0 =~$@usn5,`6esn`(Distinct #usn8 Is Not Null)._usn4 =1000 Is Not Null Union Delete None(`7esn` In $`8esn`[0.12][12] Where 01 Is Null)[Single(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 999 Ends With 123456789 Ends With 12.0)..][None(usn1 In 0xabc Is Not Null Is Not Null Where 123456789[..0])..] Remove @usn6(`4esn` Starts With $#usn8 Starts With $#usn8,12.0[9e1..][Null..]).usn1!,All(`7esn` In $`8esn`[0.12][12] Where usn1 In 010).#usn7!,All(`6esn` In 1000[12.e12][#usn7] Where $0[1e1][`4esn`]).`7esn`! Return Distinct *,$0 Ends With .12 Order By .e0[123456789..][$`2esn`..] Asc,0.e0[$usn2..$@usn5] Desc,`7esn`[01..1.e1] Descending Limit Single(`3esn` In @usn6[..\"d_str\"][..01] Where 12[`5esn`..$`3esn`][0.12..usn2])[[`6esn` In 0x0[9e0..] Where $#usn8[0e0..][07..]|0 Is Not Null Is Not Null]..][(`6esn` :usn1:``)<-[``?:usn1|#usn7]-(@usn5 :`2esn`:@usn5{@usn6:123456789 =~#usn8 =~$0})..]"),
    octest:ct_string("Remove {``:@usn6[.0]}.`2esn`?,{`8esn`:$#usn7[`7esn`..][$`8esn`..]}.``,usn2(Distinct $`` Is Not Null Is Not Null).`6esn`! Unwind (`4esn` :``:`6esn`{#usn7:`2esn`[`3esn`..],usn2:$usn2 Starts With $`7esn` Starts With _usn4})<-[`4esn`?:`` *01234567..123456789]-(@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})-[`7esn`{``:01234567 In \"d_str\",`5esn`:01234567[`6esn`..]}]-(@usn6 $_usn3) Is Null Is Null As `4esn` Unwind 0Xa[Count(*)][0xabc] As `3esn` Union All With  0.e0[.e12],$123456789 Is Null Is Null,$@usn6[$#usn8..$999][Count(*)..usn1] As @usn6 Order By 07 In Count(*) Descending,07 =~0.e0 Descending,(@usn5 :usn2{`3esn`:0.0 Ends With $usn1 Ends With $999,`5esn`:1.e1 Is Null Is Null})-[`3esn`? *0..]->(:`2esn`:@usn5{#usn8:$usn2 Starts With 9e1 Starts With `7esn`})-[:`5esn`|:`1esn`]-(`8esn` :``:`6esn`{#usn7:$`3esn` Is Null}) Is Not Null Is Not Null Ascending Skip 0X0123456789ABCDEF In _usn3 Unwind 0.12[_usn3] As `2esn` Remove (`6esn` {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})<-[`2esn`?:`3esn`|_usn4]-(@usn5 :`5esn`)<-[:@usn5|:@usn6 *01234567..123456789]->(`1esn` :`7esn`{`6esn`:1e1 In 12.e12}).#usn7"),
    octest:ct_string("With  $`5esn` Starts With 0X0123456789ABCDEF Starts With Null,$#usn7[9e12..12],`8esn`[9e12] Order By 12e12 Ends With 0e0 Desc,`1esn`[..$@usn6][..`3esn`] Asc Unwind $`4esn`[.e1..$usn1] As `1esn` Optional Match (({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`4esn` :``:`6esn`)-[@usn5{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(`8esn` :`1esn`:@usn6)) Where 12.0[..0X7]"),
    octest:ct_string("Optional Match `7esn`=((`6esn` {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})),`3esn`=(:`4esn`:usn2$``) Where 0x0 =~`5esn` =~$`8esn` Remove [$@usn6 Contains `5esn` Contains .e12,\"d_str\"[`5esn`],0.e0 Contains $123456789 Contains 123456789].`3esn`!,(`6esn` :`8esn`{usn2:#usn7 In #usn7,`1esn`:00['s_str']})<-[_usn3:@usn6]->({@usn6:`5esn` Ends With $999}).#usn7!,Filter(usn1 In 0xabc Is Not Null Is Not Null Where $`8esn`[`7esn`]).`1esn`! Remove `7esn`(01234567[..00][..$`3esn`],12 Is Null Is Null).``?,All(`7esn` In $`8esn`[0.12][12] Where usn1 In 010).#usn7!,[`6esn` Is Not Null,_usn4[$`8esn`.._usn3][.0..$@usn6]].@usn5? Union All Remove (:`2esn`:@usn5{#usn7:0e0['s_str'],`1esn`:$#usn8[1.e1]})<-[`3esn`? *0..]-({_usn4:.e0[$`1esn`..][_usn4..],usn2:.12[0X0123456789ABCDEF..]}).`5esn`,[$_usn3 Is Not Null,`5esn` Ends With 0x0,0.e0[.e12]].`8esn`?,{usn1:$123456789[`4esn`..],usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`]}._usn4! Merge `1esn`=(_usn4 {`4esn`:01234567[..00][..$`3esn`],usn1:00[\"d_str\"][False]}) With Distinct *,`` In 123.654 In 0.0 As `8esn`,All(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $999[01234567][@usn5]) Starts With Extract(`3esn` In @usn6[..\"d_str\"][..01]) Starts With Extract(#usn8 In 07['s_str'][$@usn6] Where True) Order By Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0]|.0 =~$@usn5 =~1.e1)[({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`4esn` :``:`6esn`)<-[_usn3:@usn6]->({@usn6:`5esn` Ends With $999})..] Descending,Single(#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]) Contains Single(`5esn` In $usn2 Contains $`1esn` Where `2esn` Contains `3esn` Contains $@usn5) Contains {_usn3:0xabc Contains 0,`6esn`:$`6esn`[.e12..$`6esn`][$#usn7...0]} Desc Skip (@usn6 )<-[`7esn`?:@usn6]-(_usn4 :usn1:``{`2esn`:$`2esn` Is Not Null Is Not Null,`2esn`:@usn5['s_str'..$`2esn`]})[``(Distinct `` In False In True,0xabc Contains 0)]"),
    octest:ct_string("Remove @usn5:`2esn`:@usn5,None(`6esn` In 0x0[9e0..] Where #usn7[@usn6..]).`5esn`! Merge `8esn`=(usn2 {``:`6esn`[`7esn`..$_usn3][9e0..#usn8],`8esn`:.0[01234567]}) Union Optional Match ((`5esn` :@usn6{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`})-[`1esn`:@usn6 *01234567..123456789{`7esn`:0x0[01234567..Null][0Xa...e12]}]->(:`8esn`{``:.e1 =~usn2 =~`7esn`,#usn7:`4esn` In .12 In $#usn8})-[#usn8?:#usn8|:`6esn`*{`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`}]->(:``:`6esn`{@usn6:$`4esn`[$@usn5..`7esn`],`5esn`:_usn4 Starts With `6esn` Starts With $`8esn`})),((usn2 :@usn6{@usn5:#usn8[True..#usn7][01..@usn5]})<-[`2esn`?:`6esn` *0xabc..]-({@usn6:'s_str' Ends With $7})<-[:@usn6]->(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null})) Where 123456789[..0] With Distinct *,9e0 Starts With 0e0 Starts With $`5esn`,(@usn5 {`1esn`:0xabc[123.654][12]})-[:#usn8|:`6esn`{#usn8:0X7[..`5esn`][..$`7esn`]}]->(`2esn` :@usn6)-[`5esn`?:`7esn`]-({@usn6:'s_str' Ends With $7}) Ends With All(usn1 In 999 Where @usn6 Ends With 0.12 Ends With `3esn`) Skip [`5esn` In 12.e12 In 1000,False In $`2esn` In 1e1] Contains {usn1:12 Is Null Is Null} Contains {@usn6:$`4esn`[$@usn5..`7esn`],`5esn`:_usn4 Starts With `6esn` Starts With $`8esn`} Limit False Ends With $_usn4 Ends With $#usn7 With  *,9e1[$`3esn`][$`1esn`] As #usn8,[@usn5 Is Null,\"d_str\" Ends With $1000 Ends With usn2,$usn1 Is Not Null Is Not Null][..`7esn`(Distinct $`2esn`[.._usn3],9e0 Is Null Is Null)][..[.e0['s_str'..][$`8esn`..]]] As `6esn` Order By usn1[..Count(*)][..`8esn`] Ascending Skip \"d_str\" Contains $999 Contains `2esn` Where usn2[Count(*)][$`1esn`] Union All Merge `5esn`=(((@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})-[? *..0X0123456789ABCDEF{`7esn`:`4esn` Is Not Null,``:.12 Is Not Null}]->(`7esn` {`2esn`:9e0[$@usn6]})-[:#usn7|`5esn`]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null}))) Delete {@usn5:@usn5[..$999][..$0]} Starts With [#usn8 In 0x0[_usn4..] Where 7 =~$1000 =~$`5esn`|$`1esn` Is Not Null Is Not Null],$usn2 Ends With 0 Ends With 12.0 Return Distinct 0Xa[$`4esn`] As `1esn`,Any(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where @usn6 Ends With 0.12 Ends With `3esn`) Contains [`5esn` In $usn2 Contains $`1esn` Where Count(*)[$1000..01]|9e1[..01234567][..`4esn`]] Contains (`3esn` {#usn8:#usn7 =~$`8esn`})-[usn2?:#usn8|:`6esn` *7]->(`6esn` :`5esn`{`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})-[?:`2esn`|:`7esn` *0..{`4esn`:010 In $@usn5 In `5esn`,#usn7:$`7esn` Is Null Is Null}]->(:`6esn`:`3esn`{`3esn`:123.654[0Xa..0x0][.12..12e12]}),123.654[.e12..\"d_str\"] As _usn4 Skip (usn2 {usn2:`7esn` Contains .0 Contains #usn8})-[usn1{`1esn`:`7esn` Contains .0 Contains #usn8}]->(@usn6 :`5esn`{@usn5:.12[9e1..0X7]})[..(`4esn` :_usn3:@usn5)<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(_usn3 :@usn5{`2esn`:1.e1[#usn7][1.e1]})][..All(`6esn` In 1000[12.e12][#usn7] Where `1esn`[$7][0Xa])]"),
    octest:ct_string("Unwind None(_usn4 In 12.e12 Is Null Is Null Where _usn4 In .0 In .12) Starts With {`4esn`:`8esn`[0x0..],usn2:$#usn8 =~7 =~.12} Starts With _usn3(Distinct usn1[$`1esn`..]) As `6esn` Union All Create @usn6=((:`8esn`{`8esn`:$`7esn` =~$usn1 =~00,@usn6:`6esn` In $``})-[ *..010]-({@usn6:`5esn`[0e0..],_usn4:$#usn8[0xabc..usn2]})),`6esn`=({_usn4:`7esn`[_usn4..][Count(*)..],`1esn`:01234567 In \"d_str\"})-[? *..0x0{`1esn`:`4esn` Starts With `8esn`}]->(:_usn3:@usn5{_usn3:$#usn8 In True In #usn7,usn2:$@usn5[$_usn3..Null]}) Union With  [0Xa[..1.e1],#usn7[.12][usn2],1000 Starts With 0e0 Starts With 0][`7esn`(Distinct $#usn8[@usn5..$1000])] As `4esn`,0.e0 Ends With #usn8,$12[0.0..] Skip $`8esn`[0.12][12]"),
    octest:ct_string("Remove `2esn`('s_str'[$#usn8]).#usn8?,#usn8(`8esn` Contains 0X0123456789ABCDEF,$`` Starts With 0x0).usn2?,All(`3esn` In 999 Where .0[..False]).usn2? Union All Detach Delete .e0 Is Not Null,{_usn4:\"d_str\" Ends With $`3esn`,``:#usn8 =~#usn7 =~0x0}[Single(usn1 In 0xabc Is Not Null Is Not Null Where `7esn`[..01])..{`2esn`:.0[@usn6..]}][[1000[12.e12][#usn7],`` Is Not Null Is Not Null]..None(#usn8 In 0x0[_usn4..] Where `8esn` Ends With $`1esn`)] Delete Extract(_usn4 In 12.e12 Is Null Is Null Where _usn4 In .0 In .12|usn2 In 1e1 In `4esn`) Contains None(`3esn` In @usn6[..\"d_str\"][..01] Where `4esn` In .12 In $#usn8) Contains Filter(`5esn` In $usn2 Contains $`1esn` Where usn2[Count(*)][$`1esn`]),.12"),
    octest:ct_string("Merge (:#usn7)<-[#usn7:`1esn`|@usn6 *999{`4esn`:0X7[..`5esn`][..$`7esn`]}]-(:`1esn`:@usn6{`1esn`:12.0[9e12]['s_str'],`3esn`:$123456789 Is Not Null})-[@usn6?:_usn3|`6esn` *0..]->(:`1esn`:@usn6) Union With Distinct #usn8(Distinct 0x0[$7],#usn8[1e1..])[[1.e1[#usn7][1.e1]]..{usn1:`2esn` Is Null Is Null}][_usn3(Distinct usn1[$`1esn`..])..Extract(`3esn` In False In $`2esn` In 1e1 Where 1000 Ends With $`5esn`)] As `6esn`,@usn5(0X0123456789ABCDEF Is Null,0X7[0xabc][$1000])[None(`3esn` In False In $`2esn` In 1e1 Where `` Contains 010 Contains $1000)],$`1esn`[``..123456789][010..1.e1] Order By {@usn5:@usn5[..$999][..$0]} =~[`3esn` In @usn6[..\"d_str\"][..01] Where `1esn`[$7][0Xa]|.e0 Contains 999] =~[$usn2 Starts With $`7esn` Starts With _usn4] Asc,Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 01[$0])[{`5esn`:@usn6[$usn1][$`2esn`],`1esn`:12.0[9e12]['s_str']}..][Any(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0)..] Asc Merge `6esn`=((:usn1:``{_usn4:1000[12.e12][#usn7]})) Union All Delete {``:_usn3[9e0..$123456789][0X7..999]}[[`7esn` Is Null,@usn5 In .e0 In \"d_str\"]][[$#usn8 Starts With usn2 Starts With .12,0.12 Contains 0x0 Contains @usn5]],_usn3 Is Not Null"),
    octest:ct_string("Merge (`7esn` :`2esn`:@usn5)<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(_usn4 :@usn6)-[?:`` *999{`7esn`:Count(*)[..`5esn`],`2esn`:.e12[..$_usn4][..#usn7]}]-({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]}) Merge (@usn6 {@usn6:$`7esn` Ends With $_usn4 Ends With `5esn`,usn1:123.654[0Xa..0x0][.12..12e12]})<-[?:`4esn`*]->(`5esn` {_usn3:1.e1 Is Null Is Null})<-[`7esn`? *01234567..123456789{_usn3:12.e12 =~.0}]->({``:9e1[$#usn8],`4esn`:1.e1 Is Null Is Null}) Match ((`` :usn1:``)-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->(`8esn` :#usn7)<-[?{`5esn`:$1000 =~$`8esn` =~$`2esn`,_usn3:$`` Starts With 0x0}]->(`2esn` :`5esn`{`1esn`:$@usn6 Ends With 0.0})),#usn7=(((`6esn` :`5esn`{`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})-[`4esn`?:usn1|#usn7{`1esn`:123456789 Ends With 9e1 Ends With ``,@usn5:0xabc Contains 0}]->(`` :`3esn`{#usn8:`3esn` Is Not Null Is Not Null,#usn8:$123456789[`3esn`..`5esn`][1e1..$`5esn`]})-[? *0xabc..]->(`6esn` {`5esn`:0x0 =~@usn5 =~01}))) Union All Remove usn2:`4esn`:usn2 Union Unwind [.12 Is Null,12 Ends With 0 Ends With Null,0x0 =~@usn5 =~01][{usn2:$`6esn`[.e12]}] As @usn5 Merge usn2=((({@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})-[?:`2esn`|:`7esn` *0X7..0x0{usn2:0.12 Contains 0x0 Contains @usn5,_usn3:.e12 Contains $usn2 Contains $@usn6}]-(:`2esn`:@usn5{`4esn`:_usn3 =~$12,_usn4:.e1 =~usn2 =~`7esn`})-[`6esn` *00]-(:`8esn`{@usn5:1000 Starts With 0e0 Starts With 0,#usn7:$`5esn`[`4esn`..$`2esn`]}))) On Match Set `6esn`+=.e0[0X0123456789ABCDEF.._usn3][9e1..$`3esn`] On Match Set _usn3(1000 Starts With ``,.e1 =~\"d_str\" =~'s_str').@usn5? =7 =~$1000 =~$`5esn`"),
    octest:ct_string("Remove Null.`7esn`?,None(`6esn` In .e0['s_str'..][$`8esn`..] Where 0.12[123456789..]).`4esn`,[$`2esn` Ends With 1e1,07[0..]].``! Merge (((`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})<-[?:@usn5|:@usn6]->(#usn8 :#usn8:#usn7)-[#usn7?:`7esn` *..010]-(`1esn` {usn2:@usn5[$`1esn`..][$7..],@usn6:$#usn8[0xabc..usn2]}))) On Create Set `6esn`+=Count(*) Ends With 7 Ends With 0 On Match Set usn1 =Extract(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0|0[_usn3][.12]) Starts With (#usn8 :`8esn`)<-[`2esn`?:`3esn`|_usn4]-(#usn7 :`7esn`{`3esn`:$#usn8[..123456789][..`2esn`],#usn8:0.e0 Ends With #usn8})-[:`5esn`|:`1esn`]-(@usn5 :`5esn`)"),
    octest:ct_string("Match `8esn`=(#usn8 {`4esn`:$`3esn` Is Null})-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->(`8esn` :#usn7),((`5esn` :@usn6)) Where .0[..False]"),
    octest:ct_string("With Distinct *,.12 As `5esn` Skip $#usn7[123456789..][$`4esn`..] Limit {usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}[{usn1:False[$12],`1esn`:0.e0 Ends With $123456789}][`7esn`(Distinct)] Where $#usn7[9e12..12] Unwind `3esn`[0x0][$`5esn`] As #usn7 Union Remove @usn6(`4esn` Starts With $#usn8 Starts With $#usn8,12.0[9e1..][Null..]).usn1!,All(`7esn` In $`8esn`[0.12][12] Where usn1 In 010).#usn7!,All(`6esn` In 1000[12.e12][#usn7] Where $0[1e1][`4esn`]).`7esn`! With Distinct _usn4 In .0 In .12 As `4esn`,$123456789 Is Null Is Null Order By Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 01[$0])[{`5esn`:@usn6[$usn1][$`2esn`],`1esn`:12.0[9e12]['s_str']}..][Any(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0)..] Asc,$7[`7esn`][123.654] Descending,usn1[..`7esn`][..$`8esn`] Ascending Skip 0e0 Ends With usn1 Ends With `1esn` Limit `2esn` Contains `3esn` Contains $@usn5 Where $123456789 Is Not Null Union All Return *,12 Ends With 0 Ends With Null,Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null) =~[12 Is Null Is Null,9e0[$@usn6]] Order By $123456789 In `8esn` In 0X7 Descending,123456789[$_usn4..] Asc Skip `` Is Not Null Is Not Null Return Distinct [$123456789[`3esn`..`5esn`][1e1..$`5esn`],0x0 =~`5esn` =~$`8esn`,123.654[.e12..\"d_str\"]] In {#usn8:#usn7 In #usn7} In {usn1:7 Ends With `3esn` Ends With $`2esn`} As @usn5 Limit 1000[`1esn`..$12][$usn1..Null]"),
    octest:ct_string("With Distinct [$999[@usn5..][Null..]] Ends With ({usn2:0Xa Contains $`6esn`,_usn3:\"d_str\" Ends With $`3esn`})-[@usn5? *00{@usn5:usn1 Ends With 1.e1 Ends With `4esn`}]-(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})-[:`5esn`|:`1esn`]-(`2esn` ) As `7esn` Order By Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0) Is Not Null Descending Union All Delete Extract(`3esn` In 999 Where 0.12[123456789..]|00[01234567][Count(*)]) Contains [#usn8 In 0x0[_usn4..] Where 1e1[`3esn`]|$_usn3[0e0..][12.0..]] Contains All(`5esn` In $usn2 Contains $`1esn` Where \"d_str\" Contains $999 Contains `2esn`),00 Starts With usn1 Starts With Count(*),0xabc Is Not Null Create ((:usn1:``{_usn4:1000[12.e12][#usn7]})),(({`1esn`:1e1 Starts With 010})-[`2esn` *123456789..{`8esn`:.12 =~#usn7 =~01}]-(@usn6 {``:12.e12 Contains 's_str' Contains 0.12})<-[{#usn7:$123456789[..$`7esn`][..\"d_str\"]}]-({`3esn`:Null Is Null Is Null})) Union All Remove [@usn5[$`1esn`..][$7..],True[$usn1..12][``..\"d_str\"],0X0123456789ABCDEF[$_usn3][$_usn4]].`7esn`!"),
    octest:ct_string("Delete 12.0 Is Null Optional Match _usn4=(@usn5 :usn1:``{usn2:9e0[0..1e1]})<-[#usn8?:`5esn`|:`1esn`{`8esn`:.12 Is Not Null,_usn3:Count(*) In $`2esn`}]-({`1esn`:1e1 Starts With 010}) Union Merge ((:usn1:``{`8esn`:123.654[$``][#usn7],`1esn`:0e0 Starts With $@usn6 Starts With $7})) On Match Set `2esn`:``:`6esn`,Extract(`6esn` In 0x0[9e0..] Where `7esn`[`8esn`][#usn7]|`8esn` Ends With $`1esn`).`1esn`? =1.e1 =~01234567,{@usn6:$123456789[12.0],#usn7:usn1 =~_usn4 =~$usn1}.`8esn`! =@usn6(Distinct $0 Contains 7 Contains 1.e1)[(_usn4 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8)][Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0X0123456789ABCDEF In _usn3)] Return $7[`8esn`..False][.e12..0.e0],Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 123.654 Is Not Null Is Not Null)[{usn1:$7[$12]}][Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where \"d_str\"[..$_usn3])] As ``,'s_str' Ends With $7 As #usn8 Order By `7esn` In `8esn` In 12 Desc,usn1 =~12 =~$0 Desc Union All Detach Delete 123.654[.e12..\"d_str\"],Extract(`5esn` In $usn2 Contains $`1esn` Where Count(*)[_usn3..])[..None(`5esn` In $usn2 Contains $`1esn` Where `3esn` Is Not Null Is Not Null)][..Extract(#usn8 In 07['s_str'][$@usn6] Where True)] Return Distinct $`2esn` =~$123456789 =~usn2 As #usn7,.e12[..#usn7][..9e12],Null Contains $_usn3 As @usn6"),
    octest:ct_string("Delete 9e1[$`5esn`..][`5esn`..],True[7][``] Match ((`4esn` {_usn3:7 Contains 1000 Contains $usn1})-[#usn8:@usn5|:@usn6 *0..{`6esn`:`6esn` In $``}]->(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[? *0xabc..]->(`6esn` {`5esn`:0x0 =~@usn5 =~01})),(#usn8 :`6esn`:`3esn`$#usn7) Return Distinct Single(`5esn` In $usn2 Contains $`1esn` Where True Contains .e1 Contains `2esn`) In None(`3esn` In False In $`2esn` In 1e1 Where #usn7[.12][usn2]),`` In usn1 In 01234567,$`3esn` Ends With 123456789 Ends With 0.e0 As `7esn` Skip [`6esn` In 0x0[9e0..] Where 01234567[..`6esn`][..``]|01 Is Null] Starts With usn1(Distinct 0e0[...e1],$usn2 Ends With 0 Ends With 12.0) Starts With {@usn6:$usn1 Is Not Null Is Not Null,`7esn`:0x0 In 0X0123456789ABCDEF} Union All Remove #usn8(.e0[123456789..][$`2esn`..],.12[0X0123456789ABCDEF..]).``!,Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 9e1 Contains _usn3).usn1? Delete All(`6esn` In .e0['s_str'..][$`8esn`..] Where .e12 Is Null Is Null)[@usn5(Distinct)..][[0 Contains $@usn5,False Contains $`1esn` Contains @usn6]..]"),
    octest:ct_string("Unwind $#usn7[9e12..12] As #usn8 Union Delete 0X7[0xabc][$1000],'s_str'[`2esn`..][12.0..] Delete 0.12[_usn3],_usn3 Ends With $`6esn` Ends With 0e0,@usn6 Is Not Null With Distinct 01 In $7 In $1000 As #usn7,Filter(`3esn` In @usn6[..\"d_str\"][..01] Where 12[`5esn`..$`3esn`][0.12..usn2]),0.12[$usn1..$7] As `1esn` Skip Count(*)[..12][..$999] Limit 9e1 Contains _usn3 Where 9e12[\"d_str\"] Union All Remove Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $`` Starts With 0x0).`2esn`,[$usn1[#usn8..`8esn`][7..`4esn`],`5esn` Ends With 0x0].`5esn`"),
    octest:ct_string("Match ((:`1esn`:@usn6{`2esn`:12e12 Ends With 0 Ends With $@usn6,``:`1esn`[Null..]})) Where 1e1 In 12.e12 With Distinct *,(:`5esn`{`7esn`:'s_str'[$#usn8],``:`1esn`[..$#usn7]})<-[@usn5]->(`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]}) Ends With (usn2 :`7esn`)-[{`5esn`:0.e0 =~01234567 =~01234567}]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]}) Ends With None(`6esn` In 0x0[9e0..] Where `7esn`[`8esn`][#usn7]) Skip $`6esn` Is Null Is Null Limit Extract(_usn4 In 12.e12 Is Null Is Null Where _usn4 In .0 In .12|usn2 In 1e1 In `4esn`) Contains None(`3esn` In @usn6[..\"d_str\"][..01] Where `4esn` In .12 In $#usn8) Contains Filter(`5esn` In $usn2 Contains $`1esn` Where usn2[Count(*)][$`1esn`]) Remove [9e0[123456789..0][12.0..@usn6],`8esn` Ends With $`1esn`,usn1[9e1..]]._usn3!,(:`5esn`{`5esn`:1.e1 Is Null Is Null})-[`4esn`?:usn1|#usn7{`1esn`:123456789 Ends With 9e1 Ends With ``,@usn5:0xabc Contains 0}]->(@usn6 :#usn8:#usn7{``:Null Is Not Null Is Not Null})<-[#usn7:`1esn`|@usn6 *0..]-({usn1:$usn1 Starts With Null Starts With $``,@usn5:0x0[01234567..Null][0Xa...e12]})._usn3!"),
    octest:ct_string("Delete 0x0 In 0X0123456789ABCDEF Unwind Single(`3esn` In False In $`2esn` In 1e1 Where .0[@usn6..]) =~[$123456789[..$usn2]] =~[0X7[..$0][..0.12],123456789[0.0..`2esn`][1.e1..$_usn4]] As @usn5 Union Delete `4esn`,(_usn3 {usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`4esn`:1.e1 Is Null Is Null})-[`1esn`?:`1esn`|@usn6 *12]->(`8esn` :@usn6) Is Null Is Null Unwind $`4esn`[.e1..$usn1] As `1esn` Delete Filter(_usn4 In 12.e12 Is Null Is Null Where 0e0 Is Not Null) =~All(`2esn` In $``[$#usn8] Where 12e12 Ends With $_usn4 Ends With $`2esn`),$#usn7[123456789..][$`4esn`..],{@usn6:$#usn8[0e0..][07..]}[Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 123.654[.e12..\"d_str\"])..Extract(usn1 In 123.654 =~.e0 =~9e0|usn2[.e1..][01234567..])] Union Merge @usn6=(((usn1 :_usn4)-[`2esn`? *7]->(`` :``:`6esn`{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]})-[`2esn`?:`3esn`|_usn4]->({`1esn`:1e1 Starts With 010}))) On Match Set `5esn`+=\"d_str\" Ends With 123456789,`3esn` =12 Is Null On Create Set `2esn`:``:`6esn`,Extract(`6esn` In 0x0[9e0..] Where `7esn`[`8esn`][#usn7]|`8esn` Ends With $`1esn`).`1esn`? =1.e1 =~01234567,{@usn6:$123456789[12.0],#usn7:usn1 =~_usn4 =~$usn1}.`8esn`! =@usn6(Distinct $0 Contains 7 Contains 1.e1)[(_usn4 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8)][Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0X0123456789ABCDEF In _usn3)] Remove [`5esn` In $usn2 Contains $`1esn` Where $`6esn`[$0]].`2esn`,[`6esn` In 1000[12.e12][#usn7] Where $0[1e1][`4esn`]|False Starts With $123456789].usn2? With Distinct .e1[01234567] As `6esn`,01 In $7 In $1000 As #usn7,$`1esn` Starts With True Starts With @usn5 Order By @usn5 In .e0 In \"d_str\" Asc"),
    octest:ct_string("Remove [`6esn` In 1000[12.e12][#usn7] Where 9e12[\"d_str\"]].`8esn`,None(`2esn` In $``[$#usn8] Where 12e12 Ends With $_usn4 Ends With $`2esn`).`2esn`! Union Merge ``=(`3esn` {``:`6esn`[`7esn`..$_usn3][9e0..#usn8],`8esn`:.0[01234567]})<-[?{usn1:$#usn7[..$999][..9e1]}]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})-[`6esn`?:usn1|#usn7]-(#usn7 :`3esn`{usn2:$`6esn`[.e12]}) On Match Set @usn6+=Filter(usn1 In 0xabc Is Not Null Is Not Null Where False[...e0][..$#usn8]) Is Null Is Null On Create Set _usn3+=@usn5[..$999][..$0],`4esn`+=Single(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]) Starts With (:usn1:``{_usn4:1000[12.e12][#usn7]})-[ *7{`4esn`:$#usn7[$`3esn`..$999],`8esn`:$0[00..]}]-({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]}) Starts With {`1esn`:`5esn` In 12.e12 In 1000,`3esn`:0Xa Contains $`6esn`},`7esn`+=$12[`3esn`][`3esn`] Merge `4esn`=(`7esn` {`2esn`:1.e1[#usn7][1.e1]})<-[`2esn`?:@usn6]->(`3esn` :`7esn`$`6esn`)<-[`6esn`?:`1esn`|@usn6 *0xabc..]-(:`7esn`{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc}) On Create Set usn1:_usn3:@usn5,@usn5:@usn6,`6esn`+=0.e0 Contains 9e1 Contains 9e0 Create ((`3esn` {`3esn`:1e1[`3esn`]})-[?{``:Null =~Count(*),_usn3:$@usn6 Is Null Is Null}]-(@usn5 {usn2:`3esn`[0x0][$`5esn`],`7esn`:`5esn`[$7..01]})),_usn3=(usn2 :#usn8:#usn7{@usn5:`8esn` Ends With $`1esn`,#usn8:\"d_str\" Ends With $1000 Ends With usn2}) Union All Unwind usn1 Is Null Is Null As usn2 Match usn2=((@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})),@usn6=((_usn4 :`3esn`{`2esn`:999})-[`5esn`?:@usn5|:@usn6 *7{`2esn`:$`8esn`[0.12][12],`6esn`:`` Contains $_usn3 Contains 0e0}]-(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]})) Where #usn7 Ends With 0.12"),
    octest:ct_string("Return Distinct *,All(`7esn` In $`8esn`[0.12][12]) Contains [usn1 In 123.654 =~.e0 =~9e0 Where Count(*) Contains 12e12 Contains 0xabc] Contains [`4esn` Ends With 's_str' Ends With @usn6] As #usn8 Order By .12[9e1..0X7] Ascending"),
    octest:ct_string("With  12.0[..0X7] As ``,True[7][``] Order By 0[_usn3][.12] Descending,$`` Is Null Is Null Descending Skip \"d_str\"[0X7..``][@usn5.._usn4] Where $@usn5[$_usn3] With Distinct *,07[..1e1][..$0] As _usn3 Skip _usn4[999..9e1] Limit 0[..07][..False] Merge (((:usn2{_usn3:``[0X7..][$@usn6..]})<-[_usn3?:#usn8|:`6esn` *0xabc..{@usn6:123.654[.e12..\"d_str\"],`8esn`:$usn2 Starts With $`7esn` Starts With _usn4}]->(#usn7 {`1esn`:$`4esn`[.e1..$usn1],``:0x0 =~`5esn` =~$`8esn`})<-[@usn5?:usn2|:``*..]->(`7esn` {#usn7:1e1[`3esn`]}))) On Match Set `2esn` ={_usn3:`` Contains 010 Contains $1000}[Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0.0[`7esn`][`6esn`]|9e1[..01234567][..`4esn`])..`7esn`($123456789[..`3esn`][..`7esn`])][None(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where Count(*) Contains 12e12 Contains 0xabc)..Single(usn1 In 0xabc Is Not Null Is Not Null Where usn1[$`1esn`..])],_usn3+=12.e12[.12..$_usn3][0e0..9e0] Union All Optional Match #usn7=((`5esn` {usn2:`6esn` In $``})) Where 01 Starts With $`5esn` Starts With 01234567 With Distinct `7esn`[`7esn`] Limit .e1[0X7..`2esn`] Return Distinct *,9e0[12..$`8esn`] As _usn4 Order By $`1esn` =~`1esn` =~0X0123456789ABCDEF Desc,_usn4[7..$999] Ascending Skip Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 9e1 Contains _usn3) In [\"d_str\"[.0][9e0],0X7[0xabc][$1000]] Limit All(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]) In Single(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 1000 Starts With ``) Union All Detach Delete $`2esn` In $`6esn` In 0X7,0Xa[..1.e1],12 Starts With usn2"),
    octest:ct_string("Merge @usn5=(`` :usn1:``{@usn6:010[`1esn`..`4esn`]}) On Match Set @usn6+=Single(`3esn` In @usn6[..\"d_str\"][..01] Where 12[`5esn`..$`3esn`][0.12..usn2])[[`6esn` In 0x0[9e0..] Where $#usn8[0e0..][07..]|0 Is Not Null Is Not Null]..][(`6esn` :usn1:``)<-[``?:usn1|#usn7]-(@usn5 :`2esn`:@usn5{@usn6:123456789 =~#usn8 =~$0})..],usn1+=Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 123.654 Is Not Null Is Not Null)[{usn1:$7[$12]}][Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where \"d_str\"[..$_usn3])] On Match Set usn1 =Extract(`6esn` In 1000[12.e12][#usn7] Where `7esn` Contains .0 Contains #usn8|$0[00..])[{`2esn`:07['s_str'][$@usn6],``:usn1[..$123456789][..`1esn`]}..`4esn`(Distinct 9e1 Contains 07,1000[07..][1.e1..])][Single(`5esn` In $usn2 Contains $`1esn` Where 0e0['s_str'])..[123456789[0.0..`2esn`][1.e1..$_usn4]]],`6esn`+=01234567[$`7esn`] Union Unwind usn1[..$123456789][..`1esn`] As `7esn`"),
    octest:ct_string("Merge ((`8esn` )<-[`2esn`?:_usn4|_usn3]->(`2esn` {_usn3:.e1 Ends With $123456789})-[@usn6?:`6esn`]-(_usn3 :`3esn`{`1esn`:$999[@usn5..][Null..]})) On Create Set _usn4+=Single(usn1 In 123.654 =~.e0 =~9e0 Where 7[$1000][1000])[(`7esn` {`8esn`:0 Is Null Is Null})<-[ *..0X0123456789ABCDEF{@usn6:`4esn` Is Not Null,`2esn`:@usn6[.0]}]-(`6esn` :usn2)][Single(`3esn` In False In $`2esn` In 1e1 Where True Contains .e1 Contains `2esn`)] On Match Set Single(`5esn` In $usn2 Contains $`1esn` Where `5esn` Ends With 0x0).@usn6! =$@usn6 Starts With $usn2 Starts With $usn1 Union Return Distinct *,_usn3[0Xa..] As usn2,$#usn8 Ends With _usn4 Ends With usn2 As #usn7 Order By $`3esn` Ends With @usn6 Ends With 123.654 Asc Limit 0e0 Is Not Null Optional Match usn1=(`` :``:`6esn`)-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]->(_usn3 {`3esn`:$@usn5 Is Not Null Is Not Null})<-[usn1{`1esn`:`7esn` Contains .0 Contains #usn8}]->(_usn3 :`7esn`{#usn7:123.654 =~.e0 =~9e0,_usn3:`1esn`[Null..]}),((@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})) Unwind Extract(_usn4 In 12.e12 Is Null Is Null Where `2esn` Is Null Is Null|0X7[$`6esn`..0e0])[(`7esn` {`8esn`:Count(*) Is Null Is Null,@usn5:.e0 Ends With $`1esn` Ends With 1000})<-[usn1?]-(:`7esn`{usn2:0e0 Is Null})<-[`7esn`?]->(:`2esn`:@usn5{usn2:$`3esn` Ends With @usn6 Ends With 123.654})..] As `8esn`"),
    octest:ct_string("With  [$999[@usn5..][Null..]] Ends With ({usn2:0Xa Contains $`6esn`,_usn3:\"d_str\" Ends With $`3esn`})-[@usn5? *00{@usn5:usn1 Ends With 1.e1 Ends With `4esn`}]-(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})-[:`5esn`|:`1esn`]-(`2esn` ) As `7esn` Order By Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0) Is Not Null Descending Union Unwind $_usn3[0e0..][12.0..] As `2esn` Unwind Extract(`3esn` In 999 Where $`5esn`[.e1][#usn8]|$#usn8[@usn5..$1000]) =~Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $#usn8 =~7 =~.12) =~Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 123.654 Is Not Null Is Not Null) As usn2 With Distinct \"d_str\" Ends With $`3esn` As `5esn`,All(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..]) In {_usn3:$@usn6 Contains `5esn` Contains .e12} Skip 1.e1 Ends With 0x0 Ends With 1e1 Where .e12[``][$1000]"),
    octest:ct_string("With  None(`6esn` In 1000[12.e12][#usn7] Where 9e12[\"d_str\"]) Ends With None(`6esn` In 1000[12.e12][#usn7] Where usn1[9e1..]) Ends With [`5esn` In 12.e12 In 1000,False In $`2esn` In 1e1] Order By $12 Is Null Is Null Descending,`2esn` Is Not Null Is Not Null Ascending Limit [#usn8 In 0x0[_usn4..] Where $_usn3 Is Not Null] Is Not Null Is Not Null Where `3esn`[0x0][$`5esn`] Detach Delete .12[9e1..0X7],[123.654 =~.e0 =~9e0] Starts With {`8esn`:0X7[0xabc][$1000]} Starts With [00['s_str']],`5esn`[$7..01] Union Remove _usn4(Distinct 01234567[`6esn`..]).`8esn`,``:usn2,[`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0X0123456789ABCDEF In _usn3|0.12[123456789..]].`2esn`?"),
    octest:ct_string("Merge usn2=(:#usn8:#usn7{`6esn`:`5esn`[12.0]}) On Create Set {``:$`3esn` Is Null,`1esn`:$123456789[`1esn`..][`7esn`..]}._usn4 =`1esn`,[`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where _usn3[0Xa..]].@usn6 =$#usn8 Contains `5esn` Contains $#usn8,None(`3esn` In 999 Where $123456789 =~usn1 =~0xabc).`5esn`! =`5esn` =~`` On Match Set _usn3+={_usn3:`1esn`[..$#usn7]} Contains Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1) Contains [$1000[00..],$`6esn`[.e12..$`6esn`][$#usn7...0],0Xa[..1.e1]],#usn7+=$12[`3esn`][`3esn`],{_usn3:0Xa[..$`2esn`][..00]}.`5esn`? =[`6esn` In 1000[12.e12][#usn7] Where 12.0[9e12]['s_str']|0.e0 =~01234567 =~01234567] Ends With Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $`8esn`[0.12][12]) Ends With count(1000[Null][$`7esn`],$123456789[`3esn`..`5esn`][1e1..$`5esn`]) Match `5esn`=(((`6esn` {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})<-[`5esn`:_usn4|_usn3 *0X7..0x0]-(#usn7 {`5esn`:00 Starts With usn1 Starts With Count(*),``:$999 Is Not Null})<-[`4esn` *123456789..]-(:`7esn`$#usn8))) Union Delete $@usn6 Ends With 0.0,#usn8 =~#usn7 =~0x0 Union Match ((#usn8 :_usn3:@usn5{`3esn`:@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`],`4esn`:0e0 Is Null}))"),
    octest:ct_string("Match `8esn`=(((:usn1:``)<-[:@usn5|:@usn6 *01234567..123456789]->(`1esn` :`7esn`{`6esn`:1e1 In 12.e12})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`1esn` {`6esn`:07}))) Where $999[...12][...e12] With  *,usn1 Ends With _usn4 Ends With `4esn` As `4esn`,$#usn7 Starts With $`1esn` Starts With 0.12 As #usn7 Order By None(`3esn` In 999 Where 0.e0 Ends With #usn8)[..{usn1:$`2esn` Is Not Null Is Not Null,``:True Ends With `6esn` Ends With 9e0}][..{_usn4:usn2[9e0..0.e0][@usn5..`4esn`],_usn4:.e0['s_str'..][$`8esn`..]}] Desc,Extract(`3esn` In 999 Where $`3esn`[9e0..0.0][_usn4..123456789]|$@usn6 Is Null) Ends With [@usn5 Is Null] Ends With [usn1 In 999 Where `4esn` Is Null Is Null|$123456789[`1esn`..]] Desc Limit `8esn` Starts With $usn2 Delete usn2 =~`6esn`,Extract(`2esn` In $``[$#usn8] Where 01 Starts With $`5esn` Starts With 01234567) Contains Extract(`2esn` In $``[$#usn8] Where $`2esn`[.._usn3]|@usn5 In .e0 In \"d_str\") Contains None(`3esn` In 999 Where 07 Ends With $_usn4 Ends With 0.e0) Union All Unwind 999 Ends With 123456789 Ends With 12.0 As _usn4 Unwind $#usn8[@usn5..$1000] As `5esn` Return *,0 In _usn4 Order By Count(*) Ends With 7 Ends With 0 Ascending,$`3esn` Ends With $7 Ends With `7esn` Ascending Skip {`1esn`:$usn2 =~`6esn` =~`1esn`} Ends With 010 Ends With None(_usn4 In 12.e12 Is Null Is Null Where $`4esn` In 0x0)"),
    octest:ct_string("Merge (usn1 :`1esn`:@usn6)-[?:`4esn`{@usn5:$`2esn` Ends With 1e1,usn1:'s_str'[$`6esn`..][$0..]}]-({@usn5:0.e0 =~01234567 =~01234567,`1esn`:.e1 =~usn2 =~`7esn`}) Unwind 01234567[9e0][.0] As #usn7 Detach Delete .e12 Contains `7esn` Contains 999 Union Match ((`4esn` {_usn3:7 Contains 1000 Contains $usn1})-[#usn8:@usn5|:@usn6 *0..{`6esn`:`6esn` In $``}]->(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[? *0xabc..]->(`6esn` {`5esn`:0x0 =~@usn5 =~01})),@usn6=(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[@usn6{_usn4:$`` Starts With 0x0}]-(usn2 :`7esn`) Where 0xabc[123.654][12] Unwind Filter(`6esn` In .e0['s_str'..][$`8esn`..] Where 12.0[9e12]['s_str'])[None(usn1 In 123.654 =~.e0 =~9e0 Where False Starts With $123456789)..`3esn`(Distinct 0.12[$usn1..$7],01234567[$`7esn`])] As @usn5"),
    octest:ct_string("Remove `4esn`:`7esn`,`3esn`:@usn6 Unwind Count(*)[123.654..12][.0..\"d_str\"] As @usn5 Delete `` In 123456789 In $_usn4,$`6esn` Starts With usn1"),
    octest:ct_string("Match #usn7=((`1esn` :`7esn`)<-[? *01..7]->(#usn8 {usn1:$`8esn` Contains .0 Contains 0.12})),(((_usn4 :@usn5)-[? *..0X0123456789ABCDEF{#usn8:0X7[..`5esn`][..$`7esn`]}]-(#usn7 {@usn5:$`5esn` Contains $usn2})-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2))) Where `` In 123.654 In 0.0 Detach Delete None(`6esn` In 1000[12.e12][#usn7] Where 9e12[\"d_str\"]) Ends With None(`6esn` In 1000[12.e12][#usn7] Where usn1[9e1..]) Ends With [`5esn` In 12.e12 In 1000,False In $`2esn` In 1e1],.e1 Ends With $123456789,(@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]})<-[``?:_usn4|_usn3 *0xabc..{#usn8:$#usn8[..9e12][..$`3esn`],@usn5:\"d_str\"[7..$999]}]->(`5esn` {usn2:`6esn` In $``}) Is Not Null Is Not Null Create @usn5=(_usn4 {`2esn`:1.e1 Is Not Null Is Not Null})<-[_usn4?:`3esn`|_usn4 *7]->({@usn6:0.e0 Contains $1000 Contains 7}),@usn6=(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[@usn6{_usn4:$`` Starts With 0x0}]-(usn2 :`7esn`)"),
    octest:ct_string("With Distinct *,`6esn`[False..] As `6esn` Skip 12 Is Null Is Null Where 1000 Ends With 01234567 Ends With usn1 With  *,1e1 In 12.e12 As @usn6,[`6esn` In .e0['s_str'..][$`8esn`..] Where `8esn`[0x0..]|01[$0]][Extract(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1|usn1 =~12 =~$0)][All(usn1 In 0xabc Is Not Null Is Not Null Where 0x0[$7..][`7esn`..])] Limit Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null|12.0 Contains 12.e12 Contains 0x0) Starts With Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1e1 Contains 0Xa) Union Detach Delete `2esn` Ends With Null Ends With 0xabc,$7 Ends With 12.e12 Ends With `1esn`,Single(`6esn` In 0x0[9e0..] Where $`3esn` Is Not Null) In (`3esn` :`8esn`{usn2:0e0 =~False =~.12})-[? *12{`1esn`:.e0 Ends With $`1esn` Ends With 1000}]->(#usn7 ) Remove [1.e1 Is Not Null Is Not Null,`3esn` Is Not Null Is Not Null].@usn6?,{`6esn`:0[_usn3][.12],@usn6:False[...e0][..$#usn8]}.``?,`4esn`:#usn8:#usn7 Detach Delete 0Xa In $`2esn` In `8esn` Union Unwind Extract(`6esn` In 1000[12.e12][#usn7] Where `7esn` In `8esn` In 12|$123456789[`3esn`..`5esn`][1e1..$`5esn`]) Contains [usn1[0X7..]] Contains Filter(`5esn` In $usn2 Contains $`1esn` Where False[$12]) As `4esn` Delete [.e0 =~7 =~False,0e0 Is Not Null] =~(`5esn` :`8esn`{`1esn`:`7esn` Contains .0 Contains #usn8})<-[`8esn` *0..$12]-(:`2esn`:@usn5{#usn8:0.e0 Contains @usn5 Contains 0X7,`5esn`:0x0[9e0..]})-[_usn3:_usn3|`6esn`]->({usn2:0[1e1..00],@usn6:$`6esn`[.e12..$`6esn`][$#usn7...0]}) =~(`7esn` {`2esn`:9e0[$@usn6]})<-[``?:#usn8|:`6esn`]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]}),Extract(`3esn` In 999 Where $`5esn`[.e1][#usn8]|$#usn8[@usn5..$1000]) =~Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $#usn8 =~7 =~.12) =~Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 123.654 Is Not Null Is Not Null)"),
    octest:ct_string("Return Distinct {@usn6:$12[#usn8..$@usn5][9e0..usn1]} =~Any(usn1 In 999 Where 07['s_str'][$@usn6]) =~(usn2 {`4esn`:$123456789 Ends With 12e12})<-[_usn4:`4esn` *..0x0{`3esn`:$7[$12]}]->(:@usn6$_usn3),{_usn3:`1esn`[..$#usn7]} Contains Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1) Contains [$1000[00..],$`6esn`[.e12..$`6esn`][$#usn7...0],0Xa[..1.e1]] Limit Extract(`3esn` In 999 Where 0.12[123456789..]|00[01234567][Count(*)]) Contains [#usn8 In 0x0[_usn4..] Where 1e1[`3esn`]|$_usn3[0e0..][12.0..]] Contains All(`5esn` In $usn2 Contains $`1esn` Where \"d_str\" Contains $999 Contains `2esn`) Union All Create (:#usn7{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})<-[?:@usn6 *07{_usn3:$`1esn` Is Null}]-(`5esn` {`5esn`:#usn8 Is Not Null,`1esn`:01234567[`6esn`..]})<-[`7esn`:@usn5|:@usn6]->({_usn4:`7esn`[_usn4..][Count(*)..],`1esn`:01234567 In \"d_str\"}),(#usn8 :_usn4{`6esn`:9e1[..01234567][..`4esn`]})-[`7esn`?:``]->(@usn6 {`1esn`:$#usn8 Starts With usn2 Starts With .12,@usn6:07[$`8esn`]})<-[usn1?:@usn6{`5esn`:$7[$12],`6esn`:#usn8 Is Not Null}]-({#usn7:1e1[`3esn`]})"),
    octest:ct_string("Create (((@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})-[:`8esn`|@usn6*..]->(#usn8 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})-[? *..0X0123456789ABCDEF]-(@usn5 {@usn6:$123456789[12.0],#usn7:usn1 =~_usn4 =~$usn1}))),`7esn`=(((:`3esn`{#usn7:_usn3 =~$12})-[`7esn`? *123456789..]-(:`2esn`:@usn5{#usn8:$usn2 Starts With 9e1 Starts With `7esn`})-[ *..0X0123456789ABCDEF{@usn6:`4esn` Is Not Null,`2esn`:@usn6[.0]}]->(`` :usn1:``{@usn6:010[`1esn`..`4esn`]}))) Remove `6esn`:`3esn`,({#usn7:$`3esn` Is Null})<-[`8esn` *0..$12]-(:`2esn`:@usn5{#usn8:0.e0 Contains @usn5 Contains 0X7,`5esn`:0x0[9e0..]}).#usn8! Remove None(usn1 In 123.654 =~.e0 =~9e0 Where $#usn8 =~7 =~.12).@usn6?,({`4esn`:$#usn7[123456789..][$`4esn`..]})<-[`4esn`?:`` *01234567..123456789]-(@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8}).@usn6?"),
    octest:ct_string("Match `6esn`=(({@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]}))"),
    octest:ct_string("Detach Delete #usn7 Ends With 9e0,(`2esn` {_usn3:.e1 Ends With $123456789})<-[?{usn2:9e0[0..1e1]}]->({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})[(`3esn` {`3esn`:@usn5[$`1esn`..][$7..]})-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->(`6esn` {`7esn`:12e12 Ends With 0e0,`8esn`:$_usn4[False..@usn6][`4esn`..$1000]})..[`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0X0123456789ABCDEF In _usn3|0.12[123456789..]]][(_usn4 :`8esn`)-[?:_usn4|_usn3]->(:_usn3:@usn5{`6esn`:$`8esn` Ends With #usn8,`8esn`:123456789 Ends With 9e1 Ends With ``})-[`4esn`?:#usn8|:`6esn` *999{`8esn`:010[`1esn`..`4esn`]}]-({@usn5:07[0..],`8esn`:Count(*)[..$_usn3][..$usn2]})..None(usn1 In 123.654 =~.e0 =~9e0 Where $123456789[`3esn`..`5esn`][1e1..$`5esn`])] Match #usn7=((#usn7 :`5esn`)<-[`2esn`?:`5esn`|:`1esn`]->(:usn2)),((_usn3 :`6esn`:`3esn`{`7esn`:1000 Ends With 01234567 Ends With usn1})-[usn2?:_usn4|_usn3{#usn8:12.0[`3esn`][_usn3]}]-(usn2 :`4esn`:usn2{`3esn`:@usn5[$`1esn`..][$7..]})<-[usn2:`3esn`|_usn4]-(usn2 :@usn6{@usn5:#usn8[True..#usn7][01..@usn5]})) Where 9e1[$`3esn`][$`1esn`] Unwind 9e1[$`5esn`..][`5esn`..] As @usn6 Union Delete Filter(`6esn` In 1000[12.e12][#usn7] Where $usn2 Contains $`1esn`),.12,`7esn` =~12.e12 =~0e0 Union All Match ((`5esn` :``:`6esn`)-[:@usn5|:@usn6 *999{`5esn`:0x0 =~@usn5 =~01}]->(_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})),`5esn`=(@usn5 :`5esn`{@usn5:$`2esn` Ends With 1e1,usn1:'s_str'[$`6esn`..][$0..]})"),
    octest:ct_string("Create `4esn`=((:`8esn`)-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :_usn3:@usn5)),@usn6=(usn2 )<-[? *..0X0123456789ABCDEF{usn2:123456789 Ends With 9e1 Ends With ``,`3esn`:9e0[123456789..0][12.0..@usn6]}]-({``:0.12 Contains 0x0 Contains @usn5}) Remove All(`5esn` In $usn2 Contains $`1esn` Where $#usn8[..123456789][..`2esn`]).@usn5,[$`3esn` Is Null,.12[usn1]].`6esn`? Union Match (:#usn7{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})<-[?:@usn6 *07{_usn3:$`1esn` Is Null}]-(`5esn` {`5esn`:#usn8 Is Not Null,`1esn`:01234567[`6esn`..]})<-[`7esn`:@usn5|:@usn6]->({_usn4:`7esn`[_usn4..][Count(*)..],`1esn`:01234567 In \"d_str\"}),(#usn8 :_usn4{`6esn`:9e1[..01234567][..`4esn`]})-[`7esn`?:``]->(@usn6 {`1esn`:$#usn8 Starts With usn2 Starts With .12,@usn6:07[$`8esn`]})<-[usn1?:@usn6{`5esn`:$7[$12],`6esn`:#usn8 Is Not Null}]-({#usn7:1e1[`3esn`]}) Union Match (((_usn3 :@usn6{@usn5:0e0 =~False =~.12})<-[``?:usn1|#usn7]-(:usn2{usn1:12 Is Null Is Null})<-[:`5esn`|:`1esn`{#usn8:`7esn` Is Null,`4esn`:False[$12]}]->(_usn3 :@usn5{`5esn`:12e12[..9e12][..$@usn6]}))) With Distinct *,[#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]][Filter(`2esn` In $``[$#usn8] Where 01234567[`6esn`..])..][[`3esn` In False In $`2esn` In 1e1 Where .12 =~$#usn7 =~$``|01234567 Is Null]..] As usn1 With  (_usn3 :#usn8:#usn7)<-[{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(`3esn` :`4esn`:usn2)[[`3esn` In 999 Where _usn4[1000..``]|Null[9e1][$`6esn`]]..({_usn4:$1000[$usn1][.e1]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`1esn` {`6esn`:07})<-[`5esn`?]-(@usn5 {`5esn`:0e0[...e1]})] As #usn7,[0Xa[..1.e1],#usn7[.12][usn2],1000 Starts With 0e0 Starts With 0][`7esn`(Distinct $#usn8[@usn5..$1000])] As #usn7,$`4esn` =~07 Order By @usn6(Distinct 0xabc Contains 0)[{_usn4:$`2esn` Ends With 1e1}..][All(_usn4 In 12.e12 Is Null Is Null Where 0e0 =~False =~.12)..] Descending,\"d_str\"[7..$999] Ascending,usn1 =~12 =~$0 Asc Skip .12[usn1] Where `` In 123.654 In 0.0"),
    octest:ct_string("Merge ({@usn5:0x0 =~`5esn` =~$`8esn`})<-[? *..010{usn1:123456789[$_usn4..]}]->(@usn5 {`2esn`:$#usn7[`7esn`..][$`8esn`..],`3esn`:0.12['s_str'..$0][$usn1..9e0]})-[?{#usn7:123.654[``]}]-(`` :#usn8:#usn7{usn1:7 Ends With `3esn` Ends With $`2esn`}) On Match Set `6esn`:@usn5,Single(`7esn` In $`8esn`[0.12][12] Where 01 Is Null).`8esn` =Single(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]) Starts With (:usn1:``{_usn4:1000[12.e12][#usn7]})-[ *7{`4esn`:$#usn7[$`3esn`..$999],`8esn`:$0[00..]}]-({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]}) Starts With {`1esn`:`5esn` In 12.e12 In 1000,`3esn`:0Xa Contains $`6esn`},`5esn` =010 Starts With 0X7 On Create Set `` =usn1[..$123456789][..`1esn`],`4esn`+=123.654 In (:_usn3:@usn5{`1esn`:$`4esn`[.e1..$usn1],``:0x0 =~`5esn` =~$`8esn`})<-[?{``:$`6esn`[.e12]}]-(`4esn` :`3esn`) In [`2esn` In $``[$#usn8]] Merge `6esn`=({@usn6:$@usn5 =~$usn2 =~True,`4esn`:$#usn8 =~7 =~.12})<-[:@usn5|:@usn6 *01234567..123456789]->(`5esn` :``:`6esn`)<-[@usn5?:@usn6 *..010]-(`7esn` :`6esn`:`3esn`)"),
    octest:ct_string("Merge ``=(#usn7 {_usn4:`1esn`[$7][0Xa]})-[``{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null}]->(#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]})-[``:@usn6{`3esn`:.e12[$_usn4..0],usn1:00[$0..usn2][$_usn4..$999]}]-({``:_usn3[9e0..$123456789][0X7..999]}) On Create Set `7esn` =0.e0 =~$@usn5,`6esn`(Distinct #usn8 Is Not Null)._usn4 =1000 Is Not Null"),
    octest:ct_string("Return $7 Ends With 12.e12 Ends With `1esn` As ``,$`2esn`[.._usn3] As usn1 Unwind $usn1 Starts With $0 Starts With $123456789 As @usn6"),
    octest:ct_string("Unwind (_usn4 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8) Is Not Null Is Not Null As #usn8 With Distinct @usn6 In [00[0X7..9e12]] In Single(`3esn` In False In $`2esn` In 1e1 Where 's_str' Ends With $7),{usn1:False[$12],`1esn`:0.e0 Ends With $123456789} Contains `2esn`(Distinct 01234567[`6esn`..],Count(*) Ends With $#usn8 Ends With 0Xa) As _usn3,[`7esn` In $`8esn`[0.12][12] Where 's_str'[$#usn8]][None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1)..(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})-[``?:@usn6]->({``:_usn3[9e0..$123456789][0X7..999]})][[$#usn8 =~7 =~.12,$`6esn`[.e12],_usn4 Starts With `6esn` Starts With $`8esn`]..{usn2:123.654[.e12..\"d_str\"]}] Create (`7esn` :`7esn`)-[{`5esn`:0.e0 =~01234567 =~01234567}]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]}),((`` {_usn4:False[...e0][..$#usn8],`4esn`:.e12[..$_usn4][..#usn7]})<-[? *..010{usn1:123456789[$_usn4..]}]->(@usn5 {`2esn`:$#usn7[`7esn`..][$`8esn`..],`3esn`:0.12['s_str'..$0][$usn1..9e0]})) Union Return Distinct *,usn1[0X7..] As `4esn` Limit [.12 Is Null,12 Ends With 0 Ends With Null,0x0 =~@usn5 =~01] Detach Delete $#usn7 Starts With $`1esn` Starts With 0.12,[`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12]] Ends With [0] Ends With `8esn`,$1000[..`6esn`][..123456789] Return Count(*)[..$_usn3][..$usn2] Skip .0[01234567] Limit (@usn5 :`2esn`:@usn5$#usn8)-[`6esn`?:`1esn`|@usn6 *0xabc..]->(:_usn4{_usn3:`1esn`[Null..]}) Starts With 12.0 Starts With Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null)"),
    octest:ct_string("Remove ({@usn5:.e12 Is Not Null Is Not Null,_usn3:$1000[..`6esn`][..123456789]})<-[`1esn`:`7esn` *0xabc..]->(`7esn` :`2esn`:@usn5).`6esn`"),
    octest:ct_string("Match (((:`2esn`:@usn5{usn1:$usn2[`6esn`..],`3esn`:$_usn4[..$`8esn`]})-[?{#usn7:123.654[``]}]-(`8esn` :`3esn`{`2esn`:$`8esn`[`7esn`],`4esn`:#usn8[1e1..]})<-[_usn3:@usn6]->({@usn6:`5esn` Ends With $999}))),(`1esn` :`4esn`:usn2{`2esn`:9e0[$@usn6]})<-[`1esn`?:_usn4|_usn3]-(`1esn` {@usn6:Null In 0xabc})<-[`5esn`?:`1esn`|@usn6{`5esn`:#usn8 =~$1000 =~$1000,`2esn`:0x0[$7]}]-(:_usn3:@usn5{_usn3:.e0[$`1esn`..][_usn4..]}) Return Distinct [.e1 =~\"d_str\" =~'s_str',$`` Is Not Null Is Not Null,$0[@usn6..][.e12..]] Contains Filter(`6esn` In 0x0[9e0..] Where 0xabc Is Not Null Is Not Null) As `7esn` Limit True Contains .e1 Contains `2esn` Unwind 0.e0 Contains $1000 Contains 7 As `8esn` Union All Return 01[#usn8..1000] As `5esn`,\"d_str\"[0X7..``][@usn5.._usn4] As _usn3,Extract(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1|$`2esn` Is Not Null Is Not Null) =~[`7esn`[..01],1e1 =~$`8esn` =~`1esn`,$`6esn`[.e12..$`6esn`][$#usn7...0]] Order By [#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]][Filter(`2esn` In $``[$#usn8] Where 01234567[`6esn`..])..][[`3esn` In False In $`2esn` In 1e1 Where .12 =~$#usn7 =~$``|01234567 Is Null]..] Ascending,(`` :`8esn`{`5esn`:True Contains .e1 Contains `2esn`})-[@usn6:@usn6 *7]->(`2esn` :_usn4{_usn4:$`8esn` Contains .0 Contains 0.12})<-[? *01234567..123456789]->(:`3esn`{`7esn`:$123456789[`4esn`..]}) Starts With (:#usn8:#usn7{`6esn`:`5esn`[12.0]})-[`5esn`?:usn2|:``{usn2:1000 Starts With 0e0 Starts With 0,`6esn`:9e1[$`3esn`][$`1esn`]}]->(#usn7 :`7esn`)-[:@usn5|:@usn6 *07]-(@usn5 :`1esn`:@usn6{@usn5:`4esn` Is Not Null,`3esn`:.e1 =~usn2 =~`7esn`}) Starts With {`4esn`:`8esn` Is Not Null} Desc Skip $`8esn`[0.12][12] Limit $7 =~`4esn` =~$7 Match #usn7=(`7esn` {`2esn`:1.e1[#usn7][1.e1]})<-[:`5esn`|:`1esn`{#usn8:`7esn` Is Null,`4esn`:False[$12]}]->(`8esn` :`3esn`{`2esn`:$`8esn`[`7esn`],`4esn`:#usn8[1e1..]})<-[#usn8:@usn6]-(:_usn4{@usn6:'s_str' Contains 999}) Where 0.0[`7esn`][`6esn`] Merge usn1=(:`5esn`{`7esn`:'s_str'[$#usn8],``:`1esn`[..$#usn7]})<-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-(`5esn` {_usn3:1.e1 Is Null Is Null})<-[_usn4 *00]-(#usn7 :`7esn`) On Create Set usn1 =Extract(`6esn` In 1000[12.e12][#usn7] Where `7esn` Contains .0 Contains #usn8|$0[00..])[{`2esn`:07['s_str'][$@usn6],``:usn1[..$123456789][..`1esn`]}..`4esn`(Distinct 9e1 Contains 07,1000[07..][1.e1..])][Single(`5esn` In $usn2 Contains $`1esn` Where 0e0['s_str'])..[123456789[0.0..`2esn`][1.e1..$_usn4]]],`6esn`+=01234567[$`7esn`] On Create Set Single(`2esn` In $``[$#usn8] Where $usn1 Ends With $`2esn`).usn1? =#usn7[@usn6..],@usn6+=`4esn` Ends With $#usn8 Ends With 12.e12 Union Match #usn7=(usn2 :#usn8:#usn7{@usn5:`8esn` Ends With $`1esn`,#usn8:\"d_str\" Ends With $1000 Ends With usn2}),(_usn3 {`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`}) Merge _usn4=((`4esn` {@usn6:_usn4[$`8esn`.._usn3][.0..$@usn6]})<-[ *07{usn1:010 =~0e0 =~9e1}]->({@usn5:07[0..],`8esn`:Count(*)[..$_usn3][..$usn2]})) With Distinct *,`6esn`[False..] As `6esn` Skip 12 Is Null Is Null Where 1000 Ends With 01234567 Ends With usn1"),
    octest:ct_string("With  9e0[.e0] As `8esn`,{_usn3:`1esn`[..$#usn7]} Contains Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1) Contains [$1000[00..],$`6esn`[.e12..$`6esn`][$#usn7...0],0Xa[..1.e1]],0x0 In 0X0123456789ABCDEF As usn1 Order By $usn1 Starts With Null Starts With $`` Desc,#usn8(Distinct 0x0[$7],#usn8[1e1..])[[1.e1[#usn7][1.e1]]..{usn1:`2esn` Is Null Is Null}][_usn3(Distinct usn1[$`1esn`..])..Extract(`3esn` In False In $`2esn` In 1e1 Where 1000 Ends With $`5esn`)] Desc Skip ({#usn7:$`3esn` Is Null})<-[?:usn2|:`` *7]->(`6esn` {#usn7:`2esn`[`3esn`..],usn2:$usn2 Starts With $`7esn` Starts With _usn4})-[?:``*{_usn3:12.e12 =~.0}]-({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]}) =~{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]} =~None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1) Merge usn2=(((:@usn5{usn2:$999 Is Not Null})<-[``?:#usn8|:`6esn`]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]})-[usn2?:@usn5|:@usn6]->({#usn8:$`` Is Not Null Is Not Null,`8esn`:$usn2 Starts With 9e1 Starts With `7esn`}))) With Distinct *,$0[00..] As `5esn`,`1esn`[9e12..$123456789] As usn1 Order By .e12 Contains $usn2 Contains $@usn6 Descending,01234567[$`7esn`] Asc Skip 123456789 =~@usn5 =~$`5esn` Limit $#usn7[$`3esn`..$999] Where 0e0 Is Null Union Merge `5esn`=(:`4esn`:usn2{_usn3:Null Is Not Null Is Not Null,`4esn`:$1000 Is Not Null})-[?:`3esn`|_usn4 *01..7{@usn5:`4esn`}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]})<-[?:usn2|:`` *7]->(`` :_usn3:@usn5) Optional Match #usn7=((@usn5 :_usn3:@usn5)),(((`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})<-[?:@usn5|:@usn6]->(#usn8 :#usn8:#usn7)-[#usn7?:`7esn` *..010]-(`1esn` {usn2:@usn5[$`1esn`..][$7..],@usn6:$#usn8[0xabc..usn2]}))) Where `1esn`[9e12..$123456789] Union Unwind 0.0 =~$#usn7 =~`1esn` As _usn3 Delete [`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $1000[00..]|`1esn`[usn1]][{usn2:$`6esn`[.e12],`4esn`:`4esn` In .12 In $#usn8}..]"),
    octest:ct_string("Merge usn2=(`2esn` {_usn3:0[1e1..00]})-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2) On Match Set Extract(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $`6esn`[00..$12]).`2esn` =$@usn6[_usn4..][$1000..],#usn7 =usn1[..$123456789][..`1esn`] On Match Set `7esn`+=Extract(`5esn` In $usn2 Contains $`1esn` Where Count(*)[_usn3..])[..None(`5esn` In $usn2 Contains $`1esn` Where `3esn` Is Not Null Is Not Null)][..Extract(#usn8 In 07['s_str'][$@usn6] Where True)] Remove Extract(usn1 In 123.654 =~.e0 =~9e0 Where #usn7 Ends With 9e0|7 In 1e1).usn1!,{`5esn`:1.e1 Is Null Is Null,`6esn`:9e12 In 123.654 In True}.usn2"),
    octest:ct_string("Return *,$`6esn` Contains 0xabc,Count(*)[123.654..12][.0..\"d_str\"] Create (:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`}) With  12[$`5esn`..$`7esn`][$1000..$_usn4] As #usn8,01[..12e12][..$usn2] As `5esn`,({`7esn`:$@usn5 =~$usn2 =~True,_usn3:00[$0..usn2][$_usn4..$999]})-[`3esn`]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5})<-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]})[{usn1:$`5esn`[.e1][#usn8],_usn3:12e12 Ends With `6esn`}] Limit $`7esn` Is Not Null Is Not Null"),
    octest:ct_string("With Distinct #usn8(Distinct 0x0[$7],#usn8[1e1..])[[1.e1[#usn7][1.e1]]..{usn1:`2esn` Is Null Is Null}][_usn3(Distinct usn1[$`1esn`..])..Extract(`3esn` In False In $`2esn` In 1e1 Where 1000 Ends With $`5esn`)] As `6esn`,@usn5(0X0123456789ABCDEF Is Null,0X7[0xabc][$1000])[None(`3esn` In False In $`2esn` In 1e1 Where `` Contains 010 Contains $1000)],$`1esn`[``..123456789][010..1.e1] Order By {@usn5:@usn5[..$999][..$0]} =~[`3esn` In @usn6[..\"d_str\"][..01] Where `1esn`[$7][0Xa]|.e0 Contains 999] =~[$usn2 Starts With $`7esn` Starts With _usn4] Asc,Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 01[$0])[{`5esn`:@usn6[$usn1][$`2esn`],`1esn`:12.0[9e12]['s_str']}..][Any(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0)..] Asc Merge `6esn`=((:usn1:``{_usn4:1000[12.e12][#usn7]})) Union Create #usn7=(usn2 :#usn8:#usn7{@usn5:`8esn` Ends With $`1esn`,#usn8:\"d_str\" Ends With $1000 Ends With usn2}),(_usn3 {`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`}) Unwind #usn7 Is Not Null As _usn3 Merge `6esn`=((`6esn` {`7esn`:`4esn` In $`2esn` In @usn5})-[:@usn5|:@usn6 *01234567..123456789]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null}))"),
    octest:ct_string("Match `6esn`=(({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})-[`6esn`:`7esn` *7{`6esn`:`6esn` In $``}]-(`` :_usn3:@usn5)<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]-({``:0.12 Contains 0x0 Contains @usn5})),`8esn`=((:@usn5{#usn7:0x0 In 0X0123456789ABCDEF,`2esn`:0Xa[Count(*)][0xabc]})<-[usn1:#usn8|:`6esn` *0xabc..]->(`8esn` :`1esn`:@usn6)<-[`1esn`?:`3esn`|_usn4{_usn4:12e12 Ends With $_usn4 Ends With $`2esn`,``:.12 Is Not Null}]-(:`1esn`:@usn6{`5esn`:.e12[$_usn4..0],`4esn`:$#usn8 In True In #usn7})) Where 07 Ends With $_usn4 Ends With 0.e0 Create `7esn`=((:`1esn`:@usn6{`1esn`:12.0[9e12]['s_str'],`3esn`:$123456789 Is Not Null})),(({_usn4:$`5esn` Starts With $`3esn` Starts With 1.e1,`3esn`:1000[Null][$`7esn`]})-[? *999]-({_usn3:123.654 Is Not Null Is Not Null})<-[usn1?:`8esn`|@usn6]->(#usn8 :#usn7{`2esn`:0.e0[.e12]})) Union Optional Match `7esn`=(usn1 :_usn4)<-[usn1]->(:`3esn`{`7esn`:12.e12[.12..$_usn3][0e0..9e0],`7esn`:0X7[..True][..01234567]})<-[_usn3?:`` *..010{usn2:`7esn`[_usn4..][Count(*)..]}]->(`8esn` :``:`6esn`{#usn7:$`3esn` Is Null}),usn1=(`7esn` :`7esn`)-[?:`` *07{`1esn`:$#usn7[$`3esn`..$999]}]->(_usn3 {_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null}) Return Distinct `8esn`['s_str'..],usn1 Is Null Is Null As `2esn` Order By 01[`3esn`][_usn3] Asc,$`6esn` Starts With usn1 Descending Skip `7esn`[`7esn`] Limit 0.e0 Contains $123456789 Contains 123456789"),
    octest:ct_string("Merge ``=(`3esn` {``:`6esn`[`7esn`..$_usn3][9e0..#usn8],`8esn`:.0[01234567]})<-[?{usn1:$#usn7[..$999][..9e1]}]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})-[`6esn`?:usn1|#usn7]-(#usn7 :`3esn`{usn2:$`6esn`[.e12]}) On Match Set @usn6 =Extract(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0|0[_usn3][.12]) Starts With (#usn8 :`8esn`)<-[`2esn`?:`3esn`|_usn4]-(#usn7 :`7esn`{`3esn`:$#usn8[..123456789][..`2esn`],#usn8:0.e0 Ends With #usn8})-[:`5esn`|:`1esn`]-(@usn5 :`5esn`),`3esn` =$usn2 In 12,`` =$#usn8 Is Null Is Null On Match Set @usn5 =Filter(`6esn` In .e0['s_str'..][$`8esn`..]) Is Not Null Is Not Null,`5esn`+=[_usn4 In 12.e12 Is Null Is Null Where 0e0 =~False =~.12|Count(*) Contains 12e12 Contains 0xabc] Ends With {#usn7:_usn3[0Xa..]} Ends With _usn4(Distinct .e0 Contains 999) Optional Match ({@usn6:$#usn8[0e0..][07..]})-[`1esn`?]->(`7esn` :`8esn`{usn2:`5esn` =~``,`7esn`:`7esn` Is Not Null Is Not Null})-[:#usn7|`5esn`]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null}),`8esn`=(((`2esn` {_usn3:0[1e1..00]})-[_usn4?:usn2|:`` *7]-(`5esn` {`1esn`:999 Ends With $`4esn`})<-[`1esn`:_usn4|_usn3 *00{`1esn`:$#usn8 Starts With usn2 Starts With .12,@usn6:07[$`8esn`]}]-(`3esn` :`8esn`))) Where True[7][``]"),
    octest:ct_string("Detach Delete `6esn`[_usn3] Remove (:#usn8:#usn7{`6esn`:`5esn`[12.0]})-[usn2?:#usn7|`5esn` *..0x0{#usn8:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}]-(:@usn5{usn2:$999 Is Not Null})<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]-({``:0.12 Contains 0x0 Contains @usn5}).usn1,Extract(`3esn` In 999 Where 0 Contains $@usn5|$usn1[usn1..$`8esn`][12e12..$``]).#usn7,(:`6esn`:`3esn`{`5esn`:$7[$12],`6esn`:#usn8 Is Not Null})-[`6esn`?:`1esn`|@usn6 *0xabc..]-(`2esn` :@usn5{@usn6:.e0 =~7 =~False}).#usn8 Create (:`1esn`:@usn6{`5esn`:123.654[0Xa..0x0][.12..12e12],`8esn`:_usn3[..usn2]})<-[usn1:#usn8|:`6esn` *0xabc..]->(`8esn` :`1esn`:@usn6) Union All Unwind 7 =~$12 =~0X7 As `5esn` Union Unwind usn1 Ends With 1.e1 Ends With `4esn` As `1esn` With Distinct Any(`7esn` In $`8esn`[0.12][12] Where usn1 In 010) As `6esn` Order By 0 Asc,Filter(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1)[Extract(usn1 In 123.654 =~.e0 =~9e0 Where _usn3[0Xa..])..][{`4esn`:$123456789 =~usn1 =~0xabc,_usn4:True}..] Asc Where 07[$`8esn`]"),
    octest:ct_string("Optional Match @usn6=(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[@usn6{_usn4:$`` Starts With 0x0}]-(usn2 :`7esn`),`6esn`=(((`3esn` :usn1:``)<-[``{#usn7:$`2esn` =~False,``:12e12[..9e12][..$@usn6]}]-(`2esn` :`1esn`:@usn6{#usn8:.12 Is Not Null})-[@usn6{_usn4:$`` Starts With 0x0}]->(`1esn` {#usn7:$`7esn`[`2esn`]}))) Detach Delete 0.e0 Ends With #usn8 Union All Create ((@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})),`2esn`=((`5esn` {`1esn`:999 Ends With $`4esn`})<-[`7esn`?]->(:``:`6esn`{`5esn`:_usn3 =~$12})-[?:usn2|:`` *7]-(`1esn` {@usn6:`1esn`[$7][0Xa]})) Return Distinct *,$`6esn` Starts With $@usn6 Skip $`6esn` Is Not Null Is Not Null Remove {`8esn`:'s_str'[$#usn8]}.#usn8!,Extract(_usn4 In 12.e12 Is Null Is Null Where `2esn` Is Null Is Null).usn1?"),
    octest:ct_string("Detach Delete 01234567 In \"d_str\",False Contains $`1esn` Contains @usn6"),
    octest:ct_string("Return Distinct 999 Ends With 123456789 Ends With 12.0 As `` Order By .12[..07] Desc,Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where `1esn`[Null..])[[`` Contains .e1 Contains 9e12,7 Starts With $@usn6]..Extract(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0x0|07[0..])][[Null Is Null Is Null,`1esn`[usn1],01[..0X7]]..count($`7esn` Ends With $_usn4 Ends With `5esn`)] Asc,$0 Contains 7 Contains 1.e1 Asc Skip $`4esn` In [`6esn` In .e0['s_str'..][$`8esn`..] Where 12.0[9e12]['s_str']|_usn4[#usn7..#usn8]] In #usn8($usn1[usn1..$`8esn`][12e12..$``]) Detach Delete 9e12[\"d_str\"..usn1][$7..0x0],12e12 Ends With 0 Ends With $@usn6,usn2 Starts With 00 Union All With Distinct *,None(#usn8 In 0x0[_usn4..] Where #usn8 Is Not Null) Is Not Null As @usn5,`3esn` Starts With $@usn5 Starts With 0xabc As `6esn` Skip 9e0[$`4esn`] Limit $0 Ends With .12 Where 0x0 =~@usn5 =~01 Unwind $`2esn` Ends With 1e1 As _usn4 Optional Match #usn8=(`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]})-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->($@usn6)<-[`8esn`?:usn1|#usn7 *01..7{usn1:123456789[$_usn4..]}]-(@usn5 :`2esn`:@usn5$#usn8)"),
    octest:ct_string("Remove Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 9e0[0..1e1]).`5esn`! Match (((`2esn` :_usn4{`7esn`:`2esn`[`3esn`..],`6esn`:.12 Is Not Null})<-[`1esn`?:`3esn`|_usn4*..]-(:`6esn`:`3esn`{`3esn`:123.654[0Xa..0x0][.12..12e12]})-[?:`8esn`|@usn6*{``:0.e0 Contains $123456789 Contains 123456789,`4esn`:#usn7 Is Not Null Is Not Null}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]}))) Union All Return 0 Contains $@usn5 As `8esn` Order By $`` Starts With 0x0 Descending Limit All(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $123456789 Is Not Null) Is Null Is Null Match `6esn`=(({@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})),({`2esn`:0,`3esn`:$`7esn` Starts With 07 Starts With `1esn`}) Where 9e12[1.e1]"),
    octest:ct_string("Create ((@usn5 :_usn3:@usn5)<-[``? *01234567..123456789{``:9e12 In 123.654 In True}]->(:`5esn`{`7esn`:0Xa[Count(*)][0xabc],`2esn`:`4esn` Ends With 's_str' Ends With @usn6})<-[?:@usn5|:@usn6]->(#usn8 :`4esn`:usn2)),`7esn`=(`6esn` :`2esn`:@usn5) Return *,$@usn6[..``],9e1[$#usn8] As _usn3 Order By 00 Starts With 0X7 Starts With 123456789 Asc,`2esn`(Distinct 01234567[`6esn`..],Count(*) Ends With $#usn8 Ends With 0Xa)[..All(_usn4 In 12.e12 Is Null Is Null Where 0e0 =~False =~.12)][..Filter(`7esn` In $`8esn`[0.12][12] Where 9e0[123456789..0][12.0..@usn6])] Descending Skip (:`1esn`:@usn6{`1esn`:12.0[9e12]['s_str'],`3esn`:$123456789 Is Not Null})<-[:`3esn`|_usn4 *12]->(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null})<-[usn2?:`8esn`|@usn6{#usn7:$`3esn` Is Null}]->(`2esn` :`8esn`)[Extract(`3esn` In 999|0 Is Null Is Null)..None(`1esn` In 07 Ends With $_usn4 Ends With 0.e0)][{`7esn`:$@usn5 =~$usn2 =~True,_usn3:00[$0..usn2][$_usn4..$999]}..Any(usn1 In 0xabc Is Not Null Is Not Null Where 12e12 Ends With `6esn`)] Limit `4esn` Starts With $#usn8 Starts With $#usn8 With Distinct *,$0[00..] As `5esn` Skip 7[$`5esn`..`4esn`] Where .e12 =~\"d_str\" =~@usn5 Union All Return Distinct @usn6 In [00[0X7..9e12]] In Single(`3esn` In False In $`2esn` In 1e1 Where 's_str' Ends With $7) Merge usn1=({usn1:$7[$12]})<-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]-(#usn8 :#usn7{`2esn`:0.e0[.e12]})<-[:@usn6]->(:`7esn`$12) On Match Set None(usn1 In 999 Where @usn6 Ends With 0.12 Ends With `3esn`).`3esn`! =`5esn`[0e0..],_usn3+=01234567[..00][..$`3esn`] On Create Set usn2+=$123456789 Is Null Is Null,`1esn` =None(`7esn` In $`8esn`[0.12][12] Where 01 Is Null)[Single(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 999 Ends With 123456789 Ends With 12.0)..][None(usn1 In 0xabc Is Not Null Is Not Null Where 123456789[..0])..] Create (_usn3 :@usn6{@usn5:0e0 =~False =~.12})-[?:``]->(@usn6 :``:`6esn`{#usn7:9e1 Contains _usn3}) Union With Distinct Any(usn1 In 0xabc Is Not Null Is Not Null Where 12e12 Ends With `6esn`)[[`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 7 =~False|`6esn` Is Not Null]] As `8esn`,$#usn8 =~7 =~.12 As `5esn` Where $`4esn`[$@usn5..`7esn`]"),
    octest:ct_string("Merge usn1=((`` :usn2{@usn5:usn2,usn1:0.0[.12..`8esn`]})<-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]-(`8esn` :#usn7)) On Match Set @usn6 =$`8esn`[0.12][12],`8esn` =999[..01234567][..7] On Create Set @usn6 ={`8esn`:.12 Is Not Null,_usn3:Count(*) In $`2esn`}[..[@usn6[$0..Null],$999[010..],$`6esn`[$`6esn`..][0X7..]]] Merge ``=(`4esn` :`2esn`:@usn5{#usn8:$#usn7[9e12..12]})-[:#usn8|:`6esn`{#usn8:0X7[..`5esn`][..$`7esn`]}]->(`2esn` :@usn6) On Match Set `3esn` =7[$`5esn`..`4esn`],{`5esn`:0.0 Starts With Null Starts With .e12}.#usn7? ='s_str'[$#usn8] On Match Set `4esn`+=Filter(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1)[Extract(usn1 In 123.654 =~.e0 =~9e0 Where _usn3[0Xa..])..][{`4esn`:$123456789 =~usn1 =~0xabc,_usn4:True}..],`1esn`+=123456789 Ends With 9e1 Ends With `` Remove usn1(usn1 Ends With .0 Ends With `4esn`).`7esn`?,Any(`2esn` In $``[$#usn8] Where 0x0[$7]).`8esn` Union All Merge _usn3=(((usn2 :@usn6)-[{usn1:Count(*)[..12][..$999],#usn8:usn1 In 010}]->(`1esn` :`8esn`)<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]-(@usn6 :``:`6esn`))) On Create Set `1esn`+=usn2[Count(*)][$`1esn`]"),
    octest:ct_string("Detach Delete {@usn6:$12[#usn8..$@usn5][9e0..usn1]} =~Any(usn1 In 999 Where 07['s_str'][$@usn6]) =~(usn2 {`4esn`:$123456789 Ends With 12e12})<-[_usn4:`4esn` *..0x0{`3esn`:$7[$12]}]->(:@usn6$_usn3),`7esn`[..$`5esn`],$1000[00..] Detach Delete [$123456789[`3esn`..`5esn`][1e1..$`5esn`],0x0 =~`5esn` =~$`8esn`,123.654[.e12..\"d_str\"]] In {#usn8:#usn7 In #usn7} In {usn1:7 Ends With `3esn` Ends With $`2esn`},12[$`3esn`..],07[$`8esn`] Union Merge (:`7esn`{_usn3:01[$0]})<-[{usn1:0.e0 =~01234567 =~01234567,``:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}]-(`2esn` {_usn3:0[1e1..00]})-[_usn3:_usn3|`6esn`]->({usn2:0[1e1..00],@usn6:$`6esn`[.e12..$`6esn`][$#usn7...0]}) On Match Set [`6esn` In 1000[12.e12][#usn7] Where 0X0123456789ABCDEF Is Not Null].`8esn` =`1esn`[9e12..] On Create Set `6esn` =999[..01234567][..7],usn2:``:`6esn` Match #usn7=(`7esn` {`2esn`:1.e1[#usn7][1.e1]})<-[:`5esn`|:`1esn`{#usn8:`7esn` Is Null,`4esn`:False[$12]}]->(`8esn` :`3esn`{`2esn`:$`8esn`[`7esn`],`4esn`:#usn8[1e1..]})<-[#usn8:@usn6]-(:_usn4{@usn6:'s_str' Contains 999}) Union With  7 Starts With Null Starts With Null Order By @usn6 Starts With #usn8 Starts With $#usn7 Descending Limit 12.e12 Is Not Null Where 0.12 Contains 0x0 Contains @usn5"),
    octest:ct_string("Merge `1esn`=((:#usn7{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]})) On Match Set Filter(#usn8 In 07['s_str'][$@usn6] Where 01234567 In \"d_str\").`4esn`? =$123456789[..$`7esn`][..\"d_str\"] Union Return Distinct True[07] Order By $`8esn` Contains $`2esn` Contains False Descending,$_usn3[0e0..][12.0..] Ascending Limit 9e1[$`2esn`..][12.e12..] Detach Delete [usn2 Contains 07 Contains False,.12[usn1]] Contains [0 Contains $@usn5,False Contains $`1esn` Contains @usn6],0.12[123456789..] Union With Distinct *,$0[00..] As `5esn` Skip 7[$`5esn`..`4esn`] Where `4esn` Starts With $#usn8 Starts With $#usn8 Merge usn2=(`2esn` {_usn3:0[1e1..00]})-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2) On Match Set Extract(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $`6esn`[00..$12]).`2esn` =$@usn6[_usn4..][$1000..],#usn7 =usn1[..$123456789][..`1esn`] On Match Set `7esn`+=Extract(`5esn` In $usn2 Contains $`1esn` Where Count(*)[_usn3..])[..None(`5esn` In $usn2 Contains $`1esn` Where `3esn` Is Not Null Is Not Null)][..Extract(#usn8 In 07['s_str'][$@usn6] Where True)]"),
    octest:ct_string("Merge ``=(_usn4 )-[ *0xabc..{``:0xabc =~01,`7esn`:$#usn7[123456789..][$`4esn`..]}]-({#usn7:1e1[`3esn`]}) On Create Set usn1+=.e0[..$`5esn`][..``],`2esn`+=@usn5 Ends With 1000,[`4esn` Ends With 's_str' Ends With @usn6,$`4esn` In 0x0].`6esn`! =_usn3 =~$12 Optional Match #usn7=((@usn5 :_usn3:@usn5)),(((`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})<-[?:@usn5|:@usn6]->(#usn8 :#usn8:#usn7)-[#usn7?:`7esn` *..010]-(`1esn` {usn2:@usn5[$`1esn`..][$7..],@usn6:$#usn8[0xabc..usn2]}))) Where `1esn`[9e12..$123456789]"),
    octest:ct_string("Merge ``=((`4esn` {``:0.12 Contains 0x0 Contains @usn5})) On Create Set `` =usn1[..$123456789][..`1esn`],`4esn`+=123.654 In (:_usn3:@usn5{`1esn`:$`4esn`[.e1..$usn1],``:0x0 =~`5esn` =~$`8esn`})<-[?{``:$`6esn`[.e12]}]-(`4esn` :`3esn`) In [`2esn` In $``[$#usn8]] Union All Merge #usn7=((@usn5 :_usn3:@usn5)) On Create Set `5esn`+=`6esn`(1000[12.e12][#usn7],0x0 =~`5esn` =~$`8esn`) Is Null,`8esn`:usn2 Unwind Null Is Null Is Null As `8esn` Match (((:`7esn`{_usn3:01[$0]})<-[`2esn`?:`3esn`|_usn4]-(@usn5 :`5esn`)-[`7esn`? *0Xa{`3esn`:Count(*)[_usn3..]}]->(#usn7 :`3esn`{_usn3:.e0[$`1esn`..][_usn4..]}))) Where ``[0X7..][$@usn6..] Union All Remove [`3esn` In 999 Where usn1[$`1esn`..]|0e0 In `8esn` In 0xabc].#usn7!,{#usn8:123456789[..0],#usn8:.e12 =~\"d_str\" =~@usn5}.`6esn`!"),
    octest:ct_string("Remove [@usn5[$`1esn`..][$7..],True[$usn1..12][``..\"d_str\"],0X0123456789ABCDEF[$_usn3][$_usn4]].@usn5! Union Return $`4esn`[$1000..$`4esn`][0x0..$_usn3],$`1esn` Is Null Order By 07 Descending Skip `7esn`(.e0 =~7 =~False,010 Is Null Is Null) Starts With [$_usn4 =~0X7,`4esn`,0.0 Ends With $usn1 Ends With $999] Starts With {@usn5:Count(*)[..$_usn3][..$usn2],@usn5:$1000[$usn1][.e1]} With  0.0 Starts With Null Starts With .e12 As `4esn`,.12 Is Not Null As usn2 Skip `3esn`[$`7esn`..12] With  _usn4[#usn7..#usn8] Order By $#usn8 In `` Desc Limit @usn6(Distinct 0xabc Contains 0)[{_usn4:$`2esn` Ends With 1e1}..][All(_usn4 In 12.e12 Is Null Is Null Where 0e0 =~False =~.12)..] Where 7 Starts With $@usn6 Union All Merge (`2esn` :`8esn`)-[`6esn`?:`1esn`|@usn6 *0xabc..]->(#usn8 :`5esn`{_usn3:'s_str' Starts With $usn2,`2esn`:$`2esn` Starts With 9e12})<-[:`4esn`]-(:``:`6esn`{@usn6:`2esn`[``..],_usn3:12.0 In 07}) On Create Set _usn4 =False Is Not Null Is Not Null,`7esn`+={`8esn`:.12 Is Not Null,_usn3:Count(*) In $`2esn`}[..[@usn6[$0..Null],$999[010..],$`6esn`[$`6esn`..][0X7..]]],``+=Extract(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 123456789[0.0..`2esn`][1.e1..$_usn4]) Ends With Extract(#usn8 In 07['s_str'][$@usn6] Where 9e12[$123456789..$usn2]|12.e12 Is Null Is Null) Ends With Filter(`3esn` In 999 Where .12[0X0123456789ABCDEF..]) Return .e1[01234567] As `6esn`,01 In $7 In $1000 As #usn7,$`1esn` Starts With True Starts With @usn5 Skip {`2esn`:$`2esn` Starts With 9e12} Contains {`3esn`:@usn5['s_str'..$`2esn`],usn2:#usn8[..0X0123456789ABCDEF][...0]} Limit (#usn7 :`3esn`{_usn3:.e0[$`1esn`..][_usn4..]})-[#usn8?:usn1|#usn7{`8esn`:$#usn7[`7esn`..][$`8esn`..]}]-(:`1esn`:@usn6) Is Not Null Is Not Null Create ((@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})),`2esn`=((`5esn` {`1esn`:999 Ends With $`4esn`})<-[`7esn`?]->(:``:`6esn`{`5esn`:_usn3 =~$12})-[?:usn2|:`` *7]-(`1esn` {@usn6:`1esn`[$7][0Xa]}))"),
    octest:ct_string("Return Distinct Count(*)[..12][..$999] As _usn3,$usn2['s_str'..usn1],12.e12 Contains 0X7 Contains Count(*) Order By `2esn`[0.e0..$999] Ascending,``(Distinct `7esn`[`8esn`][#usn7]) Contains (:@usn6{usn2:12.e12[.12..$_usn3][0e0..9e0]})-[`7esn`?:`2esn`|:`7esn`]-(#usn8 :`7esn`) Contains Any(`3esn` In False In $`2esn` In 1e1 Where True Contains .e1 Contains `2esn`) Descending,@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`] Desc Skip 9e0[$@usn6] Return Distinct `` In 123456789 In $_usn4 Order By @usn6(Distinct $0 Contains 7 Contains 1.e1)[(_usn4 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8)][Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0X0123456789ABCDEF In _usn3)] Asc Limit `6esn`[.0..$_usn3]"),
    octest:ct_string("With Distinct [$999[@usn5..][Null..]] Ends With ({usn2:0Xa Contains $`6esn`,_usn3:\"d_str\" Ends With $`3esn`})-[@usn5? *00{@usn5:usn1 Ends With 1.e1 Ends With `4esn`}]-(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})-[:`5esn`|:`1esn`]-(`2esn` ) As `7esn`,00[0X7..9e12] As #usn8 Order By 00 =~999 =~07 Asc,None(`6esn` In 1000[12.e12][#usn7] Where 9e12[\"d_str\"]) Ends With None(`6esn` In 1000[12.e12][#usn7] Where usn1[9e1..]) Ends With [`5esn` In 12.e12 In 1000,False In $`2esn` In 1e1] Descending,.e0 =~$1000 Ascending Limit {`7esn`:01234567[9e0][.0],`2esn`:999 Ends With $`4esn`}[`4esn`(.12 In 01234567 In _usn4,12.0[9e12]['s_str'])..] Where .e0 Contains 999 Merge @usn5=(`` :_usn3:@usn5) On Match Set `6esn`:@usn5,Single(`7esn` In $`8esn`[0.12][12] Where 01 Is Null).`8esn` =Single(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]) Starts With (:usn1:``{_usn4:1000[12.e12][#usn7]})-[ *7{`4esn`:$#usn7[$`3esn`..$999],`8esn`:$0[00..]}]-({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]}) Starts With {`1esn`:`5esn` In 12.e12 In 1000,`3esn`:0Xa Contains $`6esn`},`5esn` =010 Starts With 0X7 On Create Set `` =usn1 Is Null Is Null Union All Match usn2=(((`` :usn1:``{#usn7:$123456789[`4esn`..]})<-[@usn5?{`7esn`:`6esn` In $``}]->(usn1 {_usn3:#usn7 Ends With 0.12})<-[? *123456789..{`7esn`:.e12 =~@usn5,`3esn`:`5esn`[0e0..]}]-(`4esn` ))),@usn6=(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[@usn6{_usn4:$`` Starts With 0x0}]-(usn2 :`7esn`) Optional Match usn2=(`7esn` {`8esn`:0 Is Null Is Null})<-[`4esn`?{`8esn`:$@usn5 Starts With Count(*) Starts With $usn1,#usn7:0.e0[.e12]}]->(:`6esn`:`3esn`{@usn6:#usn8 Is Not Null,usn2:1e1 Is Null})-[#usn8?:usn1|#usn7{`8esn`:$#usn7[`7esn`..][$`8esn`..]}]-(:`1esn`:@usn6),#usn8=((`` :usn2)<-[_usn4?:`3esn`|_usn4 *7]-(`5esn` :usn1:``)) Remove _usn4(Distinct 00[0X7..9e12]).usn1!,[1e1 =~$`8esn` =~`1esn`].`3esn`? Union All Remove Filter(`3esn` In False In $`2esn` In 1e1 Where $`4esn` =~07).`5esn`!,[`6esn` In 0x0[9e0..] Where $123456789 In 010 In $`8esn`|$7[$12]].@usn5?,Single(`6esn` In .e0['s_str'..][$`8esn`..] Where $@usn5 =~$usn2 =~True).`6esn`? Return Distinct 12[$`3esn`..] As _usn4 Order By 0xabc =~01 Descending,#usn7(usn2 =~`6esn`) Is Null Is Null Desc,0Xa Contains $#usn8 Contains `5esn` Asc Limit ``[@usn6][9e0] Detach Delete `1esn`[Null..],1000 Starts With 0e0 Starts With 0"),
    octest:ct_string("With Distinct [0Xa[..$`2esn`][..00]] Starts With (@usn6 )-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(:`7esn`{`2esn`:.e12 Is Not Null Is Not Null,`4esn`:_usn4[1000..``]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`6esn` ) As `4esn` Skip `7esn`[0.e0..False][0e0..$_usn4] Union Match usn2=(`7esn` {`8esn`:0 Is Null Is Null})<-[`4esn`?{`8esn`:$@usn5 Starts With Count(*) Starts With $usn1,#usn7:0.e0[.e12]}]->(:`6esn`:`3esn`{@usn6:#usn8 Is Not Null,usn2:1e1 Is Null})-[#usn8?:usn1|#usn7{`8esn`:$#usn7[`7esn`..][$`8esn`..]}]-(:`1esn`:@usn6) Where $`2esn` =~$123456789 =~usn2"),
    octest:ct_string("With Distinct *,All(`2esn` In $``[$#usn8] Where $`2esn`[.._usn3]) =~[`6esn`[_usn3],12.0 In 07] =~[123456789[0.0..`2esn`][1.e1..$_usn4]] Order By 999[..\"d_str\"] Descending,$usn2[`6esn`..] Asc Skip `6esn`[False..] Limit Extract(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1|$`2esn` Is Not Null Is Not Null) =~[`7esn`[..01],1e1 =~$`8esn` =~`1esn`,$`6esn`[.e12..$`6esn`][$#usn7...0]]"),
    octest:ct_string("With Distinct [`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where @usn6[.0]] Ends With (`1esn` :`7esn`)<-[_usn3]-(`6esn` :`8esn`)-[`2esn`? *7]->(@usn6 :_usn3:@usn5) Ends With Filter(`6esn` In .e0['s_str'..][$`8esn`..] Where Null In 0xabc) Order By `5esn` In $usn1 In `4esn` Desc Skip `7esn`(.e0 =~7 =~False,010 Is Null Is Null) Starts With [$_usn4 =~0X7,`4esn`,0.0 Ends With $usn1 Ends With $999] Starts With {@usn5:Count(*)[..$_usn3][..$usn2],@usn5:$1000[$usn1][.e1]} Match #usn7=(({_usn4:$`5esn` Starts With $`3esn` Starts With 1.e1,`3esn`:1000[Null][$`7esn`]})-[? *999]-({_usn3:123.654 Is Not Null Is Not Null})<-[usn1?:`8esn`|@usn6]->(#usn8 :#usn7{`2esn`:0.e0[.e12]})),((`` :usn1:``)-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->(`8esn` :#usn7)<-[?{`5esn`:$1000 =~$`8esn` =~$`2esn`,_usn3:$`` Starts With 0x0}]->(`2esn` :`5esn`{`1esn`:$@usn6 Ends With 0.0}))"),
    octest:ct_string("Optional Match ((`7esn` {@usn6:.e0[123456789..][$`2esn`..],``:$0[`5esn`][9e12]})-[:`1esn`|@usn6 *0..{``:$`4esn` In 0x0}]-(:_usn3:@usn5{_usn3:.e0[$`1esn`..][_usn4..]})<-[?:#usn8|:`6esn`*]->(@usn6 :@usn5{`8esn`:$@usn6 Contains 0e0})),`7esn`=(((:`3esn`{#usn7:_usn3 =~$12})-[`7esn`? *123456789..]-(:`2esn`:@usn5{#usn8:$usn2 Starts With 9e1 Starts With `7esn`})-[ *..0X0123456789ABCDEF{@usn6:`4esn` Is Not Null,`2esn`:@usn6[.0]}]->(`` :usn1:``{@usn6:010[`1esn`..`4esn`]}))) Where 's_str' =~$`4esn` =~@usn5 Union Detach Delete All(`7esn` In $`8esn`[0.12][12] Where @usn5[..$999][..$0])[..({usn2:1000 Starts With 0e0 Starts With 0,`6esn`:9e1[$`3esn`][$`1esn`]})<-[`3esn`:_usn3|`6esn`]->(usn1 :#usn8:#usn7)],#usn8(Distinct 0x0[$7],#usn8[1e1..])[[1.e1[#usn7][1.e1]]..{usn1:`2esn` Is Null Is Null}][_usn3(Distinct usn1[$`1esn`..])..Extract(`3esn` In False In $`2esn` In 1e1 Where 1000 Ends With $`5esn`)],`8esn` Is Not Null"),
    octest:ct_string("Unwind 123.654 Is Not Null Is Not Null As `6esn` Merge ((`5esn` :@usn6{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`})-[`1esn`:@usn6 *01234567..123456789{`7esn`:0x0[01234567..Null][0Xa...e12]}]->(:`8esn`{``:.e1 =~usn2 =~`7esn`,#usn7:`4esn` In .12 In $#usn8})-[#usn8?:#usn8|:`6esn`*{`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`}]->(:``:`6esn`{@usn6:$`4esn`[$@usn5..`7esn`],`5esn`:_usn4 Starts With `6esn` Starts With $`8esn`})) On Match Set `4esn`+=.e1 In `` In 7,_usn3+=$`8esn` Contains .0 Contains 0.12 On Match Set All(#usn8 In 07['s_str'][$@usn6]).#usn7! =$999[0xabc..],#usn8+=7[usn1][$7] Union Create (((`4esn` :`3esn`)-[?:`6esn`]->(`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})-[`2esn`? *7]->(usn1 :`8esn`{`5esn`:$usn1 Starts With Null Starts With $``,`5esn`:0 Contains $@usn5}))) Union Return Distinct $@usn5 Is Not Null Is Not Null,$@usn6 Ends With 010 As `3esn`,Filter(`6esn` In 0x0[9e0..] Where `7esn`[`8esn`][#usn7]) Is Not Null Is Not Null As `8esn` Order By usn1 Ends With $`8esn` Ends With 7 Ascending,`` Is Not Null Is Not Null Descending,_usn4[..`2esn`] Descending Skip _usn4[0.0][_usn4] Limit 01[..0X7]"),
    octest:ct_string("Merge usn2=(`2esn` {_usn3:0[1e1..00]})-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2) On Create Set usn2 =0x0[01234567..Null][0Xa...e12],{#usn8:#usn7[@usn6..]}.@usn6 =#usn7[False..][123.654..] On Match Set `4esn`:`6esn`:`3esn`,@usn5 =$`7esn` Contains usn2 Union Match usn1=((:`5esn`{`7esn`:'s_str'[$#usn8],``:`1esn`[..$#usn7]})<-[``?:usn1|#usn7]-(@usn5 :`2esn`:@usn5{@usn6:123456789 =~#usn8 =~$0})) Where 12.e12 =~.0 Match ((@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})),(((:usn2{_usn3:``[0X7..][$@usn6..]})<-[_usn3?:#usn8|:`6esn` *0xabc..{@usn6:123.654[.e12..\"d_str\"],`8esn`:$usn2 Starts With $`7esn` Starts With _usn4}]->(#usn7 {`1esn`:$`4esn`[.e1..$usn1],``:0x0 =~`5esn` =~$`8esn`})<-[@usn5?:usn2|:``*..]->(`7esn` {#usn7:1e1[`3esn`]}))) Create `5esn`=({usn1:0X7[0xabc][$1000]}) Union All Create ((_usn3 {`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`})) Remove `5esn`:_usn3:@usn5,Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 9e0[0..1e1]).`5esn`! Optional Match (`4esn` :#usn8:#usn7),(({@usn6:$#usn8[0e0..][07..]})<-[? *12{`1esn`:.e0 Ends With $`1esn` Ends With 1000}]-(@usn5 :usn1:``{usn2:9e0[0..1e1]})) Where .12 Is Null"),
    octest:ct_string("Unwind 0.0 =~$#usn7 =~`1esn` As _usn3 Delete [`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $1000[00..]|`1esn`[usn1]][{usn2:$`6esn`[.e12],`4esn`:`4esn` In .12 In $#usn8}..] Union All Return Distinct `6esn` In 0e0 In _usn4 As `3esn`,12[$`5esn`..$`7esn`][$1000..$_usn4] As #usn8,7 =~$1000 =~$`5esn` Order By Any(#usn8 In 07['s_str'][$@usn6] Where $`7esn`[usn2]) In [`6esn` In 0x0[9e0..] Where `5esn`[usn1]] In {_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]} Ascending,12e12 In Null Asc Skip ``[_usn4..][$7..] Limit 123456789 =~@usn5 =~$`5esn` Union All Detach Delete `4esn` Starts With $#usn8 Starts With $#usn8 Optional Match @usn6=(`7esn` :_usn4)<-[?:usn2|:`` *7]->(#usn8 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})"),
    octest:ct_string("Match (((:`6esn`:`3esn`{`1esn`:0X7[..True][..01234567],``:`1esn`[usn1]})<-[_usn4 *00]-(#usn7 :`7esn`)<-[ *0..]->(_usn3 :@usn6))) Optional Match `7esn`=((:`6esn`:`3esn`{`3esn`:123.654[0Xa..0x0][.12..12e12]})-[?:`8esn`|@usn6 *01..7{`7esn`:12e12 Ends With 0e0,`8esn`:$_usn4[False..@usn6][`4esn`..$1000]}]->(:@usn6{`8esn`:.0[..False]})-[`6esn`?:usn1|#usn7]-(usn2 :#usn8:#usn7)) Where 7 Starts With $@usn6 Delete {`3esn`:@usn5[$`1esn`..][$7..]}[..[`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $usn2[12.0..][`8esn`..]|$7[`7esn`][123.654]]] Union Detach Delete .e12 =~\"d_str\" =~@usn5 Optional Match _usn3=((`7esn` )<-[`5esn`? *..0x0{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]-(`6esn` :@usn6)),`2esn`=(({`7esn`:Count(*)[..`5esn`],`2esn`:.e12[..$_usn4][..#usn7]})-[_usn4?{`3esn`:1e1[`3esn`]}]-({`2esn`:``[0X7..][$@usn6..],@usn6:usn1[..`7esn`][..$`8esn`]})-[?:`2esn`|:`7esn` *0..{`4esn`:010 In $@usn5 In `5esn`,#usn7:$`7esn` Is Null Is Null}]->(`2esn` {_usn3:0[1e1..00]})) Match `1esn`=((:#usn7{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]})),(((:#usn7{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})-[{usn1:Count(*)[..12][..$999],#usn8:usn1 In 010}]->(:`7esn`{#usn8:12e12 Ends With `6esn`,_usn4:0Xa Contains $#usn8 Contains `5esn`})-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]->(_usn3 {`3esn`:$@usn5 Is Not Null Is Not Null}))) Where usn1 Ends With .0 Ends With `4esn`"),
    octest:ct_string("Create usn1=((({`5esn`:0.0 Starts With Null Starts With .e12})-[{`5esn`:0.e0 =~01234567 =~01234567}]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]})<-[`5esn`?:`1esn`|@usn6{`5esn`:#usn8 =~$1000 =~$1000,`2esn`:0x0[$7]}]-(_usn4 {`1esn`:$usn2 =~`6esn` =~`1esn`}))) Merge (({@usn6:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`5esn`:.12[usn1]})) On Create Set @usn5+=`2esn`(Distinct 01234567[`6esn`..],Count(*) Ends With $#usn8 Ends With 0Xa)[..All(_usn4 In 12.e12 Is Null Is Null Where 0e0 =~False =~.12)][..Filter(`7esn` In $`8esn`[0.12][12] Where 9e0[123456789..0][12.0..@usn6])],{@usn6:0[1e1..00],`2esn`:1000 Starts With 0x0}.@usn5 =7[$1000][1000],_usn4 =Extract(`6esn` In .e0['s_str'..][$`8esn`..] Where `6esn` In $``) In Extract(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where .e12 =~@usn5|9e0[$@usn6]) In Filter(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 1000 Starts With ``) On Match Set Any(`6esn` In 1000[12.e12][#usn7] Where `1esn`[$7][0Xa]).`4esn`? =$`2esn` Starts With 9e12 Unwind `5esn` Ends With 0x0 As `3esn`"),
    octest:ct_string("Remove [#usn8 In 0x0[_usn4..] Where `8esn`[12.e12][`4esn`]].#usn8!,[usn1 In 123.654 =~.e0 =~9e0 Where $usn2 Starts With $`7esn` Starts With _usn4].`2esn`? Merge usn2=((:`8esn`)-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :_usn3:@usn5)) Union All Merge `1esn`=(((_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[`7esn`?:`2esn`|:`7esn`]->(`3esn` {#usn8:#usn7 =~$`8esn`})-[ *07{`1esn`:$``}]->(`1esn` :usn1:``)))"),
    octest:ct_string("Create `3esn`=((`7esn` {#usn7:1e1[`3esn`]})<-[_usn4?:``{@usn5:1000 Starts With 0e0 Starts With 0,#usn7:$`5esn`[`4esn`..$`2esn`]}]-(_usn4 :#usn8:#usn7)) Union All Merge `2esn`=(#usn8 :#usn7)-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :`5esn`) Unwind 0Xa[$`4esn`] As _usn4"),
    octest:ct_string("With Distinct 12[`5esn`..$`3esn`][0.12..usn2] As `4esn` Order By 010 Starts With 0X7 Ascending,12e12 In Null Desc Where 9e1 Contains _usn3 Union Detach Delete {`2esn`:`2esn`[``..]} =~[`6esn` In 0x0[9e0..] Where 0Xa[..1.e1]] =~None(`3esn` In @usn6[..\"d_str\"][..01] Where $@usn6 Is Null)"),
    octest:ct_string("Match _usn3=((:`5esn`{`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})) Merge `6esn`=((`6esn` {`7esn`:`4esn` In $`2esn` In @usn5})-[:@usn5|:@usn6 *01234567..123456789]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null})) On Create Set #usn7 =$usn1[12e12],usn2 ={`5esn`:@usn6[$usn1][$`2esn`],`1esn`:12.0[9e12]['s_str']}[Extract(`2esn` In $``[$#usn8] Where 12e12 Ends With $_usn4 Ends With $`2esn`|.12 =~$#usn7 =~$``)][[12.0[`3esn`][_usn3]]],_usn4 =`3esn`($usn2 Starts With $`7esn` Starts With _usn4) Is Not Null Is Not Null On Create Set `2esn`:``:`6esn`,Extract(`6esn` In 0x0[9e0..] Where `7esn`[`8esn`][#usn7]|`8esn` Ends With $`1esn`).`1esn`? =1.e1 =~01234567,{@usn6:$123456789[12.0],#usn7:usn1 =~_usn4 =~$usn1}.`8esn`! =@usn6(Distinct $0 Contains 7 Contains 1.e1)[(_usn4 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8)][Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0X0123456789ABCDEF In _usn3)] Union Optional Match (((:`6esn`:`3esn`{`1esn`:0X7[..True][..01234567],``:`1esn`[usn1]})<-[_usn4 *00]-(#usn7 :`7esn`)<-[ *0..]->(_usn3 :@usn6))) Unwind 12 Ends With 0 Ends With Null As _usn3"),
    octest:ct_string("Detach Delete \"d_str\" Starts With _usn4 Starts With $_usn4,#usn8 Union With Distinct *,Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0) Is Not Null,$`5esn`[#usn7..`7esn`] As `8esn` Skip 0.12 Is Null Is Null Limit All(#usn8 In 0x0[_usn4..] Where 0X0123456789ABCDEF In _usn3) Ends With Single(`6esn` In 0x0[9e0..] Where $#usn8[0e0..][07..]) Remove [`6esn` In 1000[12.e12][#usn7] Where 9e12[\"d_str\"]].`8esn`,None(`2esn` In $``[$#usn8] Where 12e12 Ends With $_usn4 Ends With $`2esn`).`2esn`! Union All Unwind (`4esn` )<-[?:usn2|:``{_usn3:.e1 Ends With $123456789}]-(`4esn` {#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})-[{#usn7:`2esn`[`3esn`..],@usn5:12.0[..0X7]}]->({`7esn`:999,#usn8:01 Starts With $`5esn` Starts With 01234567})[{`7esn`:1000 Ends With 01234567 Ends With usn1}..{usn1:_usn4 Starts With `6esn` Starts With $`8esn`,`2esn`:0.12[$usn1..$7]}][All(`6esn` In .e0['s_str'..][$`8esn`..] Where $0[`5esn`][9e12])..usn1(Distinct $1000[00..],0Xa[..$`2esn`][..00])] As `8esn` With  *,.0[01234567] As `2esn`,Extract(`2esn` In $``[$#usn8] Where `1esn`[Null..])[[12.0[`3esn`][_usn3]]] As @usn6 Skip `7esn`[7..$123456789][$0..$7] Where $`4esn` In 0x0"),
    octest:ct_string("Return *,`4esn`,Any(`3esn` In False In $`2esn` In 1e1 Where #usn7[.12][usn2])[{#usn7:0e0['s_str'],`1esn`:$#usn8[1.e1]}..[@usn6[.0],0X0123456789ABCDEF Is Not Null,0x0[$`2esn`..'s_str'][$@usn5..1.e1]]][[`4esn` Ends With 's_str' Ends With @usn6]..$`5esn`] As `` Order By (`6esn` :`8esn`{usn2:#usn7 In #usn7,`1esn`:00['s_str']})<-[``?:@usn6]-(:`2esn`:@usn5{usn2:$`3esn` Ends With @usn6 Ends With 123.654})<-[@usn5?:@usn6 *..010]->(#usn7 :#usn7{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2}) Is Null Asc,$usn2 Starts With $`7esn` Starts With _usn4 Desc Limit `4esn` Starts With $#usn8 Starts With $#usn8 Return Distinct 0.0[0] Skip $`6esn`[00] With  7 Starts With Null Starts With Null Order By @usn6 Starts With #usn8 Starts With $#usn7 Descending Limit 12.e12 Is Not Null"),
    octest:ct_string("With Distinct *,None(#usn8 In 0x0[_usn4..] Where #usn8 Is Not Null) Is Not Null As @usn5,`3esn` Starts With $@usn5 Starts With 0xabc As `6esn` Skip 9e0[$`4esn`] Limit $0 Ends With .12 Where 0x0 =~@usn5 =~01 Unwind $`2esn` Ends With 1e1 As _usn4 Optional Match #usn8=(`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]})-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->($@usn6)<-[`8esn`?:usn1|#usn7 *01..7{usn1:123456789[$_usn4..]}]-(@usn5 :`2esn`:@usn5$#usn8)"),
    octest:ct_string("Return Distinct $999 Ends With $`` Ends With 07 As @usn5,True Contains .e1 Contains `2esn` As @usn6,Filter(usn1 In 123.654 =~.e0 =~9e0 Where 123.654[$`1esn`])[(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})<-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-({@usn6:`5esn` Ends With $999})..[`2esn` In $``[$#usn8] Where \"d_str\" Starts With _usn4 Starts With $_usn4|$usn1[#usn8..`8esn`][7..`4esn`]]] As _usn4 With Distinct *,0x0 In 0X0123456789ABCDEF As usn1,0e0[$123456789..$999][\"d_str\"..Null] Order By 999[..\"d_str\"] Ascending Skip Extract(`7esn` In $`8esn`[0.12][12] Where 0Xa[..9e12][...e0]|999 Ends With 123456789 Ends With 12.0) Is Not Null Is Not Null Limit 's_str'[..Null][..$`5esn`] Where 0.0[`7esn`][`6esn`]"),
    octest:ct_string("Return .e0[..$`5esn`][..``] As `8esn` Skip .e1 Starts With $`` Limit $_usn3 Is Not Null Is Not Null Unwind [0.12['s_str'..$0][$usn1..9e0]] Starts With [123.654 =~.e0 =~9e0,$@usn5 Is Not Null Is Not Null,$`` Starts With 0x0] Starts With @usn6(Distinct 7 Ends With `3esn` Ends With $`2esn`,False[$12]) As `3esn` Detach Delete `1esn`[..$999][..\"d_str\"]"),
    octest:ct_string("Unwind {@usn5:$`4esn` In 0x0,`3esn`:`1esn`[..$#usn7]}[{@usn5:@usn5[..$999][..$0]}] As @usn5 Return Distinct *,.e12 Contains $usn2 Contains $@usn6,12.e12 =~00 =~010 As usn2 Order By usn2 Desc"),
    octest:ct_string("Optional Match `5esn`=((:@usn5{``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]})<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(`4esn` :`5esn`)<-[?:@usn5|:@usn6]-({`1esn`:$`7esn` Ends With $_usn4 Ends With `5esn`})) Union All Remove Filter(`3esn` In False In $`2esn` In 1e1 Where 1000 Ends With $`5esn`).usn1?,@usn6:`7esn` Union Delete [0x0[9e0..],1.e1[0..]] Contains [$`3esn`[9e0..0.0][_usn4..123456789],#usn7[False..][123.654..],$#usn8[..9e12][..$`3esn`]] Contains ({usn2:0Xa Contains $`6esn`,_usn3:\"d_str\" Ends With $`3esn`})-[@usn5? *00{@usn5:usn1 Ends With 1.e1 Ends With `4esn`}]-(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})-[:`5esn`|:`1esn`]-(`2esn` ),01234567[01234567][.e12],$usn1[1e1..1e1] Remove (:`4esn`:usn2{_usn4:`1esn`[$7][0Xa]})<-[? *..010{usn1:123456789[$_usn4..]}]->(@usn5 {`2esn`:$#usn7[`7esn`..][$`8esn`..],`3esn`:0.12['s_str'..$0][$usn1..9e0]})-[@usn6?$`3esn`]->(@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8}).`7esn`,(`4esn` {@usn6:_usn4[$`8esn`.._usn3][.0..$@usn6]})<-[{usn1:0.e0 =~01234567 =~01234567,``:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}]-(`6esn` :_usn3:@usn5)<-[{`5esn`:usn2[.e1..][01234567..],usn1:999 Is Not Null}]->({`7esn`:`4esn` In $`2esn` In @usn5})._usn3? Optional Match usn1=((({`5esn`:0.0 Starts With Null Starts With .e12})-[{`5esn`:0.e0 =~01234567 =~01234567}]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]})<-[`5esn`?:`1esn`|@usn6{`5esn`:#usn8 =~$1000 =~$1000,`2esn`:0x0[$7]}]-(_usn4 {`1esn`:$usn2 =~`6esn` =~`1esn`}))),`1esn`=(({``:1e1 Ends With 's_str' Ends With $@usn6,`5esn`:$`5esn` Is Not Null})<-[?:usn2|:``]->(:`6esn`:`3esn`{_usn3:00['s_str'],`5esn`:$`` Is Not Null Is Not Null})<-[? *..0x0{`1esn`:`4esn` Starts With `8esn`}]->(`4esn` {`5esn`:$0[`5esn`][9e12],``:#usn7[False..][123.654..]}))"),
    octest:ct_string("Detach Delete Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 010 Is Null Is Null|9e12[1.e1])[[usn1 In 999 Where 010 In $@usn5 In `5esn`]][Extract(`3esn` In @usn6[..\"d_str\"][..01] Where 0.e0 Ends With $123456789)] Return $`4esn`[$1000..$`4esn`][0x0..$_usn3],$`1esn` Is Null Order By 07 Descending Skip `7esn`(.e0 =~7 =~False,010 Is Null Is Null) Starts With [$_usn4 =~0X7,`4esn`,0.0 Ends With $usn1 Ends With $999] Starts With {@usn5:Count(*)[..$_usn3][..$usn2],@usn5:$1000[$usn1][.e1]} Union Unwind ({`7esn`:$@usn5 =~$usn2 =~True,_usn3:00[$0..usn2][$_usn4..$999]})-[`3esn`]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5})<-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]})[{usn1:$`5esn`[.e1][#usn8],_usn3:12e12 Ends With `6esn`}] As `3esn` Detach Delete {#usn8:.e0 Ends With $`1esn` Ends With 1000}[Filter(#usn8 In 07['s_str'][$@usn6] Where $12[0.0..])][Filter(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..])],0Xa[.e12..]"),
    octest:ct_string("Create @usn6=(_usn3 {`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`}) Merge usn2=(((`1esn` {usn2:@usn5[$`1esn`..][$7..],@usn6:$#usn8[0xabc..usn2]})-[:@usn5|:@usn6]->(`5esn` {usn2:`6esn` In $``})-[? *0xabc..]->(`6esn` {`5esn`:0x0 =~@usn5 =~01}))) On Match Set 0.0._usn3 =$123456789[0X0123456789ABCDEF..123.654] Create `2esn`=(`1esn` {`6esn`:07})"),
    octest:ct_string("Remove (:`2esn`:@usn5{#usn8:0.e0 Contains @usn5 Contains 0X7,`5esn`:0x0[9e0..]})-[? *12{@usn6:`5esn` Ends With $999}]->(#usn7 {@usn5:$`5esn` Contains $usn2})-[?{@usn6:`2esn` Ends With Null Ends With 0xabc}]->(:`6esn`:`3esn`{_usn3:00['s_str'],`5esn`:$`` Is Not Null Is Not Null}).``? Merge usn2=(`2esn` {_usn3:0[1e1..00]})-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2) On Create Set usn2 =0x0[01234567..Null][0Xa...e12],{#usn8:#usn7[@usn6..]}.@usn6 =#usn7[False..][123.654..] On Match Set `4esn`:`6esn`:`3esn`,@usn5 =$`7esn` Contains usn2"),
    octest:ct_string("Match (usn2 :@usn6{@usn5:#usn8[True..#usn7][01..@usn5]})<-[`1esn`:`7esn` *0xabc..]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]})-[`7esn`? *123456789..]-(:`2esn`:@usn5{#usn8:$usn2 Starts With 9e1 Starts With `7esn`}) Merge (((@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})-[:`8esn`|@usn6*..]->(#usn8 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})-[? *..0X0123456789ABCDEF]-(@usn5 {@usn6:$123456789[12.0],#usn7:usn1 =~_usn4 =~$usn1}))) On Match Set [`5esn` In $usn2 Contains $`1esn` Where Count(*)[_usn3..]].#usn7! =`8esn`[.e1..],@usn5+=0xabc[.12..][#usn8..],`2esn` =$`1esn` In $#usn7 In 0X7 With Distinct All(`7esn` In $`8esn`[0.12][12]) Contains [usn1 In 123.654 =~.e0 =~9e0 Where Count(*) Contains 12e12 Contains 0xabc] Contains [`4esn` Ends With 's_str' Ends With @usn6] As #usn8,$7[..$``] As ``,(:`1esn`:@usn6)<-[{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(`3esn` :`4esn`:usn2) =~[12 Is Null Is Null,9e0[$@usn6]] Skip None(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where .e12 =~@usn5) Is Not Null Is Not Null Limit 0x0[$`2esn`..'s_str'][$@usn5..1.e1]"),
    octest:ct_string("Merge usn2=((`5esn` :_usn4)<-[?:usn2|:``]->(_usn4 {`4esn`:01234567[..00][..$`3esn`],usn1:00[\"d_str\"][False]})<-[usn1?:@usn6{`5esn`:$7[$12],`6esn`:#usn8 Is Not Null}]-({#usn7:1e1[`3esn`]})) On Create Set (`` :#usn8:#usn7)<-[ *0Xa{#usn8:_usn4[#usn7..#usn8],usn2:9e0[0..1e1]}]->(#usn8 :#usn8:#usn7{@usn6:$#usn8[0e0..][07..],``:$`7esn` =~1.e1 =~0.e0})-[{#usn7:`2esn`[`3esn`..],@usn5:12.0[..0X7]}]-(:``:`6esn`{`8esn`:123.654[.e12..\"d_str\"]}).#usn8? =Single(#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]) Contains Single(`5esn` In $usn2 Contains $`1esn` Where `2esn` Contains `3esn` Contains $@usn5) Contains {_usn3:0xabc Contains 0,`6esn`:$`6esn`[.e12..$`6esn`][$#usn7...0]} Union All Unwind $`3esn`[9e0..0.0][_usn4..123456789] As #usn7 Create (#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})"),
    octest:ct_string("With  *,True[..1e1][..#usn8] As usn1,`` Is Not Null Is Not Null As usn1 Order By $1000 =~00 Desc,$``[12e12..01][$`5esn`..12e12] Desc Merge ((`7esn` )<-[`5esn`? *..0x0{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]-(`6esn` :@usn6)) On Create Set `6esn`+=[`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12]] Ends With [0] Ends With `8esn`,#usn8:`5esn`,#usn7+=01234567[..`6esn`][..``]"),
    octest:ct_string("Optional Match `8esn`=(`1esn` {`6esn`:07}),`2esn`=(({`7esn`:Count(*)[..`5esn`],`2esn`:.e12[..$_usn4][..#usn7]})-[_usn4?{`3esn`:1e1[`3esn`]}]-({`2esn`:``[0X7..][$@usn6..],@usn6:usn1[..`7esn`][..$`8esn`]})-[?:`2esn`|:`7esn` *0..{`4esn`:010 In $@usn5 In `5esn`,#usn7:$`7esn` Is Null Is Null}]->(`2esn` {_usn3:0[1e1..00]})) Where $usn2 Ends With 0 Ends With 12.0 With  *,`7esn`(.e0 =~7 =~False,010 Is Null Is Null) Starts With [$_usn4 =~0X7,`4esn`,0.0 Ends With $usn1 Ends With $999] Starts With {@usn5:Count(*)[..$_usn3][..$usn2],@usn5:$1000[$usn1][.e1]},12.0 Is Null Where `8esn` Ends With $`1esn` Union Remove `4esn`:_usn4,Any(`6esn` In .e0['s_str'..][$`8esn`..] Where .12).`2esn`,Single(`6esn` In .e0['s_str'..][$`8esn`..] Where $0[`5esn`][9e12]).usn1? Unwind $`5esn`[0][.12] As `4esn` Union Unwind `7esn`[0.e0..False][0e0..$_usn4] As `` Merge #usn8=(:@usn5{_usn4:$`5esn`[0][.12]})<-[@usn5?{usn1:7 Ends With `3esn` Ends With $`2esn`}]-(_usn4 ) On Match Set Filter(`5esn` In $usn2 Contains $`1esn` Where _usn3[9e0..$123456789][0X7..999]).#usn8! =`` In usn1 In 01234567 On Match Set `7esn`:`3esn`,({``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]})<-[:@usn6 *7{``:9e0 Is Null Is Null,`3esn`:.0[@usn6..]}]->(`8esn` :``:`6esn`).`5esn`! =None(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $@usn6 Is Null Is Null)[None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where .e0 Is Not Null)],`4esn`+=False In 1.e1 In $12"),
    octest:ct_string("Create #usn7=(usn2 :#usn8:#usn7{@usn5:`8esn` Ends With $`1esn`,#usn8:\"d_str\" Ends With $1000 Ends With usn2}),(_usn3 {`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`}) Unwind #usn7 Is Not Null As _usn3 Merge `6esn`=((`6esn` {`7esn`:`4esn` In $`2esn` In @usn5})-[:@usn5|:@usn6 *01234567..123456789]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null})) Union All Return Distinct $`2esn` =~$123456789 =~usn2 As #usn7,.e12[..#usn7][..9e12],Null Contains $_usn3 As @usn6"),
    octest:ct_string("Create (({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})) Create `7esn`=(usn1 :_usn4)<-[usn1]->(:`3esn`{`7esn`:12.e12[.12..$_usn3][0e0..9e0],`7esn`:0X7[..True][..01234567]})<-[_usn3?:`` *..010{usn2:`7esn`[_usn4..][Count(*)..]}]->(`8esn` :``:`6esn`{#usn7:$`3esn` Is Null}),usn1=(`7esn` :`7esn`)-[?:`` *07{`1esn`:$#usn7[$`3esn`..$999]}]->(_usn3 {_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null})"),
    octest:ct_string("Return Distinct 12.e12 Contains 0X7 Contains Count(*),(`5esn` :`2esn`:@usn5{usn2:$`6esn` Starts With usn1,``:123456789 =~@usn5 =~$`5esn`})-[{#usn8:999}]-(:usn1:``{_usn3:123.654 Is Not Null Is Not Null}) =~{`6esn`:9e1[..01234567][..`4esn`]} =~None(`6esn` In 1000[12.e12][#usn7] Where 0X0123456789ABCDEF Is Not Null) As _usn4,$@usn6[$#usn8..$999][Count(*)..usn1] As @usn6 Limit ``[{`6esn`:12[`5esn`..$`3esn`][0.12..usn2]}..] With Distinct $`1esn` Is Not Null Is Not Null Order By [`3esn` In @usn6[..\"d_str\"][..01] Where @usn6 Contains $_usn3 Contains 12.0] In [`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789],01234567 Is Null Is Null,$`` Starts With 0x0] In All(usn1 In 0xabc Is Not Null Is Not Null Where usn1 In 010) Asc,(`` :`8esn`{`5esn`:True Contains .e1 Contains `2esn`})-[@usn6:@usn6 *7]->(`2esn` :_usn4{_usn4:$`8esn` Contains .0 Contains 0.12})<-[? *01234567..123456789]->(:`3esn`{`7esn`:$123456789[`4esn`..]}) Starts With (:#usn8:#usn7{`6esn`:`5esn`[12.0]})-[`5esn`?:usn2|:``{usn2:1000 Starts With 0e0 Starts With 0,`6esn`:9e1[$`3esn`][$`1esn`]}]->(#usn7 :`7esn`)-[:@usn5|:@usn6 *07]-(@usn5 :`1esn`:@usn6{@usn5:`4esn` Is Not Null,`3esn`:.e1 =~usn2 =~`7esn`}) Starts With {`4esn`:`8esn` Is Not Null} Ascending,9e0[12..$`8esn`] Ascending Where usn1 =~12 =~$0 Remove [`5esn` In $usn2 Contains $`1esn` Where False[$12]].@usn5?,[0xabc Is Not Null Is Not Null].@usn5?,Extract(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 9e0[0..1e1]|123.654[$`1esn`]).`5esn`! Union Detach Delete {`7esn`:`6esn` In $``}[[123.654[.e12..\"d_str\"],1.e1[0..]]..][Any(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 999 Ends With 123456789 Ends With 12.0)..],{_usn4:\"d_str\" Ends With $`3esn`,``:#usn8 =~#usn7 =~0x0}[Single(usn1 In 0xabc Is Not Null Is Not Null Where `7esn`[..01])..{`2esn`:.0[@usn6..]}][[1000[12.e12][#usn7],`` Is Not Null Is Not Null]..None(#usn8 In 0x0[_usn4..] Where `8esn` Ends With $`1esn`)],@usn6(_usn4[.._usn4],00[$@usn5][0X7]) =~Extract(`3esn` In False In $`2esn` In 1e1 Where $`` Starts With 0x0|0.12 Is Null Is Null) =~Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null|True =~0 =~123456789) Union Create @usn5=(_usn4 {`2esn`:1.e1 Is Not Null Is Not Null})<-[_usn4?:`3esn`|_usn4 *7]->({@usn6:0.e0 Contains $1000 Contains 7}),@usn6=(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[@usn6{_usn4:$`` Starts With 0x0}]-(usn2 :`7esn`) Match (`1esn` :`4esn`:usn2{`2esn`:9e0[$@usn6]})<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]-({@usn6:`6esn` Is Not Null}),((@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]})-[? *0xabc..{`3esn`:.e12[$_usn4..0],usn1:00[$0..usn2][$_usn4..$999]}]->(@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]})<-[_usn3:`3esn`|_usn4 *0Xa]-({`4esn`:Count(*)[..$_usn3][..$usn2]})) Where `` Contains 010 Contains $1000"),
    octest:ct_string("Return \"d_str\" Starts With _usn4 Starts With $_usn4 As `5esn`,`7esn`[0.e0..False][0e0..$_usn4] As `1esn` Skip $`1esn` Is Not Null Is Not Null Detach Delete ``[0X7..][$@usn6..],{`3esn`:.0 =~$@usn5 =~1.e1} =~Extract(_usn4 In 12.e12 Is Null Is Null Where $_usn4[False..@usn6][`4esn`..$1000]),Extract(#usn8 In 07['s_str'][$@usn6] Where 7 =~$1000 =~$`5esn`|\"d_str\"[1.e1][01234567])[..(`6esn` :`1esn`:@usn6{#usn7:01234567 In \"d_str\"})<-[`1esn`?:`3esn`|_usn4 *01234567..123456789]->(#usn7 {#usn7:999 Contains $`7esn` Contains usn2})][..None(_usn4 In 12.e12 Is Null Is Null Where 9e1 =~$0)] Union All Return *,`1esn`[usn1] As `4esn`,[`7esn` In $`8esn`[0.12][12] Where 's_str'[$#usn8]][None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1)..(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})-[``?:@usn6]->({``:_usn3[9e0..$123456789][0X7..999]})][[$#usn8 =~7 =~.12,$`6esn`[.e12],_usn4 Starts With `6esn` Starts With $`8esn`]..{usn2:123.654[.e12..\"d_str\"]}] Order By @usn6(_usn4[.._usn4],00[$@usn5][0X7]) =~Extract(`3esn` In False In $`2esn` In 1e1 Where $`` Starts With 0x0|0.12 Is Null Is Null) =~Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null|True =~0 =~123456789) Ascending,@usn6 Contains $_usn3 Contains 12.0 Descending Limit $`6esn`[$0] Merge `5esn`=((:@usn5{``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]})<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(`4esn` :`5esn`)<-[?:@usn5|:@usn6]-({`1esn`:$`7esn` Ends With $_usn4 Ends With `5esn`})) On Create Set Extract(#usn8 In 0x0[_usn4..] Where `8esn`[0x0..]|.e12 Contains `7esn` Contains 999).#usn7 =$#usn8 Contains `5esn` Contains $#usn8 Delete 12.0[9e1..][Null..],7 Contains 1000 Contains $usn1,_usn3($123456789[..`3esn`][..`7esn`]) Is Null Union All Create usn1=(`2esn` :``:`6esn`)<-[ *..0X0123456789ABCDEF]->(`1esn` {`5esn`:$`7esn` Ends With $_usn4 Ends With `5esn`,#usn8:'s_str'[$#usn8]}) With  $7[$12] As `6esn` Where 01234567[`6esn`..] Merge `3esn`=(((_usn3 )-[:usn2|:`` *0..]->(:#usn7{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]})-[? *..0X0123456789ABCDEF{#usn8:0X7[..`5esn`][..$`7esn`]}]-(:#usn8:#usn7{usn1:00['s_str'],#usn8:$`8esn`[``..True][1000..0.12]}))) On Match Set `6esn` =999[..01234567][..7],usn2:``:`6esn`"),
    octest:ct_string("Remove Filter(`6esn` In 0x0[9e0..] Where $#usn8[0e0..][07..]).usn2,`8esn`:usn1:``,{#usn7:#usn8[$`7esn`..12.0],`1esn`:9e12 In 123.654 In True}.usn1? Union All With Distinct *,.e1 =~$#usn8,`1esn` As `2esn` Order By `` In 123.654 In 0.0 Desc Limit Filter(`5esn` In $usn2 Contains $`1esn`)[`8esn`(1000[12.e12][#usn7],#usn8[1e1..])..][(`3esn` :usn2{#usn7:usn2[`6esn`..][.0..],#usn7:\"d_str\"[..$_usn3]})<-[?{`3esn`:'s_str'[$`6esn`..][$0..]}]->(`2esn` :@usn6)<-[?{`8esn`:$`7esn`[usn2],`1esn`:1000 Is Not Null}]-(#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]})..] Where Count(*)[$1000..01] Return *,$_usn3[0e0..][12.0..] As usn2 Delete Any(#usn8 In 0x0[_usn4..] Where $`` Starts With 0x0) In [usn1 In 123.654 =~.e0 =~9e0 Where $7 Ends With 12.e12 Ends With `1esn`],0Xa[.e12..],0.0[`7esn`][`6esn`]"),
    octest:ct_string("Return Distinct *,$@usn5 Is Not Null As `3esn`,Extract(_usn4 In 12.e12 Is Null Is Null Where 010 =~0e0 =~9e1|0Xa =~0Xa =~`3esn`)[Any(`3esn` In 999 Where $#usn7[..$999][..9e1])..None(usn1 In 0xabc Is Not Null Is Not Null Where 123456789[..0])][[`6esn` In 0x0[9e0..]|0x0 =~@usn5 =~01]..(usn2 :_usn3:@usn5)<-[`5esn`?:`7esn`]-(`8esn` {`3esn`:Null Is Null Is Null})-[`6esn` *00]->(`2esn` :`5esn`{`1esn`:$@usn6 Ends With 0.0})] Order By 0X0123456789ABCDEF Is Not Null Is Not Null Asc Merge `1esn`=(({``:1e1 Ends With 's_str' Ends With $@usn6,`5esn`:$`5esn` Is Not Null})<-[?:usn2|:``]->(:`6esn`:`3esn`{_usn3:00['s_str'],`5esn`:$`` Is Not Null Is Not Null})<-[? *..0x0{`1esn`:`4esn` Starts With `8esn`}]->(`4esn` {`5esn`:$0[`5esn`][9e12],``:#usn7[False..][123.654..]})) On Match Set `3esn` =usn1[$`1esn`..] On Match Set usn2 =.e12[$_usn4..0],`2esn` =@usn5[..$999][..$0],_usn4 =False Starts With $123456789"),
    octest:ct_string("Unwind Single(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]) Starts With (:usn1:``{_usn4:1000[12.e12][#usn7]})-[ *7{`4esn`:$#usn7[$`3esn`..$999],`8esn`:$0[00..]}]-({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]}) Starts With {`1esn`:`5esn` In 12.e12 In 1000,`3esn`:0Xa Contains $`6esn`} As `3esn` With Distinct $_usn3[0e0..][12.0..] As `3esn` Order By None(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1) In {`6esn`:1.e1[0..],usn2:`` Contains $_usn3 Contains 0e0} Descending,$123456789 In `8esn` In 0X7 Descending Skip 12.0[9e1..][Null..] Where 1e1 Contains 0Xa Union All Match (@usn6 {`4esn`:$#usn7 =~usn2 =~`3esn`,_usn4:01 In 0.12 In .e12}) Where $_usn4[$123456789..][12..] Remove None(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $`` Starts With 0x0).`3esn`,Single(usn1 In 0xabc Is Not Null Is Not Null Where False[...e0][..$#usn8]).`8esn` Create (((usn1 :_usn4)-[`2esn`? *7]->(`` :``:`6esn`{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]})-[`2esn`?:`3esn`|_usn4]->({`1esn`:1e1 Starts With 010}))),(((:`3esn`{`7esn`:$123456789[`4esn`..]})-[@usn6?$`3esn`]->(@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->(`8esn` :#usn7)))"),
    octest:ct_string("With  $usn2 Contains $1000 Contains @usn5 As #usn8,$#usn8 Ends With _usn4 Ends With usn2 As #usn7 Skip @usn6[..$usn1][..010] Limit #usn7 Ends With 9e0 Union All Match #usn8=(@usn6 {@usn6:$`7esn` Ends With $_usn4 Ends With `5esn`,usn1:123.654[0Xa..0x0][.12..12e12]})<-[:@usn6]->(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null}),((`4esn` :usn2)<-[:#usn7|`5esn`*{`8esn`:01[$0],``:0xabc Is Not Null Is Not Null}]-(_usn3 :`7esn`{#usn7:123.654 =~.e0 =~9e0,_usn3:`1esn`[Null..]})) Delete 0e0[$123456789..$999][\"d_str\"..Null] Remove None(`7esn` In $`8esn`[0.12][12]).`6esn`!"),
    octest:ct_string("Optional Match usn1=((:`7esn`{`8esn`:'s_str'[$#usn8]})-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})<-[usn2?:#usn8|:`6esn` *7]-(:@usn6))"),
    octest:ct_string("Remove [`2esn` In $#usn8 Starts With usn2 Starts With .12]._usn4?,[$usn2[12.0..][`8esn`..],0xabc Contains 0].`1esn`,usn2:`6esn`:`3esn` Remove `8esn`(Distinct).`3esn`,(:`4esn`:usn2$``)-[`5esn`?:_usn4|_usn3{@usn5:7 =~False,_usn3:999 Ends With $`4esn`}]->(usn2 :``:`6esn`)<-[_usn3:`3esn`|_usn4]->(#usn7 :_usn4).`5esn`!,[`5esn` In $usn2 Contains $`1esn` Where $`6esn`[$0]|`4esn`[Count(*)]].`6esn`? Union Remove @usn5:#usn8:#usn7 Union All Merge `6esn`=((:`7esn`{`8esn`:'s_str'[$#usn8]})-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})<-[usn2?:#usn8|:`6esn` *7]-(:@usn6)) On Create Set Single(`3esn` In 999 Where 0.e0 Ends With #usn8).usn2 =`4esn` In .12 In $#usn8,`8esn` =`1esn`[0],usn2 =_usn4 =~1000 =~_usn3 Optional Match #usn8=((_usn3 :@usn5{`2esn`:1.e1[#usn7][1.e1]})-[#usn8?*..{#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]}]->(:`2esn`:@usn5{@usn5:`4esn`})),(@usn5 {`3esn`:usn1[$`1esn`..]})-[?:`8esn`|@usn6*{``:0.e0 Contains $123456789 Contains 123456789,`4esn`:#usn7 Is Not Null Is Not Null}]-(usn2 :@usn6{@usn5:#usn8[True..#usn7][01..@usn5]}) Create `2esn`=((@usn6 $_usn3)-[?:`8esn`|@usn6*{``:0.e0 Contains $123456789 Contains 123456789,`4esn`:#usn7 Is Not Null Is Not Null}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]})<-[ *..010]->(_usn4 :`3esn`{`2esn`:999}))"),
    octest:ct_string("Unwind $999[010..] As #usn7 Detach Delete usn1[..`7esn`][..$`8esn`],0x0[9e0..],True[$usn1..12][``..\"d_str\"] Union All Merge (:`1esn`:@usn6{usn1:`` Is Not Null Is Not Null,`2esn`:#usn8[..0X0123456789ABCDEF][...0]}) On Create Set {_usn3:0Xa[..$`2esn`][..00]}.`5esn`? =[`6esn` In 1000[12.e12][#usn7] Where 12.0[9e12]['s_str']|0.e0 =~01234567 =~01234567] Ends With Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $`8esn`[0.12][12]) Ends With count(1000[Null][$`7esn`],$123456789[`3esn`..`5esn`][1e1..$`5esn`]),[#usn8 In 07['s_str'][$@usn6] Where True|0e0 Starts With $@usn6 Starts With $7].`4esn` =1000 Ends With 01234567 Ends With usn1 On Create Set Filter(`3esn` In False In $`2esn` In 1e1 Where $`4esn` =~07)._usn3! =[`7esn` In $`8esn`[0.12][12] Where usn1 In 010] Is Not Null Is Not Null,`5esn` =Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null) =~[12 Is Null Is Null,9e0[$@usn6]] Unwind Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0) =~Filter(`6esn` In 0x0[9e0..] Where `7esn` Is Null Is Null) =~[`6esn` In 0x0[9e0..] Where `7esn` Is Null Is Null|$`4esn`[.e1..$usn1]] As @usn5 Union All Unwind $_usn4 =~0X7 As @usn5 With Distinct All(`7esn` In $`8esn`[0.12][12]) Contains [usn1 In 123.654 =~.e0 =~9e0 Where Count(*) Contains 12e12 Contains 0xabc] Contains [`4esn` Ends With 's_str' Ends With @usn6] As #usn8,$7[..$``] As ``,(:`1esn`:@usn6)<-[{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(`3esn` :`4esn`:usn2) =~[12 Is Null Is Null,9e0[$@usn6]] Skip None(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where .e12 =~@usn5) Is Not Null Is Not Null Limit 0x0[$`2esn`..'s_str'][$@usn5..1.e1]"),
    octest:ct_string("Merge _usn4=((@usn6 :`5esn`{@usn5:.12[9e1..0X7]})) Merge (:@usn5{#usn7:0x0 In 0X0123456789ABCDEF,`2esn`:0Xa[Count(*)][0xabc]})-[{usn1:Count(*)[..12][..$999],#usn8:usn1 In 010}]->(`1esn` :`8esn`) On Create Set _usn4+=$_usn4 =~0X7 On Create Set #usn8 =Extract(`5esn` In $usn2 Contains $`1esn` Where Count(*)[_usn3..])[..None(`5esn` In $usn2 Contains $`1esn` Where `3esn` Is Not Null Is Not Null)][..Extract(#usn8 In 07['s_str'][$@usn6] Where True)] Optional Match ((`` :usn1:``)-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->(`8esn` :#usn7)<-[?{`5esn`:$1000 =~$`8esn` =~$`2esn`,_usn3:$`` Starts With 0x0}]->(`2esn` :`5esn`{`1esn`:$@usn6 Ends With 0.0})),#usn7=(((`6esn` :`5esn`{`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})-[`4esn`?:usn1|#usn7{`1esn`:123456789 Ends With 9e1 Ends With ``,@usn5:0xabc Contains 0}]->(`` :`3esn`{#usn8:`3esn` Is Not Null Is Not Null,#usn8:$123456789[`3esn`..`5esn`][1e1..$`5esn`]})-[? *0xabc..]->(`6esn` {`5esn`:0x0 =~@usn5 =~01}))) Where #usn7[False..][123.654..] Union Remove Any(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 's_str' =~$`4esn` =~@usn5).#usn8?,({`7esn`:`4esn` In $`2esn` In @usn5})-[:`1esn`|@usn6*..]->(:`8esn`{`8esn`:0X7 Contains 12.0,`3esn`:`4esn` Starts With `8esn`})<-[`4esn` *123456789..]-(:`7esn`$#usn8).@usn5? Union All Merge #usn7=((@usn5 :_usn3:@usn5)) On Create Set `5esn`+=`6esn`(1000[12.e12][#usn7],0x0 =~`5esn` =~$`8esn`) Is Null,`8esn`:usn2 Unwind Null Is Null Is Null As `8esn` Match (((:`7esn`{_usn3:01[$0]})<-[`2esn`?:`3esn`|_usn4]-(@usn5 :`5esn`)-[`7esn`? *0Xa{`3esn`:Count(*)[_usn3..]}]->(#usn7 :`3esn`{_usn3:.e0[$`1esn`..][_usn4..]}))) Where ``[0X7..][$@usn6..]"),
    octest:ct_string("Optional Match (((_usn3 :@usn6{@usn5:0e0 =~False =~.12})<-[``?:usn1|#usn7]-(:usn2{usn1:12 Is Null Is Null})<-[:`5esn`|:`1esn`{#usn8:`7esn` Is Null,`4esn`:False[$12]}]->(_usn3 :@usn5{`5esn`:12e12[..9e12][..$@usn6]}))) Return *,9e12[\"d_str\"..usn1][$7..0x0],Filter(`6esn` In 1000[12.e12][#usn7] Where $usn2 Contains $`1esn`) As `8esn` Order By $`4esn`[$1000..$`4esn`][0x0..$_usn3] Asc,{usn1:`` In 123.654 In 0.0,usn2:.e1 =~\"d_str\" =~'s_str'}[Filter(`3esn` In 999 Where 0 Contains $@usn5)..] Ascending Limit $`6esn`[$`6esn`..][0X7..]"),
    octest:ct_string("With Distinct 01[#usn8..1000] As `5esn`,\"d_str\"[0X7..``][@usn5.._usn4] As _usn3,Extract(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1|$`2esn` Is Not Null Is Not Null) =~[`7esn`[..01],1e1 =~$`8esn` =~`1esn`,$`6esn`[.e12..$`6esn`][$#usn7...0]] Order By usn1 Is Null Is Null Desc,`4esn` Starts With $#usn8 Starts With $#usn8 Desc,0.e0[.e12] Descending Limit usn1(Distinct 0 Is Null Is Null,$@usn5 =~$usn2 =~True) In Any(usn1 In 999 Where @usn6 Ends With 0.12 Ends With `3esn`) In [`4esn` Ends With 's_str' Ends With @usn6,$`4esn` In 0x0] Where $999[@usn5..][Null..] Optional Match @usn6=(_usn4 {`2esn`:1.e1 Is Not Null Is Not Null})<-[_usn4?:`3esn`|_usn4 *7]->({@usn6:0.e0 Contains $1000 Contains 7}),@usn5=(_usn4 {`2esn`:1.e1 Is Not Null Is Not Null})<-[_usn4?:`3esn`|_usn4 *7]->({@usn6:0.e0 Contains $1000 Contains 7}) Where 0.12[_usn3] Union All Merge (_usn3 :`1esn`:@usn6)<-[_usn3:@usn6]->({@usn6:`5esn`[0e0..],_usn4:$#usn8[0xabc..usn2]})-[_usn4 *0..]->(:#usn7{_usn3:7 Contains 1000 Contains $usn1}) On Create Set {usn1:$7[$12]}._usn4? =1000 =~$@usn5,Single(usn1 In 999 Where @usn6 Ends With 0.12 Ends With `3esn`).#usn7 =01 Ends With @usn6 Ends With $7 Create (((#usn7 {#usn7:999 Contains $`7esn` Contains usn2})-[@usn6?:`` *0Xa]-(@usn6 :@usn5{`8esn`:$@usn6 Contains 0e0})-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2))) Detach Delete _usn3($123456789[..`3esn`][..`7esn`]) Is Null,{_usn3:Null =~Count(*),@usn5:7 =~$1000 =~$`5esn`} Starts With {`1esn`:0.12 Is Null Is Null,#usn8:.e12 =~@usn5} Starts With {`7esn`:0Xa Contains 0x0 Contains $#usn8},0xabc[..$999]"),
    octest:ct_string("Create usn1=(:`5esn`{`7esn`:'s_str'[$#usn8],``:`1esn`[..$#usn7]})<-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-(`5esn` {_usn3:1.e1 Is Null Is Null})<-[_usn4 *00]-(#usn7 :`7esn`)"),
    octest:ct_string("Match `3esn`=(($_usn3)) Union All Return Distinct *,{`1esn`:$usn2 =~`6esn` =~`1esn`} Ends With 010 Ends With None(_usn4 In 12.e12 Is Null Is Null Where $`4esn` In 0x0) Order By True Ends With `6esn` Ends With 9e0 Desc Skip $_usn4[..$`8esn`] Limit True Contains $`` Contains 01234567 With Distinct `7esn`[..$`5esn`] As ``,[#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]][Filter(`2esn` In $``[$#usn8] Where 01234567[`6esn`..])..][[`3esn` In False In $`2esn` In 1e1 Where .12 =~$#usn7 =~$``|01234567 Is Null]..] As usn1,_usn3 =~010 As usn1 Skip $`5esn`['s_str'..] Unwind 01234567 Ends With $`6esn` Ends With 7 As #usn7"),
    octest:ct_string("With  .e0 =~7 =~False As `8esn`,01 Starts With $`5esn` Starts With 01234567,[0.e0 Contains $123456789 Contains 123456789,`5esn` In 12.e12 In 1000][..Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12]|0.e0[.e12])][..Any(#usn8 In 0x0[_usn4..] Where $#usn7)] As `7esn` Limit $`1esn` =~`1esn` =~0X0123456789ABCDEF Create (((:`5esn`{_usn4:\"d_str\"[.0][9e0],usn1:.e12 Is Not Null Is Not Null})<-[ *..0X0123456789ABCDEF]->(`1esn` {`5esn`:$`7esn` Ends With $_usn4 Ends With `5esn`,#usn8:'s_str'[$#usn8]})<-[usn2?:`7esn`{``:`5esn`[usn1]}]->(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]}))) Merge usn1=(({@usn6:$#usn8[0e0..][07..],``:$`7esn` =~1.e1 =~0.e0})<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]-({``:0.12 Contains 0x0 Contains @usn5})) On Create Set usn2+={`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]}[{`1esn`:`4esn` Starts With `8esn`}][({`7esn`:`4esn` In $`2esn` In @usn5})-[:`1esn`|@usn6*..]->(:`8esn`{`8esn`:0X7 Contains 12.0,`3esn`:`4esn` Starts With `8esn`})<-[`4esn` *123456789..]-(:`7esn`$#usn8)] On Match Set #usn7+=Single(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where `4esn` In $`2esn` In @usn5) =~[`6esn` In 1000[12.e12][#usn7] Where $`4esn`[$@usn5..`7esn`]|0X7[..`5esn`][..$`7esn`]] =~`3esn`(Distinct 0.e0 Is Not Null Is Not Null,$usn1[usn1..$`8esn`][12e12..$``]) Union All Create (({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})) Create `7esn`=(usn1 :_usn4)<-[usn1]->(:`3esn`{`7esn`:12.e12[.12..$_usn3][0e0..9e0],`7esn`:0X7[..True][..01234567]})<-[_usn3?:`` *..010{usn2:`7esn`[_usn4..][Count(*)..]}]->(`8esn` :``:`6esn`{#usn7:$`3esn` Is Null}),usn1=(`7esn` :`7esn`)-[?:`` *07{`1esn`:$#usn7[$`3esn`..$999]}]->(_usn3 {_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null})"),
    octest:ct_string("Detach Delete $`1esn` Starts With False Starts With 1000,[`7esn` In $`8esn`[0.12][12] Where 's_str'[$#usn8]][None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1)..(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})-[``?:@usn6]->({``:_usn3[9e0..$123456789][0X7..999]})][[$#usn8 =~7 =~.12,$`6esn`[.e12],_usn4 Starts With `6esn` Starts With $`8esn`]..{usn2:123.654[.e12..\"d_str\"]}],@usn5 Ends With 1000 Merge #usn8=(:@usn5{_usn4:$`5esn`[0][.12]})<-[@usn5?{usn1:7 Ends With `3esn` Ends With $`2esn`}]-(_usn4 ) Merge (usn2 :`7esn`) On Match Set usn2 ={`8esn`:12 Is Null Is Null}[[`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 1000 Starts With 0e0 Starts With 0|$#usn8 Ends With _usn4 Ends With usn2]..][[usn1 In 0xabc Is Not Null Is Not Null Where $@usn6 Is Null|$`6esn`[$`6esn`..][0X7..]]..],[`2esn` In $``[$#usn8] Where 1000 Starts With 0x0|00 Starts With usn1 Starts With Count(*)].usn1 =#usn7[False..][123.654..] Union Create `4esn`=(@usn6 {``:12.e12 Contains 's_str' Contains 0.12})"),
    octest:ct_string("Merge (:usn1:``{_usn3:123.654 Is Not Null Is Not Null}) On Match Set #usn8+=0.e0 In `2esn`,`5esn`+=False[$_usn4..][`8esn`..],@usn6+=(usn1 {@usn5:12e12 Ends With `6esn`,_usn4:\"d_str\" Starts With _usn4 Starts With $_usn4})<-[?:#usn7|`5esn`{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}]->(@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})<-[?:`1esn`|@usn6]->(`6esn` :`2esn`:@usn5) Is Null Merge `1esn`=(usn1 {usn1:_usn4[.._usn4],_usn4:@usn5[$`1esn`..][$7..]})<-[:`5esn`|:`1esn`{#usn8:`7esn` Is Null,`4esn`:False[$12]}]->(`8esn` :`3esn`{`2esn`:$`8esn`[`7esn`],`4esn`:#usn8[1e1..]})-[?:`3esn`|_usn4 *01..7{@usn5:`4esn`}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]}) On Create Set All(usn1 In 0xabc Is Not Null Is Not Null Where $``).`5esn`? =Extract(#usn8 In 0x0[_usn4..] Where 7 =~$1000 =~$`5esn`|`2esn`[`3esn`..])[{`3esn`:#usn8[..0X0123456789ABCDEF][...0]}][Any(`6esn` In .e0['s_str'..][$`8esn`..] Where \"d_str\" Ends With $1000 Ends With usn2)] On Match Set Any(`6esn` In 1000[12.e12][#usn7] Where `1esn`[$7][0Xa]).`4esn`? =$`2esn` Starts With 9e12 Unwind (@usn6 )<-[`7esn`?:@usn6]-(_usn4 :usn1:``{`2esn`:$`2esn` Is Not Null Is Not Null,`2esn`:@usn5['s_str'..$`2esn`]})[``(Distinct `` In False In True,0xabc Contains 0)] As `3esn` Union All Unwind 12 Starts With usn2 As #usn7 Remove `4esn`(`` In False In True,$_usn3 Is Not Null).`1esn`,(`5esn` {usn1:1000 Ends With $`5esn`})<-[ *07{usn1:010 =~0e0 =~9e1}]->(`7esn` {`2esn`:9e0[$@usn6]}).`8esn` Match ((({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})-[ *0..{`1esn`:0xabc Contains 0}]->(:_usn3:@usn5)<-[_usn3?:#usn7|`5esn` *..0x0]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]}))) Union All Unwind None(#usn8 In 0x0[_usn4..] Where #usn8 Is Not Null) Is Not Null As @usn5 Merge ((usn1 {@usn5:12e12 Ends With `6esn`,_usn4:\"d_str\" Starts With _usn4 Starts With $_usn4})-[`1esn`?]->(:#usn7{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})) On Match Set `3esn` =7[$`5esn`..`4esn`],{`5esn`:0.0 Starts With Null Starts With .e12}.#usn7? ='s_str'[$#usn8] With Distinct Extract(usn1 In 123.654 =~.e0 =~9e0 Where $123456789[`3esn`..`5esn`][1e1..$`5esn`]) Ends With [usn1 In 123.654 =~.e0 =~9e0 Where `5esn`[usn1]] As `` Order By [12 Is Null Is Null,9e0[$@usn6]][Filter(`6esn` In 0x0[9e0..] Where $123456789 In 010 In $`8esn`)..] Asc,0e0[...e1] Asc Skip {`5esn`:@usn6[$usn1][$`2esn`],`1esn`:12.0[9e12]['s_str']}[Extract(`2esn` In $``[$#usn8] Where 12e12 Ends With $_usn4 Ends With $`2esn`|.12 =~$#usn7 =~$``)][[12.0[`3esn`][_usn3]]] Where usn2 Starts With 00"),
    octest:ct_string("Remove `7esn`(Distinct $_usn4[..$`8esn`],_usn3[0Xa..]).#usn7? Optional Match ((`3esn` {`3esn`:1e1[`3esn`]})-[?{``:Null =~Count(*),_usn3:$@usn6 Is Null Is Null}]-(@usn5 {usn2:`3esn`[0x0][$`5esn`],`7esn`:`5esn`[$7..01]})),_usn3=(usn2 :#usn8:#usn7{@usn5:`8esn` Ends With $`1esn`,#usn8:\"d_str\" Ends With $1000 Ends With usn2}) Where Null In 0xabc Create ((({`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`})-[`1esn`?:`3esn`|_usn4*..]->(:#usn8:#usn7{`4esn`:0Xa Contains 0x0 Contains $#usn8})<-[:_usn3|`6esn`{``:`6esn`[`7esn`..$_usn3][9e0..#usn8],`8esn`:.0[01234567]}]->(`2esn` :`5esn`{@usn5:'s_str' Contains 999,`6esn`:1000[12.e12][#usn7]}))),(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[@usn6{_usn4:$`` Starts With 0x0}]-(usn2 :`7esn`) Union All Delete 0[..123456789][..False],0xabc Is Not Null Is Not Null Optional Match #usn8=(((_usn4 :@usn5)-[? *..0X0123456789ABCDEF{#usn8:0X7[..`5esn`][..$`7esn`]}]-(#usn7 {@usn5:$`5esn` Contains $usn2})-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2))) Where @usn5[01234567..] Remove {`8esn`:0Xa[Count(*)][0xabc]}.usn1 Union With  *,.e12[..$_usn4][..#usn7] As usn2 Order By {#usn8:.e0 Ends With $`1esn` Ends With 1000}[Filter(#usn8 In 07['s_str'][$@usn6] Where $12[0.0..])][Filter(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..])] Asc Where 1e1 Is Null"),
    octest:ct_string("Match `7esn`=({usn2:`4esn` Is Not Null})<-[`1esn`?:`3esn`|_usn4{_usn4:12e12 Ends With $_usn4 Ends With $`2esn`,``:.12 Is Not Null}]-(:`1esn`:@usn6{`5esn`:.e12[$_usn4..0],`4esn`:$#usn8 In True In #usn7})-[:`8esn`|@usn6 *12{`5esn`:$@usn6 Is Null,`3esn`:@usn6 Contains $_usn3 Contains 12.0}]-(:`6esn`:`3esn`) Where False In $`2esn` In 1e1 Remove Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0).`5esn`,usn1:_usn4 Remove count(Distinct .e0 Is Not Null).#usn8,[0X7[$`6esn`..0e0],True Ends With `6esn` Ends With 9e0,`7esn` In `8esn` In 12].usn2,[@usn5[..$999][..$0],\"d_str\"[`5esn`],`8esn` Ends With $`1esn`].`8esn`! Union Remove [1000[Null][$`7esn`],12e12 Ends With 0 Ends With $@usn6].`4esn`! Remove Filter(_usn4 In 12.e12 Is Null Is Null Where 0e0 =~False =~.12).``! Create `5esn`=(((@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})-[? *..0X0123456789ABCDEF{`7esn`:`4esn` Is Not Null,``:.12 Is Not Null}]->(`7esn` {`2esn`:9e0[$@usn6]})-[:#usn7|`5esn`]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null}))),`1esn`=((:#usn7{_usn3:7 Contains 1000 Contains $usn1})-[:`8esn`|@usn6*..]->(#usn8 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})) Union Create `5esn`=((`4esn` :usn2)<-[:#usn7|`5esn`*{`8esn`:01[$0],``:0xabc Is Not Null Is Not Null}]-(_usn3 :`7esn`{#usn7:123.654 =~.e0 =~9e0,_usn3:`1esn`[Null..]}))"),
    octest:ct_string("Unwind `2esn` Is Null Is Null As `3esn` Optional Match `1esn`=((:`4esn`:usn2$`7esn`)<-[_usn3:`3esn`|_usn4]->(_usn3 :`4esn`:usn2)) Where .12[0X0123456789ABCDEF..] Union All Remove None(`6esn` In .e0['s_str'..][$`8esn`..] Where .12).`8esn`? Detach Delete 123.654[``],0xabc[123.654][12]"),
    octest:ct_string("With  (`5esn` {_usn3:1.e1 Is Null Is Null})<-[_usn3?:#usn7|`5esn` *..0x0]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})<-[?:@usn5|:@usn6]-(`7esn` {@usn6:.e0[123456789..][$`2esn`..],``:$0[`5esn`][9e12]})[`8esn`()..][[`7esn` In $`8esn`[0.12][12] Where 9e0[123456789..0][12.0..@usn6]]..] As #usn8,$0 Starts With `5esn` Starts With 0 Order By [.0[@usn6..],`2esn`[`3esn`..],Count(*) Contains 12e12 Contains 0xabc][..{usn1:#usn7 Is Not Null Is Not Null,`6esn`:$12[0.0..]}][..(:usn2{usn1:_usn4[.._usn4],@usn6:@usn5 In .e0 In \"d_str\"})-[?:`8esn`|@usn6 *0xabc..{usn1:$#usn7[..$999][..9e1]}]-(:`6esn`:`3esn`{@usn6:#usn8 Is Not Null,usn2:1e1 Is Null})-[usn1{`1esn`:`7esn` Contains .0 Contains #usn8}]->(_usn3 {usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`4esn`:1.e1 Is Null Is Null})] Ascending,[#usn8 In 0x0[_usn4..] Where $_usn3 Is Not Null] Is Not Null Is Not Null Ascending,1.e1 Desc Limit Count(*) Ends With 7 Ends With 0 Where 12.e12 Contains 's_str' Contains 0.12 Return Distinct 9e0[.e0] As `8esn`,{_usn3:`1esn`[..$#usn7]} Contains Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1) Contains [$1000[00..],$`6esn`[.e12..$`6esn`][$#usn7...0],0Xa[..1.e1]],0x0 In 0X0123456789ABCDEF As usn1 Skip Any(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where $0 Ends With .12) Is Null Limit All(`6esn` In .e0['s_str'..][$`8esn`..] Where 12.0[9e12]['s_str'])[[`5esn` Ends With 0x0,.0 =~$@usn5 =~1.e1]..[`6esn` In .e0['s_str'..][$`8esn`..] Where $0[`5esn`][9e12]|.12[..07]]][{`8esn`:.0[..False]}..[usn1 In 0xabc Is Not Null Is Not Null Where 9e0[123456789..0][12.0..@usn6]|.e12 Is Not Null Is Not Null]] With  All(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Is Not Null Is Not Null) Starts With Single(usn1 In 999 Where `4esn` Is Null Is Null) Starts With (`7esn` :_usn3:@usn5{_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null})<-[? *..0x0{`1esn`:`7esn` Contains .0 Contains #usn8}]->(`4esn` {_usn3:7 Contains 1000 Contains $usn1})-[`5esn` *12{`8esn`:0Xa[Count(*)][0xabc]}]-(#usn8 :#usn8:#usn7) As `1esn`,$`5esn`[.e1][#usn8] As `4esn` Order By usn1[..`1esn`][..$999] Asc,$0 Starts With `5esn` Starts With 0 Ascending Skip {_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]}[All(`7esn` In $`8esn`[0.12][12])..[#usn8[$`7esn`..12.0],.e0 Is Not Null]] Limit [9e1[..01234567][..`4esn`]][[$@usn6 Is Not Null]][Extract(`3esn` In 999 Where 0x0 Contains .0|@usn5[..$999][..$0])] Where 12.e12 Contains 's_str' Contains 0.12"),
    octest:ct_string("Remove Any(`6esn` In 1000[12.e12][#usn7] Where $usn2 Contains $`1esn`)._usn3,(@usn6 :`5esn`{@usn5:.12[9e1..0X7]})<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]->({_usn4:`7esn`[_usn4..][Count(*)..],`1esn`:01234567 In \"d_str\"})._usn4? Union All With  {`7esn`:01234567[9e0][.0],`2esn`:999 Ends With $`4esn`}[`4esn`(.12 In 01234567 In _usn4,12.0[9e12]['s_str'])..] Order By Null Is Not Null Is Not Null Asc,\"d_str\"[7..$999] Ascending,0xabc[..9e1] Asc Where 0 Is Null Is Null Unwind \"d_str\" Ends With $`3esn` As @usn6"),
    octest:ct_string("Unwind None(`6esn` In .e0['s_str'..][$`8esn`..] Where #usn7 Ends With 0.12)[{usn1:$`6esn`[.e12..$`6esn`][$#usn7...0]}..Single(#usn8 In 07['s_str'][$@usn6] Where $#usn7[$`3esn`..$999])][Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 00[0X7..9e12]|$#usn7)..All(`6esn` In 1000[12.e12][#usn7] Where 12.e12 Is Not Null)] As _usn3"),
    octest:ct_string("Remove Extract(`6esn` In 1000[12.e12][#usn7] Where #usn7[999..$999]|01234567[..`6esn`][..``]).``?,[#usn8 In 0x0[_usn4..] Where `8esn`[12.e12][`4esn`]|0e0 In `8esn` In 0xabc].usn2? With Distinct 12[$`5esn`..$`7esn`][$1000..$_usn4] As #usn8,False[...e0][..$#usn8] As `1esn`,.e1[0X7..`2esn`] As `5esn` Order By _usn3[0Xa..] Descending,01234567[$`7esn`] Asc Skip .12 =~1000 =~7 Limit 7[.0..01] Union Create (`7esn` :`1esn`:@usn6)-[`2esn`?:`8esn`|@usn6]-({`4esn`:True Contains .e1 Contains `2esn`}),(#usn8 :`6esn`:`3esn`$#usn7)"),
    octest:ct_string("Merge usn1=({usn1:$7[$12]})<-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]-(#usn8 :#usn7{`2esn`:0.e0[.e12]})<-[:@usn6]->(:`7esn`$12) On Match Set None(usn1 In 999 Where @usn6 Ends With 0.12 Ends With `3esn`).`3esn`! =`5esn`[0e0..],_usn3+=01234567[..00][..$`3esn`] On Create Set usn2+=$123456789 Is Null Is Null,`1esn` =None(`7esn` In $`8esn`[0.12][12] Where 01 Is Null)[Single(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 999 Ends With 123456789 Ends With 12.0)..][None(usn1 In 0xabc Is Not Null Is Not Null Where 123456789[..0])..] Remove {`3esn`:Null Is Null Is Null}.`8esn` Delete [.0[@usn6..],`2esn`[`3esn`..],Count(*) Contains 12e12 Contains 0xabc][..{usn1:#usn7 Is Not Null Is Not Null,`6esn`:$12[0.0..]}][..(:usn2{usn1:_usn4[.._usn4],@usn6:@usn5 In .e0 In \"d_str\"})-[?:`8esn`|@usn6 *0xabc..{usn1:$#usn7[..$999][..9e1]}]-(:`6esn`:`3esn`{@usn6:#usn8 Is Not Null,usn2:1e1 Is Null})-[usn1{`1esn`:`7esn` Contains .0 Contains #usn8}]->(_usn3 {usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`4esn`:1.e1 Is Null Is Null})] Union Remove {`3esn`:Null Is Null Is Null}.`8esn`"),
    octest:ct_string("Detach Delete [`6esn` In 1000[12.e12][#usn7] Where $`7esn`[..$`8esn`]|$`6esn` Starts With usn1][Extract(`3esn` In 999 Where usn1[$`1esn`..])..{`3esn`:usn2 Contains 07 Contains False,#usn8:usn2[.e1..][01234567..]}][{@usn5:.12[9e1..0X7]}..[_usn4 In 12.e12 Is Null Is Null Where $123456789 In 010 In $`8esn`|0.12['s_str'..$0][$usn1..9e0]]],12[$_usn4..12.0] Create usn2=((_usn3 :@usn6{@usn5:0e0 =~False =~.12})-[?:@usn5|:@usn6 *0Xa]-(:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`})) Create ((@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]})-[? *0xabc..{`3esn`:.e12[$_usn4..0],usn1:00[$0..usn2][$_usn4..$999]}]->(@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]})<-[_usn3:`3esn`|_usn4 *0Xa]-({`4esn`:Count(*)[..$_usn3][..$usn2]})) Union Detach Delete #usn7(usn2 =~`6esn`) Is Null Is Null,\"d_str\" Ends With 123456789,.12[0X0123456789ABCDEF..] Union Match ((:@usn5{``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]})<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(`4esn` :`5esn`)<-[?:@usn5|:@usn6]-({`1esn`:$`7esn` Ends With $_usn4 Ends With `5esn`})),(:@usn5{_usn4:$`5esn`[0][.12]})<-[@usn5?{usn1:7 Ends With `3esn` Ends With $`2esn`}]-(_usn4 ) Where 9e1 =~$0 Create #usn8=((#usn7 {usn2:$#usn8 In True In #usn7})-[`6esn` *00]->(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})) Remove _usn4(Distinct usn1 Ends With $`8esn` Ends With 7).`8esn`?,Filter(`3esn` In 999 Where 0.12[123456789..]).`6esn`?,(_usn3 {`8esn`:$`7esn` Ends With $_usn4 Ends With `5esn`})-[:_usn3|`6esn`{``:`6esn`[`7esn`..$_usn3][9e0..#usn8],`8esn`:.0[01234567]}]-(`1esn` {@usn5:9e1 Starts With 12.e12 Starts With 010,`8esn`:$0[@usn6..][.e12..]})-[ *0X7..0x0{`7esn`:Count(*)[..`5esn`],`2esn`:.e12[..$_usn4][..#usn7]}]->(`1esn` {@usn6:Null In 0xabc}).#usn8?"),
    octest:ct_string("Remove Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $1000 =~00).#usn8?"),
    octest:ct_string("Return Distinct @usn5 Is Null As `5esn`,Filter(`6esn` In .e0['s_str'..][$`8esn`..] Where 12.0[9e12]['s_str'])[None(usn1 In 123.654 =~.e0 =~9e0 Where False Starts With $123456789)..`3esn`(Distinct 0.12[$usn1..$7],01234567[$`7esn`])],Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0e0 Starts With $@usn6 Starts With $7) =~[usn1 In 123.654 =~.e0 =~9e0 Where 0.12 Contains 0x0 Contains @usn5] =~{@usn5:$usn1 Ends With $`2esn`} Order By (`6esn` :`8esn`{usn2:#usn7 In #usn7,`1esn`:00['s_str']})<-[``?:@usn6]-(:`2esn`:@usn5{usn2:$`3esn` Ends With @usn6 Ends With 123.654})<-[@usn5?:@usn6 *..010]->(#usn7 :#usn7{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2}) Is Null Desc Optional Match (((:_usn4{_usn3:`1esn`[Null..]})<-[`8esn`? *..0X0123456789ABCDEF{`2esn`:$``[$_usn4][$`3esn`]}]-(:`6esn`:`3esn`{`5esn`:$7[$12],`6esn`:#usn8 Is Not Null})-[@usn6{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]}]-(`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]}))),(`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})"),
    octest:ct_string("Optional Match ((`3esn` {`3esn`:1e1[`3esn`]})-[?{``:Null =~Count(*),_usn3:$@usn6 Is Null Is Null}]-(@usn5 {usn2:`3esn`[0x0][$`5esn`],`7esn`:`5esn`[$7..01]})),_usn3=(usn2 :#usn8:#usn7{@usn5:`8esn` Ends With $`1esn`,#usn8:\"d_str\" Ends With $1000 Ends With usn2}) Where Null In 0xabc With Distinct *,`2esn` =~$`2esn` =~$`4esn`,$usn2['s_str'..usn1] As usn1 Skip 00 Contains $7 Contains $`8esn` Limit usn2[Count(*)][$`1esn`] Where @usn6 Is Null Is Null Return 1000[07..][1.e1..],usn1 Ends With 1.e1 Ends With `4esn` Skip Extract(`6esn` In 1000[12.e12][#usn7] Where `7esn` Contains .0 Contains #usn8|$0[00..])[{`2esn`:07['s_str'][$@usn6],``:usn1[..$123456789][..`1esn`]}..`4esn`(Distinct 9e1 Contains 07,1000[07..][1.e1..])][Single(`5esn` In $usn2 Contains $`1esn` Where 0e0['s_str'])..[123456789[0.0..`2esn`][1.e1..$_usn4]]] Limit 0Xa[..$`2esn`][..00] Union All With  Extract(`3esn` In 999 Where .e12 Is Null Is Null|$`7esn`[usn2]) Is Not Null As @usn5 Order By usn1 =~12 =~$0 Asc,01 In `4esn` In 1.e1 Descending Remove `2esn`:`1esn`:@usn6,{_usn3:0xabc Contains 0,`6esn`:$`6esn`[.e12..$`6esn`][$#usn7...0]}._usn4?,@usn5:`4esn`:usn2"),
    octest:ct_string("With  *,12 Ends With 0 Ends With Null,Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null) =~[12 Is Null Is Null,9e0[$@usn6]] Order By $123456789 In `8esn` In 0X7 Descending,123456789[$_usn4..] Asc Skip `` Is Not Null Is Not Null Where 123.654 =~.e0 =~9e0 Remove `5esn`:_usn3:@usn5,`6esn`:`7esn` Merge ``=(#usn7 {_usn4:`1esn`[$7][0Xa]})-[``{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null}]->(#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]})-[``:@usn6{`3esn`:.e12[$_usn4..0],usn1:00[$0..usn2][$_usn4..$999]}]-({``:_usn3[9e0..$123456789][0X7..999]}) On Create Set `7esn` =0.e0 =~$@usn5,`6esn`(Distinct #usn8 Is Not Null)._usn4 =1000 Is Not Null Union All Remove Filter(#usn8 In 07['s_str'][$@usn6] Where _usn4[.._usn4])._usn4?,Single(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 0X0123456789ABCDEF Is Null).`4esn`,Extract(`7esn` In $`8esn`[0.12][12] Where $999[010..]|12.0[..0X7]).@usn6? Union All With Distinct .e1[01234567] As `6esn`,01 In $7 In $1000 As #usn7,$`1esn` Starts With True Starts With @usn5 Skip {`2esn`:$`2esn` Starts With 9e12} Contains {`3esn`:@usn5['s_str'..$`2esn`],usn2:#usn8[..0X0123456789ABCDEF][...0]} Limit (#usn7 :`3esn`{_usn3:.e0[$`1esn`..][_usn4..]})-[#usn8?:usn1|#usn7{`8esn`:$#usn7[`7esn`..][$`8esn`..]}]-(:`1esn`:@usn6) Is Not Null Is Not Null With Distinct $`8esn` Is Not Null Order By @usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`] Ascending Limit Extract(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where .12 Is Null|0X0123456789ABCDEF[$_usn3][$_usn4])[..All(usn1 In 123.654 =~.e0 =~9e0 Where False Starts With $123456789)] Where 0xabc =~01"),
    octest:ct_string("Create #usn8=((_usn3 :@usn5{`2esn`:1.e1[#usn7][1.e1]})-[#usn8?*..{#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]}]->(:`2esn`:@usn5{@usn5:`4esn`})) Union Remove {@usn5:07[0..],`8esn`:Count(*)[..$_usn3][..$usn2]}.`2esn`?,[`3esn` In 999 Where 0x0 Contains .0|$@usn6 Is Not Null].``?,Extract(usn1 In 999 Where $999[01234567][@usn5]|0e0['s_str']).usn2 Union Remove Extract(`6esn` In 1000[12.e12][#usn7] Where .e12 =~@usn5).usn2?,(:usn2$`4esn`)<-[usn1{`1esn`:`7esn` Contains .0 Contains #usn8}]->(:`2esn`:@usn5{@usn5:`4esn`})-[:_usn3|`6esn` *01..7{_usn4:$`2esn`[$``..12e12]}]-(`5esn` {usn1:1000 Ends With $`5esn`}).`7esn` Create `4esn`=(usn2 :_usn3:@usn5) Remove All(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 7 Ends With `3esn` Ends With $`2esn`).``,0e0._usn3,[$usn1[#usn8..`8esn`][7..`4esn`],`5esn` Ends With 0x0].`2esn`?"),
    octest:ct_string("Merge @usn6=(`8esn` :#usn7)-[ *0xabc..{``:0xabc =~01,`7esn`:$#usn7[123456789..][$`4esn`..]}]-(:#usn7{_usn3:7 Contains 1000 Contains $usn1})-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :`5esn`) On Match Set #usn8 =9e0 Contains Null,`` =9e12[\"d_str\"..usn1][$7..0x0],#usn7+=_usn3[$0] Union All Delete $7[0.e0][`8esn`],$`6esn`[$usn1]"),
    octest:ct_string("Match (((@usn6 {@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})-[`5esn`:@usn5|:@usn6*{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]->(#usn8 :`2esn`:@usn5)<-[`5esn`:_usn4|_usn3 *0X7..0x0]-(:#usn7{_usn4:\"d_str\"[7..$999]}))),((`7esn` {#usn7:1e1[`3esn`]})-[@usn6?:`` *0Xa]-(@usn6 :@usn5{`8esn`:$@usn6 Contains 0e0})<-[:_usn4|_usn3]-(#usn8 :`8esn`{_usn4:usn2 In 1e1 In `4esn`})) Return Distinct 0.12 Starts With 0X7,All(`6esn` In 1000[12.e12][#usn7] Where 9e12[\"d_str\"]) Contains [usn1 In 0xabc Is Not Null Is Not Null Where 9e0[123456789..0][12.0..@usn6]|True] Contains [_usn3 =~$12,`5esn`[0e0..]] Limit 123456789[$_usn4..] Merge (((`2esn` :_usn4{`7esn`:`2esn`[`3esn`..],`6esn`:.12 Is Not Null})<-[`1esn`?:`3esn`|_usn4*..]-(:`6esn`:`3esn`{`3esn`:123.654[0Xa..0x0][.12..12e12]})-[?:`8esn`|@usn6*{``:0.e0 Contains $123456789 Contains 123456789,`4esn`:#usn7 Is Not Null Is Not Null}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]}))) On Create Set `2esn`+=`6esn` Is Null,`7esn`+=$`7esn` Is Null Is Null,`6esn`+=(:_usn4{_usn3:`1esn`[Null..]})-[{`8esn`:'s_str'[$#usn8]}]->(`8esn` :@usn5) Is Not Null Is Not Null On Match Set `3esn`+=$`2esn` Is Not Null Is Not Null,{usn2:123.654 Is Not Null Is Not Null}._usn4! =`2esn`[0.e0..$999] Union Remove usn2:`1esn`:@usn6,(:`6esn`:`3esn`{@usn6:#usn8 Is Not Null,usn2:1e1 Is Null})-[#usn8?:usn1|#usn7{`8esn`:$#usn7[`7esn`..][$`8esn`..]}]-(`5esn` {usn2:`6esn` In $``})-[?{`3esn`:'s_str'[$`6esn`..][$0..]}]->(`1esn` {@usn6:Null In 0xabc}).`7esn`! Merge usn2=(((:@usn5{usn2:$999 Is Not Null})<-[``?:#usn8|:`6esn`]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]})-[usn2?:@usn5|:@usn6]->({#usn8:$`` Is Not Null Is Not Null,`8esn`:$usn2 Starts With 9e1 Starts With `7esn`}))) With Distinct *,{`1esn`:$usn2 =~`6esn` =~`1esn`} Ends With 010 Ends With None(_usn4 In 12.e12 Is Null Is Null Where $`4esn` In 0x0) As `8esn`,usn1($`2esn` Ends With 1e1)[..None(`6esn` In .e0['s_str'..][$`8esn`..] Where Null In 0xabc)][..Filter(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1)] Skip None(_usn4 In 12.e12 Is Null Is Null Where _usn4 In .0 In .12) Starts With {`4esn`:`8esn`[0x0..],usn2:$#usn8 =~7 =~.12} Starts With _usn3(Distinct usn1[$`1esn`..]) Union All Remove [999 Is Not Null,`7esn`[`8esn`][#usn7]].`3esn`!,Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where $0 Ends With .12|$7 Ends With 12.e12 Ends With `1esn`).@usn5! Unwind Filter(`6esn` In 0x0[9e0..] Where $`4esn`[$1000..$`4esn`][0x0..$_usn3]) =~Single(_usn4 In 12.e12 Is Null Is Null Where 9e1 =~$0) As #usn8 Optional Match `6esn`=((:`5esn`{`7esn`:0Xa[Count(*)][0xabc],`2esn`:`4esn` Ends With 's_str' Ends With @usn6})<-[`8esn`?:usn1|#usn7 *01..7{usn1:123456789[$_usn4..]}]-(@usn5 :`2esn`:@usn5$#usn8)-[`4esn`?:#usn8|:`6esn` *999{`8esn`:010[`1esn`..`4esn`]}]-({@usn5:07[0..],`8esn`:Count(*)[..$_usn3][..$usn2]})),(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})<-[`8esn`?:usn2|:``*]->(#usn8 :@usn5{`8esn`:$0[`5esn`][9e12]})-[`6esn`:#usn8|:`6esn` *..0x0{`8esn`:0 =~#usn8,`6esn`:@usn5 Is Null}]->({@usn6:$@usn5 =~$usn2 =~True,`4esn`:$#usn8 =~7 =~.12})"),
    octest:ct_string("Match _usn3=((`7esn` )<-[`5esn`? *..0x0{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]-(`6esn` :@usn6)),`4esn`=(((`1esn` {@usn6:$12[#usn8..$@usn5][9e0..usn1]})<-[?:usn2|:``{_usn3:.e1 Ends With $123456789}]-(`4esn` {#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})-[`3esn`]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5}))) With Distinct _usn4 Ends With .e12 As @usn6,$`1esn` =~`1esn` =~0X0123456789ABCDEF As _usn3 Order By ``($#usn7[$`3esn`..$999]) Starts With {``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]} Ascending,1e1 =~$`8esn` =~`1esn` Descending Skip Null Is Null Is Null Limit 0.e0 Is Not Null Return Distinct $`5esn` Starts With 0X0123456789ABCDEF Starts With Null,$#usn7[9e12..12],`8esn`[9e12] Order By 12e12 Ends With 0e0 Desc,`1esn`[..$@usn6][..`3esn`] Asc"),
    octest:ct_string("Delete {_usn3:`` Contains 010 Contains $1000}[Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0.0[`7esn`][`6esn`]|9e1[..01234567][..`4esn`])..`7esn`($123456789[..`3esn`][..`7esn`])][None(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where Count(*) Contains 12e12 Contains 0xabc)..Single(usn1 In 0xabc Is Not Null Is Not Null Where usn1[$`1esn`..])],$`5esn`[$usn1..usn1][\"d_str\"...e12] Remove [1000[Null][$`7esn`],12e12 Ends With 0 Ends With $@usn6].`4esn`!"),
    octest:ct_string("Return Distinct *,None(`3esn` In False In $`2esn` In 1e1 Where .0[@usn6..]) Is Null Is Null,$12[#usn8..$@usn5][9e0..usn1] As `5esn` Order By (:`4esn`:usn2$``)-[`5esn`?:_usn4|_usn3{@usn5:7 =~False,_usn3:999 Ends With $`4esn`}]->(usn2 :``:`6esn`)<-[_usn3:`3esn`|_usn4]->(#usn7 :_usn4) Is Not Null Descending Return Distinct *,{#usn8:.e0 Ends With $`1esn` Ends With 1000}[Filter(#usn8 In 07['s_str'][$@usn6] Where $12[0.0..])][Filter(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..])] As `4esn` Order By [usn1 In 123.654 =~.e0 =~9e0 Where $@usn5[$_usn3]|$`2esn` Ends With 1e1] Contains All(#usn8 In 0x0[_usn4..] Where 0xabc[123.654][12]) Descending,Extract(usn1 In 999 Where 1e1 =~$`8esn` =~`1esn`|7 Starts With $@usn6) Is Not Null Is Not Null Desc Skip $`2esn` Ends With 1e1 Match (((`2esn` :_usn4{`7esn`:`2esn`[`3esn`..],`6esn`:.12 Is Not Null})<-[`1esn`?:`3esn`|_usn4*..]-(:`6esn`:`3esn`{`3esn`:123.654[0Xa..0x0][.12..12e12]})-[?:`8esn`|@usn6*{``:0.e0 Contains $123456789 Contains 123456789,`4esn`:#usn7 Is Not Null Is Not Null}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]})))"),
    octest:ct_string("Unwind [`3esn` In @usn6[..\"d_str\"][..01] Where `1esn`[$7][0Xa]|.e0 Contains 999] In (_usn4 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8) As `6esn` Delete $`1esn` In $#usn7 In 0X7,Single(`6esn` In .e0['s_str'..][$`8esn`..] Where $`5esn` Contains $usn2) In usn1($@usn6 Is Null Is Null) In All(#usn8 In 0x0[_usn4..] Where $_usn3 Is Not Null) Union Return 123.654 In (:_usn3:@usn5{`1esn`:$`4esn`[.e1..$usn1],``:0x0 =~`5esn` =~$`8esn`})<-[?{``:$`6esn`[.e12]}]-(`4esn` :`3esn`) In [`2esn` In $``[$#usn8]] As #usn8 Limit False Starts With $123456789"),
    octest:ct_string("Return Distinct .12[0xabc..],$0 Is Not Null Is Not Null As `8esn`,@usn6[..\"d_str\"][..01] Limit 1000[12.e12][#usn7]"),
    octest:ct_string("Return *,[`6esn` In 1000[12.e12][#usn7] Where $`7esn`[..$`8esn`]|$`6esn` Starts With usn1][Extract(`3esn` In 999 Where usn1[$`1esn`..])..{`3esn`:usn2 Contains 07 Contains False,#usn8:usn2[.e1..][01234567..]}][{@usn5:.12[9e1..0X7]}..[_usn4 In 12.e12 Is Null Is Null Where $123456789 In 010 In $`8esn`|0.12['s_str'..$0][$usn1..9e0]]] As usn1 Order By Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $@usn5 =~$usn2 =~True) In (@usn5 :`3esn`)<-[``?:usn1|#usn7]-(:`2esn`:@usn5$usn1)-[usn1?:@usn5|:@usn6 *01..7{`1esn`:`8esn` Ends With $`1esn`}]-(#usn8 :_usn4) Desc,Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) Ends With [1.e1[#usn7][1.e1],Null =~Count(*)] Ends With [#usn8[..0X0123456789ABCDEF][...0],$usn1 Is Not Null Is Not Null] Desc Limit $``[12e12..01][$`5esn`..12e12] Union All Detach Delete `2esn` Contains `` Contains 9e12,_usn4 Ends With .e12,[`3esn` In @usn6[..\"d_str\"][..01] Where `1esn`[$7][0Xa]|.e0 Contains 999] In (_usn4 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8) Return 1000 Ends With 01234567 Ends With usn1 As usn2,`7esn`[`7esn`],123456789 Ends With 9e1 Ends With `` Order By [12 Is Null Is Null,9e0[$@usn6]][Filter(`6esn` In 0x0[9e0..] Where $123456789 In 010 In $`8esn`)..] Asc,0[0Xa..] Ascending,$`6esn`[07][$`1esn`] Descending Skip (`4esn` :`3esn`)-[:`1esn`|@usn6 *0..]-(_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})<-[?:`1esn`|@usn6 *0Xa]-(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]}) Is Not Null Is Not Null Merge `1esn`=(((_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[`7esn`?:`2esn`|:`7esn`]->(`3esn` {#usn8:#usn7 =~$`8esn`})-[ *07{`1esn`:$``}]->(`1esn` :usn1:``))) Union All Merge usn2=((_usn4 )<-[`7esn`?{@usn5:`4esn` Is Not Null,`3esn`:.e1 =~usn2 =~`7esn`}]-(:`4esn`:usn2{`2esn`:12e12 Ends With 0 Ends With $@usn6,``:`1esn`[Null..]})<-[?:#usn7|`5esn`{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]})) Unwind (_usn4 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8) Is Not Null Is Not Null As #usn8 Unwind $`3esn`[9e0..0.0][_usn4..123456789] As #usn7"),
    octest:ct_string("Optional Match ((`1esn` :usn2{`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]})-[`8esn`{``:0[1.e1..#usn7],_usn4:.e12 Contains `7esn` Contains 999}]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5})<-[usn2:`6esn` *00{`5esn`:.e12[$_usn4..0],`4esn`:$#usn8 In True In #usn7}]->(:``:`6esn`{`5esn`:_usn3 =~$12})),((@usn6 :`5esn`{@usn5:.12[9e1..0X7]})-[ *0X7..0x0{`7esn`:Count(*)[..`5esn`],`2esn`:.e12[..$_usn4][..#usn7]}]->(`8esn` :@usn5{_usn3:Count(*) Ends With 7 Ends With 0,`8esn`:@usn6 Starts With #usn8 Starts With $#usn7})) Union Unwind .e12[$_usn4..0] As `4esn` Merge (((#usn7 {#usn7:999 Contains $`7esn` Contains usn2})-[@usn6?:`` *0Xa]-(@usn6 :@usn5{`8esn`:$@usn6 Contains 0e0})-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2))) On Create Set usn1:`1esn`:@usn6,`8esn` =$123456789[`1esn`..][`7esn`..] On Match Set #usn7(Distinct $`4esn` =~07).`8esn`? =$@usn6[$#usn8..$999][Count(*)..usn1] Union Merge ((`2esn` :@usn5{@usn6:.e0 =~7 =~False})-[ *0xabc..{``:0xabc =~01,`7esn`:$#usn7[123456789..][$`4esn`..]}]-({#usn7:1e1[`3esn`]})<-[{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(#usn8 :_usn4)) Match #usn8=((usn1 {@usn5:12e12 Ends With `6esn`,_usn4:\"d_str\" Starts With _usn4 Starts With $_usn4})-[`1esn`?]->(:#usn7{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})) Where $1000 Is Not Null Unwind .0 Ends With $`4esn` Ends With @usn6 As `6esn`"),
    octest:ct_string("Optional Match `8esn`=(((`2esn` {_usn3:0[1e1..00]})-[_usn4?:usn2|:`` *7]-(`5esn` {`1esn`:999 Ends With $`4esn`})<-[`1esn`:_usn4|_usn3 *00{`1esn`:$#usn8 Starts With usn2 Starts With .12,@usn6:07[$`8esn`]}]-(`3esn` :`8esn`))) Where $123456789[..$usn2] Union All Detach Delete usn1[0X7..],`7esn`[`8esn`][#usn7],$`2esn` Starts With 9e12 Union Return *,{#usn8:.e0 Ends With $`1esn` Ends With 1000}[Filter(#usn8 In 07['s_str'][$@usn6] Where $12[0.0..])][Filter(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..])],$_usn3 =~`1esn` Order By $usn2[$`4esn`..$`2esn`] Desc Skip .e1 =~\"d_str\" =~'s_str' Delete None(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where .e12 =~@usn5) Is Not Null Is Not Null,010 In 01234567 In `5esn`,(`4esn` :`3esn`)-[:`1esn`|@usn6 *0..]-(_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})<-[?:`1esn`|@usn6 *0Xa]-(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]}) Is Not Null Is Not Null Return *,$7[0.e0][`8esn`],.e1[0X7..`2esn`] Order By Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) Ends With [1.e1[#usn7][1.e1],Null =~Count(*)] Ends With [#usn8[..0X0123456789ABCDEF][...0],$usn1 Is Not Null Is Not Null] Desc Skip [12 Is Null Is Null,9e0[$@usn6]][Filter(`6esn` In 0x0[9e0..] Where $123456789 In 010 In $`8esn`)..] Limit $@usn6 Contains `5esn` Contains .e12"),
    octest:ct_string("Return Distinct *,`5esn` Ends With $999 As _usn3,$1000[00..] Limit 0x0 =~`5esn` =~$`8esn` Remove `6esn`:`7esn`,$12.`8esn`!,#usn7:`3esn`"),
    octest:ct_string("Unwind {`8esn`:.12 Is Not Null,_usn3:Count(*) In $`2esn`}[..[@usn6[$0..Null],$999[010..],$`6esn`[$`6esn`..][0X7..]]] As _usn4 Match (((:_usn4{_usn3:`1esn`[Null..]})-[`2esn`? *7]-(#usn8 :_usn3:@usn5{`3esn`:@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`],`4esn`:0e0 Is Null})<-[?:#usn8|:`6esn`*]->(@usn6 :@usn5{`8esn`:$@usn6 Contains 0e0}))),`6esn`=((`3esn` :`2esn`:@usn5)<-[usn2?:#usn8|:`6esn` *7]-(:@usn6)) Where 1000 Starts With 0x0 Union Remove Extract(`7esn` In $`8esn`[0.12][12] Where 9e0[123456789..0][12.0..@usn6]|`8esn` Starts With $12 Starts With $1000).`8esn`,({`4esn`:$#usn7[123456789..][$`4esn`..]})<-[ *7]-(@usn6 {`4esn`:$#usn7 =~usn2 =~`3esn`,_usn4:01 In 0.12 In .e12})-[`2esn`?]->(:`3esn`).usn1!,Filter(`6esn` In .e0['s_str'..][$`8esn`..] Where 1.e1 Ends With 0x0 Ends With 1e1).``"),
    octest:ct_string("Create ((({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})-[ *0..{`1esn`:0xabc Contains 0}]->(:_usn3:@usn5)<-[_usn3?:#usn7|`5esn` *..0x0]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]}))) Create `2esn`=((#usn7 {@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})<-[:_usn4|_usn3]-(#usn8 :`8esn`{_usn4:usn2 In 1e1 In `4esn`})),`7esn`=((#usn8 :#usn8:#usn7{@usn6:$#usn8[0e0..][07..],``:$`7esn` =~1.e1 =~0.e0})<-[`1esn`?:`3esn`|_usn4{_usn4:12e12 Ends With $_usn4 Ends With $`2esn`,``:.12 Is Not Null}]-(:`1esn`:@usn6{`5esn`:.e12[$_usn4..0],`4esn`:$#usn8 In True In #usn7})) Create (((:_usn4{_usn3:`1esn`[Null..]})<-[`8esn`? *..0X0123456789ABCDEF{`2esn`:$``[$_usn4][$`3esn`]}]-(:`6esn`:`3esn`{`5esn`:$7[$12],`6esn`:#usn8 Is Not Null})-[@usn6{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]}]-(`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]}))),(`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]}) Union Optional Match (({_usn4:.e0[$`1esn`..][_usn4..],usn2:.12[0X0123456789ABCDEF..]})),`2esn`=((#usn8 {`4esn`:$`3esn` Is Null})) Detach Delete Filter(`6esn` In 0x0[9e0..] Where `7esn`[`8esn`][#usn7]) Is Not Null Is Not Null Union Create (@usn6 :`3esn`{@usn5:$`5esn` Is Null Is Null,#usn7:Null =~Count(*)})<-[?:usn1|#usn7$_usn4]->(`1esn` {`3esn`:@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`],`4esn`:0e0 Is Null})<-[{#usn8:07[0..],``:_usn3[..`8esn`]}]-(`` :`8esn`{`5esn`:True Contains .e1 Contains `2esn`})"),
    octest:ct_string("Delete $#usn7 =~usn2 =~`3esn`,(`5esn` {_usn3:1.e1 Is Null Is Null})<-[_usn3?:#usn7|`5esn` *..0x0]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})<-[?:@usn5|:@usn6]-(`7esn` {@usn6:.e0[123456789..][$`2esn`..],``:$0[`5esn`][9e12]})[`8esn`()..][[`7esn` In $`8esn`[0.12][12] Where 9e0[123456789..0][12.0..@usn6]]..],usn2(Distinct $`3esn` Is Null) Is Null Is Null Unwind Single(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]) Starts With (:usn1:``{_usn4:1000[12.e12][#usn7]})-[ *7{`4esn`:$#usn7[$`3esn`..$999],`8esn`:$0[00..]}]-({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]}) Starts With {`1esn`:`5esn` In 12.e12 In 1000,`3esn`:0Xa Contains $`6esn`} As `3esn` Union Merge (((@usn6 {`2esn`:123.654 Is Not Null Is Not Null})<-[{#usn8:07[0..],``:_usn3[..`8esn`]}]-(`` :`8esn`{`5esn`:True Contains .e1 Contains `2esn`})<-[`5esn`?:_usn3|`6esn` *..0X0123456789ABCDEF{`5esn`:usn2[.e1..][01234567..],usn1:999 Is Not Null}]->({@usn5:_usn3[_usn4..$`2esn`][$123456789..9e12]}))) On Create Set usn2 =0x0[01234567..Null][0Xa...e12],{#usn8:#usn7[@usn6..]}.@usn6 =#usn7[False..][123.654..] On Create Set Extract(`6esn` In 1000[12.e12][#usn7] Where 1.e1 Ends With 0x0 Ends With 1e1|@usn5[..$999][..$0]).`7esn`! =$12[usn2][12.0],_usn3:@usn6"),
    octest:ct_string("Return Distinct Null Contains $_usn3 As @usn6 Match (({`7esn`:999,#usn8:01 Starts With $`5esn` Starts With 01234567})<-[`5esn`? *..0x0{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]->(:`7esn`$12)),(((`6esn` :_usn3:@usn5{`6esn`:1.e1[0..],`1esn`:'s_str' Ends With $7})<-[{`1esn`:$#usn8 Starts With usn2 Starts With .12,@usn6:07[$`8esn`]}]->(`7esn` {@usn6:$`3esn` Starts With 9e12 Starts With `8esn`})-[? *..0X0123456789ABCDEF{`7esn`:`4esn` Is Not Null,``:.12 Is Not Null}]->(`7esn` {`2esn`:9e0[$@usn6]}))) Union Unwind 999 Ends With $`4esn` As _usn3 Create #usn8=((#usn7 {usn2:$#usn8 In True In #usn7})-[`6esn` *00]->(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})) Detach Delete $7[`7esn`][123.654],Single(#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]) Contains Single(`5esn` In $usn2 Contains $`1esn` Where `2esn` Contains `3esn` Contains $@usn5) Contains {_usn3:0xabc Contains 0,`6esn`:$`6esn`[.e12..$`6esn`][$#usn7...0]},#usn8 Is Not Null"),
    octest:ct_string("Delete .e1 Starts With $``,['s_str' =~$`4esn` =~@usn5,\"d_str\" Ends With $`3esn`] Starts With Extract(`3esn` In 999|0 Is Null Is Null) Starts With [$_usn4 =~0X7,`4esn`,0.0 Ends With $usn1 Ends With $999] Union All With Distinct *,usn2 Contains 07 Contains False,Filter(`3esn` In @usn6[..\"d_str\"][..01] Where 12[`5esn`..$`3esn`][0.12..usn2]) Skip Single(#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]) Contains Single(`5esn` In $usn2 Contains $`1esn` Where `2esn` Contains `3esn` Contains $@usn5) Contains {_usn3:0xabc Contains 0,`6esn`:$`6esn`[.e12..$`6esn`][$#usn7...0]} Detach Delete $`4esn`[0e0...0],0x0[$12][0X7] Union Delete Extract(_usn4 In 12.e12 Is Null Is Null Where _usn4 In .0 In .12|usn2 In 1e1 In `4esn`) Contains None(`3esn` In @usn6[..\"d_str\"][..01] Where `4esn` In .12 In $#usn8) Contains Filter(`5esn` In $usn2 Contains $`1esn` Where usn2[Count(*)][$`1esn`]),.12 Create `4esn`=({usn1:0Xa[..1.e1]})"),
    octest:ct_string("Unwind `4esn`(Distinct $`5esn`[`4esn`..$`2esn`],9e1 Contains 07) =~{usn2:$`6esn`[.e12]} =~[`7esn` In $`8esn`[0.12][12] Where .e1 =~\"d_str\" =~'s_str'|.e12 =~@usn5] As `8esn` Merge (`6esn` :@usn6)<-[`1esn`?:`3esn`|_usn4 *01234567..123456789]->(#usn7 {#usn7:999 Contains $`7esn` Contains usn2}) Union Remove usn2:`1esn`:@usn6,(:`6esn`:`3esn`{@usn6:#usn8 Is Not Null,usn2:1e1 Is Null})-[#usn8?:usn1|#usn7{`8esn`:$#usn7[`7esn`..][$`8esn`..]}]-(`5esn` {usn2:`6esn` In $``})-[?{`3esn`:'s_str'[$`6esn`..][$0..]}]->(`1esn` {@usn6:Null In 0xabc}).`7esn`! Merge usn2=(((:@usn5{usn2:$999 Is Not Null})<-[``?:#usn8|:`6esn`]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]})-[usn2?:@usn5|:@usn6]->({#usn8:$`` Is Not Null Is Not Null,`8esn`:$usn2 Starts With 9e1 Starts With `7esn`}))) With Distinct *,{`1esn`:$usn2 =~`6esn` =~`1esn`} Ends With 010 Ends With None(_usn4 In 12.e12 Is Null Is Null Where $`4esn` In 0x0) As `8esn`,usn1($`2esn` Ends With 1e1)[..None(`6esn` In .e0['s_str'..][$`8esn`..] Where Null In 0xabc)][..Filter(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1)] Skip None(_usn4 In 12.e12 Is Null Is Null Where _usn4 In .0 In .12) Starts With {`4esn`:`8esn`[0x0..],usn2:$#usn8 =~7 =~.12} Starts With _usn3(Distinct usn1[$`1esn`..]) Union With  *,1000 =~$@usn5 Skip $123456789[..0.12] Delete 0.0 =~0 =~`` Unwind 0[1.e1..#usn7] As `7esn`"),
    octest:ct_string("Detach Delete 010[0e0][0xabc],$`6esn`[.e12..$`6esn`][$#usn7...0] Remove ({@usn5:.e12 Is Not Null Is Not Null,_usn3:$1000[..`6esn`][..123456789]})<-[`1esn`:`7esn` *0xabc..]->(`7esn` :`2esn`:@usn5).`6esn`"),
    octest:ct_string("Create (({usn2:0[1e1..00],@usn6:$`6esn`[.e12..$`6esn`][$#usn7...0]})-[`6esn`?:`1esn`|@usn6 *0xabc..]-({`5esn`:1e1[\"d_str\"..]})) Unwind $usn1 Contains 12.0 As _usn4 Remove Single(usn1 In 999 Where 0.12[123456789..]).@usn6? Union Match _usn3=(#usn8 :`7esn`)-[:#usn8|:`6esn`{#usn8:0X7[..`5esn`][..$`7esn`]}]->(`2esn` :@usn6),#usn8=((usn1 {_usn3:#usn7 Ends With 0.12})<-[?:@usn6 *07{_usn3:$`1esn` Is Null}]-(`5esn` {`5esn`:#usn8 Is Not Null,`1esn`:01234567[`6esn`..]})<-[*]->(usn1 :`1esn`:@usn6{`2esn`:$123456789[..$usn2],_usn4:0X0123456789ABCDEF In _usn3})) Remove usn2(12 Ends With 0 Ends With Null).`4esn`?"),
    octest:ct_string("Return 0x0[$7..][`7esn`..] As ``,#usn7[False..][123.654..],0xabc[..1e1] As `4esn` Order By _usn3 Ends With $`6esn` Ends With 0e0 Descending,_usn4[7..$999] Desc,0X0123456789ABCDEF[$_usn3][$_usn4] Desc With Distinct *,`1esn` As `2esn`,$123456789[`1esn`..][`7esn`..] Skip ({`7esn`:$@usn5 =~$usn2 =~True,_usn3:00[$0..usn2][$_usn4..$999]})-[`3esn`]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5})<-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]})[{usn1:$`5esn`[.e1][#usn8],_usn3:12e12 Ends With `6esn`}] Where $`7esn` =~1.e1 =~0.e0"),
    octest:ct_string("With  1000[07..][1.e1..],usn1 Ends With 1.e1 Ends With `4esn` Limit `6esn` In $`` Where 0.0[Null..][.12..]"),
    octest:ct_string("Merge (usn2 :`7esn`) On Match Set usn2 ={`8esn`:12 Is Null Is Null}[[`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 1000 Starts With 0e0 Starts With 0|$#usn8 Ends With _usn4 Ends With usn2]..][[usn1 In 0xabc Is Not Null Is Not Null Where $@usn6 Is Null|$`6esn`[$`6esn`..][0X7..]]..],[`2esn` In $``[$#usn8] Where 1000 Starts With 0x0|00 Starts With usn1 Starts With Count(*)].usn1 =#usn7[False..][123.654..] Delete `5esn` Ends With 0x0,[#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]][Filter(`2esn` In $``[$#usn8] Where 01234567[`6esn`..])..][[`3esn` In False In $`2esn` In 1e1 Where .12 =~$#usn7 =~$``|01234567 Is Null]..] Merge (:`4esn`:usn2$``) Union Merge @usn6=((_usn4 :`3esn`{`2esn`:999})-[`5esn`?:@usn5|:@usn6 *7{`2esn`:$`8esn`[0.12][12],`6esn`:`` Contains $_usn3 Contains 0e0}]-(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]})) Detach Delete .0 =~$@usn5 =~1.e1,[usn2 Contains 0,.e0 =~7 =~False,.12] Is Null,@usn6[...12][..123.654]"),
    octest:ct_string("Optional Match `7esn`=((`6esn` {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})),(@usn5 :@usn6{`5esn`:#usn8 Is Not Null,`1esn`:01234567[`6esn`..]}) With  (`2esn` :#usn7{`1esn`:`4esn` Ends With 's_str' Ends With @usn6,`6esn`:$7 Ends With 12.e12 Ends With `1esn`})-[`3esn`? *0X7..0x0{`4esn`:$_usn4[$123456789..][12..]}]->(`7esn` {@usn6:0 =~#usn8})[{@usn5:'s_str' Contains 999,`6esn`:1000[12.e12][#usn7]}],`7esn` In `8esn` In 12 Skip 0.0 In usn1 In $1000 Where 123.654[$`1esn`] With  True[07],usn1 =~_usn4 =~$usn1 As `7esn` Limit [`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]] Is Null Is Null"),
    octest:ct_string("Unwind 07 Starts With 0.e0 Starts With 123.654 As @usn5 Union All Match ((:`1esn`:@usn6{`1esn`:12.0[9e12]['s_str'],`3esn`:$123456789 Is Not Null})),(`4esn` {`2esn`:0.e0[.e12]})-[`1esn`?:`3esn`|_usn4*..]->(_usn3 ) Where _usn3 =~$12 Remove {`2esn`:9e0[$@usn6]}.`1esn` Detach Delete $#usn7[$`3esn`..$999],0e0 Is Null,`7esn`[`8esn`][#usn7]"),
    octest:ct_string("Return Distinct $`4esn`[$@usn5..`7esn`]"),
    octest:ct_string("Detach Delete 7 In 1e1 Union Match ((usn2 :@usn6{@usn5:#usn8[True..#usn7][01..@usn5]})<-[`2esn`?:`6esn` *0xabc..]-({@usn6:'s_str' Ends With $7})<-[:@usn6]->(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null})) Union Return Distinct $`5esn` Starts With 0X0123456789ABCDEF Starts With Null,$#usn7[9e12..12],`8esn`[9e12] Order By 12e12 Ends With 0e0 Desc,`1esn`[..$@usn6][..`3esn`] Asc With  0.0 =~0 =~`` As `7esn`,0.12[123456789..] Skip None(`3esn` In 999 Where 07 Ends With $_usn4 Ends With 0.e0) Is Null Is Null Limit 0.e0 In `2esn` Where 1e1 Contains 0Xa Match ``=((:`2esn`:@usn5{@usn5:`4esn`})) Where $`4esn` In 0.0 In `3esn`"),
    octest:ct_string("Remove @usn6:`3esn`,[1e1 =~$`8esn` =~`1esn`].`3esn`?"),
    octest:ct_string("Create `7esn`=((`3esn` :usn1:``)<-[`5esn`?:_usn3|`6esn` *..0X0123456789ABCDEF{`5esn`:usn2[.e1..][01234567..],usn1:999 Is Not Null}]->({@usn5:_usn3[_usn4..$`2esn`][$123456789..9e12]})<-[ *0Xa{#usn8:_usn4[#usn7..#usn8],usn2:9e0[0..1e1]}]->(#usn8 :#usn8:#usn7{@usn6:$#usn8[0e0..][07..],``:$`7esn` =~1.e1 =~0.e0})) Union All Unwind Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0) =~Filter(`6esn` In 0x0[9e0..] Where `7esn` Is Null Is Null) =~[`6esn` In 0x0[9e0..] Where `7esn` Is Null Is Null|$`4esn`[.e1..$usn1]] As @usn5 Unwind @usn6(`4esn` Starts With $#usn8 Starts With $#usn8,.e1 =~usn2 =~`7esn`)[..{`2esn`:Count(*) Contains 12e12 Contains 0xabc}][..Extract(#usn8 In 0x0[_usn4..] Where 0xabc[123.654][12]|$`6esn` Is Not Null)] As `7esn`"),
    octest:ct_string("Create `1esn`=(({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})),``=((`4esn` {``:0.12 Contains 0x0 Contains @usn5})) Union All Return 1000[07..][1.e1..],usn1 Ends With 1.e1 Ends With `4esn` Skip Extract(`6esn` In 1000[12.e12][#usn7] Where `7esn` Contains .0 Contains #usn8|$0[00..])[{`2esn`:07['s_str'][$@usn6],``:usn1[..$123456789][..`1esn`]}..`4esn`(Distinct 9e1 Contains 07,1000[07..][1.e1..])][Single(`5esn` In $usn2 Contains $`1esn` Where 0e0['s_str'])..[123456789[0.0..`2esn`][1.e1..$_usn4]]] Limit 0Xa[..$`2esn`][..00] Union Detach Delete $`6esn`[$`1esn`..],True Contains $`` Contains 01234567"),
    octest:ct_string("Merge (((@usn6 {`2esn`:123.654 Is Not Null Is Not Null})<-[{#usn8:07[0..],``:_usn3[..`8esn`]}]-(`` :`8esn`{`5esn`:True Contains .e1 Contains `2esn`})<-[`5esn`?:_usn3|`6esn` *..0X0123456789ABCDEF{`5esn`:usn2[.e1..][01234567..],usn1:999 Is Not Null}]->({@usn5:_usn3[_usn4..$`2esn`][$123456789..9e12]}))) With  *,1.e1[0..],0[$`5esn`] As `8esn` Order By {`8esn`:#usn8 =~#usn7 =~0x0} Starts With Single(`5esn` In 1e1 =~$`8esn` =~`1esn` Where `8esn` Starts With $12 Starts With $1000) Starts With All(`3esn` In False In $`2esn` In 1e1 Where 's_str'[$#usn8]) Asc Where $123456789[..`3esn`][..`7esn`]"),
    octest:ct_string("With  $7[$12] As `6esn` Where 01234567[`6esn`..] Union Create @usn5=(`` :usn1:``{@usn6:010[`1esn`..`4esn`]}) Delete 1e1 Contains 0Xa,0.e0 Contains $1000 Contains 7 Union Merge (((:`5esn`{_usn4:\"d_str\"[.0][9e0],usn1:.e12 Is Not Null Is Not Null})<-[ *..0X0123456789ABCDEF]->(`1esn` {`5esn`:$`7esn` Ends With $_usn4 Ends With `5esn`,#usn8:'s_str'[$#usn8]})<-[usn2?:`7esn`{``:`5esn`[usn1]}]->(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]}))) On Match Set usn2+=[`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $1000[00..]|`1esn`[usn1]][{usn2:$`6esn`[.e12],`4esn`:`4esn` In .12 In $#usn8}..],@usn5+=@usn6[..$usn1][..010],[`6esn` In .e0['s_str'..][$`8esn`..] Where 0.12[123456789..]|$`3esn` Ends With @usn6 Ends With 123.654].`8esn`! =7[usn1][$7] Unwind .12 Is Null As _usn4"),
    octest:ct_string("Remove {_usn4:\"d_str\" Contains $999 Contains `2esn`}.#usn7? Union All Create (@usn6 {``:12.e12 Contains 's_str' Contains 0.12})-[:@usn5|:@usn6{#usn7:0.12 Is Null Is Null,@usn6:12e12 Ends With $_usn4 Ends With $`2esn`}]->(:`7esn`{usn1:1000 Starts With 0x0,_usn4:$usn2 In 12}),usn2=(:`8esn`{_usn3:$`1esn` Is Not Null Is Not Null,`2esn`:0X7 Contains 12.0})<-[`8esn`?:@usn6 *999]->(:#usn8:#usn7{`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]}) Unwind Filter(`6esn` In 0x0[9e0..] Where $`4esn`[$1000..$`4esn`][0x0..$_usn3]) =~Single(_usn4 In 12.e12 Is Null Is Null Where 9e1 =~$0) As `1esn` Union Optional Match `6esn`=((:#usn8:#usn7{`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]})) Remove $_usn3.`4esn`,(:`4esn`:usn2$``)<-[usn2?]->(usn2 {usn2:`7esn` Contains .0 Contains #usn8}).`3esn`!"),
    octest:ct_string("Merge `7esn`=(((#usn7 {#usn7:999 Contains $`7esn` Contains usn2})-[@usn6?:`` *0Xa]-(@usn6 :@usn5{`8esn`:$@usn6 Contains 0e0})-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2)))"),
    octest:ct_string("Return Distinct 's_str'[..Null][..$`5esn`] As usn2 Order By @usn6 Is Null Is Null Desc,Extract(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1|$`2esn` Is Not Null Is Not Null) =~[`7esn`[..01],1e1 =~$`8esn` =~`1esn`,$`6esn`[.e12..$`6esn`][$#usn7...0]] Ascending,999 Descending Skip 12[$`5esn`..$`7esn`][$1000..$_usn4] Remove #usn8:usn1:``,usn1:`6esn`:`3esn` Union Delete {`1esn`:$usn2 =~`6esn` =~`1esn`} Ends With 010 Ends With None(_usn4 In 12.e12 Is Null Is Null Where $`4esn` In 0x0) Unwind 0e0 =~False =~.12 As usn1 Delete 0.e0[.e12]"),
    octest:ct_string("Detach Delete $#usn7[$`3esn`..$999],0e0 Is Null,`7esn`[`8esn`][#usn7] Delete \"d_str\"[0X7..``][@usn5.._usn4],0.12 Is Null Is Null,_usn3[$0] Remove `6esn`(Distinct $`2esn`[$``..12e12]).#usn8"),
    octest:ct_string("Optional Match #usn8=(((_usn4 :@usn5)-[? *..0X0123456789ABCDEF{#usn8:0X7[..`5esn`][..$`7esn`]}]-(#usn7 {@usn5:$`5esn` Contains $usn2})-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2))) Where @usn5[01234567..] Merge ({`6esn`:usn1[$`1esn`..],_usn4:$usn2 Contains $`1esn`}) On Create Set `1esn` =$999[010..],`3esn`+=\"d_str\" =~_usn3 =~0.0,`8esn`+=#usn7 In 0.12 In Null On Match Set Extract(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $`6esn`[00..$12]).`2esn` =$@usn6[_usn4..][$1000..] Create (:#usn7{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})<-[`1esn`?:`3esn`|_usn4 *01234567..123456789]->(#usn7 {#usn7:999 Contains $`7esn` Contains usn2})-[?:``]->(@usn6 :``:`6esn`{#usn7:9e1 Contains _usn3}) Union All Merge ``=(:`3esn`{`7esn`:$123456789[`4esn`..]})-[#usn8?:`2esn`|:`7esn`]-(`` :_usn3:@usn5) On Match Set #usn7 =.e0 =~$1000 Return ``[{`6esn`:12[`5esn`..$`3esn`][0.12..usn2]}..],`7esn`[..$999][..0.0],Single(`6esn` In 1000[12.e12][#usn7] Where $`3esn` Starts With 01234567 Starts With $`5esn`) Ends With ``(0X7[..True][..01234567]) Ends With [0.12['s_str'..$0][$usn1..9e0]] As `3esn` Skip 1.e1[$usn1..$`7esn`] Limit `1esn` Is Null Union All Unwind 01234567 Ends With $`6esn` Ends With 7 As #usn7 With  0x0 In 0X0123456789ABCDEF As `4esn`,Single(usn1 In 999 Where _usn3 Is Not Null)[(`2esn` :_usn4{_usn4:$`8esn` Contains .0 Contains 0.12})<-[`6esn`:`3esn`|_usn4 *0X7..0x0$999]->({`5esn`:1e1[\"d_str\"..]})-[:`6esn` *123456789..{@usn5:07[0..],`8esn`:Count(*)[..$_usn3][..$usn2]}]-(:`5esn`{`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})..[`3esn` In False In $`2esn` In 1e1 Where _usn3 =~$12|True]] As `5esn`,usn2[9e12] Order By `4esn`[$#usn7][$#usn7] Asc,0X7 Contains $@usn6 Descending,Single(#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]) Contains Single(`5esn` In $usn2 Contains $`1esn` Where `2esn` Contains `3esn` Contains $@usn5) Contains {_usn3:0xabc Contains 0,`6esn`:$`6esn`[.e12..$`6esn`][$#usn7...0]} Descending Limit Extract(`2esn` In $``[$#usn8] Where `1esn`[Null..])[[12.0[`3esn`][_usn3]]] Merge `2esn`=(usn2 :@usn6{@usn5:#usn8[True..#usn7][01..@usn5]}) On Create Set Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $999[01234567][@usn5]).usn1! ={`2esn`:`2esn`[``..]} =~[`6esn` In 0x0[9e0..] Where 0Xa[..1.e1]] =~None(`3esn` In @usn6[..\"d_str\"][..01] Where $@usn6 Is Null)"),
    octest:ct_string("Remove {@usn6:$`7esn` Ends With $_usn4 Ends With `5esn`,usn1:123.654[0Xa..0x0][.12..12e12]}.#usn8! Match (((:`2esn`:@usn5{usn1:$usn2[`6esn`..],`3esn`:$_usn4[..$`8esn`]})-[?{#usn7:123.654[``]}]-(`8esn` :`3esn`{`2esn`:$`8esn`[`7esn`],`4esn`:#usn8[1e1..]})<-[_usn3:@usn6]->({@usn6:`5esn` Ends With $999}))),(`1esn` :`4esn`:usn2{`2esn`:9e0[$@usn6]})<-[`1esn`?:_usn4|_usn3]-(`1esn` {@usn6:Null In 0xabc})<-[`5esn`?:`1esn`|@usn6{`5esn`:#usn8 =~$1000 =~$1000,`2esn`:0x0[$7]}]-(:_usn3:@usn5{_usn3:.e0[$`1esn`..][_usn4..]})"),
    octest:ct_string("Return *,1.e1[0..] As `3esn`,Extract(`6esn` In 1000[12.e12][#usn7] Where `7esn` In `8esn` In 12|$123456789[`3esn`..`5esn`][1e1..$`5esn`]) Contains [usn1[0X7..]] Contains Filter(`5esn` In $usn2 Contains $`1esn` Where False[$12]) Order By (`5esn` :`2esn`:@usn5{usn2:$`6esn` Starts With usn1,``:123456789 =~@usn5 =~$`5esn`})-[{#usn8:999}]-(:usn1:``{_usn3:123.654 Is Not Null Is Not Null}) =~{`6esn`:9e1[..01234567][..`4esn`]} =~None(`6esn` In 1000[12.e12][#usn7] Where 0X0123456789ABCDEF Is Not Null) Desc,usn1[..`1esn`][..$999] Asc,{`8esn`:Count(*)[12..123.654][$`1esn`..$0]}[{``:0 Is Null Is Null,@usn6:07['s_str'][$@usn6]}..{@usn5:.12[9e1..0X7]}][`1esn`..(`7esn` {#usn7:1e1[`3esn`]})-[`3esn`]->(#usn8 {`7esn`:12.e12[.12..$_usn3][0e0..9e0],`7esn`:0X7[..True][..01234567]})-[:`1esn`|@usn6*..]->(:`8esn`{`8esn`:0X7 Contains 12.0,`3esn`:`4esn` Starts With `8esn`})] Descending Merge `5esn`=((`4esn` :usn2)<-[:#usn7|`5esn`*{`8esn`:01[$0],``:0xabc Is Not Null Is Not Null}]-(_usn3 :`7esn`{#usn7:123.654 =~.e0 =~9e0,_usn3:`1esn`[Null..]})) Merge usn1=((#usn7 :`5esn`)<-[`2esn`?:`5esn`|:`1esn`]->(:usn2)) On Match Set [$`2esn` Ends With 1e1,07[0..]].``! =0x0 Starts With $usn2 Starts With $@usn6"),
    octest:ct_string("Unwind [.e0[$`1esn`..][_usn4..],usn2 Starts With 00,Count(*)[..`5esn`]] In All(`3esn` In 999 Where 123456789 Starts With #usn8) As `4esn`"),
    octest:ct_string("Create ((`8esn` :@usn5)<-[usn2?:#usn8|:`6esn` *7]-({_usn4:`7esn`[_usn4..][Count(*)..],`1esn`:01234567 In \"d_str\"})),`5esn`=((:#usn8:#usn7{usn1:00['s_str'],#usn8:$`8esn`[``..True][1000..0.12]})<-[?:`7esn`]-(@usn5 :@usn6{`5esn`:#usn8 Is Not Null,`1esn`:01234567[`6esn`..]})<-[`2esn`?:@usn6]->($`8esn`)) Return $`4esn`[$1000..$`4esn`][0x0..$_usn3],$`1esn` Is Null Order By 07 Descending Skip `7esn`(.e0 =~7 =~False,010 Is Null Is Null) Starts With [$_usn4 =~0X7,`4esn`,0.0 Ends With $usn1 Ends With $999] Starts With {@usn5:Count(*)[..$_usn3][..$usn2],@usn5:$1000[$usn1][.e1]} Union All Merge `6esn`=(`7esn` {`8esn`:Count(*) Is Null Is Null,@usn5:.e0 Ends With $`1esn` Ends With 1000}) On Match Set #usn7 =.e0 =~$1000 On Match Set _usn4 =All(`6esn` In 1000[12.e12][#usn7] Where 9e12[\"d_str\"]) Contains [usn1 In 0xabc Is Not Null Is Not Null Where 9e0[123456789..0][12.0..@usn6]|True] Contains [_usn3 =~$12,`5esn`[0e0..]],_usn4+=$`4esn`[0e0...0] Return *,.12 As usn1 Limit 0.e0 Contains 9e1 Contains 9e0 Return Distinct 1.e1[0..] As `3esn`,12e12 Ends With $_usn4 Ends With $`2esn` Skip True Contains $`` Contains 01234567 Limit .e1 Is Not Null Is Not Null Union With  *,123.654[.e12..\"d_str\"] As _usn4,01234567[All(`7esn` In $`8esn`[0.12][12] Where @usn5[..$999][..$0])..] Limit @usn6 In [00[0X7..9e12]] In Single(`3esn` In False In $`2esn` In 1e1 Where 's_str' Ends With $7)"),
    octest:ct_string("With  True[07],usn1 =~_usn4 =~$usn1 As `7esn` Limit [`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]] Is Null Is Null Union All Return Distinct *,$``[$#usn8] As `` Order By \"d_str\"[..01234567][..$1000] Descending,0.e0[$usn2..$@usn5] Asc Limit Single(usn1 In 999 Where _usn3 Is Not Null)[(`2esn` :_usn4{_usn4:$`8esn` Contains .0 Contains 0.12})<-[`6esn`:`3esn`|_usn4 *0X7..0x0$999]->({`5esn`:1e1[\"d_str\"..]})-[:`6esn` *123456789..{@usn5:07[0..],`8esn`:Count(*)[..$_usn3][..$usn2]}]-(:`5esn`{`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})..[`3esn` In False In $`2esn` In 1e1 Where _usn3 =~$12|True]] With Distinct $_usn3[0e0..][12.0..] As `3esn` Order By None(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1) In {`6esn`:1.e1[0..],usn2:`` Contains $_usn3 Contains 0e0} Descending,$123456789 In `8esn` In 0X7 Descending Skip 12.0[9e1..][Null..] Where 1e1 Contains 0Xa Union Create `1esn`=(({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})) With  0x0 In 0X0123456789ABCDEF As usn1,.e1 Ends With $123456789 As @usn6 Skip 0.12[..0.0] Limit Filter(`5esn` In $usn2 Contains $`1esn`) Starts With Filter(usn1 In 999 Where `4esn` Is Null Is Null) Starts With [usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..]|$`6esn`[.e12]]"),
    octest:ct_string("Detach Delete `5esn`[0e0..],[`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12]] Ends With [0] Ends With `8esn`,$usn1[12e12] With  {@usn5:$`2esn` Ends With 1e1,usn1:'s_str'[$`6esn`..][$0..]} Is Null,1.e1[0..] As `3esn`,.12 =~$#usn7 =~$`` Order By None(`6esn` In .e0['s_str'..][$`8esn`..] Where #usn7 Ends With 0.12)[{usn1:$`6esn`[.e12..$`6esn`][$#usn7...0]}..Single(#usn8 In 07['s_str'][$@usn6] Where $#usn7[$`3esn`..$999])][Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 00[0X7..9e12]|$#usn7)..All(`6esn` In 1000[12.e12][#usn7] Where 12.e12 Is Not Null)] Ascending"),
    octest:ct_string("Remove [0Xa[..9e12][...e0],0Xa =~0Xa =~`3esn`,.e1[0X7..`2esn`]].`6esn`! Detach Delete 999,`8esn`[..0xabc][..01234567],`8esn`[12.e12][`4esn`] Optional Match usn2=(((:#usn8:#usn7{`8esn`:12e12 Ends With 0e0})<-[_usn3?:`` *..010{usn2:`7esn`[_usn4..][Count(*)..]}]->(`8esn` :``:`6esn`{#usn7:$`3esn` Is Null})<-[@usn5{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(:`5esn`{@usn5:True Contains $`` Contains 01234567}))),`4esn`=((`8esn` :`4esn`:usn2{`5esn`:$0[`5esn`][9e12],``:#usn7[False..][123.654..]})<-[`4esn`{#usn8:123456789[..0],#usn8:.e12 =~\"d_str\" =~@usn5}]-(:``:`6esn`)) Where .e0[$`1esn`..][_usn4..]"),
    octest:ct_string("Merge ((_usn3 {`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`})) On Match Set `1esn`+=Extract(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0|0[_usn3][.12]) Starts With (#usn8 :`8esn`)<-[`2esn`?:`3esn`|_usn4]-(#usn7 :`7esn`{`3esn`:$#usn8[..123456789][..`2esn`],#usn8:0.e0 Ends With #usn8})-[:`5esn`|:`1esn`]-(@usn5 :`5esn`),None(`3esn` In False In $`2esn` In 1e1 Where 01 Starts With $`5esn` Starts With 01234567)._usn3? =[`6esn` In 1000[12.e12][#usn7] Where 0X0123456789ABCDEF Is Not Null] Is Null On Match Set usn2+=12e12 In Null Merge `5esn`=(:`7esn`{``:9e1[$#usn8],`4esn`:1.e1 Is Null Is Null}) On Create Set `4esn`+=$`5esn` Starts With 0X0123456789ABCDEF Starts With Null Return Distinct $123456789 =~0e0 As `4esn`,1.e1 =~01234567 Order By (:``:`6esn`{`8esn`:123.654[.e12..\"d_str\"]})<-[_usn3:`3esn`|_usn4]->(_usn3 :`4esn`:usn2) Is Not Null Is Not Null Desc,{_usn4:\"d_str\" Ends With $`3esn`,``:#usn8 =~#usn7 =~0x0}[Single(usn1 In 0xabc Is Not Null Is Not Null Where `7esn`[..01])..{`2esn`:.0[@usn6..]}][[1000[12.e12][#usn7],`` Is Not Null Is Not Null]..None(#usn8 In 0x0[_usn4..] Where `8esn` Ends With $`1esn`)] Descending"),
    octest:ct_string("With Distinct .e12[``][$1000],{@usn5:$`4esn` In 0x0,`3esn`:`1esn`[..$#usn7]}[{@usn5:@usn5[..$999][..$0]}] Skip #usn8[1e1..] Limit 01[#usn8..1000] Where $usn2[12.0..][`8esn`..] Create #usn8=((_usn3 :@usn5{`2esn`:1.e1[#usn7][1.e1]})-[#usn8?*..{#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]}]->(:`2esn`:@usn5{@usn5:`4esn`})) Union Create (`4esn` {`2esn`:0.e0[.e12]})-[`1esn`?:`3esn`|_usn4*..]->(_usn3 ),usn2=(`2esn` {_usn3:0[1e1..00]})-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2) Create `3esn`=((`7esn` {#usn7:1e1[`3esn`]})<-[_usn4?:``{@usn5:1000 Starts With 0e0 Starts With 0,#usn7:$`5esn`[`4esn`..$`2esn`]}]-(_usn4 :#usn8:#usn7)) Remove (:`7esn`$#usn8)<-[{#usn7:$123456789[..$`7esn`][..\"d_str\"]}]-(_usn4 :#usn8:#usn7).#usn8"),
    octest:ct_string("Match (({_usn4:.e0[$`1esn`..][_usn4..],usn2:.12[0X0123456789ABCDEF..]})),`7esn`=(((`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]})<-[? *12{`1esn`:.e0 Ends With $`1esn` Ends With 1000}]-(@usn5 :usn1:``{usn2:9e0[0..1e1]})<-[?{_usn3:Count(*) Ends With 7 Ends With 0,`8esn`:@usn6 Starts With #usn8 Starts With $#usn7}]-(_usn3 :`4esn`:usn2))) Where usn2[Count(*)][$`1esn`] Union Unwind 0.e0 Contains @usn5 Contains 0X7 As #usn7 Merge _usn3=(((usn2 :@usn6)-[{usn1:Count(*)[..12][..$999],#usn8:usn1 In 010}]->(`1esn` :`8esn`)<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]-(@usn6 :``:`6esn`))) Union All Merge #usn8=(`` :`8esn`{`5esn`:True Contains .e1 Contains `2esn`}) Match @usn6=(usn2 )<-[? *..0X0123456789ABCDEF{usn2:123456789 Ends With 9e1 Ends With ``,`3esn`:9e0[123456789..0][12.0..@usn6]}]-({``:0.12 Contains 0x0 Contains @usn5}) Where 01 Starts With $`5esn` Starts With 01234567 Remove Extract(`6esn` In .e0['s_str'..][$`8esn`..] Where 0.12[123456789..]).``!,{_usn4:$@usn6 Ends With 0.0,`7esn`:$#usn7[123456789..][$`4esn`..]}.`1esn`,{`2esn`:.0[@usn6..]}._usn3!"),
    octest:ct_string("Return Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null) =~[12 Is Null Is Null,9e0[$@usn6]] As `2esn`,`8esn`[..0xabc][..01234567] Skip $7[0.e0][`8esn`] Limit 0X7 Contains 12e12 With Distinct `7esn`[0.e0..False][0e0..$_usn4] As `1esn` Order By usn1 =~12 =~$0 Ascending,$#usn8 In `` Ascending Where 0Xa =~0Xa =~`3esn` Optional Match `7esn`=(((:`7esn`$12)<-[?:usn2|:`` *7]->(`6esn` {#usn7:`2esn`[`3esn`..],usn2:$usn2 Starts With $`7esn` Starts With _usn4})-[`2esn` *01234567..123456789{usn1:False[$12],`1esn`:0.e0 Ends With $123456789}]-(#usn7 :#usn7{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2}))) Union All With  *,$7[0.e0][`8esn`],.e1[0X7..`2esn`] Order By Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) Ends With [1.e1[#usn7][1.e1],Null =~Count(*)] Ends With [#usn8[..0X0123456789ABCDEF][...0],$usn1 Is Not Null Is Not Null] Desc Skip [12 Is Null Is Null,9e0[$@usn6]][Filter(`6esn` In 0x0[9e0..] Where $123456789 In 010 In $`8esn`)..] Limit $@usn6 Contains `5esn` Contains .e12 Where $`5esn` Starts With $`3esn` Starts With 1.e1 Delete 12e12[\"d_str\"..$`7esn`][`5esn`..@usn6],0.e0 Starts With _usn4 Starts With usn2 Create (((:usn2{_usn3:``[0X7..][$@usn6..]})<-[_usn3?:#usn8|:`6esn` *0xabc..{@usn6:123.654[.e12..\"d_str\"],`8esn`:$usn2 Starts With $`7esn` Starts With _usn4}]->(#usn7 {`1esn`:$`4esn`[.e1..$usn1],``:0x0 =~`5esn` =~$`8esn`})<-[@usn5?:usn2|:``*..]->(`7esn` {#usn7:1e1[`3esn`]}))) Union All Remove [9e1[..01234567][..`4esn`],$`5esn`[0][.12],`1esn`[$7][0Xa]].#usn7,(`4esn` :#usn8:#usn7)-[?:@usn5|:@usn6 *0Xa]-(:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`})-[usn2?:#usn8|:`6esn` *7]->(_usn4 :`8esn`).`1esn`!,None(_usn4 In 12.e12 Is Null Is Null Where 00[0X7..9e12]).#usn7? Merge usn1=(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null})-[:_usn3|`6esn`{``:`6esn`[`7esn`..$_usn3][9e0..#usn8],`8esn`:.0[01234567]}]-(`1esn` {@usn5:9e1 Starts With 12.e12 Starts With 010,`8esn`:$0[@usn6..][.e12..]})-[`4esn`?:usn1|#usn7{`1esn`:123456789 Ends With 9e1 Ends With ``,@usn5:0xabc Contains 0}]->(:`7esn`{@usn6:`2esn`[``..]}) On Match Set [$0[00..],0.e0 =~01234567 =~01234567].`5esn`! =False In 1.e1 In $12 On Match Set `2esn` =`8esn`[0x0..]"),
    octest:ct_string("Unwind usn2 Contains 07 Contains False As `4esn` Detach Delete [usn2 Contains 07 Contains False,.12[usn1]] Contains [0 Contains $@usn5,False Contains $`1esn` Contains @usn6],0.12[123456789..] Union All Remove [999 Is Not Null,`7esn`[`8esn`][#usn7]].`3esn`! With  $12[#usn8..$@usn5][9e0..usn1],9e1 Contains _usn3,1000 Ends With $`5esn` Order By .e0[123456789..][$`2esn`..] Asc,0.e0[$usn2..$@usn5] Desc,`7esn`[01..1.e1] Descending Where 's_str' Starts With $usn2"),
    octest:ct_string("Create (({@usn6:00[$@usn5][0X7]})<-[:`5esn`|:`1esn`]->(:`4esn`:usn2$``))"),
    octest:ct_string("With  *,usn2 Order By $usn1 Starts With Null Starts With $`` Desc,$usn2 Starts With $`7esn` Starts With _usn4 Desc,`3esn` Starts With $999 Starts With .e1 Descending Skip (`3esn` :usn2{#usn7:usn2[`6esn`..][.0..],#usn7:\"d_str\"[..$_usn3]})<-[?{`3esn`:'s_str'[$`6esn`..][$0..]}]->(`2esn` :@usn6)<-[?{`8esn`:$`7esn`[usn2],`1esn`:1000 Is Not Null}]-(#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]}) Is Null Limit 0.e0 Ends With $123456789 Where $`7esn`[..0X7][..False] Detach Delete `7esn`[..01] Create `7esn`=(((:`7esn`$12)<-[?:usn2|:`` *7]->(`6esn` {#usn7:`2esn`[`3esn`..],usn2:$usn2 Starts With $`7esn` Starts With _usn4})-[`2esn` *01234567..123456789{usn1:False[$12],`1esn`:0.e0 Ends With $123456789}]-(#usn7 :#usn7{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2}))),(usn1 :_usn4)<-[usn1]->(:`3esn`{`7esn`:12.e12[.12..$_usn3][0e0..9e0],`7esn`:0X7[..True][..01234567]})<-[_usn3?:`` *..010{usn2:`7esn`[_usn4..][Count(*)..]}]->(`8esn` :``:`6esn`{#usn7:$`3esn` Is Null})"),
    octest:ct_string("Merge @usn6=(`7esn` :`7esn`)-[?:`` *07{`1esn`:$#usn7[$`3esn`..$999]}]->(_usn3 {_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null}) On Create Set [$#usn8[0e0..][07..],#usn7 Is Not Null Is Not Null].#usn7? =@usn5 In 12.0 In $_usn3,Filter(usn1 In 0xabc Is Not Null Is Not Null Where 01234567[9e0][.0]).`2esn`! =@usn5[01234567..],Extract(`6esn` In 0x0[9e0..] Where Count(*)[..$_usn3][..$usn2]|0.e0 Contains @usn5 Contains 0X7).`1esn`! =$1000 =~$`8esn` =~$`2esn` Detach Delete `1esn`[Null..],1000 Starts With 0e0 Starts With 0 Union With  Extract(`3esn` In 999 Where .e12 Is Null Is Null|$`7esn`[usn2]) Is Not Null As @usn5 Order By 's_str' Ends With $7 Descending,.12[9e1..0X7] Descending,[0.12['s_str'..$0][$usn1..9e0]] Starts With [123.654 =~.e0 =~9e0,$@usn5 Is Not Null Is Not Null,$`` Starts With 0x0] Starts With @usn6(Distinct 7 Ends With `3esn` Ends With $`2esn`,False[$12]) Desc Skip @usn5 In 12.0 In $_usn3 Unwind [12 Is Null Is Null,9e0[$@usn6]][Filter(`6esn` In 0x0[9e0..] Where $123456789 In 010 In $`8esn`)..] As _usn3 Remove [True,$1000[..`6esn`][..123456789]].#usn7 Union All Delete $123456789 Is Not Null,$_usn4 In $12,.12 =~1000 =~7 Merge (((`` :usn1:``{#usn7:$123456789[`4esn`..]})<-[@usn5?{`7esn`:`6esn` In $``}]->(usn1 {_usn3:#usn7 Ends With 0.12})<-[? *123456789..{`7esn`:.e12 =~@usn5,`3esn`:`5esn`[0e0..]}]-(`4esn` ))) On Create Set @usn6 =[`3esn` In False In $`2esn` In 1e1 Where .12 =~$#usn7 =~$``] Is Not Null On Create Set _usn3+=0X0123456789ABCDEF,_usn4+=$`7esn`[..0X7][..False],`4esn`+=0.e0 Starts With $`6esn` Create (({_usn4:.e0[$`1esn`..][_usn4..],usn2:.12[0X0123456789ABCDEF..]}))"),
    octest:ct_string("Unwind $`4esn` As `` Union With Distinct 999 Ends With $`4esn`,12e12 Ends With 0 Ends With $@usn6 Order By $`3esn`[...0][..$#usn7] Asc,usn1[9e1..] Ascending,usn1 Is Null Is Null Desc Skip [usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..]|$`6esn`[.e12]] Contains [`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 01 Is Null|$`4esn`[$@usn5..`7esn`]] Union Delete `8esn`['s_str'..],{`8esn`:Count(*) Is Null Is Null,@usn5:.e0 Ends With $`1esn` Ends With 1000} Is Not Null"),
    octest:ct_string("Remove None(#usn8 In 0x0[_usn4..] Where 00[01234567][Count(*)]).`8esn`?,Single(`6esn` In .e0['s_str'..][$`8esn`..] Where Null In 0xabc).`8esn`? Optional Match `7esn`=(usn1 :``:`6esn`)<-[usn2?]->(:`1esn`:@usn6{@usn5:`8esn`[12.e12][`4esn`]}),((@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})) Union Merge ((_usn3 {_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null})<-[_usn4?:`1esn`|@usn6]-({`4esn`:$_usn4[$123456789..][12..]})) On Match Set usn2 =Single(`6esn` In 1000[12.e12][#usn7] Where $`3esn` Starts With 01234567 Starts With $`5esn`) Ends With ``(0X7[..True][..01234567]) Ends With [0.12['s_str'..$0][$usn1..9e0]] On Create Set `5esn`+=#usn7 Is Null"),
    octest:ct_string("Merge #usn8=((:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]})-[?:`` *999{`7esn`:Count(*)[..`5esn`],`2esn`:.e12[..$_usn4][..#usn7]}]-({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]})<-[usn1]->(:`3esn`{`7esn`:12.e12[.12..$_usn3][0e0..9e0],`7esn`:0X7[..True][..01234567]})) On Match Set #usn8+=@usn5 Is Not Null Is Not Null,``+=Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) Ends With [1.e1[#usn7][1.e1],Null =~Count(*)] Ends With [#usn8[..0X0123456789ABCDEF][...0],$usn1 Is Not Null Is Not Null],`3esn`+={`1esn`:$`8esn`[``..True][1000..0.12]} Ends With Any(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where Count(*)[..`5esn`]) Ends With Single(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 010 Is Null Is Null) On Create Set {usn1:$7[$12]}._usn4? =1000 =~$@usn5,Single(usn1 In 999 Where @usn6 Ends With 0.12 Ends With `3esn`).#usn7 =01 Ends With @usn6 Ends With $7 With Distinct [.e1 =~\"d_str\" =~'s_str',$`` Is Not Null Is Not Null,$0[@usn6..][.e12..]] Contains Filter(`6esn` In 0x0[9e0..] Where 0xabc Is Not Null Is Not Null) As `7esn` Limit True Contains .e1 Contains `2esn` Union All Return 9e0[0..1e1] Return Distinct .12 Is Not Null Is Not Null Order By 0.12[$usn1..$7] Desc,$999[@usn5..][Null..] Desc Optional Match (:@usn5{_usn4:$`5esn`[0][.12]})<-[@usn5?{usn1:7 Ends With `3esn` Ends With $`2esn`}]-(_usn4 ),(_usn3 {`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`}) Union All Unwind 9e1[$`5esn`..][`5esn`..] As @usn6 Delete `5esn` Ends With 0x0,[#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]][Filter(`2esn` In $``[$#usn8] Where 01234567[`6esn`..])..][[`3esn` In False In $`2esn` In 1e1 Where .12 =~$#usn7 =~$``|01234567 Is Null]..]"),
    octest:ct_string("Create ((({`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`})-[`1esn`?:`3esn`|_usn4*..]->(:#usn8:#usn7{`4esn`:0Xa Contains 0x0 Contains $#usn8})<-[:_usn3|`6esn`{``:`6esn`[`7esn`..$_usn3][9e0..#usn8],`8esn`:.0[01234567]}]->(`2esn` :`5esn`{@usn5:'s_str' Contains 999,`6esn`:1000[12.e12][#usn7]}))),(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[@usn6{_usn4:$`` Starts With 0x0}]-(usn2 :`7esn`) Union Detach Delete 12 Is Null,Any(`6esn` In 1000[12.e12][#usn7] Where 1e1 =~$`8esn` =~`1esn`)[..(_usn4 :`3esn`{`2esn`:999})-[`4esn`?:#usn8|:`6esn` *999{`8esn`:010[`1esn`..`4esn`]}]-(`6esn` {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})][..[$999[@usn5..][Null..]]],$1000 Is Not Null Remove Filter(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 9e1[..01234567][..`4esn`]).#usn8? Unwind 01 Ends With 123456789 As usn2 Union Create (((usn1 :usn1:``{@usn6:_usn3[0Xa..]})<-[`2esn`?:@usn6]-(`2esn` :_usn4{`7esn`:`2esn`[`3esn`..],`6esn`:.12 Is Not Null})-[`4esn`?:#usn8|:`6esn` *999{`8esn`:010[`1esn`..`4esn`]}]-(`5esn` ))),`4esn`=(`1esn` {_usn3:12.0 In 07,`2esn`:01234567[..`6esn`][..``]}) With Distinct Any(`6esn` In 0x0[9e0..] Where $`3esn` Is Not Null)[None(`6esn` In 1000[12.e12][#usn7] Where `4esn` In $`2esn` In @usn5)..[0x0 Contains .0]],(@usn5 :usn2{`3esn`:0.0 Ends With $usn1 Ends With $999,`5esn`:1.e1 Is Null Is Null})-[`3esn`? *0..]->(:`2esn`:@usn5{#usn8:$usn2 Starts With 9e1 Starts With `7esn`})-[:`5esn`|:`1esn`]-(`8esn` :``:`6esn`{#usn7:$`3esn` Is Null}) Is Not Null Is Not Null As `5esn`,$#usn8 Is Null Is Null As @usn6 Order By .12 =~$#usn7 =~$`` Asc,Null[9e1][$`6esn`] Ascending,Filter(`6esn` In 0x0[9e0..] Where `7esn`[`8esn`][#usn7]) Is Not Null Is Not Null Descending Skip $`5esn`[#usn8] Limit 1000 Starts With 0e0 Starts With 0 Unwind 12[$`5esn`..$`7esn`][$1000..$_usn4] As _usn4"),
    octest:ct_string("Detach Delete $999 Is Not Null,.12 Is Not Null,`7esn`[0.e0..False][0e0..$_usn4] Union Detach Delete usn2 Contains 07 Contains False,None(`3esn` In 999 Where $`3esn`[9e0..0.0][_usn4..123456789])[Extract(`6esn` In 1000[12.e12][#usn7] Where 1e1 =~$`8esn` =~`1esn`|$999[@usn5..][Null..])..Extract(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where usn1 Is Null|123.654[0Xa..0x0][.12..12e12])][usn1(Distinct 0 Is Null Is Null,$@usn5 =~$usn2 =~True)..[`6esn` In .e0['s_str'..][$`8esn`..] Where \"d_str\" Ends With $1000 Ends With usn2|$#usn7[9e12..12]]],usn2[9e12] Remove $`6esn`.#usn7? Delete (`6esn` :`8esn`{usn2:#usn7 In #usn7,`1esn`:00['s_str']})<-[``?:@usn6]-(:`2esn`:@usn5{usn2:$`3esn` Ends With @usn6 Ends With 123.654})<-[@usn5?:@usn6 *..010]->(#usn7 :#usn7{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2}) Is Null,All(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $123456789 Is Not Null) Is Null Is Null Union All Detach Delete 7 In 1e1"),
    octest:ct_string("Remove All(`6esn` In .e0['s_str'..][$`8esn`..] Where `4esn`).usn1?,Extract(`6esn` In .e0['s_str'..][$`8esn`..] Where .e12 Is Null Is Null|$`7esn`[..0X7][..False]).`4esn`! Create usn2=((_usn3 :@usn6{@usn5:0e0 =~False =~.12})-[?:@usn5|:@usn6 *0Xa]-(:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`})) Union Delete 1e1[\"d_str\"..],$@usn5[..`4esn`] Unwind Null Is Null Is Null As `8esn`"),
    octest:ct_string("Detach Delete All(usn1 In 0xabc Is Not Null Is Not Null Where .12[..07])[..[`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $usn2[12.0..][`8esn`..]|$7[`7esn`][123.654]]][..Any(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1e1 Contains 0Xa)] Unwind $1000 =~.e12 =~0.e0 As `` Unwind 0[..07][..False] As `2esn` Union All Unwind [0Xa[..1.e1],#usn7[.12][usn2],1000 Starts With 0e0 Starts With 0][`7esn`(Distinct $#usn8[@usn5..$1000])] As `8esn` Create (`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]})<-[`3esn`{@usn6:123.654[.e12..\"d_str\"]}]-(@usn5 :`2esn`:@usn5$#usn8)<-[_usn4 *..0x0{``:$_usn4 =~0X7,`3esn`:Count(*)[12..123.654][$`1esn`..$0]}]-(:`4esn`:usn2{`2esn`:0Xa Contains $`6esn`}),(`5esn` :#usn7)-[`5esn`?:@usn5|:@usn6 *7{`2esn`:$`8esn`[0.12][12],`6esn`:`` Contains $_usn3 Contains 0e0}]-(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]})"),
    octest:ct_string("Delete `7esn`[7..$123456789][$0..$7],9e12[1.e1],#usn8[$`7esn`..12.0] Create ((_usn4 :#usn8:#usn7)<-[? *01234567..123456789]->(:`3esn`{`7esn`:$123456789[`4esn`..]})-[{usn1:`` Is Not Null Is Not Null,`2esn`:#usn8[..0X0123456789ABCDEF][...0]}]-(:usn1:``{_usn4:1000[12.e12][#usn7]})),``=(`3esn` {``:`6esn`[`7esn`..$_usn3][9e0..#usn8],`8esn`:.0[01234567]})<-[?{usn1:$#usn7[..$999][..9e1]}]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})-[`6esn`?:usn1|#usn7]-(#usn7 :`3esn`{usn2:$`6esn`[.e12]}) Merge (`4esn` {@usn6:_usn4[$`8esn`.._usn3][.0..$@usn6]})<-[@usn5?:_usn4|_usn3 *1000..01234567]->({@usn6:$#usn8[0e0..][07..]})<-[@usn5?:usn2|:``*..]->(`7esn` {#usn7:1e1[`3esn`]}) On Match Set usn2 =$`1esn` =~`1esn` =~0X0123456789ABCDEF,usn1+=#usn7 Starts With 's_str' Starts With usn2,`5esn`+=010 Is Null"),
    octest:ct_string("Optional Match @usn5=(#usn7 :`5esn`),`6esn`=(`2esn` :``:`6esn`)<-[ *..0X0123456789ABCDEF]->(`1esn` {`5esn`:$`7esn` Ends With $_usn4 Ends With `5esn`,#usn8:'s_str'[$#usn8]}) Remove usn2:`1esn`:@usn6,(:`6esn`:`3esn`{@usn6:#usn8 Is Not Null,usn2:1e1 Is Null})-[#usn8?:usn1|#usn7{`8esn`:$#usn7[`7esn`..][$`8esn`..]}]-(`5esn` {usn2:`6esn` In $``})-[?{`3esn`:'s_str'[$`6esn`..][$0..]}]->(`1esn` {@usn6:Null In 0xabc}).`7esn`! Merge `4esn`=((:usn1:``{`8esn`:123.654[$``][#usn7],`1esn`:0e0 Starts With $@usn6 Starts With $7})) On Match Set usn2 =0Xa Contains $`6esn`,`7esn`+=`8esn`[.e1..] Union All Return Distinct *,.0[01234567] As `2esn`,Extract(`2esn` In $``[$#usn8] Where `1esn`[Null..])[[12.0[`3esn`][_usn3]]] As @usn6 Skip `7esn`[7..$123456789][$0..$7] Unwind @usn6[$usn1][$`2esn`] As usn2"),
    octest:ct_string("Delete .e12 Is Null Is Null,$_usn4 =~0X7,0x0[_usn4..] Delete 0.0 =~0 =~``,`7esn`[7..$123456789][$0..$7] With  Any(`7esn` In $`8esn`[0.12][12] Where usn1 In 010) As `6esn` Order By 0 Asc,Filter(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1)[Extract(usn1 In 123.654 =~.e0 =~9e0 Where _usn3[0Xa..])..][{`4esn`:$123456789 =~usn1 =~0xabc,_usn4:True}..] Asc Where #usn8[True..#usn7][01..@usn5]"),
    octest:ct_string("Detach Delete #usn8 Is Not Null,$`6esn` Is Not Null"),
    octest:ct_string("Create #usn7=(`1esn` {`3esn`:@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`],`4esn`:0e0 Is Null})-[?:usn1|#usn7]-(:``:`6esn`{@usn6:`2esn`[``..],_usn3:12.0 In 07}) Unwind $1000[..`6esn`][..123456789] As `1esn`"),
    octest:ct_string("Merge `3esn`=((`7esn` {#usn7:1e1[`3esn`]})<-[_usn4?:``{@usn5:1000 Starts With 0e0 Starts With 0,#usn7:$`5esn`[`4esn`..$`2esn`]}]-(_usn4 :#usn8:#usn7)) On Create Set `2esn`:``:`6esn`,Extract(`6esn` In 0x0[9e0..] Where `7esn`[`8esn`][#usn7]|`8esn` Ends With $`1esn`).`1esn`? =1.e1 =~01234567,{@usn6:$123456789[12.0],#usn7:usn1 =~_usn4 =~$usn1}.`8esn`! =@usn6(Distinct $0 Contains 7 Contains 1.e1)[(_usn4 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8)][Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0X0123456789ABCDEF In _usn3)] Remove [0Xa[..9e12][...e0],0Xa =~0Xa =~`3esn`,.e1[0X7..`2esn`]].`6esn`!,(`7esn` {@usn6:$`3esn` Starts With 9e12 Starts With `8esn`})<-[`3esn`:usn2|:``]-(:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`})<-[?{_usn3:Count(*) Ends With 7 Ends With 0,`8esn`:@usn6 Starts With #usn8 Starts With $#usn7}]->({_usn4:$1000[$usn1][.e1]}).`3esn`?,(`2esn` :`1esn`:@usn6{#usn8:.12 Is Not Null})<-[:`7esn`{`6esn`:usn1[$`1esn`..],_usn4:$usn2 Contains $`1esn`}]->({`1esn`:1e1 Starts With 010})<-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->(@usn5 :`5esn`).usn1 Remove All(_usn4 In 12.e12 Is Null Is Null Where 0x0[$`2esn`..'s_str'][$@usn5..1.e1]).``? Union All Detach Delete $`3esn` Starts With 9e12 Starts With `8esn`,$@usn6 Ends With 010,#usn7[.12][usn2]"),
    octest:ct_string("Create `1esn`=(`` :``:`6esn`{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]}),`5esn`=(((`6esn` {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})<-[`5esn`:_usn4|_usn3 *0X7..0x0]-(#usn7 {`5esn`:00 Starts With usn1 Starts With Count(*),``:$999 Is Not Null})<-[`4esn` *123456789..]-(:`7esn`$#usn8))) Create (:`7esn`$#usn8)-[`3esn`? *12{@usn5:$#usn8[..123456789][..`2esn`],#usn7:12.0[..0X7]}]-(:`7esn`{@usn6:`2esn`[``..]})<-[``?:#usn8|:`6esn`{usn1:$#usn7[..$999][..9e1]}]->(`1esn` :`4esn`:usn2),#usn8=((`8esn` :#usn7))"),
    octest:ct_string("Detach Delete usn2(Distinct $`3esn` Is Null) Is Null Is Null Optional Match (`7esn` :`1esn`:@usn6)-[`2esn`?:`8esn`|@usn6]-({`4esn`:True Contains .e1 Contains `2esn`}),(((:`6esn`:`3esn`{`1esn`:0X7[..True][..01234567],``:`1esn`[usn1]})<-[_usn4 *00]-(#usn7 :`7esn`)<-[ *0..]->(_usn3 :@usn6))) Where 00[0X7..9e12]"),
    octest:ct_string("Create (`7esn` :`7esn`)-[{`5esn`:0.e0 =~01234567 =~01234567}]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]}),((`` {_usn4:False[...e0][..$#usn8],`4esn`:.e12[..$_usn4][..#usn7]})<-[? *..010{usn1:123456789[$_usn4..]}]->(@usn5 {`2esn`:$#usn7[`7esn`..][$`8esn`..],`3esn`:0.12['s_str'..$0][$usn1..9e0]})) Return Distinct Any(`3esn` In 999 Where .12[0X0123456789ABCDEF..]) =~(:`7esn`{@usn6:`2esn`[``..]})<-[?{``:Null Is Not Null Is Not Null}]-(:_usn4{@usn6:$123456789[`1esn`..]}) =~[12e12 Ends With `6esn`],$`3esn`[...0][..$#usn7],1.e1 As usn1 Order By .e12[$_usn4..0] Ascending,usn1 Ends With .0 Ends With `4esn` Asc,'s_str' =~$`4esn` =~@usn5 Descending Skip Count(*) In $`2esn` With  *,0Xa Is Null Is Null"),
    octest:ct_string("Unwind .12[...0] As `5esn` Optional Match `8esn`=(((`2esn` {_usn3:0[1e1..00]})-[_usn4?:usn2|:`` *7]-(`5esn` {`1esn`:999 Ends With $`4esn`})<-[`1esn`:_usn4|_usn3 *00{`1esn`:$#usn8 Starts With usn2 Starts With .12,@usn6:07[$`8esn`]}]-(`3esn` :`8esn`))) Where $123456789[..$usn2] Merge (($1000)<-[?{``:Null Is Not Null Is Not Null}]-(:_usn4{@usn6:$123456789[`1esn`..]})<-[?:@usn5|:@usn6]-(`7esn` {@usn6:.e0[123456789..][$`2esn`..],``:$0[`5esn`][9e12]})) Union All Detach Delete 010 =~0e0 =~9e1"),
    octest:ct_string("Unwind $0[07..] As `4esn` Merge ``=(((`1esn` :`2esn`:@usn5{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})-[``:_usn4|_usn3]-(:``:`6esn`{@usn6:$`4esn`[$@usn5..`7esn`],`5esn`:_usn4 Starts With `6esn` Starts With $`8esn`})<-[`3esn`:usn2|:``]-(:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`}))) On Create Set [`6esn` In 1000[12.e12][#usn7] Where `7esn` Contains .0 Contains #usn8|123456789[..0]].`` =9e1 =~$_usn4 =~$usn1,#usn7:``:`6esn`,(#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]})<-[@usn6{#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]}]-(#usn8 :`8esn`)<-[? *..010{#usn8:$usn1[usn1..$`8esn`][12e12..$``],usn1:'s_str' Ends With $7}]->({@usn6:#usn8 =~#usn7 =~0x0,`7esn`:$usn1 Ends With $`2esn`}).#usn7! =0.0 =~$#usn7 =~`1esn` On Match Set #usn8+=@usn5 Is Not Null Is Not Null,``+=Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) Ends With [1.e1[#usn7][1.e1],Null =~Count(*)] Ends With [#usn8[..0X0123456789ABCDEF][...0],$usn1 Is Not Null Is Not Null],`3esn`+={`1esn`:$`8esn`[``..True][1000..0.12]} Ends With Any(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where Count(*)[..`5esn`]) Ends With Single(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 010 Is Null Is Null) With  Count(*)[..$_usn3][..$usn2] Skip .0[01234567] Limit (@usn5 :`2esn`:@usn5$#usn8)-[`6esn`?:`1esn`|@usn6 *0xabc..]->(:_usn4{_usn3:`1esn`[Null..]}) Starts With 12.0 Starts With Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) Where 0.e0[.e12] Union All Return *,[`6esn` In 1000[12.e12][#usn7] Where $`7esn`[..$`8esn`]|$`6esn` Starts With usn1][Extract(`3esn` In 999 Where usn1[$`1esn`..])..{`3esn`:usn2 Contains 07 Contains False,#usn8:usn2[.e1..][01234567..]}][{@usn5:.12[9e1..0X7]}..[_usn4 In 12.e12 Is Null Is Null Where $123456789 In 010 In $`8esn`|0.12['s_str'..$0][$usn1..9e0]]] As usn1 Skip Single(`6esn` In .e0['s_str'..][$`8esn`..] Where $`5esn` Contains $usn2) In usn1($@usn6 Is Null Is Null) In All(#usn8 In 0x0[_usn4..] Where $_usn3 Is Not Null) Limit 1000 Starts With `` Union With Distinct $1000 Is Not Null Is Not Null,(:`4esn`:usn2{_usn3:Null Is Not Null Is Not Null,`4esn`:$1000 Is Not Null})<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]->(:@usn5{usn1:12.e12 Is Null Is Null,``:Null Is Not Null Is Not Null}) Ends With {@usn6:_usn3[0Xa..]} As usn1,$#usn8 Ends With _usn4 Ends With usn2 As #usn7 Where 999 Ends With $`4esn` With Distinct *,$`7esn` =~1.e1 =~0.e0,12.0 =~{`7esn`:`7esn`[`8esn`][#usn7]} =~[0.0 Ends With $usn1 Ends With $999,.e12[..$_usn4][..#usn7],$@usn5 =~$usn2 =~True] As usn2 Order By 1000[Null][$`7esn`] Ascending,{`7esn`:usn2 Starts With 00}[(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})<-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-({@usn6:`5esn` Ends With $999})..][(:`1esn`:@usn6{_usn3:$usn2 =~`6esn` =~`1esn`,`6esn`:0[1e1..00]})-[{_usn4:$`8esn` Contains .0 Contains 0.12}]->(:usn1:``{_usn4:1000[12.e12][#usn7]})-[@usn6 *00]->(`4esn` {_usn4:$`2esn`[$``..12e12]})..] Ascending Where 9e1 =~$0 Return 's_str'[$#usn8] Skip 12 Ends With .e0 Ends With .0 Limit 01 In $7 In $1000"),
    octest:ct_string("Return *,$`1esn` Starts With True Starts With @usn5,.e0[123456789..][$`2esn`..] As #usn8 Order By ``($#usn7[$`3esn`..$999]) Starts With {``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]} Ascending,12e12 In Null Asc,0.12[123456789..] Desc Skip (@usn5 :`1esn`:@usn6{@usn5:`4esn` Is Not Null,`3esn`:.e1 =~usn2 =~`7esn`})<-[#usn7?:#usn7|`5esn` *01..7{`2esn`:.e0 =~01 =~9e12,#usn8:$123456789 Starts With `6esn` Starts With 123.654}]-(`2esn` )-[ *999]->(_usn3 {_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null})[..Extract(#usn8 In 07['s_str'][$@usn6] Where _usn4[.._usn4])][..Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where usn2[.e1..][01234567..])] Union All Optional Match `1esn`=(((_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[`7esn`?:`2esn`|:`7esn`]->(`3esn` {#usn8:#usn7 =~$`8esn`})-[ *07{`1esn`:$``}]->(`1esn` :usn1:``))) Where 01 Starts With $`5esn` Starts With 01234567 Unwind (_usn3 {_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null})-[`5esn`?:_usn4|_usn3{@usn5:7 =~False,_usn3:999 Ends With $`4esn`}]->(:`1esn`:@usn6{`8esn`:$`8esn` Contains $`2esn` Contains False})[..12.e12][..Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where usn2[.e1..][01234567..])] As @usn6 Union Optional Match #usn8=(((_usn4 :@usn5)-[? *..0X0123456789ABCDEF{#usn8:0X7[..`5esn`][..$`7esn`]}]-(#usn7 {@usn5:$`5esn` Contains $usn2})-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2))) Where @usn5[01234567..] Merge ({`6esn`:usn1[$`1esn`..],_usn4:$usn2 Contains $`1esn`}) On Create Set `1esn` =$999[010..],`3esn`+=\"d_str\" =~_usn3 =~0.0,`8esn`+=#usn7 In 0.12 In Null On Match Set Extract(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $`6esn`[00..$12]).`2esn` =$@usn6[_usn4..][$1000..] Create (:#usn7{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})<-[`1esn`?:`3esn`|_usn4 *01234567..123456789]->(#usn7 {#usn7:999 Contains $`7esn` Contains usn2})-[?:``]->(@usn6 :``:`6esn`{#usn7:9e1 Contains _usn3})"),
    octest:ct_string("Remove All(`5esn` In $usn2 Contains $`1esn` Where @usn6[$usn1][$`2esn`]).`3esn`?,(_usn4 :`1esn`:@usn6)<-[`5esn`? *..0x0{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]->(:`7esn`$12).``? Merge `7esn`=(_usn3 {`3esn`:$@usn5 Is Not Null Is Not Null}) On Create Set `1esn`:`2esn`:@usn5 Merge (`4esn` :#usn8:#usn7) On Create Set Any(`3esn` In @usn6[..\"d_str\"][..01] Where @usn6 Contains $_usn3 Contains 12.0).`6esn`! =$`7esn` =~$usn1 =~00 On Match Set #usn7 =[.12 Is Null,12 Ends With 0 Ends With Null,0x0 =~@usn5 =~01],{_usn3:1.e1 Is Null Is Null}.`7esn` =`8esn`(Distinct $123456789[`3esn`..`5esn`][1e1..$`5esn`],usn1[9e1..])[..(`6esn` :#usn7)<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8)<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]-(@usn6 :``:`6esn`)] Union All Match ((:#usn8:#usn7{`8esn`:0Xa[Count(*)][0xabc]})<-[?:`7esn`{`1esn`:0.12 Is Null,@usn6:9e12[$123456789..$usn2]}]->({#usn8:$`` Is Not Null Is Not Null,`8esn`:$usn2 Starts With 9e1 Starts With `7esn`})<-[*{`6esn`:`6esn` In $``}]->(`7esn` :`8esn`{usn2:`5esn` =~``,`7esn`:`7esn` Is Not Null Is Not Null})),`3esn`=((`7esn` :``:`6esn`)<-[usn1]->(usn1 :usn2{#usn8:0.e0 Contains $1000 Contains 7})<-[`8esn`? *..0X0123456789ABCDEF{`2esn`:$``[$_usn4][$`3esn`]}]-(:`6esn`:`3esn`{`5esn`:$7[$12],`6esn`:#usn8 Is Not Null}))"),
    octest:ct_string("Detach Delete .e12 =~\"d_str\" =~@usn5 Optional Match _usn3=((`7esn` )<-[`5esn`? *..0x0{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]-(`6esn` :@usn6)),`2esn`=(({`7esn`:Count(*)[..`5esn`],`2esn`:.e12[..$_usn4][..#usn7]})-[_usn4?{`3esn`:1e1[`3esn`]}]-({`2esn`:``[0X7..][$@usn6..],@usn6:usn1[..`7esn`][..$`8esn`]})-[?:`2esn`|:`7esn` *0..{`4esn`:010 In $@usn5 In `5esn`,#usn7:$`7esn` Is Null Is Null}]->(`2esn` {_usn3:0[1e1..00]})) Match `1esn`=((:#usn7{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]})),(((:#usn7{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})-[{usn1:Count(*)[..12][..$999],#usn8:usn1 In 010}]->(:`7esn`{#usn8:12e12 Ends With `6esn`,_usn4:0Xa Contains $#usn8 Contains `5esn`})-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]->(_usn3 {`3esn`:$@usn5 Is Not Null Is Not Null}))) Where usn1 Ends With .0 Ends With `4esn` Union All Match ((_usn3 :`6esn`:`3esn`{`7esn`:1000 Ends With 01234567 Ends With usn1})-[usn2?:_usn4|_usn3{#usn8:12.0[`3esn`][_usn3]}]-(usn2 :`4esn`:usn2{`3esn`:@usn5[$`1esn`..][$7..]})<-[usn2:`3esn`|_usn4]-(usn2 :@usn6{@usn5:#usn8[True..#usn7][01..@usn5]})),`6esn`=((:`7esn`{`8esn`:'s_str'[$#usn8]})-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})<-[usn2?:#usn8|:`6esn` *7]-(:@usn6)) Detach Delete [`2esn` In $#usn8 Starts With usn2 Starts With .12 Where .0 =~$@usn5 =~1.e1][Any(`3esn` In 999 Where $`5esn`[.e1][#usn8])..Single(`5esn` In $usn2 Contains $`1esn` Where $#usn8[..123456789][..`2esn`])][count($usn1 Starts With Null Starts With $``)..`3esn`(Distinct 7[$1000][1000])],$999[010..]"),
    octest:ct_string("Remove [1.e1 Is Null Is Null].`8esn`?,[0,`7esn`[_usn4..][Count(*)..]].#usn8!,(_usn4 :_usn3:@usn5)<-[@usn6:`8esn`|@usn6{@usn6:#usn8 =~#usn7 =~0x0,`7esn`:$usn1 Ends With $`2esn`}]->(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[?:`6esn`]->(`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010}).#usn8 Match _usn3=(#usn8 :`7esn`)-[:#usn8|:`6esn`{#usn8:0X7[..`5esn`][..$`7esn`]}]->(`2esn` :@usn6),#usn8=((usn1 {_usn3:#usn7 Ends With 0.12})<-[?:@usn6 *07{_usn3:$`1esn` Is Null}]-(`5esn` {`5esn`:#usn8 Is Not Null,`1esn`:01234567[`6esn`..]})<-[*]->(usn1 :`1esn`:@usn6{`2esn`:$123456789[..$usn2],_usn4:0X0123456789ABCDEF In _usn3})) Where $_usn4[False..@usn6][`4esn`..$1000] Union Return $@usn6[$#usn8..$999][Count(*)..usn1] As @usn6,\"d_str\" =~Count(*) =~$usn2,$@usn5[..$`8esn`][..`1esn`] Return (:`4esn`:usn2{_usn3:Null Is Not Null Is Not Null,`4esn`:$1000 Is Not Null})<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]->(:@usn5{usn1:12.e12 Is Null Is Null,``:Null Is Not Null Is Not Null}) Ends With {@usn6:_usn3[0Xa..]} As usn1,True Is Null Order By [12 Is Null Is Null,9e0[$@usn6]] Contains Extract(`6esn` In .e0['s_str'..][$`8esn`..] Where `8esn`[0x0..]|.e0['s_str'..][$`8esn`..]) Contains #usn7 Asc Skip 9e1[$`2esn`..][12.e12..] Union Return Distinct *,(:`4esn`:usn2{_usn3:Null Is Not Null Is Not Null,`4esn`:$1000 Is Not Null})<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]->(:@usn5{usn1:12.e12 Is Null Is Null,``:Null Is Not Null Is Not Null}) Ends With {@usn6:_usn3[0Xa..]} Order By True[07] Descending With  Extract(`3esn` In 999 Where .e12 Is Null Is Null|$`7esn`[usn2]) Is Not Null As @usn5 Order By usn1 =~12 =~$0 Asc,01 In `4esn` In 1.e1 Descending Delete #usn7[999..$999],\"d_str\" Starts With 0X7 Starts With 1e1"),
    octest:ct_string("Merge (((`5esn` :`1esn`:@usn6{usn2:#usn7 In #usn7,`1esn`:00['s_str']})-[? *999]-({_usn3:123.654 Is Not Null Is Not Null})-[#usn8? *07{@usn5:0.e0 =~01234567 =~01234567,`1esn`:.e1 =~usn2 =~`7esn`}]->(`` :`5esn`{`5esn`:_usn3[0Xa..],usn1:1.e1 Ends With 0x0 Ends With 1e1}))) On Create Set @usn6 =[0Xa[..$`2esn`][..00]] Starts With (@usn6 )-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(:`7esn`{`2esn`:.e12 Is Not Null Is Not Null,`4esn`:_usn4[1000..``]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`6esn` ),`6esn`+=$12[usn2][12.0] Unwind 123.654 Is Null Is Null As `8esn` With Distinct (`6esn` :`8esn`)-[@usn6{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]}]-(`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]})<-[`8esn`?:usn1|#usn7 *01..7{usn1:123456789[$_usn4..]}]-(usn2 :@usn6) =~$`3esn` =~`8esn`(1000[12.e12][#usn7],#usn8[1e1..]) As `7esn` Order By [usn1 In 123.654 =~.e0 =~9e0 Where $@usn5[$_usn3]|$`2esn` Ends With 1e1] Contains All(#usn8 In 0x0[_usn4..] Where 0xabc[123.654][12]) Descending,Extract(usn1 In 999 Where 1e1 =~$`8esn` =~`1esn`|7 Starts With $@usn6) Is Not Null Is Not Null Desc Where `5esn`[$7..01] Union All Detach Delete `1esn`[..$999][..\"d_str\"] Unwind `7esn`[_usn4..][Count(*)..] As `7esn` Merge (usn1 :`2esn`:@usn5{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc})<-[#usn8:`3esn`|_usn4*..{``:9e0 Is Null Is Null}]->(:@usn5{#usn7:0x0 In 0X0123456789ABCDEF,`2esn`:0Xa[Count(*)][0xabc]}) On Create Set Extract(`3esn` In False In $`2esn` In 1e1 Where 01 Starts With $`5esn` Starts With 01234567).`8esn`! =None(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1) Ends With All(usn1 In 0xabc Is Not Null Is Not Null Where $@usn6 Is Null) Ends With Any(`6esn` In 1000[12.e12][#usn7] Where 01 Starts With $`5esn` Starts With 01234567),[`5esn` In $usn2 Contains $`1esn` Where False[$12]|.e12[``][$1000]].usn1! =_usn3[0Xa..],None(`3esn` In False In $`2esn` In 1e1 Where #usn7[.12][usn2]).@usn5 =Filter(_usn4 In 12.e12 Is Null Is Null Where 0e0 Is Not Null) =~All(`2esn` In $``[$#usn8] Where 12e12 Ends With $_usn4 Ends With $`2esn`)"),
    octest:ct_string("Merge (:@usn6{`8esn`:0X7[0xabc][$1000]})-[@usn5{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(`8esn` :`1esn`:@usn6)<-[`6esn`?:`1esn`|@usn6 *0xabc..]-(:`7esn`{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc}) On Match Set `5esn`+=$`2esn`[.._usn3],[`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0X0123456789ABCDEF In _usn3|0.12[123456789..]].`7esn`! =$@usn5[..`4esn`],@usn5 =0e0 In `8esn` In 0xabc On Match Set #usn8 =Single(usn1 In 123.654 =~.e0 =~9e0 Where $123456789[..$`7esn`][..\"d_str\"])[..Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 9e1 Contains _usn3)][..None(usn1 In 123.654 =~.e0 =~9e0 Where $7 Ends With 12.e12 Ends With `1esn`)],`4esn` =$0[`5esn`][9e12],@usn5+=({#usn7:$`3esn` Is Null})<-[`8esn` *0..$12]-(:`2esn`:@usn5{#usn8:0.e0 Contains @usn5 Contains 0X7,`5esn`:0x0[9e0..]}) Ends With Extract(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]) Remove Filter(`3esn` In 999 Where 0.12[123456789..]).`6esn`? Union All With  * Where _usn4[1000..``] Create (`7esn` {@usn6:0 =~#usn8}),usn2=((({@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})-[?:`2esn`|:`7esn` *0X7..0x0{usn2:0.12 Contains 0x0 Contains @usn5,_usn3:.e12 Contains $usn2 Contains $@usn6}]-(:`2esn`:@usn5{`4esn`:_usn3 =~$12,_usn4:.e1 =~usn2 =~`7esn`})-[`6esn` *00]-(:`8esn`{@usn5:1000 Starts With 0e0 Starts With 0,#usn7:$`5esn`[`4esn`..$`2esn`]}))) Merge usn2=(`2esn` {_usn3:0[1e1..00]})-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2) On Create Set usn2 =0x0[01234567..Null][0Xa...e12],{#usn8:#usn7[@usn6..]}.@usn6 =#usn7[False..][123.654..] On Match Set `4esn`:`6esn`:`3esn`,@usn5 =$`7esn` Contains usn2"),
    octest:ct_string("With Distinct 's_str'[..Null][..$`5esn`] As usn2 Order By @usn6 Is Null Is Null Desc,Extract(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1|$`2esn` Is Not Null Is Not Null) =~[`7esn`[..01],1e1 =~$`8esn` =~`1esn`,$`6esn`[.e12..$`6esn`][$#usn7...0]] Ascending,999 Descending Skip 12[$`5esn`..$`7esn`][$1000..$_usn4] Where $`8esn` Ends With #usn8 With Distinct `7esn`[..$`5esn`] As ``,[#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]][Filter(`2esn` In $``[$#usn8] Where 01234567[`6esn`..])..][[`3esn` In False In $`2esn` In 1e1 Where .12 =~$#usn7 =~$``|01234567 Is Null]..] As usn1,_usn3 =~010 As usn1 Skip $`5esn`['s_str'..] Unwind 0.0[.12..`8esn`] As `1esn`"),
    octest:ct_string("Delete $1000 Is Not Null Is Not Null,Single(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where `` Contains $_usn3 Contains 0e0)[[`6esn` In .e0['s_str'..][$`8esn`..] Where `6esn` In $``|#usn7[.12][usn2]]..][[.e12[..#usn7][..9e12]]..] Remove Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0e0 Starts With $@usn6 Starts With $7).@usn6!,[12e12 Ends With 0e0].`2esn`? With  $`3esn`[0.12..][$@usn5..] Order By 1000 Is Null Is Null Asc Skip (@usn6 )<-[`7esn`?:@usn6]-(_usn4 :usn1:``{`2esn`:$`2esn` Is Not Null Is Not Null,`2esn`:@usn5['s_str'..$`2esn`]})[``(Distinct `` In False In True,0xabc Contains 0)] Union Unwind 123.654 Is Null Is Null As `1esn` Match ((usn1 {_usn3:#usn7 Ends With 0.12})<-[?:@usn6 *07{_usn3:$`1esn` Is Null}]-(`5esn` {`5esn`:#usn8 Is Not Null,`1esn`:01234567[`6esn`..]})<-[*]->(usn1 :`1esn`:@usn6{`2esn`:$123456789[..$usn2],_usn4:0X0123456789ABCDEF In _usn3})),#usn8=(`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})<-[? *..010{usn1:123456789[$_usn4..]}]->(#usn7 {usn2:$#usn8 In True In #usn7}) Delete .e1[01234567]"),
    octest:ct_string("Match (:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`}),usn2=((_usn3 :@usn6{@usn5:0e0 =~False =~.12})-[?:@usn5|:@usn6 *0Xa]-(:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`})) Where 1e1 Is Null Unwind @usn6(`4esn` Starts With $#usn8 Starts With $#usn8,.e1 =~usn2 =~`7esn`)[..{`2esn`:Count(*) Contains 12e12 Contains 0xabc}][..Extract(#usn8 In 0x0[_usn4..] Where 0xabc[123.654][12]|$`6esn` Is Not Null)] As `7esn` Merge usn1=((`` :usn2{@usn5:usn2,usn1:0.0[.12..`8esn`]})<-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]-(`8esn` :#usn7)) On Match Set @usn6 =$`8esn`[0.12][12],`8esn` =999[..01234567][..7] On Create Set @usn6 ={`8esn`:.12 Is Not Null,_usn3:Count(*) In $`2esn`}[..[@usn6[$0..Null],$999[010..],$`6esn`[$`6esn`..][0X7..]]] Union Return 1000 Ends With 01234567 Ends With usn1 As usn2,`7esn`[`7esn`],123456789 Ends With 9e1 Ends With `` Order By [12 Is Null Is Null,9e0[$@usn6]][Filter(`6esn` In 0x0[9e0..] Where $123456789 In 010 In $`8esn`)..] Asc,0[0Xa..] Ascending,$`6esn`[07][$`1esn`] Descending Skip (`4esn` :`3esn`)-[:`1esn`|@usn6 *0..]-(_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})<-[?:`1esn`|@usn6 *0Xa]-(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]}) Is Not Null Is Not Null Detach Delete 12e12 Ends With 0 Ends With $@usn6,#usn7 In #usn7,`3esn`($usn2 Starts With $`7esn` Starts With _usn4) Is Not Null Is Not Null"),
    octest:ct_string("Remove Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where @usn6 Ends With 0.12 Ends With `3esn`|123456789 =~@usn5 =~$`5esn`).`8esn`? Union All Merge (:usn1:``{_usn3:123.654 Is Not Null Is Not Null}) On Match Set #usn8+=0.e0 In `2esn`,`5esn`+=False[$_usn4..][`8esn`..],@usn6+=(usn1 {@usn5:12e12 Ends With `6esn`,_usn4:\"d_str\" Starts With _usn4 Starts With $_usn4})<-[?:#usn7|`5esn`{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}]->(@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})<-[?:`1esn`|@usn6]->(`6esn` :`2esn`:@usn5) Is Null Merge `1esn`=(usn1 {usn1:_usn4[.._usn4],_usn4:@usn5[$`1esn`..][$7..]})<-[:`5esn`|:`1esn`{#usn8:`7esn` Is Null,`4esn`:False[$12]}]->(`8esn` :`3esn`{`2esn`:$`8esn`[`7esn`],`4esn`:#usn8[1e1..]})-[?:`3esn`|_usn4 *01..7{@usn5:`4esn`}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]}) On Create Set All(usn1 In 0xabc Is Not Null Is Not Null Where $``).`5esn`? =Extract(#usn8 In 0x0[_usn4..] Where 7 =~$1000 =~$`5esn`|`2esn`[`3esn`..])[{`3esn`:#usn8[..0X0123456789ABCDEF][...0]}][Any(`6esn` In .e0['s_str'..][$`8esn`..] Where \"d_str\" Ends With $1000 Ends With usn2)] On Match Set Any(`6esn` In 1000[12.e12][#usn7] Where `1esn`[$7][0Xa]).`4esn`? =$`2esn` Starts With 9e12 Unwind (@usn6 )<-[`7esn`?:@usn6]-(_usn4 :usn1:``{`2esn`:$`2esn` Is Not Null Is Not Null,`2esn`:@usn5['s_str'..$`2esn`]})[``(Distinct `` In False In True,0xabc Contains 0)] As `3esn` Union Unwind [#usn7[@usn6..]] In All(#usn8 In 0x0[_usn4..] Where 0xabc[123.654][12]) In All(usn1 In 999 Where `5esn` Ends With $999) As #usn8 Unwind {_usn4:$@usn6 Ends With 0.0,`7esn`:$#usn7[123456789..][$`4esn`..]} =~Extract(`6esn` In 1000[12.e12][#usn7] Where 01234567[9e0][.0]|$@usn6 Is Null Is Null) As `1esn`"),
    octest:ct_string("Match @usn6=(_usn3 {`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`}),`8esn`=(#usn7 {_usn4:`1esn`[$7][0Xa]})-[``{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null}]->(#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]})-[``:@usn6{`3esn`:.e12[$_usn4..0],usn1:00[$0..usn2][$_usn4..$999]}]-({``:_usn3[9e0..$123456789][0X7..999]}) Union All Return *,$7 Ends With 12.e12 Ends With `1esn` As `` Order By .e0 =~01 =~9e12 Desc Limit `7esn` Is Not Null Is Not Null"),
    octest:ct_string("Detach Delete $999 Contains 12e12 Union With Distinct (_usn3 :#usn8:#usn7)<-[{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(`3esn` :`4esn`:usn2)[[`3esn` In 999 Where _usn4[1000..``]|Null[9e1][$`6esn`]]..({_usn4:$1000[$usn1][.e1]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`1esn` {`6esn`:07})<-[`5esn`?]-(@usn5 {`5esn`:0e0[...e1]})] As #usn7,[`3esn` In @usn6[..\"d_str\"][..01] Where `1esn`[$7][0Xa]|.e0 Contains 999] =~Extract(`2esn` In $``[$#usn8] Where 12e12 Ends With $_usn4 Ends With $`2esn`|`4esn` Starts With `8esn`) =~[#usn8 =~$1000 =~$1000,$`7esn`[`2esn`]] Order By True Ends With `6esn` Ends With 9e0 Desc Where 0x0 =~`5esn` =~$`8esn` Union Delete Null[..$0][..12.0] With  *,\"d_str\" Ends With $`3esn` As `5esn` Where 0xabc Ends With Count(*) Ends With 0x0 Unwind Filter(`6esn` In 0x0[9e0..] Where `7esn`[`8esn`][#usn7]) Is Not Null Is Not Null As `5esn`"),
    octest:ct_string("Return Extract(usn1 In 123.654 =~.e0 =~9e0 Where $123456789[`3esn`..`5esn`][1e1..$`5esn`]) Ends With [usn1 In 123.654 =~.e0 =~9e0 Where `5esn`[usn1]] As ``,Single(`3esn` In @usn6[..\"d_str\"][..01] Where 12[`5esn`..$`3esn`][0.12..usn2])[[`6esn` In 0x0[9e0..] Where $#usn8[0e0..][07..]|0 Is Not Null Is Not Null]..][(`6esn` :usn1:``)<-[``?:usn1|#usn7]-(@usn5 :`2esn`:@usn5{@usn6:123456789 =~#usn8 =~$0})..] Order By 0xabc =~01 Descending Create `1esn`=(({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})),``=((`4esn` {``:0.12 Contains 0x0 Contains @usn5})) Match (`5esn` :#usn7)-[`5esn`?:@usn5|:@usn6 *7{`2esn`:$`8esn`[0.12][12],`6esn`:`` Contains $_usn3 Contains 0e0}]-(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]}),(:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`}) Where _usn4[.._usn4]"),
    octest:ct_string("Unwind 01 In `4esn` In 1.e1 As `5esn` Remove (`3esn` {#usn8:True[7][``]})<-[`1esn`?:`3esn`|_usn4*..]-(:`6esn`:`3esn`{`3esn`:123.654[0Xa..0x0][.12..12e12]})<-[``?:@usn6]-(:`2esn`:@usn5{usn2:$`3esn` Ends With @usn6 Ends With 123.654}).`3esn`,`8esn`:usn1:`` Remove (_usn3 {_usn3:$#usn8 In True In #usn7,usn2:$@usn5[$_usn3..Null]})-[?:`6esn`]->(`1esn` :@usn5{`7esn`:usn2 In 1e1 In `4esn`,``:123456789 Ends With 9e1 Ends With ``}).`1esn`,Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 00[0X7..9e12]).`2esn`? Union With Distinct [`2esn` In $``[$#usn8] Where 01234567[`6esn`..]] Contains None(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where $#usn8[0e0..][07..]) Contains Single(`5esn` In $usn2 Contains $`1esn` Where 123.654 =~.e0 =~9e0) As usn1 Limit All(usn1 In 0xabc Is Not Null Is Not Null Where .12[..07])[..[`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $usn2[12.0..][`8esn`..]|$7[`7esn`][123.654]]][..Any(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1e1 Contains 0Xa)] Where @usn6[$0..Null] Remove {`7esn`:$999[9e0..010][999..010]}.`6esn`! Unwind [`6esn` In .e0['s_str'..][$`8esn`..] Where $@usn5 Starts With Count(*) Starts With $usn1] In None(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $`5esn` Starts With $`3esn` Starts With 1.e1) In Filter(`3esn` In False In $`2esn` In 1e1 Where True Contains $`` Contains 01234567) As @usn5"),
    octest:ct_string("Optional Match usn1=(`2esn` :``:`6esn`)<-[ *..0X0123456789ABCDEF]->(`1esn` {`5esn`:$`7esn` Ends With $_usn4 Ends With `5esn`,#usn8:'s_str'[$#usn8]}) Where $`6esn`[00..$12] Union All Detach Delete `5esn` In 12.e12 In 1000,1000 Starts With ``,[`6esn` In 0x0[9e0..] Where \"d_str\"[.0][9e0]][{`4esn`:$#usn7 =~usn2 =~`3esn`,_usn4:01 In 0.12 In .e12}..][None(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $123456789 Is Not Null)..] Match _usn3=(#usn8 :`7esn`)-[:#usn8|:`6esn`{#usn8:0X7[..`5esn`][..$`7esn`]}]->(`2esn` :@usn6),#usn8=((usn1 {_usn3:#usn7 Ends With 0.12})<-[?:@usn6 *07{_usn3:$`1esn` Is Null}]-(`5esn` {`5esn`:#usn8 Is Not Null,`1esn`:01234567[`6esn`..]})<-[*]->(usn1 :`1esn`:@usn6{`2esn`:$123456789[..$usn2],_usn4:0X0123456789ABCDEF In _usn3})) Where $_usn4[False..@usn6][`4esn`..$1000] Union Delete {``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]} Ends With {`2esn`:.e12 Is Null Is Null,usn1:.e12 =~@usn5} Ends With Extract(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Is Not Null Is Not Null),$`6esn`[$`1esn`..],$`6esn`[.e12..$`6esn`][$#usn7...0] Unwind _usn4 As #usn8 Unwind Any(`2esn` In $``[$#usn8] Where $`4esn`[$1000..$`4esn`][0x0..$_usn3])[Filter(`6esn` In 0x0[9e0..])] As @usn6"),
    octest:ct_string("Remove `8esn`(Distinct).`3esn` Union All Unwind 01 Ends With 123456789 As `1esn` Union With Distinct *,(:`5esn`{`7esn`:'s_str'[$#usn8],``:`1esn`[..$#usn7]})<-[@usn5]->(`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]}) Ends With (usn2 :`7esn`)-[{`5esn`:0.e0 =~01234567 =~01234567}]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]}) Ends With None(`6esn` In 0x0[9e0..] Where `7esn`[`8esn`][#usn7]) Skip $`6esn` Is Null Is Null Limit Extract(_usn4 In 12.e12 Is Null Is Null Where _usn4 In .0 In .12|usn2 In 1e1 In `4esn`) Contains None(`3esn` In @usn6[..\"d_str\"][..01] Where `4esn` In .12 In $#usn8) Contains Filter(`5esn` In $usn2 Contains $`1esn` Where usn2[Count(*)][$`1esn`]) With Distinct *,[.12 Is Null,12 Ends With 0 Ends With Null,0x0 =~@usn5 =~01][{usn2:$`6esn`[.e12]}] As @usn5 Order By $7[$12] Descending,[999 Contains $`7esn` Contains usn2,$999[9e0..010][999..010],1000 Is Not Null] Is Null Asc,{usn2:@usn5[$`1esn`..][$7..],@usn6:$#usn8[0xabc..usn2]} Is Not Null Is Not Null Desc Skip `1esn`[0] Limit 0 Is Not Null Is Not Null"),
    octest:ct_string("Delete `` Is Not Null Is Not Null Union All Remove [9e1[..01234567][..`4esn`],$`5esn`[0][.12],`1esn`[$7][0Xa]].#usn7,(`4esn` :#usn8:#usn7)-[?:@usn5|:@usn6 *0Xa]-(:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`})-[usn2?:#usn8|:`6esn` *7]->(_usn4 :`8esn`).`1esn`!,None(_usn4 In 12.e12 Is Null Is Null Where 00[0X7..9e12]).#usn7? Merge usn1=(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null})-[:_usn3|`6esn`{``:`6esn`[`7esn`..$_usn3][9e0..#usn8],`8esn`:.0[01234567]}]-(`1esn` {@usn5:9e1 Starts With 12.e12 Starts With 010,`8esn`:$0[@usn6..][.e12..]})-[`4esn`?:usn1|#usn7{`1esn`:123456789 Ends With 9e1 Ends With ``,@usn5:0xabc Contains 0}]->(:`7esn`{@usn6:`2esn`[``..]}) On Match Set [$0[00..],0.e0 =~01234567 =~01234567].`5esn`! =False In 1.e1 In $12 On Match Set `2esn` =`8esn`[0x0..]"),
    octest:ct_string("Remove Extract(usn1 In 123.654 =~.e0 =~9e0 Where #usn7 Ends With 9e0|7 In 1e1).usn1!,{`5esn`:1.e1 Is Null Is Null,`6esn`:9e12 In 123.654 In True}.usn2 Remove [$usn1[#usn8..`8esn`][7..`4esn`],`5esn` Ends With 0x0].`2esn`?,`3esn`:``:`6esn`,All(`3esn` In 999 Where .0[..False]).``! Union All Merge (((`6esn` {`7esn`:12e12 Ends With 0e0,`8esn`:$_usn4[False..@usn6][`4esn`..$1000]})-[:#usn7|`5esn`]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null})<-[`3esn`:usn2|:``]-(_usn3 {`3esn`:'s_str'[$`6esn`..][$0..]}))) On Match Set Any(_usn4 In 12.e12 Is Null Is Null Where 0x0[$`2esn`..'s_str'][$@usn5..1.e1]).`1esn`! =`` In False In True,_usn3(0[1e1..00]).``! =`7esn` Contains .0 Contains #usn8"),
    octest:ct_string("Create ({@usn6:#usn8 =~#usn7 =~0x0,`7esn`:$usn1 Ends With $`2esn`})<-[?:usn1|#usn7 *0Xa]->(:`3esn`{`7esn`:12.e12[.12..$_usn3][0e0..9e0],`7esn`:0X7[..True][..01234567]}),((`4esn` {_usn4:$`2esn`[$``..12e12]})<-[`1esn`?:`3esn`|_usn4{_usn4:12e12 Ends With $_usn4 Ends With $`2esn`,``:.12 Is Not Null}]-(:`1esn`:@usn6{`5esn`:.e12[$_usn4..0],`4esn`:$#usn8 In True In #usn7})<-[?:usn1|#usn7 *0Xa]->(`1esn` :usn2{`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]})) Detach Delete None(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where .e12 =~@usn5) Is Not Null Is Not Null,Extract(#usn8 In 07['s_str'][$@usn6] Where 7 =~$1000 =~$`5esn`|\"d_str\"[1.e1][01234567])[..(`6esn` :`1esn`:@usn6{#usn7:01234567 In \"d_str\"})<-[`1esn`?:`3esn`|_usn4 *01234567..123456789]->(#usn7 {#usn7:999 Contains $`7esn` Contains usn2})][..None(_usn4 In 12.e12 Is Null Is Null Where 9e1 =~$0)],7 Contains 1000 Contains $usn1 Merge ((`4esn` :usn2)<-[:#usn7|`5esn`*{`8esn`:01[$0],``:0xabc Is Not Null Is Not Null}]-(_usn3 :`7esn`{#usn7:123.654 =~.e0 =~9e0,_usn3:`1esn`[Null..]})) On Create Set _usn4 =All(usn1 In 0xabc Is Not Null Is Not Null Where .12[..07])[..[`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $usn2[12.0..][`8esn`..]|$7[`7esn`][123.654]]][..Any(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1e1 Contains 0Xa)] On Match Set usn2 =Single(`6esn` In 1000[12.e12][#usn7] Where $`3esn` Starts With 01234567 Starts With $`5esn`) Ends With ``(0X7[..True][..01234567]) Ends With [0.12['s_str'..$0][$usn1..9e0]] Union All Match `2esn`=((#usn7 {@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})<-[:_usn4|_usn3]-(#usn8 :`8esn`{_usn4:usn2 In 1e1 In `4esn`})),`7esn`=((#usn8 :#usn8:#usn7{@usn6:$#usn8[0e0..][07..],``:$`7esn` =~1.e1 =~0.e0})<-[`1esn`?:`3esn`|_usn4{_usn4:12e12 Ends With $_usn4 Ends With $`2esn`,``:.12 Is Not Null}]-(:`1esn`:@usn6{`5esn`:.e12[$_usn4..0],`4esn`:$#usn8 In True In #usn7})) Union All Remove Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0).`5esn`,usn1:_usn4"),
    octest:ct_string("Return Distinct *,[.12 Is Null,12 Ends With 0 Ends With Null,0x0 =~@usn5 =~01][{usn2:$`6esn`[.e12]}] As @usn5 Order By $7[$12] Descending,[999 Contains $`7esn` Contains usn2,$999[9e0..010][999..010],1000 Is Not Null] Is Null Asc,{usn2:@usn5[$`1esn`..][$7..],@usn6:$#usn8[0xabc..usn2]} Is Not Null Is Not Null Desc Skip `1esn`[0] Limit 0 Is Not Null Is Not Null With  (`5esn` {_usn3:1.e1 Is Null Is Null})<-[_usn3?:#usn7|`5esn` *..0x0]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})<-[?:@usn5|:@usn6]-(`7esn` {@usn6:.e0[123456789..][$`2esn`..],``:$0[`5esn`][9e12]})[`8esn`()..][[`7esn` In $`8esn`[0.12][12] Where 9e0[123456789..0][12.0..@usn6]]..] As #usn8,$0 Starts With `5esn` Starts With 0 Order By [.0[@usn6..],`2esn`[`3esn`..],Count(*) Contains 12e12 Contains 0xabc][..{usn1:#usn7 Is Not Null Is Not Null,`6esn`:$12[0.0..]}][..(:usn2{usn1:_usn4[.._usn4],@usn6:@usn5 In .e0 In \"d_str\"})-[?:`8esn`|@usn6 *0xabc..{usn1:$#usn7[..$999][..9e1]}]-(:`6esn`:`3esn`{@usn6:#usn8 Is Not Null,usn2:1e1 Is Null})-[usn1{`1esn`:`7esn` Contains .0 Contains #usn8}]->(_usn3 {usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`4esn`:1.e1 Is Null Is Null})] Ascending,[#usn8 In 0x0[_usn4..] Where $_usn3 Is Not Null] Is Not Null Is Not Null Ascending,1.e1 Desc Limit Count(*) Ends With 7 Ends With 0 Where 12.e12 Contains 's_str' Contains 0.12"),
    octest:ct_string("Return Distinct .e1[01234567] As `6esn`,01 In $7 In $1000 As #usn7,$`1esn` Starts With True Starts With @usn5 Order By @usn5 In .e0 In \"d_str\" Asc Create `4esn`=((:`8esn`)-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :_usn3:@usn5)) Union Remove Single(#usn8 In 0x0[_usn4..] Where 0.e0 Is Not Null Is Not Null).`6esn`!,usn2:usn2 Return Distinct Count(*)[..$_usn3][..$usn2] As `7esn`,.e0[..$`5esn`][..``] As #usn7 Order By 1.e1[0x0][$123456789] Descending Limit 9e1[$`5esn`..][`5esn`..] Create (((usn1 :_usn4)-[`2esn`? *7]->(`` :``:`6esn`{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]})-[`2esn`?:`3esn`|_usn4]->({`1esn`:1e1 Starts With 010}))),(((:`3esn`{`7esn`:$123456789[`4esn`..]})-[@usn6?$`3esn`]->(@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->(`8esn` :#usn7)))"),
    octest:ct_string("Detach Delete 1e1 Starts With 010 Merge `6esn`=(_usn4 {`4esn`:01234567[..00][..$`3esn`],usn1:00[\"d_str\"][False]}) On Match Set Extract(#usn8 In 0x0[_usn4..] Where `8esn`[0x0..]|.e12 Contains `7esn` Contains 999).#usn7 =$#usn8 Contains `5esn` Contains $#usn8 Union Remove All(`5esn` In $usn2 Contains $`1esn` Where 0e0['s_str'])._usn4,[$#usn8 In True In #usn7,`2esn`[_usn4..`7esn`],$usn2 Ends With 0 Ends With 12.0].`2esn`,{_usn3:01[$0]}.@usn5? Match `1esn`=((:#usn7{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]})),(((:#usn7{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})-[{usn1:Count(*)[..12][..$999],#usn8:usn1 In 010}]->(:`7esn`{#usn8:12e12 Ends With `6esn`,_usn4:0Xa Contains $#usn8 Contains `5esn`})-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]->(_usn3 {`3esn`:$@usn5 Is Not Null Is Not Null}))) Where 123456789 Starts With #usn8 Merge ((_usn3 )<-[?{`3esn`:'s_str'[$`6esn`..][$0..]}]->(`2esn` :@usn6)) Union Match `4esn`=({_usn3:.e12 =~\"d_str\" =~@usn5}) Where $``[$#usn8] Remove `5esn`(Distinct 1e1 Ends With 's_str' Ends With $@usn6,.e1 =~\"d_str\" =~'s_str').@usn6!,usn1:@usn5"),
    octest:ct_string("Delete $`3esn` Contains $12 Contains 1000,'s_str' In usn1 In 12.0,`3esn` Starts With $@usn5 Starts With 0xabc Merge ``=((({`3esn`:.e12[$_usn4..0],usn1:00[$0..usn2][$_usn4..$999]})<-[_usn4?:_usn3|`6esn`]-(:usn2$`4esn`)<-[``?:#usn8|:`6esn`{usn1:$#usn7[..$999][..9e1]}]->(`1esn` :`4esn`:usn2))) On Create Set `7esn`:`3esn`,({``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]})<-[:@usn6 *7{``:9e0 Is Null Is Null,`3esn`:.0[@usn6..]}]->(`8esn` :``:`6esn`).`5esn`! =None(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $@usn6 Is Null Is Null)[None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where .e0 Is Not Null)],`4esn`+=False In 1.e1 In $12 On Create Set @usn6 =[0Xa[..$`2esn`][..00]] Starts With (@usn6 )-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(:`7esn`{`2esn`:.e12 Is Not Null Is Not Null,`4esn`:_usn4[1000..``]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`6esn` ),`6esn`+=$12[usn2][12.0] Union All Return ``[{`6esn`:12[`5esn`..$`3esn`][0.12..usn2]}..],`7esn`[..$999][..0.0],Single(`6esn` In 1000[12.e12][#usn7] Where $`3esn` Starts With 01234567 Starts With $`5esn`) Ends With ``(0X7[..True][..01234567]) Ends With [0.12['s_str'..$0][$usn1..9e0]] As `3esn` Skip 1.e1[$usn1..$`7esn`] Limit `1esn` Is Null Merge #usn8=(:@usn5{_usn4:$`5esn`[0][.12]})<-[@usn5?{usn1:7 Ends With `3esn` Ends With $`2esn`}]-(_usn4 ) Return Distinct Null Contains $_usn3 As `4esn` Order By (`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`` )[..`2esn`(Distinct `7esn`[_usn4..][Count(*)..],0[1.e1..#usn7])][..(_usn4 {`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})<-[@usn5?:_usn4|_usn3{#usn7:0.12 Is Null Is Null,#usn8:$1000 =~00}]-(`4esn` :_usn3:@usn5)-[@usn5? *01234567..123456789{`2esn`:01234567[`6esn`..]}]-(@usn5 {`4esn`:0.12 Is Null})] Ascending Limit 1e1 Contains 0Xa"),
    octest:ct_string("Return *,$``[$_usn4][$`3esn`] Limit @usn5[$`1esn`..][$7..] With  0Xa Contains 12.e12 As `6esn` Limit _usn3 =~$12 Where 1.e1[0..]"),
    octest:ct_string("Unwind `2esn` =~$`2esn` =~$`4esn` As @usn6 With  True[07],usn1 =~_usn4 =~$usn1 As `7esn` Limit [`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]] Is Null Is Null Detach Delete `1esn`[9e12..],0xabc Ends With Count(*) Ends With 0x0,`3esn`[0x0][$`5esn`] Union Create (((`2esn` {_usn3:0[1e1..00]})<-[{#usn8:999}]->(:usn1:``{#usn7:#usn8[$`7esn`..12.0],`1esn`:9e12 In 123.654 In True})-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-(:@usn5{#usn8:usn1 Is Null,`8esn`:7 In 1e1}))),@usn6=(_usn3 {`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`}) Remove None(`7esn` In $`8esn`[0.12][12] Where @usn5[..$999][..$0]).#usn7,Extract(#usn8 In 07['s_str'][$@usn6] Where 010[`1esn`..`4esn`]).usn2 Union Unwind $0[07..] As `4esn` Merge ``=(((`1esn` :`2esn`:@usn5{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})-[``:_usn4|_usn3]-(:``:`6esn`{@usn6:$`4esn`[$@usn5..`7esn`],`5esn`:_usn4 Starts With `6esn` Starts With $`8esn`})<-[`3esn`:usn2|:``]-(:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`}))) On Create Set [`6esn` In 1000[12.e12][#usn7] Where `7esn` Contains .0 Contains #usn8|123456789[..0]].`` =9e1 =~$_usn4 =~$usn1,#usn7:``:`6esn`,(#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]})<-[@usn6{#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]}]-(#usn8 :`8esn`)<-[? *..010{#usn8:$usn1[usn1..$`8esn`][12e12..$``],usn1:'s_str' Ends With $7}]->({@usn6:#usn8 =~#usn7 =~0x0,`7esn`:$usn1 Ends With $`2esn`}).#usn7! =0.0 =~$#usn7 =~`1esn` On Match Set #usn8+=@usn5 Is Not Null Is Not Null,``+=Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) Ends With [1.e1[#usn7][1.e1],Null =~Count(*)] Ends With [#usn8[..0X0123456789ABCDEF][...0],$usn1 Is Not Null Is Not Null],`3esn`+={`1esn`:$`8esn`[``..True][1000..0.12]} Ends With Any(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where Count(*)[..`5esn`]) Ends With Single(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 010 Is Null Is Null) With  Count(*)[..$_usn3][..$usn2] Skip .0[01234567] Limit (@usn5 :`2esn`:@usn5$#usn8)-[`6esn`?:`1esn`|@usn6 *0xabc..]->(:_usn4{_usn3:`1esn`[Null..]}) Starts With 12.0 Starts With Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) Where 0.e0[.e12]"),
    octest:ct_string("Remove Extract(usn1 In 0xabc Is Not Null Is Not Null|9e0 Starts With 0e0 Starts With $`5esn`).@usn5,(_usn3 :@usn6{@usn5:0e0 =~False =~.12})<-[@usn6? *999{`5esn`:1e1[\"d_str\"..]}]-(`1esn` :`8esn`)-[`2esn`:#usn8|:`6esn`]->(@usn5 :`2esn`:@usn5{@usn6:123456789 =~#usn8 =~$0})._usn4 Remove {usn2:`7esn` Contains .0 Contains #usn8}._usn3,(usn2 :@usn6{#usn7:$`7esn` Starts With 07 Starts With `1esn`,`2esn`:$123456789[..$usn2]})<-[?:#usn8|:`6esn`*]->(@usn6 :@usn5{`8esn`:$@usn6 Contains 0e0}).#usn7?"),
    octest:ct_string("Detach Delete {#usn7:0.e0 Contains @usn5 Contains 0X7} =~[$999[01234567][@usn5],_usn4 In .0 In .12,$#usn8[1.e1]] =~{_usn4:$`2esn` Ends With 1e1},$7[..$``],07 =~.12 Return 7 Contains 1000 Contains $usn1,usn2 Contains 07 Contains False As _usn4,{#usn8:.e0 Ends With $`1esn` Ends With 1000}[Filter(#usn8 In 07['s_str'][$@usn6] Where $12[0.0..])][Filter(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..])] Order By $#usn7[123456789..][$`4esn`..] Asc Limit #usn8[..0X0123456789ABCDEF][...0] Return $1000 =~$`8esn` =~$`2esn` As `5esn` Limit @usn5 Ends With 1000 Union Unwind [False Starts With $123456789][[usn1 In 0xabc Is Not Null Is Not Null Where 0x0[$7..][`7esn`..]|00 In 1000]..[.e12 Is Null Is Null]][Extract(#usn8 In 07['s_str'][$@usn6] Where 7 =~$1000 =~$`5esn`|\"d_str\"[1.e1][01234567])..Single(`3esn` In False In $`2esn` In 1e1 Where .e12[..$_usn4][..#usn7])] As `` Return Extract(`3esn` In False In $`2esn` In 1e1 Where `` Contains 010 Contains $1000|@usn5['s_str'..$`2esn`])[`5esn`(0e0['s_str'])][None(`6esn` In 0x0[9e0..] Where 0xabc Is Not Null Is Not Null)] As @usn5 Skip _usn4[#usn7..#usn8] Limit All(`2esn` In $``[$#usn8] Where $`2esn`[.._usn3]) =~[`6esn`[_usn3],12.0 In 07] =~[123456789[0.0..`2esn`][1.e1..$_usn4]] Detach Delete None(`6esn` In 1000[12.e12][#usn7] Where 9e12[\"d_str\"]) Ends With None(`6esn` In 1000[12.e12][#usn7] Where usn1[9e1..]) Ends With [`5esn` In 12.e12 In 1000,False In $`2esn` In 1e1],.e1 Ends With $123456789,(@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]})<-[``?:_usn4|_usn3 *0xabc..{#usn8:$#usn8[..9e12][..$`3esn`],@usn5:\"d_str\"[7..$999]}]->(`5esn` {usn2:`6esn` In $``}) Is Not Null Is Not Null"),
    octest:ct_string("Unwind 0[1.e1..#usn7] As `7esn` Return Distinct $`4esn`[$@usn5..`7esn`] Merge `4esn`=(:usn2{usn1:_usn4[.._usn4],@usn6:@usn5 In .e0 In \"d_str\"})<-[_usn3?:#usn7|`5esn` *..0x0]->(`7esn` {#usn7:1e1[`3esn`]})"),
    octest:ct_string("Return *,$123456789 Is Null Is Null,[`2esn` In $#usn8 Starts With usn2 Starts With .12 Where .0 =~$@usn5 =~1.e1][Any(`3esn` In 999 Where $`5esn`[.e1][#usn8])..Single(`5esn` In $usn2 Contains $`1esn` Where $#usn8[..123456789][..`2esn`])][count($usn1 Starts With Null Starts With $``)..`3esn`(Distinct 7[$1000][1000])] As _usn4 Skip {@usn6:010[`1esn`..`4esn`]}[..None(#usn8 In 0x0[_usn4..] Where 1000 Ends With $`5esn`)][..[010[`1esn`..`4esn`],$`6esn`[$`1esn`..]]]"),
    octest:ct_string("Detach Delete 0 In `8esn`,usn1[..`7esn`][..$`8esn`],\"d_str\" Ends With $1000 Ends With usn2 With  _usn4[#usn7..#usn8] Order By $#usn8 In `` Desc Limit @usn6(Distinct 0xabc Contains 0)[{_usn4:$`2esn` Ends With 1e1}..][All(_usn4 In 12.e12 Is Null Is Null Where 0e0 =~False =~.12)..] Where 7 Starts With $@usn6 Union All Return Distinct *,$0 Starts With `5esn` Starts With 0 Order By `6esn`[`7esn`..$_usn3][9e0..#usn8] Desc,`5esn` In $usn1 In `4esn` Descending,$`6esn`[00] Ascending Limit \"d_str\"[..01234567][..$1000] Optional Match `5esn`=((`3esn` :`7esn`$`6esn`)<-[?:#usn7|`5esn`{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}]->(@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})-[#usn8?:``{`7esn`:$`5esn` Starts With $`3esn` Starts With 1.e1}]-(`8esn` )),`1esn`=(((usn1 :`1esn`:@usn6{`2esn`:$123456789[..$usn2],_usn4:0X0123456789ABCDEF In _usn3})<-[{#usn8:999}]->(:usn1:``{#usn7:#usn8[$`7esn`..12.0],`1esn`:9e12 In 123.654 In True})-[``?:#usn8|:`6esn`]-(:#usn8:#usn7{`8esn`:12e12 Ends With 0e0}))) With  *,usn2 Order By $usn1 Starts With Null Starts With $`` Desc,$usn2 Starts With $`7esn` Starts With _usn4 Desc,`3esn` Starts With $999 Starts With .e1 Descending Skip (`3esn` :usn2{#usn7:usn2[`6esn`..][.0..],#usn7:\"d_str\"[..$_usn3]})<-[?{`3esn`:'s_str'[$`6esn`..][$0..]}]->(`2esn` :@usn6)<-[?{`8esn`:$`7esn`[usn2],`1esn`:1000 Is Not Null}]-(#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]}) Is Null Limit 0.e0 Ends With $123456789 Where $`7esn`[..0X7][..False] Union All Optional Match ((`` :usn2)<-[_usn4?:`3esn`|_usn4 *7]-(`5esn` :usn1:``))"),
    octest:ct_string("Optional Match #usn7=((#usn7 :`5esn`)<-[`2esn`?:`5esn`|:`1esn`]->(:usn2)),((_usn3 :`6esn`:`3esn`{`7esn`:1000 Ends With 01234567 Ends With usn1})-[usn2?:_usn4|_usn3{#usn8:12.0[`3esn`][_usn3]}]-(usn2 :`4esn`:usn2{`3esn`:@usn5[$`1esn`..][$7..]})<-[usn2:`3esn`|_usn4]-(usn2 :@usn6{@usn5:#usn8[True..#usn7][01..@usn5]})) Union All Create (((:_usn4{_usn3:`1esn`[Null..]})-[`2esn`? *7]-(#usn8 :_usn3:@usn5{`3esn`:@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`],`4esn`:0e0 Is Null})<-[?:#usn8|:`6esn`*]->(@usn6 :@usn5{`8esn`:$@usn6 Contains 0e0}))),`6esn`=((`3esn` :`2esn`:@usn5)<-[usn2?:#usn8|:`6esn` *7]-(:@usn6)) Return Distinct *,usn1 Is Null Order By #usn7 Is Not Null Descending,$`3esn` Ends With @usn6 Ends With 123.654 Asc Skip {`7esn`:usn2 Starts With 00}[(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})<-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-({@usn6:`5esn` Ends With $999})..][(:`1esn`:@usn6{_usn3:$usn2 =~`6esn` =~`1esn`,`6esn`:0[1e1..00]})-[{_usn4:$`8esn` Contains .0 Contains 0.12}]->(:usn1:``{_usn4:1000[12.e12][#usn7]})-[@usn6 *00]->(`4esn` {_usn4:$`2esn`[$``..12e12]})..] Limit (@usn6 :_usn4{`2esn`:\"d_str\"[..$_usn3],@usn6:$7[`7esn`][123.654]})-[``:`2esn`|:`7esn` *..0x0{`3esn`:`` Contains 010 Contains $1000}]->(:_usn4)<-[:`5esn`|:`1esn`{#usn8:`7esn` Is Null,`4esn`:False[$12]}]->(_usn3 :@usn5{`5esn`:12e12[..9e12][..$@usn6]})[Single(`3esn` In 999 Where usn1[$`1esn`..])..] Union All Return *,$`6esn` Starts With $@usn6 Order By Any(`3esn` In False In $`2esn` In 1e1 Where #usn7[.12][usn2])[{#usn7:0e0['s_str'],`1esn`:$#usn8[1.e1]}..[@usn6[.0],0X0123456789ABCDEF Is Not Null,0x0[$`2esn`..'s_str'][$@usn5..1.e1]]][[`4esn` Ends With 's_str' Ends With @usn6]..$`5esn`] Asc,0Xa[Count(*)][0xabc] Desc,9e0[0Xa..][`3esn`..] Desc Remove All(usn1 In 123.654 =~.e0 =~9e0 Where $`7esn` Starts With 07 Starts With `1esn`).`4esn`!,$`5esn`.`4esn`? Merge `4esn`=((:`8esn`)-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :_usn3:@usn5))"),
    octest:ct_string("Remove {_usn4:12 Is Null Is Null}.`2esn`?,Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where `` Contains $_usn3 Contains 0e0|$@usn5 Is Not Null Is Not Null)._usn4 Remove Extract(`1esn` In 07 Ends With $_usn4 Ends With 0.e0|$`7esn` Starts With 07 Starts With `1esn`).#usn8!,Extract(`3esn` In @usn6[..\"d_str\"][..01] Where $@usn6 Is Null|@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`]).usn2! Union Create (_usn4 :usn1:``{`5esn`:$0[`5esn`][9e12],``:#usn7[False..][123.654..]})<-[_usn4]-(`8esn` :usn1:``{`7esn`:1.e1[0..],``:.e0 Contains 999})-[#usn8:@usn6]-(:`3esn`{`7esn`:$123456789[`4esn`..]}),({`4esn`:$123456789 =~usn1 =~0xabc,_usn4:True}) Optional Match (#usn7 {_usn4:`1esn`[$7][0Xa]}),@usn5=((`2esn` )-[:@usn5|:@usn6 *999{`5esn`:0x0 =~@usn5 =~01}]->(:``:`6esn`{`7esn`:12e12 Ends With 0e0,`8esn`:$_usn4[False..@usn6][`4esn`..$1000]})-[`3esn`? *12{@usn5:$#usn8[..123456789][..`2esn`],#usn7:12.0[..0X7]}]-(:`7esn`{@usn6:`2esn`[``..]})) Where 123.654 =~.e0 =~9e0 Create `8esn`=(((`1esn` {@usn6:`1esn`[$7][0Xa]})<-[`4esn`?]->(@usn6 :``:`6esn`{#usn7:9e1 Contains _usn3})<-[@usn5?:_usn4|_usn3 *..010{@usn6:$123456789[`1esn`..]}]-(`4esn` :``:`6esn`{#usn7:`2esn`[`3esn`..],usn2:$usn2 Starts With $`7esn` Starts With _usn4}))),`2esn`=((_usn4 :`6esn`:`3esn`)<-[usn1:#usn8|:`6esn` *0xabc..]->(`8esn` :`1esn`:@usn6)<-[:`5esn`|:`1esn`{#usn8:`7esn` Is Null,`4esn`:False[$12]}]->(_usn4 {`2esn`:1.e1 Is Not Null Is Not Null})) Union All Detach Delete 0Xa Contains $`6esn`,01[#usn8..1000],$#usn8 Is Null Is Null Merge usn2=(((`` :usn1:``{#usn7:$123456789[`4esn`..]})<-[@usn5?{`7esn`:`6esn` In $``}]->(usn1 {_usn3:#usn7 Ends With 0.12})<-[? *123456789..{`7esn`:.e12 =~@usn5,`3esn`:`5esn`[0e0..]}]-(`4esn` ))) On Match Set @usn6+=Single(`3esn` In @usn6[..\"d_str\"][..01] Where 12[`5esn`..$`3esn`][0.12..usn2])[[`6esn` In 0x0[9e0..] Where $#usn8[0e0..][07..]|0 Is Not Null Is Not Null]..][(`6esn` :usn1:``)<-[``?:usn1|#usn7]-(@usn5 :`2esn`:@usn5{@usn6:123456789 =~#usn8 =~$0})..],usn1+=Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 123.654 Is Not Null Is Not Null)[{usn1:$7[$12]}][Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where \"d_str\"[..$_usn3])]"),
    octest:ct_string("Remove Single(_usn4 In 12.e12 Is Null Is Null Where $7 Ends With 12.e12 Ends With `1esn`).@usn6,Extract(`3esn` In @usn6[..\"d_str\"][..01] Where .e0[..$`5esn`][..``]|$#usn8 Starts With usn2 Starts With .12).usn2?,Any(#usn8 In 0x0[_usn4..] Where 0xabc[123.654][12]).`3esn`? Remove {`6esn`:Count(*) Starts With 01234567 Starts With 0x0,#usn8:`2esn` Ends With Null Ends With 0xabc}.``?"),
    octest:ct_string("Unwind 00 =~999 =~07 As `4esn` Match (({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`4esn` :``:`6esn`)-[@usn5{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(`8esn` :`1esn`:@usn6)) Unwind $`6esn`[.e12..$`6esn`][$#usn7...0] As _usn4 Union Unwind $`2esn` Ends With 1e1 As `5esn`"),
    octest:ct_string("Unwind Extract(`3esn` In 999 Where .e12 Is Null Is Null|$`7esn`[usn2]) Is Not Null As `2esn` Union All Return Distinct *,$`` Is Null Is Null As usn1 Order By [`6esn` In 0x0[9e0..] Where \"d_str\"[.0][9e0]][{`4esn`:$#usn7 =~usn2 =~`3esn`,_usn4:01 In 0.12 In .e12}..][None(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $123456789 Is Not Null)..] Descending,$`6esn`[.e12] Ascending,[.0[@usn6..],`2esn`[`3esn`..],Count(*) Contains 12e12 Contains 0xabc][..{usn1:#usn7 Is Not Null Is Not Null,`6esn`:$12[0.0..]}][..(:usn2{usn1:_usn4[.._usn4],@usn6:@usn5 In .e0 In \"d_str\"})-[?:`8esn`|@usn6 *0xabc..{usn1:$#usn7[..$999][..9e1]}]-(:`6esn`:`3esn`{@usn6:#usn8 Is Not Null,usn2:1e1 Is Null})-[usn1{`1esn`:`7esn` Contains .0 Contains #usn8}]->(_usn3 {usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`4esn`:1.e1 Is Null Is Null})] Asc Skip $_usn3[..usn2]"),
    octest:ct_string("Optional Match usn2=(@usn5 ) Optional Match #usn8=(:@usn5{_usn4:$`5esn`[0][.12]})<-[@usn5?{usn1:7 Ends With `3esn` Ends With $`2esn`}]-(_usn4 ),`7esn`=((`3esn` :usn1:``)<-[`5esn`?:_usn3|`6esn` *..0X0123456789ABCDEF{`5esn`:usn2[.e1..][01234567..],usn1:999 Is Not Null}]->({@usn5:_usn3[_usn4..$`2esn`][$123456789..9e12]})<-[ *0Xa{#usn8:_usn4[#usn7..#usn8],usn2:9e0[0..1e1]}]->(#usn8 :#usn8:#usn7{@usn6:$#usn8[0e0..][07..],``:$`7esn` =~1.e1 =~0.e0})) Match `2esn`=((`2esn` {_usn3:Null =~Count(*),@usn5:7 =~$1000 =~$`5esn`})<-[#usn7:`1esn`|@usn6 *999{`4esn`:0X7[..`5esn`][..$`7esn`]}]-(:`1esn`:@usn6{`1esn`:12.0[9e12]['s_str'],`3esn`:$123456789 Is Not Null}))"),
    octest:ct_string("With Distinct *,$_usn4 In $12 As `4esn`,`5esn` In $usn1 In `4esn` As @usn6 Limit Any(`3esn` In 999 Where .12[0X0123456789ABCDEF..]) =~(:`7esn`{@usn6:`2esn`[``..]})<-[?{``:Null Is Not Null Is Not Null}]-(:_usn4{@usn6:$123456789[`1esn`..]}) =~[12e12 Ends With `6esn`] Where 1e1[`3esn`] Union Return Distinct *,12.0[`3esn`][_usn3],`8esn` Is Not Null Order By 's_str' Is Not Null Is Not Null Desc,{_usn4:\"d_str\" Ends With $`3esn`,``:#usn8 =~#usn7 =~0x0}[Single(usn1 In 0xabc Is Not Null Is Not Null Where `7esn`[..01])..{`2esn`:.0[@usn6..]}][[1000[12.e12][#usn7],`` Is Not Null Is Not Null]..None(#usn8 In 0x0[_usn4..] Where `8esn` Ends With $`1esn`)] Descending Limit 0.12[$usn1..$7] Optional Match @usn5=(`` :#usn8:#usn7{usn1:7 Ends With `3esn` Ends With $`2esn`})-[`6esn` *00]->(`` :`5esn`),((#usn8 :_usn3:@usn5{`3esn`:@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`],`4esn`:0e0 Is Null})) Where 01[..0X7] Union All Create `1esn`=(((_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[`7esn`?:`2esn`|:`7esn`]->(`3esn` {#usn8:#usn7 =~$`8esn`})-[ *07{`1esn`:$``}]->(`1esn` :usn1:``))) Remove `4esn`(123.654[$`1esn`],$123456789 In 010 In $`8esn`).`7esn`! Remove {_usn4:0.12[123456789..]}.`1esn`,[7 =~False,1.e1[$`7esn`]].`7esn`"),
    octest:ct_string("Return Distinct .e1 =~$#usn8 Order By [`3esn` In @usn6[..\"d_str\"][..01] Where `1esn`[$7][0Xa]|.e0 Contains 999] In (_usn4 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8) Descending,None(`3esn` In False In $`2esn` In 1e1 Where .0[@usn6..]) Is Null Is Null Asc,usn1[9e1..] Ascending Remove (#usn8 :`4esn`:usn2)<-[:#usn7|`5esn`*{`8esn`:01[$0],``:0xabc Is Not Null Is Not Null}]-(`1esn` {#usn7:$`7esn`[`2esn`]}).`3esn`? Union Unwind .e1 =~$#usn8 As `4esn`"),
    octest:ct_string("Create _usn3=((`8esn` :``:`6esn`)<-[#usn7? *123456789..{`2esn`:999 Contains $`7esn` Contains usn2}]-({@usn6:$@usn5 =~$usn2 =~True,`4esn`:$#usn8 =~7 =~.12}))"),
    octest:ct_string("Delete `6esn`[.._usn3][..0Xa] With  *,@usn6(Distinct 0xabc Contains 0)[{_usn4:$`2esn` Ends With 1e1}..][All(_usn4 In 12.e12 Is Null Is Null Where 0e0 =~False =~.12)..] As @usn6,[_usn3 =~$12,.0[..False],Null In 0xabc] Is Null Is Null Order By $_usn3[0e0..][12.0..] Ascending,#usn8[..0X0123456789ABCDEF][...0] Descending,Filter(`7esn` In $`8esn`[0.12][12] Where 0Xa[..$`2esn`][..00]) Is Null Is Null Desc Merge (((:`5esn`{_usn4:\"d_str\"[.0][9e0],usn1:.e12 Is Not Null Is Not Null})<-[ *..0X0123456789ABCDEF]->(`1esn` {`5esn`:$`7esn` Ends With $_usn4 Ends With `5esn`,#usn8:'s_str'[$#usn8]})<-[usn2?:`7esn`{``:`5esn`[usn1]}]->(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]}))) On Match Set usn2+=[`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $1000[00..]|`1esn`[usn1]][{usn2:$`6esn`[.e12],`4esn`:`4esn` In .12 In $#usn8}..],@usn5+=@usn6[..$usn1][..010],[`6esn` In .e0['s_str'..][$`8esn`..] Where 0.12[123456789..]|$`3esn` Ends With @usn6 Ends With 123.654].`8esn`! =7[usn1][$7]"),
    octest:ct_string("Remove Filter(`5esn` In $usn2 Contains $`1esn` Where Count(*)[_usn3..]).usn2,{usn2:0Xa Contains $`6esn`,_usn3:\"d_str\" Ends With $`3esn`}.`6esn`! Unwind True Ends With `6esn` Ends With 9e0 As `` Return Distinct $0[00..] As #usn8,$`6esn` Starts With usn1,\"d_str\" Starts With _usn4 Starts With $_usn4 As `5esn` Order By 1.e1 Ascending Limit $`8esn`[0.12][12] Union All Merge @usn5=((_usn3 {usn2:0})-[`7esn`? *0Xa{`3esn`:Count(*)[_usn3..]}]->({usn1:$123456789[`4esn`..],usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`]})) On Create Set `3esn`+=1.e1[$`7esn`],[.e0 Is Not Null,9e1 Contains 07,True[7][``]].#usn7 =0e0['s_str'] On Create Set `5esn` =9e12 =~0.12 =~0.0,`7esn` =999 Contains $`7esn` Contains usn2,usn1+=Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 123.654 Is Not Null Is Not Null)[{usn1:$7[$12]}][Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where \"d_str\"[..$_usn3])] Union All Create ``=(:`3esn`{`1esn`:Count(*) Ends With $#usn8 Ends With 0Xa})-[@usn5:@usn6]-(:`4esn`:usn2{_usn4:`1esn`[$7][0Xa]}) Merge `7esn`=(`` :`5esn`)-[:@usn5|:@usn6]->(`5esn` {usn2:`6esn` In $``})<-[:`4esn` *..0X0123456789ABCDEF{`1esn`:0X7[..True][..01234567],``:`1esn`[usn1]}]->(@usn6 :usn1:``{usn1:#usn7 Is Not Null Is Not Null,`6esn`:$12[0.0..]}) On Create Set [#usn8 In 0x0[_usn4..] Where 7 =~$1000 =~$`5esn`|$`1esn` Is Not Null Is Not Null].`2esn` =`2esn`[``..],`8esn`(00['s_str'],12e12 Ends With 0e0).#usn7? =#usn7 In #usn7 On Match Set @usn6 =(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[#usn7:`1esn`|@usn6 *0..]-(@usn6 :usn2) In (`5esn` {_usn3:1.e1 Is Null Is Null})<-[_usn3?:#usn7|`5esn` *..0x0]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})<-[?:@usn5|:@usn6]-(`7esn` {@usn6:.e0[123456789..][$`2esn`..],``:$0[`5esn`][9e12]}) Delete _usn3 Is Not Null,All(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $123456789 Is Not Null) Is Null Is Null,Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0) Is Not Null"),
    octest:ct_string("Optional Match `1esn`=((:`4esn`:usn2$`7esn`)<-[_usn3:`3esn`|_usn4]->(_usn3 :`4esn`:usn2)) Where $@usn5[$_usn3..Null] Union All Return Distinct 123456789 =~@usn5 =~$`5esn` As @usn6 Delete `2esn`[0.e0..$999],$`7esn` Contains 010 Contains $_usn3,$@usn6 In 12 In 12e12 Detach Delete `6esn` Contains \"d_str\" Contains 0X7 Union All With  [$999[@usn5..][Null..]] Ends With ({usn2:0Xa Contains $`6esn`,_usn3:\"d_str\" Ends With $`3esn`})-[@usn5? *00{@usn5:usn1 Ends With 1.e1 Ends With `4esn`}]-(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})-[:`5esn`|:`1esn`]-(`2esn` ) As `7esn` Order By Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0) Is Not Null Descending"),
    octest:ct_string("Unwind Filter(`6esn` In 1000[12.e12][#usn7] Where 01 Starts With $`5esn` Starts With 01234567)[[0.12['s_str'..$0][$usn1..9e0]]..All(`3esn` In 999 Where 07 Ends With $_usn4 Ends With 0.e0)][Filter(`3esn` In 999 Where $0 Contains 7 Contains 1.e1)..Extract(`3esn` In @usn6[..\"d_str\"][..01] Where 1.e1[$`7esn`]|01234567[9e0][.0])] As #usn7"),
    octest:ct_string("Return *,12 Ends With 0 Ends With Null,Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null) =~[12 Is Null Is Null,9e0[$@usn6]] Order By $123456789 In `8esn` In 0X7 Descending,123456789[$_usn4..] Asc Skip `` Is Not Null Is Not Null Return Distinct [$123456789[`3esn`..`5esn`][1e1..$`5esn`],0x0 =~`5esn` =~$`8esn`,123.654[.e12..\"d_str\"]] In {#usn8:#usn7 In #usn7} In {usn1:7 Ends With `3esn` Ends With $`2esn`} As @usn5 Limit 1000[`1esn`..$12][$usn1..Null] Union Create (`7esn` :`1esn`:@usn6)-[`2esn`?:`8esn`|@usn6]-({`4esn`:True Contains .e1 Contains `2esn`}),(#usn8 :`6esn`:`3esn`$#usn7) Union All Detach Delete _usn3($123456789[..`3esn`][..`7esn`]) Is Null,{_usn3:Null =~Count(*),@usn5:7 =~$1000 =~$`5esn`} Starts With {`1esn`:0.12 Is Null Is Null,#usn8:.e12 =~@usn5} Starts With {`7esn`:0Xa Contains 0x0 Contains $#usn8},0xabc[..$999]"),
    octest:ct_string("Delete usn2[..1e1][..$_usn3] With  999 Ends With $`4esn`,12e12 Ends With 0 Ends With $@usn6 Order By $`3esn`[...0][..$#usn7] Asc,usn1[9e1..] Ascending,usn1 Is Null Is Null Desc Skip [usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..]|$`6esn`[.e12]] Contains [`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 01 Is Null|$`4esn`[$@usn5..`7esn`]] Where $`3esn` Starts With 01234567 Starts With $`5esn` Detach Delete Filter(`6esn` In 0x0[9e0..] Where `7esn`[`8esn`][#usn7]) Is Not Null Is Not Null"),
    octest:ct_string("With  *,`5esn` In 12.e12 In 1000 As _usn4 Skip $0[07..] Limit Any(`6esn` In 1000[12.e12][#usn7] Where True[$usn1..12][``..\"d_str\"])[..[_usn4 Starts With `6esn` Starts With $`8esn`,``[0X7..][$@usn6..],$usn2 Starts With 9e1 Starts With `7esn`]] Union All Delete @usn5 Is Null,$0 Is Not Null Is Not Null"),
    octest:ct_string("Detach Delete .12[...0],(`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`` )[..`2esn`(Distinct `7esn`[_usn4..][Count(*)..],0[1.e1..#usn7])][..(_usn4 {`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})<-[@usn5?:_usn4|_usn3{#usn7:0.12 Is Null Is Null,#usn8:$1000 =~00}]-(`4esn` :_usn3:@usn5)-[@usn5? *01234567..123456789{`2esn`:01234567[`6esn`..]}]-(@usn5 {`4esn`:0.12 Is Null})],Extract(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1|$`2esn` Is Not Null Is Not Null) =~[`7esn`[..01],1e1 =~$`8esn` =~`1esn`,$`6esn`[.e12..$`6esn`][$#usn7...0]] Delete `8esn`['s_str'..],{`8esn`:Count(*) Is Null Is Null,@usn5:.e0 Ends With $`1esn` Ends With 1000} Is Not Null Optional Match `1esn`=((:`4esn`:usn2$`7esn`)<-[_usn3:`3esn`|_usn4]->(_usn3 :`4esn`:usn2)) Where $@usn5[$_usn3..Null]"),
    octest:ct_string("With  *,9e1[$`3esn`][$`1esn`] As _usn4 Order By Filter(`6esn` In .e0['s_str'..][$`8esn`..]) Is Not Null Is Not Null Desc,`` Is Not Null Is Not Null Descending,None(`6esn` In .e0['s_str'..][$`8esn`..] Where #usn7 Ends With 0.12)[{usn1:$`6esn`[.e12..$`6esn`][$#usn7...0]}..Single(#usn8 In 07['s_str'][$@usn6] Where $#usn7[$`3esn`..$999])][Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 00[0X7..9e12]|$#usn7)..All(`6esn` In 1000[12.e12][#usn7] Where 12.e12 Is Not Null)] Ascending Where `2esn` Contains `3esn` Contains $@usn5 With Distinct *,#usn7(Distinct $999[@usn5..][Null..],010[`1esn`..`4esn`])[..{_usn3:0e0['s_str'],`6esn`:9e12[\"d_str\"]}][..{`5esn`:@usn6[$usn1][$`2esn`],`1esn`:12.0[9e12]['s_str']}],Extract(`3esn` In 999 Where .e12 Is Null Is Null|$`7esn`[usn2]) =~Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where @usn5['s_str'..$`2esn`]|$@usn5[$_usn3..Null]) =~Any(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where #usn7 In #usn7) As `2esn` Order By _usn4[7..$999] Desc Skip #usn8 Starts With 0 Limit .12 =~$#usn7 =~$``"),
    octest:ct_string("Merge ((:`5esn`)-[@usn5? *00{@usn5:usn1 Ends With 1.e1 Ends With `4esn`}]-(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})) On Match Set `7esn`+=.e1 Ends With $123456789 Remove 0.0.`2esn`?,`7esn`(Distinct `7esn`[_usn4..][Count(*)..],1000 Starts With 0e0 Starts With 0).`8esn`! With Distinct *,{_usn3:0[1e1..00]} Contains All(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $@usn5 =~$usn2 =~True) Where $`7esn` Ends With $_usn4 Ends With `5esn` Union All Remove ()<-[?:@usn5|:@usn6]->(#usn8 :`4esn`:usn2).@usn6!,`4esn`(.0[..False]).`6esn`? With  $0 Contains 7 Contains 1.e1,{@usn5:Count(*)[..$_usn3][..$usn2],@usn5:$1000[$usn1][.e1]}[Single(`6esn` In 1000[12.e12][#usn7] Where $usn2 Contains $`1esn`)..{#usn7:usn1 Ends With .0 Ends With `4esn`,_usn3:$`1esn` Is Null}][[`7esn` In $`8esn`[0.12][12] Where usn1 In 010]..usn1(1e1 Is Null)] Order By usn2[9e12] Descending,$@usn6 Ends With 010 Descending Skip Single(#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]) Contains Single(`5esn` In $usn2 Contains $`1esn` Where `2esn` Contains `3esn` Contains $@usn5) Contains {_usn3:0xabc Contains 0,`6esn`:$`6esn`[.e12..$`6esn`][$#usn7...0]} Where 1000[12.e12][#usn7] Merge `6esn`=({@usn6:$@usn5 =~$usn2 =~True,`4esn`:$#usn8 =~7 =~.12})<-[:@usn5|:@usn6 *01234567..123456789]->(`5esn` :``:`6esn`)<-[@usn5?:@usn6 *..010]-(`7esn` :`6esn`:`3esn`) On Match Set {`8esn`:$@usn6 Is Null}.@usn6 =\"d_str\" Is Not Null,#usn7+=[`7esn` In $`8esn`[0.12][12] Where 9e0[123456789..0][12.0..@usn6]|`4esn`[$#usn7][$#usn7]] Is Not Null Is Not Null On Match Set _usn4 =All(`6esn` In 1000[12.e12][#usn7] Where 9e12[\"d_str\"]) Contains [usn1 In 0xabc Is Not Null Is Not Null Where 9e0[123456789..0][12.0..@usn6]|True] Contains [_usn3 =~$12,`5esn`[0e0..]],_usn4+=$`4esn`[0e0...0] Union All Detach Delete `2esn` Contains `` Contains 9e12,_usn4 Ends With .e12,[`3esn` In @usn6[..\"d_str\"][..01] Where `1esn`[$7][0Xa]|.e0 Contains 999] In (_usn4 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8) Return 1000 Ends With 01234567 Ends With usn1 As usn2,`7esn`[`7esn`],123456789 Ends With 9e1 Ends With `` Order By [12 Is Null Is Null,9e0[$@usn6]][Filter(`6esn` In 0x0[9e0..] Where $123456789 In 010 In $`8esn`)..] Asc,0[0Xa..] Ascending,$`6esn`[07][$`1esn`] Descending Skip (`4esn` :`3esn`)-[:`1esn`|@usn6 *0..]-(_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})<-[?:`1esn`|@usn6 *0Xa]-(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]}) Is Not Null Is Not Null Merge `1esn`=(((_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[`7esn`?:`2esn`|:`7esn`]->(`3esn` {#usn8:#usn7 =~$`8esn`})-[ *07{`1esn`:$``}]->(`1esn` :usn1:``)))"),
    octest:ct_string("Create (usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[@usn6{_usn4:$`` Starts With 0x0}]-(usn2 :`7esn`),(((`` :`5esn`{`5esn`:_usn3[0Xa..],usn1:1.e1 Ends With 0x0 Ends With 1e1})<-[`6esn`{`3esn`:`2esn` Contains `3esn` Contains $@usn5}]-(`4esn` :`2esn`:@usn5{#usn8:$#usn7[9e12..12]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`6esn` ))) Unwind 0.e0 Contains $1000 Contains 7 As `8esn` Match `7esn`=(((:`7esn`$12)<-[?:usn2|:`` *7]->(`6esn` {#usn7:`2esn`[`3esn`..],usn2:$usn2 Starts With $`7esn` Starts With _usn4})-[`2esn` *01234567..123456789{usn1:False[$12],`1esn`:0.e0 Ends With $123456789}]-(#usn7 :#usn7{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2}))),({#usn7:usn1 Ends With $`8esn` Ends With 7})"),
    octest:ct_string("Optional Match (`7esn` :`7esn`)-[{`5esn`:0.e0 =~01234567 =~01234567}]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]}),((`` {_usn4:False[...e0][..$#usn8],`4esn`:.e12[..$_usn4][..#usn7]})<-[? *..010{usn1:123456789[$_usn4..]}]->(@usn5 {`2esn`:$#usn7[`7esn`..][$`8esn`..],`3esn`:0.12['s_str'..$0][$usn1..9e0]})) Optional Match usn2=(`7esn` {`8esn`:0 Is Null Is Null})<-[`4esn`?{`8esn`:$@usn5 Starts With Count(*) Starts With $usn1,#usn7:0.e0[.e12]}]->(:`6esn`:`3esn`{@usn6:#usn8 Is Not Null,usn2:1e1 Is Null})-[#usn8?:usn1|#usn7{`8esn`:$#usn7[`7esn`..][$`8esn`..]}]-(:`1esn`:@usn6),#usn8=((`` :usn2)<-[_usn4?:`3esn`|_usn4 *7]-(`5esn` :usn1:``)) Union All Merge @usn5=(@usn6 {`1esn`:$#usn8 Starts With usn2 Starts With .12,@usn6:07[$`8esn`]})<-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]-(:`4esn`:usn2{`2esn`:0Xa Contains $`6esn`}) On Create Set `6esn`+=[`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12]] Ends With [0] Ends With `8esn`,#usn8:`5esn`,#usn7+=01234567[..`6esn`][..``] Union Return *,Any(#usn8 In 07['s_str'][$@usn6] Where $`7esn`[usn2]) In [`6esn` In 0x0[9e0..] Where `5esn`[usn1]] In {_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]} As `5esn` Limit $@usn6 Contains `5esn` Contains .e12"),
    octest:ct_string("Merge ({usn1:0X7[0xabc][$1000]}) On Match Set `2esn`+=@usn5 Ends With 1000,`7esn` =Extract(`3esn` In 999 Where $`5esn`[.e1][#usn8]|$#usn8[@usn5..$1000]) =~Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $#usn8 =~7 =~.12) =~Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 123.654 Is Not Null Is Not Null) Match @usn6=(`8esn` :#usn7)-[ *0xabc..{``:0xabc =~01,`7esn`:$#usn7[123456789..][$`4esn`..]}]-(:#usn7{_usn3:7 Contains 1000 Contains $usn1})-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :`5esn`),(:usn1:``{#usn7:#usn8[$`7esn`..12.0],`1esn`:9e12 In 123.654 In True})<-[ *07{usn1:010 =~0e0 =~9e1}]->({@usn5:07[0..],`8esn`:Count(*)[..$_usn3][..$usn2]}) Union Optional Match ((`1esn` :usn2{`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]})-[`8esn`{``:0[1.e1..#usn7],_usn4:.e12 Contains `7esn` Contains 999}]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5})<-[usn2:`6esn` *00{`5esn`:.e12[$_usn4..0],`4esn`:$#usn8 In True In #usn7}]->(:``:`6esn`{`5esn`:_usn3 =~$12})),((@usn6 :`5esn`{@usn5:.12[9e1..0X7]})-[ *0X7..0x0{`7esn`:Count(*)[..`5esn`],`2esn`:.e12[..$_usn4][..#usn7]}]->(`8esn` :@usn5{_usn3:Count(*) Ends With 7 Ends With 0,`8esn`:@usn6 Starts With #usn8 Starts With $#usn7})) Union All Match ((#usn7 :`3esn`)<-[`1esn`?:`3esn`|_usn4 *01234567..123456789]->(#usn7 {#usn7:999 Contains $`7esn` Contains usn2})),#usn8=(usn1 :`1esn`:@usn6)-[?:`4esn`{@usn5:$`2esn` Ends With 1e1,usn1:'s_str'[$`6esn`..][$0..]}]-({@usn5:0.e0 =~01234567 =~01234567,`1esn`:.e1 =~usn2 =~`7esn`}) With  [`4esn` In 0.12['s_str'..$0][$usn1..9e0]|`7esn`[..01]] Is Not Null Is Not Null As @usn6,None(usn1 In 0xabc Is Not Null Is Not Null Where 123456789 =~@usn5 =~$`5esn`) =~[`4esn` Ends With 's_str' Ends With @usn6] Order By 01234567[..`6esn`][..``] Asc,[`3esn` In False In $`2esn` In 1e1 Where `` Contains 010 Contains $1000|1000[12.e12][#usn7]] In [`3esn` In 999 Where `7esn` Is Null|$#usn8[0e0..][07..]] In Single(`5esn` In 1e1 =~$`8esn` =~`1esn` Where `8esn` Starts With $12 Starts With $1000) Ascending Skip .12[usn1] Where .e12[..#usn7][..9e12] Optional Match `2esn`=(@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8}),``=((:`5esn`{`7esn`:'s_str'[$#usn8],``:`1esn`[..$#usn7]})<-[``?:usn1|#usn7]-(@usn5 :`2esn`:@usn5{@usn6:123456789 =~#usn8 =~$0})) Where $usn1 Starts With Null Starts With $``"),
    octest:ct_string("Remove Extract(`6esn` In .e0['s_str'..][$`8esn`..] Where 0.12[123456789..]).``!,{_usn4:$@usn6 Ends With 0.0,`7esn`:$#usn7[123456789..][$`4esn`..]}.`1esn`,{`2esn`:.0[@usn6..]}._usn3! Merge `8esn`=(:#usn8:#usn7{`6esn`:`5esn`[12.0]}) Union All Create `7esn`=((`6esn` {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})),(@usn5 :@usn6{`5esn`:#usn8 Is Not Null,`1esn`:01234567[`6esn`..]}) Unwind 0X7[_usn3..][.12..] As `4esn` Merge ``=(:`3esn`{`7esn`:$123456789[`4esn`..]})-[#usn8?:`2esn`|:`7esn`]-(`` :_usn3:@usn5) On Match Set #usn7 =.e0 =~$1000 Union Optional Match (((`2esn` :_usn4{`7esn`:`2esn`[`3esn`..],`6esn`:.12 Is Not Null})<-[`1esn`?:`3esn`|_usn4*..]-(:`6esn`:`3esn`{`3esn`:123.654[0Xa..0x0][.12..12e12]})-[?:`8esn`|@usn6*{``:0.e0 Contains $123456789 Contains 123456789,`4esn`:#usn7 Is Not Null Is Not Null}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]}))) Where 0 Is Not Null Is Not Null Unwind 123.654 Is Not Null Is Not Null As #usn8"),
    octest:ct_string("Detach Delete #usn7[.12][usn2],$_usn4[$`2esn`..],$@usn5[$_usn3] Remove Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $`` Starts With 0x0).`2esn`,[$usn1[#usn8..`8esn`][7..`4esn`],`5esn` Ends With 0x0].`5esn` Union All Match usn2=(((`` :usn1:``{#usn7:$123456789[`4esn`..]})<-[@usn5?{`7esn`:`6esn` In $``}]->(usn1 {_usn3:#usn7 Ends With 0.12})<-[? *123456789..{`7esn`:.e12 =~@usn5,`3esn`:`5esn`[0e0..]}]-(`4esn` ))),@usn6=(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[@usn6{_usn4:$`` Starts With 0x0}]-(usn2 :`7esn`) Optional Match usn2=(`7esn` {`8esn`:0 Is Null Is Null})<-[`4esn`?{`8esn`:$@usn5 Starts With Count(*) Starts With $usn1,#usn7:0.e0[.e12]}]->(:`6esn`:`3esn`{@usn6:#usn8 Is Not Null,usn2:1e1 Is Null})-[#usn8?:usn1|#usn7{`8esn`:$#usn7[`7esn`..][$`8esn`..]}]-(:`1esn`:@usn6),#usn8=((`` :usn2)<-[_usn4?:`3esn`|_usn4 *7]-(`5esn` :usn1:``)) Remove _usn4(Distinct 00[0X7..9e12]).usn1!,[1e1 =~$`8esn` =~`1esn`].`3esn`?"),
    octest:ct_string("Return Distinct *,$`5esn` Starts With .0 Starts With 123.654 As @usn6 Skip [`3esn` In @usn6[..\"d_str\"][..01] Where 1.e1[$`7esn`]|123456789[..0]] =~[.e0['s_str'..][$`8esn`..],.e0 =~7 =~False] =~[`7esn` In $`8esn`[0.12][12] Where 9e0[123456789..0][12.0..@usn6]|`4esn`[$#usn7][$#usn7]] Limit 9e0[$`4esn`] Match (({`1esn`:1e1 Starts With 010})-[`2esn` *123456789..{`8esn`:.12 =~#usn7 =~01}]-(@usn6 {``:12.e12 Contains 's_str' Contains 0.12})<-[{#usn7:$123456789[..$`7esn`][..\"d_str\"]}]-({`3esn`:Null Is Null Is Null})),usn2=(((:@usn5{usn2:$999 Is Not Null})<-[``?:#usn8|:`6esn`]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]})-[usn2?:@usn5|:@usn6]->({#usn8:$`` Is Not Null Is Not Null,`8esn`:$usn2 Starts With 9e1 Starts With `7esn`}))) Return Distinct *,9e0[12..$`8esn`] As _usn4 Order By $`1esn` =~`1esn` =~0X0123456789ABCDEF Desc,_usn4[7..$999] Ascending Skip Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 9e1 Contains _usn3) In [\"d_str\"[.0][9e0],0X7[0xabc][$1000]] Limit All(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]) In Single(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 1000 Starts With ``)"),
    octest:ct_string("Remove [`7esn` In $`8esn`[0.12][12] Where $999[010..]].`4esn`!,Filter(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 0X0123456789ABCDEF Is Null).`1esn`!,({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`1esn` {`6esn`:07}).`3esn`! Union All Delete 0x0[$`2esn`..'s_str'][$@usn5..1.e1]"),
    octest:ct_string("Return Distinct $7[..$``] As ``,Any(`7esn` In $`8esn`[0.12][12] Where usn1 In 010) As `6esn` Skip 01234567[01234567][.e12] Limit {`8esn`:Count(*) Is Null Is Null,@usn5:.e0 Ends With $`1esn` Ends With 1000} Is Not Null With Distinct 1000 Starts With 0e0 Starts With 0,Any(`2esn` In $``[$#usn8] Where $`4esn`[$1000..$`4esn`][0x0..$_usn3])[Filter(`6esn` In 0x0[9e0..])],0 Is Null Is Null As #usn7 Order By [9e12 In 123.654 In True,`6esn` In $``][..All(`7esn` In $`8esn`[0.12][12] Where @usn5[..$999][..$0])][..Filter(`6esn` In .e0['s_str'..][$`8esn`..] Where \"d_str\" Ends With $1000 Ends With usn2)] Asc Skip [_usn4 In 12.e12 Is Null Is Null Where 0e0 =~False =~.12|Count(*) Contains 12e12 Contains 0xabc] Ends With {#usn7:_usn3[0Xa..]} Ends With _usn4(Distinct .e0 Contains 999) Where $`4esn`[$1000..$`4esn`][0x0..$_usn3] Union All Optional Match (((#usn8 :`3esn`)<-[? *..0X0123456789ABCDEF{usn2:123456789 Ends With 9e1 Ends With ``,`3esn`:9e0[123456789..0][12.0..@usn6]}]-(@usn6 $_usn3)<-[``?:#usn8|:`6esn`{usn1:$#usn7[..$999][..9e1]}]->(`3esn` {#usn8:True[7][``]}))) Where 0[_usn3][.12] Union Detach Delete 0e0 Ends With usn1 Ends With `1esn`,(_usn4 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8) Is Not Null Is Not Null Unwind [`3esn` In 999 Where 07 Ends With $_usn4 Ends With 0.e0|`5esn` In 12.e12 In 1000] As `2esn`"),
    octest:ct_string("Merge usn2=(({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})-[`6esn`:`7esn` *7{`6esn`:`6esn` In $``}]-(`` :_usn3:@usn5)<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]-({``:0.12 Contains 0x0 Contains @usn5})) On Create Set @usn6 =[0Xa[..$`2esn`][..00]] Starts With (@usn6 )-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(:`7esn`{`2esn`:.e12 Is Not Null Is Not Null,`4esn`:_usn4[1000..``]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`6esn` ),`6esn`+=$12[usn2][12.0] On Create Set Extract(`6esn` In 1000[12.e12][#usn7] Where 1.e1 Ends With 0x0 Ends With 1e1|@usn5[..$999][..$0]).`7esn`! =$12[usn2][12.0],_usn3:@usn6 Detach Delete Null =~Count(*) Unwind usn1[..`7esn`][..$`8esn`] As `4esn` Union Match ((`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]})),(((`1esn` {@usn6:$12[#usn8..$@usn5][9e0..usn1]})<-[?:usn2|:``{_usn3:.e1 Ends With $123456789}]-(`4esn` {#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})-[`3esn`]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5}))) With  7 Starts With Null Starts With Null Order By @usn6 Starts With #usn8 Starts With $#usn7 Descending Limit 12.e12 Is Not Null Where 0.12 Contains 0x0 Contains @usn5 Return *,`4esn`,Any(`3esn` In False In $`2esn` In 1e1 Where #usn7[.12][usn2])[{#usn7:0e0['s_str'],`1esn`:$#usn8[1.e1]}..[@usn6[.0],0X0123456789ABCDEF Is Not Null,0x0[$`2esn`..'s_str'][$@usn5..1.e1]]][[`4esn` Ends With 's_str' Ends With @usn6]..$`5esn`] As `` Order By (`6esn` :`8esn`{usn2:#usn7 In #usn7,`1esn`:00['s_str']})<-[``?:@usn6]-(:`2esn`:@usn5{usn2:$`3esn` Ends With @usn6 Ends With 123.654})<-[@usn5?:@usn6 *..010]->(#usn7 :#usn7{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2}) Is Null Asc,$usn2 Starts With $`7esn` Starts With _usn4 Desc Limit `4esn` Starts With $#usn8 Starts With $#usn8 Union All Remove {_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc}.`1esn`? With Distinct $`8esn` Is Not Null Order By @usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`] Ascending Limit Extract(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where .12 Is Null|0X0123456789ABCDEF[$_usn3][$_usn4])[..All(usn1 In 123.654 =~.e0 =~9e0 Where False Starts With $123456789)] Where 0xabc =~01"),
    octest:ct_string("Match `1esn`=((:#usn7{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]})),(((:#usn7{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})-[{usn1:Count(*)[..12][..$999],#usn8:usn1 In 010}]->(:`7esn`{#usn8:12e12 Ends With `6esn`,_usn4:0Xa Contains $#usn8 Contains `5esn`})-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]->(_usn3 {`3esn`:$@usn5 Is Not Null Is Not Null}))) Where `2esn`[`3esn`..] Union Return Distinct *,1.e1[0..],0[$`5esn`] As `8esn` Skip _usn4 In .0 In .12 Limit $usn2 Starts With $`7esn` Starts With _usn4 Merge ({@usn5:0x0 =~`5esn` =~$`8esn`})-[:`1esn`|@usn6 *7{@usn5:0X7[..True][..01234567]}]->(`1esn` :_usn3:@usn5) On Match Set _usn4+=(usn1 {@usn5:12e12 Ends With `6esn`,_usn4:\"d_str\" Starts With _usn4 Starts With $_usn4})<-[?:#usn7|`5esn`{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}]->(@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})<-[?:`1esn`|@usn6]->(`6esn` :`2esn`:@usn5) Is Null,`5esn`+=.12[usn1],`8esn`+=usn1[..Count(*)][..`8esn`] On Match Set _usn4+=(usn1 {@usn5:12e12 Ends With `6esn`,_usn4:\"d_str\" Starts With _usn4 Starts With $_usn4})<-[?:#usn7|`5esn`{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}]->(@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})<-[?:`1esn`|@usn6]->(`6esn` :`2esn`:@usn5) Is Null,`5esn`+=.12[usn1],`8esn`+=usn1[..Count(*)][..`8esn`]"),
    octest:ct_string("Merge `8esn`=(((`2esn` {_usn3:0[1e1..00]})-[_usn4?:usn2|:`` *7]-(`5esn` {`1esn`:999 Ends With $`4esn`})<-[`1esn`:_usn4|_usn3 *00{`1esn`:$#usn8 Starts With usn2 Starts With .12,@usn6:07[$`8esn`]}]-(`3esn` :`8esn`))) On Create Set [#usn8 In 0x0[_usn4..] Where `8esn`[12.e12][`4esn`]].#usn8! =usn2[..1e1][..$_usn3],Any(`3esn` In 999 Where .e12 Is Null Is Null).@usn6? =$#usn8[@usn5..$1000] On Create Set `6esn` =123456789[$_usn4..],#usn7+=`7esn`(Distinct $#usn8[@usn5..$1000]) Ends With Extract(`6esn` In 0x0[9e0..] Where @usn5 In .e0 In \"d_str\"|@usn6[..\"d_str\"][..01]),usn2 =[`6esn` In .e0['s_str'..][$`8esn`..] Where $`7esn`[..$`8esn`]|$`8esn`[`7esn`]] Is Not Null With  (_usn3 :#usn8:#usn7)<-[{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(`3esn` :`4esn`:usn2)[[`3esn` In 999 Where _usn4[1000..``]|Null[9e1][$`6esn`]]..({_usn4:$1000[$usn1][.e1]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`1esn` {`6esn`:07})<-[`5esn`?]-(@usn5 {`5esn`:0e0[...e1]})] As #usn7,[`3esn` In @usn6[..\"d_str\"][..01] Where `1esn`[$7][0Xa]|.e0 Contains 999] =~Extract(`2esn` In $``[$#usn8] Where 12e12 Ends With $_usn4 Ends With $`2esn`|`4esn` Starts With `8esn`) =~[#usn8 =~$1000 =~$1000,$`7esn`[`2esn`]] Order By True Ends With `6esn` Ends With 9e0 Desc With Distinct [#usn8 In 07['s_str'][$@usn6] Where 9e0 Starts With 0e0 Starts With $`5esn`] Starts With Extract(_usn4 In 12.e12 Is Null Is Null Where _usn4 In .0 In .12|usn2 In 1e1 In `4esn`) Starts With None(`3esn` In @usn6[..\"d_str\"][..01] Where 12[`5esn`..$`3esn`][0.12..usn2]),_usn4 Ends With .e12 As @usn6 Where `2esn` Ends With Null Ends With 0xabc"),
    octest:ct_string("Remove (@usn5 {`1esn`:0xabc[123.654][12]})-[:#usn8|:`6esn`{#usn8:0X7[..`5esn`][..$`7esn`]}]->(`2esn` :@usn6)-[`5esn`?:`7esn`]-({@usn6:'s_str' Ends With $7}).`4esn`?,_usn3:usn1:`` Return 9e0[0..1e1] Remove Any(`5esn` In $usn2 Contains $`1esn` Where \"d_str\" Contains $999 Contains `2esn`).usn1!"),
    octest:ct_string("Return Distinct 7 Contains 1000 Contains $usn1,usn2 Contains 07 Contains False As _usn4,{#usn8:.e0 Ends With $`1esn` Ends With 1000}[Filter(#usn8 In 07['s_str'][$@usn6] Where $12[0.0..])][Filter(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..])] Order By $#usn7[123456789..][$`4esn`..] Asc Limit #usn8[..0X0123456789ABCDEF][...0] Return Distinct $usn1[usn1..$`8esn`][12e12..$``] As usn1 Order By $`3esn`[0.12..][$@usn5..] Asc,(`5esn` :`2esn`:@usn5{usn2:$`6esn` Starts With usn1,``:123456789 =~@usn5 =~$`5esn`})-[{#usn8:999}]-(:usn1:``{_usn3:123.654 Is Not Null Is Not Null}) =~{`6esn`:9e1[..01234567][..`4esn`]} =~None(`6esn` In 1000[12.e12][#usn7] Where 0X0123456789ABCDEF Is Not Null) Ascending Skip 0X0123456789ABCDEF Is Not Null Limit $`6esn` Is Null Is Null Union Unwind Single(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]) Starts With (:usn1:``{_usn4:1000[12.e12][#usn7]})-[ *7{`4esn`:$#usn7[$`3esn`..$999],`8esn`:$0[00..]}]-({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]}) Starts With {`1esn`:`5esn` In 12.e12 In 1000,`3esn`:0Xa Contains $`6esn`} As `3esn` With Distinct $_usn3[0e0..][12.0..] As `3esn` Order By None(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1) In {`6esn`:1.e1[0..],usn2:`` Contains $_usn3 Contains 0e0} Descending,$123456789 In `8esn` In 0X7 Descending Skip 12.0[9e1..][Null..] Where 1e1 Contains 0Xa"),
    octest:ct_string("With  $`5esn` Ends With `6esn` Ends With 0x0 As @usn6,`1esn`[..$#usn7] Limit $usn2[12.0..][`8esn`..] Where .12 With Distinct [$999[@usn5..][Null..]] Ends With ({usn2:0Xa Contains $`6esn`,_usn3:\"d_str\" Ends With $`3esn`})-[@usn5? *00{@usn5:usn1 Ends With 1.e1 Ends With `4esn`}]-(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})-[:`5esn`|:`1esn`]-(`2esn` ) As `7esn`,00[0X7..9e12] As #usn8 Order By 00 =~999 =~07 Asc,None(`6esn` In 1000[12.e12][#usn7] Where 9e12[\"d_str\"]) Ends With None(`6esn` In 1000[12.e12][#usn7] Where usn1[9e1..]) Ends With [`5esn` In 12.e12 In 1000,False In $`2esn` In 1e1] Descending,.e0 =~$1000 Ascending Limit {`7esn`:01234567[9e0][.0],`2esn`:999 Ends With $`4esn`}[`4esn`(.12 In 01234567 In _usn4,12.0[9e12]['s_str'])..] Where .e0 Contains 999 Union All Match ``=((:`2esn`:@usn5{@usn5:`4esn`})),@usn5=(`` :_usn3:@usn5)"),
    octest:ct_string("Unwind _usn3 =~$12 As `` Match `5esn`=(((@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})-[? *..0X0123456789ABCDEF{`7esn`:`4esn` Is Not Null,``:.12 Is Not Null}]->(`7esn` {`2esn`:9e0[$@usn6]})-[:#usn7|`5esn`]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null}))),`1esn`=((:#usn7{_usn3:7 Contains 1000 Contains $usn1})-[:`8esn`|@usn6*..]->(#usn8 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})) With Distinct 0[..07][..False] As `2esn`,usn2,.12 Is Not Null As usn2 Order By usn2[$``..1e1] Ascending,1e1 Contains @usn5 Contains 12.e12 Ascending,$7 Is Null Desc Skip (`7esn` {#usn7:1e1[`3esn`]})-[`3esn`]->(#usn8 {`7esn`:12.e12[.12..$_usn3][0e0..9e0],`7esn`:0X7[..True][..01234567]})-[:`1esn`|@usn6*..]->(:`8esn`{`8esn`:0X7 Contains 12.0,`3esn`:`4esn` Starts With `8esn`}) Is Not Null Limit All(`2esn` In $``[$#usn8] Where $`2esn`[.._usn3]) =~[`6esn`[_usn3],12.0 In 07] =~[123456789[0.0..`2esn`][1.e1..$_usn4]] Where 0X0123456789ABCDEF"),
    octest:ct_string("Merge usn2=(((_usn3 :`1esn`:@usn6)<-[:@usn5|:@usn6 *01234567..123456789]->(`1esn` :`7esn`{`6esn`:1e1 In 12.e12})<-[``?:#usn8|:`6esn`{usn1:$#usn7[..$999][..9e1]}]->(`1esn` :`4esn`:usn2))) On Match Set _usn3+={_usn3:`1esn`[..$#usn7]} Contains Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1) Contains [$1000[00..],$`6esn`[.e12..$`6esn`][$#usn7...0],0Xa[..1.e1]],#usn7+=$12[`3esn`][`3esn`],{_usn3:0Xa[..$`2esn`][..00]}.`5esn`? =[`6esn` In 1000[12.e12][#usn7] Where 12.0[9e12]['s_str']|0.e0 =~01234567 =~01234567] Ends With Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $`8esn`[0.12][12]) Ends With count(1000[Null][$`7esn`],$123456789[`3esn`..`5esn`][1e1..$`5esn`]) On Create Set `4esn`+=$`5esn` Starts With 0X0123456789ABCDEF Starts With Null"),
    octest:ct_string("With Distinct #usn8(Distinct 0x0[$7],#usn8[1e1..])[[1.e1[#usn7][1.e1]]..{usn1:`2esn` Is Null Is Null}][_usn3(Distinct usn1[$`1esn`..])..Extract(`3esn` In False In $`2esn` In 1e1 Where 1000 Ends With $`5esn`)] As @usn6,123.654 In (:_usn3:@usn5{`1esn`:$`4esn`[.e1..$usn1],``:0x0 =~`5esn` =~$`8esn`})<-[?{``:$`6esn`[.e12]}]-(`4esn` :`3esn`) In [`2esn` In $``[$#usn8]] As #usn8 Where Count(*) Ends With 7 Ends With 0 Create `5esn`=((`6esn` :_usn3:@usn5)) Union All Return Distinct *,.12 Is Not Null Is Not Null As `2esn` Order By Extract(usn1 In 123.654 =~.e0 =~9e0 Where $`7esn` Starts With 07 Starts With `1esn`|`7esn` Is Not Null Is Not Null) =~`7esn`(Distinct $@usn6[..``],0.0 Starts With Null Starts With .e12) =~@usn6(Distinct 00 In 1000) Ascending Union All Create _usn4=((`4esn` {@usn6:_usn4[$`8esn`.._usn3][.0..$@usn6]})<-[ *07{usn1:010 =~0e0 =~9e1}]->({@usn5:07[0..],`8esn`:Count(*)[..$_usn3][..$usn2]})) Delete $`3esn` Contains $12 Contains 1000,'s_str' In usn1 In 12.0,`3esn` Starts With $@usn5 Starts With 0xabc"),
    octest:ct_string("With  *,[#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]][Filter(`2esn` In $``[$#usn8] Where 01234567[`6esn`..])..][[`3esn` In False In $`2esn` In 1e1 Where .12 =~$#usn7 =~$``|01234567 Is Null]..] As usn1 Where $123456789 Starts With `6esn` Starts With 123.654 Optional Match `8esn`=(:`1esn`:@usn6{`5esn`:123.654[0Xa..0x0][.12..12e12],`8esn`:_usn3[..usn2]})<-[usn1:#usn8|:`6esn` *0xabc..]->(`8esn` :`1esn`:@usn6) Where $@usn6 Contains `5esn` Contains .e12 Delete @usn5($#usn8 Ends With _usn4 Ends With usn2)[`4esn`(Distinct 's_str' Ends With $7)][{`4esn`:$`6esn`[00..$12],_usn3:`5esn`[0e0..]}] Union Unwind usn1 =~12 =~$0 As @usn6 Return True[$usn1..12][``..\"d_str\"] As `` Limit `1esn` Union Return *,1000 =~$@usn5 Skip $123456789[..0.12] Delete `6esn`[False..],$usn2[`6esn`..],01 Ends With @usn6 Ends With $7 Remove [#usn8 In 0x0[_usn4..] Where `8esn`[12.e12][`4esn`]].#usn8!,[usn1 In 123.654 =~.e0 =~9e0 Where $usn2 Starts With $`7esn` Starts With _usn4].`2esn`?"),
    octest:ct_string("Unwind @usn6[..$usn1][..010] As `4esn` Union All Return Distinct $123456789[..$usn2] As `4esn`,$usn2 Starts With $`7esn` Starts With _usn4 As `1esn`,Filter(`6esn` In 1000[12.e12][#usn7] Where $usn2 Contains $`1esn`) As `5esn` Order By 12e12 Ends With 0e0 Desc,Extract(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0|0[_usn3][.12]) Starts With (#usn8 :`8esn`)<-[`2esn`?:`3esn`|_usn4]-(#usn7 :`7esn`{`3esn`:$#usn8[..123456789][..`2esn`],#usn8:0.e0 Ends With #usn8})-[:`5esn`|:`1esn`]-(@usn5 :`5esn`) Desc Limit $usn2 Ends With 0 Ends With 12.0 Union Match @usn6=(usn2 )<-[? *..0X0123456789ABCDEF{usn2:123456789 Ends With 9e1 Ends With ``,`3esn`:9e0[123456789..0][12.0..@usn6]}]-({``:0.12 Contains 0x0 Contains @usn5}) Where 01 Starts With $`5esn` Starts With 01234567 Unwind 0X7[_usn3..][.12..] As `4esn` Return *,.12 Is Not Null Is Not Null,.12[0X0123456789ABCDEF..] As `7esn` Order By [`6esn` In 0x0[9e0..] Where 01234567[..`6esn`][..``]|01 Is Null] Starts With usn1(Distinct 0e0[...e1],$usn2 Ends With 0 Ends With 12.0) Starts With {@usn6:$usn1 Is Not Null Is Not Null,`7esn`:0x0 In 0X0123456789ABCDEF} Desc Limit Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 01[$0])[{`5esn`:@usn6[$usn1][$`2esn`],`1esn`:12.0[9e12]['s_str']}..][Any(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0)..]"),
    octest:ct_string("Unwind Single(`5esn` In $usn2 Contains $`1esn` Where True Contains .e1 Contains `2esn`) In None(`3esn` In False In $`2esn` In 1e1 Where #usn7[.12][usn2]) As @usn6 Union All With  $`5esn` Ends With `6esn` Ends With 0x0 As @usn6,`1esn`[..$#usn7] Limit $usn2[12.0..][`8esn`..] Where .12 With Distinct [$999[@usn5..][Null..]] Ends With ({usn2:0Xa Contains $`6esn`,_usn3:\"d_str\" Ends With $`3esn`})-[@usn5? *00{@usn5:usn1 Ends With 1.e1 Ends With `4esn`}]-(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})-[:`5esn`|:`1esn`]-(`2esn` ) As `7esn`,00[0X7..9e12] As #usn8 Order By 00 =~999 =~07 Asc,None(`6esn` In 1000[12.e12][#usn7] Where 9e12[\"d_str\"]) Ends With None(`6esn` In 1000[12.e12][#usn7] Where usn1[9e1..]) Ends With [`5esn` In 12.e12 In 1000,False In $`2esn` In 1e1] Descending,.e0 =~$1000 Ascending Limit {`7esn`:01234567[9e0][.0],`2esn`:999 Ends With $`4esn`}[`4esn`(.12 In 01234567 In _usn4,12.0[9e12]['s_str'])..] Where .e0 Contains 999"),
    octest:ct_string("With Distinct *,07[..1e1][..$0] As _usn3 Skip _usn4[999..9e1] Limit 0[..07][..False] Union All Create usn2=(`2esn` :`5esn`{`1esn`:$@usn6 Ends With 0.0})<-[`2esn`?*{`3esn`:$@usn5 Is Not Null Is Not Null}]-(:`7esn`{``:9e1[$#usn8],`4esn`:1.e1 Is Null Is Null}) Optional Match `2esn`=((:`4esn`:usn2{_usn3:Null Is Not Null Is Not Null,`4esn`:$1000 Is Not Null})),((`6esn` {#usn7:`2esn`[`3esn`..],usn2:$usn2 Starts With $`7esn` Starts With _usn4})<-[:_usn4|_usn3]-(#usn8 :`8esn`{_usn4:usn2 In 1e1 In `4esn`})-[?:@usn5|:@usn6 *0Xa]-({`7esn`:999,#usn8:01 Starts With $`5esn` Starts With 01234567})) Union All Remove Single(`3esn` In False In $`2esn` In 1e1 Where `` Contains 010 Contains $1000).#usn7?"),
    octest:ct_string("Delete (usn2 {usn2:`7esn` Contains .0 Contains #usn8})-[usn1{`1esn`:`7esn` Contains .0 Contains #usn8}]->(@usn6 :`5esn`{@usn5:.12[9e1..0X7]}) Is Not Null Is Not Null,7 Starts With Null Starts With Null,.e1[123.654..] Match (:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`}),_usn4=(({@usn5:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`3esn`:`4esn` In .12 In $#usn8})-[?:`` *07{`1esn`:$#usn7[$`3esn`..$999]}]->(@usn6 {``:12.e12 Contains 's_str' Contains 0.12})<-[? *..0X0123456789ABCDEF{usn2:123456789 Ends With 9e1 Ends With ``,`3esn`:9e0[123456789..0][12.0..@usn6]}]-({``:0.12 Contains 0x0 Contains @usn5})) Where 1000 Starts With 0e0 Starts With 0"),
    octest:ct_string("Merge (@usn6 {@usn6:$`7esn` Ends With $_usn4 Ends With `5esn`,usn1:123.654[0Xa..0x0][.12..12e12]})<-[:@usn6]->(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null}) Unwind Any(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where $0 Ends With .12) Is Null As @usn6 Merge `8esn`=((:usn2{``:.e1 =~usn2 =~`7esn`,#usn7:`4esn` In .12 In $#usn8})<-[`8esn`?:usn1|#usn7 *01..7{usn1:123456789[$_usn4..]}]-(usn2 :@usn6))"),
    octest:ct_string("Remove All(usn1 In 0xabc Is Not Null Is Not Null Where True Contains .e1 Contains `2esn`).`5esn`? Match (:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`}),usn2=((_usn3 :@usn6{@usn5:0e0 =~False =~.12})-[?:@usn5|:@usn6 *0Xa]-(:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`})) Remove Single(usn1 In 999 Where 0.12[123456789..]).@usn6? Union With Distinct *,All(`2esn` In $``[$#usn8] Where $`2esn`[.._usn3]) =~[`6esn`[_usn3],12.0 In 07] =~[123456789[0.0..`2esn`][1.e1..$_usn4]] Order By 999[..\"d_str\"] Descending,$usn2[`6esn`..] Asc Skip `6esn`[False..] Limit Extract(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1|$`2esn` Is Not Null Is Not Null) =~[`7esn`[..01],1e1 =~$`8esn` =~`1esn`,$`6esn`[.e12..$`6esn`][$#usn7...0]]"),
    octest:ct_string("Optional Match `1esn`=(_usn4 {`4esn`:01234567[..00][..$`3esn`],usn1:00[\"d_str\"][False]}) Where $`4esn`[.e1..$usn1] Create (:usn1:``{_usn3:123.654 Is Not Null Is Not Null})-[`1esn`?:`1esn`|@usn6 *12]->({`6esn`:usn1[$`1esn`..],_usn4:$usn2 Contains $`1esn`})-[:usn1|#usn7]->(usn1 :`3esn`{`4esn`:$123456789 =~usn1 =~0xabc,`7esn`:999 Is Not Null}),@usn6=(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null})<-[{`8esn`:'s_str'[$#usn8]}]->(:#usn7{``:$`6esn` Starts With usn1}) Union All Optional Match @usn6=(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[@usn6{_usn4:$`` Starts With 0x0}]-(usn2 :`7esn`),`6esn`=(((`3esn` :usn1:``)<-[``{#usn7:$`2esn` =~False,``:12e12[..9e12][..$@usn6]}]-(`2esn` :`1esn`:@usn6{#usn8:.12 Is Not Null})-[@usn6{_usn4:$`` Starts With 0x0}]->(`1esn` {#usn7:$`7esn`[`2esn`]}))) Detach Delete 0.e0 Ends With #usn8 Union All Delete Extract(`3esn` In False In $`2esn` In 1e1 Where `` Contains 010 Contains $1000|@usn5['s_str'..$`2esn`])[`5esn`(0e0['s_str'])][None(`6esn` In 0x0[9e0..] Where 0xabc Is Not Null Is Not Null)],[`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where .0 =~$@usn5 =~1.e1] =~{@usn6:0 Is Null Is Null} =~count(Distinct Null[9e1][$`6esn`],`4esn` Starts With `8esn`),1000 =~$@usn5 With Distinct None(usn1 In 0xabc Is Not Null Is Not Null Where .12[..07]) Contains [$#usn7[`7esn`..][$`8esn`..],$_usn4[$123456789..][12..],`6esn` In $``] Order By @usn6[..$usn1][..010] Asc,`` In 123.654 In 0.0 Desc,{`7esn`:1.e1 Is Null Is Null,_usn3:@usn6[$0..Null]}[..[_usn4 Starts With `6esn` Starts With $`8esn`,``[0X7..][$@usn6..],$usn2 Starts With 9e1 Starts With `7esn`]][..Single(#usn8 In 07['s_str'][$@usn6] Where 9e0 Starts With 0e0 Starts With $`5esn`)] Ascending Where 7 =~False"),
    octest:ct_string("Create ((`4esn` {_usn3:7 Contains 1000 Contains $usn1})-[#usn8:@usn5|:@usn6 *0..{`6esn`:`6esn` In $``}]->(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[? *0xabc..]->(`6esn` {`5esn`:0x0 =~@usn5 =~01})) Unwind $`1esn` In $#usn7 In 0X7 As `` Create ((`4esn` {_usn3:7 Contains 1000 Contains $usn1})-[#usn8:@usn5|:@usn6 *0..{`6esn`:`6esn` In $``}]->(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[? *0xabc..]->(`6esn` {`5esn`:0x0 =~@usn5 =~01}))"),
    octest:ct_string("With Distinct *,$0 Contains 7 Contains 1.e1 Order By @usn6(Distinct 0xabc Contains 0)[{_usn4:$`2esn` Ends With 1e1}..][All(_usn4 In 12.e12 Is Null Is Null Where 0e0 =~False =~.12)..] Descending Match `6esn`=(({@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})),({`2esn`:0,`3esn`:$`7esn` Starts With 07 Starts With `1esn`}) Where 9e0[0..1e1] Merge (`8esn` {usn2:\"d_str\"[1.e1][01234567]})<-[_usn4?:_usn3|`6esn` *..0X0123456789ABCDEF]->(usn1 :`3esn`{`4esn`:$123456789 =~usn1 =~0xabc,`7esn`:999 Is Not Null})-[?:`8esn`|@usn6*{``:0.e0 Contains $123456789 Contains 123456789,`4esn`:#usn7 Is Not Null Is Not Null}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]}) Union Unwind 123.654 Is Not Null Is Not Null As `6esn` Merge ((`5esn` :@usn6{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`})-[`1esn`:@usn6 *01234567..123456789{`7esn`:0x0[01234567..Null][0Xa...e12]}]->(:`8esn`{``:.e1 =~usn2 =~`7esn`,#usn7:`4esn` In .12 In $#usn8})-[#usn8?:#usn8|:`6esn`*{`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`}]->(:``:`6esn`{@usn6:$`4esn`[$@usn5..`7esn`],`5esn`:_usn4 Starts With `6esn` Starts With $`8esn`})) On Match Set `4esn`+=.e1 In `` In 7,_usn3+=$`8esn` Contains .0 Contains 0.12 On Match Set All(#usn8 In 07['s_str'][$@usn6]).#usn7! =$999[0xabc..],#usn8+=7[usn1][$7] Union With  *,$`` Is Null Is Null As usn1 Limit 07"),
    octest:ct_string("Create (#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]}),`3esn`=((usn1 {`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})-[:#usn7|`5esn`{_usn3:`` Contains 010 Contains $1000}]->(:`4esn`:usn2{usn2:1.e1[0x0][$123456789]})) Remove @usn5:#usn8:#usn7 Merge (usn1 )<-[`1esn`?:_usn4|_usn3]-(`1esn` {@usn6:Null In 0xabc})<-[`2esn`:``]-({@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]}) On Create Set `3esn`:_usn4,_usn4 =[12 Is Null Is Null,9e0[$@usn6]][Filter(`6esn` In 0x0[9e0..] Where $123456789 In 010 In $`8esn`)..],None(`6esn` In .e0['s_str'..][$`8esn`..] Where `4esn`).`2esn` =$123456789[0X0123456789ABCDEF..123.654] Union Merge ((`` {``:0.12 Contains 0x0 Contains @usn5}))"),
    octest:ct_string("Merge `6esn`=((`6esn` {`7esn`:`4esn` In $`2esn` In @usn5})-[:@usn5|:@usn6 *01234567..123456789]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null})) Optional Match (`5esn` :#usn7{usn1:9e12 In 123.654 In True,`2esn`:True =~0 =~123456789})-[`7esn`?:``{``:00 In 1000}]-({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]}),#usn8=(`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})<-[? *..010{usn1:123456789[$_usn4..]}]->(#usn7 {usn2:$#usn8 In True In #usn7}) Where $_usn4 Contains $`5esn` Contains @usn5 Match _usn3=(#usn7 :`3esn`{_usn3:.e0[$`1esn`..][_usn4..]}),(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[@usn6{_usn4:$`` Starts With 0x0}]-(usn2 :`7esn`) Union All Remove Filter(`5esn` In $usn2 Contains $`1esn` Where Count(*)[_usn3..]).usn2,{usn2:0Xa Contains $`6esn`,_usn3:\"d_str\" Ends With $`3esn`}.`6esn`! Unwind True Ends With `6esn` Ends With 9e0 As `` Return Distinct $0[00..] As #usn8,$`6esn` Starts With usn1,\"d_str\" Starts With _usn4 Starts With $_usn4 As `5esn` Order By 1.e1 Ascending Limit $`8esn`[0.12][12]"),
    octest:ct_string("Unwind Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 9e0[0..1e1]) Contains Any(`3esn` In 999 Where $`7esn`[`2esn`]) As `4esn` Delete `8esn`[.e1..],[\"d_str\" Ends With $1000 Ends With usn2] Is Null Is Null"),
    octest:ct_string("Delete #usn8[1e1..],Any(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0X0123456789ABCDEF In _usn3) Starts With Extract(`7esn` In $`8esn`[0.12][12] Where .e1[0X7..`2esn`]|0.e0[.e12]) Starts With Extract(`3esn` In @usn6[..\"d_str\"][..01] Where 1.e1[$`7esn`]|01234567[9e0][.0]),$#usn8 Starts With usn2 Starts With .12 Unwind usn2 As `3esn` Return *,0e0[$123456789..$999][\"d_str\"..Null] Order By [usn1[..$123456789][..`1esn`],0e0 Is Not Null][Extract(#usn8 In 0x0[_usn4..] Where 0X0123456789ABCDEF In _usn3|$`5esn`[0][.12])][[`6esn` In 0x0[9e0..] Where #usn7[@usn6..]]] Desc Skip `4esn` Ends With 's_str' Ends With @usn6 Limit $`6esn` Starts With $@usn6 Union All Delete `5esn` Ends With $999,$usn2 Starts With $`7esn` Starts With _usn4 Create (({`1esn`:1e1 Starts With 010})-[`2esn` *123456789..{`8esn`:.12 =~#usn7 =~01}]-(@usn6 {``:12.e12 Contains 's_str' Contains 0.12})<-[{#usn7:$123456789[..$`7esn`][..\"d_str\"]}]-({`3esn`:Null Is Null Is Null})),usn2=(((:@usn5{usn2:$999 Is Not Null})<-[``?:#usn8|:`6esn`]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]})-[usn2?:@usn5|:@usn6]->({#usn8:$`` Is Not Null Is Not Null,`8esn`:$usn2 Starts With 9e1 Starts With `7esn`})))"),
    octest:ct_string("Return Distinct [`6esn` In .e0['s_str'..][$`8esn`..] Where $@usn5 =~$usn2 =~True|.e0[$`1esn`..][_usn4..]] Starts With {_usn3:12.0 In 07,`2esn`:01234567[..`6esn`][..``]} Starts With All(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where _usn4[.._usn4]),Any(`3esn` In False In $`2esn` In 1e1 Where #usn7[.12][usn2])[{#usn7:0e0['s_str'],`1esn`:$#usn8[1.e1]}..[@usn6[.0],0X0123456789ABCDEF Is Not Null,0x0[$`2esn`..'s_str'][$@usn5..1.e1]]][[`4esn` Ends With 's_str' Ends With @usn6]..$`5esn`] As `3esn`,Filter(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $_usn3 =~`1esn`)[[`6esn` In .e0['s_str'..][$`8esn`..] Where 12.0[9e12]['s_str']|_usn4[#usn7..#usn8]]][[`7esn` In `8esn` In 12,usn2 =~`6esn`,.e12 =~\"d_str\" =~@usn5]] Order By @usn6(Distinct 0xabc Contains 0)[{_usn4:$`2esn` Ends With 1e1}..][All(_usn4 In 12.e12 Is Null Is Null Where 0e0 =~False =~.12)..] Descending Limit (@usn5 {`1esn`:0xabc[123.654][12]})-[:#usn8|:`6esn`{#usn8:0X7[..`5esn`][..$`7esn`]}]->(`2esn` :@usn6)-[`5esn`?:`7esn`]-({@usn6:'s_str' Ends With $7}) Ends With All(usn1 In 999 Where @usn6 Ends With 0.12 Ends With `3esn`) Union Return Distinct All(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $@usn6 Is Null) Is Not Null Is Not Null Skip [9e1[..01234567][..`4esn`]][[$@usn6 Is Not Null]][Extract(`3esn` In 999 Where 0x0 Contains .0|@usn5[..$999][..$0])] Limit (`5esn` :`8esn`{``:00 In 1000})<-[? *123456789..{`7esn`:01234567[9e0][.0],`2esn`:999 Ends With $`4esn`}]-({@usn6:$#usn8[0e0..][07..]}) Ends With (@usn6 {@usn6:$`7esn` Ends With $_usn4 Ends With `5esn`,usn1:123.654[0Xa..0x0][.12..12e12]})-[@usn5:@usn6]-(:`4esn`:usn2{_usn4:`1esn`[$7][0Xa]}) Return Distinct [usn1[..$123456789][..`1esn`],0e0 Is Not Null][Extract(#usn8 In 0x0[_usn4..] Where 0X0123456789ABCDEF In _usn3|$`5esn`[0][.12])][[`6esn` In 0x0[9e0..] Where #usn7[@usn6..]]] As #usn8,usn2 As @usn5 Create ((`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]})),(((`1esn` {@usn6:$12[#usn8..$@usn5][9e0..usn1]})<-[?:usn2|:``{_usn3:.e1 Ends With $123456789}]-(`4esn` {#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})-[`3esn`]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5}))) Union All Unwind 9e1 Contains _usn3 As `2esn` Return .0[@usn6..] Skip 0x0[$`2esn`..'s_str'][$@usn5..1.e1] Limit `2esn`[``..]"),
    octest:ct_string("Merge usn1=((#usn7 :`5esn`)<-[`2esn`?:`5esn`|:`1esn`]->(:usn2)) On Match Set [$`2esn` Ends With 1e1,07[0..]].``! =0x0 Starts With $usn2 Starts With $@usn6"),
    octest:ct_string("Merge #usn8=(((_usn4 :@usn5)-[? *..0X0123456789ABCDEF{#usn8:0X7[..`5esn`][..$`7esn`]}]-(#usn7 {@usn5:$`5esn` Contains $usn2})-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2))) On Match Set `2esn`+=(`3esn` )<-[? *123456789..{`7esn`:01234567[9e0][.0],`2esn`:999 Ends With $`4esn`}]-({@usn6:$#usn8[0e0..][07..]}) Is Null Is Null"),
    octest:ct_string("With Distinct .e0[..$`5esn`][..``] As `8esn` Skip .e1 Starts With $`` Limit $_usn3 Is Not Null Is Not Null Where `1esn`[usn1] Unwind 00[01234567][Count(*)] As _usn3 Remove #usn8:usn1:``,usn1:`6esn`:`3esn` Union All Optional Match #usn8=(`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]})-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->($@usn6)<-[`8esn`?:usn1|#usn7 *01..7{usn1:123456789[$_usn4..]}]-(@usn5 :`2esn`:@usn5$#usn8),_usn4=(`2esn` :`5esn`{`1esn`:$@usn6 Ends With 0.0})<-[`2esn`?*{`3esn`:$@usn5 Is Not Null Is Not Null}]-(:`7esn`{``:9e1[$#usn8],`4esn`:1.e1 Is Null Is Null}) Create (((@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})-[:`8esn`|@usn6*..]->(#usn8 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})-[? *..0X0123456789ABCDEF]-(@usn5 {@usn6:$123456789[12.0],#usn7:usn1 =~_usn4 =~$usn1}))),`7esn`=(((:`3esn`{#usn7:_usn3 =~$12})-[`7esn`? *123456789..]-(:`2esn`:@usn5{#usn8:$usn2 Starts With 9e1 Starts With `7esn`})-[ *..0X0123456789ABCDEF{@usn6:`4esn` Is Not Null,`2esn`:@usn6[.0]}]->(`` :usn1:``{@usn6:010[`1esn`..`4esn`]})))"),
    octest:ct_string("Detach Delete Null =~Count(*) Detach Delete (:_usn4{_usn3:`1esn`[Null..]})-[{`8esn`:'s_str'[$#usn8]}]->(`8esn` :@usn5) Is Not Null Is Not Null Remove All(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 0 Is Not Null Is Not Null).#usn8,All(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $`2esn`[$``..12e12]).`8esn`?,Single(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 01 Is Null)._usn3! Union Remove All(`6esn` In .e0['s_str'..][$`8esn`..] Where 0.12[123456789..]).`4esn` Return (:`4esn`:usn2{_usn3:Null Is Not Null Is Not Null,`4esn`:$1000 Is Not Null})<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]->(:@usn5{usn1:12.e12 Is Null Is Null,``:Null Is Not Null Is Not Null}) Ends With {@usn6:_usn3[0Xa..]} As usn1,True Is Null Order By [12 Is Null Is Null,9e0[$@usn6]] Contains Extract(`6esn` In .e0['s_str'..][$`8esn`..] Where `8esn`[0x0..]|.e0['s_str'..][$`8esn`..]) Contains #usn7 Asc Skip 9e1[$`2esn`..][12.e12..] Remove `6esn`:`7esn`,$12.`8esn`!,#usn7:`3esn` Union All Merge (((`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})<-[?:@usn5|:@usn6]->(#usn8 :#usn8:#usn7)-[#usn7?:`7esn` *..010]-(`1esn` {usn2:@usn5[$`1esn`..][$7..],@usn6:$#usn8[0xabc..usn2]}))) On Create Set `6esn`+=Count(*) Ends With 7 Ends With 0 On Match Set usn1 =Extract(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0|0[_usn3][.12]) Starts With (#usn8 :`8esn`)<-[`2esn`?:`3esn`|_usn4]-(#usn7 :`7esn`{`3esn`:$#usn8[..123456789][..`2esn`],#usn8:0.e0 Ends With #usn8})-[:`5esn`|:`1esn`]-(@usn5 :`5esn`) Merge ``=(((_usn3 :`1esn`:@usn6)<-[:@usn5|:@usn6 *01234567..123456789]->(`1esn` :`7esn`{`6esn`:1e1 In 12.e12})<-[``?:#usn8|:`6esn`{usn1:$#usn7[..$999][..9e1]}]->(`1esn` :`4esn`:usn2))) On Match Set #usn8+=0.e0 In `2esn`,`5esn`+=False[$_usn4..][`8esn`..],@usn6+=(usn1 {@usn5:12e12 Ends With `6esn`,_usn4:\"d_str\" Starts With _usn4 Starts With $_usn4})<-[?:#usn7|`5esn`{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}]->(@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})<-[?:`1esn`|@usn6]->(`6esn` :`2esn`:@usn5) Is Null On Match Set {`8esn`:$`6esn`[$`1esn`..]}._usn3? =False Contains Null Contains 1000,@usn5 =@usn5 =~False =~`8esn` Create ((:#usn8:#usn7{`8esn`:0Xa[Count(*)][0xabc]})<-[`2esn`?:`3esn`|_usn4]-(@usn5 :`5esn`))"),
    octest:ct_string("Optional Match ((`3esn` :`2esn`:@usn5)<-[usn2?:#usn8|:`6esn` *7]-(:@usn6)) Where @usn6[$0..Null] Union All Remove Any(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $999[...12][...e12]).#usn8?,Any(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where @usn5['s_str'..$`2esn`]).@usn5! Union Return *,0.0[`7esn`][`6esn`],.e1[0X7..`2esn`] Order By @usn5 In .e0 In \"d_str\" Asc,[$999[@usn5..][Null..]] Ends With ({usn2:0Xa Contains $`6esn`,_usn3:\"d_str\" Ends With $`3esn`})-[@usn5? *00{@usn5:usn1 Ends With 1.e1 Ends With `4esn`}]-(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})-[:`5esn`|:`1esn`]-(`2esn` ) Descending,12.0 Contains 12.e12 Contains 0x0 Descending Limit 0xabc[..$999] Detach Delete (_usn4 :_usn3:@usn5)<-[@usn6:`8esn`|@usn6{@usn6:#usn8 =~#usn7 =~0x0,`7esn`:$usn1 Ends With $`2esn`}]->(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[?:`6esn`]->(`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})[Any(`5esn` In $usn2 Contains $`1esn` Where @usn6[$usn1][$`2esn`])..][None(`3esn` In False In $`2esn` In 1e1 Where True Contains $`` Contains 01234567)..] Merge _usn3=(:`8esn`)-[?{`2esn`:`4esn` Starts With $#usn8 Starts With $#usn8}]->(:`1esn`:@usn6{`8esn`:$`8esn` Contains $`2esn` Contains False})-[`6esn` *00]->(:`2esn`:@usn5{#usn8:12.0[`3esn`][_usn3]}) On Match Set None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where False In $`2esn` In 1e1).usn1? =Count(*)[$1000..01],Extract(`3esn` In False In $`2esn` In 1e1 Where $`` Starts With 0x0|0.12 Is Null Is Null).@usn5! =07 Ends With $_usn4 Ends With 0.e0 On Create Set #usn8+=`7esn` Is Null"),
    octest:ct_string("Detach Delete 12[$_usn4..12.0],0Xa[.e12..],.e1 Is Not Null Is Not Null"),
    octest:ct_string("Match #usn8=((`` :usn2)<-[_usn4?:`3esn`|_usn4 *7]-(`5esn` :usn1:``)) Merge `1esn`=(_usn4 {`4esn`:01234567[..00][..$`3esn`],usn1:00[\"d_str\"][False]}) Detach Delete [$123456789[`3esn`..`5esn`][1e1..$`5esn`],0x0 =~`5esn` =~$`8esn`,123.654[.e12..\"d_str\"]] In {#usn8:#usn7 In #usn7} In {usn1:7 Ends With `3esn` Ends With $`2esn`},(#usn8 :#usn8:#usn7)<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(`4esn` :`5esn`) Contains {_usn3:12.0 In 07,`2esn`:01234567[..`6esn`][..``]},$usn2 Ends With 0 Ends With 12.0"),
    octest:ct_string("Optional Match `6esn`=((:#usn8:#usn7{`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]})) Remove $_usn3.`4esn`,(:`4esn`:usn2$``)<-[usn2?]->(usn2 {usn2:`7esn` Contains .0 Contains #usn8}).`3esn`! Union All Optional Match (((`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})<-[?:@usn5|:@usn6]->(#usn8 :#usn8:#usn7)-[#usn7?:`7esn` *..010]-(`1esn` {usn2:@usn5[$`1esn`..][$7..],@usn6:$#usn8[0xabc..usn2]}))),``=((:``:`6esn`{@usn6:$`4esn`[$@usn5..`7esn`],`5esn`:_usn4 Starts With `6esn` Starts With $`8esn`})<-[`6esn`?:#usn8|:`6esn` *0X7..0x0{``:`6esn`[`7esn`..$_usn3][9e0..#usn8],`8esn`:.0[01234567]}]->(:@usn5{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2})) Unwind All(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]) In Single(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 1000 Starts With ``) As @usn5 Union All Delete Single(usn1 In 123.654 =~.e0 =~9e0 Where 7[$1000][1000])[(`7esn` {`8esn`:0 Is Null Is Null})<-[ *..0X0123456789ABCDEF{@usn6:`4esn` Is Not Null,`2esn`:@usn6[.0]}]-(`6esn` :usn2)][Single(`3esn` In False In $`2esn` In 1e1 Where True Contains .e1 Contains `2esn`)] With  *,0x0[9e0..]"),
    octest:ct_string("Create (({_usn4:.e0[$`1esn`..][_usn4..],usn2:.12[0X0123456789ABCDEF..]})) Remove [`2esn` In $#usn8 Starts With usn2 Starts With .12]._usn4?,{`8esn`:123.654[$``][#usn7],`1esn`:0e0 Starts With $@usn6 Starts With $7}.usn1 Delete All(#usn8 In 0x0[_usn4..] Where 0X0123456789ABCDEF In _usn3) Ends With Single(`6esn` In 0x0[9e0..] Where $#usn8[0e0..][07..]),0xabc =~01"),
    octest:ct_string("Unwind `6esn`[False..] As #usn8 Match ((:#usn8:#usn7{`8esn`:0Xa[Count(*)][0xabc]})<-[`2esn`?:`3esn`|_usn4]-(@usn5 :`5esn`)) Where usn1 Is Null Remove None(`6esn` In .e0['s_str'..][$`8esn`..] Where .12).`8esn`?"),
    octest:ct_string("Delete 999 Ends With 123456789 Ends With 12.0,9e1[$`5esn`..][`5esn`..] Unwind {`8esn`:12 Is Null Is Null}[[`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 1000 Starts With 0e0 Starts With 0|$#usn8 Ends With _usn4 Ends With usn2]..][[usn1 In 0xabc Is Not Null Is Not Null Where $@usn6 Is Null|$`6esn`[$`6esn`..][0X7..]]..] As @usn5 Union Merge #usn8=(@usn6 {@usn6:$`7esn` Ends With $_usn4 Ends With `5esn`,usn1:123.654[0Xa..0x0][.12..12e12]})<-[:@usn6]->(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null}) On Match Set [`3esn` In 999 Where .e12 =~\"d_str\" =~@usn5].usn2 =0.0[0] On Match Set `3esn`+=Extract(_usn4 In 12.e12 Is Null Is Null Where 010 =~0e0 =~9e1|0Xa =~0Xa =~`3esn`)[Any(`3esn` In 999 Where $#usn7[..$999][..9e1])..None(usn1 In 0xabc Is Not Null Is Not Null Where 123456789[..0])][[`6esn` In 0x0[9e0..]|0x0 =~@usn5 =~01]..(usn2 :_usn3:@usn5)<-[`5esn`?:`7esn`]-(`8esn` {`3esn`:Null Is Null Is Null})-[`6esn` *00]->(`2esn` :`5esn`{`1esn`:$@usn6 Ends With 0.0})],`7esn` =$usn2[$`4esn`..$`2esn`],All(#usn8 In 0x0[_usn4..] Where `8esn`[0x0..]).`1esn`! =[0X0123456789ABCDEF[$_usn3][$_usn4]][None(`5esn` In 1e1 =~$`8esn` =~`1esn` Where .12[9e1..0X7])][(`5esn` {_usn3:1.e1 Is Null Is Null})<-[_usn3?:#usn7|`5esn` *..0x0]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})<-[?:@usn5|:@usn6]-(`7esn` {@usn6:.e0[123456789..][$`2esn`..],``:$0[`5esn`][9e12]})] Match ((`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]})),(((`1esn` {@usn6:$12[#usn8..$@usn5][9e0..usn1]})<-[?:usn2|:``{_usn3:.e1 Ends With $123456789}]-(`4esn` {#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})-[`3esn`]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5})))"),
    octest:ct_string("With  $#usn8[..9e12][..$`3esn`],Single(#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]) Contains Single(`5esn` In $usn2 Contains $`1esn` Where `2esn` Contains `3esn` Contains $@usn5) Contains {_usn3:0xabc Contains 0,`6esn`:$`6esn`[.e12..$`6esn`][$#usn7...0]} As _usn4,[#usn8 In 07['s_str'][$@usn6] Where 9e0 Starts With 0e0 Starts With $`5esn`] Starts With Extract(_usn4 In 12.e12 Is Null Is Null Where _usn4 In .0 In .12|usn2 In 1e1 In `4esn`) Starts With None(`3esn` In @usn6[..\"d_str\"][..01] Where 12[`5esn`..$`3esn`][0.12..usn2]) Order By $`3esn`[9e1..][`2esn`..] Desc,Filter(usn1 In 999 Where True[$usn1..12][``..\"d_str\"]) Starts With [$`2esn`[.._usn3]] Ascending,(_usn3 :#usn8:#usn7)<-[{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(`3esn` :`4esn`:usn2)[[`3esn` In 999 Where _usn4[1000..``]|Null[9e1][$`6esn`]]..({_usn4:$1000[$usn1][.e1]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`1esn` {`6esn`:07})<-[`5esn`?]-(@usn5 {`5esn`:0e0[...e1]})] Desc Limit (@usn5 :`2esn`:@usn5$#usn8)-[`6esn`?:`1esn`|@usn6 *0xabc..]->(:_usn4{_usn3:`1esn`[Null..]}) Starts With 12.0 Starts With Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) Where $`6esn`[00..$12] Union With  *,0 =~#usn8 As `2esn`,$#usn8 Is Null Is Null As usn2 Order By Count(*) Ends With 7 Ends With 0 Ascending,$`3esn` Ends With $7 Ends With `7esn` Ascending Limit Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null|12.0 Contains 12.e12 Contains 0x0) Starts With Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1e1 Contains 0Xa) Merge (`6esn` :`2esn`:@usn5)<-[`1esn`?:_usn4|_usn3]-(`1esn` {@usn6:Null In 0xabc}) On Create Set _usn4+=$_usn4 =~0X7 On Match Set {@usn5:usn2,usn1:0.0[.12..`8esn`]}._usn4 =1e1[`3esn`] Union Optional Match `4esn`=((:`8esn`)-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :_usn3:@usn5)) Where 12.e12[`2esn`..7] Unwind $12[#usn8..$@usn5][9e0..usn1] As ``"),
    octest:ct_string("Merge `3esn`=(($_usn3)) On Create Set Extract(usn1 In 999 Where 1e1 =~$`8esn` =~`1esn`|7 Starts With $@usn6).`5esn`! =(:``:`6esn`{`8esn`:123.654[.e12..\"d_str\"]})<-[_usn3:`3esn`|_usn4]->(_usn3 :`4esn`:usn2) Is Not Null Is Not Null,``+=$`7esn` Contains 010 Contains $_usn3,`4esn`+=Extract(`3esn` In 999 Where $`5esn`[.e1][#usn8]|$#usn8[@usn5..$1000]) =~Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $#usn8 =~7 =~.12) =~Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 123.654 Is Not Null Is Not Null) On Match Set `3esn` =usn1(Distinct 0 Is Null Is Null,$@usn5 =~$usn2 =~True) In Any(usn1 In 999 Where @usn6 Ends With 0.12 Ends With `3esn`) In [`4esn` Ends With 's_str' Ends With @usn6,$`4esn` In 0x0] Unwind (@usn5 :usn2{`3esn`:0.0 Ends With $usn1 Ends With $999,`5esn`:1.e1 Is Null Is Null})-[`3esn`? *0..]->(:`2esn`:@usn5{#usn8:$usn2 Starts With 9e1 Starts With `7esn`})-[:`5esn`|:`1esn`]-(`8esn` :``:`6esn`{#usn7:$`3esn` Is Null}) Is Not Null Is Not Null As _usn4 Union With Distinct $0[00..] As #usn8,$`6esn` Starts With usn1,\"d_str\" Starts With _usn4 Starts With $_usn4 As `5esn` Order By 1.e1 Ascending Limit $`8esn`[0.12][12] Optional Match ((`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]})),(((`1esn` {@usn6:$12[#usn8..$@usn5][9e0..usn1]})<-[?:usn2|:``{_usn3:.e1 Ends With $123456789}]-(`4esn` {#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})-[`3esn`]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5}))) Where 9e0[$@usn6] Merge `8esn`=(:#usn8:#usn7{`6esn`:`5esn`[12.0]})"),
    octest:ct_string("Merge usn2=(((`1esn` {usn2:@usn5[$`1esn`..][$7..],@usn6:$#usn8[0xabc..usn2]})-[:@usn5|:@usn6]->(`5esn` {usn2:`6esn` In $``})-[? *0xabc..]->(`6esn` {`5esn`:0x0 =~@usn5 =~01}))) On Match Set 0.0._usn3 =$123456789[0X0123456789ABCDEF..123.654] Merge usn2=((({@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})-[?:`2esn`|:`7esn` *0X7..0x0{usn2:0.12 Contains 0x0 Contains @usn5,_usn3:.e12 Contains $usn2 Contains $@usn6}]-(:`2esn`:@usn5{`4esn`:_usn3 =~$12,_usn4:.e1 =~usn2 =~`7esn`})-[`6esn` *00]-(:`8esn`{@usn5:1000 Starts With 0e0 Starts With 0,#usn7:$`5esn`[`4esn`..$`2esn`]}))) On Match Set `3esn`+=#usn8 Remove [$`8esn` Ends With #usn8,01234567[..00][..$`3esn`]].`5esn`?,[True,$1000[..`6esn`][..123456789]].#usn7,Any(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where .e12 =~@usn5)._usn4 Union All Delete (`2esn` {_usn3:.e1 Ends With $123456789})<-[?{usn2:9e0[0..1e1]}]->({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})[Any(`6esn` In .e0['s_str'..][$`8esn`..] Where Null In 0xabc)..Filter(usn1 In 123.654 =~.e0 =~9e0 Where Count(*) Contains 12e12 Contains 0xabc)][[$`` Is Not Null Is Not Null,$#usn7[9e12..12],`7esn` Is Null Is Null]..Extract(`5esn` In $usn2 Contains $`1esn` Where \"d_str\" Contains $999 Contains `2esn`|.e12[``][$1000])],.e0 =~$1000,Filter(`6esn` In 1000[12.e12][#usn7] Where #usn7 Ends With 0.12) In (usn2 :_usn3:@usn5)<-[`5esn`?:`7esn`]-(`8esn` {`3esn`:Null Is Null Is Null})-[`6esn` *00]->(`2esn` :`5esn`{`1esn`:$@usn6 Ends With 0.0})"),
    octest:ct_string("With  ``[{`6esn`:12[`5esn`..$`3esn`][0.12..usn2]}..],[.12 Is Null,12 Ends With 0 Ends With Null,0x0 =~@usn5 =~01][{usn2:$`6esn`[.e12]}],$_usn3 Is Not Null Limit @usn5 Ends With 1000"),
    octest:ct_string("Detach Delete $`7esn` =~1.e1 =~0.e0,$``[$_usn4][$`3esn`],usn2[Count(*)][$`1esn`] Unwind 0X7[..$0][..0.12] As `5esn` Remove [`5esn` In $usn2 Contains $`1esn` Where True Contains .e1 Contains `2esn`]._usn3!,`5esn`:#usn8:#usn7,[\"d_str\"[..01234567][..$1000],$usn2[12.0..][`8esn`..],.e1[0X7..`2esn`]].@usn5? Union Merge (_usn3 :@usn6{@usn5:0e0 =~False =~.12})<-[:`5esn`|:`1esn`]->(:`4esn`:usn2$``)<-[`7esn`?:`` *0Xa]-(`1esn` :usn2{_usn3:$`1esn` Is Not Null Is Not Null,`2esn`:0X7 Contains 12.0}) Merge `5esn`=(:`4esn`:usn2{_usn3:Null Is Not Null Is Not Null,`4esn`:$1000 Is Not Null})-[?:`3esn`|_usn4 *01..7{@usn5:`4esn`}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]})<-[?:usn2|:`` *7]->(`` :_usn3:@usn5) Union Unwind [`6esn` In .e0['s_str'..][$`8esn`..] Where $`7esn`[..$`8esn`]|$`8esn`[`7esn`]] Is Not Null As `5esn` Remove None(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $usn2[12.0..][`8esn`..]).`4esn`,Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where `` Contains $_usn3 Contains 0e0|$@usn5 Is Not Null Is Not Null)._usn4"),
    octest:ct_string("Remove [$#usn8[0xabc..usn2],$#usn7,$#usn8[0e0..][07..]].`4esn`,usn2(1000 Ends With $`5esn`,$`3esn` Ends With `1esn` Ends With 1.e1).`3esn`? Unwind 01 Ends With 123456789 As `1esn` With  *,$`7esn`[..0X7][..False] Skip 07 =~0.e0 Union All Optional Match @usn6=(_usn3 {`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`}) Union Unwind Single(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]) Starts With (:usn1:``{_usn4:1000[12.e12][#usn7]})-[ *7{`4esn`:$#usn7[$`3esn`..$999],`8esn`:$0[00..]}]-({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]}) Starts With {`1esn`:`5esn` In 12.e12 In 1000,`3esn`:0Xa Contains $`6esn`} As `3esn` With Distinct $_usn3[0e0..][12.0..] As `3esn` Order By None(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1) In {`6esn`:1.e1[0..],usn2:`` Contains $_usn3 Contains 0e0} Descending,$123456789 In `8esn` In 0X7 Descending Skip 12.0[9e1..][Null..] Where 1e1 Contains 0Xa"),
    octest:ct_string("With Distinct Extract(`3esn` In False In $`2esn` In 1e1 Where `` Contains 010 Contains $1000|@usn5['s_str'..$`2esn`])[`5esn`(0e0['s_str'])][None(`6esn` In 0x0[9e0..] Where 0xabc Is Not Null Is Not Null)] As @usn5 Order By {`6esn`:$1000 =~$`8esn` =~$`2esn`}[{_usn3:12.0[..0X7],usn2:$_usn3[0e0..][12.0..]}] Descending,All(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $usn2[12.0..][`8esn`..])[(`6esn` :`5esn`{`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})-[:@usn5|:@usn6 *01234567..123456789]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null})<-[?:`4esn`*]->(@usn5 :usn2{`3esn`:0.0 Ends With $usn1 Ends With $999,`5esn`:1.e1 Is Null Is Null})..] Desc Limit $12[`3esn`][`3esn`] Where 123.654 Is Not Null Is Not Null Union Return False In 0e0 As @usn6,12e12 In Null As #usn8 Return Distinct Filter(`6esn` In 1000[12.e12][#usn7] Where $usn2 Contains $`1esn`) As `5esn`,[`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12]] Ends With [0] Ends With `8esn` As _usn4 Union Optional Match (((`4esn` :`3esn`)-[?:`6esn`]->(`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})-[`2esn`? *7]->(usn1 :`8esn`{`5esn`:$usn1 Starts With Null Starts With $``,`5esn`:0 Contains $@usn5}))) Optional Match #usn7=((#usn7 :`5esn`)<-[`2esn`?:`5esn`|:`1esn`]->(:usn2)),((_usn3 :`6esn`:`3esn`{`7esn`:1000 Ends With 01234567 Ends With usn1})-[usn2?:_usn4|_usn3{#usn8:12.0[`3esn`][_usn3]}]-(usn2 :`4esn`:usn2{`3esn`:@usn5[$`1esn`..][$7..]})<-[usn2:`3esn`|_usn4]-(usn2 :@usn6{@usn5:#usn8[True..#usn7][01..@usn5]}))"),
    octest:ct_string("Return 0[..07][..False] As `2esn`,usn2,.12 Is Not Null As usn2 Order By [#usn7[@usn6..]] In All(#usn8 In 0x0[_usn4..] Where 0xabc[123.654][12]) In All(usn1 In 999 Where `5esn` Ends With $999) Desc,`2esn` Is Not Null Is Not Null Ascending,[.0[@usn6..],`2esn`[`3esn`..],Count(*) Contains 12e12 Contains 0xabc] Is Not Null Asc Skip 01234567 Contains 0.12 Contains `5esn` Limit _usn3[`4esn`..] Optional Match `7esn`=(usn1 :_usn4)<-[usn1]->(:`3esn`{`7esn`:12.e12[.12..$_usn3][0e0..9e0],`7esn`:0X7[..True][..01234567]})<-[_usn3?:`` *..010{usn2:`7esn`[_usn4..][Count(*)..]}]->(`8esn` :``:`6esn`{#usn7:$`3esn` Is Null}),usn1=(`7esn` :`7esn`)-[?:`` *07{`1esn`:$#usn7[$`3esn`..$999]}]->(_usn3 {_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null}) With Distinct Extract(`3esn` In 999 Where .e12 Is Null Is Null|$`7esn`[usn2])[Extract(usn1 In 999 Where 7 =~False|$usn2 Starts With 9e1 Starts With `7esn`)] As `8esn`,0Xa Contains $#usn8 Contains `5esn`,Any(`6esn` In 1000[12.e12][#usn7] Where True[$usn1..12][``..\"d_str\"])[..[_usn4 Starts With `6esn` Starts With $`8esn`,``[0X7..][$@usn6..],$usn2 Starts With 9e1 Starts With `7esn`]] As `5esn` Order By 0[..123456789][..False] Asc Skip $`3esn`[...0][..$#usn7]"),
    octest:ct_string("Remove All(`5esn` In 1e1 =~$`8esn` =~`1esn` Where .e1 =~usn2 =~`7esn`).`8esn`"),
    octest:ct_string("With Distinct .12[...0] Order By 00[\"d_str\"][False] Asc,Null Is Not Null Is Not Null Asc,usn1($`2esn` Ends With 1e1)[..None(`6esn` In .e0['s_str'..][$`8esn`..] Where Null In 0xabc)][..Filter(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1)] Desc Skip 1000[$@usn6..][$#usn8..] Limit ({_usn4:$`5esn` Starts With $`3esn` Starts With 1.e1,`3esn`:1000[Null][$`7esn`]})-[_usn3?:#usn7|`5esn` *..0x0]->(`1esn` {`3esn`:@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`],`4esn`:0e0 Is Null})<-[? *01234567..123456789]->(:`3esn`{`7esn`:$123456789[`4esn`..]}) Contains Extract(`6esn` In 1000[12.e12][#usn7] Where usn1[9e1..]|0.12 Is Null Is Null) Merge `4esn`=(usn1 :`2esn`:@usn5{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc})<-[#usn8:`3esn`|_usn4*..{``:9e0 Is Null Is Null}]->(:@usn5{#usn7:0x0 In 0X0123456789ABCDEF,`2esn`:0Xa[Count(*)][0xabc]}) Union All Return 0 Contains $@usn5 As `8esn` Order By $`` Starts With 0x0 Descending Limit All(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $123456789 Is Not Null) Is Null Is Null Match `6esn`=(({@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})),({`2esn`:0,`3esn`:$`7esn` Starts With 07 Starts With `1esn`}) Where 9e12[1.e1] Union All Merge @usn5=(@usn6 {`1esn`:$#usn8 Starts With usn2 Starts With .12,@usn6:07[$`8esn`]})<-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]-(:`4esn`:usn2{`2esn`:0Xa Contains $`6esn`}) On Create Set `6esn`+=[`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12]] Ends With [0] Ends With `8esn`,#usn8:`5esn`,#usn7+=01234567[..`6esn`][..``]"),
    octest:ct_string("Merge `5esn`=(((`6esn` {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})<-[`5esn`:_usn4|_usn3 *0X7..0x0]-(#usn7 {`5esn`:00 Starts With usn1 Starts With Count(*),``:$999 Is Not Null})<-[`4esn` *123456789..]-(:`7esn`$#usn8))) On Create Set {`4esn`:Count(*)[..$_usn3][..$usn2]}.@usn5 =Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0]|.0 =~$@usn5 =~1.e1)[({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`4esn` :``:`6esn`)<-[_usn3:@usn6]->({@usn6:`5esn` Ends With $999})..],#usn7 =({`7esn`:`4esn` In $`2esn` In @usn5})-[:`1esn`|@usn6*..]->(:`8esn`{`8esn`:0X7 Contains 12.0,`3esn`:`4esn` Starts With `8esn`})<-[`4esn` *123456789..]-(:`7esn`$#usn8)[#usn7($123456789[`1esn`..][`7esn`..],$123456789 =~0e0)][[usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1]],`` =0.0 =~0 =~`` On Create Set `6esn`+=[`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12]] Ends With [0] Ends With `8esn`,#usn8:`5esn`,#usn7+=01234567[..`6esn`][..``] Remove `5esn`:_usn3:@usn5,Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 9e0[0..1e1]).`5esn`! Return 0x0[$7..][`7esn`..] As ``,#usn7[False..][123.654..],0xabc[..1e1] As `4esn` Order By _usn3 Ends With $`6esn` Ends With 0e0 Descending,_usn4[7..$999] Desc,0X0123456789ABCDEF[$_usn3][$_usn4] Desc Union Delete (:`1esn`:@usn6)<-[{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(`3esn` :`4esn`:usn2) =~[12 Is Null Is Null,9e0[$@usn6]],01234567[..00][..$`3esn`] Union All Unwind 00 Starts With 0X7 Starts With 123456789 As `7esn`"),
    octest:ct_string("Remove [9e1 Starts With 12.e12 Starts With 010,$@usn6 Is Null,01234567[..00][..$`3esn`]].`2esn` Union All Detach Delete 12[$_usn4..12.0],0Xa[.e12..],.e1 Is Not Null Is Not Null"),
    octest:ct_string("Detach Delete `2esn`[0.e0..$999] With Distinct $usn2 =~`6esn` =~`1esn`,(usn2 {usn2:`7esn` Contains .0 Contains #usn8})-[usn1{`1esn`:`7esn` Contains .0 Contains #usn8}]->(@usn6 :`5esn`{@usn5:.12[9e1..0X7]})[..(`4esn` :_usn3:@usn5)<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(_usn3 :@usn5{`2esn`:1.e1[#usn7][1.e1]})][..All(`6esn` In 1000[12.e12][#usn7] Where `1esn`[$7][0Xa])],`4esn`[$usn1..0xabc][123456789..usn1] As `3esn` Order By `2esn`[0.e0..$999] Ascending,$@usn5[All(`3esn` In @usn6[..\"d_str\"][..01] Where .12 Is Not Null Is Not Null)..] Descending,_usn4[.._usn4] Asc Skip None(usn1 In 999 Where _usn3 Is Not Null) In ``(7 Starts With $@usn6) In Extract(#usn8 In 07['s_str'][$@usn6] Where usn2[..1e1][..$_usn3]) Limit @usn5 In .e0 In \"d_str\" Where `1esn`[..$#usn7] Delete Count(*) Contains 12e12 Contains 0xabc,Null Contains $_usn3 Union All Unwind {`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]} Starts With Extract(usn1 In 999 Where 0.12[123456789..]) Starts With 010 As `2esn` Union All Optional Match #usn8=({usn1:False[$12],`1esn`:0.e0 Ends With $123456789})-[usn1:_usn3|`6esn`{#usn8:`6esn`[`7esn`..$_usn3][9e0..#usn8],`3esn`:\"d_str\" =~_usn3 =~0.0}]-({``:9e1[$#usn8],`4esn`:1.e1 Is Null Is Null})<-[@usn5?{`7esn`:`6esn` In $``}]->(usn1 {_usn3:#usn7 Ends With 0.12}),`2esn`=(:#usn7{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})<-[?:@usn6 *07{_usn3:$`1esn` Is Null}]-(`5esn` {`5esn`:#usn8 Is Not Null,`1esn`:01234567[`6esn`..]})<-[`7esn`:@usn5|:@usn6]->({_usn4:`7esn`[_usn4..][Count(*)..],`1esn`:01234567 In \"d_str\"}) Where `8esn` Contains 0X0123456789ABCDEF Create (`1esn` {@usn5:9e1 Starts With 12.e12 Starts With 010,`8esn`:$0[@usn6..][.e12..]}),((:`5esn`)-[@usn5? *00{@usn5:usn1 Ends With 1.e1 Ends With `4esn`}]-(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})) Create ((`7esn` {@usn6:.e0[123456789..][$`2esn`..],``:$0[`5esn`][9e12]})-[:`1esn`|@usn6 *0..{``:$`4esn` In 0x0}]-(:_usn3:@usn5{_usn3:.e0[$`1esn`..][_usn4..]})<-[?:#usn8|:`6esn`*]->(@usn6 :@usn5{`8esn`:$@usn6 Contains 0e0})),`7esn`=(((:`3esn`{#usn7:_usn3 =~$12})-[`7esn`? *123456789..]-(:`2esn`:@usn5{#usn8:$usn2 Starts With 9e1 Starts With `7esn`})-[ *..0X0123456789ABCDEF{@usn6:`4esn` Is Not Null,`2esn`:@usn6[.0]}]->(`` :usn1:``{@usn6:010[`1esn`..`4esn`]})))"),
    octest:ct_string("Delete All(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $@usn6 Is Null) Is Not Null Is Not Null Union All Delete $#usn8[0e0..][07..],0e0 In `8esn` In 0xabc Optional Match `7esn`=(usn1 :``:`6esn`)<-[usn2?]->(:`1esn`:@usn6{@usn5:`8esn`[12.e12][`4esn`]}),((@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})) Union All Delete usn2[$``..1e1] Unwind Any(`6esn` In 1000[12.e12][#usn7] Where 12.e12 Is Not Null) Contains All(#usn8 In 0x0[_usn4..] Where #usn8[..0X0123456789ABCDEF][...0]) As _usn4"),
    octest:ct_string("Return Distinct $1000[00..] As _usn4 Order By Count(*)[..12][..$999] Desc,$#usn8[0xabc..usn2] Asc,[0Xa[.e12..],'s_str' Contains 999,_usn4[.._usn4]][..Any(`6esn` In 0x0[9e0..] Where @usn5 In .e0 In \"d_str\")][..$usn2] Asc Skip $``[$_usn4][$`3esn`] Union Return *,usn2[$``..1e1] As @usn6 Create #usn8=((usn1 {@usn5:12e12 Ends With `6esn`,_usn4:\"d_str\" Starts With _usn4 Starts With $_usn4})-[`1esn`?]->(:#usn7{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})) Return Distinct *,(`7esn` {#usn7:1e1[`3esn`]})-[`3esn`]->(#usn8 {`7esn`:12.e12[.12..$_usn3][0e0..9e0],`7esn`:0X7[..True][..01234567]})-[:`1esn`|@usn6*..]->(:`8esn`{`8esn`:0X7 Contains 12.0,`3esn`:`4esn` Starts With `8esn`}) Is Not Null As @usn5,@usn6 Ends With 0.12 Ends With `3esn` As `2esn` Order By $`6esn`[00] Asc,All(`7esn` In $`8esn`[0.12][12] Where .e1 =~\"d_str\" =~'s_str') Ends With Any(usn1 In 999 Where $999[01234567][@usn5]) Ends With [01234567 Is Null Is Null] Desc,$#usn8[1.e1] Descending Skip Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) Ends With [1.e1[#usn7][1.e1],Null =~Count(*)] Ends With [#usn8[..0X0123456789ABCDEF][...0],$usn1 Is Not Null Is Not Null] Limit {@usn5:@usn5[..$999][..$0]} =~[`3esn` In @usn6[..\"d_str\"][..01] Where `1esn`[$7][0Xa]|.e0 Contains 999] =~[$usn2 Starts With $`7esn` Starts With _usn4]"),
    octest:ct_string("With Distinct *,usn2[..1e1][..$_usn3] As @usn5 Order By $`4esn` In [`6esn` In .e0['s_str'..][$`8esn`..] Where 12.0[9e12]['s_str']|_usn4[#usn7..#usn8]] In #usn8($usn1[usn1..$`8esn`][12e12..$``]) Asc,{@usn6:$#usn7[$`3esn`..$999],`5esn`:$`6esn`[00]}[..[1000 Ends With 01234567 Ends With usn1,Count(*) Contains 12e12 Contains 0xabc]] Ascending,[`3esn` In @usn6[..\"d_str\"][..01] Where @usn6 Contains $_usn3 Contains 12.0] In [`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789],01234567 Is Null Is Null,$`` Starts With 0x0] In All(usn1 In 0xabc Is Not Null Is Not Null Where usn1 In 010) Descending Where 7 Contains 1000 Contains $usn1 Union All Remove {@usn5:_usn3[_usn4..$`2esn`][$123456789..9e12]}.@usn6! Return Distinct Single(`5esn` In $usn2 Contains $`1esn` Where True Contains .e1 Contains `2esn`) In None(`3esn` In False In $`2esn` In 1e1 Where #usn7[.12][usn2]),`` In usn1 In 01234567,$`3esn` Ends With 123456789 Ends With 0.e0 As `7esn` Skip [`6esn` In 0x0[9e0..] Where 01234567[..`6esn`][..``]|01 Is Null] Starts With usn1(Distinct 0e0[...e1],$usn2 Ends With 0 Ends With 12.0) Starts With {@usn6:$usn1 Is Not Null Is Not Null,`7esn`:0x0 In 0X0123456789ABCDEF} Unwind None(#usn8 In 0x0[_usn4..] Where #usn8 Is Not Null) Is Not Null As @usn5 Union Merge `4esn`=((:`8esn`)-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :_usn3:@usn5)) Merge @usn6=(`8esn` :#usn7)-[ *0xabc..{``:0xabc =~01,`7esn`:$#usn7[123456789..][$`4esn`..]}]-(:#usn7{_usn3:7 Contains 1000 Contains $usn1})-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :`5esn`) On Match Set `5esn`+=\"d_str\" Ends With 123456789,`3esn` =12 Is Null On Create Set Single(`5esn` In 1e1 =~$`8esn` =~`1esn` Where .e12[$_usn4..0]).`2esn`! =$`8esn` Is Not Null,`2esn` =0 Is Null Is Null,_usn4 =Filter(`6esn` In 0x0[9e0..] Where $123456789 In 010 In $`8esn`) In ``(Distinct 0X0123456789ABCDEF In _usn3) In (_usn3 {usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`4esn`:1.e1 Is Null Is Null})-[`1esn`?:`1esn`|@usn6 *12]->(`8esn` :@usn6)"),
    octest:ct_string("Remove (#usn8 :`5esn`{_usn3:'s_str' Starts With $usn2,`2esn`:$`2esn` Starts With 9e12})<-[?:#usn8|:`6esn` *..0X0123456789ABCDEF]->(_usn3 {_usn4:usn2[9e0..0.e0][@usn5..`4esn`],_usn4:.e0['s_str'..][$`8esn`..]})-[`2esn` *01234567..123456789{usn1:False[$12],`1esn`:0.e0 Ends With $123456789}]-(#usn7 :#usn7{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2}).`1esn`?,Extract(`3esn` In 999 Where 0.e0 Ends With #usn8|01234567 Is Null).`5esn`! Merge `3esn`=((`7esn` {#usn7:1e1[`3esn`]})<-[_usn4?:``{@usn5:1000 Starts With 0e0 Starts With 0,#usn7:$`5esn`[`4esn`..$`2esn`]}]-(_usn4 :#usn8:#usn7)) On Create Set `2esn`:``:`6esn`,Extract(`6esn` In 0x0[9e0..] Where `7esn`[`8esn`][#usn7]|`8esn` Ends With $`1esn`).`1esn`? =1.e1 =~01234567,{@usn6:$123456789[12.0],#usn7:usn1 =~_usn4 =~$usn1}.`8esn`! =@usn6(Distinct $0 Contains 7 Contains 1.e1)[(_usn4 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8)][Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0X0123456789ABCDEF In _usn3)] Detach Delete usn1[..`7esn`][..$`8esn`],0x0[9e0..],True[$usn1..12][``..\"d_str\"] Union All Delete $usn1[#usn8..`8esn`][7..`4esn`],[.0 =~$@usn5 =~1.e1] =~{_usn4:0.0[Null..][.12..]} =~[$`1esn` Is Not Null Is Not Null,'s_str' Starts With $usn2] Union Unwind Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where `7esn` Contains .0 Contains #usn8) =~Filter(`6esn` In 1000[12.e12][#usn7] Where $0[1e1][`4esn`]) As @usn5"),
    octest:ct_string("Delete `` Contains .e1 Contains 9e12,(@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]})<-[``?:_usn4|_usn3 *0xabc..{#usn8:$#usn8[..9e12][..$`3esn`],@usn5:\"d_str\"[7..$999]}]->(`5esn` {usn2:`6esn` In $``}) Is Not Null Is Not Null,True Ends With `6esn` Ends With 9e0 Delete 0Xa[Count(*)][0xabc] Remove _usn3:`3esn` Union Merge ``=(`3esn` {``:`6esn`[`7esn`..$_usn3][9e0..#usn8],`8esn`:.0[01234567]})<-[?{usn1:$#usn7[..$999][..9e1]}]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})-[`6esn`?:usn1|#usn7]-(#usn7 :`3esn`{usn2:$`6esn`[.e12]}) On Match Set @usn6 =Extract(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0|0[_usn3][.12]) Starts With (#usn8 :`8esn`)<-[`2esn`?:`3esn`|_usn4]-(#usn7 :`7esn`{`3esn`:$#usn8[..123456789][..`2esn`],#usn8:0.e0 Ends With #usn8})-[:`5esn`|:`1esn`]-(@usn5 :`5esn`),`3esn` =$usn2 In 12,`` =$#usn8 Is Null Is Null On Match Set @usn5 =Filter(`6esn` In .e0['s_str'..][$`8esn`..]) Is Not Null Is Not Null,`5esn`+=[_usn4 In 12.e12 Is Null Is Null Where 0e0 =~False =~.12|Count(*) Contains 12e12 Contains 0xabc] Ends With {#usn7:_usn3[0Xa..]} Ends With _usn4(Distinct .e0 Contains 999) Optional Match ({@usn6:$#usn8[0e0..][07..]})-[`1esn`?]->(`7esn` :`8esn`{usn2:`5esn` =~``,`7esn`:`7esn` Is Not Null Is Not Null})-[:#usn7|`5esn`]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null}),`8esn`=(((`2esn` {_usn3:0[1e1..00]})-[_usn4?:usn2|:`` *7]-(`5esn` {`1esn`:999 Ends With $`4esn`})<-[`1esn`:_usn4|_usn3 *00{`1esn`:$#usn8 Starts With usn2 Starts With .12,@usn6:07[$`8esn`]}]-(`3esn` :`8esn`))) Where True[7][``] Union All Remove Single(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1).`2esn`,Filter(usn1 In 999 Where True[$usn1..12][``..\"d_str\"]).#usn8?,[$#usn7[$`3esn`..$999],$999 Is Not Null].#usn7!"),
    octest:ct_string("Detach Delete 999 In 0,07['s_str'][$@usn6] Unwind Filter(`5esn` In 1e1 =~$`8esn` =~`1esn` Where #usn7 In #usn7)[Single(`3esn` In 999 Where $123456789 =~usn1 =~0xabc)..] As #usn8 Merge ((_usn4 :`3esn`{`2esn`:999})-[?:_usn4|_usn3]->(`` :#usn8:#usn7)<-[``? *00{`4esn`:9e0[$@usn6]}]->(`4esn` :``:`6esn`{#usn7:`2esn`[`3esn`..],usn2:$usn2 Starts With $`7esn` Starts With _usn4})) Union All Merge usn1=((#usn7 :`5esn`)<-[`2esn`?:`5esn`|:`1esn`]->(:usn2)) On Match Set _usn4 ={`1esn`:$`8esn`[``..True][1000..0.12]} Ends With Any(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where Count(*)[..`5esn`]) Ends With Single(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 010 Is Null Is Null),#usn7:usn1:`` On Create Set (:_usn4{_usn3:`1esn`[Null..]})<-[`2esn`?*{`3esn`:$@usn5 Is Not Null Is Not Null}]-(#usn8 :`6esn`:`3esn`$#usn7)-[`5esn`?:usn2|:``{usn2:1000 Starts With 0e0 Starts With 0,`6esn`:9e1[$`3esn`][$`1esn`]}]->(#usn7 :`7esn`).`3esn`? =Filter(#usn8 In 07['s_str'][$@usn6] Where usn2[..1e1][..$_usn3]) Ends With [`4esn` In 0.12['s_str'..$0][$usn1..9e0]|`7esn`[..01]],_usn4 ={``:False Starts With $123456789,#usn8:7 =~False} Is Null Is Null,_usn4+={`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]} Starts With Extract(usn1 In 999 Where 0.12[123456789..]) Starts With 010 Remove [1000[Null][$`7esn`],12e12 Ends With 0 Ends With $@usn6].`4esn`!,Extract(`3esn` In @usn6[..\"d_str\"][..01] Where .e0[..$`5esn`][..``]|$#usn8 Starts With usn2 Starts With .12).usn2? Unwind usn2 =~`6esn` As `5esn`"),
    octest:ct_string("With  True[07] Order By $`8esn` Contains $`2esn` Contains False Descending,$_usn3[0e0..][12.0..] Ascending Limit 9e1[$`2esn`..][12.e12..] Merge (_usn3 :`3esn`{`1esn`:$999[@usn5..][Null..]})<-[{#usn8:999}]->(:@usn6) On Match Set usn2+={#usn8:.e0 Ends With $`1esn` Ends With 1000}[Filter(#usn8 In 07['s_str'][$@usn6] Where $12[0.0..])][Filter(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..])],`6esn`+=$@usn5[All(`3esn` In @usn6[..\"d_str\"][..01] Where .12 Is Not Null Is Not Null)..] Unwind 123.654 Is Null Is Null As `8esn`"),
    octest:ct_string("Match (@usn6 :`6esn`:`3esn`)-[:`3esn`|_usn4{usn1:$`6esn`[$`6esn`..][0X7..],@usn5:123456789 Starts With #usn8}]-(_usn3 :`1esn`:@usn6) Return [`4esn` In 0.12['s_str'..$0][$usn1..9e0]|`7esn`[..01]] Is Not Null Is Not Null As @usn6,None(usn1 In 0xabc Is Not Null Is Not Null Where 123456789 =~@usn5 =~$`5esn`) =~[`4esn` Ends With 's_str' Ends With @usn6] Skip Any(#usn8 In 07['s_str'][$@usn6] Where $`7esn`[usn2]) In [`6esn` In 0x0[9e0..] Where `5esn`[usn1]] In {_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]}"),
    octest:ct_string("Remove Filter(usn1 In 999 Where $999[01234567][@usn5]).`4esn`?,[`6esn` In 0x0[9e0..] Where 9e12 In 123.654 In True|usn1 =~12 =~$0]._usn4!,Any(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where `` Contains $_usn3 Contains 0e0).@usn6? Union Merge `6esn`=((:#usn8:#usn7{`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]})) On Match Set @usn5 =0.e0[$usn2..$@usn5] On Create Set Extract(`6esn` In 1000[12.e12][#usn7] Where 1.e1 Ends With 0x0 Ends With 1e1|@usn5[..$999][..$0]).`7esn`! =$12[usn2][12.0],_usn3:@usn6"),
    octest:ct_string("Return True[$usn1..12][``..\"d_str\"] As `` Limit `1esn` Union All Return *,(`7esn` {#usn7:1e1[`3esn`]})-[`3esn`]->(#usn8 {`7esn`:12.e12[.12..$_usn3][0e0..9e0],`7esn`:0X7[..True][..01234567]})-[:`1esn`|@usn6*..]->(:`8esn`{`8esn`:0X7 Contains 12.0,`3esn`:`4esn` Starts With `8esn`}) Is Not Null As @usn5,@usn6 Ends With 0.12 Ends With `3esn` As `2esn` Order By (usn1 {@usn5:12e12 Ends With `6esn`,_usn4:\"d_str\" Starts With _usn4 Starts With $_usn4})<-[?:#usn7|`5esn`{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}]->(@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})<-[?:`1esn`|@usn6]->(`6esn` :`2esn`:@usn5) Is Null Ascending,`1esn`[9e12..$123456789] Ascending,$123456789 Starts With `6esn` Starts With 123.654 Descending Skip Count(*) In $`2esn` Delete 07[..1e1][..$0] Match usn2=((`4esn` :`6esn`:`3esn`{`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]})-[:@usn5|:@usn6 *07]-(`2esn` )) Union All Return Distinct *,01[$0] As `5esn` Create ((_usn4 :#usn8:#usn7)<-[? *01234567..123456789]->(:`3esn`{`7esn`:$123456789[`4esn`..]})-[{usn1:`` Is Not Null Is Not Null,`2esn`:#usn8[..0X0123456789ABCDEF][...0]}]-(:usn1:``{_usn4:1000[12.e12][#usn7]})),``=(`3esn` {``:`6esn`[`7esn`..$_usn3][9e0..#usn8],`8esn`:.0[01234567]})<-[?{usn1:$#usn7[..$999][..9e1]}]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})-[`6esn`?:usn1|#usn7]-(#usn7 :`3esn`{usn2:$`6esn`[.e12]}) Return Distinct #usn8(Distinct 0x0[$7],#usn8[1e1..])[[1.e1[#usn7][1.e1]]..{usn1:`2esn` Is Null Is Null}][_usn3(Distinct usn1[$`1esn`..])..Extract(`3esn` In False In $`2esn` In 1e1 Where 1000 Ends With $`5esn`)] As `6esn`,$7[..$``] As `` Order By (`3esn` :usn2{#usn7:usn2[`6esn`..][.0..],#usn7:\"d_str\"[..$_usn3]})<-[?{`3esn`:'s_str'[$`6esn`..][$0..]}]->(`2esn` :@usn6)<-[?{`8esn`:$`7esn`[usn2],`1esn`:1000 Is Not Null}]-(#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]}) Is Null Desc,[usn1 In 123.654 =~.e0 =~9e0 Where False Starts With $123456789] Contains All(`6esn` In 1000[12.e12][#usn7] Where $`7esn`[..$`8esn`]) Contains [True,07 In Count(*),.e0['s_str'..][$`8esn`..]] Desc,Filter(#usn8 In 07['s_str'][$@usn6] Where usn2[..1e1][..$_usn3]) Ends With [`4esn` In 0.12['s_str'..$0][$usn1..9e0]|`7esn`[..01]] Desc"),
    octest:ct_string("Detach Delete Filter(usn1 In 999 Where True[$usn1..12][``..\"d_str\"]) Starts With [$`2esn`[.._usn3]] Merge @usn5=(`` :usn1:``{@usn6:010[`1esn`..`4esn`]}) On Match Set @usn6+=Single(`3esn` In @usn6[..\"d_str\"][..01] Where 12[`5esn`..$`3esn`][0.12..usn2])[[`6esn` In 0x0[9e0..] Where $#usn8[0e0..][07..]|0 Is Not Null Is Not Null]..][(`6esn` :usn1:``)<-[``?:usn1|#usn7]-(@usn5 :`2esn`:@usn5{@usn6:123456789 =~#usn8 =~$0})..],usn1+=Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 123.654 Is Not Null Is Not Null)[{usn1:$7[$12]}][Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where \"d_str\"[..$_usn3])] On Match Set usn1 =Extract(`6esn` In 1000[12.e12][#usn7] Where `7esn` Contains .0 Contains #usn8|$0[00..])[{`2esn`:07['s_str'][$@usn6],``:usn1[..$123456789][..`1esn`]}..`4esn`(Distinct 9e1 Contains 07,1000[07..][1.e1..])][Single(`5esn` In $usn2 Contains $`1esn` Where 0e0['s_str'])..[123456789[0.0..`2esn`][1.e1..$_usn4]]],`6esn`+=01234567[$`7esn`] Union With Distinct 7[.0..01] Limit usn1[..`7esn`][..$`8esn`] Union All Return *,(:`4esn`:usn2$``)-[`5esn`?:_usn4|_usn3{@usn5:7 =~False,_usn3:999 Ends With $`4esn`}]->(usn2 :``:`6esn`)<-[_usn3:`3esn`|_usn4]->(#usn7 :_usn4) Is Not Null,[`3esn` In False In $`2esn` In 1e1 Where `` Contains 010 Contains $1000|1000[12.e12][#usn7]] In [`3esn` In 999 Where `7esn` Is Null|$#usn8[0e0..][07..]] In Single(`5esn` In 1e1 =~$`8esn` =~`1esn` Where `8esn` Starts With $12 Starts With $1000) As `2esn` Limit All(`7esn` In $`8esn`[0.12][12] Where @usn5[..$999][..$0])[..({usn2:1000 Starts With 0e0 Starts With 0,`6esn`:9e1[$`3esn`][$`1esn`]})<-[`3esn`:_usn3|`6esn`]->(usn1 :#usn8:#usn7)]"),
    octest:ct_string("Remove Filter(`6esn` In .e0['s_str'..][$`8esn`..] Where $123456789[..`3esn`][..`7esn`]).`8esn`? Create `3esn`=(:`4esn`:usn2$``),(((usn1 :usn1:``{@usn6:_usn3[0Xa..]})<-[`3esn`? *0..]-({_usn4:.e0[$`1esn`..][_usn4..],usn2:.12[0X0123456789ABCDEF..]})<-[:@usn5|:@usn6 *999{`5esn`:0x0 =~@usn5 =~01}]->(:@usn6{``:00 In 1000}))) Merge @usn6=(((usn1 :_usn4)-[`2esn`? *7]->(`` :``:`6esn`{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]})-[`2esn`?:`3esn`|_usn4]->({`1esn`:1e1 Starts With 010}))) On Create Set _usn4 =0xabc[9e1..][07..],Filter(`3esn` In 999 Where _usn4[1000..``]).`2esn`? =$`2esn` Contains `6esn` Contains $`2esn` On Match Set (:`1esn`:@usn6)-[_usn3?:`8esn`|@usn6]-(:#usn8:#usn7{`6esn`:`5esn`[12.0]})-[`1esn`?:`3esn`|_usn4*..]->(_usn3 ).`2esn`! =.e0 =~7 =~False Union All Detach Delete $`7esn` Ends With $_usn4 Ends With `5esn`,#usn7 Is Not Null Is Not Null Union Create (((:`5esn`{_usn4:\"d_str\"[.0][9e0],usn1:.e12 Is Not Null Is Not Null})<-[ *..0X0123456789ABCDEF]->(`1esn` {`5esn`:$`7esn` Ends With $_usn4 Ends With `5esn`,#usn8:'s_str'[$#usn8]})<-[usn2?:`7esn`{``:`5esn`[usn1]}]->(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]}))) Detach Delete $`2esn` In $`6esn` In 0X7,0Xa[..1.e1],12 Starts With usn2"),
    octest:ct_string("Match @usn5=(`8esn` :#usn7)-[ *0xabc..{``:0xabc =~01,`7esn`:$#usn7[123456789..][$`4esn`..]}]-(:#usn7{_usn3:7 Contains 1000 Contains $usn1})-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :`5esn`) With Distinct $12[#usn8..$@usn5][9e0..usn1],9e1 Contains _usn3,1000 Ends With $`5esn` Where False[$12] Union All Return Extract(usn1 In 123.654 =~.e0 =~9e0 Where $123456789[`3esn`..`5esn`][1e1..$`5esn`]) Ends With [usn1 In 123.654 =~.e0 =~9e0 Where `5esn`[usn1]] As `` Order By [12 Is Null Is Null,9e0[$@usn6]][Filter(`6esn` In 0x0[9e0..] Where $123456789 In 010 In $`8esn`)..] Asc,0e0[...e1] Asc Skip {`5esn`:@usn6[$usn1][$`2esn`],`1esn`:12.0[9e12]['s_str']}[Extract(`2esn` In $``[$#usn8] Where 12e12 Ends With $_usn4 Ends With $`2esn`|.12 =~$#usn7 =~$``)][[12.0[`3esn`][_usn3]]]"),
    octest:ct_string("With Distinct .e1[01234567] As `6esn`,01 In $7 In $1000 As #usn7,$`1esn` Starts With True Starts With @usn5 Skip {`2esn`:$`2esn` Starts With 9e12} Contains {`3esn`:@usn5['s_str'..$`2esn`],usn2:#usn8[..0X0123456789ABCDEF][...0]} Limit (#usn7 :`3esn`{_usn3:.e0[$`1esn`..][_usn4..]})-[#usn8?:usn1|#usn7{`8esn`:$#usn7[`7esn`..][$`8esn`..]}]-(:`1esn`:@usn6) Is Not Null Is Not Null With Distinct $`8esn` Is Not Null Order By @usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`] Ascending Limit Extract(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where .12 Is Null|0X0123456789ABCDEF[$_usn3][$_usn4])[..All(usn1 In 123.654 =~.e0 =~9e0 Where False Starts With $123456789)] Where 0xabc =~01"),
    octest:ct_string("Unwind $#usn7[$`3esn`..$999] As usn1 Unwind `4esn` Starts With `8esn` As #usn8 Union All Merge usn2=(`2esn` {_usn3:0[1e1..00]})-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2) On Create Set usn2 =0x0[01234567..Null][0Xa...e12],{#usn8:#usn7[@usn6..]}.@usn6 =#usn7[False..][123.654..] On Match Set `4esn`:`6esn`:`3esn`,@usn5 =$`7esn` Contains usn2"),
    octest:ct_string("Detach Delete [usn2 Contains 07 Contains False,.12[usn1]] Contains [0 Contains $@usn5,False Contains $`1esn` Contains @usn6],0.12[123456789..] Delete \"d_str\" =~Count(*) =~$usn2,All(`6esn` In 1000[12.e12][#usn7] Where 9e12[\"d_str\"]) Contains [usn1 In 0xabc Is Not Null Is Not Null Where 9e0[123456789..0][12.0..@usn6]|True] Contains [_usn3 =~$12,`5esn`[0e0..]],`6esn`(1000[12.e12][#usn7],0x0 =~`5esn` =~$`8esn`) Is Null"),
    octest:ct_string("Delete $`5esn` Starts With $`3esn` Starts With 1.e1,Count(*)[$1000..01],Extract(`3esn` In 999 Where 0x0 Contains .0|@usn5[..$999][..$0])[[usn1 In 0xabc Is Not Null Is Not Null Where $@usn6 Is Null|$`6esn`[$`6esn`..][0X7..]]..(`4esn` :#usn8:#usn7)-[?:@usn5|:@usn6 *0Xa]-(:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`})-[usn2?:#usn8|:`6esn` *7]->(_usn4 :`8esn`)] Return $`4esn`[$1000..$`4esn`][0x0..$_usn3],$`1esn` Is Null Order By 07 Descending Skip `7esn`(.e0 =~7 =~False,010 Is Null Is Null) Starts With [$_usn4 =~0X7,`4esn`,0.0 Ends With $usn1 Ends With $999] Starts With {@usn5:Count(*)[..$_usn3][..$usn2],@usn5:$1000[$usn1][.e1]} Union Detach Delete (:``:`6esn`{`8esn`:123.654[.e12..\"d_str\"]})<-[_usn3:`3esn`|_usn4]->(_usn3 :`4esn`:usn2) Is Not Null Is Not Null Remove [`2esn` In $#usn8 Starts With usn2 Starts With .12]._usn4?,[$usn2[12.0..][`8esn`..],0xabc Contains 0].`1esn`,usn2:`6esn`:`3esn` Union All Merge `7esn`=(((`3esn` :usn1:``)<-[``{#usn7:$`2esn` =~False,``:12e12[..9e12][..$@usn6]}]-(`2esn` :`1esn`:@usn6{#usn8:.12 Is Not Null})-[@usn6{_usn4:$`` Starts With 0x0}]->(`1esn` {#usn7:$`7esn`[`2esn`]}))) On Match Set [`3esn` In False In $`2esn` In 1e1 Where $`6esn` Is Not Null].#usn8! =.0[@usn6..],(:`1esn`:@usn6{`5esn`:0Xa =~0Xa =~`3esn`})<-[_usn3:`3esn`|_usn4]->(_usn3 :`4esn`:usn2).`8esn`? =`2esn` =~$`2esn` =~$`4esn`,#usn8+=0xabc[..9e1]"),
    octest:ct_string("Remove #usn8:usn1:``,usn1:`6esn`:`3esn` Delete 07[..1e1][..$0] Unwind Single(`6esn` In 0x0[9e0..] Where $`3esn` Is Not Null) In (`3esn` :`8esn`{usn2:0e0 =~False =~.12})-[? *12{`1esn`:.e0 Ends With $`1esn` Ends With 1000}]->(#usn7 ) As usn2"),
    octest:ct_string("With Distinct *,07[..1e1][..$0] As _usn3 Order By $1000[00..] Descending Where $#usn8 In True In #usn7"),
    octest:ct_string("Detach Delete #usn7($123456789[`1esn`..][`7esn`..],$123456789 =~0e0)[(usn2 :_usn3:@usn5)<-[?:`2esn`|:`7esn`{`2esn`:usn2,`3esn`:1e1 Is Null}]->(`` :`5esn`)<-[@usn5?:_usn4|_usn3 *..010{@usn6:$123456789[`1esn`..]}]-(#usn7 :@usn6)..count(Distinct $123456789[`3esn`..`5esn`][1e1..$`5esn`],`1esn`)],7 Contains 1000 Contains $usn1 Delete $#usn7,[`3esn` In False In $`2esn` In 1e1 Where .12 =~$#usn7 =~$``] Is Not Null,(@usn6 {@usn6:$`7esn` Ends With $_usn4 Ends With `5esn`,usn1:123.654[0Xa..0x0][.12..12e12]})-[@usn5:@usn6]-(:`4esn`:usn2{_usn4:`1esn`[$7][0Xa]}) Contains [$_usn4[False..@usn6][`4esn`..$1000],$`2esn` Ends With 1e1] Optional Match (((`4esn` :`3esn`)-[?:`6esn`]->(`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})-[`2esn`? *7]->(usn1 :`8esn`{`5esn`:$usn1 Starts With Null Starts With $``,`5esn`:0 Contains $@usn5}))) Union All Create `5esn`=(:`6esn`:`3esn`),(:`4esn`:usn2{_usn3:Null Is Not Null Is Not Null,`4esn`:$1000 Is Not Null})-[?:_usn4|_usn3{`4esn`:`8esn`[0x0..],usn2:$#usn8 =~7 =~.12}]->(`` :`5esn`{@usn5:False Starts With $123456789,`3esn`:0x0[$7]})-[?:`` *07{`1esn`:$#usn7[$`3esn`..$999]}]->(@usn6 :``:`6esn`{#usn7:9e1 Contains _usn3})"),
    octest:ct_string("Return Distinct 0x0 In 0X0123456789ABCDEF As `4esn`,Single(usn1 In 999 Where _usn3 Is Not Null)[(`2esn` :_usn4{_usn4:$`8esn` Contains .0 Contains 0.12})<-[`6esn`:`3esn`|_usn4 *0X7..0x0$999]->({`5esn`:1e1[\"d_str\"..]})-[:`6esn` *123456789..{@usn5:07[0..],`8esn`:Count(*)[..$_usn3][..$usn2]}]-(:`5esn`{`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})..[`3esn` In False In $`2esn` In 1e1 Where _usn3 =~$12|True]] As `5esn`,usn2[9e12] Order By `4esn`[$#usn7][$#usn7] Asc,0X7 Contains $@usn6 Descending,Single(#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]) Contains Single(`5esn` In $usn2 Contains $`1esn` Where `2esn` Contains `3esn` Contains $@usn5) Contains {_usn3:0xabc Contains 0,`6esn`:$`6esn`[.e12..$`6esn`][$#usn7...0]} Descending Limit Extract(`2esn` In $``[$#usn8] Where `1esn`[Null..])[[12.0[`3esn`][_usn3]]]"),
    octest:ct_string("Delete False Ends With `7esn` Ends With $`3esn`,$#usn8[1.e1..],@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`] Union Create ``=(`` :#usn8:#usn7{@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]}) Union Return {`1esn`:$usn2 =~`6esn` =~`1esn`} Ends With 010 Ends With None(_usn4 In 12.e12 Is Null Is Null Where $`4esn` In 0x0),(:`1esn`:@usn6{`1esn`:12.0[9e12]['s_str'],`3esn`:$123456789 Is Not Null})<-[:`3esn`|_usn4 *12]->(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null})<-[usn2?:`8esn`|@usn6{#usn7:$`3esn` Is Null}]->(`2esn` :`8esn`) Starts With Any(`5esn` In $usn2 Contains $`1esn` Where `8esn` Contains 0X0123456789ABCDEF) As `3esn`,False[...e0][..$#usn8] As `8esn` Order By Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) Ends With [1.e1[#usn7][1.e1],Null =~Count(*)] Ends With [#usn8[..0X0123456789ABCDEF][...0],$usn1 Is Not Null Is Not Null] Ascending,{@usn5:$`4esn` In 0x0,`3esn`:`1esn`[..$#usn7]}[{@usn5:@usn5[..$999][..$0]}] Ascending Skip (_usn3 {usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`4esn`:1.e1 Is Null Is Null})-[`1esn`?:`1esn`|@usn6 *12]->(`8esn` :@usn6)[({usn1:$usn1 Starts With Null Starts With $``,@usn5:0x0[01234567..Null][0Xa...e12]})<-[ *..0X0123456789ABCDEF]->(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]})..]"),
    octest:ct_string("Create #usn8=(`` :`8esn`{`5esn`:True Contains .e1 Contains `2esn`}),_usn3=((@usn6 :#usn8:#usn7{``:Null Is Not Null Is Not Null})<-[`2esn`?:`5esn`|:`1esn`]->($1000)-[`6esn`? *999{_usn4:\"d_str\" Contains $999 Contains `2esn`}]-(`1esn` {_usn3:12.0 In 07,`2esn`:01234567[..`6esn`][..``]})) Delete $usn1 Is Not Null Is Not Null,Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0) =~Filter(`6esn` In 0x0[9e0..] Where `7esn` Is Null Is Null) =~[`6esn` In 0x0[9e0..] Where `7esn` Is Null Is Null|$`4esn`[.e1..$usn1]],0x0 Starts With $usn2 Starts With $@usn6 Create (((:_usn4{_usn3:`1esn`[Null..]})-[`2esn`? *7]-(#usn8 :_usn3:@usn5{`3esn`:@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`],`4esn`:0e0 Is Null})<-[?:#usn8|:`6esn`*]->(@usn6 :@usn5{`8esn`:$@usn6 Contains 0e0}))),`6esn`=((`3esn` :`2esn`:@usn5)<-[usn2?:#usn8|:`6esn` *7]-(:@usn6)) Union Merge (:`1esn`:@usn6{`8esn`:$`8esn` Contains $`2esn` Contains False})-[:`5esn`|:`1esn` *..0X0123456789ABCDEF]->(usn2 :`1esn`:@usn6)<-[`5esn`?:`1esn`|@usn6{`5esn`:#usn8 =~$1000 =~$1000,`2esn`:0x0[$7]}]-(@usn5 {`2esn`:$#usn7[`7esn`..][$`8esn`..],`3esn`:0.12['s_str'..$0][$usn1..9e0]}) Merge usn1=((`` :usn2{@usn5:usn2,usn1:0.0[.12..`8esn`]})<-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]-(`8esn` :#usn7)) On Create Set {`4esn`:Count(*)[..$_usn3][..$usn2]}.@usn5 =Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0]|.0 =~$@usn5 =~1.e1)[({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`4esn` :``:`6esn`)<-[_usn3:@usn6]->({@usn6:`5esn` Ends With $999})..],#usn7 =({`7esn`:`4esn` In $`2esn` In @usn5})-[:`1esn`|@usn6*..]->(:`8esn`{`8esn`:0X7 Contains 12.0,`3esn`:`4esn` Starts With `8esn`})<-[`4esn` *123456789..]-(:`7esn`$#usn8)[#usn7($123456789[`1esn`..][`7esn`..],$123456789 =~0e0)][[usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1]],`` =0.0 =~0 =~`` Union All Remove [`7esn` In $`8esn`[0.12][12] Where 0Xa[..9e12][...e0]|`5esn` =~``].``?,[`6esn` In 1000[12.e12][#usn7] Where 0xabc[123.654][12]]._usn4,[07['s_str'][$@usn6]].usn1 Return Distinct @usn5 Is Null As `5esn`,Filter(`6esn` In .e0['s_str'..][$`8esn`..] Where 12.0[9e12]['s_str'])[None(usn1 In 123.654 =~.e0 =~9e0 Where False Starts With $123456789)..`3esn`(Distinct 0.12[$usn1..$7],01234567[$`7esn`])],Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0e0 Starts With $@usn6 Starts With $7) =~[usn1 In 123.654 =~.e0 =~9e0 Where 0.12 Contains 0x0 Contains @usn5] =~{@usn5:$usn1 Ends With $`2esn`} Order By (`6esn` :`8esn`{usn2:#usn7 In #usn7,`1esn`:00['s_str']})<-[``?:@usn6]-(:`2esn`:@usn5{usn2:$`3esn` Ends With @usn6 Ends With 123.654})<-[@usn5?:@usn6 *..010]->(#usn7 :#usn7{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2}) Is Null Desc Detach Delete 's_str'[..Null][..$`5esn`],00[$12...e0],@usn5"),
    octest:ct_string("Optional Match `6esn`=(((:#usn8:#usn7{usn1:00['s_str'],#usn8:$`8esn`[``..True][1000..0.12]})<-[?:`1esn`|@usn6]->(#usn7 {`1esn`:$`4esn`[.e1..$usn1],``:0x0 =~`5esn` =~$`8esn`})-[{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]}]->(`3esn` :#usn7{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}))) Remove [usn1 In 0xabc Is Not Null Is Not Null Where .e12[..#usn7][..9e12]]._usn4,(@usn6 )<-[ *0Xa{#usn8:_usn4[#usn7..#usn8],usn2:9e0[0..1e1]}]->(#usn8 :#usn8:#usn7{@usn6:$#usn8[0e0..][07..],``:$`7esn` =~1.e1 =~0.e0})<-[#usn8?:#usn7|`5esn`{`3esn`:`5esn`[usn1],`2esn`:`6esn` In $``}]-(@usn5 {usn2:123.654 =~.e0 =~9e0,`3esn`:@usn6[.0]}).`5esn`,{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]}.`3esn` Union Remove {`8esn`:'s_str'[$#usn8]}.#usn8!,Extract(_usn4 In 12.e12 Is Null Is Null Where `2esn` Is Null Is Null).usn1? Detach Delete `6esn` Contains \"d_str\" Contains 0X7 Detach Delete #usn7 Ends With 9e0,(`2esn` {_usn3:.e1 Ends With $123456789})<-[?{usn2:9e0[0..1e1]}]->({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})[(`3esn` {`3esn`:@usn5[$`1esn`..][$7..]})-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->(`6esn` {`7esn`:12e12 Ends With 0e0,`8esn`:$_usn4[False..@usn6][`4esn`..$1000]})..[`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0X0123456789ABCDEF In _usn3|0.12[123456789..]]][(_usn4 :`8esn`)-[?:_usn4|_usn3]->(:_usn3:@usn5{`6esn`:$`8esn` Ends With #usn8,`8esn`:123456789 Ends With 9e1 Ends With ``})-[`4esn`?:#usn8|:`6esn` *999{`8esn`:010[`1esn`..`4esn`]}]-({@usn5:07[0..],`8esn`:Count(*)[..$_usn3][..$usn2]})..None(usn1 In 123.654 =~.e0 =~9e0 Where $123456789[`3esn`..`5esn`][1e1..$`5esn`])]"),
    octest:ct_string("Delete $usn2 Starts With $`7esn` Starts With _usn4,@usn5 In .e0 In \"d_str\",\"d_str\" Contains $999 Contains `2esn` Merge (((`6esn` {`7esn`:12e12 Ends With 0e0,`8esn`:$_usn4[False..@usn6][`4esn`..$1000]})-[:#usn7|`5esn`]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null})<-[`3esn`:usn2|:``]-(_usn3 {`3esn`:'s_str'[$`6esn`..][$0..]}))) On Match Set Any(_usn4 In 12.e12 Is Null Is Null Where 0x0[$`2esn`..'s_str'][$@usn5..1.e1]).`1esn`! =`` In False In True,_usn3(0[1e1..00]).``! =`7esn` Contains .0 Contains #usn8 Union Remove (`5esn` :`8esn`{``:00 In 1000})<-[`5esn`:_usn4|_usn3 *0X7..0x0]-(#usn7 {`5esn`:00 Starts With usn1 Starts With Count(*),``:$999 Is Not Null})<-[`4esn`?]->(:`2esn`:@usn5{#usn8:$usn2 Starts With 9e1 Starts With `7esn`}).@usn6,@usn5(0.0[.12..`8esn`]).`1esn`!,Any(`3esn` In 999 Where $`3esn`[9e0..0.0][_usn4..123456789]).#usn7?"),
    octest:ct_string("Unwind 0X7 Contains 12.0 As `3esn` Union Remove All(`3esn` In 999 Where 07 Ends With $_usn4 Ends With 0.e0).``,Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where $0 Ends With .12|$7 Ends With 12.e12 Ends With `1esn`).@usn5! With  $7[$12] As `6esn`,Null Is Null Is Null As #usn7,$`` Is Not Null Is Not Null Skip Extract(usn1 In 123.654 =~.e0 =~9e0 Where $123456789[`3esn`..`5esn`][1e1..$`5esn`]) Ends With [usn1 In 123.654 =~.e0 =~9e0 Where `5esn`[usn1]] Limit .12[0X0123456789ABCDEF..] Where 9e12 In 123.654 In True"),
    octest:ct_string("Delete 0[..123456789][..False],0xabc Is Not Null Is Not Null Optional Match #usn8=(((_usn4 :@usn5)-[? *..0X0123456789ABCDEF{#usn8:0X7[..`5esn`][..$`7esn`]}]-(#usn7 {@usn5:$`5esn` Contains $usn2})-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2))) Where @usn5[01234567..] Remove {`8esn`:0Xa[Count(*)][0xabc]}.usn1 Union All Match _usn3=((:`5esn`{`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})) Merge `6esn`=((`6esn` {`7esn`:`4esn` In $`2esn` In @usn5})-[:@usn5|:@usn6 *01234567..123456789]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null})) On Create Set #usn7 =$usn1[12e12],usn2 ={`5esn`:@usn6[$usn1][$`2esn`],`1esn`:12.0[9e12]['s_str']}[Extract(`2esn` In $``[$#usn8] Where 12e12 Ends With $_usn4 Ends With $`2esn`|.12 =~$#usn7 =~$``)][[12.0[`3esn`][_usn3]]],_usn4 =`3esn`($usn2 Starts With $`7esn` Starts With _usn4) Is Not Null Is Not Null On Create Set `2esn`:``:`6esn`,Extract(`6esn` In 0x0[9e0..] Where `7esn`[`8esn`][#usn7]|`8esn` Ends With $`1esn`).`1esn`? =1.e1 =~01234567,{@usn6:$123456789[12.0],#usn7:usn1 =~_usn4 =~$usn1}.`8esn`! =@usn6(Distinct $0 Contains 7 Contains 1.e1)[(_usn4 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8)][Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0X0123456789ABCDEF In _usn3)] Union Match ((_usn3 {`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`}))"),
    octest:ct_string("Unwind $@usn5 Starts With Count(*) Starts With $usn1 As usn2 With Distinct 0Xa Ends With 07 Ends With `7esn` As _usn3,All(`6esn` In 1000[12.e12][#usn7] Where 9e12[\"d_str\"]) Contains [usn1 In 0xabc Is Not Null Is Not Null Where 9e0[123456789..0][12.0..@usn6]|True] Contains [_usn3 =~$12,`5esn`[0e0..]] As `6esn` Skip Extract(_usn4 In 12.e12 Is Null Is Null Where _usn4 In .0 In .12|usn2 In 1e1 In `4esn`) Contains None(`3esn` In @usn6[..\"d_str\"][..01] Where `4esn` In .12 In $#usn8) Contains Filter(`5esn` In $usn2 Contains $`1esn` Where usn2[Count(*)][$`1esn`]) Limit $999 Contains 12e12 Return *,`4esn` In .12 In $#usn8,(`1esn` :`7esn`)-[`4esn`?:usn1|#usn7{`1esn`:123456789 Ends With 9e1 Ends With ``,@usn5:0xabc Contains 0}]->(:`7esn`{@usn6:`2esn`[``..]})[..{``:`` In 123.654 In 0.0}] Order By Extract(usn1 In 0xabc Is Not Null Is Not Null)[{#usn8:`6esn`[`7esn`..$_usn3][9e0..#usn8],`3esn`:\"d_str\" =~_usn3 =~0.0}..Filter(#usn8 In 0x0[_usn4..] Where #usn8[..0X0123456789ABCDEF][...0])][Single(`6esn` In 0x0[9e0..] Where $`3esn` Is Not Null)..None(#usn8 In 0x0[_usn4..] Where 0.e0 Is Not Null Is Not Null)] Desc,12.0 Contains 12.e12 Contains 0x0 Asc Skip $usn1[1e1..1e1] Union All Optional Match ((`4esn` {_usn3:7 Contains 1000 Contains $usn1})-[#usn8:@usn5|:@usn6 *0..{`6esn`:`6esn` In $``}]->(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[? *0xabc..]->(`6esn` {`5esn`:0x0 =~@usn5 =~01}))"),
    octest:ct_string("Remove `6esn`(.12 Is Not Null Is Not Null).``,Any(usn1 In 123.654 =~.e0 =~9e0 Where _usn3[0Xa..]).`8esn`? Optional Match `4esn`=((`8esn` :`4esn`:usn2{`5esn`:$0[`5esn`][9e12],``:#usn7[False..][123.654..]})<-[`4esn`{#usn8:123456789[..0],#usn8:.e12 =~\"d_str\" =~@usn5}]-(:``:`6esn`))"),
    octest:ct_string("Detach Delete `2esn` In usn1 Union All Remove [usn1 In 0xabc Is Not Null Is Not Null Where .e12[..#usn7][..9e12]]._usn4,(@usn6 )<-[ *0Xa{#usn8:_usn4[#usn7..#usn8],usn2:9e0[0..1e1]}]->(#usn8 :#usn8:#usn7{@usn6:$#usn8[0e0..][07..],``:$`7esn` =~1.e1 =~0.e0})<-[#usn8?:#usn7|`5esn`{`3esn`:`5esn`[usn1],`2esn`:`6esn` In $``}]-(@usn5 {usn2:123.654 =~.e0 =~9e0,`3esn`:@usn6[.0]}).`5esn`,{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]}.`3esn` Create (:usn2{usn1:_usn4[.._usn4],@usn6:@usn5 In .e0 In \"d_str\"})<-[_usn3?:#usn7|`5esn` *..0x0]->(`7esn` {#usn7:1e1[`3esn`]})"),
    octest:ct_string("Merge ((@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})) Union Return Distinct `7esn`[`7esn`] Skip $usn2 Starts With $`7esn` Starts With _usn4 Create ((:`2esn`:@usn5)-[@usn6?:_usn3|`6esn` *0..]->(:`1esn`:@usn6)<-[{#usn8:07[0..],``:_usn3[..`8esn`]}]-(`2esn` {_usn3:.e1 Ends With $123456789})),((`` :usn2)<-[_usn4?:`3esn`|_usn4 *7]-(`5esn` :usn1:``))"),
    octest:ct_string("Merge `8esn`=((`1esn` :`7esn`{`6esn`:1e1 In 12.e12})<-[:#usn7|`5esn`*{`8esn`:01[$0],``:0xabc Is Not Null Is Not Null}]-(_usn3 :`7esn`{#usn7:123.654 =~.e0 =~9e0,_usn3:`1esn`[Null..]})<-[`5esn` *0Xa]-(:usn1:``)) Merge (_usn4 :`3esn`{`2esn`:999})-[ *..010]-(`2esn` :_usn4{`7esn`:`2esn`[`3esn`..],`6esn`:.12 Is Not Null}) On Create Set _usn3+=0X0123456789ABCDEF,_usn4+=$`7esn`[..0X7][..False],`4esn`+=0.e0 Starts With $`6esn` Union Delete None(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where .e12 =~@usn5) Is Not Null Is Not Null,010 In 01234567 In `5esn`,(`4esn` :`3esn`)-[:`1esn`|@usn6 *0..]-(_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})<-[?:`1esn`|@usn6 *0Xa]-(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]}) Is Not Null Is Not Null Union All Return 12.0 Is Null Order By @usn6 Starts With .e0 Starts With .e12 Desc,usn2 Descending,1.e1[0..] Ascending Skip Count(*)[12..123.654][$`1esn`..$0] Remove {_usn4:12e12 Ends With $_usn4 Ends With $`2esn`,``:.12 Is Not Null}.`4esn`?,Extract(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]|$`2esn` =~False).`1esn`,`1esn`:``:`6esn`"),
    octest:ct_string("Remove _usn4(Distinct 01234567[`6esn`..]).`8esn`,``:usn2,[`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0X0123456789ABCDEF In _usn3|0.12[123456789..]].`2esn`? Union All Delete $#usn8[0e0..][07..] Merge #usn8=(`` :`8esn`{`5esn`:True Contains .e1 Contains `2esn`})"),
    octest:ct_string("Create (`8esn` {usn2:\"d_str\"[1.e1][01234567]})<-[_usn4?:_usn3|`6esn` *..0X0123456789ABCDEF]->(usn1 :`3esn`{`4esn`:$123456789 =~usn1 =~0xabc,`7esn`:999 Is Not Null})-[?:`8esn`|@usn6*{``:0.e0 Contains $123456789 Contains 123456789,`4esn`:#usn7 Is Not Null Is Not Null}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]}),usn2=(`5esn` :`2esn`:@usn5{usn2:$`6esn` Starts With usn1,``:123456789 =~@usn5 =~$`5esn`})<-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}) Unwind Null Contains $_usn3 As #usn7"),
    octest:ct_string("Optional Match `7esn`=((:`6esn`:`3esn`{`3esn`:123.654[0Xa..0x0][.12..12e12]})-[?:`8esn`|@usn6 *01..7{`7esn`:12e12 Ends With 0e0,`8esn`:$_usn4[False..@usn6][`4esn`..$1000]}]->(:@usn6{`8esn`:.0[..False]})-[`6esn`?:usn1|#usn7]-(usn2 :#usn8:#usn7)) Where 7 Starts With $@usn6 Delete Extract(`5esn` In $usn2 Contains $`1esn` Where $#usn8[..123456789][..`2esn`])[Any(#usn8 In 0x0[_usn4..] Where $`` Starts With 0x0)],0xabc[9e1..][07..] Unwind 0.0[.12..`8esn`] As `1esn` Union All Remove _usn3(#usn7[False..][123.654..],$`2esn` Ends With 1e1).@usn6,None(`6esn` In .e0['s_str'..][$`8esn`..] Where $1000[..`6esn`][..123456789]).`3esn`,(_usn4 {@usn6:0.e0 Contains $1000 Contains 7})-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->($@usn6).@usn6 Union All Return Distinct *,Filter(usn1 In 123.654 =~.e0 =~9e0 Where 123.654[$`1esn`])[(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})<-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-({@usn6:`5esn` Ends With $999})..[`2esn` In $``[$#usn8] Where \"d_str\" Starts With _usn4 Starts With $_usn4|$usn1[#usn8..`8esn`][7..`4esn`]]] As _usn4 Order By $`1esn` Ascending,0X7[0xabc][$1000] Ascending,0Xa[Count(*)][0xabc] Desc Skip None(usn1 In 0xabc Is Not Null Is Not Null Where 123456789 =~@usn5 =~$`5esn`) =~[`4esn` Ends With 's_str' Ends With @usn6] Limit Any(`3esn` In 999 Where .12[0X0123456789ABCDEF..]) =~(:`7esn`{@usn6:`2esn`[``..]})<-[?{``:Null Is Not Null Is Not Null}]-(:_usn4{@usn6:$123456789[`1esn`..]}) =~[12e12 Ends With `6esn`] With Distinct *,.e12 Contains `7esn` Contains 999 As ``,`8esn`[9e12] Order By (usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})<-[#usn7:``{`4esn`:0.e0 Is Not Null Is Not Null}]-(:`3esn`{usn2:$`3esn`[9e0..0.0][_usn4..123456789]})-[#usn7? *123456789..{`2esn`:999 Contains $`7esn` Contains usn2}]-($#usn7) =~$_usn3 =~Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 00[0X7..9e12]|$#usn7) Descending,07 Ends With $_usn4 Ends With 0.e0 Ascending Skip True Limit 9e12[..0x0] Where $#usn8 Ends With _usn4 Ends With usn2"),
    octest:ct_string("Return Distinct *,01[$0] As `5esn` Create ((_usn4 :#usn8:#usn7)<-[? *01234567..123456789]->(:`3esn`{`7esn`:$123456789[`4esn`..]})-[{usn1:`` Is Not Null Is Not Null,`2esn`:#usn8[..0X0123456789ABCDEF][...0]}]-(:usn1:``{_usn4:1000[12.e12][#usn7]})),``=(`3esn` {``:`6esn`[`7esn`..$_usn3][9e0..#usn8],`8esn`:.0[01234567]})<-[?{usn1:$#usn7[..$999][..9e1]}]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})-[`6esn`?:usn1|#usn7]-(#usn7 :`3esn`{usn2:$`6esn`[.e12]}) Return Distinct #usn8(Distinct 0x0[$7],#usn8[1e1..])[[1.e1[#usn7][1.e1]]..{usn1:`2esn` Is Null Is Null}][_usn3(Distinct usn1[$`1esn`..])..Extract(`3esn` In False In $`2esn` In 1e1 Where 1000 Ends With $`5esn`)] As `6esn`,$7[..$``] As `` Order By (`3esn` :usn2{#usn7:usn2[`6esn`..][.0..],#usn7:\"d_str\"[..$_usn3]})<-[?{`3esn`:'s_str'[$`6esn`..][$0..]}]->(`2esn` :@usn6)<-[?{`8esn`:$`7esn`[usn2],`1esn`:1000 Is Not Null}]-(#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]}) Is Null Desc,[usn1 In 123.654 =~.e0 =~9e0 Where False Starts With $123456789] Contains All(`6esn` In 1000[12.e12][#usn7] Where $`7esn`[..$`8esn`]) Contains [True,07 In Count(*),.e0['s_str'..][$`8esn`..]] Desc,Filter(#usn8 In 07['s_str'][$@usn6] Where usn2[..1e1][..$_usn3]) Ends With [`4esn` In 0.12['s_str'..$0][$usn1..9e0]|`7esn`[..01]] Desc Union Detach Delete `2esn` In usn1"),
    octest:ct_string("Optional Match @usn6=(_usn4 {`2esn`:1.e1 Is Not Null Is Not Null})<-[_usn4?:`3esn`|_usn4 *7]->({@usn6:0.e0 Contains $1000 Contains 7}),((:@usn5{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2})<-[`2esn`{`2esn`:999 Contains $`7esn` Contains usn2}]->(`4esn` :usn2)) Create `5esn`=(((@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})-[? *..0X0123456789ABCDEF{`7esn`:`4esn` Is Not Null,``:.12 Is Not Null}]->(`7esn` {`2esn`:9e0[$@usn6]})-[:#usn7|`5esn`]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null}))),_usn4=((`1esn` {@usn6:`1esn`[$7][0Xa]})<-[@usn6{#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]}]-(`2esn` :#usn8:#usn7)) Union All Unwind None(`6esn` In .e0['s_str'..][$`8esn`..] Where #usn7 Ends With 0.12)[{usn1:$`6esn`[.e12..$`6esn`][$#usn7...0]}..Single(#usn8 In 07['s_str'][$@usn6] Where $#usn7[$`3esn`..$999])][Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 00[0X7..9e12]|$#usn7)..All(`6esn` In 1000[12.e12][#usn7] Where 12.e12 Is Not Null)] As _usn3 Union All Create #usn8=(:@usn5{_usn4:$`5esn`[0][.12]})<-[@usn5?{usn1:7 Ends With `3esn` Ends With $`2esn`}]-(_usn4 ),`7esn`=((`3esn` :usn1:``)<-[`5esn`?:_usn3|`6esn` *..0X0123456789ABCDEF{`5esn`:usn2[.e1..][01234567..],usn1:999 Is Not Null}]->({@usn5:_usn3[_usn4..$`2esn`][$123456789..9e12]})<-[ *0Xa{#usn8:_usn4[#usn7..#usn8],usn2:9e0[0..1e1]}]->(#usn8 :#usn8:#usn7{@usn6:$#usn8[0e0..][07..],``:$`7esn` =~1.e1 =~0.e0}))"),
    octest:ct_string("Merge (`3esn` :#usn8:#usn7{_usn3:$`1esn` Is Not Null Is Not Null,`2esn`:0X7 Contains 12.0})-[`4esn`?:#usn8|:`6esn` *999{`8esn`:010[`1esn`..`4esn`]}]-(`` )-[:@usn5|:@usn6 *999{`5esn`:0x0 =~@usn5 =~01}]->(:``:`6esn`{`7esn`:12e12 Ends With 0e0,`8esn`:$_usn4[False..@usn6][`4esn`..$1000]}) On Match Set usn2 ={`8esn`:12 Is Null Is Null}[[`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 1000 Starts With 0e0 Starts With 0|$#usn8 Ends With _usn4 Ends With usn2]..][[usn1 In 0xabc Is Not Null Is Not Null Where $@usn6 Is Null|$`6esn`[$`6esn`..][0X7..]]..],[`2esn` In $``[$#usn8] Where 1000 Starts With 0x0|00 Starts With usn1 Starts With Count(*)].usn1 =#usn7[False..][123.654..] On Match Set [`3esn` In False In $`2esn` In 1e1 Where $`6esn` Is Not Null].#usn8! =.0[@usn6..],(:`1esn`:@usn6{`5esn`:0Xa =~0Xa =~`3esn`})<-[_usn3:`3esn`|_usn4]->(_usn3 :`4esn`:usn2).`8esn`? =`2esn` =~$`2esn` =~$`4esn`,#usn8+=0xabc[..9e1] Merge usn1=((`5esn` :@usn6)) On Match Set `5esn`+=\"d_str\" Ends With 123456789,`3esn` =12 Is Null On Create Set count(Distinct 0.e0 Is Not Null Is Not Null).`1esn` =0X0123456789ABCDEF Is Not Null Is Not Null,Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where Count(*) Contains 12e12 Contains 0xabc|$_usn3 Is Not Null).usn1? =[`2esn` In $#usn8 Starts With usn2 Starts With .12 Where .0 =~$@usn5 =~1.e1][Any(`3esn` In 999 Where $`5esn`[.e1][#usn8])..Single(`5esn` In $usn2 Contains $`1esn` Where $#usn8[..123456789][..`2esn`])][count($usn1 Starts With Null Starts With $``)..`3esn`(Distinct 7[$1000][1000])],#usn8 =00[\"d_str\"][False] Remove $_usn3.`4esn`,(:`4esn`:usn2$``)<-[usn2?]->(usn2 {usn2:`7esn` Contains .0 Contains #usn8}).`3esn`! Union All Unwind (@usn6 )<-[`7esn`?:@usn6]-(_usn4 :usn1:``{`2esn`:$`2esn` Is Not Null Is Not Null,`2esn`:@usn5['s_str'..$`2esn`]})[``(Distinct `` In False In True,0xabc Contains 0)] As `3esn` Union Remove [True,$1000[..`6esn`][..123456789]].#usn7 Match `6esn`=(({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})-[`6esn`:`7esn` *7{`6esn`:`6esn` In $``}]-(`` :_usn3:@usn5)<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]-({``:0.12 Contains 0x0 Contains @usn5})),`8esn`=((:@usn5{#usn7:0x0 In 0X0123456789ABCDEF,`2esn`:0Xa[Count(*)][0xabc]})<-[usn1:#usn8|:`6esn` *0xabc..]->(`8esn` :`1esn`:@usn6)<-[`1esn`?:`3esn`|_usn4{_usn4:12e12 Ends With $_usn4 Ends With $`2esn`,``:.12 Is Not Null}]-(:`1esn`:@usn6{`5esn`:.e12[$_usn4..0],`4esn`:$#usn8 In True In #usn7})) Where 07 Ends With $_usn4 Ends With 0.e0"),
    octest:ct_string("Merge (usn1 :`2esn`:@usn5{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc})<-[#usn8:`3esn`|_usn4*..{``:9e0 Is Null Is Null}]->(:@usn5{#usn7:0x0 In 0X0123456789ABCDEF,`2esn`:0Xa[Count(*)][0xabc]}) On Create Set Extract(`3esn` In False In $`2esn` In 1e1 Where 01 Starts With $`5esn` Starts With 01234567).`8esn`! =None(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1) Ends With All(usn1 In 0xabc Is Not Null Is Not Null Where $@usn6 Is Null) Ends With Any(`6esn` In 1000[12.e12][#usn7] Where 01 Starts With $`5esn` Starts With 01234567),[`5esn` In $usn2 Contains $`1esn` Where False[$12]|.e12[``][$1000]].usn1! =_usn3[0Xa..],None(`3esn` In False In $`2esn` In 1e1 Where #usn7[.12][usn2]).@usn5 =Filter(_usn4 In 12.e12 Is Null Is Null Where 0e0 Is Not Null) =~All(`2esn` In $``[$#usn8] Where 12e12 Ends With $_usn4 Ends With $`2esn`) Create #usn8=(({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})-[`6esn`:`7esn` *7{`6esn`:`6esn` In $``}]-(`` :_usn3:@usn5)<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]-({``:0.12 Contains 0x0 Contains @usn5})) Union All With Distinct *,`8esn` Is Not Null,(@usn6 :_usn4{`2esn`:\"d_str\"[..$_usn3],@usn6:$7[`7esn`][123.654]})-[``:`2esn`|:`7esn` *..0x0{`3esn`:`` Contains 010 Contains $1000}]->(:_usn4)<-[:`5esn`|:`1esn`{#usn8:`7esn` Is Null,`4esn`:False[$12]}]->(_usn3 :@usn5{`5esn`:12e12[..9e12][..$@usn6]})[Single(`3esn` In 999 Where usn1[$`1esn`..])..] Order By 1e1 =~01 Descending,$7[..$``] Descending Limit (`6esn` {`7esn`:12e12 Ends With 0e0,`8esn`:$_usn4[False..@usn6][`4esn`..$1000]})<-[?{``:$`6esn`[.e12]}]-(usn1 :`2esn`:@usn5{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc}) Starts With {@usn5:`8esn` Is Not Null,`6esn`:$@usn6 Ends With 0.0} Starts With [$#usn7[`7esn`..][$`8esn`..]] Where .e0 Ends With $`1esn` Ends With 1000 Delete [`7esn` In $`8esn`[0.12][12] Where 's_str'[$#usn8]][None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1)..(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})-[``?:@usn6]->({``:_usn3[9e0..$123456789][0X7..999]})][[$#usn8 =~7 =~.12,$`6esn`[.e12],_usn4 Starts With `6esn` Starts With $`8esn`]..{usn2:123.654[.e12..\"d_str\"]}],[.e0 =~7 =~False,0e0 Is Not Null] =~(`5esn` :`8esn`{`1esn`:`7esn` Contains .0 Contains #usn8})<-[`8esn` *0..$12]-(:`2esn`:@usn5{#usn8:0.e0 Contains @usn5 Contains 0X7,`5esn`:0x0[9e0..]})-[_usn3:_usn3|`6esn`]->({usn2:0[1e1..00],@usn6:$`6esn`[.e12..$`6esn`][$#usn7...0]}) =~(`7esn` {`2esn`:9e0[$@usn6]})<-[``?:#usn8|:`6esn`]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]}) Union All Unwind 9e12[..0x0] As `3esn` Unwind Single(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]) Starts With (:usn1:``{_usn4:1000[12.e12][#usn7]})-[ *7{`4esn`:$#usn7[$`3esn`..$999],`8esn`:$0[00..]}]-({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]}) Starts With {`1esn`:`5esn` In 12.e12 In 1000,`3esn`:0Xa Contains $`6esn`} As `3esn`"),
    octest:ct_string("Remove Any(`5esn` In $usn2 Contains $`1esn` Where \"d_str\" Contains $999 Contains `2esn`).usn1! Create (`5esn` :`8esn`{`1esn`:`7esn` Contains .0 Contains #usn8})<-[?{usn2:9e0[0..1e1]}]->({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})-[?{`4esn`:1000 Ends With $`5esn`}]->(`1esn` :`7esn`),(_usn4 {`4esn`:01234567[..00][..$`3esn`],usn1:00[\"d_str\"][False]}) Return *,00 Starts With usn1 Starts With Count(*) As `4esn`,Filter(`6esn` In 1000[12.e12][#usn7] Where $usn2 Contains $`1esn`) As `3esn`"),
    octest:ct_string("With  *,@usn6(Distinct 0xabc Contains 0)[{_usn4:$`2esn` Ends With 1e1}..][All(_usn4 In 12.e12 Is Null Is Null Where 0e0 =~False =~.12)..] As @usn6,[_usn3 =~$12,.0[..False],Null In 0xabc] Is Null Is Null Order By $_usn3[0e0..][12.0..] Ascending,#usn8[..0X0123456789ABCDEF][...0] Descending,Filter(`7esn` In $`8esn`[0.12][12] Where 0Xa[..$`2esn`][..00]) Is Null Is Null Desc Detach Delete 010[0e0][0xabc],$`6esn`[.e12..$`6esn`][$#usn7...0] Create (((`4esn` {_usn3:7 Contains 1000 Contains $usn1})<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(_usn3 :@usn5{`2esn`:1.e1[#usn7][1.e1]})<-[`5esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]}]->({_usn3:.e12 =~\"d_str\" =~@usn5}))) Union With  *,1000 =~$@usn5 Skip $123456789[..0.12] Delete 0.0 =~0 =~`` Unwind 0[1.e1..#usn7] As `7esn`"),
    octest:ct_string("Merge usn2=((@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})) On Create Set `7esn`+=9e0[123456789..0][12.0..@usn6],`2esn` =({`7esn`:$@usn5 =~$usn2 =~True,_usn3:00[$0..usn2][$_usn4..$999]})-[`3esn`]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5})<-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]})[{usn1:$`5esn`[.e1][#usn8],_usn3:12e12 Ends With `6esn`}] On Create Set `3esn` =Single(usn1 In 123.654 =~.e0 =~9e0 Where $123456789[..$`7esn`][..\"d_str\"])[..Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 9e1 Contains _usn3)][..None(usn1 In 123.654 =~.e0 =~9e0 Where $7 Ends With 12.e12 Ends With `1esn`)],Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0]|.0 =~$@usn5 =~1.e1).`4esn`? =[0e0 Is Null,#usn7 Ends With 9e0,$7[`7esn`][123.654]][{_usn3:0e0 =~False =~.12,`3esn`:`` Contains .e1 Contains 9e12}][{_usn3:$#usn8[0xabc..usn2]}] Union With Distinct [$999[@usn5..][Null..]] Ends With ({usn2:0Xa Contains $`6esn`,_usn3:\"d_str\" Ends With $`3esn`})-[@usn5? *00{@usn5:usn1 Ends With 1.e1 Ends With `4esn`}]-(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})-[:`5esn`|:`1esn`]-(`2esn` ) As `7esn`,00[0X7..9e12] As #usn8 Order By 00 =~999 =~07 Asc,None(`6esn` In 1000[12.e12][#usn7] Where 9e12[\"d_str\"]) Ends With None(`6esn` In 1000[12.e12][#usn7] Where usn1[9e1..]) Ends With [`5esn` In 12.e12 In 1000,False In $`2esn` In 1e1] Descending,.e0 =~$1000 Ascending Limit {`7esn`:01234567[9e0][.0],`2esn`:999 Ends With $`4esn`}[`4esn`(.12 In 01234567 In _usn4,12.0[9e12]['s_str'])..] Merge `1esn`=(_usn4 {`4esn`:01234567[..00][..$`3esn`],usn1:00[\"d_str\"][False]})"),
    octest:ct_string("Unwind 0.12[$usn1..$7] As _usn3 Merge (#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})<-[?:usn1|#usn7$_usn4]->(`8esn` :``:`6esn`)"),
    octest:ct_string("With  (:_usn4)-[usn2{@usn6:$usn1 Is Not Null Is Not Null,`7esn`:0x0 In 0X0123456789ABCDEF}]-(:`7esn`{`8esn`:'s_str'[$#usn8]})-[`5esn` *12{`8esn`:0Xa[Count(*)][0xabc]}]->({@usn6:$#usn8[0e0..][07..],``:$`7esn` =~1.e1 =~0.e0}) Contains [\"d_str\"[.0][9e0]],.e1[01234567] As `6esn` Limit 12.e12 Is Not Null Where #usn7[.12][usn2] Return *,`4esn`,Any(`3esn` In False In $`2esn` In 1e1 Where #usn7[.12][usn2])[{#usn7:0e0['s_str'],`1esn`:$#usn8[1.e1]}..[@usn6[.0],0X0123456789ABCDEF Is Not Null,0x0[$`2esn`..'s_str'][$@usn5..1.e1]]][[`4esn` Ends With 's_str' Ends With @usn6]..$`5esn`] As `` Order By (`6esn` :`8esn`{usn2:#usn7 In #usn7,`1esn`:00['s_str']})<-[``?:@usn6]-(:`2esn`:@usn5{usn2:$`3esn` Ends With @usn6 Ends With 123.654})<-[@usn5?:@usn6 *..010]->(#usn7 :#usn7{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2}) Is Null Asc,$usn2 Starts With $`7esn` Starts With _usn4 Desc Limit `4esn` Starts With $#usn8 Starts With $#usn8 Delete .e12[``][$1000],0xabc[123.654][12],.e12[``][$1000]"),
    octest:ct_string("Remove Extract(`6esn` In 1000[12.e12][#usn7] Where .e12 =~@usn5).usn2?,(:usn2$`4esn`)<-[usn1{`1esn`:`7esn` Contains .0 Contains #usn8}]->(:`2esn`:@usn5{@usn5:`4esn`})-[:_usn3|`6esn` *01..7{_usn4:$`2esn`[$``..12e12]}]-(`5esn` {usn1:1000 Ends With $`5esn`}).`7esn` Create `4esn`=(usn2 :_usn3:@usn5) Remove All(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 7 Ends With `3esn` Ends With $`2esn`).``,0e0._usn3,[$usn1[#usn8..`8esn`][7..`4esn`],`5esn` Ends With 0x0].`2esn`? Union Merge `5esn`=(((:#usn7{``:$`6esn` Starts With usn1})-[{usn1:Count(*)[..12][..$999],#usn8:usn1 In 010}]->(`1esn` :`8esn`)<-[:`6esn`$123456789]-(@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]}))) On Create Set #usn8+=`5esn`[12.0],@usn5+=Any(`2esn` In $``[$#usn8] Where $`2esn`[.._usn3])[[`6esn` In .e0['s_str'..][$`8esn`..] Where $@usn5 =~$usn2 =~True|.e0[$`1esn`..][_usn4..]]..`8esn`] Optional Match `5esn`=((`3esn` :`7esn`$`6esn`)<-[?:#usn7|`5esn`{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}]->(@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})-[#usn8?:``{`7esn`:$`5esn` Starts With $`3esn` Starts With 1.e1}]-(`8esn` )),`1esn`=(((usn1 :`1esn`:@usn6{`2esn`:$123456789[..$usn2],_usn4:0X0123456789ABCDEF In _usn3})<-[{#usn8:999}]->(:usn1:``{#usn7:#usn8[$`7esn`..12.0],`1esn`:9e12 In 123.654 In True})-[``?:#usn8|:`6esn`]-(:#usn8:#usn7{`8esn`:12e12 Ends With 0e0})))"),
    octest:ct_string("Optional Match #usn8=(`` :`8esn`{`5esn`:True Contains .e1 Contains `2esn`}),_usn3=((@usn6 :#usn8:#usn7{``:Null Is Not Null Is Not Null})<-[`2esn`?:`5esn`|:`1esn`]->($1000)-[`6esn`? *999{_usn4:\"d_str\" Contains $999 Contains `2esn`}]-(`1esn` {_usn3:12.0 In 07,`2esn`:01234567[..`6esn`][..``]})) Union Remove Extract(`3esn` In @usn6[..\"d_str\"][..01] Where @usn6 Contains $_usn3 Contains 12.0)._usn3? Detach Delete 999 In 0,.e12 Contains `7esn` Contains 999,$@usn6 Is Null Is Null Union All Return Distinct Extract(`3esn` In 999 Where .e12 Is Null Is Null|$`7esn`[usn2]) Is Not Null As @usn5 Order By usn1 =~12 =~$0 Asc,01 In `4esn` In 1.e1 Descending"),
    octest:ct_string("Unwind [`6esn` In .e0['s_str'..][$`8esn`..] Where $@usn5 Starts With Count(*) Starts With $usn1] In None(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $`5esn` Starts With $`3esn` Starts With 1.e1) In Filter(`3esn` In False In $`2esn` In 1e1 Where True Contains $`` Contains 01234567) As usn1 Remove ()<-[?:@usn5|:@usn6]->(#usn8 :`4esn`:usn2).@usn6!,`4esn`(.0[..False]).`6esn`? Union Return Distinct *,$7[0.e0][`8esn`],.e1[0X7..`2esn`] Order By Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) Ends With [1.e1[#usn7][1.e1],Null =~Count(*)] Ends With [#usn8[..0X0123456789ABCDEF][...0],$usn1 Is Not Null Is Not Null] Desc Skip [12 Is Null Is Null,9e0[$@usn6]][Filter(`6esn` In 0x0[9e0..] Where $123456789 In 010 In $`8esn`)..] Limit $@usn6 Contains `5esn` Contains .e12 Merge ``=(`7esn` :_usn3:@usn5)<-[? *01..7]->(`8esn` :usn2)<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]-(@usn6 :``:`6esn`) On Create Set `5esn`+=All(`6esn` In .e0['s_str'..][$`8esn`..] Where 12.0[9e12]['s_str'])[[`5esn` Ends With 0x0,.0 =~$@usn5 =~1.e1]..[`6esn` In .e0['s_str'..][$`8esn`..] Where $0[`5esn`][9e12]|.12[..07]]][{`8esn`:.0[..False]}..[usn1 In 0xabc Is Not Null Is Not Null Where 9e0[123456789..0][12.0..@usn6]|.e12 Is Not Null Is Not Null]] On Create Set usn1+=123456789[$_usn4..],[123.654 =~.e0 =~9e0,$#usn7[9e12..12],$12 Is Null Is Null].`3esn` =$12 Contains `` Contains 0x0 Merge `1esn`=((@usn6 {`3esn`:#usn7 Ends With 9e0})-[`4esn`?:usn1|#usn7{`1esn`:123456789 Ends With 9e1 Ends With ``,@usn5:0xabc Contains 0}]->(:_usn4{@usn6:$`4esn`[$@usn5..`7esn`],`5esn`:_usn4 Starts With `6esn` Starts With $`8esn`})) Union With Distinct *,`5esn` In $usn1 In `4esn` As @usn6,.0 Ends With $`4esn` Ends With @usn6 Order By {`3esn`:$_usn4[False..@usn6][`4esn`..$1000],`1esn`:$`7esn`[`2esn`]} In All(`3esn` In False In $`2esn` In 1e1 Where .0[@usn6..]) Asc Skip $7 Is Null Unwind 999 In $_usn3 As #usn8"),
    octest:ct_string("Remove `1esn`(Distinct $`4esn`[0e0...0],01234567 In \"d_str\").#usn8!,[`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where `5esn` Ends With 0x0|9e0[$@usn6]].`3esn`? Create ({_usn3:.12[usn1],_usn4:$usn1 Starts With Null Starts With $``})-[`3esn`]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5}),`1esn`=(((_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[`7esn`?:`2esn`|:`7esn`]->(`3esn` {#usn8:#usn7 =~$`8esn`})-[ *07{`1esn`:$``}]->(`1esn` :usn1:``))) Merge usn2=(:#usn8:#usn7{`6esn`:`5esn`[12.0]}) On Create Set {``:$`3esn` Is Null,`1esn`:$123456789[`1esn`..][`7esn`..]}._usn4 =`1esn`,[`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where _usn3[0Xa..]].@usn6 =$#usn8 Contains `5esn` Contains $#usn8,None(`3esn` In 999 Where $123456789 =~usn1 =~0xabc).`5esn`! =`5esn` =~`` On Match Set _usn3+={_usn3:`1esn`[..$#usn7]} Contains Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1) Contains [$1000[00..],$`6esn`[.e12..$`6esn`][$#usn7...0],0Xa[..1.e1]],#usn7+=$12[`3esn`][`3esn`],{_usn3:0Xa[..$`2esn`][..00]}.`5esn`? =[`6esn` In 1000[12.e12][#usn7] Where 12.0[9e12]['s_str']|0.e0 =~01234567 =~01234567] Ends With Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $`8esn`[0.12][12]) Ends With count(1000[Null][$`7esn`],$123456789[`3esn`..`5esn`][1e1..$`5esn`]) Union All With Distinct `7esn`[`7esn`] Limit .e1[0X7..`2esn`]"),
    octest:ct_string("With Distinct $`6esn` Starts With $@usn6 As `3esn`,$`5esn` Ends With `6esn` Ends With 0x0 As @usn6,`2esn` Is Not Null Is Not Null As `3esn` Order By True[07] Descending,{`7esn`:usn2 Starts With 00}[(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})<-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-({@usn6:`5esn` Ends With $999})..][(:`1esn`:@usn6{_usn3:$usn2 =~`6esn` =~`1esn`,`6esn`:0[1e1..00]})-[{_usn4:$`8esn` Contains .0 Contains 0.12}]->(:usn1:``{_usn4:1000[12.e12][#usn7]})-[@usn6 *00]->(`4esn` {_usn4:$`2esn`[$``..12e12]})..] Ascending,12[$`3esn`..] Desc Skip [$999[9e0..010][999..010],12e12 Ends With $_usn4 Ends With $`2esn`][None(_usn4 In 12.e12 Is Null Is Null Where $`4esn` In 0x0)..] Limit `5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789] Where _usn4[.._usn4] Union Match ((`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]})),(((`1esn` {@usn6:$12[#usn8..$@usn5][9e0..usn1]})<-[?:usn2|:``{_usn3:.e1 Ends With $123456789}]-(`4esn` {#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})-[`3esn`]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5}))) With  7 Starts With Null Starts With Null Order By @usn6 Starts With #usn8 Starts With $#usn7 Descending Limit 12.e12 Is Not Null Where 0.12 Contains 0x0 Contains @usn5 Return *,`4esn`,Any(`3esn` In False In $`2esn` In 1e1 Where #usn7[.12][usn2])[{#usn7:0e0['s_str'],`1esn`:$#usn8[1.e1]}..[@usn6[.0],0X0123456789ABCDEF Is Not Null,0x0[$`2esn`..'s_str'][$@usn5..1.e1]]][[`4esn` Ends With 's_str' Ends With @usn6]..$`5esn`] As `` Order By (`6esn` :`8esn`{usn2:#usn7 In #usn7,`1esn`:00['s_str']})<-[``?:@usn6]-(:`2esn`:@usn5{usn2:$`3esn` Ends With @usn6 Ends With 123.654})<-[@usn5?:@usn6 *..010]->(#usn7 :#usn7{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2}) Is Null Asc,$usn2 Starts With $`7esn` Starts With _usn4 Desc Limit `4esn` Starts With $#usn8 Starts With $#usn8"),
    octest:ct_string("Return Distinct _usn4 Ends With .e12 As @usn6,$`1esn` =~`1esn` =~0X0123456789ABCDEF As _usn3 Order By ``($#usn7[$`3esn`..$999]) Starts With {``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]} Ascending,1e1 =~$`8esn` =~`1esn` Descending Skip Null Is Null Is Null Limit 0.e0 Is Not Null Union All Delete _usn3[$0],$`3esn` Is Not Null,.e12 Is Null Is Null Remove All(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where .0 =~$@usn5 =~1.e1).`4esn`?,(`4esn` {@usn6:_usn4[$`8esn`.._usn3][.0..$@usn6]})<-[{usn1:0.e0 =~01234567 =~01234567,``:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}]-(`6esn` :_usn3:@usn5)<-[{`5esn`:usn2[.e1..][01234567..],usn1:999 Is Not Null}]->({`7esn`:`4esn` In $`2esn` In @usn5})._usn3? Merge ((:`8esn`)-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :_usn3:@usn5)) On Create Set `1esn`+=[01[..0X7],0 =~#usn8,$``[$_usn4][$`3esn`]][0e0..Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 0X0123456789ABCDEF[$_usn3][$_usn4])][None(`2esn` In $``[$#usn8] Where 0x0[$7..][`7esn`..])..[`5esn` Ends With 0x0,.0 =~$@usn5 =~1.e1]],`8esn`+=Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0) Is Not Null Union With Distinct 1000 Starts With 0e0 Starts With 0,Any(`2esn` In $``[$#usn8] Where $`4esn`[$1000..$`4esn`][0x0..$_usn3])[Filter(`6esn` In 0x0[9e0..])],0 Is Null Is Null As #usn7 Order By [9e12 In 123.654 In True,`6esn` In $``][..All(`7esn` In $`8esn`[0.12][12] Where @usn5[..$999][..$0])][..Filter(`6esn` In .e0['s_str'..][$`8esn`..] Where \"d_str\" Ends With $1000 Ends With usn2)] Asc Skip [_usn4 In 12.e12 Is Null Is Null Where 0e0 =~False =~.12|Count(*) Contains 12e12 Contains 0xabc] Ends With {#usn7:_usn3[0Xa..]} Ends With _usn4(Distinct .e0 Contains 999) Where $`4esn`[$1000..$`4esn`][0x0..$_usn3]"),
    octest:ct_string("Merge (`2esn` )-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]->(_usn3 {`3esn`:$@usn5 Is Not Null Is Not Null})<-[?:usn1|#usn7$_usn4]->(`1esn` {`3esn`:@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`],`4esn`:0e0 Is Null}) Match _usn3=(#usn8 :`7esn`)-[:#usn8|:`6esn`{#usn8:0X7[..`5esn`][..$`7esn`]}]->(`2esn` :@usn6),#usn8=((usn1 {_usn3:#usn7 Ends With 0.12})<-[?:@usn6 *07{_usn3:$`1esn` Is Null}]-(`5esn` {`5esn`:#usn8 Is Not Null,`1esn`:01234567[`6esn`..]})<-[*]->(usn1 :`1esn`:@usn6{`2esn`:$123456789[..$usn2],_usn4:0X0123456789ABCDEF In _usn3})) Where $_usn4[False..@usn6][`4esn`..$1000] Merge _usn4=(({@usn5:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`3esn`:`4esn` In .12 In $#usn8})-[?:`` *07{`1esn`:$#usn7[$`3esn`..$999]}]->(@usn6 {``:12.e12 Contains 's_str' Contains 0.12})<-[? *..0X0123456789ABCDEF{usn2:123456789 Ends With 9e1 Ends With ``,`3esn`:9e0[123456789..0][12.0..@usn6]}]-({``:0.12 Contains 0x0 Contains @usn5})) On Create Set (`3esn` :`3esn`{_usn4:$123456789 Is Not Null,_usn4:#usn8 =~#usn7 =~0x0})<-[`4esn`?{`8esn`:$@usn5 Starts With Count(*) Starts With $usn1,#usn7:0.e0[.e12]}]->(:`6esn`:`3esn`{@usn6:#usn8 Is Not Null,usn2:1e1 Is Null})<-[?{`3esn`:'s_str'[$`6esn`..][$0..]}]->(`2esn` :@usn6).`3esn`? =0x0 In 0X0123456789ABCDEF On Match Set `8esn`+={@usn6:$#usn7[$`3esn`..$999],`5esn`:$`6esn`[00]}[..[1000 Ends With 01234567 Ends With usn1,Count(*) Contains 12e12 Contains 0xabc]],usn2+=07['s_str'][$@usn6],All(#usn8 In 0x0[_usn4..] Where $`8esn`[`7esn`]).`3esn` =$123456789[..$usn2] Union All Unwind Extract(_usn4 In 12.e12 Is Null Is Null Where `2esn` Is Null Is Null|0X7[$`6esn`..0e0])[(`7esn` {`8esn`:Count(*) Is Null Is Null,@usn5:.e0 Ends With $`1esn` Ends With 1000})<-[usn1?]-(:`7esn`{usn2:0e0 Is Null})<-[`7esn`?]->(:`2esn`:@usn5{usn2:$`3esn` Ends With @usn6 Ends With 123.654})..] As `8esn` Union Unwind usn1[..$123456789][..`1esn`] As @usn6 Create ({_usn3:.12[usn1],_usn4:$usn1 Starts With Null Starts With $``})-[`3esn`]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5})"),
    octest:ct_string("Match ``=((:`2esn`:@usn5{@usn5:`4esn`})) Where $`4esn` In 0.0 In `3esn` Union Create ((`` :usn1:``)-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->(`8esn` :#usn7)<-[?{`5esn`:$1000 =~$`8esn` =~$`2esn`,_usn3:$`` Starts With 0x0}]->(`2esn` :`5esn`{`1esn`:$@usn6 Ends With 0.0})),#usn7=(((`6esn` :`5esn`{`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})-[`4esn`?:usn1|#usn7{`1esn`:123456789 Ends With 9e1 Ends With ``,@usn5:0xabc Contains 0}]->(`` :`3esn`{#usn8:`3esn` Is Not Null Is Not Null,#usn8:$123456789[`3esn`..`5esn`][1e1..$`5esn`]})-[? *0xabc..]->(`6esn` {`5esn`:0x0 =~@usn5 =~01}))) Return Distinct _usn4[999..9e1] As #usn8,$`7esn` =~$usn1 =~00,12e12 In Null Order By .12 In 01234567 In _usn4 Ascending,123.654 Ends With $@usn5 Ends With .0 Ascending,All(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $usn2[12.0..][`8esn`..])[(`6esn` :`5esn`{`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})-[:@usn5|:@usn6 *01234567..123456789]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null})<-[?:`4esn`*]->(@usn5 :usn2{`3esn`:0.0 Ends With $usn1 Ends With $999,`5esn`:1.e1 Is Null Is Null})..] Asc Skip Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 9e1 Contains _usn3|.0[01234567])[[$@usn6[..``],12 Is Null]][Filter(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 9e12[$123456789..$usn2])]"),
    octest:ct_string("Create (_usn4 :usn1:``{`5esn`:$0[`5esn`][9e12],``:#usn7[False..][123.654..]})<-[_usn4]-(`8esn` :usn1:``{`7esn`:1.e1[0..],``:.e0 Contains 999})-[#usn8:@usn6]-(:`3esn`{`7esn`:$123456789[`4esn`..]}) Union Create ((({`3esn`:.e12[$_usn4..0],usn1:00[$0..usn2][$_usn4..$999]})<-[_usn4?:_usn3|`6esn`]-(:usn2$`4esn`)<-[``?:#usn8|:`6esn`{usn1:$#usn7[..$999][..9e1]}]->(`1esn` :`4esn`:usn2))),((:`8esn`$`1esn`)-[ *..010]-({@usn6:`5esn`[0e0..],_usn4:$#usn8[0xabc..usn2]})<-[usn2?:`7esn`{``:`5esn`[usn1]}]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]})) Union All Remove Filter(`3esn` In 999 Where 0.12[123456789..]).`6esn`? Merge (:#usn7)<-[#usn7:`1esn`|@usn6 *999{`4esn`:0X7[..`5esn`][..$`7esn`]}]-(:`1esn`:@usn6{`1esn`:12.0[9e12]['s_str'],`3esn`:$123456789 Is Not Null})-[@usn6?:_usn3|`6esn` *0..]->(:`1esn`:@usn6) Unwind 9e0[123456789..0][12.0..@usn6] As `2esn`"),
    octest:ct_string("Delete $`1esn` In $#usn7 In 0X7,Single(`6esn` In .e0['s_str'..][$`8esn`..] Where $`5esn` Contains $usn2) In usn1($@usn6 Is Null Is Null) In All(#usn8 In 0x0[_usn4..] Where $_usn3 Is Not Null) Unwind [`7esn` In $`8esn`[0.12][12] Where 's_str'[$#usn8]][None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1)..(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})-[``?:@usn6]->({``:_usn3[9e0..$123456789][0X7..999]})][[$#usn8 =~7 =~.12,$`6esn`[.e12],_usn4 Starts With `6esn` Starts With $`8esn`]..{usn2:123.654[.e12..\"d_str\"]}] As `6esn` Union All Remove usn1(usn1 Ends With .0 Ends With `4esn`).`7esn`?,Any(`2esn` In $``[$#usn8] Where 0x0[$7]).`8esn` With  *,0Xa Is Null Is Null Union With Distinct 01[#usn8..1000],$`5esn` Starts With .0 Starts With 123.654 Order By {_usn3:`1esn`[..$#usn7]} Contains Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1) Contains [$1000[00..],$`6esn`[.e12..$`6esn`][$#usn7...0],0Xa[..1.e1]] Ascending,{`7esn`:1.e1 Is Null Is Null,_usn3:@usn6[$0..Null]}[..[_usn4 Starts With `6esn` Starts With $`8esn`,``[0X7..][$@usn6..],$usn2 Starts With 9e1 Starts With `7esn`]][..Single(#usn8 In 07['s_str'][$@usn6] Where 9e0 Starts With 0e0 Starts With $`5esn`)] Descending,$usn2 Contains $1000 Contains @usn5 Ascending Where $_usn3 Is Not Null Is Not Null With  *,00[$@usn5][0X7],$`` Is Null Is Null As usn1"),
    octest:ct_string("Detach Delete `7esn`(Distinct Count(*)[$1000..01],`7esn`[`8esn`][#usn7]) Is Not Null,$@usn5 Is Not Null Remove Single(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where `` Contains $_usn3 Contains 0e0).@usn5"),
    octest:ct_string("Match `1esn`=((:#usn7{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]})),(((:#usn7{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})-[{usn1:Count(*)[..12][..$999],#usn8:usn1 In 010}]->(:`7esn`{#usn8:12e12 Ends With `6esn`,_usn4:0Xa Contains $#usn8 Contains `5esn`})-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]->(_usn3 {`3esn`:$@usn5 Is Not Null Is Not Null}))) Where 123456789 Starts With #usn8 Detach Delete $#usn7[$`3esn`..$999],`5esn` In 12.e12 In 1000,Filter(`6esn` In 0x0[9e0..] Where $123456789 In 010 In $`8esn`) In ``(Distinct 0X0123456789ABCDEF In _usn3) In (_usn3 {usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`4esn`:1.e1 Is Null Is Null})-[`1esn`?:`1esn`|@usn6 *12]->(`8esn` :@usn6) Union Remove [`6esn` In 1000[12.e12][#usn7] Where `7esn` Contains .0 Contains #usn8|`5esn`[usn1]].`3esn`?,None(#usn8 In 07['s_str'][$@usn6] Where $@usn6 Ends With 0.0).`7esn`! Merge usn1=(((:#usn7{`1esn`:$123456789 Starts With `6esn` Starts With 123.654})-[:`1esn`|@usn6 *999{`6esn`:$123456789[..$`7esn`][..\"d_str\"]}]->(:usn2)-[`1esn`?:`3esn`|_usn4*..]->(usn1 ))) On Match Set #usn7 =[.12 Is Null,12 Ends With 0 Ends With Null,0x0 =~@usn5 =~01],{_usn3:1.e1 Is Null Is Null}.`7esn` =`8esn`(Distinct $123456789[`3esn`..`5esn`][1e1..$`5esn`],usn1[9e1..])[..(`6esn` :#usn7)<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8)<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]-(@usn6 :``:`6esn`)] On Match Set usn1 =Extract(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0|0[_usn3][.12]) Starts With (#usn8 :`8esn`)<-[`2esn`?:`3esn`|_usn4]-(#usn7 :`7esn`{`3esn`:$#usn8[..123456789][..`2esn`],#usn8:0.e0 Ends With #usn8})-[:`5esn`|:`1esn`]-(@usn5 :`5esn`) With  *,$`4esn` In 0.0 In `3esn` As _usn4 Order By @usn6 Starts With .e0 Starts With .e12 Desc,usn2 Descending,1.e1[0..] Ascending Where _usn3[0Xa..] Union Remove Single(`3esn` In False In $`2esn` In 1e1 Where `2esn`[``..]).`6esn`?"),
    octest:ct_string("Remove [`5esn` In $usn2 Contains $`1esn` Where False[$12]].@usn5?,[0xabc Is Not Null Is Not Null].@usn5?,Extract(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 9e0[0..1e1]|123.654[$`1esn`]).`5esn`! Merge usn2=(`2esn` :`5esn`{`1esn`:$@usn6 Ends With 0.0})<-[`2esn`?*{`3esn`:$@usn5 Is Not Null Is Not Null}]-(:`7esn`{``:9e1[$#usn8],`4esn`:1.e1 Is Null Is Null}) On Create Set [True =~0 =~123456789,$`6esn`[.e12],0 =~#usn8].`6esn`? =$`6esn`[$0],(`2esn` :@usn6)-[?:`8esn`|@usn6 *0xabc..{usn1:$#usn7[..$999][..9e1]}]-(`3esn` :@usn6)<-[_usn3]-(`6esn` :`8esn`).`7esn`! =12.0 Is Null On Match Set #usn7(Distinct $`4esn` =~07).`8esn`? =$@usn6[$#usn8..$999][Count(*)..usn1] Match @usn6=(:#usn8:#usn7{#usn7:$`7esn`[`2esn`]})<-[?{``:$`6esn`[.e12]}]-(`4esn` :`3esn`)<-[`1esn`?:_usn4|_usn3]-(:`1esn`:@usn6{`2esn`:12e12 Ends With 0 Ends With $@usn6,``:`1esn`[Null..]}) Where \"d_str\"[..$_usn3] Union All Create _usn4=((({`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`})-[`1esn`?:`3esn`|_usn4*..]->(:#usn8:#usn7{`4esn`:0Xa Contains 0x0 Contains $#usn8})<-[:_usn3|`6esn`{``:`6esn`[`7esn`..$_usn3][9e0..#usn8],`8esn`:.0[01234567]}]->(`2esn` :`5esn`{@usn5:'s_str' Contains 999,`6esn`:1000[12.e12][#usn7]}))),`6esn`=(((`2esn` :`2esn`:@usn5)<-[{@usn5:True[$usn1..12][``..\"d_str\"],`1esn`:#usn7[False..][123.654..]}]->(_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[:#usn7|`5esn` *123456789..{#usn8:_usn4[#usn7..#usn8],usn2:9e0[0..1e1]}]->(:_usn3:@usn5{_usn4:.e1[0X7..`2esn`]})))"),
    octest:ct_string("Detach Delete [.12 Is Null,12 Ends With 0 Ends With Null,0x0 =~@usn5 =~01],Any(#usn8 In 07['s_str'][$@usn6] Where $@usn6 Ends With 0.0) Starts With Extract(#usn8 In 07['s_str'][$@usn6] Where 010[`1esn`..`4esn`]) Starts With (#usn8 :`6esn`:`3esn`)<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(`4esn` :`5esn`) Union All With  $0 Contains 7 Contains 1.e1,{@usn5:Count(*)[..$_usn3][..$usn2],@usn5:$1000[$usn1][.e1]}[Single(`6esn` In 1000[12.e12][#usn7] Where $usn2 Contains $`1esn`)..{#usn7:usn1 Ends With .0 Ends With `4esn`,_usn3:$`1esn` Is Null}][[`7esn` In $`8esn`[0.12][12] Where usn1 In 010]..usn1(1e1 Is Null)] Order By usn2[9e12] Descending,$@usn6 Ends With 010 Descending Skip Single(#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]) Contains Single(`5esn` In $usn2 Contains $`1esn` Where `2esn` Contains `3esn` Contains $@usn5) Contains {_usn3:0xabc Contains 0,`6esn`:$`6esn`[.e12..$`6esn`][$#usn7...0]} Where 1000[12.e12][#usn7]"),
    octest:ct_string("Detach Delete Any(`2esn` In $``[$#usn8] Where $`2esn`[.._usn3])[[`6esn` In .e0['s_str'..][$`8esn`..] Where $@usn5 =~$usn2 =~True|.e0[$`1esn`..][_usn4..]]..`8esn`],All(`6esn` In .e0['s_str'..][$`8esn`..] Where .e12 Is Null Is Null)[@usn5(Distinct)..][[0 Contains $@usn5,False Contains $`1esn` Contains @usn6]..] Union Optional Match `4esn`=((`8esn` {`3esn`:Null Is Null Is Null})) Where 9e1[$`3esn`][$`1esn`] Merge (($1000)<-[?{``:Null Is Not Null Is Not Null}]-(:_usn4{@usn6:$123456789[`1esn`..]})<-[?:@usn5|:@usn6]-(`7esn` {@usn6:.e0[123456789..][$`2esn`..],``:$0[`5esn`][9e12]})) Union All Merge `5esn`=(((@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})-[? *..0X0123456789ABCDEF{`7esn`:`4esn` Is Not Null,``:.12 Is Not Null}]->(`7esn` {`2esn`:9e0[$@usn6]})-[:#usn7|`5esn`]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null}))) Delete {@usn5:@usn5[..$999][..$0]} Starts With [#usn8 In 0x0[_usn4..] Where 7 =~$1000 =~$`5esn`|$`1esn` Is Not Null Is Not Null],$usn2 Ends With 0 Ends With 12.0 Return Distinct 0Xa[$`4esn`] As `1esn`,Any(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where @usn6 Ends With 0.12 Ends With `3esn`) Contains [`5esn` In $usn2 Contains $`1esn` Where Count(*)[$1000..01]|9e1[..01234567][..`4esn`]] Contains (`3esn` {#usn8:#usn7 =~$`8esn`})-[usn2?:#usn8|:`6esn` *7]->(`6esn` :`5esn`{`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})-[?:`2esn`|:`7esn` *0..{`4esn`:010 In $@usn5 In `5esn`,#usn7:$`7esn` Is Null Is Null}]->(:`6esn`:`3esn`{`3esn`:123.654[0Xa..0x0][.12..12e12]}),123.654[.e12..\"d_str\"] As _usn4 Skip (usn2 {usn2:`7esn` Contains .0 Contains #usn8})-[usn1{`1esn`:`7esn` Contains .0 Contains #usn8}]->(@usn6 :`5esn`{@usn5:.12[9e1..0X7]})[..(`4esn` :_usn3:@usn5)<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(_usn3 :@usn5{`2esn`:1.e1[#usn7][1.e1]})][..All(`6esn` In 1000[12.e12][#usn7] Where `1esn`[$7][0Xa])]"),
    octest:ct_string("Merge `2esn`=(usn2 :@usn6{@usn5:#usn8[True..#usn7][01..@usn5]}) On Create Set {`8esn`:`7esn` =~12.e12 =~0e0}.``! =$`6esn`[00],[0Xa[.e12..],`5esn`[$7..01]].usn1 =Any(#usn8 In 0x0[_usn4..] Where $`` Starts With 0x0) In [usn1 In 123.654 =~.e0 =~9e0 Where $7 Ends With 12.e12 Ends With `1esn`],@usn6 =$_usn3[0.0][$@usn6] On Match Set `1esn`+=All(`5esn` In $usn2 Contains $`1esn` Where Count(*)[_usn3..]) =~Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) =~[$#usn8 =~7 =~.12,$`6esn`[.e12],_usn4 Starts With `6esn` Starts With $`8esn`],[`3esn` In 999 Where `7esn`[`8esn`][#usn7]|False[$12]].``! ={@usn6:$7 Ends With 12.e12 Ends With `1esn`,`8esn`:$usn2 Contains $`1esn`} =~Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where \"d_str\"[..$_usn3]) =~[`7esn` In $`8esn`[0.12][12] Where usn1 In 010|@usn6[$usn1][$`2esn`]] Delete ['s_str' =~$`4esn` =~@usn5,\"d_str\" Ends With $`3esn`] Starts With Extract(`3esn` In 999|0 Is Null Is Null) Starts With [$_usn4 =~0X7,`4esn`,0.0 Ends With $usn1 Ends With $999]"),
    octest:ct_string("Return *,{`4esn`:1000 Ends With $`5esn`} =~None(`3esn` In 999 Where 1e1 Is Null) =~Extract(`6esn` In .e0['s_str'..][$`8esn`..] Where Null In 0xabc) As `1esn` Order By $`3esn` Ends With $7 Ends With `7esn` Ascending,0.e0 Ends With #usn8 Desc,999 Is Not Null Asc Merge (:`7esn`{_usn3:01[$0]})<-[{usn1:0.e0 =~01234567 =~01234567,``:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}]-(`2esn` {_usn3:0[1e1..00]})-[_usn3:_usn3|`6esn`]->({usn2:0[1e1..00],@usn6:$`6esn`[.e12..$`6esn`][$#usn7...0]}) On Match Set [`6esn` In 1000[12.e12][#usn7] Where 0X0123456789ABCDEF Is Not Null].`8esn` =`1esn`[9e12..] On Create Set `6esn` =999[..01234567][..7],usn2:``:`6esn` Remove usn2:`1esn`:@usn6,(:`6esn`:`3esn`{@usn6:#usn8 Is Not Null,usn2:1e1 Is Null})-[#usn8?:usn1|#usn7{`8esn`:$#usn7[`7esn`..][$`8esn`..]}]-(`5esn` {usn2:`6esn` In $``})-[?{`3esn`:'s_str'[$`6esn`..][$0..]}]->(`1esn` {@usn6:Null In 0xabc}).`7esn`! Union All Remove [usn1 Ends With $`8esn` Ends With 7,07 Ends With $_usn4 Ends With 0.e0,$12 Is Null Is Null].#usn8!,[usn1 In 999 Where 12e12[..9e12][..$@usn6]].`7esn` Merge `6esn`=((:`7esn`{`8esn`:'s_str'[$#usn8]})-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})<-[usn2?:#usn8|:`6esn` *7]-(:@usn6)) On Create Set Single(`3esn` In 999 Where 0.e0 Ends With #usn8).usn2 =`4esn` In .12 In $#usn8,`8esn` =`1esn`[0],usn2 =_usn4 =~1000 =~_usn3 With  0x0 In 0X0123456789ABCDEF As usn1,.e1 Ends With $123456789 As @usn6 Skip 0.12[..0.0] Limit Filter(`5esn` In $usn2 Contains $`1esn`) Starts With Filter(usn1 In 999 Where `4esn` Is Null Is Null) Starts With [usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..]|$`6esn`[.e12]] Where @usn5[$`1esn`..][$7..] Union All Match `7esn`=(((:`7esn`$12)<-[?:usn2|:`` *7]->(`6esn` {#usn7:`2esn`[`3esn`..],usn2:$usn2 Starts With $`7esn` Starts With _usn4})-[`2esn` *01234567..123456789{usn1:False[$12],`1esn`:0.e0 Ends With $123456789}]-(#usn7 :#usn7{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2}))),({#usn7:usn1 Ends With $`8esn` Ends With 7})"),
    octest:ct_string("Create #usn8=((usn1 {@usn5:12e12 Ends With `6esn`,_usn4:\"d_str\" Starts With _usn4 Starts With $_usn4})-[`1esn`?]->(:#usn7{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})),((`8esn` :`4esn`:usn2{`5esn`:$0[`5esn`][9e12],``:#usn7[False..][123.654..]})-[:`5esn`|:`1esn`]-(`3esn` :`7esn`$`6esn`)-[`1esn`?:`3esn`|_usn4*..]->(_usn3 )) Unwind 0[$1000..9e12][Null..12e12] As `8esn` With Distinct (:``:`6esn`{`8esn`:123.654[.e12..\"d_str\"]})<-[_usn3:`3esn`|_usn4]->(_usn3 :`4esn`:usn2) Is Not Null Is Not Null As `3esn` Order By ({usn1:$usn1 Starts With Null Starts With $``,@usn5:0x0[01234567..Null][0Xa...e12]})<-[ *..0X0123456789ABCDEF]->(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]}) Starts With (`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`` ) Starts With (`7esn` :_usn4)-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2)-[{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]}]->(`3esn` :#usn7{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}) Asc Skip 0.12 Is Null Is Null Limit 1000 Is Not Null Union All With  *,0.12[$usn1..$7] As `1esn`,True Is Null Skip All(#usn8 In 0x0[_usn4..] Where 0X0123456789ABCDEF In _usn3) Ends With Single(`6esn` In 0x0[9e0..] Where $#usn8[0e0..][07..]) Limit 7[$`5esn`..`4esn`] Where 0.e0[.e12] Return False In 0e0 As @usn6,12e12 In Null As #usn8 Unwind $@usn6 Contains $_usn4 As usn2 Union Merge #usn8=(usn1 :#usn8:#usn7)<-[_usn4?:#usn8|:`6esn`]->(:`1esn`:@usn6{_usn4:1000 Ends With $`5esn`}) On Match Set `2esn`:``:`6esn`,Extract(`6esn` In 0x0[9e0..] Where `7esn`[`8esn`][#usn7]|`8esn` Ends With $`1esn`).`1esn`? =1.e1 =~01234567,{@usn6:$123456789[12.0],#usn7:usn1 =~_usn4 =~$usn1}.`8esn`! =@usn6(Distinct $0 Contains 7 Contains 1.e1)[(_usn4 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8)][Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0X0123456789ABCDEF In _usn3)]"),
    octest:ct_string("Create @usn6=(`8esn` :`8esn`{`3esn`:Null Is Null Is Null})-[`4esn`?:#usn8|:`6esn` *999{`8esn`:010[`1esn`..`4esn`]}]->(`3esn` :`3esn`{_usn4:$123456789 Is Not Null,_usn4:#usn8 =~#usn7 =~0x0}),(`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})<-[? *..010{usn1:123456789[$_usn4..]}]->(#usn7 {usn2:$#usn8 In True In #usn7})"),
    octest:ct_string("Return Distinct *,(:`4esn`:usn2$``)-[`5esn`?:_usn4|_usn3{@usn5:7 =~False,_usn3:999 Ends With $`4esn`}]->(usn2 :``:`6esn`)<-[_usn3:`3esn`|_usn4]->(#usn7 :_usn4) Is Not Null,[`3esn` In False In $`2esn` In 1e1 Where `` Contains 010 Contains $1000|1000[12.e12][#usn7]] In [`3esn` In 999 Where `7esn` Is Null|$#usn8[0e0..][07..]] In Single(`5esn` In 1e1 =~$`8esn` =~`1esn` Where `8esn` Starts With $12 Starts With $1000) As `2esn` Order By .e1 Ends With $123456789 Descending,$`6esn`[$0] Asc,Extract(usn1 In 123.654 =~.e0 =~9e0 Where $`7esn` Starts With 07 Starts With `1esn`|`7esn` Is Not Null Is Not Null) =~`7esn`(Distinct $@usn6[..``],0.0 Starts With Null Starts With .e12) =~@usn6(Distinct 00 In 1000) Ascending Limit Single(`6esn` In 0x0[9e0..] Where $`3esn` Is Not Null) In (`3esn` :`8esn`{usn2:0e0 =~False =~.12})-[? *12{`1esn`:.e0 Ends With $`1esn` Ends With 1000}]->(#usn7 ) Create (_usn4 :usn1:``{`5esn`:$0[`5esn`][9e12],``:#usn7[False..][123.654..]})<-[_usn4]-(`8esn` :usn1:``{`7esn`:1.e1[0..],``:.e0 Contains 999})-[#usn8:@usn6]-(:`3esn`{`7esn`:$123456789[`4esn`..]}) Return Distinct 9e0[0..1e1] Order By (`1esn` :@usn5{`7esn`:usn2 In 1e1 In `4esn`,``:123456789 Ends With 9e1 Ends With ``})<-[`2esn`:``]->(`7esn` :_usn3:@usn5{_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null})-[`2esn`? *7]->(:#usn8:#usn7{#usn7:$`7esn`[`2esn`]})[[0X0123456789ABCDEF[$_usn3][$_usn4]]] Descending,Null[..$0][..12.0] Descending Limit {@usn5:Count(*)[..$_usn3][..$usn2],@usn5:$1000[$usn1][.e1]}[Single(`6esn` In 1000[12.e12][#usn7] Where $usn2 Contains $`1esn`)..{#usn7:usn1 Ends With .0 Ends With `4esn`,_usn3:$`1esn` Is Null}][[`7esn` In $`8esn`[0.12][12] Where usn1 In 010]..usn1(1e1 Is Null)] Union All Optional Match @usn6=((:`8esn`{`8esn`:$`7esn` =~$usn1 =~00,@usn6:`6esn` In $``})-[ *..010]-({@usn6:`5esn`[0e0..],_usn4:$#usn8[0xabc..usn2]})),`6esn`=({_usn4:`7esn`[_usn4..][Count(*)..],`1esn`:01234567 In \"d_str\"})-[? *..0x0{`1esn`:`4esn` Starts With `8esn`}]->(:_usn3:@usn5{_usn3:$#usn8 In True In #usn7,usn2:$@usn5[$_usn3..Null]}) Where 's_str' Ends With $7 Return *,[usn1[..$123456789][..`1esn`],0e0 Is Not Null][Extract(#usn8 In 0x0[_usn4..] Where 0X0123456789ABCDEF In _usn3|$`5esn`[0][.12])][[`6esn` In 0x0[9e0..] Where #usn7[@usn6..]]] As #usn8 Skip .12[usn1] Limit Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 01[$0])[{`5esn`:@usn6[$usn1][$`2esn`],`1esn`:12.0[9e12]['s_str']}..][Any(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0)..] Union All Detach Delete \"d_str\" Starts With _usn4 Starts With $_usn4,#usn8"),
    octest:ct_string("Merge (:`1esn`:@usn6{usn1:`` Is Not Null Is Not Null,`2esn`:#usn8[..0X0123456789ABCDEF][...0]}) On Match Set `6esn` =Filter(`6esn` In .e0['s_str'..][$`8esn`..]) Is Not Null Is Not Null Merge usn1=(({@usn6:$#usn8[0e0..][07..],``:$`7esn` =~1.e1 =~0.e0})<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]-({``:0.12 Contains 0x0 Contains @usn5})) On Create Set usn2+={`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]}[{`1esn`:`4esn` Starts With `8esn`}][({`7esn`:`4esn` In $`2esn` In @usn5})-[:`1esn`|@usn6*..]->(:`8esn`{`8esn`:0X7 Contains 12.0,`3esn`:`4esn` Starts With `8esn`})<-[`4esn` *123456789..]-(:`7esn`$#usn8)] On Match Set #usn7+=Single(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where `4esn` In $`2esn` In @usn5) =~[`6esn` In 1000[12.e12][#usn7] Where $`4esn`[$@usn5..`7esn`]|0X7[..`5esn`][..$`7esn`]] =~`3esn`(Distinct 0.e0 Is Not Null Is Not Null,$usn1[usn1..$`8esn`][12e12..$``]) Union All Match (((:_usn4{_usn3:`1esn`[Null..]})<-[`8esn`? *..0X0123456789ABCDEF{`2esn`:$``[$_usn4][$`3esn`]}]-(:`6esn`:`3esn`{`5esn`:$7[$12],`6esn`:#usn8 Is Not Null})-[@usn6{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]}]-(`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]}))),#usn8=({usn1:False[$12],`1esn`:0.e0 Ends With $123456789})-[usn1:_usn3|`6esn`{#usn8:`6esn`[`7esn`..$_usn3][9e0..#usn8],`3esn`:\"d_str\" =~_usn3 =~0.0}]-({``:9e1[$#usn8],`4esn`:1.e1 Is Null Is Null})<-[@usn5?{`7esn`:`6esn` In $``}]->(usn1 {_usn3:#usn7 Ends With 0.12}) With  0x0 In 0X0123456789ABCDEF As usn1,.e1 Ends With $123456789 As @usn6 Skip 0.12[..0.0] Limit Filter(`5esn` In $usn2 Contains $`1esn`) Starts With Filter(usn1 In 999 Where `4esn` Is Null Is Null) Starts With [usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..]|$`6esn`[.e12]] Return [0Xa[..1.e1],#usn7[.12][usn2],1000 Starts With 0e0 Starts With 0][`7esn`(Distinct $#usn8[@usn5..$1000])] As #usn7,(_usn3 {usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`4esn`:1.e1 Is Null Is Null})-[`1esn`?:`1esn`|@usn6 *12]->(`8esn` :@usn6) Is Null Is Null As _usn4,Single(usn1 In 123.654 =~.e0 =~9e0 Where 7[$1000][1000])[(`7esn` {`8esn`:0 Is Null Is Null})<-[ *..0X0123456789ABCDEF{@usn6:`4esn` Is Not Null,`2esn`:@usn6[.0]}]-(`6esn` :usn2)][Single(`3esn` In False In $`2esn` In 1e1 Where True Contains .e1 Contains `2esn`)] As `` Limit _usn3[..`8esn`] Union All Remove ($1000)<-[`5esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]}]->({_usn3:.e12 =~\"d_str\" =~@usn5})._usn3?"),
    octest:ct_string("Create _usn4=(@usn6 {@usn6:$`7esn` Ends With $_usn4 Ends With `5esn`,usn1:123.654[0Xa..0x0][.12..12e12]})<-[:@usn6]->(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null})"),
    octest:ct_string("Return Distinct (:`4esn`:usn2$``)-[`5esn`?:_usn4|_usn3{@usn5:7 =~False,_usn3:999 Ends With $`4esn`}]->(usn2 :``:`6esn`)<-[_usn3:`3esn`|_usn4]->(#usn7 :_usn4) Is Not Null,`6esn`(1000[12.e12][#usn7],0x0 =~`5esn` =~$`8esn`) Is Null Limit _usn4 Starts With `6esn` Starts With $`8esn` Match (((:`2esn`:@usn5{usn1:$usn2[`6esn`..],`3esn`:$_usn4[..$`8esn`]})-[?{#usn7:123.654[``]}]-(`8esn` :`3esn`{`2esn`:$`8esn`[`7esn`],`4esn`:#usn8[1e1..]})<-[_usn3:@usn6]->({@usn6:`5esn` Ends With $999}))),(`1esn` :`4esn`:usn2{`2esn`:9e0[$@usn6]})<-[`1esn`?:_usn4|_usn3]-(`1esn` {@usn6:Null In 0xabc})<-[`5esn`?:`1esn`|@usn6{`5esn`:#usn8 =~$1000 =~$1000,`2esn`:0x0[$7]}]-(:_usn3:@usn5{_usn3:.e0[$`1esn`..][_usn4..]}) Where 1e1 Ends With 's_str' Ends With $@usn6 Return *,[`6esn` In 1000[12.e12][#usn7] Where $`7esn`[..$`8esn`]|$`6esn` Starts With usn1][Extract(`3esn` In 999 Where usn1[$`1esn`..])..{`3esn`:usn2 Contains 07 Contains False,#usn8:usn2[.e1..][01234567..]}][{@usn5:.12[9e1..0X7]}..[_usn4 In 12.e12 Is Null Is Null Where $123456789 In 010 In $`8esn`|0.12['s_str'..$0][$usn1..9e0]]] As usn1 Order By Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $@usn5 =~$usn2 =~True) In (@usn5 :`3esn`)<-[``?:usn1|#usn7]-(:`2esn`:@usn5$usn1)-[usn1?:@usn5|:@usn6 *01..7{`1esn`:`8esn` Ends With $`1esn`}]-(#usn8 :_usn4) Desc,Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) Ends With [1.e1[#usn7][1.e1],Null =~Count(*)] Ends With [#usn8[..0X0123456789ABCDEF][...0],$usn1 Is Not Null Is Not Null] Desc Limit $``[12e12..01][$`5esn`..12e12] Union All Merge (_usn3 :`1esn`:@usn6)<-[_usn3:@usn6]->({@usn6:`5esn`[0e0..],_usn4:$#usn8[0xabc..usn2]})-[_usn4 *0..]->(:#usn7{_usn3:7 Contains 1000 Contains $usn1}) On Create Set {usn1:$7[$12]}._usn4? =1000 =~$@usn5,Single(usn1 In 999 Where @usn6 Ends With 0.12 Ends With `3esn`).#usn7 =01 Ends With @usn6 Ends With $7 Create (((#usn7 {#usn7:999 Contains $`7esn` Contains usn2})-[@usn6?:`` *0Xa]-(@usn6 :@usn5{`8esn`:$@usn6 Contains 0e0})-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2))) Detach Delete _usn3($123456789[..`3esn`][..`7esn`]) Is Null,{_usn3:Null =~Count(*),@usn5:7 =~$1000 =~$`5esn`} Starts With {`1esn`:0.12 Is Null Is Null,#usn8:.e12 =~@usn5} Starts With {`7esn`:0Xa Contains 0x0 Contains $#usn8},0xabc[..$999] Union Create (:`4esn`:usn2{_usn3:Null Is Not Null Is Not Null,`4esn`:$1000 Is Not Null})-[?:`3esn`|_usn4 *01..7{@usn5:`4esn`}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]})<-[?:usn2|:`` *7]->(`` :_usn3:@usn5) With  *,$`8esn` Is Not Null,@usn5 Ends With 1000 Order By {`2esn`:`2esn`[``..]} =~[`6esn` In 0x0[9e0..] Where 0Xa[..1.e1]] =~None(`3esn` In @usn6[..\"d_str\"][..01] Where $@usn6 Is Null) Ascending Skip Filter(`2esn` In $``[$#usn8] Where 0e0['s_str']) Contains [`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 7 =~False|`6esn` Is Not Null] Contains None(usn1 In 123.654 =~.e0 =~9e0 Where $123456789[..$`7esn`][..\"d_str\"]) Where _usn3 =~$12 Delete $`5esn` Is Not Null"),
    octest:ct_string("Merge `2esn`=((:`4esn`:usn2{_usn3:Null Is Not Null Is Not Null,`4esn`:$1000 Is Not Null})) On Match Set `7esn`:`3esn`,({``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]})<-[:@usn6 *7{``:9e0 Is Null Is Null,`3esn`:.0[@usn6..]}]->(`8esn` :``:`6esn`).`5esn`! =None(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $@usn6 Is Null Is Null)[None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where .e0 Is Not Null)],`4esn`+=False In 1.e1 In $12 On Match Set `6esn`+=.e0[0X0123456789ABCDEF.._usn3][9e1..$`3esn`] Unwind 's_str' In usn1 In 12.0 As ``"),
    octest:ct_string("Optional Match ((`6esn` :`2esn`:@usn5)) Where `` Is Not Null Is Not Null Remove `4esn`(`` In False In True,$_usn3 Is Not Null).`1esn`,(`5esn` {usn1:1000 Ends With $`5esn`})<-[ *07{usn1:010 =~0e0 =~9e1}]->(`7esn` {`2esn`:9e0[$@usn6]}).`8esn` Union All Delete Count(*) Contains 12e12 Contains 0xabc,Null Contains $_usn3"),
    octest:ct_string("Create (({_usn4:.e0[$`1esn`..][_usn4..],usn2:.12[0X0123456789ABCDEF..]})),`5esn`=((:@usn5{``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]})<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(`4esn` :`5esn`)<-[?:@usn5|:@usn6]-({`1esn`:$`7esn` Ends With $_usn4 Ends With `5esn`})) Return Distinct `3esn`(Distinct 0.e0 Is Not Null Is Not Null,$usn1[usn1..$`8esn`][12e12..$``])[[`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $@usn6 Is Null Is Null|999 Ends With $`4esn`]..][[0 Contains $@usn5]..] As `3esn`,`7esn` In `8esn` In 12,0Xa Ends With 07 Ends With `7esn` As _usn3 Skip 7 Contains 1000 Contains $usn1 Limit Extract(`7esn` In $`8esn`[0.12][12] Where 123456789[$_usn4..]|01234567[$`7esn`])[@usn5()..][Extract(`7esn` In $`8esn`[0.12][12] Where `5esn`[12.0]|\"d_str\"[.0][9e0])..] Union Remove {_usn4:12 Is Null Is Null}.`2esn`?,None(`2esn` In $``[$#usn8] Where 0 Is Null Is Null).``,(`6esn` :`8esn`{usn2:#usn7 In #usn7,`1esn`:00['s_str']})<-[_usn3:@usn6]->({@usn6:`5esn` Ends With $999}).#usn7! Unwind (_usn4 :_usn3:@usn5)<-[@usn6:`8esn`|@usn6{@usn6:#usn8 =~#usn7 =~0x0,`7esn`:$usn1 Ends With $`2esn`}]->(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[?:`6esn`]->(`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})[Any(`5esn` In $usn2 Contains $`1esn` Where @usn6[$usn1][$`2esn`])..][None(`3esn` In False In $`2esn` In 1e1 Where True Contains $`` Contains 01234567)..] As #usn8 Union Return *,.e12 =~\"d_str\" =~@usn5 Order By `4esn` In .12 In $#usn8 Ascending,010 Starts With 0X7 Ascending Skip (#usn8 :#usn8:#usn7)<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(`4esn` :`5esn`) Contains {_usn3:12.0 In 07,`2esn`:01234567[..`6esn`][..``]} Limit 0.0 =~$#usn7 =~`1esn`"),
    octest:ct_string("With  *,(:`4esn`:usn2$``)-[`5esn`?:_usn4|_usn3{@usn5:7 =~False,_usn3:999 Ends With $`4esn`}]->(usn2 :``:`6esn`)<-[_usn3:`3esn`|_usn4]->(#usn7 :_usn4) Is Not Null,[`3esn` In False In $`2esn` In 1e1 Where `` Contains 010 Contains $1000|1000[12.e12][#usn7]] In [`3esn` In 999 Where `7esn` Is Null|$#usn8[0e0..][07..]] In Single(`5esn` In 1e1 =~$`8esn` =~`1esn` Where `8esn` Starts With $12 Starts With $1000) As `2esn` Limit All(`7esn` In $`8esn`[0.12][12] Where @usn5[..$999][..$0])[..({usn2:1000 Starts With 0e0 Starts With 0,`6esn`:9e1[$`3esn`][$`1esn`]})<-[`3esn`:_usn3|`6esn`]->(usn1 :#usn8:#usn7)] Where 123456789 Ends With 9e1 Ends With `` Detach Delete _usn3($123456789[..`3esn`][..`7esn`]) Is Null,{_usn3:Null =~Count(*),@usn5:7 =~$1000 =~$`5esn`} Starts With {`1esn`:0.12 Is Null Is Null,#usn8:.e12 =~@usn5} Starts With {`7esn`:0Xa Contains 0x0 Contains $#usn8},0xabc[..$999] With Distinct *,{`1esn`:$usn2 =~`6esn` =~`1esn`} Ends With 010 Ends With None(_usn4 In 12.e12 Is Null Is Null Where $`4esn` In 0x0) Order By True Ends With `6esn` Ends With 9e0 Desc Skip $_usn4[..$`8esn`] Limit True Contains $`` Contains 01234567 Union All Unwind None(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where $#usn8[0e0..][07..]) Ends With [`3esn` In @usn6[..\"d_str\"][..01] Where `2esn` Is Null Is Null|$_usn3 =~`1esn`] Ends With (`1esn` )-[usn2?:@usn5|:@usn6]->({#usn8:$`` Is Not Null Is Not Null,`8esn`:$usn2 Starts With 9e1 Starts With `7esn`}) As _usn4 Optional Match `5esn`=(:`8esn`{@usn5:1000 Starts With 0e0 Starts With 0,#usn7:$`5esn`[`4esn`..$`2esn`]})-[:`3esn`|_usn4{usn1:$`6esn`[$`6esn`..][0X7..],@usn5:123456789 Starts With #usn8}]-(:`3esn`$`6esn`)<-[{#usn8:999}]->(:@usn6),(@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8}) Match _usn4=((`3esn` :#usn8:#usn7{_usn3:$`1esn` Is Not Null Is Not Null,`2esn`:0X7 Contains 12.0})<-[``?:#usn8|:`6esn`]->(`8esn` :`1esn`:@usn6{usn1:00['s_str'],#usn8:$`8esn`[``..True][1000..0.12]})<-[``? *01234567..123456789{``:9e12 In 123.654 In True}]->(:`5esn`{`7esn`:0Xa[Count(*)][0xabc],`2esn`:`4esn` Ends With 's_str' Ends With @usn6})) Where \"d_str\" Ends With $1000 Ends With usn2"),
    octest:ct_string("Detach Delete 123.654[.e12..\"d_str\"],Extract(`5esn` In $usn2 Contains $`1esn` Where Count(*)[_usn3..])[..None(`5esn` In $usn2 Contains $`1esn` Where `3esn` Is Not Null Is Not Null)][..Extract(#usn8 In 07['s_str'][$@usn6] Where True)] Return Distinct $`2esn` =~$123456789 =~usn2 As #usn7,.e12[..#usn7][..9e12],Null Contains $_usn3 As @usn6 Union All With  *,`5esn` In 12.e12 In 1000 As _usn4 Skip $0[07..] Limit Any(`6esn` In 1000[12.e12][#usn7] Where True[$usn1..12][``..\"d_str\"])[..[_usn4 Starts With `6esn` Starts With $`8esn`,``[0X7..][$@usn6..],$usn2 Starts With 9e1 Starts With `7esn`]] Union Merge `5esn`=((`6esn` :_usn3:@usn5)) On Create Set `1esn` =Extract(`5esn` In $usn2 Contains $`1esn` Where `3esn` Is Not Null Is Not Null|`` Is Not Null Is Not Null) Is Null Is Null,Filter(#usn8 In 07['s_str'][$@usn6] Where 0xabc Is Not Null Is Not Null).`2esn`? =$`1esn` Is Not Null Is Not Null On Match Set usn1+=#usn7 Starts With 's_str' Starts With usn2 Return Distinct Null Is Null Is Null As #usn7,$123456789[..$usn2] As `4esn`,Filter(#usn8 In 07['s_str'][$@usn6] Where 9e0 Starts With 0e0 Starts With $`5esn`)[Filter(usn1 In 999 Where True[$usn1..12][``..\"d_str\"])] Order By Filter(usn1 In 123.654 =~.e0 =~9e0 Where 0.12 Contains 0x0 Contains @usn5) Ends With Filter(usn1 In 123.654 =~.e0 =~9e0 Where `5esn`[usn1]) Ascending"),
    octest:ct_string("With  $0 Contains 7 Contains 1.e1,{@usn5:Count(*)[..$_usn3][..$usn2],@usn5:$1000[$usn1][.e1]}[Single(`6esn` In 1000[12.e12][#usn7] Where $usn2 Contains $`1esn`)..{#usn7:usn1 Ends With .0 Ends With `4esn`,_usn3:$`1esn` Is Null}][[`7esn` In $`8esn`[0.12][12] Where usn1 In 010]..usn1(1e1 Is Null)] Skip $123456789[..$usn2] Limit $#usn8 In True In #usn7 Where Null Is Not Null Is Not Null Union All Delete (`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`` ) Contains (_usn4 {@usn6:0.e0 Contains $1000 Contains 7})-[?:`` *999{`7esn`:Count(*)[..`5esn`],`2esn`:.e12[..$_usn4][..#usn7]}]-({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]}) Contains Single(`7esn` In $`8esn`[0.12][12] Where .e0[123456789..][$`2esn`..]) Unwind [01[..0X7],0 =~#usn8,$``[$_usn4][$`3esn`]] As `5esn` Union Merge ((({`6esn`:$#usn8 Is Null Is Null,#usn8:'s_str'[$`6esn`..][$0..]})-[*{`6esn`:`6esn` In $``}]->(`` :`5esn`)-[{`8esn`:'s_str'[$#usn8]}]->(`8esn` :@usn5))) On Match Set {`6esn`:0.12[_usn3]}.@usn5? =All(`3esn` In 999 Where $123456789 =~usn1 =~0xabc) Is Null,`5esn`+=[.e1 =~\"d_str\" =~'s_str',$`` Is Not Null Is Not Null,$0[@usn6..][.e12..]] Contains Filter(`6esn` In 0x0[9e0..] Where 0xabc Is Not Null Is Not Null) On Match Set _usn4:usn1:``,`7esn`+=$`2esn`[All(usn1 In 123.654 =~.e0 =~9e0 Where 0e0 Is Null)]"),
    octest:ct_string("Match ((:`1esn`:@usn6{`2esn`:12e12 Ends With 0 Ends With $@usn6,``:`1esn`[Null..]})) Remove None(#usn8 In 0x0[_usn4..] Where $`8esn`[`7esn`]).``!,Filter(`3esn` In 999 Where $0 Contains 7 Contains 1.e1).#usn8!,Extract(`6esn` In 0x0[9e0..] Where 01234567[..`6esn`][..``]|$usn2 In 12).`4esn`? Union Merge usn2=(({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})-[`6esn`:`7esn` *7{`6esn`:`6esn` In $``}]-(`` :_usn3:@usn5)<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]-({``:0.12 Contains 0x0 Contains @usn5})) On Create Set @usn6 =[0Xa[..$`2esn`][..00]] Starts With (@usn6 )-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(:`7esn`{`2esn`:.e12 Is Not Null Is Not Null,`4esn`:_usn4[1000..``]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`6esn` ),`6esn`+=$12[usn2][12.0] On Create Set Extract(`6esn` In 1000[12.e12][#usn7] Where 1.e1 Ends With 0x0 Ends With 1e1|@usn5[..$999][..$0]).`7esn`! =$12[usn2][12.0],_usn3:@usn6 Detach Delete Null =~Count(*) Unwind usn1[..`7esn`][..$`8esn`] As `4esn` Union Remove Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 9e1 Contains _usn3).usn1?,(`7esn` {`8esn`:Count(*) Is Null Is Null,@usn5:.e0 Ends With $`1esn` Ends With 1000})<-[usn1?]-(:`7esn`{usn2:0e0 Is Null})<-[`7esn`?]->(:`2esn`:@usn5{usn2:$`3esn` Ends With @usn6 Ends With 123.654}).`8esn`,{_usn4:12 Is Null Is Null}.`2esn`?"),
    octest:ct_string("Delete ``(Distinct `7esn`[`8esn`][#usn7]) Contains (:@usn6{usn2:12.e12[.12..$_usn3][0e0..9e0]})-[`7esn`?:`2esn`|:`7esn`]-(#usn8 :`7esn`) Contains Any(`3esn` In False In $`2esn` In 1e1 Where True Contains .e1 Contains `2esn`) Union Return Distinct .0[@usn6..] Order By 07[0..] Ascending Skip Filter(`2esn` In $``[$#usn8] Where 0e0['s_str']) Contains [`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 7 =~False|`6esn` Is Not Null] Contains None(usn1 In 123.654 =~.e0 =~9e0 Where $123456789[..$`7esn`][..\"d_str\"]) Limit _usn3[..`8esn`] Unwind 1.e1[0x0][$123456789] As `` Return $`8esn` Is Not Null Order By #usn7(usn2 =~`6esn`) Is Null Is Null Desc Skip [0e0 In `8esn` In 0xabc,12.0[9e12]['s_str'],@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`]][..{usn1:\"d_str\"[7..$999],`8esn`:$1000[$usn1][.e1]}][..[0]]"),
    octest:ct_string("Create `4esn`=(usn2 :_usn3:@usn5) Optional Match `5esn`=({usn1:0X7[0xabc][$1000]}) Where $`6esn`[.e12..$`6esn`][$#usn7...0] Delete 1000[Null][$`7esn`],0x0 Is Not Null,False In 1.e1 In $12 Union Merge usn1=(:`5esn`{`7esn`:'s_str'[$#usn8],``:`1esn`[..$#usn7]})<-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-(`5esn` {_usn3:1.e1 Is Null Is Null})<-[_usn4 *00]-(#usn7 :`7esn`) On Create Set usn1 =Extract(`6esn` In 1000[12.e12][#usn7] Where `7esn` Contains .0 Contains #usn8|$0[00..])[{`2esn`:07['s_str'][$@usn6],``:usn1[..$123456789][..`1esn`]}..`4esn`(Distinct 9e1 Contains 07,1000[07..][1.e1..])][Single(`5esn` In $usn2 Contains $`1esn` Where 0e0['s_str'])..[123456789[0.0..`2esn`][1.e1..$_usn4]]],`6esn`+=01234567[$`7esn`] On Create Set Single(`2esn` In $``[$#usn8] Where $usn1 Ends With $`2esn`).usn1? =#usn7[@usn6..],@usn6+=`4esn` Ends With $#usn8 Ends With 12.e12 Unwind $usn1[9e0..] As @usn6 Match ((:`7esn`{_usn3:01[$0]})-[:_usn3|`6esn` *01..7{_usn4:$`2esn`[$``..12e12]}]-(`5esn` {usn1:1000 Ends With $`5esn`})<-[`2esn`?:@usn6]->($`8esn`)) Union All With  (`5esn` {_usn3:1.e1 Is Null Is Null})<-[_usn3?:#usn7|`5esn` *..0x0]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})<-[?:@usn5|:@usn6]-(`7esn` {@usn6:.e0[123456789..][$`2esn`..],``:$0[`5esn`][9e12]})[`8esn`()..][[`7esn` In $`8esn`[0.12][12] Where 9e0[123456789..0][12.0..@usn6]]..] As #usn8,$0 Starts With `5esn` Starts With 0 Order By [.0[@usn6..],`2esn`[`3esn`..],Count(*) Contains 12e12 Contains 0xabc][..{usn1:#usn7 Is Not Null Is Not Null,`6esn`:$12[0.0..]}][..(:usn2{usn1:_usn4[.._usn4],@usn6:@usn5 In .e0 In \"d_str\"})-[?:`8esn`|@usn6 *0xabc..{usn1:$#usn7[..$999][..9e1]}]-(:`6esn`:`3esn`{@usn6:#usn8 Is Not Null,usn2:1e1 Is Null})-[usn1{`1esn`:`7esn` Contains .0 Contains #usn8}]->(_usn3 {usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`4esn`:1.e1 Is Null Is Null})] Ascending,[#usn8 In 0x0[_usn4..] Where $_usn3 Is Not Null] Is Not Null Is Not Null Ascending,1.e1 Desc Limit Count(*) Ends With 7 Ends With 0 Return Distinct $`3esn`[0.12..][$@usn5..] Order By 1000 Is Null Is Null Asc Skip (@usn6 )<-[`7esn`?:@usn6]-(_usn4 :usn1:``{`2esn`:$`2esn` Is Not Null Is Not Null,`2esn`:@usn5['s_str'..$`2esn`]})[``(Distinct `` In False In True,0xabc Contains 0)]"),
    octest:ct_string("With Distinct _usn4 Ends With .e12 As @usn6,$`1esn` =~`1esn` =~0X0123456789ABCDEF As _usn3 Order By ``($#usn7[$`3esn`..$999]) Starts With {``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]} Ascending,1e1 =~$`8esn` =~`1esn` Descending Skip Null Is Null Is Null Limit 0.e0 Is Not Null Delete 0[..123456789][..False],[`2esn` In $#usn8 Starts With usn2 Starts With .12 Where .0 =~$@usn5 =~1.e1][Any(`3esn` In 999 Where $`5esn`[.e1][#usn8])..Single(`5esn` In $usn2 Contains $`1esn` Where $#usn8[..123456789][..`2esn`])][count($usn1 Starts With Null Starts With $``)..`3esn`(Distinct 7[$1000][1000])] Create usn2=(`5esn` :`2esn`:@usn5{usn2:$`6esn` Starts With usn1,``:123456789 =~@usn5 =~$`5esn`})<-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}),(`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})<-[? *..010{usn1:123456789[$_usn4..]}]->(#usn7 {usn2:$#usn8 In True In #usn7}) Union All Remove @usn5:#usn7 Remove All(#usn8 In 0x0[_usn4..] Where `8esn` Ends With $`1esn`).``!"),
    octest:ct_string("Remove Single(`2esn` In $``[$#usn8] Where `1esn`[Null..]).usn1,Single(`3esn` In False In $`2esn` In 1e1 Where 's_str' Ends With $7).`8esn`!,{`2esn`:.e12 Is Null Is Null,usn1:.e12 =~@usn5}.`3esn` Merge #usn8=(((@usn6 {@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})-[`5esn`:@usn5|:@usn6*{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]->(#usn8 :`2esn`:@usn5)<-[`5esn`:_usn4|_usn3 *0X7..0x0]-(:#usn7{_usn4:\"d_str\"[7..$999]}))) On Match Set (`3esn` :`3esn`{_usn4:$123456789 Is Not Null,_usn4:#usn8 =~#usn7 =~0x0})<-[`4esn`?{`8esn`:$@usn5 Starts With Count(*) Starts With $usn1,#usn7:0.e0[.e12]}]->(:`6esn`:`3esn`{@usn6:#usn8 Is Not Null,usn2:1e1 Is Null})<-[?{`3esn`:'s_str'[$`6esn`..][$0..]}]->(`2esn` :@usn6).`3esn`? =0x0 In 0X0123456789ABCDEF"),
    octest:ct_string("Remove [`3esn` In 999 Where $`7esn`[`2esn`]|\"d_str\"[..$_usn3]].#usn7!,`7esn`(0xabc Is Not Null Is Not Null).#usn8!,[$@usn6 Contains `5esn` Contains .e12,\"d_str\"[`5esn`],0.e0 Contains $123456789 Contains 123456789].`3esn`!"),
    octest:ct_string("Detach Delete (#usn7 :`3esn`{_usn3:.e0[$`1esn`..][_usn4..]})-[#usn8?:usn1|#usn7{`8esn`:$#usn7[`7esn`..][$`8esn`..]}]-(:`1esn`:@usn6) Is Not Null Is Not Null,(:_usn4)-[usn2{@usn6:$usn1 Is Not Null Is Not Null,`7esn`:0x0 In 0X0123456789ABCDEF}]-(:`7esn`{`8esn`:'s_str'[$#usn8]})-[`5esn` *12{`8esn`:0Xa[Count(*)][0xabc]}]->({@usn6:$#usn8[0e0..][07..],``:$`7esn` =~1.e1 =~0.e0}) Contains [\"d_str\"[.0][9e0]],07 =~.12"),
    octest:ct_string("Merge (((`3esn` {`3esn`:1e1[`3esn`]})<-[usn1?:`8esn`|@usn6]->(#usn8 :#usn7{`2esn`:0.e0[.e12]})-[:`5esn`|:`1esn`]-(`2esn` ))) On Match Set Any(`7esn` In $`8esn`[0.12][12] Where 123.654[$`1esn`]).`8esn` =All(#usn8 In 0x0[_usn4..] Where 0X0123456789ABCDEF In _usn3) Ends With Single(`6esn` In 0x0[9e0..] Where $#usn8[0e0..][07..])"),
    octest:ct_string("Optional Match _usn3=(#usn7 :`3esn`{_usn3:.e0[$`1esn`..][_usn4..]}),(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[@usn6{_usn4:$`` Starts With 0x0}]-(usn2 :`7esn`) Where $_usn3 Is Not Null With  *,7 =~$1000 =~$`5esn`,@usn5 In .e0 In \"d_str\" As `7esn` Order By None(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1)[None(#usn8 In 0x0[_usn4..] Where `5esn` Ends With $999)][@usn5($@usn6 Contains 0e0,9e12[\"d_str\"])] Descending Skip 01234567[$`7esn`] Limit Extract(_usn4 In 12.e12 Is Null Is Null Where _usn4 In .0 In .12|usn2 In 1e1 In `4esn`) Contains None(`3esn` In @usn6[..\"d_str\"][..01] Where `4esn` In .12 In $#usn8) Contains Filter(`5esn` In $usn2 Contains $`1esn` Where usn2[Count(*)][$`1esn`]) Where 0.12[..0xabc] Union Remove [0Xa[..9e12][...e0],0Xa =~0Xa =~`3esn`,.e1[0X7..`2esn`]].`6esn`!,(`7esn` {@usn6:$`3esn` Starts With 9e12 Starts With `8esn`})<-[`3esn`:usn2|:``]-(:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`})<-[?{_usn3:Count(*) Ends With 7 Ends With 0,`8esn`:@usn6 Starts With #usn8 Starts With $#usn7}]->({_usn4:$1000[$usn1][.e1]}).`3esn`?,(`2esn` :`1esn`:@usn6{#usn8:.12 Is Not Null})<-[:`7esn`{`6esn`:usn1[$`1esn`..],_usn4:$usn2 Contains $`1esn`}]->({`1esn`:1e1 Starts With 010})<-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->(@usn5 :`5esn`).usn1 With  $usn2 Contains $1000 Contains @usn5 As #usn8,None(_usn4 In 12.e12 Is Null Is Null Where _usn4 In .0 In .12) Starts With {`4esn`:`8esn`[0x0..],usn2:$#usn8 =~7 =~.12} Starts With _usn3(Distinct usn1[$`1esn`..]) As #usn8,07[0..] Order By .e12[$_usn4..0] Desc Where 0x0[$7..][`7esn`..] Match (({_usn4:.e0[$`1esn`..][_usn4..],usn2:.12[0X0123456789ABCDEF..]})),`7esn`=(((`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]})<-[? *12{`1esn`:.e0 Ends With $`1esn` Ends With 1000}]-(@usn5 :usn1:``{usn2:9e0[0..1e1]})<-[?{_usn3:Count(*) Ends With 7 Ends With 0,`8esn`:@usn6 Starts With #usn8 Starts With $#usn7}]-(_usn3 :`4esn`:usn2)))"),
    octest:ct_string("Create #usn8=(`6esn` :@usn6)<-[`1esn`?:`3esn`|_usn4 *01234567..123456789]->(#usn7 {#usn7:999 Contains $`7esn` Contains usn2}),(usn2 :`7esn`) Union All Detach Delete $999 Ends With $`` Ends With 07"),
    octest:ct_string("Remove All(`3esn` In @usn6[..\"d_str\"][..01] Where 0.e0 Ends With $123456789).usn2?,{_usn4:12 Is Null Is Null}.usn1? Detach Delete 0,$_usn3 =~`1esn`,_usn3($123456789[..`3esn`][..`7esn`]) Is Null With  *,'s_str'[..Null][..$`5esn`],usn2 Starts With 00 Order By $`2esn` Contains `6esn` Contains $`2esn` Desc,0[1.e1..#usn7] Desc,$123456789 Ends With 12e12 Asc Skip Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null) =~[12 Is Null Is Null,9e0[$@usn6]] Limit 0[_usn3][.12] Union Merge (_usn3 :@usn6{@usn5:0e0 =~False =~.12})<-[:`5esn`|:`1esn`]->(:`4esn`:usn2$``)<-[`7esn`?:`` *0Xa]-(`1esn` :usn2{_usn3:$`1esn` Is Not Null Is Not Null,`2esn`:0X7 Contains 12.0}) Merge `5esn`=(:`4esn`:usn2{_usn3:Null Is Not Null Is Not Null,`4esn`:$1000 Is Not Null})-[?:`3esn`|_usn4 *01..7{@usn5:`4esn`}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]})<-[?:usn2|:`` *7]->(`` :_usn3:@usn5) Union All Match (:#usn8:#usn7{`8esn`:12e12 Ends With 0e0})-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2),#usn8=(`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]})-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->($@usn6)<-[`8esn`?:usn1|#usn7 *01..7{usn1:123456789[$_usn4..]}]-(@usn5 :`2esn`:@usn5$#usn8) Where usn1 Ends With 1.e1 Ends With `4esn`"),
    octest:ct_string("Optional Match usn1=(`` :``:`6esn`)-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]->(_usn3 {`3esn`:$@usn5 Is Not Null Is Not Null})<-[usn1{`1esn`:`7esn` Contains .0 Contains #usn8}]->(_usn3 :`7esn`{#usn7:123.654 =~.e0 =~9e0,_usn3:`1esn`[Null..]}),((@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})) With Distinct $999 Ends With $`` Ends With 07 As @usn5,True Contains .e1 Contains `2esn` As @usn6,Filter(usn1 In 123.654 =~.e0 =~9e0 Where 123.654[$`1esn`])[(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})<-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-({@usn6:`5esn` Ends With $999})..[`2esn` In $``[$#usn8] Where \"d_str\" Starts With _usn4 Starts With $_usn4|$usn1[#usn8..`8esn`][7..`4esn`]]] As _usn4 Skip False In $`2esn` In 1e1 Limit 0x0 Is Not Null Unwind $#usn8[1.e1..] As @usn6"),
    octest:ct_string("With Distinct [.e1 =~\"d_str\" =~'s_str',$`` Is Not Null Is Not Null,$0[@usn6..][.e12..]] Contains Filter(`6esn` In 0x0[9e0..] Where 0xabc Is Not Null Is Not Null) As `7esn` Limit True Contains .e1 Contains `2esn` Return $1000 =~$`8esn` =~$`2esn` As `5esn` Limit @usn5 Ends With 1000 Merge `6esn`=(`7esn` {`8esn`:Count(*) Is Null Is Null,@usn5:.e0 Ends With $`1esn` Ends With 1000}) Union Merge (((`5esn` :`1esn`:@usn6{usn2:#usn7 In #usn7,`1esn`:00['s_str']})-[? *999]-({_usn3:123.654 Is Not Null Is Not Null})-[#usn8? *07{@usn5:0.e0 =~01234567 =~01234567,`1esn`:.e1 =~usn2 =~`7esn`}]->(`` :`5esn`{`5esn`:_usn3[0Xa..],usn1:1.e1 Ends With 0x0 Ends With 1e1}))) On Create Set @usn6 =[0Xa[..$`2esn`][..00]] Starts With (@usn6 )-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(:`7esn`{`2esn`:.e12 Is Not Null Is Not Null,`4esn`:_usn4[1000..``]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`6esn` ),`6esn`+=$12[usn2][12.0] Unwind 123.654 Is Null Is Null As `8esn` With Distinct (`6esn` :`8esn`)-[@usn6{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]}]-(`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]})<-[`8esn`?:usn1|#usn7 *01..7{usn1:123456789[$_usn4..]}]-(usn2 :@usn6) =~$`3esn` =~`8esn`(1000[12.e12][#usn7],#usn8[1e1..]) As `7esn` Order By [usn1 In 123.654 =~.e0 =~9e0 Where $@usn5[$_usn3]|$`2esn` Ends With 1e1] Contains All(#usn8 In 0x0[_usn4..] Where 0xabc[123.654][12]) Descending,Extract(usn1 In 999 Where 1e1 =~$`8esn` =~`1esn`|7 Starts With $@usn6) Is Not Null Is Not Null Desc Where `5esn`[$7..01] Union All With Distinct [0Xa[..1.e1],#usn7[.12][usn2],1000 Starts With 0e0 Starts With 0][`7esn`(Distinct $#usn8[@usn5..$1000])] As `4esn`,0.e0 Ends With #usn8,$12[0.0..] Skip $`8esn`[0.12][12] Where 12.e12 Is Null Is Null"),
    octest:ct_string("Create @usn6=(_usn3 {`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`}),`8esn`=(#usn7 {_usn4:`1esn`[$7][0Xa]})-[``{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null}]->(#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]})-[``:@usn6{`3esn`:.e12[$_usn4..0],usn1:00[$0..usn2][$_usn4..$999]}]-({``:_usn3[9e0..$123456789][0X7..999]}) Unwind ({`7esn`:$@usn5 =~$usn2 =~True,_usn3:00[$0..usn2][$_usn4..$999]})-[`3esn`]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5})<-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]})[{usn1:$`5esn`[.e1][#usn8],_usn3:12e12 Ends With `6esn`}] As `3esn` Union All With  00 Starts With usn1 Starts With Count(*) As #usn7,{`8esn`:.12 Is Not Null,_usn3:Count(*) In $`2esn`}[..[@usn6[$0..Null],$999[010..],$`6esn`[$`6esn`..][0X7..]]],0[..123456789][..False] As `1esn` Skip 01234567[..00][..$`3esn`] Limit #usn8[1e1..] Union All Delete Extract(`3esn` In 999 Where 0.12[123456789..]|00[01234567][Count(*)]) Contains [#usn8 In 0x0[_usn4..] Where 1e1[`3esn`]|$_usn3[0e0..][12.0..]] Contains All(`5esn` In $usn2 Contains $`1esn` Where \"d_str\" Contains $999 Contains `2esn`),00 Starts With usn1 Starts With Count(*),0xabc Is Not Null Create ((:usn1:``{_usn4:1000[12.e12][#usn7]})),(({`1esn`:1e1 Starts With 010})-[`2esn` *123456789..{`8esn`:.12 =~#usn7 =~01}]-(@usn6 {``:12.e12 Contains 's_str' Contains 0.12})<-[{#usn7:$123456789[..$`7esn`][..\"d_str\"]}]-({`3esn`:Null Is Null Is Null}))"),
    octest:ct_string("Remove `8esn`(Distinct).`3esn`,(:`4esn`:usn2$``)-[`5esn`?:_usn4|_usn3{@usn5:7 =~False,_usn3:999 Ends With $`4esn`}]->(usn2 :``:`6esn`)<-[_usn3:`3esn`|_usn4]->(#usn7 :_usn4).`5esn`!,[`5esn` In $usn2 Contains $`1esn` Where $`6esn`[$0]|`4esn`[Count(*)]].`6esn`? Detach Delete .12[...0],(`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`` )[..`2esn`(Distinct `7esn`[_usn4..][Count(*)..],0[1.e1..#usn7])][..(_usn4 {`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})<-[@usn5?:_usn4|_usn3{#usn7:0.12 Is Null Is Null,#usn8:$1000 =~00}]-(`4esn` :_usn3:@usn5)-[@usn5? *01234567..123456789{`2esn`:01234567[`6esn`..]}]-(@usn5 {`4esn`:0.12 Is Null})],Extract(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1|$`2esn` Is Not Null Is Not Null) =~[`7esn`[..01],1e1 =~$`8esn` =~`1esn`,$`6esn`[.e12..$`6esn`][$#usn7...0]] Unwind 0Xa[..1.e1] As `8esn` Union Delete (@usn5 {`1esn`:0xabc[123.654][12]})-[:#usn8|:`6esn`{#usn8:0X7[..`5esn`][..$`7esn`]}]->(`2esn` :@usn6)-[`5esn`?:`7esn`]-({@usn6:'s_str' Ends With $7}) Ends With All(usn1 In 999 Where @usn6 Ends With 0.12 Ends With `3esn`) Union Optional Match `8esn`=((`1esn` :`7esn`{`6esn`:1e1 In 12.e12})<-[:#usn7|`5esn`*{`8esn`:01[$0],``:0xabc Is Not Null Is Not Null}]-(_usn3 :`7esn`{#usn7:123.654 =~.e0 =~9e0,_usn3:`1esn`[Null..]})<-[`5esn` *0Xa]-(:usn1:``)),((`6esn` :`2esn`:@usn5)) Where `` In usn1 In 01234567"),
    octest:ct_string("Unwind $1000 =~$`8esn` =~$`2esn` As `` Union Unwind $`2esn` Ends With 1e1 As `5esn`"),
    octest:ct_string("Unwind usn1[9e1..] As #usn8 Unwind Filter(`3esn` In False In $`2esn` In 1e1 Where 00[$@usn5][0X7])[[@usn5 Is Null,\"d_str\" Ends With $1000 Ends With usn2,$usn1 Is Not Null Is Not Null]..] As `6esn` Union All Delete 1e1[`3esn`],$usn2 In 12 Union All Remove (:`2esn`:@usn5$usn1)<-[:`1esn`|@usn6*..]-(`3esn` :``:`6esn`{`5esn`:$999[9e0..010][999..010]}).usn2?,All(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 7 In 1e1).usn1!,All(`7esn` In $`8esn`[0.12][12] Where $123456789 =~usn1 =~0xabc).usn2 Merge `7esn`=(usn1 :_usn4)<-[usn1]->(:`3esn`{`7esn`:12.e12[.12..$_usn3][0e0..9e0],`7esn`:0X7[..True][..01234567]})<-[_usn3?:`` *..010{usn2:`7esn`[_usn4..][Count(*)..]}]->(`8esn` :``:`6esn`{#usn7:$`3esn` Is Null}) Remove None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where False In $`2esn` In 1e1).`2esn`?,[`3esn` In 999 Where usn1[$`1esn`..]].usn2?"),
    octest:ct_string("Create ((#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]})) Optional Match ((({`7esn`:Count(*)[..`5esn`],`2esn`:.e12[..$_usn4][..#usn7]})<-[:@usn6]->(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null})<-[#usn7:``{`4esn`:0.e0 Is Not Null Is Not Null}]-(:`3esn`{usn2:$`3esn`[9e0..0.0][_usn4..123456789]}))),@usn6=(`8esn` :`8esn`{`3esn`:Null Is Null Is Null})-[`4esn`?:#usn8|:`6esn` *999{`8esn`:010[`1esn`..`4esn`]}]->(`3esn` :`3esn`{_usn4:$123456789 Is Not Null,_usn4:#usn8 =~#usn7 =~0x0}) Union All With Distinct Count(*)[..12][..$999] As _usn3,$usn2['s_str'..usn1],12.e12 Contains 0X7 Contains Count(*) Order By `2esn`[0.e0..$999] Ascending,``(Distinct `7esn`[`8esn`][#usn7]) Contains (:@usn6{usn2:12.e12[.12..$_usn3][0e0..9e0]})-[`7esn`?:`2esn`|:`7esn`]-(#usn8 :`7esn`) Contains Any(`3esn` In False In $`2esn` In 1e1 Where True Contains .e1 Contains `2esn`) Descending,@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`] Desc Skip 9e0[$@usn6] Remove {`8esn`:'s_str'[$#usn8]}.`2esn`!,{_usn4:\"d_str\" Contains $999 Contains `2esn`}.#usn7? Union Delete .e12 Is Null Is Null,$_usn4 =~0X7,0x0[_usn4..] Delete 0.0 =~0 =~``,`7esn`[7..$123456789][$0..$7] With  Any(`7esn` In $`8esn`[0.12][12] Where usn1 In 010) As `6esn` Order By 0 Asc,Filter(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1)[Extract(usn1 In 123.654 =~.e0 =~9e0 Where _usn3[0Xa..])..][{`4esn`:$123456789 =~usn1 =~0xabc,_usn4:True}..] Asc Where #usn8[True..#usn7][01..@usn5]"),
    octest:ct_string("Merge `5esn`=(((:usn2{_usn3:``[0X7..][$@usn6..]})<-[_usn3?:#usn8|:`6esn` *0xabc..{@usn6:123.654[.e12..\"d_str\"],`8esn`:$usn2 Starts With $`7esn` Starts With _usn4}]->(#usn7 {`1esn`:$`4esn`[.e1..$usn1],``:0x0 =~`5esn` =~$`8esn`})<-[@usn5?:usn2|:``*..]->(`7esn` {#usn7:1e1[`3esn`]}))) On Create Set `1esn` =$999[010..],`3esn`+=\"d_str\" =~_usn3 =~0.0,`8esn`+=#usn7 In 0.12 In Null Union All With  *,`5esn` In 12.e12 In 1000 As _usn4 Skip $0[07..] Limit Any(`6esn` In 1000[12.e12][#usn7] Where True[$usn1..12][``..\"d_str\"])[..[_usn4 Starts With `6esn` Starts With $`8esn`,``[0X7..][$@usn6..],$usn2 Starts With 9e1 Starts With `7esn`]] Union Return Distinct *,123.654[.e12..\"d_str\"] As _usn4,01234567[All(`7esn` In $`8esn`[0.12][12] Where @usn5[..$999][..$0])..] Limit @usn6 In [00[0X7..9e12]] In Single(`3esn` In False In $`2esn` In 1e1 Where 's_str' Ends With $7) Remove #usn8(Distinct @usn6[$0..Null],`4esn`).#usn7,[`6esn` In 1000[12.e12][#usn7] Where 0xabc[123.654][12]|usn1[0X7..]].`8esn`,All(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $`` Starts With 0x0)._usn4 Optional Match (({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`4esn` :``:`6esn`)-[@usn5{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(`8esn` :`1esn`:@usn6)) Where 12.0[..0X7]"),
    octest:ct_string("Match ((usn2 :@usn6{@usn5:#usn8[True..#usn7][01..@usn5]})<-[`2esn`?:`6esn` *0xabc..]-({@usn6:'s_str' Ends With $7})<-[:@usn6]->(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null})) Union Remove All(_usn4 In 12.e12 Is Null Is Null Where 0x0[$`2esn`..'s_str'][$@usn5..1.e1]).``? Delete 1e1[\"d_str\"..],$@usn5[..`4esn`] Union All Unwind @usn6[..$usn1][..010] As `4esn`"),
    octest:ct_string("Optional Match ((`` :usn2)<-[_usn4?:`3esn`|_usn4 *7]-(`5esn` :usn1:``))"),
    octest:ct_string("With Distinct *,$0[00..] As `5esn` Skip 7[$`5esn`..`4esn`] Where .e12 =~\"d_str\" =~@usn5 Merge (usn2 :`1esn`:@usn6)-[:@usn5|:@usn6{#usn7:0.12 Is Null Is Null,@usn6:12e12 Ends With $_usn4 Ends With $`2esn`}]->(:`7esn`{usn1:1000 Starts With 0x0,_usn4:$usn2 In 12}) On Match Set `3esn`+=$`2esn` Is Not Null Is Not Null,{usn2:123.654 Is Not Null Is Not Null}._usn4! =`2esn`[0.e0..$999] On Create Set usn2+=\"d_str\"[0X7..``][@usn5.._usn4],`2esn`:_usn4 Union Remove [`3esn` In @usn6[..\"d_str\"][..01] Where `1esn`[$7][0Xa]|$@usn5[$_usn3..Null]]._usn3!,Single(usn1 In 999 Where `5esn` Ends With $999)._usn4,_usn4:#usn8:#usn7 Unwind `5esn` Ends With 0x0 As `3esn`"),
    octest:ct_string("Remove 0X0123456789ABCDEF.usn2!,Filter(`3esn` In False In $`2esn` In 1e1 Where $`4esn` =~07)._usn3!,(:`6esn`:`3esn`{_usn3:00['s_str'],`5esn`:$`` Is Not Null Is Not Null})<-[`7esn`?]->(:`2esn`:@usn5{usn2:$`3esn` Ends With @usn6 Ends With 123.654})-[usn2?:`8esn`|@usn6{`3esn`:0.0 Ends With $usn1 Ends With $999,`5esn`:1.e1 Is Null Is Null}]-(`2esn` :`5esn`{@usn5:'s_str' Contains 999,`6esn`:1000[12.e12][#usn7]})._usn4! Optional Match (`` :#usn8:#usn7{@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]}) Union All Create `3esn`=(`7esn` {`2esn`:1.e1[#usn7][1.e1]})<-[`2esn`?:@usn6]->(`3esn` :`7esn`$`6esn`)<-[`6esn`?:`1esn`|@usn6 *0xabc..]-(:`7esn`{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc}),`7esn`=((:`1esn`:@usn6{`1esn`:12.0[9e12]['s_str'],`3esn`:$123456789 Is Not Null}))"),
    octest:ct_string("Unwind [.0[@usn6..],`2esn`[`3esn`..],Count(*) Contains 12e12 Contains 0xabc] Is Not Null As `6esn` Merge `5esn`=((@usn5 {`5esn`:0e0[...e1]})<-[`8esn` *0..$12]-(:`2esn`:@usn5{#usn8:0.e0 Contains @usn5 Contains 0X7,`5esn`:0x0[9e0..]})<-[:`3esn`|_usn4]->(_usn3 {_usn4:usn2[9e0..0.e0][@usn5..`4esn`],_usn4:.e0['s_str'..][$`8esn`..]})) On Match Set #usn7 =`2esn`(_usn3[..usn2])[Extract(usn1 In 999 Where 010 In $@usn5 In `5esn`)],`7esn`+=0.0[Null..][.12..],`7esn`+=0.0[Null..][.12..] Union Match #usn8=((usn1 {@usn5:12e12 Ends With `6esn`,_usn4:\"d_str\" Starts With _usn4 Starts With $_usn4})-[`1esn`?]->(:#usn7{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})) Where $usn2 Ends With 0 Ends With 12.0 Optional Match #usn8=(((usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})<-[`4esn`:`8esn`|@usn6 *..0X0123456789ABCDEF]-(`6esn` $_usn3)<-[?:`6esn`]-(usn1 :`8esn`{`5esn`:$usn1 Starts With Null Starts With $``,`5esn`:0 Contains $@usn5}))) Where `7esn` =~12.e12 =~0e0 Create (((#usn7 {#usn7:999 Contains $`7esn` Contains usn2})-[@usn6?:`` *0Xa]-(@usn6 :@usn5{`8esn`:$@usn6 Contains 0e0})-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2)))"),
    octest:ct_string("Return Distinct Extract(`2esn` In $``[$#usn8] Where `1esn`[Null..])[[12.0[`3esn`][_usn3]]] Skip 9e0 Starts With 0e0 Starts With $`5esn` Return Distinct 0xabc Is Not Null As `6esn` Limit [$999[9e0..010][999..010],12e12 Ends With $_usn4 Ends With $`2esn`][None(_usn4 In 12.e12 Is Null Is Null Where $`4esn` In 0x0)..] Union Remove None(`5esn` In 1e1 =~$`8esn` =~`1esn` Where #usn7[@usn6..]).`6esn`!,[`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0 Contains $@usn5|`4esn`[$#usn7][$#usn7]].#usn8 Return [0Xa[..1.e1],#usn7[.12][usn2],1000 Starts With 0e0 Starts With 0][`7esn`(Distinct $#usn8[@usn5..$1000])] As `4esn`,0.e0 Ends With #usn8,$12[0.0..] Skip $`8esn`[0.12][12] With  's_str'[..Null][..$`5esn`] As usn2 Order By Count(*)[12..123.654][$`1esn`..$0] Desc,True[07] Descending Skip @usn6(Distinct 0xabc Contains 0)[{_usn4:$`2esn` Ends With 1e1}..][All(_usn4 In 12.e12 Is Null Is Null Where 0e0 =~False =~.12)..] Limit (`5esn` {_usn3:1.e1 Is Null Is Null})<-[_usn3?:#usn7|`5esn` *..0x0]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})<-[?:@usn5|:@usn6]-(`7esn` {@usn6:.e0[123456789..][$`2esn`..],``:$0[`5esn`][9e12]})[`8esn`()..][[`7esn` In $`8esn`[0.12][12] Where 9e0[123456789..0][12.0..@usn6]]..] Union All Create (((@usn6 {@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})-[`5esn`:@usn5|:@usn6*{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]->(#usn8 :`2esn`:@usn5)<-[`5esn`:_usn4|_usn3 *0X7..0x0]-(:#usn7{_usn4:\"d_str\"[7..$999]}))),`1esn`=(usn1 :usn1:``{@usn6:_usn3[0Xa..]})-[{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}) With  ``[{`6esn`:12[`5esn`..$`3esn`][0.12..usn2]}..],[.12 Is Null,12 Ends With 0 Ends With Null,0x0 =~@usn5 =~01][{usn2:$`6esn`[.e12]}],$_usn3 Is Not Null Limit @usn5 Ends With 1000 Create #usn8=(((_usn4 :@usn5)-[? *..0X0123456789ABCDEF{#usn8:0X7[..`5esn`][..$`7esn`]}]-(#usn7 {@usn5:$`5esn` Contains $usn2})-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2)))"),
    octest:ct_string("Merge ``=(((_usn3 :`1esn`:@usn6)<-[:@usn5|:@usn6 *01234567..123456789]->(`1esn` :`7esn`{`6esn`:1e1 In 12.e12})<-[``?:#usn8|:`6esn`{usn1:$#usn7[..$999][..9e1]}]->(`1esn` :`4esn`:usn2))) On Match Set #usn8+=0.e0 In `2esn`,`5esn`+=False[$_usn4..][`8esn`..],@usn6+=(usn1 {@usn5:12e12 Ends With `6esn`,_usn4:\"d_str\" Starts With _usn4 Starts With $_usn4})<-[?:#usn7|`5esn`{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}]->(@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})<-[?:`1esn`|@usn6]->(`6esn` :`2esn`:@usn5) Is Null On Match Set {`8esn`:$`6esn`[$`1esn`..]}._usn3? =False Contains Null Contains 1000,@usn5 =@usn5 =~False =~`8esn` Return [01[..0X7],0 =~#usn8,$``[$_usn4][$`3esn`]][0e0..Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 0X0123456789ABCDEF[$_usn3][$_usn4])][None(`2esn` In $``[$#usn8] Where 0x0[$7..][`7esn`..])..[`5esn` Ends With 0x0,.0 =~$@usn5 =~1.e1]],$@usn6[9e1..$`2esn`] As `8esn` Order By $`1esn` =~`1esn` =~0X0123456789ABCDEF Asc Skip 0x0 Is Not Null Is Not Null Limit $_usn3[0e0..][12.0..] Create _usn3=((`8esn` :``:`6esn`)<-[#usn7? *123456789..{`2esn`:999 Contains $`7esn` Contains usn2}]-({@usn6:$@usn5 =~$usn2 =~True,`4esn`:$#usn8 =~7 =~.12})) Union All Remove `5esn`:`5esn`,[1000[12.e12][#usn7],0e0 Is Null].`2esn`? Unwind {`6esn`:`` In 123.654 In 0.0} Is Not Null Is Not Null As `4esn`"),
    octest:ct_string("Merge (({@usn6:$#usn8[0e0..][07..]})<-[? *12{`1esn`:.e0 Ends With $`1esn` Ends With 1000}]-(@usn5 :usn1:``{usn2:9e0[0..1e1]})) On Match Set Extract(#usn8 In 0x0[_usn4..] Where `8esn`[0x0..]|.e12 Contains `7esn` Contains 999).#usn7 =$#usn8 Contains `5esn` Contains $#usn8 On Match Set `` =1000 Starts With ``,`1esn`(Distinct $`5esn`[`4esn`..$`2esn`],_usn3[..usn2]).@usn6 =$@usn6 Contains 0e0,Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $@usn5 =~$usn2 =~True).usn2? =Filter(`6esn` In 1000[12.e12][#usn7] Where $usn2 Contains $`1esn`) Remove Extract(_usn4 In 12.e12 Is Null Is Null Where 00[0X7..9e12]).usn1!,{#usn8:usn1 Is Null,`8esn`:7 In 1e1}._usn4,[0,`7esn`[_usn4..][Count(*)..]]._usn4! Union Create ((`4esn` {_usn3:7 Contains 1000 Contains $usn1})-[#usn8:@usn5|:@usn6 *0..{`6esn`:`6esn` In $``}]->(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[? *0xabc..]->(`6esn` {`5esn`:0x0 =~@usn5 =~01})) Unwind $`1esn` In $#usn7 In 0X7 As `` Create ((`4esn` {_usn3:7 Contains 1000 Contains $usn1})-[#usn8:@usn5|:@usn6 *0..{`6esn`:`6esn` In $``}]->(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[? *0xabc..]->(`6esn` {`5esn`:0x0 =~@usn5 =~01})) Union Match @usn5=(((:`1esn`:@usn6)<-[@usn5?:_usn4|_usn3 *1000..01234567]->({@usn6:$#usn8[0e0..][07..]})<-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]})))"),
    octest:ct_string("Return Distinct *,(:`4esn`:usn2{_usn3:Null Is Not Null Is Not Null,`4esn`:$1000 Is Not Null})<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]->(:@usn5{usn1:12.e12 Is Null Is Null,``:Null Is Not Null Is Not Null}) Ends With {@usn6:_usn3[0Xa..]} Order By True[07] Descending With  Extract(`3esn` In 999 Where .e12 Is Null Is Null|$`7esn`[usn2]) Is Not Null As @usn5 Order By usn1 =~12 =~$0 Asc,01 In `4esn` In 1.e1 Descending Delete #usn7[999..$999],\"d_str\" Starts With 0X7 Starts With 1e1"),
    octest:ct_string("Merge _usn3=(#usn8 :`7esn`)-[:#usn8|:`6esn`{#usn8:0X7[..`5esn`][..$`7esn`]}]->(`2esn` :@usn6) On Create Set ``+=$123456789,[`6esn` In .e0['s_str'..][$`8esn`..] Where `6esn` In $``|999 Contains $`7esn` Contains usn2].`1esn`? =@usn6[..$usn1][..010],Extract(`3esn` In False In $`2esn` In 1e1 Where 01 Starts With $`5esn` Starts With 01234567).`8esn`! =None(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1) Ends With All(usn1 In 0xabc Is Not Null Is Not Null Where $@usn6 Is Null) Ends With Any(`6esn` In 1000[12.e12][#usn7] Where 01 Starts With $`5esn` Starts With 01234567) Create @usn6=((:`8esn`{`8esn`:$`7esn` =~$usn1 =~00,@usn6:`6esn` In $``})-[ *..010]-({@usn6:`5esn`[0e0..],_usn4:$#usn8[0xabc..usn2]})),`6esn`=({_usn4:`7esn`[_usn4..][Count(*)..],`1esn`:01234567 In \"d_str\"})-[? *..0x0{`1esn`:`4esn` Starts With `8esn`}]->(:_usn3:@usn5{_usn3:$#usn8 In True In #usn7,usn2:$@usn5[$_usn3..Null]}) Create (((`2esn` {_usn3:0[1e1..00]})<-[{#usn8:999}]->(:usn1:``{#usn7:#usn8[$`7esn`..12.0],`1esn`:9e12 In 123.654 In True})-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-(:@usn5{#usn8:usn1 Is Null,`8esn`:7 In 1e1}))),@usn6=(_usn3 {`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`}) Union All With  $0 Is Not Null Is Not Null As `8esn`,`6esn` Is Null,0.e0[.e12] As @usn6 Order By 0x0[$7] Desc,#usn7 In 0.12 In Null Descending,.e0 Is Not Null Descending Unwind $12[#usn8..$@usn5][9e0..usn1] As `` Union All Match ((:#usn8:#usn7{`8esn`:0Xa[Count(*)][0xabc]})<-[?:`7esn`{`1esn`:0.12 Is Null,@usn6:9e12[$123456789..$usn2]}]->({#usn8:$`` Is Not Null Is Not Null,`8esn`:$usn2 Starts With 9e1 Starts With `7esn`})<-[*{`6esn`:`6esn` In $``}]->(`7esn` :`8esn`{usn2:`5esn` =~``,`7esn`:`7esn` Is Not Null Is Not Null})),`3esn`=((`7esn` :``:`6esn`)<-[usn1]->(usn1 :usn2{#usn8:0.e0 Contains $1000 Contains 7})<-[`8esn`? *..0X0123456789ABCDEF{`2esn`:$``[$_usn4][$`3esn`]}]-(:`6esn`:`3esn`{`5esn`:$7[$12],`6esn`:#usn8 Is Not Null}))"),
    octest:ct_string("Unwind 0[..07][..False] As `2esn` Merge `4esn`=((`2esn` )-[:@usn5|:@usn6 *999{`5esn`:0x0 =~@usn5 =~01}]->(:``:`6esn`{`7esn`:12e12 Ends With 0e0,`8esn`:$_usn4[False..@usn6][`4esn`..$1000]})-[`3esn`? *12{@usn5:$#usn8[..123456789][..`2esn`],#usn7:12.0[..0X7]}]-(:`7esn`{@usn6:`2esn`[``..]})) On Create Set Extract(`3esn` In False In $`2esn` In 1e1 Where 01 Starts With $`5esn` Starts With 01234567).`8esn`! =None(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1) Ends With All(usn1 In 0xabc Is Not Null Is Not Null Where $@usn6 Is Null) Ends With Any(`6esn` In 1000[12.e12][#usn7] Where 01 Starts With $`5esn` Starts With 01234567),[`5esn` In $usn2 Contains $`1esn` Where False[$12]|.e12[``][$1000]].usn1! =_usn3[0Xa..],None(`3esn` In False In $`2esn` In 1e1 Where #usn7[.12][usn2]).@usn5 =Filter(_usn4 In 12.e12 Is Null Is Null Where 0e0 Is Not Null) =~All(`2esn` In $``[$#usn8] Where 12e12 Ends With $_usn4 Ends With $`2esn`) Union Remove Extract(#usn8 In 0x0[_usn4..] Where 00[01234567][Count(*)]|7 Ends With `3esn` Ends With $`2esn`).`4esn`?,[`3esn` In @usn6[..\"d_str\"][..01] Where .0[01234567]|.e12 Is Not Null Is Not Null].usn1!,[0,`4esn` Is Not Null].`2esn`? Remove (:@usn6{`8esn`:.0[..False]})-[`2esn`? *7]->(`` :``:`6esn`{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]})<-[:`1esn`|@usn6*..]-(`3esn` :``:`6esn`{`5esn`:$999[9e0..010][999..010]}).``,{``:@usn6[.0]}.`7esn`! Merge `1esn`=(({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})) Union Delete #usn8(usn1 Ends With .0 Ends With `4esn`,`7esn`[`8esn`][#usn7]) Is Null Merge (usn2 :`7esn`) On Match Set usn2 ={`8esn`:12 Is Null Is Null}[[`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 1000 Starts With 0e0 Starts With 0|$#usn8 Ends With _usn4 Ends With usn2]..][[usn1 In 0xabc Is Not Null Is Not Null Where $@usn6 Is Null|$`6esn`[$`6esn`..][0X7..]]..],[`2esn` In $``[$#usn8] Where 1000 Starts With 0x0|00 Starts With usn1 Starts With Count(*)].usn1 =#usn7[False..][123.654..]"),
    octest:ct_string("Return Distinct {`7esn`:01234567[9e0][.0],`2esn`:999 Ends With $`4esn`}[`4esn`(.12 In 01234567 In _usn4,12.0[9e12]['s_str'])..] Union Optional Match #usn7=(`7esn` :`7esn`)-[{`5esn`:0.e0 =~01234567 =~01234567}]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]}) Match `3esn`=(($_usn3)) Where 1000 Is Not Null"),
    octest:ct_string("Return [usn1[..$123456789][..`1esn`],0e0 Is Not Null][Extract(#usn8 In 0x0[_usn4..] Where 0X0123456789ABCDEF In _usn3|$`5esn`[0][.12])][[`6esn` In 0x0[9e0..] Where #usn7[@usn6..]]] As #usn8,usn2 As @usn5 Skip [_usn4 In 12.e12 Is Null Is Null|12.e12 Is Not Null][[9e1[$`3esn`][$`1esn`]]..`7esn`($123456789 =~usn1 =~0xabc,`1esn`[Null..])][(:usn2{usn1:_usn4[.._usn4],@usn6:@usn5 In .e0 In \"d_str\"})<-[? *..0X0123456789ABCDEF{usn2:123456789 Ends With 9e1 Ends With ``,`3esn`:9e0[123456789..0][12.0..@usn6]}]-({usn1:123456789[$_usn4..]})<-[?{``:$`6esn`[.e12]}]-(_usn4 :`2esn`:@usn5)..All(`3esn` In @usn6[..\"d_str\"][..01] Where 1.e1[$`7esn`])] Limit 1e1 Starts With 010 Unwind @usn6[$0..Null] As usn1 Return $`5esn`['s_str'..],[`3esn` In 999 Where 07 Ends With $_usn4 Ends With 0.e0|$`7esn`[`2esn`]] Starts With Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0) As `8esn`,999[..\"d_str\"] Skip [999 Is Not Null,\"d_str\" Starts With _usn4 Starts With $_usn4,@usn5[01234567..]] Contains Any(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where #usn7 In #usn7) Limit (`1esn` :`7esn`)-[`4esn`?:usn1|#usn7{`1esn`:123456789 Ends With 9e1 Ends With ``,@usn5:0xabc Contains 0}]->(:`7esn`{@usn6:`2esn`[``..]})[..{``:`` In 123.654 In 0.0}] Union All With  .e0 Is Not Null,01 In $7 In $1000 As #usn7,$0 Starts With `5esn` Starts With 0 Skip .e1[`2esn`..$`8esn`] Where True Return $123456789 =~0e0 As `4esn`,1.e1 =~01234567 Order By (:``:`6esn`{`8esn`:123.654[.e12..\"d_str\"]})<-[_usn3:`3esn`|_usn4]->(_usn3 :`4esn`:usn2) Is Not Null Is Not Null Desc,{_usn4:\"d_str\" Ends With $`3esn`,``:#usn8 =~#usn7 =~0x0}[Single(usn1 In 0xabc Is Not Null Is Not Null Where `7esn`[..01])..{`2esn`:.0[@usn6..]}][[1000[12.e12][#usn7],`` Is Not Null Is Not Null]..None(#usn8 In 0x0[_usn4..] Where `8esn` Ends With $`1esn`)] Descending Merge ``=((`4esn` :``:`6esn`{#usn7:`2esn`[`3esn`..],usn2:$usn2 Starts With $`7esn` Starts With _usn4})<-[`8esn` *0..$12]-(:usn2{usn1:_usn4[.._usn4],@usn6:@usn5 In .e0 In \"d_str\"})-[@usn5:@usn6]-(:`4esn`:usn2{_usn4:`1esn`[$7][0Xa]})) On Match Set `1esn`+=Extract(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0|0[_usn3][.12]) Starts With (#usn8 :`8esn`)<-[`2esn`?:`3esn`|_usn4]-(#usn7 :`7esn`{`3esn`:$#usn8[..123456789][..`2esn`],#usn8:0.e0 Ends With #usn8})-[:`5esn`|:`1esn`]-(@usn5 :`5esn`),None(`3esn` In False In $`2esn` In 1e1 Where 01 Starts With $`5esn` Starts With 01234567)._usn3? =[`6esn` In 1000[12.e12][#usn7] Where 0X0123456789ABCDEF Is Not Null] Is Null"),
    octest:ct_string("With Distinct 9e0[.e0] As `8esn`,{_usn3:`1esn`[..$#usn7]} Contains Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1) Contains [$1000[00..],$`6esn`[.e12..$`6esn`][$#usn7...0],0Xa[..1.e1]],0x0 In 0X0123456789ABCDEF As usn1 Order By [`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where .0 =~$@usn5 =~1.e1] =~{@usn6:0 Is Null Is Null} =~count(Distinct Null[9e1][$`6esn`],`4esn` Starts With `8esn`) Desc,{`7esn`:usn2 Starts With 00}[(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})<-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-({@usn6:`5esn` Ends With $999})..][(:`1esn`:@usn6{_usn3:$usn2 =~`6esn` =~`1esn`,`6esn`:0[1e1..00]})-[{_usn4:$`8esn` Contains .0 Contains 0.12}]->(:usn1:``{_usn4:1000[12.e12][#usn7]})-[@usn6 *00]->(`4esn` {_usn4:$`2esn`[$``..12e12]})..] Ascending,$#usn8[.e1][`2esn`] Asc Limit 's_str'[$`6esn`..][$0..] Where $999 Is Not Null"),
    octest:ct_string("Detach Delete #usn7 =~$`8esn`,0X7 Contains 12e12 Delete (`6esn` :`8esn`{usn2:#usn7 In #usn7,`1esn`:00['s_str']})<-[``?:@usn6]-(:`2esn`:@usn5{usn2:$`3esn` Ends With @usn6 Ends With 123.654})<-[@usn5?:@usn6 *..010]->(#usn7 :#usn7{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2}) Is Null,All(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $123456789 Is Not Null) Is Null Is Null"),
    octest:ct_string("Unwind 0xabc[9e0..][0X0123456789ABCDEF..] As @usn5 With  [\"d_str\" Ends With $1000 Ends With usn2] Is Null Is Null Order By usn1 =~12 =~$0 Desc Union Return Distinct [`3esn` In False In $`2esn` In 1e1 Where `` Contains 010 Contains $1000|1000[12.e12][#usn7]] In [`3esn` In 999 Where `7esn` Is Null|$#usn8[0e0..][07..]] In Single(`5esn` In 1e1 =~$`8esn` =~`1esn` Where `8esn` Starts With $12 Starts With $1000),@usn6 Is Not Null As `6esn` Skip False Ends With `7esn` Ends With $`3esn` Limit $0 Ends With .12"),
    octest:ct_string("Delete [usn1[..$123456789][..`1esn`],0e0 Is Not Null][Extract(#usn8 In 0x0[_usn4..] Where 0X0123456789ABCDEF In _usn3|$`5esn`[0][.12])][[`6esn` In 0x0[9e0..] Where #usn7[@usn6..]]],Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where `1esn`[..$#usn7])[Any(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where .0 =~$@usn5 =~1.e1)],$0 Ends With .12 Return 0xabc Is Not Null As `6esn` Limit [$999[9e0..010][999..010],12e12 Ends With $_usn4 Ends With $`2esn`][None(_usn4 In 12.e12 Is Null Is Null Where $`4esn` In 0x0)..] With Distinct $999[07],$1000[999] As @usn6 Skip 0X7[..$0][..0.12] Where 0.e0 Contains $1000 Contains 7 Union Merge ``=(usn2 :@usn6{@usn5:#usn8[True..#usn7][01..@usn5]})<-[_usn4 *00]-(#usn7 :`7esn`) On Match Set usn2+=\"d_str\"[0X7..``][@usn5.._usn4],`2esn`:_usn4"),
    octest:ct_string("Unwind [usn1 In 123.654 =~.e0 =~9e0 Where $@usn5[$_usn3]|$`2esn` Ends With 1e1] Contains All(#usn8 In 0x0[_usn4..] Where 0xabc[123.654][12]) As `2esn` Unwind 7 =~$1000 =~$`5esn` As `6esn` Union All Return Distinct *,$usn1[usn1..$`8esn`][12e12..$``] As usn1,0x0[$7..][`7esn`..] As _usn4 Order By $`1esn` =~`1esn` =~0X0123456789ABCDEF Asc Return Distinct *,$0 Ends With .12 Order By .e0[123456789..][$`2esn`..] Asc,0.e0[$usn2..$@usn5] Desc,`7esn`[01..1.e1] Descending Limit Single(`3esn` In @usn6[..\"d_str\"][..01] Where 12[`5esn`..$`3esn`][0.12..usn2])[[`6esn` In 0x0[9e0..] Where $#usn8[0e0..][07..]|0 Is Not Null Is Not Null]..][(`6esn` :usn1:``)<-[``?:usn1|#usn7]-(@usn5 :`2esn`:@usn5{@usn6:123456789 =~#usn8 =~$0})..] Merge #usn8=(:@usn5{_usn4:$`5esn`[0][.12]})<-[@usn5?{usn1:7 Ends With `3esn` Ends With $`2esn`}]-(_usn4 )"),
    octest:ct_string("With Distinct *,12 Ends With 0 Ends With Null,Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null) =~[12 Is Null Is Null,9e0[$@usn6]] Order By $123456789 In `8esn` In 0X7 Descending,123456789[$_usn4..] Asc Skip `` Is Not Null Is Not Null Union Unwind usn1[..$123456789][..`1esn`] As @usn6 Create ({_usn3:.12[usn1],_usn4:$usn1 Starts With Null Starts With $``})-[`3esn`]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5})"),
    octest:ct_string("Delete {``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]} Ends With {`2esn`:.e12 Is Null Is Null,usn1:.e12 =~@usn5} Ends With Extract(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Is Not Null Is Not Null),(`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`` )[..`2esn`(Distinct `7esn`[_usn4..][Count(*)..],0[1.e1..#usn7])][..(_usn4 {`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})<-[@usn5?:_usn4|_usn3{#usn7:0.12 Is Null Is Null,#usn8:$1000 =~00}]-(`4esn` :_usn3:@usn5)-[@usn5? *01234567..123456789{`2esn`:01234567[`6esn`..]}]-(@usn5 {`4esn`:0.12 Is Null})] Unwind $`8esn` Ends With #usn8 As _usn3 Create ``=((:_usn3:@usn5)-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :_usn3:@usn5)),usn2=(((`1esn` {usn2:@usn5[$`1esn`..][$7..],@usn6:$#usn8[0xabc..usn2]})-[:@usn5|:@usn6]->(`5esn` {usn2:`6esn` In $``})-[? *0xabc..]->(`6esn` {`5esn`:0x0 =~@usn5 =~01}))) Union All Unwind 12 Starts With usn2 As #usn7 Remove `4esn`(`` In False In True,$_usn3 Is Not Null).`1esn`,(`5esn` {usn1:1000 Ends With $`5esn`})<-[ *07{usn1:010 =~0e0 =~9e1}]->(`7esn` {`2esn`:9e0[$@usn6]}).`8esn` Match ((({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})-[ *0..{`1esn`:0xabc Contains 0}]->(:_usn3:@usn5)<-[_usn3?:#usn7|`5esn` *..0x0]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})))"),
    octest:ct_string("Remove `8esn`:`3esn`,`7esn`(\"d_str\" Is Not Null,$123456789[`4esn`..]).usn1 Detach Delete Any(`2esn` In $``[$#usn8] Where $`2esn`[.._usn3])[[`6esn` In .e0['s_str'..][$`8esn`..] Where $@usn5 =~$usn2 =~True|.e0[$`1esn`..][_usn4..]]..`8esn`],All(`6esn` In .e0['s_str'..][$`8esn`..] Where .e12 Is Null Is Null)[@usn5(Distinct)..][[0 Contains $@usn5,False Contains $`1esn` Contains @usn6]..] Union Unwind $#usn7[$`3esn`..$999] As usn1 Unwind `4esn` Starts With `8esn` As #usn8"),
    octest:ct_string("Delete \"d_str\" =~Count(*) =~$usn2,$@usn6 Is Null Is Null,Any(`2esn` In $``[$#usn8] Where $`4esn`[$1000..$`4esn`][0x0..$_usn3])[All(#usn8 In 0x0[_usn4..] Where $`` Starts With 0x0)..None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1e1 Contains 0Xa)][[$`` Starts With 0x0,.e1 =~\"d_str\" =~'s_str']..Any(usn1 In 0xabc Is Not Null Is Not Null Where usn1[$`1esn`..])]"),
    octest:ct_string("Detach Delete 9e0 Is Null Is Null,`6esn`[`7esn`..$_usn3][9e0..#usn8] Unwind _usn3 =~$12 As `` Return $123456789 Is Null Is Null,@usn5[..$999][..$0],$`4esn`[0e0...0] As `2esn` Order By [`3esn` In @usn6[..\"d_str\"][..01] Where `1esn`[$7][0Xa]|.e0 Contains 999] In (_usn4 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8) Descending,$#usn8[1.e1] Ascending Skip (`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`` )[..`2esn`(Distinct `7esn`[_usn4..][Count(*)..],0[1.e1..#usn7])][..(_usn4 {`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})<-[@usn5?:_usn4|_usn3{#usn7:0.12 Is Null Is Null,#usn8:$1000 =~00}]-(`4esn` :_usn3:@usn5)-[@usn5? *01234567..123456789{`2esn`:01234567[`6esn`..]}]-(@usn5 {`4esn`:0.12 Is Null})]"),
    octest:ct_string("Create (:#usn7{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})<-[`1esn`?:`3esn`|_usn4 *01234567..123456789]->(#usn7 {#usn7:999 Contains $`7esn` Contains usn2})-[?:``]->(@usn6 :``:`6esn`{#usn7:9e1 Contains _usn3}) Unwind Any(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where $0 Ends With .12) Is Null As @usn6 Unwind 00 Contains $7 Contains $`8esn` As `5esn` Union Detach Delete 0xabc =~01,$`3esn` Starts With 9e12 Starts With `8esn`,$123456789[..$`7esn`][..\"d_str\"] Remove None(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $usn2[12.0..][`8esn`..]).`4esn`,Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where `` Contains $_usn3 Contains 0e0|$@usn5 Is Not Null Is Not Null)._usn4"),
    octest:ct_string("Optional Match usn2=(((`` :usn1:``{#usn7:$123456789[`4esn`..]})<-[@usn5?{`7esn`:`6esn` In $``}]->(usn1 {_usn3:#usn7 Ends With 0.12})<-[? *123456789..{`7esn`:.e12 =~@usn5,`3esn`:`5esn`[0e0..]}]-(`4esn` ))),@usn5=(`` :usn1:``{@usn6:010[`1esn`..`4esn`]}) Merge `1esn`=(({``:1e1 Ends With 's_str' Ends With $@usn6,`5esn`:$`5esn` Is Not Null})<-[?:usn2|:``]->(:`6esn`:`3esn`{_usn3:00['s_str'],`5esn`:$`` Is Not Null Is Not Null})<-[? *..0x0{`1esn`:`4esn` Starts With `8esn`}]->(`4esn` {`5esn`:$0[`5esn`][9e12],``:#usn7[False..][123.654..]})) On Match Set `3esn` =usn1[$`1esn`..] On Match Set usn2 =.e12[$_usn4..0],`2esn` =@usn5[..$999][..$0],_usn4 =False Starts With $123456789 Merge ((`2esn` :@usn5{@usn6:.e0 =~7 =~False})-[ *0xabc..{``:0xabc =~01,`7esn`:$#usn7[123456789..][$`4esn`..]}]-({#usn7:1e1[`3esn`]})<-[{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(#usn8 :_usn4))"),
    octest:ct_string("Merge _usn4=(({@usn5:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`3esn`:`4esn` In .12 In $#usn8})-[?:`` *07{`1esn`:$#usn7[$`3esn`..$999]}]->(@usn6 {``:12.e12 Contains 's_str' Contains 0.12})<-[? *..0X0123456789ABCDEF{usn2:123456789 Ends With 9e1 Ends With ``,`3esn`:9e0[123456789..0][12.0..@usn6]}]-({``:0.12 Contains 0x0 Contains @usn5})) On Create Set `6esn` =123456789[$_usn4..],#usn7+=`7esn`(Distinct $#usn8[@usn5..$1000]) Ends With Extract(`6esn` In 0x0[9e0..] Where @usn5 In .e0 In \"d_str\"|@usn6[..\"d_str\"][..01]),usn2 =[`6esn` In .e0['s_str'..][$`8esn`..] Where $`7esn`[..$`8esn`]|$`8esn`[`7esn`]] Is Not Null Unwind 7[07] As #usn7 Union Unwind Filter(`3esn` In False In $`2esn` In 1e1 Where 00[$@usn5][0X7])[[@usn5 Is Null,\"d_str\" Ends With $1000 Ends With usn2,$usn1 Is Not Null Is Not Null]..] As `6esn` Remove All(`6esn` In 1000[12.e12][#usn7] Where $`2esn` Starts With 9e12).@usn5?,({@usn5:$usn1 Ends With $`2esn`})<-[?:`8esn`|@usn6*{``:0.e0 Contains $123456789 Contains 123456789,`4esn`:#usn7 Is Not Null Is Not Null}]-(`4esn` :``:`6esn`{#usn7:`2esn`[`3esn`..],usn2:$usn2 Starts With $`7esn` Starts With _usn4}).#usn8?"),
    octest:ct_string("Unwind $_usn4 Starts With 0.e0 Starts With $12 As #usn7"),
    octest:ct_string("With  *,(:`7esn`{@usn6:`2esn`[``..]})<-[?{``:Null Is Not Null Is Not Null}]-(:_usn4{@usn6:$123456789[`1esn`..]}) Ends With [1e1 Starts With 010,.e0 Is Not Null] Ends With All(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0e0 Starts With $@usn6 Starts With $7) As `2esn`,$`2esn` =~$123456789 =~usn2 As #usn7 Skip .e1 =~usn2 =~`7esn` Where $`2esn`[.._usn3] Union Return Distinct 1.e1 As usn1,.e1[0X7..`2esn`] As `5esn` Skip usn1 Ends With .0 Ends With `4esn` Limit {@usn5:@usn5[..$999][..$0]} =~[`3esn` In @usn6[..\"d_str\"][..01] Where `1esn`[$7][0Xa]|.e0 Contains 999] =~[$usn2 Starts With $`7esn` Starts With _usn4] Unwind Filter(`2esn` In $``[$#usn8] Where 0e0['s_str']) Contains [`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 7 =~False|`6esn` Is Not Null] Contains None(usn1 In 123.654 =~.e0 =~9e0 Where $123456789[..$`7esn`][..\"d_str\"]) As `1esn`"),
    octest:ct_string("With  *,0xabc Is Not Null Is Not Null As usn1,0 Contains $@usn5 As `8esn` Order By @usn5 Is Null Desc Skip {`3esn`:'s_str'[$`6esn`..][$0..]}[[`5esn` Ends With 0x0,.0 =~$@usn5 =~1.e1]][{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}] Limit True Contains $`` Contains 01234567 Where 0X7[..$0][..0.12] Union All Optional Match ({usn1:$7[$12]})-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :_usn3:@usn5),`6esn`=((`6esn` {`7esn`:`4esn` In $`2esn` In @usn5})-[:@usn5|:@usn6 *01234567..123456789]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null})) Where 01234567[..`6esn`][..``] Union All Unwind 9e0[123456789..0][12.0..@usn6] As `7esn`"),
    octest:ct_string("With Distinct *,0 =~#usn8 As `2esn`,$#usn8 Is Null Is Null As usn2 Order By Count(*) Ends With 7 Ends With 0 Ascending,$`3esn` Ends With $7 Ends With `7esn` Ascending Limit Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null|12.0 Contains 12.e12 Contains 0x0) Starts With Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1e1 Contains 0Xa)"),
    octest:ct_string("Remove [`3esn` In False In $`2esn` In 1e1 Where True Contains $`` Contains 01234567|$`2esn` Ends With 1e1].`5esn`?,(@usn5 :`2esn`:@usn5$#usn8)<-[:`4esn` *..0X0123456789ABCDEF{`1esn`:0X7[..True][..01234567],``:`1esn`[usn1]}]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]}).``? Create (#usn8 :`6esn`:`3esn`),(({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})) Detach Delete 999 In 0,.e12 Contains `7esn` Contains 999,$@usn6 Is Null Is Null Union Return [`4esn` In 0.12['s_str'..$0][$usn1..9e0]|`7esn`[..01]] Is Not Null Is Not Null As `8esn`,$`4esn` In 0.0 In `3esn` As _usn4 Skip $`5esn`[$usn1..usn1][\"d_str\"...e12] Match @usn6=(`8esn` :#usn7)-[ *0xabc..{``:0xabc =~01,`7esn`:$#usn7[123456789..][$`4esn`..]}]-(:#usn7{_usn3:7 Contains 1000 Contains $usn1})-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :`5esn`) Union Return Distinct *,00[$@usn5][0X7],$`` Is Null Is Null As usn1 Unwind 123456789[..#usn8] As _usn4"),
    octest:ct_string("Merge `4esn`=(usn2 {`4esn`:$123456789 Ends With 12e12})<-[`5esn`?:_usn4|_usn3{@usn5:7 =~False,_usn3:999 Ends With $`4esn`}]-(_usn3 :@usn6) On Match Set @usn5 =`8esn`['s_str'..] Union All Create `6esn`=(({@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})),((({_usn3:`2esn`[`3esn`..]})<-[{@usn6:1000 Ends With 01234567 Ends With usn1,usn2:01234567 In \"d_str\"}]-(#usn8 {`4esn`:$`3esn` Is Null})-[?:`3esn`|_usn4 *01..7{@usn5:`4esn`}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]}))) Create (:`7esn`$#usn8)-[`3esn`? *12{@usn5:$#usn8[..123456789][..`2esn`],#usn7:12.0[..0X7]}]-(:`7esn`{@usn6:`2esn`[``..]})<-[``?:#usn8|:`6esn`{usn1:$#usn7[..$999][..9e1]}]->(`1esn` :`4esn`:usn2),#usn8=((`8esn` :#usn7)) Unwind Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 9e0[0..1e1]) Contains Any(`3esn` In 999 Where $`7esn`[`2esn`]) As `4esn` Union Match `5esn`=(((`6esn` {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})<-[`5esn`:_usn4|_usn3 *0X7..0x0]-(#usn7 {`5esn`:00 Starts With usn1 Starts With Count(*),``:$999 Is Not Null})<-[`4esn` *123456789..]-(:`7esn`$#usn8))) Return Distinct \"d_str\" Starts With _usn4 Starts With $_usn4 As `5esn`,`7esn`[0.e0..False][0e0..$_usn4] As `1esn` Order By 0x0 Is Not Null Ascending,123456789[True..][12..] Desc,All(`2esn` In $``[$#usn8] Where $`2esn`[.._usn3]) =~[`6esn`[_usn3],12.0 In 07] =~[123456789[0.0..`2esn`][1.e1..$_usn4]] Ascending Skip 0X7[$`6esn`..0e0] Limit 0.e0 =~$@usn5 Match usn2=(`5esn` {`1esn`:999 Ends With $`4esn`})<-[usn2:`5esn`|:`1esn`{usn1:`2esn` Is Null Is Null}]->(`5esn` {usn1:1000 Ends With $`5esn`}) Where 0e0 Starts With $@usn6 Starts With $7"),
    octest:ct_string("Merge ({usn1:$usn1 Starts With Null Starts With $``,@usn5:0x0[01234567..Null][0Xa...e12]})<-[{`4esn`:010 In $@usn5 In `5esn`,#usn7:$`7esn` Is Null Is Null}]-(:`3esn`{`1esn`:Count(*) Ends With $#usn8 Ends With 0Xa}) Merge ((`8esn` {`3esn`:Null Is Null Is Null})) On Match Set Filter(`3esn` In @usn6[..\"d_str\"][..01] Where _usn3[..`8esn`])._usn3? =`3esn` Is Not Null Is Not Null,`` =@usn6 Contains $_usn3 Contains 12.0,`3esn`+=Null[_usn3..] On Create Set @usn6 =[`3esn` In False In $`2esn` In 1e1 Where .12 =~$#usn7 =~$``] Is Not Null Return Distinct *,[`3esn` In 999 Where 07 Ends With $_usn4 Ends With 0.e0|$`7esn`[`2esn`]] Starts With Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0) As `8esn`,9e12[..0x0] Order By 7 =~$1000 =~$`5esn` Asc,usn1(Distinct 0e0[...e1],$usn2 Ends With 0 Ends With 12.0)[[#usn8 In 0x0[_usn4..] Where 1e1[`3esn`]]] Asc,[.e1 =~\"d_str\" =~'s_str',$`` Is Not Null Is Not Null,$0[@usn6..][.e12..]] Contains Filter(`6esn` In 0x0[9e0..] Where 0xabc Is Not Null Is Not Null) Asc Union Unwind #usn7[@usn6..] As #usn8 Create (usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[@usn6{_usn4:$`` Starts With 0x0}]-(usn2 :`7esn`),(((`` :`5esn`{`5esn`:_usn3[0Xa..],usn1:1.e1 Ends With 0x0 Ends With 1e1})<-[`6esn`{`3esn`:`2esn` Contains `3esn` Contains $@usn5}]-(`4esn` :`2esn`:@usn5{#usn8:$#usn7[9e12..12]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`6esn` ))) Union Detach Delete _usn4 =~1000 =~_usn3,`8esn`['s_str'..] Merge @usn6=(`8esn` :#usn7)-[ *0xabc..{``:0xabc =~01,`7esn`:$#usn7[123456789..][$`4esn`..]}]-(:#usn7{_usn3:7 Contains 1000 Contains $usn1})-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :`5esn`) On Match Set `5esn`+=\"d_str\" Ends With 123456789,`3esn` =12 Is Null On Create Set Single(`5esn` In 1e1 =~$`8esn` =~`1esn` Where .e12[$_usn4..0]).`2esn`! =$`8esn` Is Not Null,`2esn` =0 Is Null Is Null,_usn4 =Filter(`6esn` In 0x0[9e0..] Where $123456789 In 010 In $`8esn`) In ``(Distinct 0X0123456789ABCDEF In _usn3) In (_usn3 {usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`4esn`:1.e1 Is Null Is Null})-[`1esn`?:`1esn`|@usn6 *12]->(`8esn` :@usn6)"),
    octest:ct_string("With Distinct Extract(`3esn` In 999 Where .e12 Is Null Is Null|$`7esn`[usn2])[Extract(usn1 In 999 Where 7 =~False|$usn2 Starts With 9e1 Starts With `7esn`)] As `8esn`,0Xa Contains $#usn8 Contains `5esn`,Any(`6esn` In 1000[12.e12][#usn7] Where True[$usn1..12][``..\"d_str\"])[..[_usn4 Starts With `6esn` Starts With $`8esn`,``[0X7..][$@usn6..],$usn2 Starts With 9e1 Starts With `7esn`]] As `5esn` Order By 0[..123456789][..False] Asc Skip $`3esn`[...0][..$#usn7] Optional Match #usn7=(`7esn` :`7esn`)-[{`5esn`:0.e0 =~01234567 =~01234567}]->(`6esn` {#usn7:\"d_str\"[.0][9e0],`1esn`:$1000[00..]}),``=(((`6esn` {`5esn`:0x0 =~@usn5 =~01})<-[?{`5esn`:$1000 =~$`8esn` =~$`2esn`,_usn3:$`` Starts With 0x0}]->({`2esn`:``[0X7..][$@usn6..],@usn6:usn1[..`7esn`][..$`8esn`]})<-[`6esn`? *999]->(@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]}))) Create #usn7=(({_usn4:$`5esn` Starts With $`3esn` Starts With 1.e1,`3esn`:1000[Null][$`7esn`]})-[? *999]-({_usn3:123.654 Is Not Null Is Not Null})<-[usn1?:`8esn`|@usn6]->(#usn8 :#usn7{`2esn`:0.e0[.e12]})),((`` :usn1:``)-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->(`8esn` :#usn7)<-[?{`5esn`:$1000 =~$`8esn` =~$`2esn`,_usn3:$`` Starts With 0x0}]->(`2esn` :`5esn`{`1esn`:$@usn6 Ends With 0.0})) Union All Remove All(`5esn` In $usn2 Contains $`1esn` Where $#usn8[..123456789][..`2esn`]).@usn5,[$`3esn` Is Null,.12[usn1]].`6esn`? Create @usn6=(_usn3 {`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`}) Return Distinct `6esn` In 0e0 In _usn4 As `3esn`,12[$`5esn`..$`7esn`][$1000..$_usn4] As #usn8,7 =~$1000 =~$`5esn` Order By Any(#usn8 In 07['s_str'][$@usn6] Where $`7esn`[usn2]) In [`6esn` In 0x0[9e0..] Where `5esn`[usn1]] In {_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]} Ascending,12e12 In Null Asc Skip ``[_usn4..][$7..] Limit 123456789 =~@usn5 =~$`5esn` Union Optional Match `8esn`=(((`2esn` {_usn3:0[1e1..00]})-[_usn4?:usn2|:`` *7]-(`5esn` {`1esn`:999 Ends With $`4esn`})<-[`1esn`:_usn4|_usn3 *00{`1esn`:$#usn8 Starts With usn2 Starts With .12,@usn6:07[$`8esn`]}]-(`3esn` :`8esn`))),`2esn`=(:@usn5{#usn7:0x0 In 0X0123456789ABCDEF,`2esn`:0Xa[Count(*)][0xabc]})-[{usn1:Count(*)[..12][..$999],#usn8:usn1 In 010}]->(`1esn` :`8esn`) Create (`3esn` :#usn8:#usn7{_usn3:$`1esn` Is Not Null Is Not Null,`2esn`:0X7 Contains 12.0})-[`4esn`?:#usn8|:`6esn` *999{`8esn`:010[`1esn`..`4esn`]}]-(`` )-[:@usn5|:@usn6 *999{`5esn`:0x0 =~@usn5 =~01}]->(:``:`6esn`{`7esn`:12e12 Ends With 0e0,`8esn`:$_usn4[False..@usn6][`4esn`..$1000]}),((`` :`3esn`{#usn8:`3esn` Is Not Null Is Not Null,#usn8:$123456789[`3esn`..`5esn`][1e1..$`5esn`]})<-[?{``:Null Is Not Null Is Not Null}]-({#usn8:$123456789 =~usn1 =~0xabc})) Optional Match ((`6esn` :`2esn`:@usn5)) Where `` Is Not Null Is Not Null"),
    octest:ct_string("Optional Match (((`1esn` :`7esn`{usn1:#usn7 Is Not Null Is Not Null,`6esn`:$12[0.0..]})-[@usn6?:`` *0Xa]-(`1esn` {`2esn`:\"d_str\"[..$_usn3],`2esn`:12 Is Null Is Null})<-[`1esn`?:_usn4|_usn3]->(:#usn8:#usn7{`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]}))),@usn5=(_usn3 :@usn5{`5esn`:12e12[..9e12][..$@usn6]})<-[? *01..7]->(#usn8 {usn1:$`8esn` Contains .0 Contains 0.12})<-[?:@usn5|:@usn6]-({`1esn`:$`7esn` Ends With $_usn4 Ends With `5esn`}) Optional Match @usn6=(_usn4 {`2esn`:1.e1 Is Not Null Is Not Null})<-[_usn4?:`3esn`|_usn4 *7]->({@usn6:0.e0 Contains $1000 Contains 7}),((:@usn5{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2})<-[`2esn`{`2esn`:999 Contains $`7esn` Contains usn2}]->(`4esn` :usn2)) Where True[$usn1..12][``..\"d_str\"] Optional Match `4esn`=((:`8esn`)-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :_usn3:@usn5)) Where 12.e12[`2esn`..7] Union All Remove `8esn`(Distinct).`3esn`,(:`4esn`:usn2$``)-[`5esn`?:_usn4|_usn3{@usn5:7 =~False,_usn3:999 Ends With $`4esn`}]->(usn2 :``:`6esn`)<-[_usn3:`3esn`|_usn4]->(#usn7 :_usn4).`5esn`!,[`5esn` In $usn2 Contains $`1esn` Where $`6esn`[$0]|`4esn`[Count(*)]].`6esn`? Detach Delete .12[...0],(`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`` )[..`2esn`(Distinct `7esn`[_usn4..][Count(*)..],0[1.e1..#usn7])][..(_usn4 {`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})<-[@usn5?:_usn4|_usn3{#usn7:0.12 Is Null Is Null,#usn8:$1000 =~00}]-(`4esn` :_usn3:@usn5)-[@usn5? *01234567..123456789{`2esn`:01234567[`6esn`..]}]-(@usn5 {`4esn`:0.12 Is Null})],Extract(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1|$`2esn` Is Not Null Is Not Null) =~[`7esn`[..01],1e1 =~$`8esn` =~`1esn`,$`6esn`[.e12..$`6esn`][$#usn7...0]] Unwind 0Xa[..1.e1] As `8esn`"),
    octest:ct_string("With  12.e12 Contains 0X7 Contains Count(*) As #usn7,01[..12e12][..$usn2] As `5esn` Limit (usn2 {usn2:`7esn` Contains .0 Contains #usn8})-[usn1{`1esn`:`7esn` Contains .0 Contains #usn8}]->(@usn6 :`5esn`{@usn5:.12[9e1..0X7]})[..(`4esn` :_usn3:@usn5)<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(_usn3 :@usn5{`2esn`:1.e1[#usn7][1.e1]})][..All(`6esn` In 1000[12.e12][#usn7] Where `1esn`[$7][0Xa])] Delete $`1esn` Is Null,$`6esn`['s_str'..],0Xa Contains $`6esn` Merge (`2esn` :`8esn`)-[`6esn`?:`1esn`|@usn6 *0xabc..]->(#usn8 :`5esn`{_usn3:'s_str' Starts With $usn2,`2esn`:$`2esn` Starts With 9e12})<-[:`4esn`]-(:``:`6esn`{@usn6:`2esn`[``..],_usn3:12.0 In 07}) On Create Set _usn4 =False Is Not Null Is Not Null,`7esn`+={`8esn`:.12 Is Not Null,_usn3:Count(*) In $`2esn`}[..[@usn6[$0..Null],$999[010..],$`6esn`[$`6esn`..][0X7..]]],``+=Extract(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 123456789[0.0..`2esn`][1.e1..$_usn4]) Ends With Extract(#usn8 In 07['s_str'][$@usn6] Where 9e12[$123456789..$usn2]|12.e12 Is Null Is Null) Ends With Filter(`3esn` In 999 Where .12[0X0123456789ABCDEF..]) Union All Delete Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0) Is Not Null,1000 Ends With 01234567 Ends With usn1,$`8esn` Is Not Null Is Not Null"),
    octest:ct_string("Create (((usn1 :_usn4)-[`2esn`? *7]->(`` :``:`6esn`{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]})-[`2esn`?:`3esn`|_usn4]->({`1esn`:1e1 Starts With 010}))),(((:`3esn`{`7esn`:$123456789[`4esn`..]})-[@usn6?$`3esn`]->(@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->(`8esn` :#usn7))) Create `7esn`=((`6esn` {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})),(@usn5 :@usn6{`5esn`:#usn8 Is Not Null,`1esn`:01234567[`6esn`..]})"),
    octest:ct_string("With  *,$#usn8[1.e1] As #usn7 Skip $0 Contains 7 Contains 1.e1 Limit [`7esn` In `8esn` In 12,usn2 =~`6esn`,.e12 =~\"d_str\" =~@usn5][(:@usn6{usn2:12.e12[.12..$_usn3][0e0..9e0]})-[`7esn`?:`2esn`|:`7esn`]-(#usn8 :`7esn`)][`5esn`(1000 Is Not Null)] Where $#usn8 Is Null Is Null Delete $#usn8 Starts With usn2 Starts With .12,[0Xa[..$`2esn`][..00]] Starts With (@usn6 )-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(:`7esn`{`2esn`:.e12 Is Not Null Is Not Null,`4esn`:_usn4[1000..``]})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`6esn` ) Create (((:_usn4{_usn3:`1esn`[Null..]})-[`2esn`? *7]-(#usn8 :_usn3:@usn5{`3esn`:@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`],`4esn`:0e0 Is Null})<-[?:#usn8|:`6esn`*]->(@usn6 :@usn5{`8esn`:$@usn6 Contains 0e0}))),`6esn`=((`3esn` :`2esn`:@usn5)<-[usn2?:#usn8|:`6esn` *7]-(:@usn6))"),
    octest:ct_string("Unwind $0[`5esn`][9e12] As `1esn` Merge `8esn`=(usn1 {_usn3:#usn7 Ends With 0.12})<-[{@usn6:1000 Ends With 01234567 Ends With usn1,usn2:01234567 In \"d_str\"}]-(#usn8 {`4esn`:$`3esn` Is Null})-[?{`8esn`:Count(*)[12..123.654][$`1esn`..$0]}]->(_usn3 :`7esn`{#usn7:123.654 =~.e0 =~9e0,_usn3:`1esn`[Null..]}) On Create Set _usn4 =All(usn1 In 0xabc Is Not Null Is Not Null Where .12[..07])[..[`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $usn2[12.0..][`8esn`..]|$7[`7esn`][123.654]]][..Any(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1e1 Contains 0Xa)] Merge ({@usn5:0x0 =~`5esn` =~$`8esn`})-[:`1esn`|@usn6 *7{@usn5:0X7[..True][..01234567]}]->(`1esn` :_usn3:@usn5) On Match Set `3esn`+=#usn8 Union Merge `5esn`=(((:`5esn`{`7esn`:0Xa[Count(*)][0xabc],`2esn`:`4esn` Ends With 's_str' Ends With @usn6})<-[`2esn`?:`5esn`|:`1esn`]->(:usn2)<-[`5esn` *0Xa]-(:usn1:``))) On Match Set Filter(`3esn` In False In $`2esn` In 1e1 Where `2esn`[``..]).`2esn` =12 Is Null Is Null,`4esn` =_usn3(123456789 Ends With 9e1 Ends With ``)[Filter(`6esn` In 1000[12.e12][#usn7] Where 0xabc[123.654][12])..[`4esn` Is Not Null]],_usn3 =[`6esn` In .e0['s_str'..][$`8esn`..] Where $@usn5 =~$usn2 =~True|.e0[$`1esn`..][_usn4..]] Ends With (`2esn` {_usn3:.e1 Ends With $123456789})<-[?{usn2:9e0[0..1e1]}]->({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]}) Ends With [.e0['s_str'..][$`8esn`..],.e0 =~7 =~False] On Create Set usn2+={`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]}[{`1esn`:`4esn` Starts With `8esn`}][({`7esn`:`4esn` In $`2esn` In @usn5})-[:`1esn`|@usn6*..]->(:`8esn`{`8esn`:0X7 Contains 12.0,`3esn`:`4esn` Starts With `8esn`})<-[`4esn` *123456789..]-(:`7esn`$#usn8)]"),
    octest:ct_string("Merge ((`4esn` :@usn6$usn1)<-[:@usn5|:@usn6 *999{`5esn`:0x0 =~@usn5 =~01}]->(:@usn6{``:00 In 1000})<-[? *..010{#usn8:$usn1[usn1..$`8esn`][12e12..$``],usn1:'s_str' Ends With $7}]->(:`7esn`$12)) On Match Set usn1+=.e0[..$`5esn`][..``],`2esn`+=@usn5 Ends With 1000,[`4esn` Ends With 's_str' Ends With @usn6,$`4esn` In 0x0].`6esn`! =_usn3 =~$12 Unwind 07 =~.12 As `5esn`"),
    octest:ct_string("Unwind 999[..01234567][..7] As `2esn` Union Return Count(*)[..$_usn3][..$usn2] Skip .0[01234567] Limit (@usn5 :`2esn`:@usn5$#usn8)-[`6esn`?:`1esn`|@usn6 *0xabc..]->(:_usn4{_usn3:`1esn`[Null..]}) Starts With 12.0 Starts With Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) Detach Delete 01234567 In \"d_str\",False Contains $`1esn` Contains @usn6 Union Unwind $_usn3[0e0..][12.0..] As usn1 Unwind $`4esn`[.e1..$usn1] As `1esn`"),
    octest:ct_string("Return *,All(`7esn` In $`8esn`[0.12][12]) Contains [usn1 In 123.654 =~.e0 =~9e0 Where Count(*) Contains 12e12 Contains 0xabc] Contains [`4esn` Ends With 's_str' Ends With @usn6] As #usn7 Skip $`8esn` Is Not Null Is Not Null Union All Match (((#usn8 {`4esn`:$`3esn` Is Null})-[#usn8?:usn1|#usn7{`8esn`:$#usn7[`7esn`..][$`8esn`..]}]-(:@usn5{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2})-[`8esn`?:`` *7]->(usn2 :`6esn`:`3esn`{#usn7:$@usn6 Is Not Null,`8esn`:12e12 Ends With $_usn4 Ends With $`2esn`}))) Union All Unwind Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0e0 Starts With $@usn6 Starts With $7) =~[usn1 In 123.654 =~.e0 =~9e0 Where 0.12 Contains 0x0 Contains @usn5] =~{@usn5:$usn1 Ends With $`2esn`} As @usn6 Unwind $`1esn` Is Null As `` Delete Extract(`5esn` In $usn2 Contains $`1esn` Where $#usn8[..123456789][..`2esn`])[Any(#usn8 In 0x0[_usn4..] Where $`` Starts With 0x0)],0xabc[9e1..][07..]"),
    octest:ct_string("Merge ((:`6esn`:`3esn`)) On Create Set `5esn`+=$`3esn` Starts With 9e12 Starts With `8esn` On Match Set usn2+={#usn8:.e0 Ends With $`1esn` Ends With 1000}[Filter(#usn8 In 07['s_str'][$@usn6] Where $12[0.0..])][Filter(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..])],`6esn`+=$@usn5[All(`3esn` In @usn6[..\"d_str\"][..01] Where .12 Is Not Null Is Not Null)..] With Distinct $`8esn` Is Not Null Order By @usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`] Ascending Limit Extract(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where .12 Is Null|0X0123456789ABCDEF[$_usn3][$_usn4])[..All(usn1 In 123.654 =~.e0 =~9e0 Where False Starts With $123456789)] Where 0xabc =~01 Detach Delete usn2(Distinct $`3esn` Is Null) Is Null Is Null"),
    octest:ct_string("Merge ((({@usn6:`4esn`})<-[@usn5?{`7esn`:`6esn` In $``}]->(`1esn` {_usn4:$123456789 Starts With `6esn` Starts With 123.654})-[``?:usn1|#usn7]->(@usn6 :_usn4{`2esn`:\"d_str\"[..$_usn3],@usn6:$7[`7esn`][123.654]}))) On Create Set `4esn`+=Extract(`3esn` In 999 Where $`5esn`[.e1][#usn8]|$#usn8[@usn5..$1000]) =~Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $#usn8 =~7 =~.12) =~Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 123.654 Is Not Null Is Not Null),[`6esn` In 0x0[9e0..] Where `7esn` Is Null Is Null|$`4esn`[.e1..$usn1]].usn2! =1.e1[0..] Return Distinct *,$0 Starts With `5esn` Starts With 0 Order By `6esn`[`7esn`..$_usn3][9e0..#usn8] Desc,`5esn` In $usn1 In `4esn` Descending,$`6esn`[00] Ascending Limit \"d_str\"[..01234567][..$1000] Union Unwind `2esn`(_usn3[..usn2])[Extract(usn1 In 999 Where 010 In $@usn5 In `5esn`)] As `6esn` Merge (#usn7 {_usn4:`1esn`[$7][0Xa]})-[``{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null}]->(#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]})-[``:@usn6{`3esn`:.e12[$_usn4..0],usn1:00[$0..usn2][$_usn4..$999]}]-({``:_usn3[9e0..$123456789][0X7..999]}) On Match Set #usn8 ={`8esn`:.e12[..#usn7][..9e12]} Starts With None(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $1000[00..]) Starts With {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`}"),
    octest:ct_string("Unwind 0.12[123456789..] As usn2 Return *,All(`7esn` In $`8esn`[0.12][12]) Contains [usn1 In 123.654 =~.e0 =~9e0 Where Count(*) Contains 12e12 Contains 0xabc] Contains [`4esn` Ends With 's_str' Ends With @usn6] As #usn8 Skip @usn6 Ends With 0.12 Ends With `3esn` Limit [01[..0X7],0 =~#usn8,$``[$_usn4][$`3esn`]][0e0..Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 0X0123456789ABCDEF[$_usn3][$_usn4])][None(`2esn` In $``[$#usn8] Where 0x0[$7..][`7esn`..])..[`5esn` Ends With 0x0,.0 =~$@usn5 =~1.e1]] Merge (`4esn` {@usn6:_usn4[$`8esn`.._usn3][.0..$@usn6]})<-[@usn5?:_usn4|_usn3 *1000..01234567]->({@usn6:$#usn8[0e0..][07..]})<-[@usn5?:usn2|:``*..]->(`7esn` {#usn7:1e1[`3esn`]}) On Match Set usn2 =$`1esn` =~`1esn` =~0X0123456789ABCDEF,usn1+=#usn7 Starts With 's_str' Starts With usn2,`5esn`+=010 Is Null"),
    octest:ct_string("Create usn2=(`5esn` :`2esn`:@usn5{usn2:$`6esn` Starts With usn1,``:123456789 =~@usn5 =~$`5esn`})<-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}),(`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})<-[? *..010{usn1:123456789[$_usn4..]}]->(#usn7 {usn2:$#usn8 In True In #usn7}) Detach Delete `6esn` Contains \"d_str\" Contains 0X7 Union All Return Distinct 0 Contains $@usn5 As `8esn` Order By $`` Starts With 0x0 Descending Limit All(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $123456789 Is Not Null) Is Null Is Null Remove Filter(`6esn` In .e0['s_str'..][$`8esn`..] Where $999[..0e0][..@usn6]).#usn7!,[`6esn` In 1000[12.e12][#usn7] Where $0[1e1][`4esn`]|False Starts With $123456789].usn2?,[`6esn` In .e0['s_str'..][$`8esn`..] Where 0.12[123456789..]]._usn4! Merge usn2=((@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})) On Create Set `7esn`+=9e0[123456789..0][12.0..@usn6],`2esn` =({`7esn`:$@usn5 =~$usn2 =~True,_usn3:00[$0..usn2][$_usn4..$999]})-[`3esn`]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5})<-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]})[{usn1:$`5esn`[.e1][#usn8],_usn3:12e12 Ends With `6esn`}] On Create Set `3esn` =Single(usn1 In 123.654 =~.e0 =~9e0 Where $123456789[..$`7esn`][..\"d_str\"])[..Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 9e1 Contains _usn3)][..None(usn1 In 123.654 =~.e0 =~9e0 Where $7 Ends With 12.e12 Ends With `1esn`)],Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0]|.0 =~$@usn5 =~1.e1).`4esn`? =[0e0 Is Null,#usn7 Ends With 9e0,$7[`7esn`][123.654]][{_usn3:0e0 =~False =~.12,`3esn`:`` Contains .e1 Contains 9e12}][{_usn3:$#usn8[0xabc..usn2]}]"),
    octest:ct_string("With  *,(:`7esn`{@usn6:`2esn`[``..]})<-[?{``:Null Is Not Null Is Not Null}]-(:_usn4{@usn6:$123456789[`1esn`..]}) Ends With [1e1 Starts With 010,.e0 Is Not Null] Ends With All(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0e0 Starts With $@usn6 Starts With $7) As usn1,$_usn3 =~`1esn` Order By 123456789 =~#usn8 =~$0 Ascending Skip 999 Ends With $`4esn` Where $_usn4[..$`8esn`] Union All Detach Delete $#usn7[$`3esn`..$999],0e0 Is Null,`7esn`[`8esn`][#usn7] Delete \"d_str\"[0X7..``][@usn5.._usn4],0.12 Is Null Is Null,_usn3[$0] Remove `6esn`(Distinct $`2esn`[$``..12e12]).#usn8 Union All Optional Match @usn6=(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[@usn6{_usn4:$`` Starts With 0x0}]-(usn2 :`7esn`),`6esn`=(((`3esn` :usn1:``)<-[``{#usn7:$`2esn` =~False,``:12e12[..9e12][..$@usn6]}]-(`2esn` :`1esn`:@usn6{#usn8:.12 Is Not Null})-[@usn6{_usn4:$`` Starts With 0x0}]->(`1esn` {#usn7:$`7esn`[`2esn`]}))) Detach Delete 0.e0 Ends With #usn8"),
    octest:ct_string("Return Distinct *,(_usn4 :_usn3:@usn5)<-[@usn6:`8esn`|@usn6{@usn6:#usn8 =~#usn7 =~0x0,`7esn`:$usn1 Ends With $`2esn`}]->(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[?:`6esn`]->(`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})[Any(`5esn` In $usn2 Contains $`1esn` Where @usn6[$usn1][$`2esn`])..][None(`3esn` In False In $`2esn` In 1e1 Where True Contains $`` Contains 01234567)..] As ``,(:_usn4)-[usn2{@usn6:$usn1 Is Not Null Is Not Null,`7esn`:0x0 In 0X0123456789ABCDEF}]-(:`7esn`{`8esn`:'s_str'[$#usn8]})-[`5esn` *12{`8esn`:0Xa[Count(*)][0xabc]}]->({@usn6:$#usn8[0e0..][07..],``:$`7esn` =~1.e1 =~0.e0}) Contains [\"d_str\"[.0][9e0]] Skip 01 Ends With 123456789 Limit $`2esn` Starts With $`2esn` Starts With $12 Match #usn8=({usn1:False[$12],`1esn`:0.e0 Ends With $123456789})-[usn1:_usn3|`6esn`{#usn8:`6esn`[`7esn`..$_usn3][9e0..#usn8],`3esn`:\"d_str\" =~_usn3 =~0.0}]-({``:9e1[$#usn8],`4esn`:1.e1 Is Null Is Null})<-[@usn5?{`7esn`:`6esn` In $``}]->(usn1 {_usn3:#usn7 Ends With 0.12}) Union All Unwind #usn7 In 0.12 In Null As _usn3 Return *,$_usn3[0e0..][12.0..] As usn2 Delete 0.12[_usn3],_usn3 Ends With $`6esn` Ends With 0e0,@usn6 Is Not Null"),
    octest:ct_string("Remove {_usn4:12e12 Ends With $_usn4 Ends With $`2esn`,``:.12 Is Not Null}.`4esn`?,Extract(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]|$`2esn` =~False).`1esn`,`1esn`:``:`6esn` Optional Match _usn3=(:#usn7{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]}),(({_usn4:$`5esn` Starts With $`3esn` Starts With 1.e1,`3esn`:1000[Null][$`7esn`]})-[? *999]-({_usn3:123.654 Is Not Null Is Not Null})<-[usn1?:`8esn`|@usn6]->(#usn8 :#usn7{`2esn`:0.e0[.e12]})) Where `4esn` Ends With $12 Ends With 0.e0 Unwind Filter(`5esn` In 1e1 =~$`8esn` =~`1esn` Where #usn7 In #usn7)[Single(`3esn` In 999 Where $123456789 =~usn1 =~0xabc)..] As #usn8 Union Unwind [False Starts With $123456789][[usn1 In 0xabc Is Not Null Is Not Null Where 0x0[$7..][`7esn`..]|00 In 1000]..[.e12 Is Null Is Null]][Extract(#usn8 In 07['s_str'][$@usn6] Where 7 =~$1000 =~$`5esn`|\"d_str\"[1.e1][01234567])..Single(`3esn` In False In $`2esn` In 1e1 Where .e12[..$_usn4][..#usn7])] As `` Return Extract(`3esn` In False In $`2esn` In 1e1 Where `` Contains 010 Contains $1000|@usn5['s_str'..$`2esn`])[`5esn`(0e0['s_str'])][None(`6esn` In 0x0[9e0..] Where 0xabc Is Not Null Is Not Null)] As @usn5 Skip _usn4[#usn7..#usn8] Limit All(`2esn` In $``[$#usn8] Where $`2esn`[.._usn3]) =~[`6esn`[_usn3],12.0 In 07] =~[123456789[0.0..`2esn`][1.e1..$_usn4]] Detach Delete None(`6esn` In 1000[12.e12][#usn7] Where 9e12[\"d_str\"]) Ends With None(`6esn` In 1000[12.e12][#usn7] Where usn1[9e1..]) Ends With [`5esn` In 12.e12 In 1000,False In $`2esn` In 1e1],.e1 Ends With $123456789,(@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]})<-[``?:_usn4|_usn3 *0xabc..{#usn8:$#usn8[..9e12][..$`3esn`],@usn5:\"d_str\"[7..$999]}]->(`5esn` {usn2:`6esn` In $``}) Is Not Null Is Not Null Union Unwind `4esn`(Distinct $`5esn`[`4esn`..$`2esn`],9e1 Contains 07) =~{usn2:$`6esn`[.e12]} =~[`7esn` In $`8esn`[0.12][12] Where .e1 =~\"d_str\" =~'s_str'|.e12 =~@usn5] As `8esn` Merge (`6esn` :@usn6)<-[`1esn`?:`3esn`|_usn4 *01234567..123456789]->(#usn7 {#usn7:999 Contains $`7esn` Contains usn2})"),
    octest:ct_string("Create `7esn`=((`5esn` :``:`6esn`)-[:@usn5|:@usn6 *999{`5esn`:0x0 =~@usn5 =~01}]->(_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})) Match (@usn6 {`4esn`:$#usn7 =~usn2 =~`3esn`,_usn4:01 In 0.12 In .e12}) Merge `8esn`=(:`1esn`:@usn6{`5esn`:123.654[0Xa..0x0][.12..12e12],`8esn`:_usn3[..usn2]})<-[usn1:#usn8|:`6esn` *0xabc..]->(`8esn` :`1esn`:@usn6) On Create Set Single(#usn8 In 0x0[_usn4..] Where $`6esn`[.e12])._usn4! =[usn1 In 123.654 =~.e0 =~9e0 Where Count(*) Contains 12e12 Contains 0xabc][_usn3(123.654[``])],#usn7+=Single(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where `4esn` In $`2esn` In @usn5) =~[`6esn` In 1000[12.e12][#usn7] Where $`4esn`[$@usn5..`7esn`]|0X7[..`5esn`][..$`7esn`]] =~`3esn`(Distinct 0.e0 Is Not Null Is Not Null,$usn1[usn1..$`8esn`][12e12..$``]) On Create Set usn1+=.e0[..$`5esn`][..``],`2esn`+=@usn5 Ends With 1000,[`4esn` Ends With 's_str' Ends With @usn6,$`4esn` In 0x0].`6esn`! =_usn3 =~$12 Union All Merge _usn4=((`3esn` :#usn8:#usn7{_usn3:$`1esn` Is Not Null Is Not Null,`2esn`:0X7 Contains 12.0})<-[``?:#usn8|:`6esn`]->(`8esn` :`1esn`:@usn6{usn1:00['s_str'],#usn8:$`8esn`[``..True][1000..0.12]})<-[``? *01234567..123456789{``:9e12 In 123.654 In True}]->(:`5esn`{`7esn`:0Xa[Count(*)][0xabc],`2esn`:`4esn` Ends With 's_str' Ends With @usn6})) On Match Set `6esn`:@usn5,Single(`7esn` In $`8esn`[0.12][12] Where 01 Is Null).`8esn` =Single(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]) Starts With (:usn1:``{_usn4:1000[12.e12][#usn7]})-[ *7{`4esn`:$#usn7[$`3esn`..$999],`8esn`:$0[00..]}]-({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]}) Starts With {`1esn`:`5esn` In 12.e12 In 1000,`3esn`:0Xa Contains $`6esn`},`5esn` =010 Starts With 0X7 On Match Set None(`7esn` In $`8esn`[0.12][12] Where usn1 In 010).usn1 =$usn2 Contains $1000 Contains @usn5,#usn8+=True =~0 =~123456789 Detach Delete .e12 =~\"d_str\" =~@usn5 With Distinct {`8esn`:$0[`5esn`][9e12]}[Extract(`6esn` In 0x0[9e0..] Where $`3esn` Is Not Null|Count(*) In $`2esn`)..][(`7esn` {#usn7:1e1[`3esn`]})-[usn2?:@usn5|:@usn6]->(#usn7 {`2esn`:999})<-[{`5esn`:12e12 Ends With $_usn4 Ends With $`2esn`}]->(#usn8 :_usn4)..] Where .0[..False]"),
    octest:ct_string("Match usn1=((:`7esn`$#usn8)) With  ['s_str' Contains 999,0.12 Is Null Is Null] =~{`3esn`:7[$1000][1000]} =~Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $123456789[`1esn`..][`7esn`..]),$`5esn`[0][.12] Order By Extract(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0|0[_usn3][.12]) Starts With (#usn8 :`8esn`)<-[`2esn`?:`3esn`|_usn4]-(#usn7 :`7esn`{`3esn`:$#usn8[..123456789][..`2esn`],#usn8:0.e0 Ends With #usn8})-[:`5esn`|:`1esn`]-(@usn5 :`5esn`) Desc,@usn6 Starts With #usn8 Starts With $#usn7 Descending,.0[..\"d_str\"][..usn2] Asc Skip (@usn5 :`1esn`:@usn6{@usn5:`4esn` Is Not Null,`3esn`:.e1 =~usn2 =~`7esn`})<-[#usn7?:#usn7|`5esn` *01..7{`2esn`:.e0 =~01 =~9e12,#usn8:$123456789 Starts With `6esn` Starts With 123.654}]-(`2esn` )-[ *999]->(_usn3 {_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null})[..Extract(#usn8 In 07['s_str'][$@usn6] Where _usn4[.._usn4])][..Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where usn2[.e1..][01234567..])] Optional Match #usn8=((#usn7 {usn2:$#usn8 In True In #usn7})-[`6esn` *00]->(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})),(((:usn1:``)<-[:@usn5|:@usn6 *01234567..123456789]->(`1esn` :`7esn`{`6esn`:1e1 In 12.e12})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`1esn` {`6esn`:07})))"),
    octest:ct_string("Remove [#usn8 In 07['s_str'][$@usn6] Where $12[0.0..]].`6esn`! Create _usn3=(#usn8 :`7esn`)-[:#usn8|:`6esn`{#usn8:0X7[..`5esn`][..$`7esn`]}]->(`2esn` :@usn6),#usn8=(_usn4 )-[ *0xabc..{``:0xabc =~01,`7esn`:$#usn7[123456789..][$`4esn`..]}]-({#usn7:1e1[`3esn`]}) Union All Merge `4esn`=((:#usn7{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]})-[?{#usn7:123.654[``]}]-(`8esn` :`3esn`{`2esn`:$`8esn`[`7esn`],`4esn`:#usn8[1e1..]})<-[usn2?:#usn8|:`6esn` *7]-(:`2esn`:@usn5{#usn8:0.e0 Contains @usn5 Contains 0X7,`5esn`:0x0[9e0..]})) Optional Match `1esn`=(((_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[`7esn`?:`2esn`|:`7esn`]->(`3esn` {#usn8:#usn7 =~$`8esn`})-[ *07{`1esn`:$``}]->(`1esn` :usn1:``))) Where 01 Starts With $`5esn` Starts With 01234567 Union Unwind `` In 123.654 In 0.0 As `3esn`"),
    octest:ct_string("Return Distinct $@usn6[$#usn8..$999][Count(*)..usn1] As @usn6,\"d_str\" =~Count(*) =~$usn2,$@usn5[..$`8esn`][..`1esn`] Match `7esn`=((:usn1:``{_usn3:123.654 Is Not Null Is Not Null})),``=((usn2 :@usn6{#usn7:$`7esn` Starts With 07 Starts With `1esn`,`2esn`:$123456789[..$usn2]})<-[#usn7? *123456789..{`2esn`:999 Contains $`7esn` Contains usn2}]-(:#usn7{_usn3:7 Contains 1000 Contains $usn1})<-[`8esn`? *..0X0123456789ABCDEF{`2esn`:$``[$_usn4][$`3esn`]}]-(`7esn` {`2esn`:9e0[$@usn6]})) Where 1000 Is Null Is Null Merge usn2=(:_usn3:@usn5{`6esn`:$`8esn` Ends With #usn8,`8esn`:123456789 Ends With 9e1 Ends With ``}) On Match Set `5esn`+=#usn7 Is Null On Match Set {#usn7:$123456789 Ends With 12e12,`1esn`:0e0 =~False =~.12}.`8esn`! =Extract(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $123456789[`1esn`..][`7esn`..]|usn2[.e1..][01234567..]) Is Null Is Null,`5esn` =$1000 In `7esn` In 12.0,_usn4+={_usn4:$@usn6 Ends With 0.0,`7esn`:$#usn7[123456789..][$`4esn`..]} =~Extract(`6esn` In 1000[12.e12][#usn7] Where 01234567[9e0][.0]|$@usn6 Is Null Is Null) Union With  0.0 =~0 =~`` As `7esn`,0.12[123456789..] Skip None(`3esn` In 999 Where 07 Ends With $_usn4 Ends With 0.e0) Is Null Is Null Limit 0.e0 In `2esn` Where 1e1 Contains 0Xa Return Distinct All(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $@usn6 Is Null) Is Not Null Is Not Null Skip [9e1[..01234567][..`4esn`]][[$@usn6 Is Not Null]][Extract(`3esn` In 999 Where 0x0 Contains .0|@usn5[..$999][..$0])] Limit (`5esn` :`8esn`{``:00 In 1000})<-[? *123456789..{`7esn`:01234567[9e0][.0],`2esn`:999 Ends With $`4esn`}]-({@usn6:$#usn8[0e0..][07..]}) Ends With (@usn6 {@usn6:$`7esn` Ends With $_usn4 Ends With `5esn`,usn1:123.654[0Xa..0x0][.12..12e12]})-[@usn5:@usn6]-(:`4esn`:usn2{_usn4:`1esn`[$7][0Xa]}) Optional Match ({_usn3:.12[usn1],_usn4:$usn1 Starts With Null Starts With $``})-[`3esn`]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5}) Union All Create (usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[@usn6{_usn4:$`` Starts With 0x0}]-(usn2 :`7esn`),#usn7=((({_usn3:`2esn`[`3esn`..]})<-[{@usn6:1000 Ends With 01234567 Ends With usn1,usn2:01234567 In \"d_str\"}]-(#usn8 {`4esn`:$`3esn` Is Null})-[?:`3esn`|_usn4 *01..7{@usn5:`4esn`}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]}))) Remove {#usn8:`3esn` Is Not Null Is Not Null,#usn8:$123456789[`3esn`..`5esn`][1e1..$`5esn`]}.``!,Extract(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where .e12 =~@usn5|9e0[$@usn6])._usn3!,Single(usn1 In 123.654 =~.e0 =~9e0 Where $#usn8 =~7 =~.12).#usn8 Create `3esn`=(($_usn3)),`2esn`=((#usn8 {`4esn`:$`3esn` Is Null}))"),
    octest:ct_string("Match ``=((({`3esn`:.e12[$_usn4..0],usn1:00[$0..usn2][$_usn4..$999]})<-[_usn4?:_usn3|`6esn`]-(:usn2$`4esn`)<-[``?:#usn8|:`6esn`{usn1:$#usn7[..$999][..9e1]}]->(`1esn` :`4esn`:usn2))),`6esn`=(_usn4 {`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})-[`2esn`?:`7esn` *0X7..0x0]->({_usn4:`7esn`[_usn4..][Count(*)..],`1esn`:01234567 In \"d_str\"})<-[@usn6?{usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`4esn`:1.e1 Is Null Is Null}]->(`3esn` :`2esn`:@usn5{`1esn`:#usn8 =~#usn7 =~0x0,_usn4:01[$0]}) Where $usn1 Starts With $0 Starts With $123456789"),
    octest:ct_string("With Distinct *,.e12 Contains `7esn` Contains 999 As ``,`8esn`[9e12] Order By (usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})<-[#usn7:``{`4esn`:0.e0 Is Not Null Is Not Null}]-(:`3esn`{usn2:$`3esn`[9e0..0.0][_usn4..123456789]})-[#usn7? *123456789..{`2esn`:999 Contains $`7esn` Contains usn2}]-($#usn7) =~$_usn3 =~Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 00[0X7..9e12]|$#usn7) Descending,07 Ends With $_usn4 Ends With 0.e0 Ascending Skip True Limit 9e12[..0x0] Where $#usn8 Ends With _usn4 Ends With usn2 Union Match (((@usn6 {@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})-[`5esn`:@usn5|:@usn6*{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]->(#usn8 :`2esn`:@usn5)<-[`5esn`:_usn4|_usn3 *0X7..0x0]-(:#usn7{_usn4:\"d_str\"[7..$999]}))),((`7esn` {#usn7:1e1[`3esn`]})-[@usn6?:`` *0Xa]-(@usn6 :@usn5{`8esn`:$@usn6 Contains 0e0})<-[:_usn4|_usn3]-(#usn8 :`8esn`{_usn4:usn2 In 1e1 In `4esn`})) Return Distinct 0.12 Starts With 0X7,All(`6esn` In 1000[12.e12][#usn7] Where 9e12[\"d_str\"]) Contains [usn1 In 0xabc Is Not Null Is Not Null Where 9e0[123456789..0][12.0..@usn6]|True] Contains [_usn3 =~$12,`5esn`[0e0..]] Limit 123456789[$_usn4..] Merge (((`2esn` :_usn4{`7esn`:`2esn`[`3esn`..],`6esn`:.12 Is Not Null})<-[`1esn`?:`3esn`|_usn4*..]-(:`6esn`:`3esn`{`3esn`:123.654[0Xa..0x0][.12..12e12]})-[?:`8esn`|@usn6*{``:0.e0 Contains $123456789 Contains 123456789,`4esn`:#usn7 Is Not Null Is Not Null}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]}))) On Create Set `2esn`+=`6esn` Is Null,`7esn`+=$`7esn` Is Null Is Null,`6esn`+=(:_usn4{_usn3:`1esn`[Null..]})-[{`8esn`:'s_str'[$#usn8]}]->(`8esn` :@usn5) Is Not Null Is Not Null On Match Set `3esn`+=$`2esn` Is Not Null Is Not Null,{usn2:123.654 Is Not Null Is Not Null}._usn4! =`2esn`[0.e0..$999]"),
    octest:ct_string("Unwind [01[..0X7],0 =~#usn8,$``[$_usn4][$`3esn`]] As `5esn` Union Merge ((_usn4 :#usn8:#usn7)<-[? *01234567..123456789]->(:`3esn`{`7esn`:$123456789[`4esn`..]})-[{usn1:`` Is Not Null Is Not Null,`2esn`:#usn8[..0X0123456789ABCDEF][...0]}]-(:usn1:``{_usn4:1000[12.e12][#usn7]})) Delete #usn8[1e1..],Any(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0X0123456789ABCDEF In _usn3) Starts With Extract(`7esn` In $`8esn`[0.12][12] Where .e1[0X7..`2esn`]|0.e0[.e12]) Starts With Extract(`3esn` In @usn6[..\"d_str\"][..01] Where 1.e1[$`7esn`]|01234567[9e0][.0]),$#usn8 Starts With usn2 Starts With .12 Union All Return Distinct \"d_str\" Starts With _usn4 Starts With $_usn4 As `5esn`,`7esn`[0.e0..False][0e0..$_usn4] As `1esn` Order By 0x0 Is Not Null Ascending,123456789[True..][12..] Desc,All(`2esn` In $``[$#usn8] Where $`2esn`[.._usn3]) =~[`6esn`[_usn3],12.0 In 07] =~[123456789[0.0..`2esn`][1.e1..$_usn4]] Ascending Skip 0X7[$`6esn`..0e0] Limit 0.e0 =~$@usn5 Return *,`4esn`,Any(`3esn` In False In $`2esn` In 1e1 Where #usn7[.12][usn2])[{#usn7:0e0['s_str'],`1esn`:$#usn8[1.e1]}..[@usn6[.0],0X0123456789ABCDEF Is Not Null,0x0[$`2esn`..'s_str'][$@usn5..1.e1]]][[`4esn` Ends With 's_str' Ends With @usn6]..$`5esn`] As `` Order By (`6esn` :`8esn`{usn2:#usn7 In #usn7,`1esn`:00['s_str']})<-[``?:@usn6]-(:`2esn`:@usn5{usn2:$`3esn` Ends With @usn6 Ends With 123.654})<-[@usn5?:@usn6 *..010]->(#usn7 :#usn7{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2}) Is Null Asc,$usn2 Starts With $`7esn` Starts With _usn4 Desc Limit `4esn` Starts With $#usn8 Starts With $#usn8 Match (usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[@usn6{_usn4:$`` Starts With 0x0}]-(usn2 :`7esn`),@usn5=((:`5esn`)-[@usn5? *00{@usn5:usn1 Ends With 1.e1 Ends With `4esn`}]-(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})) Where usn2 In 1e1 In `4esn`"),
    octest:ct_string("Remove [`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where `` Contains 010 Contains $1000].``,{`4esn`:_usn4 Starts With `6esn` Starts With $`8esn`,`6esn`:@usn5['s_str'..$`2esn`]}.`4esn`? Union All Remove {_usn3:9e1[$`3esn`][$`1esn`],`7esn`:usn1[0X7..]}.usn1!,(_usn4 {@usn6:0.e0 Contains $1000 Contains 7})-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->($@usn6).@usn6 With  $`2esn` =~$123456789 =~usn2 As #usn7,.e12[..#usn7][..9e12],Null Contains $_usn3 As @usn6 Where $_usn4 =~0X7 Union Detach Delete `2esn` Ends With Null Ends With 0xabc,$7 Ends With 12.e12 Ends With `1esn`,Single(`6esn` In 0x0[9e0..] Where $`3esn` Is Not Null) In (`3esn` :`8esn`{usn2:0e0 =~False =~.12})-[? *12{`1esn`:.e0 Ends With $`1esn` Ends With 1000}]->(#usn7 ) Remove [1.e1 Is Not Null Is Not Null,`3esn` Is Not Null Is Not Null].@usn6?,{`6esn`:0[_usn3][.12],@usn6:False[...e0][..$#usn8]}.``?,`4esn`:#usn8:#usn7 Detach Delete 0Xa In $`2esn` In `8esn`"),
    octest:ct_string("Return Distinct Any(`3esn` In 999 Where .12[0X0123456789ABCDEF..]) =~(:`7esn`{@usn6:`2esn`[``..]})<-[?{``:Null Is Not Null Is Not Null}]-(:_usn4{@usn6:$123456789[`1esn`..]}) =~[12e12 Ends With `6esn`],$`3esn`[...0][..$#usn7],1.e1 As usn1 Order By .e12[$_usn4..0] Ascending,usn1 Ends With .0 Ends With `4esn` Asc,'s_str' =~$`4esn` =~@usn5 Descending Skip Count(*) In $`2esn` Return True[$usn1..12][``..\"d_str\"] As `` Limit `1esn` With Distinct 999[..\"d_str\"] Order By $`5esn`[$usn1..usn1][\"d_str\"...e12] Desc,1.e1[#usn7][1.e1] Descending,$@usn5[All(`3esn` In @usn6[..\"d_str\"][..01] Where .12 Is Not Null Is Not Null)..] Descending Union All Merge usn1=((#usn7 :`5esn`)<-[`2esn`?:`5esn`|:`1esn`]->(:usn2)) On Match Set _usn4 ={`1esn`:$`8esn`[``..True][1000..0.12]} Ends With Any(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where Count(*)[..`5esn`]) Ends With Single(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 010 Is Null Is Null),#usn7:usn1:`` On Create Set (:_usn4{_usn3:`1esn`[Null..]})<-[`2esn`?*{`3esn`:$@usn5 Is Not Null Is Not Null}]-(#usn8 :`6esn`:`3esn`$#usn7)-[`5esn`?:usn2|:``{usn2:1000 Starts With 0e0 Starts With 0,`6esn`:9e1[$`3esn`][$`1esn`]}]->(#usn7 :`7esn`).`3esn`? =Filter(#usn8 In 07['s_str'][$@usn6] Where usn2[..1e1][..$_usn3]) Ends With [`4esn` In 0.12['s_str'..$0][$usn1..9e0]|`7esn`[..01]],_usn4 ={``:False Starts With $123456789,#usn8:7 =~False} Is Null Is Null,_usn4+={`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]} Starts With Extract(usn1 In 999 Where 0.12[123456789..]) Starts With 010 Remove [1000[Null][$`7esn`],12e12 Ends With 0 Ends With $@usn6].`4esn`!,Extract(`3esn` In @usn6[..\"d_str\"][..01] Where .e0[..$`5esn`][..``]|$#usn8 Starts With usn2 Starts With .12).usn2? Unwind usn2 =~`6esn` As `5esn` Union All Unwind 00[01234567][Count(*)] As _usn3 Merge ((@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})) On Match Set `3esn`+=$`2esn` Is Not Null Is Not Null,{usn2:123.654 Is Not Null Is Not Null}._usn4! =`2esn`[0.e0..$999] On Create Set [#usn8 In 0x0[_usn4..] Where `8esn`[12.e12][`4esn`]].#usn8! =usn2[..1e1][..$_usn3],Any(`3esn` In 999 Where .e12 Is Null Is Null).@usn6? =$#usn8[@usn5..$1000]"),
    octest:ct_string("Return None(usn1 In 0xabc Is Not Null Is Not Null Where .12[..07]) Contains [$#usn7[`7esn`..][$`8esn`..],$_usn4[$123456789..][12..],`6esn` In $``] Order By @usn6[..$usn1][..010] Asc,`` In 123.654 In 0.0 Desc,{`7esn`:1.e1 Is Null Is Null,_usn3:@usn6[$0..Null]}[..[_usn4 Starts With `6esn` Starts With $`8esn`,``[0X7..][$@usn6..],$usn2 Starts With 9e1 Starts With `7esn`]][..Single(#usn8 In 07['s_str'][$@usn6] Where 9e0 Starts With 0e0 Starts With $`5esn`)] Ascending With Distinct 999[..\"d_str\"],`7esn`(Distinct `7esn` Is Null,`4esn` Ends With 's_str' Ends With @usn6) Is Null Order By #usn7 =~$`8esn` Desc,[@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`],12e12 Ends With $_usn4 Ends With $`2esn`][Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where _usn4[.._usn4])][$@usn5] Asc"),
    octest:ct_string("Merge `8esn`=(usn1 {_usn3:#usn7 Ends With 0.12})<-[{@usn6:1000 Ends With 01234567 Ends With usn1,usn2:01234567 In \"d_str\"}]-(#usn8 {`4esn`:$`3esn` Is Null})-[?{`8esn`:Count(*)[12..123.654][$`1esn`..$0]}]->(_usn3 :`7esn`{#usn7:123.654 =~.e0 =~9e0,_usn3:`1esn`[Null..]}) Unwind Extract(`3esn` In 999 Where .e12 Is Null Is Null|$`7esn`[usn2]) Is Not Null As `2esn` Union All Remove {_usn3:0e0['s_str'],`6esn`:9e12[\"d_str\"]}.`6esn`,(:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`})<-[?{_usn3:Count(*) Ends With 7 Ends With 0,`8esn`:@usn6 Starts With #usn8 Starts With $#usn7}]-(_usn3 :`4esn`:usn2).#usn7 Remove {@usn5:123456789[..#usn8],#usn8:usn1 =~`2esn`}.`6esn`,[@usn5[$`1esn`..][$7..],$#usn8 Is Null Is Null,`4esn` Ends With $12 Ends With 0.e0].@usn5 Merge usn1=(usn1 :`2esn`:@usn5{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc})<-[#usn8:`3esn`|_usn4*..{``:9e0 Is Null Is Null}]->(:@usn5{#usn7:0x0 In 0X0123456789ABCDEF,`2esn`:0Xa[Count(*)][0xabc]}) Union All Return Distinct 123456789 Ends With 9e1 Ends With ``,1.e1[$usn1..$`7esn`] Skip 12.0[`3esn`][_usn3] Limit [9e0 Starts With 0e0 Starts With $`5esn`] Contains {`6esn`:#usn7[False..][123.654..]} Merge @usn5=(@usn6 {`1esn`:$#usn8 Starts With usn2 Starts With .12,@usn6:07[$`8esn`]})<-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]-(:`4esn`:usn2{`2esn`:0Xa Contains $`6esn`}) On Create Set `6esn`+=[`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12]] Ends With [0] Ends With `8esn`,#usn8:`5esn`,#usn7+=01234567[..`6esn`][..``]"),
    octest:ct_string("Return [.12 Is Null,12 Ends With 0 Ends With Null,0x0 =~@usn5 =~01][{usn2:$`6esn`[.e12]}] As @usn5,$usn2 Starts With $`7esn` Starts With _usn4 Unwind 999 Is Not Null As #usn8 Return Distinct `` In 123456789 In $_usn4 Order By @usn6(Distinct $0 Contains 7 Contains 1.e1)[(_usn4 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})<-[@usn5?:usn2|:``*..]-(:`1esn`:@usn6$#usn8)][Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0X0123456789ABCDEF In _usn3)] Asc Limit `6esn`[.0..$_usn3] Union Match (((:_usn4{_usn3:`1esn`[Null..]})-[`2esn`? *7]-(#usn8 :_usn3:@usn5{`3esn`:@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`],`4esn`:0e0 Is Null})<-[?:#usn8|:`6esn`*]->(@usn6 :@usn5{`8esn`:$@usn6 Contains 0e0}))),`6esn`=((`3esn` :`2esn`:@usn5)<-[usn2?:#usn8|:`6esn` *7]-(:@usn6)) Where 1000 Starts With 0x0 Return Extract(`3esn` In False In $`2esn` In 1e1 Where `` Contains 010 Contains $1000|@usn5['s_str'..$`2esn`])[`5esn`(0e0['s_str'])][None(`6esn` In 0x0[9e0..] Where 0xabc Is Not Null Is Not Null)] As @usn5 Order By {`6esn`:$1000 =~$`8esn` =~$`2esn`}[{_usn3:12.0[..0X7],usn2:$_usn3[0e0..][12.0..]}] Descending,All(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $usn2[12.0..][`8esn`..])[(`6esn` :`5esn`{`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})-[:@usn5|:@usn6 *01234567..123456789]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null})<-[?:`4esn`*]->(@usn5 :usn2{`3esn`:0.0 Ends With $usn1 Ends With $999,`5esn`:1.e1 Is Null Is Null})..] Desc Limit $12[`3esn`][`3esn`]"),
    octest:ct_string("Delete 0xabc[123.654][12],Single(`5esn` In $usn2 Contains $`1esn` Where _usn3[9e0..$123456789][0X7..999]) Contains {`2esn`:$`8esn`[`7esn`],`4esn`:#usn8[1e1..]},[_usn4 In 12.e12 Is Null Is Null|12.e12 Is Not Null][[9e1[$`3esn`][$`1esn`]]..`7esn`($123456789 =~usn1 =~0xabc,`1esn`[Null..])][(:usn2{usn1:_usn4[.._usn4],@usn6:@usn5 In .e0 In \"d_str\"})<-[? *..0X0123456789ABCDEF{usn2:123456789 Ends With 9e1 Ends With ``,`3esn`:9e0[123456789..0][12.0..@usn6]}]-({usn1:123456789[$_usn4..]})<-[?{``:$`6esn`[.e12]}]-(_usn4 :`2esn`:@usn5)..All(`3esn` In @usn6[..\"d_str\"][..01] Where 1.e1[$`7esn`])] Union Create ({_usn3:.12[usn1],_usn4:$usn1 Starts With Null Starts With $``})-[`3esn`]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5}) Create `5esn`=((`` :usn1:``{#usn7:$123456789[`4esn`..]})),`5esn`=((`1esn` {`7esn`:$7[`7esn`][123.654],@usn6:`1esn`[usn1]})-[:#usn7|`5esn`]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null})) Return *,.e12 =~\"d_str\" =~@usn5 Order By `4esn` In .12 In $#usn8 Ascending,010 Starts With 0X7 Ascending Skip (#usn8 :#usn8:#usn7)<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(`4esn` :`5esn`) Contains {_usn3:12.0 In 07,`2esn`:01234567[..`6esn`][..``]} Limit 0.0 =~$#usn7 =~`1esn`"),
    octest:ct_string("With  Extract(_usn4 In 12.e12 Is Null Is Null Where 010 =~0e0 =~9e1|0Xa =~0Xa =~`3esn`)[Any(`3esn` In 999 Where $#usn7[..$999][..9e1])..None(usn1 In 0xabc Is Not Null Is Not Null Where 123456789[..0])][[`6esn` In 0x0[9e0..]|0x0 =~@usn5 =~01]..(usn2 :_usn3:@usn5)<-[`5esn`?:`7esn`]-(`8esn` {`3esn`:Null Is Null Is Null})-[`6esn` *00]->(`2esn` :`5esn`{`1esn`:$@usn6 Ends With 0.0})],01 Is Null As #usn7,``[0X7..][$@usn6..] As #usn7 Order By 1000 Starts With `` Ascending Where 0x0 =~@usn5 =~01 Merge `8esn`=(`8esn` :@usn6)<-[ *7]-(@usn6 {`4esn`:$#usn7 =~usn2 =~`3esn`,_usn4:01 In 0.12 In .e12}) On Create Set _usn4+=Single(usn1 In 123.654 =~.e0 =~9e0 Where 7[$1000][1000])[(`7esn` {`8esn`:0 Is Null Is Null})<-[ *..0X0123456789ABCDEF{@usn6:`4esn` Is Not Null,`2esn`:@usn6[.0]}]-(`6esn` :usn2)][Single(`3esn` In False In $`2esn` In 1e1 Where True Contains .e1 Contains `2esn`)] Union Create usn1=({usn1:$7[$12]})<-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]-(#usn8 :#usn7{`2esn`:0.e0[.e12]})<-[:@usn6]->(:`7esn`$12) Merge (_usn3 :`1esn`:@usn6)<-[_usn3:@usn6]->({@usn6:`5esn`[0e0..],_usn4:$#usn8[0xabc..usn2]})-[_usn4 *0..]->(:#usn7{_usn3:7 Contains 1000 Contains $usn1}) On Create Set {usn1:$7[$12]}._usn4? =1000 =~$@usn5,Single(usn1 In 999 Where @usn6 Ends With 0.12 Ends With `3esn`).#usn7 =01 Ends With @usn6 Ends With $7 Optional Match `7esn`=((`6esn` {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})),`3esn`=(:`4esn`:usn2$``) Where 0x0 =~`5esn` =~$`8esn` Union All Detach Delete #usn7 Ends With 9e0 Merge `4esn`=(`7esn` {`2esn`:1.e1[#usn7][1.e1]})<-[`2esn`?:@usn6]->(`3esn` :`7esn`$`6esn`)<-[`6esn`?:`1esn`|@usn6 *0xabc..]-(:`7esn`{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc}) On Create Set usn1:_usn3:@usn5,@usn5:@usn6,`6esn`+=0.e0 Contains 9e1 Contains 9e0"),
    octest:ct_string("Return $1000 =~$`8esn` =~$`2esn` As `5esn` Limit @usn5 Ends With 1000 Optional Match ((({`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`})-[`1esn`?:`3esn`|_usn4*..]->(:#usn8:#usn7{`4esn`:0Xa Contains 0x0 Contains $#usn8})<-[:_usn3|`6esn`{``:`6esn`[`7esn`..$_usn3][9e0..#usn8],`8esn`:.0[01234567]}]->(`2esn` :`5esn`{@usn5:'s_str' Contains 999,`6esn`:1000[12.e12][#usn7]})))"),
    octest:ct_string("With Distinct *,9e0[12..$`8esn`] As _usn4 Order By $`1esn` =~`1esn` =~0X0123456789ABCDEF Desc,_usn4[7..$999] Ascending Skip Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 9e1 Contains _usn3) In [\"d_str\"[.0][9e0],0X7[0xabc][$1000]] Limit All(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]) In Single(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 1000 Starts With ``) Where $@usn5[$_usn3..Null]"),
    octest:ct_string("With Distinct All(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..]) In {_usn3:$@usn6 Contains `5esn` Contains .e12},(`5esn` {_usn3:1.e1 Is Null Is Null})<-[_usn3?:#usn7|`5esn` *..0x0]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})<-[?:@usn5|:@usn6]-(`7esn` {@usn6:.e0[123456789..][$`2esn`..],``:$0[`5esn`][9e12]})[`8esn`()..][[`7esn` In $`8esn`[0.12][12] Where 9e0[123456789..0][12.0..@usn6]]..] As #usn8,.12[...0] Skip $`6esn`[00] Limit (:_usn3:@usn5{_usn4:.e1[0X7..`2esn`]})<-[`5esn`?:`1esn`|@usn6{`5esn`:#usn8 =~$1000 =~$1000,`2esn`:0x0[$7]}]-(@usn5 {`2esn`:$#usn7[`7esn`..][$`8esn`..],`3esn`:0.12['s_str'..$0][$usn1..9e0]})[..`1esn`(.e12 Contains $usn2 Contains $@usn6)][..[#usn8 =~$1000 =~$1000,$`7esn`[`2esn`]]] Remove (@usn6 :`6esn`:`3esn`)<-[`5esn`?:`1esn`|@usn6{`5esn`:#usn8 =~$1000 =~$1000,`2esn`:0x0[$7]}]-(`8esn` {usn1:9e12 In 123.654 In True,`2esn`:True =~0 =~123456789})<-[usn1{`1esn`:`7esn` Contains .0 Contains #usn8}]->(_usn3 :`7esn`{#usn7:123.654 =~.e0 =~9e0,_usn3:`1esn`[Null..]}).`4esn`?,Extract(#usn8 In 0x0[_usn4..]|$`2esn` Is Not Null Is Not Null).`2esn`? Return $7 Ends With 12.e12 Ends With `1esn` As ``,$`2esn`[.._usn3] As usn1 Union All Delete {`5esn`:1e1 Ends With 's_str' Ends With $@usn6,`2esn`:.e0 Ends With $`1esn` Ends With 1000}[..{`3esn`:Count(*)[..$_usn3][..$usn2],_usn4:00['s_str']}][..{`7esn`:`6esn` In 0e0 In _usn4,#usn7:`4esn` =~`6esn`}],{`3esn`:.0 =~$@usn5 =~1.e1} =~Extract(_usn4 In 12.e12 Is Null Is Null Where $_usn4[False..@usn6][`4esn`..$1000]) Remove {`2esn`:9e0[$@usn6]}.`1esn` Delete \"d_str\"[0X7..``][@usn5.._usn4],0.12 Is Null Is Null,_usn3[$0] Union All Match ((:#usn8:#usn7{`8esn`:0Xa[Count(*)][0xabc]})<-[?:`7esn`{`1esn`:0.12 Is Null,@usn6:9e12[$123456789..$usn2]}]->({#usn8:$`` Is Not Null Is Not Null,`8esn`:$usn2 Starts With 9e1 Starts With `7esn`})<-[*{`6esn`:`6esn` In $``}]->(`7esn` :`8esn`{usn2:`5esn` =~``,`7esn`:`7esn` Is Not Null Is Not Null})),`3esn`=((`7esn` :``:`6esn`)<-[usn1]->(usn1 :usn2{#usn8:0.e0 Contains $1000 Contains 7})<-[`8esn`? *..0X0123456789ABCDEF{`2esn`:$``[$_usn4][$`3esn`]}]-(:`6esn`:`3esn`{`5esn`:$7[$12],`6esn`:#usn8 Is Not Null}))"),
    octest:ct_string("With Distinct *,0x0 In 0X0123456789ABCDEF As usn1,0e0[$123456789..$999][\"d_str\"..Null] Order By 999[..\"d_str\"] Ascending Skip Extract(`7esn` In $`8esn`[0.12][12] Where 0Xa[..9e12][...e0]|999 Ends With 123456789 Ends With 12.0) Is Not Null Is Not Null Limit 's_str'[..Null][..$`5esn`] Where 0.0[`7esn`][`6esn`] Unwind 0[$1000..9e12][Null..12e12] As `8esn` Union With  @usn5[01234567..] As `8esn` Limit Single(`3esn` In @usn6[..\"d_str\"][..01] Where 12[`5esn`..$`3esn`][0.12..usn2])[[`6esn` In 0x0[9e0..] Where $#usn8[0e0..][07..]|0 Is Not Null Is Not Null]..][(`6esn` :usn1:``)<-[``?:usn1|#usn7]-(@usn5 :`2esn`:@usn5{@usn6:123456789 =~#usn8 =~$0})..] Where 07['s_str'][$@usn6] Optional Match @usn5=(((:`1esn`:@usn6)<-[@usn5?:_usn4|_usn3 *1000..01234567]->({@usn6:$#usn8[0e0..][07..]})<-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}))) Return *,$0 Ends With .12,$`4esn` In 0x0 Order By 1.e1[0..] Ascending,`2esn`[``..] Ascending,$123456789 Is Not Null Ascending Skip 12.e12[`2esn`..7] Limit 999[..01234567][..7] Union All Detach Delete (_usn4 :_usn3:@usn5)<-[@usn6:`8esn`|@usn6{@usn6:#usn8 =~#usn7 =~0x0,`7esn`:$usn1 Ends With $`2esn`}]->(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[?:`6esn`]->(`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})[Any(`5esn` In $usn2 Contains $`1esn` Where @usn6[$usn1][$`2esn`])..][None(`3esn` In False In $`2esn` In 1e1 Where True Contains $`` Contains 01234567)..]"),
    octest:ct_string("Merge (((`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})<-[?:@usn5|:@usn6]->(#usn8 :#usn8:#usn7)-[#usn7?:`7esn` *..010]-(`1esn` {usn2:@usn5[$`1esn`..][$7..],@usn6:$#usn8[0xabc..usn2]}))) On Create Set `6esn`+=Count(*) Ends With 7 Ends With 0 On Match Set usn1 =Extract(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0|0[_usn3][.12]) Starts With (#usn8 :`8esn`)<-[`2esn`?:`3esn`|_usn4]-(#usn7 :`7esn`{`3esn`:$#usn8[..123456789][..`2esn`],#usn8:0.e0 Ends With #usn8})-[:`5esn`|:`1esn`]-(@usn5 :`5esn`) Merge ``=(((_usn3 :`1esn`:@usn6)<-[:@usn5|:@usn6 *01234567..123456789]->(`1esn` :`7esn`{`6esn`:1e1 In 12.e12})<-[``?:#usn8|:`6esn`{usn1:$#usn7[..$999][..9e1]}]->(`1esn` :`4esn`:usn2))) On Match Set #usn8+=0.e0 In `2esn`,`5esn`+=False[$_usn4..][`8esn`..],@usn6+=(usn1 {@usn5:12e12 Ends With `6esn`,_usn4:\"d_str\" Starts With _usn4 Starts With $_usn4})<-[?:#usn7|`5esn`{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}]->(@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})<-[?:`1esn`|@usn6]->(`6esn` :`2esn`:@usn5) Is Null On Match Set {`8esn`:$`6esn`[$`1esn`..]}._usn3? =False Contains Null Contains 1000,@usn5 =@usn5 =~False =~`8esn` Create ((:#usn8:#usn7{`8esn`:0Xa[Count(*)][0xabc]})<-[`2esn`?:`3esn`|_usn4]-(@usn5 :`5esn`)) Union All Optional Match (`4esn` :#usn8:#usn7),(({@usn6:$#usn8[0e0..][07..]})<-[? *12{`1esn`:.e0 Ends With $`1esn` Ends With 1000}]-(@usn5 :usn1:``{usn2:9e0[0..1e1]})) Where .12 Is Null Create ({usn1:$usn1 Starts With Null Starts With $``,@usn5:0x0[01234567..Null][0Xa...e12]})<-[{`4esn`:010 In $@usn5 In `5esn`,#usn7:$`7esn` Is Null Is Null}]-(:`3esn`{`1esn`:Count(*) Ends With $#usn8 Ends With 0Xa})"),
    octest:ct_string("Merge `7esn`=((@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})-[@usn5:#usn8|:`6esn`]->(:`7esn`$12)) On Match Set `1esn`+=Extract(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0|0[_usn3][.12]) Starts With (#usn8 :`8esn`)<-[`2esn`?:`3esn`|_usn4]-(#usn7 :`7esn`{`3esn`:$#usn8[..123456789][..`2esn`],#usn8:0.e0 Ends With #usn8})-[:`5esn`|:`1esn`]-(@usn5 :`5esn`),None(`3esn` In False In $`2esn` In 1e1 Where 01 Starts With $`5esn` Starts With 01234567)._usn3? =[`6esn` In 1000[12.e12][#usn7] Where 0X0123456789ABCDEF Is Not Null] Is Null Remove All(#usn8 In 0x0[_usn4..] Where 1000 Ends With $`5esn`).#usn7!,_usn4(usn2 =~`6esn`,False Starts With $123456789).`6esn`?,[`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $`2esn`[$``..12e12]].#usn7! With Distinct *,[`6esn` In .e0['s_str'..][$`8esn`..] Where $`7esn`[..$`8esn`]|$`8esn`[`7esn`]] Is Not Null Order By Filter(usn1 In 999 Where True[$usn1..12][``..\"d_str\"]) Is Null Is Null Descending Skip 9e0 Contains Null Limit [`5esn` Ends With 0x0,.e1 Ends With $123456789,$7[`7esn`][123.654]][..[0.e0 Contains $123456789 Contains 123456789,0 =~#usn8,False Starts With $123456789]][..Extract(`3esn` In False In $`2esn` In 1e1 Where 12e12 Ends With $_usn4 Ends With $`2esn`|0xabc Contains 0)] Where $`7esn` =~1.e1 =~0.e0 Union All Return \"d_str\" Starts With _usn4 Starts With $_usn4 As `5esn`,`7esn`[0.e0..False][0e0..$_usn4] As `1esn` Skip $`1esn` Is Not Null Is Not Null Detach Delete ``[0X7..][$@usn6..],{`3esn`:.0 =~$@usn5 =~1.e1} =~Extract(_usn4 In 12.e12 Is Null Is Null Where $_usn4[False..@usn6][`4esn`..$1000]),Extract(#usn8 In 07['s_str'][$@usn6] Where 7 =~$1000 =~$`5esn`|\"d_str\"[1.e1][01234567])[..(`6esn` :`1esn`:@usn6{#usn7:01234567 In \"d_str\"})<-[`1esn`?:`3esn`|_usn4 *01234567..123456789]->(#usn7 {#usn7:999 Contains $`7esn` Contains usn2})][..None(_usn4 In 12.e12 Is Null Is Null Where 9e1 =~$0)]"),
    octest:ct_string("Remove {`1esn`:$@usn6 Ends With 0.0}.`2esn`,Extract(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 9e0[0..1e1]|123.654[$`1esn`]).usn2!,All(`3esn` In @usn6[..\"d_str\"][..01] Where 0.e0 Ends With $123456789)._usn3 With  $usn2 Contains $1000 Contains @usn5 As #usn8,None(_usn4 In 12.e12 Is Null Is Null Where _usn4 In .0 In .12) Starts With {`4esn`:`8esn`[0x0..],usn2:$#usn8 =~7 =~.12} Starts With _usn3(Distinct usn1[$`1esn`..]) As #usn8,07[0..] Order By .e12[$_usn4..0] Desc Where 0x0[$7..][`7esn`..] Union All Detach Delete $@usn6 Is Not Null,$`7esn` Ends With $_usn4 Ends With `5esn`,12 Ends With 0 Ends With Null Return Distinct 12[$`3esn`..] As _usn4 Order By 0xabc =~01 Descending,#usn7(usn2 =~`6esn`) Is Null Is Null Desc,0Xa Contains $#usn8 Contains `5esn` Asc Limit ``[@usn6][9e0] Merge `2esn`=((@usn6 $_usn3)-[?:`8esn`|@usn6*{``:0.e0 Contains $123456789 Contains 123456789,`4esn`:#usn7 Is Not Null Is Not Null}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]})<-[ *..010]->(_usn4 :`3esn`{`2esn`:999})) On Create Set `8esn`+=$#usn7 Starts With $`1esn` Starts With 0.12,`8esn`+=$_usn4 =~0X7,@usn5+=$999[..0e0][..@usn6] On Match Set `7esn` =0xabc =~01,`5esn` =[usn1 In 123.654 =~.e0 =~9e0 Where False Starts With $123456789] Contains All(`6esn` In 1000[12.e12][#usn7] Where $`7esn`[..$`8esn`]) Contains [True,07 In Count(*),.e0['s_str'..][$`8esn`..]]"),
    octest:ct_string("Optional Match `2esn`=(@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8}),``=((:`5esn`{`7esn`:'s_str'[$#usn8],``:`1esn`[..$#usn7]})<-[``?:usn1|#usn7]-(@usn5 :`2esn`:@usn5{@usn6:123456789 =~#usn8 =~$0})) Where $usn1 Starts With Null Starts With $`` Union All Return Distinct `6esn` Is Null Order By $``[$_usn4][$`3esn`] Asc,0x0 In 0X0123456789ABCDEF Ascending,`7esn` =~12.e12 =~0e0 Desc Limit Filter(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $usn2[12.0..][`8esn`..]) Ends With [usn1[..$123456789][..`1esn`],0e0 Is Not Null] Ends With [0 Contains $@usn5,False Contains $`1esn` Contains @usn6] Union All Optional Match `4esn`=({_usn3:.e12 =~\"d_str\" =~@usn5}),`5esn`=({usn1:0X7[0xabc][$1000]}) Where $999[@usn5..][Null..] Unwind {@usn6:$12[#usn8..$@usn5][9e0..usn1]} =~Any(usn1 In 999 Where 07['s_str'][$@usn6]) =~(usn2 {`4esn`:$123456789 Ends With 12e12})<-[_usn4:`4esn` *..0x0{`3esn`:$7[$12]}]->(:@usn6$_usn3) As `2esn` Create ((@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]})-[? *0xabc..{`3esn`:.e12[$_usn4..0],usn1:00[$0..usn2][$_usn4..$999]}]->(@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]})<-[_usn3:`3esn`|_usn4 *0Xa]-({`4esn`:Count(*)[..$_usn3][..$usn2]})),_usn4=(({usn2:$`3esn`[9e0..0.0][_usn4..123456789]}))"),
    octest:ct_string("Detach Delete Filter(`6esn` In 1000[12.e12][#usn7] Where 01 Starts With $`5esn` Starts With 01234567)[[0.12['s_str'..$0][$usn1..9e0]]..All(`3esn` In 999 Where 07 Ends With $_usn4 Ends With 0.e0)][Filter(`3esn` In 999 Where $0 Contains 7 Contains 1.e1)..Extract(`3esn` In @usn6[..\"d_str\"][..01] Where 1.e1[$`7esn`]|01234567[9e0][.0])],0.12[$`3esn`..1000][$`2esn`..01234567]"),
    octest:ct_string("Optional Match ((#usn7 :`3esn`)<-[`1esn`?:`3esn`|_usn4 *01234567..123456789]->(#usn7 {#usn7:999 Contains $`7esn` Contains usn2})),`7esn`=((`6esn` {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})) Where 12.0[..0X7] Detach Delete 010 Is Null,$`5esn` Contains $usn2,0.e0 Starts With $`6esn` Create usn2=((({@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})-[?:`2esn`|:`7esn` *0X7..0x0{usn2:0.12 Contains 0x0 Contains @usn5,_usn3:.e12 Contains $usn2 Contains $@usn6}]-(:`2esn`:@usn5{`4esn`:_usn3 =~$12,_usn4:.e1 =~usn2 =~`7esn`})-[`6esn` *00]-(:`8esn`{@usn5:1000 Starts With 0e0 Starts With 0,#usn7:$`5esn`[`4esn`..$`2esn`]}))),`6esn`=((:usn1:``{_usn4:1000[12.e12][#usn7]})) Union Return Distinct 0X0123456789ABCDEF Is Null,0xabc Is Not Null As #usn7,`6esn`(1000[12.e12][#usn7],0x0 =~`5esn` =~$`8esn`) Is Null Skip \"d_str\" Ends With $1000 Ends With usn2 Merge `8esn`=(`8esn` :@usn6)<-[ *7]-(@usn6 {`4esn`:$#usn7 =~usn2 =~`3esn`,_usn4:01 In 0.12 In .e12}) On Create Set _usn4+=Single(usn1 In 123.654 =~.e0 =~9e0 Where 7[$1000][1000])[(`7esn` {`8esn`:0 Is Null Is Null})<-[ *..0X0123456789ABCDEF{@usn6:`4esn` Is Not Null,`2esn`:@usn6[.0]}]-(`6esn` :usn2)][Single(`3esn` In False In $`2esn` In 1e1 Where True Contains .e1 Contains `2esn`)] Detach Delete $1000 =~.e12 =~0.e0,`2esn` Is Not Null Is Not Null,False[...e0][..$#usn8]"),
    octest:ct_string("With Distinct @usn6 In [00[0X7..9e12]] In Single(`3esn` In False In $`2esn` In 1e1 Where 's_str' Ends With $7),{usn1:False[$12],`1esn`:0.e0 Ends With $123456789} Contains `2esn`(Distinct 01234567[`6esn`..],Count(*) Ends With $#usn8 Ends With 0Xa) As _usn3,[`7esn` In $`8esn`[0.12][12] Where 's_str'[$#usn8]][None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1)..(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})-[``?:@usn6]->({``:_usn3[9e0..$123456789][0X7..999]})][[$#usn8 =~7 =~.12,$`6esn`[.e12],_usn4 Starts With `6esn` Starts With $`8esn`]..{usn2:123.654[.e12..\"d_str\"]}] Union All Remove {@usn6:.e0[123456789..][$`2esn`..],``:$0[`5esn`][9e12]}.usn1?,All(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where .0 =~$@usn5 =~1.e1).`4esn`?"),
    octest:ct_string("Unwind Filter(`5esn` In 1e1 =~$`8esn` =~`1esn` Where #usn7 In #usn7)[Single(`3esn` In 999 Where $123456789 =~usn1 =~0xabc)..] As #usn8 Union All Match `1esn`=((:#usn7{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]})),(((:#usn7{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})-[{usn1:Count(*)[..12][..$999],#usn8:usn1 In 010}]->(:`7esn`{#usn8:12e12 Ends With `6esn`,_usn4:0Xa Contains $#usn8 Contains `5esn`})-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]->(_usn3 {`3esn`:$@usn5 Is Not Null Is Not Null}))) Where 123456789 Starts With #usn8 Detach Delete $#usn7[$`3esn`..$999],`5esn` In 12.e12 In 1000,Filter(`6esn` In 0x0[9e0..] Where $123456789 In 010 In $`8esn`) In ``(Distinct 0X0123456789ABCDEF In _usn3) In (_usn3 {usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`4esn`:1.e1 Is Null Is Null})-[`1esn`?:`1esn`|@usn6 *12]->(`8esn` :@usn6)"),
    octest:ct_string("Detach Delete `2esn` Ends With Null Ends With 0xabc,$7 Ends With 12.e12 Ends With `1esn`,Single(`6esn` In 0x0[9e0..] Where $`3esn` Is Not Null) In (`3esn` :`8esn`{usn2:0e0 =~False =~.12})-[? *12{`1esn`:.e0 Ends With $`1esn` Ends With 1000}]->(#usn7 ) Remove [1.e1 Is Not Null Is Not Null,`3esn` Is Not Null Is Not Null].@usn6?,{`6esn`:0[_usn3][.12],@usn6:False[...e0][..$#usn8]}.``?,`4esn`:#usn8:#usn7 Detach Delete 0Xa In $`2esn` In `8esn` Union Merge (({`7esn`:999,#usn8:01 Starts With $`5esn` Starts With 01234567})<-[`5esn`? *..0x0{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]->(:`7esn`$12)) On Match Set _usn3.#usn7! =$`5esn` Ends With `6esn` Ends With 0x0 On Match Set `1esn` =9e1[$#usn8],#usn7 =`8esn` Is Not Null Union All With Distinct *,`1esn` As `2esn`,$123456789[`1esn`..][`7esn`..] Skip ({`7esn`:$@usn5 =~$usn2 =~True,_usn3:00[$0..usn2][$_usn4..$999]})-[`3esn`]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5})<-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]})[{usn1:$`5esn`[.e1][#usn8],_usn3:12e12 Ends With `6esn`}] Where $`7esn` =~1.e1 =~0.e0"),
    octest:ct_string("Unwind {#usn7:0.e0 Contains @usn5 Contains 0X7} =~[$999[01234567][@usn5],_usn4 In .0 In .12,$#usn8[1.e1]] =~{_usn4:$`2esn` Ends With 1e1} As `5esn` Delete 0x0 In 0X0123456789ABCDEF Merge (#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})<-[`8esn`?:usn2|:``*]->(#usn8 :@usn5{`8esn`:$0[`5esn`][9e12]})-[`6esn`:#usn8|:`6esn` *..0x0{`8esn`:0 =~#usn8,`6esn`:@usn5 Is Null}]->({@usn6:$@usn5 =~$usn2 =~True,`4esn`:$#usn8 =~7 =~.12}) On Match Set `3esn`+=#usn8"),
    octest:ct_string("Detach Delete $1000 =~.e12 =~0.e0,`2esn` Is Not Null Is Not Null,False[...e0][..$#usn8] Optional Match ((#usn8 :_usn3:@usn5{`3esn`:@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`],`4esn`:0e0 Is Null})) Where 12.e12 Contains 's_str' Contains 0.12 Match (`5esn` :#usn7)-[`5esn`?:@usn5|:@usn6 *7{`2esn`:$`8esn`[0.12][12],`6esn`:`` Contains $_usn3 Contains 0e0}]-(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]}),(:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`}) Where _usn4[.._usn4] Union All With Distinct *,.e12 Contains `7esn` Contains 999 As ``,`8esn`[9e12] Where $#usn7 =~usn2 =~`3esn`"),
    octest:ct_string("Detach Delete ``[0X7..][$@usn6..],{`3esn`:.0 =~$@usn5 =~1.e1} =~Extract(_usn4 In 12.e12 Is Null Is Null Where $_usn4[False..@usn6][`4esn`..$1000]),Extract(#usn8 In 07['s_str'][$@usn6] Where 7 =~$1000 =~$`5esn`|\"d_str\"[1.e1][01234567])[..(`6esn` :`1esn`:@usn6{#usn7:01234567 In \"d_str\"})<-[`1esn`?:`3esn`|_usn4 *01234567..123456789]->(#usn7 {#usn7:999 Contains $`7esn` Contains usn2})][..None(_usn4 In 12.e12 Is Null Is Null Where 9e1 =~$0)] Unwind Any(`6esn` In 0x0[9e0..] Where $`3esn` Is Not Null)[None(`6esn` In 1000[12.e12][#usn7] Where `4esn` In $`2esn` In @usn5)..[0x0 Contains .0]] As @usn5 Create (((@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})-[:`8esn`|@usn6*..]->(#usn8 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})-[? *..0X0123456789ABCDEF]-(@usn5 {@usn6:$123456789[12.0],#usn7:usn1 =~_usn4 =~$usn1}))),`7esn`=(((:`3esn`{#usn7:_usn3 =~$12})-[`7esn`? *123456789..]-(:`2esn`:@usn5{#usn8:$usn2 Starts With 9e1 Starts With `7esn`})-[ *..0X0123456789ABCDEF{@usn6:`4esn` Is Not Null,`2esn`:@usn6[.0]}]->(`` :usn1:``{@usn6:010[`1esn`..`4esn`]}))) Union Return *,`8esn`(Distinct 0xabc Contains 0,0.12 Is Null)[..[`4esn` Ends With 's_str' Ends With @usn6]][..[$`3esn` Is Null,.12[usn1]]] As usn2 Limit 0xabc[.12..][#usn8..] Union Unwind [999 Is Not Null,\"d_str\" Starts With _usn4 Starts With $_usn4,@usn5[01234567..]] Contains Any(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where #usn7 In #usn7) As `4esn` Merge ((:@usn5{``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]})<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(`4esn` :`5esn`)<-[?:@usn5|:@usn6]-({`1esn`:$`7esn` Ends With $_usn4 Ends With `5esn`}))"),
    octest:ct_string("Optional Match ((:`5esn`{`7esn`:0Xa[Count(*)][0xabc],`2esn`:`4esn` Ends With 's_str' Ends With @usn6})<-[`8esn`?:usn1|#usn7 *01..7{usn1:123456789[$_usn4..]}]-(@usn5 :`2esn`:@usn5$#usn8)-[`4esn`?:#usn8|:`6esn` *999{`8esn`:010[`1esn`..`4esn`]}]-({@usn5:07[0..],`8esn`:Count(*)[..$_usn3][..$usn2]})) Where $`8esn`[`7esn`] Optional Match (#usn8 :`6esn`:`3esn`),(({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})) Detach Delete $`7esn` =~1.e1 =~0.e0,$``[$_usn4][$`3esn`],usn2[Count(*)][$`1esn`] Union With Distinct [$999[@usn5..][Null..]] Ends With ({usn2:0Xa Contains $`6esn`,_usn3:\"d_str\" Ends With $`3esn`})-[@usn5? *00{@usn5:usn1 Ends With 1.e1 Ends With `4esn`}]-(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})-[:`5esn`|:`1esn`]-(`2esn` ) As `7esn`,00[0X7..9e12] As #usn8 Order By 00 =~999 =~07 Asc,None(`6esn` In 1000[12.e12][#usn7] Where 9e12[\"d_str\"]) Ends With None(`6esn` In 1000[12.e12][#usn7] Where usn1[9e1..]) Ends With [`5esn` In 12.e12 In 1000,False In $`2esn` In 1e1] Descending,.e0 =~$1000 Ascending Limit {`7esn`:01234567[9e0][.0],`2esn`:999 Ends With $`4esn`}[`4esn`(.12 In 01234567 In _usn4,12.0[9e12]['s_str'])..] Where .e0 Contains 999 Merge @usn5=(`` :_usn3:@usn5) On Match Set `6esn`:@usn5,Single(`7esn` In $`8esn`[0.12][12] Where 01 Is Null).`8esn` =Single(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]) Starts With (:usn1:``{_usn4:1000[12.e12][#usn7]})-[ *7{`4esn`:$#usn7[$`3esn`..$999],`8esn`:$0[00..]}]-({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]}) Starts With {`1esn`:`5esn` In 12.e12 In 1000,`3esn`:0Xa Contains $`6esn`},`5esn` =010 Starts With 0X7 On Create Set `` =usn1 Is Null Is Null Union All Detach Delete $999 Contains 12e12"),
    octest:ct_string("Merge _usn3=(((:#usn8:#usn7{#usn7:$`7esn`[`2esn`]})-[`2esn`?]->(:`3esn`)<-[:@usn5|:@usn6{#usn7:0.12 Is Null Is Null,@usn6:12e12 Ends With $_usn4 Ends With $`2esn`}]-(:@usn6{`8esn`:.0[..False]}))) With Distinct *,$usn1[12e12] As #usn7,Count(*) Starts With 01234567 Starts With 0x0 As `1esn` Order By .12[0X0123456789ABCDEF..] Descending Limit 0.e0 Contains 9e1 Contains 9e0 Where 0Xa[..1.e1] With  \"d_str\"[0X7..``][@usn5.._usn4] As _usn3 Skip 00[\"d_str\"][False]"),
    octest:ct_string("Return Distinct 12.0 Is Null Skip Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 9e0[0..1e1]) Contains Any(`3esn` In 999 Where $`7esn`[`2esn`]) Limit 7[.0..01] With Distinct 999[..\"d_str\"] Order By $`5esn`[$usn1..usn1][\"d_str\"...e12] Desc,1.e1[#usn7][1.e1] Descending,$@usn5[All(`3esn` In @usn6[..\"d_str\"][..01] Where .12 Is Not Null Is Not Null)..] Descending Remove ({`4esn`:Count(*)[..$_usn3][..$usn2]})<-[`3esn`? *..010{`6esn`:$123456789[..$usn2],`7esn`:$_usn4 =~0X7}]-(#usn7 {@usn5:$`5esn` Contains $usn2}).#usn7?,[`2esn` In $``[$#usn8] Where \"d_str\" =~_usn3 =~0.0].`8esn` Union All Merge #usn8=(`` :`8esn`{`5esn`:True Contains .e1 Contains `2esn`}) On Create Set _usn4 =All(usn1 In 0xabc Is Not Null Is Not Null Where .12[..07])[..[`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $usn2[12.0..][`8esn`..]|$7[`7esn`][123.654]]][..Any(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1e1 Contains 0Xa)] Union All Match ((_usn3 :`6esn`:`3esn`{`7esn`:1000 Ends With 01234567 Ends With usn1})-[usn2?:_usn4|_usn3{#usn8:12.0[`3esn`][_usn3]}]-(usn2 :`4esn`:usn2{`3esn`:@usn5[$`1esn`..][$7..]})<-[usn2:`3esn`|_usn4]-(usn2 :@usn6{@usn5:#usn8[True..#usn7][01..@usn5]})),`6esn`=((:`7esn`{`8esn`:'s_str'[$#usn8]})-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})<-[usn2?:#usn8|:`6esn` *7]-(:@usn6)) Detach Delete [`2esn` In $#usn8 Starts With usn2 Starts With .12 Where .0 =~$@usn5 =~1.e1][Any(`3esn` In 999 Where $`5esn`[.e1][#usn8])..Single(`5esn` In $usn2 Contains $`1esn` Where $#usn8[..123456789][..`2esn`])][count($usn1 Starts With Null Starts With $``)..`3esn`(Distinct 7[$1000][1000])],$999[010..]"),
    octest:ct_string("With  {@usn5:$`2esn` Ends With 1e1,usn1:'s_str'[$`6esn`..][$0..]} Is Null,({`7esn`:`4esn` In $`2esn` In @usn5})-[:`1esn`|@usn6*..]->(:`8esn`{`8esn`:0X7 Contains 12.0,`3esn`:`4esn` Starts With `8esn`})<-[`4esn` *123456789..]-(:`7esn`$#usn8)[#usn7($123456789[`1esn`..][`7esn`..],$123456789 =~0e0)][[usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1]] As #usn8 Order By @usn6 Starts With #usn8 Starts With $#usn7 Descending,Null[9e1][$`6esn`] Ascending,9e0[$`4esn`] Ascending Skip `3esn` Is Not Null Is Not Null Where .e1[0X7..`2esn`]"),
    octest:ct_string("Optional Match `1esn`=((:`4esn`:usn2$`7esn`)<-[_usn3:`3esn`|_usn4]->(_usn3 :`4esn`:usn2)) Where .12[0X0123456789ABCDEF..]"),
    octest:ct_string("Create `6esn`=(({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})-[`6esn`:`7esn` *7{`6esn`:`6esn` In $``}]-(`` :_usn3:@usn5)<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]-({``:0.12 Contains 0x0 Contains @usn5})),`8esn`=((:@usn5{#usn7:0x0 In 0X0123456789ABCDEF,`2esn`:0Xa[Count(*)][0xabc]})<-[usn1:#usn8|:`6esn` *0xabc..]->(`8esn` :`1esn`:@usn6)<-[`1esn`?:`3esn`|_usn4{_usn4:12e12 Ends With $_usn4 Ends With $`2esn`,``:.12 Is Not Null}]-(:`1esn`:@usn6{`5esn`:.e12[$_usn4..0],`4esn`:$#usn8 In True In #usn7})) Union With Distinct *,`1esn`[usn1] As `4esn`,[`7esn` In $`8esn`[0.12][12] Where 's_str'[$#usn8]][None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1)..(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})-[``?:@usn6]->({``:_usn3[9e0..$123456789][0X7..999]})][[$#usn8 =~7 =~.12,$`6esn`[.e12],_usn4 Starts With `6esn` Starts With $`8esn`]..{usn2:123.654[.e12..\"d_str\"]}] Order By @usn6(_usn4[.._usn4],00[$@usn5][0X7]) =~Extract(`3esn` In False In $`2esn` In 1e1 Where $`` Starts With 0x0|0.12 Is Null Is Null) =~Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null|True =~0 =~123456789) Ascending,@usn6 Contains $_usn3 Contains 12.0 Descending Limit $`6esn`[$0] Optional Match (((#usn8 :`3esn`)<-[? *..0X0123456789ABCDEF{usn2:123456789 Ends With 9e1 Ends With ``,`3esn`:9e0[123456789..0][12.0..@usn6]}]-(@usn6 $_usn3)<-[``?:#usn8|:`6esn`{usn1:$#usn7[..$999][..9e1]}]->(`3esn` {#usn8:True[7][``]}))) Where 0[_usn3][.12] Remove [usn1 =~`2esn`,$123456789[..$`7esn`][..\"d_str\"]].usn2?"),
    octest:ct_string("Delete (`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`` ) Contains (_usn4 {@usn6:0.e0 Contains $1000 Contains 7})-[?:`` *999{`7esn`:Count(*)[..`5esn`],`2esn`:.e12[..$_usn4][..#usn7]}]-({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]}) Contains Single(`7esn` In $`8esn`[0.12][12] Where .e0[123456789..][$`2esn`..]) Unwind [01[..0X7],0 =~#usn8,$``[$_usn4][$`3esn`]] As `5esn` Union All Unwind `6esn`[.._usn3][..0Xa] As _usn3 Merge (:@usn5{#usn7:0x0 In 0X0123456789ABCDEF,`2esn`:0Xa[Count(*)][0xabc]})-[{usn1:Count(*)[..12][..$999],#usn8:usn1 In 010}]->(`1esn` :`8esn`) On Create Set _usn4+=$_usn4 =~0X7 On Create Set #usn8 =Extract(`5esn` In $usn2 Contains $`1esn` Where Count(*)[_usn3..])[..None(`5esn` In $usn2 Contains $`1esn` Where `3esn` Is Not Null Is Not Null)][..Extract(#usn8 In 07['s_str'][$@usn6] Where True)]"),
    octest:ct_string("Delete 1e1 Contains @usn5 Contains 12.e12,\"d_str\"[7..$999] Union All Return 7 Contains 1000 Contains $usn1 Order By \"d_str\" =~_usn3 =~0.0 Desc,$usn2[`6esn`..] Asc Skip 0.e0 Ends With $123456789 Limit `7esn`(Distinct Count(*)[$1000..01],`7esn`[`8esn`][#usn7]) Is Not Null With Distinct [`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where @usn6[.0]] Ends With (`1esn` :`7esn`)<-[_usn3]-(`6esn` :`8esn`)-[`2esn`? *7]->(@usn6 :_usn3:@usn5) Ends With Filter(`6esn` In .e0['s_str'..][$`8esn`..] Where Null In 0xabc) Order By `5esn` In $usn1 In `4esn` Desc Skip `7esn`(.e0 =~7 =~False,010 Is Null Is Null) Starts With [$_usn4 =~0X7,`4esn`,0.0 Ends With $usn1 Ends With $999] Starts With {@usn5:Count(*)[..$_usn3][..$usn2],@usn5:$1000[$usn1][.e1]}"),
    octest:ct_string("Create (((#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]})<-[? *..010{#usn8:$usn1[usn1..$`8esn`][12e12..$``],usn1:'s_str' Ends With $7}]->({@usn6:#usn8 =~#usn7 =~0x0,`7esn`:$usn1 Ends With $`2esn`})<-[`8esn`?:usn1|#usn7 *01..7{usn1:123456789[$_usn4..]}]-(usn1 :`6esn`:`3esn`{`2esn`:`` In 123.654 In 0.0,usn2:#usn7 In #usn7}))),@usn6=(`8esn` :#usn7)-[ *0xabc..{``:0xabc =~01,`7esn`:$#usn7[123456789..][$`4esn`..]}]-(:#usn7{_usn3:7 Contains 1000 Contains $usn1})-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :`5esn`) Union All Delete 1000[Null][$`7esn`],0x0 Is Not Null,False In 1.e1 In $12 Detach Delete 010[0e0][0xabc],$`6esn`[.e12..$`6esn`][$#usn7...0] Optional Match #usn8=(`` :`8esn`{`5esn`:True Contains .e1 Contains `2esn`}),_usn3=((@usn6 :#usn8:#usn7{``:Null Is Not Null Is Not Null})<-[`2esn`?:`5esn`|:`1esn`]->($1000)-[`6esn`? *999{_usn4:\"d_str\" Contains $999 Contains `2esn`}]-(`1esn` {_usn3:12.0 In 07,`2esn`:01234567[..`6esn`][..``]})) Union All Unwind (`4esn` )<-[?:usn2|:``{_usn3:.e1 Ends With $123456789}]-(`4esn` {#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})-[{#usn7:`2esn`[`3esn`..],@usn5:12.0[..0X7]}]->({`7esn`:999,#usn8:01 Starts With $`5esn` Starts With 01234567})[{`7esn`:1000 Ends With 01234567 Ends With usn1}..{usn1:_usn4 Starts With `6esn` Starts With $`8esn`,`2esn`:0.12[$usn1..$7]}][All(`6esn` In .e0['s_str'..][$`8esn`..] Where $0[`5esn`][9e12])..usn1(Distinct $1000[00..],0Xa[..$`2esn`][..00])] As `8esn` With  *,.0[01234567] As `2esn`,Extract(`2esn` In $``[$#usn8] Where `1esn`[Null..])[[12.0[`3esn`][_usn3]]] As @usn6 Skip `7esn`[7..$123456789][$0..$7] Where $`4esn` In 0x0"),
    octest:ct_string("With Distinct `7esn`[..$`5esn`] As ``,[#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]][Filter(`2esn` In $``[$#usn8] Where 01234567[`6esn`..])..][[`3esn` In False In $`2esn` In 1e1 Where .12 =~$#usn7 =~$``|01234567 Is Null]..] As usn1,_usn3 =~010 As usn1 Create usn2=((@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})),@usn6=((_usn4 :`3esn`{`2esn`:999})-[`5esn`?:@usn5|:@usn6 *7{`2esn`:$`8esn`[0.12][12],`6esn`:`` Contains $_usn3 Contains 0e0}]-(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]})) Union All Merge `2esn`=(usn2 :@usn6{@usn5:#usn8[True..#usn7][01..@usn5]}) On Create Set {`8esn`:`7esn` =~12.e12 =~0e0}.``! =$`6esn`[00],[0Xa[.e12..],`5esn`[$7..01]].usn1 =Any(#usn8 In 0x0[_usn4..] Where $`` Starts With 0x0) In [usn1 In 123.654 =~.e0 =~9e0 Where $7 Ends With 12.e12 Ends With `1esn`],@usn6 =$_usn3[0.0][$@usn6] On Match Set `1esn`+=All(`5esn` In $usn2 Contains $`1esn` Where Count(*)[_usn3..]) =~Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) =~[$#usn8 =~7 =~.12,$`6esn`[.e12],_usn4 Starts With `6esn` Starts With $`8esn`],[`3esn` In 999 Where `7esn`[`8esn`][#usn7]|False[$12]].``! ={@usn6:$7 Ends With 12.e12 Ends With `1esn`,`8esn`:$usn2 Contains $`1esn`} =~Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where \"d_str\"[..$_usn3]) =~[`7esn` In $`8esn`[0.12][12] Where usn1 In 010|@usn6[$usn1][$`2esn`]] Delete ['s_str' =~$`4esn` =~@usn5,\"d_str\" Ends With $`3esn`] Starts With Extract(`3esn` In 999|0 Is Null Is Null) Starts With [$_usn4 =~0X7,`4esn`,0.0 Ends With $usn1 Ends With $999]"),
    octest:ct_string("With  `4esn` Is Null Is Null As `4esn`,(`2esn` {_usn3:.e1 Ends With $123456789})<-[?{usn2:9e0[0..1e1]}]->({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})[Any(`6esn` In .e0['s_str'..][$`8esn`..] Where Null In 0xabc)..Filter(usn1 In 123.654 =~.e0 =~9e0 Where Count(*) Contains 12e12 Contains 0xabc)][[$`` Is Not Null Is Not Null,$#usn7[9e12..12],`7esn` Is Null Is Null]..Extract(`5esn` In $usn2 Contains $`1esn` Where \"d_str\" Contains $999 Contains `2esn`|.e12[``][$1000])] As usn1,$`4esn` In 0x0 Limit [#usn7[@usn6..]] In All(#usn8 In 0x0[_usn4..] Where 0xabc[123.654][12]) In All(usn1 In 999 Where `5esn` Ends With $999) Remove {@usn6:$usn1 Is Not Null Is Not Null,`7esn`:0x0 In 0X0123456789ABCDEF}.@usn5 Unwind [`5esn` Ends With 0x0,.e1 Ends With $123456789,$7[`7esn`][123.654]][..[0.e0 Contains $123456789 Contains 123456789,0 =~#usn8,False Starts With $123456789]][..Extract(`3esn` In False In $`2esn` In 1e1 Where 12e12 Ends With $_usn4 Ends With $`2esn`|0xabc Contains 0)] As `4esn`"),
    octest:ct_string("With  Any(`7esn` In $`8esn`[0.12][12] Where usn1 In 010) As `6esn` Order By 0 Asc,Filter(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1)[Extract(usn1 In 123.654 =~.e0 =~9e0 Where _usn3[0Xa..])..][{`4esn`:$123456789 =~usn1 =~0xabc,_usn4:True}..] Asc Where #usn8[True..#usn7][01..@usn5] Union All Detach Delete 0Xa Contains $`6esn`,01[#usn8..1000],$#usn8 Is Null Is Null Merge usn2=(((`` :usn1:``{#usn7:$123456789[`4esn`..]})<-[@usn5?{`7esn`:`6esn` In $``}]->(usn1 {_usn3:#usn7 Ends With 0.12})<-[? *123456789..{`7esn`:.e12 =~@usn5,`3esn`:`5esn`[0e0..]}]-(`4esn` ))) On Match Set @usn6+=Single(`3esn` In @usn6[..\"d_str\"][..01] Where 12[`5esn`..$`3esn`][0.12..usn2])[[`6esn` In 0x0[9e0..] Where $#usn8[0e0..][07..]|0 Is Not Null Is Not Null]..][(`6esn` :usn1:``)<-[``?:usn1|#usn7]-(@usn5 :`2esn`:@usn5{@usn6:123456789 =~#usn8 =~$0})..],usn1+=Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 123.654 Is Not Null Is Not Null)[{usn1:$7[$12]}][Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where \"d_str\"[..$_usn3])] Union All Return *,[0e0 Is Null,#usn7 Ends With 9e0,$7[`7esn`][123.654]][{_usn3:0e0 =~False =~.12,`3esn`:`` Contains .e1 Contains 9e12}][{_usn3:$#usn8[0xabc..usn2]}] As ``,[`6esn` In 1000[12.e12][#usn7] Where 0X0123456789ABCDEF Is Not Null] Is Null Order By [`6esn` In 1000[12.e12][#usn7] Where 0X0123456789ABCDEF Is Not Null] Is Null Desc,0.e0 Starts With $`6esn` Descending,0xabc Ends With Count(*) Ends With 0x0 Descending Skip Single(`5esn` In $usn2 Contains $`1esn` Where True Contains .e1 Contains `2esn`) In None(`3esn` In False In $`2esn` In 1e1 Where #usn7[.12][usn2]) Limit 01234567[..`6esn`][..``] Merge ((`4esn` {_usn4:$`2esn`[$``..12e12]})<-[`1esn`?:`3esn`|_usn4{_usn4:12e12 Ends With $_usn4 Ends With $`2esn`,``:.12 Is Not Null}]-(:`1esn`:@usn6{`5esn`:.e12[$_usn4..0],`4esn`:$#usn8 In True In #usn7})<-[?:usn1|#usn7 *0Xa]->(`1esn` :usn2{`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]})) On Create Set `4esn` =`6esn` Is Null On Match Set (usn1 :usn2{#usn8:0.e0 Contains $1000 Contains 7})<-[?:usn2|:`` *7]->(`` :_usn3:@usn5).`6esn`? =`5esn` =~`` Remove Null.`7esn`?,None(`6esn` In .e0['s_str'..][$`8esn`..] Where 0.12[123456789..]).`4esn`,[$`2esn` Ends With 1e1,07[0..]].``!"),
    octest:ct_string("Merge (`2esn` :`5esn`{`1esn`:$@usn6 Ends With 0.0})<-[`1esn`?:_usn4|_usn3]->(:#usn8:#usn7{`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]})-[@usn5:usn1|#usn7{`7esn`:True Ends With `6esn` Ends With 9e0,`8esn`:0e0 Is Null}]->({`1esn`:$#usn7[$`3esn`..$999]}) Create (`5esn` :`8esn`{`1esn`:`7esn` Contains .0 Contains #usn8})<-[?{usn2:9e0[0..1e1]}]->({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})-[?{`4esn`:1000 Ends With $`5esn`}]->(`1esn` :`7esn`),(_usn4 {`4esn`:01234567[..00][..$`3esn`],usn1:00[\"d_str\"][False]}) Remove [9e0[123456789..0][12.0..@usn6],`8esn` Ends With $`1esn`,usn1[9e1..]].usn1,@usn5:``:`6esn`,(@usn6 :``:`6esn`{#usn7:$#usn7[9e12..12],@usn5:@usn6 Starts With #usn8 Starts With $#usn7})<-[? *..0X0123456789ABCDEF{#usn8:0X7[..`5esn`][..$`7esn`]}]->(usn1 :`2esn`:@usn5{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc}).`5esn`? Union All Return Distinct *,None(`3esn` In False In $`2esn` In 1e1 Where .0[@usn6..]) Is Null Is Null,$12[#usn8..$@usn5][9e0..usn1] As `5esn` Order By (:`4esn`:usn2$``)-[`5esn`?:_usn4|_usn3{@usn5:7 =~False,_usn3:999 Ends With $`4esn`}]->(usn2 :``:`6esn`)<-[_usn3:`3esn`|_usn4]->(#usn7 :_usn4) Is Not Null Descending Return Distinct *,{#usn8:.e0 Ends With $`1esn` Ends With 1000}[Filter(#usn8 In 07['s_str'][$@usn6] Where $12[0.0..])][Filter(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..])] As `4esn` Order By [usn1 In 123.654 =~.e0 =~9e0 Where $@usn5[$_usn3]|$`2esn` Ends With 1e1] Contains All(#usn8 In 0x0[_usn4..] Where 0xabc[123.654][12]) Descending,Extract(usn1 In 999 Where 1e1 =~$`8esn` =~`1esn`|7 Starts With $@usn6) Is Not Null Is Not Null Desc Skip $`2esn` Ends With 1e1 Match (((`2esn` :_usn4{`7esn`:`2esn`[`3esn`..],`6esn`:.12 Is Not Null})<-[`1esn`?:`3esn`|_usn4*..]-(:`6esn`:`3esn`{`3esn`:123.654[0Xa..0x0][.12..12e12]})-[?:`8esn`|@usn6*{``:0.e0 Contains $123456789 Contains 123456789,`4esn`:#usn7 Is Not Null Is Not Null}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]}))) Union All Create (:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`})"),
    octest:ct_string("Unwind $`8esn` Ends With #usn8 As _usn3 Create `3esn`=(($_usn3)) Match ({@usn6:#usn8 =~#usn7 =~0x0,`7esn`:$usn1 Ends With $`2esn`})<-[?:usn1|#usn7 *0Xa]->(:`3esn`{`7esn`:12.e12[.12..$_usn3][0e0..9e0],`7esn`:0X7[..True][..01234567]}),((`4esn` {_usn4:$`2esn`[$``..12e12]})<-[`1esn`?:`3esn`|_usn4{_usn4:12e12 Ends With $_usn4 Ends With $`2esn`,``:.12 Is Not Null}]-(:`1esn`:@usn6{`5esn`:.e12[$_usn4..0],`4esn`:$#usn8 In True In #usn7})<-[?:usn1|#usn7 *0Xa]->(`1esn` :usn2{`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]})) Union Optional Match #usn8=((usn2 :`4esn`:usn2{`3esn`:@usn5[$`1esn`..][$7..]})-[{@usn6:1000 Ends With 01234567 Ends With usn1,usn2:01234567 In \"d_str\"}]->(#usn8 :_usn3:@usn5{`3esn`:@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`],`4esn`:0e0 Is Null})<-[_usn4 *00]-(_usn3 :`6esn`:`3esn`{`7esn`:1000 Ends With 01234567 Ends With usn1})) Where #usn8[1e1..] Union With Distinct ``[{`6esn`:12[`5esn`..$`3esn`][0.12..usn2]}..],`7esn`[..$999][..0.0],Single(`6esn` In 1000[12.e12][#usn7] Where $`3esn` Starts With 01234567 Starts With $`5esn`) Ends With ``(0X7[..True][..01234567]) Ends With [0.12['s_str'..$0][$usn1..9e0]] As `3esn` Skip {@usn6:$7 Ends With 12.e12 Ends With `1esn`,`8esn`:$usn2 Contains $`1esn`} In Extract(`6esn` In .e0['s_str'..][$`8esn`..] Where 0.12[123456789..]|$@usn6 Contains 0e0) In (:`6esn`:`3esn`{`3esn`:123.654[0Xa..0x0][.12..12e12]})<-[`1esn`:`7esn` *0xabc..]->(`7esn` :`2esn`:@usn5) Where $@usn6 Contains `5esn` Contains .e12 Delete Extract(#usn8 In 07['s_str'][$@usn6] Where _usn4[.._usn4]) Is Null Is Null Unwind 0Xa =~0Xa =~`3esn` As `5esn`"),
    octest:ct_string("With Distinct _usn4[#usn7..#usn8] Skip Filter(`5esn` In 1e1 =~$`8esn` =~`1esn` Where #usn7 In #usn7)[Single(`3esn` In 999 Where $123456789 =~usn1 =~0xabc)..] Where .0 =~$@usn5 =~1.e1"),
    octest:ct_string("Remove [`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 's_str'[$#usn8]|$#usn7[$`3esn`..$999]].`2esn`!,@usn5(Distinct $`4esn`[$1000..$`4esn`][0x0..$_usn3]).usn2?,[Count(*)[_usn3..],Count(*) Is Null Is Null,$usn2 Ends With 0 Ends With 12.0].`2esn`? Merge (`3esn` :`7esn`$`6esn`) On Match Set usn1+=.e0[..$`5esn`][..``],`2esn`+=@usn5 Ends With 1000,[`4esn` Ends With 's_str' Ends With @usn6,$`4esn` In 0x0].`6esn`! =_usn3 =~$12 On Match Set {#usn7:_usn3 =~$12}.@usn6? =\"d_str\" Ends With $1000 Ends With usn2,@usn5 =Single(`6esn` In 1000[12.e12][#usn7] Where usn1[9e1..]) =~Any(_usn4 In 12.e12 Is Null Is Null Where .e0['s_str'..][$`8esn`..]) =~Filter(usn1 In 999 Where 010 In $@usn5 In `5esn`),(`2esn` :@usn5{@usn6:.e0 =~7 =~False})-[ *..0X0123456789ABCDEF{@usn6:`4esn` Is Not Null,`2esn`:@usn6[.0]}]->(`` :usn1:``{@usn6:010[`1esn`..`4esn`]})<-[? *..010{#usn8:$usn1[usn1..$`8esn`][12e12..$``],usn1:'s_str' Ends With $7}]->(:`7esn`$12).@usn6 =7[07]"),
    octest:ct_string("Remove {#usn8:07[0..],``:_usn3[..`8esn`]}.`3esn`!,None(`6esn` In .e0['s_str'..][$`8esn`..] Where `8esn`[0x0..]).@usn5,Any(`3esn` In False In $`2esn` In 1e1 Where True Contains .e1 Contains `2esn`).`4esn`!"),
    octest:ct_string("Remove {#usn8:`3esn` Is Not Null Is Not Null,#usn8:$123456789[`3esn`..`5esn`][1e1..$`5esn`]}.``!,Extract(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where .e12 =~@usn5|9e0[$@usn6])._usn3!,Single(usn1 In 123.654 =~.e0 =~9e0 Where $#usn8 =~7 =~.12).#usn8 Match @usn6=(:#usn8:#usn7{#usn7:$`7esn`[`2esn`]})<-[?{``:$`6esn`[.e12]}]-(`4esn` :`3esn`)<-[`1esn`?:_usn4|_usn3]-(:`1esn`:@usn6{`2esn`:12e12 Ends With 0 Ends With $@usn6,``:`1esn`[Null..]}) Where \"d_str\"[..$_usn3] Merge _usn4=(`5esn` {`6esn`:$`6esn` Starts With usn1})<-[`5esn` *0Xa]-(:usn1:``)"),
    octest:ct_string("Create ((:usn2{usn1:12 Is Null Is Null})-[#usn8:@usn6]-(usn2 :`3esn`{`6esn`:$`8esn` Ends With #usn8,`8esn`:123456789 Ends With 9e1 Ends With ``})<-[?:usn2|:`` *7]->(`` :_usn3:@usn5)),`7esn`=(`8esn` :usn2)<-[ *..0X0123456789ABCDEF{@usn6:`4esn` Is Not Null,`2esn`:@usn6[.0]}]-(`6esn` :usn2) Detach Delete usn2(Distinct $`3esn` Is Null) Is Null Is Null Remove Any(`7esn` In $`8esn`[0.12][12] Where `5esn`[12.0]).`5esn` Union Create (_usn3 :`1esn`:@usn6)<-[_usn3:@usn6]->({@usn6:`5esn`[0e0..],_usn4:$#usn8[0xabc..usn2]})-[_usn4 *0..]->(:#usn7{_usn3:7 Contains 1000 Contains $usn1}),usn2=(`5esn` :`2esn`:@usn5{usn2:$`6esn` Starts With usn1,``:123456789 =~@usn5 =~$`5esn`})<-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}) With Distinct [`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where @usn6[.0]] Ends With (`1esn` :`7esn`)<-[_usn3]-(`6esn` :`8esn`)-[`2esn`? *7]->(@usn6 :_usn3:@usn5) Ends With Filter(`6esn` In .e0['s_str'..][$`8esn`..] Where Null In 0xabc) Order By `5esn` In $usn1 In `4esn` Desc Skip `7esn`(.e0 =~7 =~False,010 Is Null Is Null) Starts With [$_usn4 =~0X7,`4esn`,0.0 Ends With $usn1 Ends With $999] Starts With {@usn5:Count(*)[..$_usn3][..$usn2],@usn5:$1000[$usn1][.e1]} Remove `5esn`:@usn6 Union All Optional Match (@usn6 {`4esn`:$#usn7 =~usn2 =~`3esn`,_usn4:01 In 0.12 In .e12}) Where $@usn6 Ends With 0.0 Unwind usn1 Ends With $`8esn` Ends With 7 As `2esn` Match `2esn`=((`2esn` {_usn3:Null =~Count(*),@usn5:7 =~$1000 =~$`5esn`})<-[#usn7:`1esn`|@usn6 *999{`4esn`:0X7[..`5esn`][..$`7esn`]}]-(:`1esn`:@usn6{`1esn`:12.0[9e12]['s_str'],`3esn`:$123456789 Is Not Null}))"),
    octest:ct_string("Unwind usn1 =~12 =~$0 As @usn6 Return True[$usn1..12][``..\"d_str\"] As `` Limit `1esn` Union All Unwind 0.0[.12..`8esn`] As `1esn`"),
    octest:ct_string("Optional Match (`7esn` :`2esn`:@usn5)<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(_usn4 :@usn6)-[?:`` *999{`7esn`:Count(*)[..`5esn`],`2esn`:.e12[..$_usn4][..#usn7]}]-({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]}) Where .12 Is Not Null Is Not Null"),
    octest:ct_string("Match ((:_usn3:@usn5)) Where 9e1 Contains _usn3 Union Detach Delete [.0[@usn6..],`2esn`[`3esn`..],Count(*) Contains 12e12 Contains 0xabc] Is Not Null,$0[00..] Delete $123456789 Optional Match #usn8=(`` :`8esn`{`5esn`:True Contains .e1 Contains `2esn`}),_usn3=((@usn6 :#usn8:#usn7{``:Null Is Not Null Is Not Null})<-[`2esn`?:`5esn`|:`1esn`]->($1000)-[`6esn`? *999{_usn4:\"d_str\" Contains $999 Contains `2esn`}]-(`1esn` {_usn3:12.0 In 07,`2esn`:01234567[..`6esn`][..``]})) Where 1000[`1esn`..$12][$usn1..Null]"),
    octest:ct_string("With  *,`4esn`,Any(`3esn` In False In $`2esn` In 1e1 Where #usn7[.12][usn2])[{#usn7:0e0['s_str'],`1esn`:$#usn8[1.e1]}..[@usn6[.0],0X0123456789ABCDEF Is Not Null,0x0[$`2esn`..'s_str'][$@usn5..1.e1]]][[`4esn` Ends With 's_str' Ends With @usn6]..$`5esn`] As `` Order By (`1esn` :@usn5{`7esn`:usn2 In 1e1 In `4esn`,``:123456789 Ends With 9e1 Ends With ``})<-[`2esn`:``]->(`7esn` :_usn3:@usn5{_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null})-[`2esn`? *7]->(:#usn8:#usn7{#usn7:$`7esn`[`2esn`]})[[0X0123456789ABCDEF[$_usn3][$_usn4]]] Asc,$`5esn` Contains $usn2 Ascending,`2esn`[`3esn`..] Desc Skip ({#usn7:$`3esn` Is Null})<-[?:usn2|:`` *7]->(`6esn` {#usn7:`2esn`[`3esn`..],usn2:$usn2 Starts With $`7esn` Starts With _usn4})-[?:``*{_usn3:12.e12 =~.0}]-({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]}) =~{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]} =~None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1) Limit 123456789[..#usn8] Where @usn6 Ends With 0.12 Ends With `3esn` Union Detach Delete 0xabc =~01,$`3esn` Starts With 9e12 Starts With `8esn`,$123456789[..$`7esn`][..\"d_str\"] Remove None(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $usn2[12.0..][`8esn`..]).`4esn`,Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where `` Contains $_usn3 Contains 0e0|$@usn5 Is Not Null Is Not Null)._usn4 Union All Remove {`6esn`:Count(*) Starts With 01234567 Starts With 0x0,#usn8:`2esn` Ends With Null Ends With 0xabc}.``? Unwind _usn3[..usn2] As @usn6 Merge ((usn2 :`2esn`:@usn5)) On Create Set `6esn`+=[`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12]] Ends With [0] Ends With `8esn`,#usn8:`5esn`,#usn7+=01234567[..`6esn`][..``]"),
    octest:ct_string("Remove `7esn`(Distinct 0Xa[..1.e1],$usn2 Is Not Null Is Not Null).`4esn`!,{usn2:#usn7 In #usn7,`1esn`:00['s_str']}._usn4?,[#usn7 Ends With 9e0,$1000 Is Not Null].@usn6? Return *,$0 Ends With .12,$`4esn` In 0x0 Order By 1.e1[0..] Ascending,`2esn`[``..] Ascending,$123456789 Is Not Null Ascending Skip 12.e12[`2esn`..7] Limit 999[..01234567][..7] Remove Filter(`6esn` In .e0['s_str'..][$`8esn`..] Where $123456789[..`3esn`][..`7esn`]).`8esn`? Union Delete #usn8(usn1 Ends With .0 Ends With `4esn`,`7esn`[`8esn`][#usn7]) Is Null Merge (usn2 :`7esn`) On Match Set usn2 ={`8esn`:12 Is Null Is Null}[[`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where 1000 Starts With 0e0 Starts With 0|$#usn8 Ends With _usn4 Ends With usn2]..][[usn1 In 0xabc Is Not Null Is Not Null Where $@usn6 Is Null|$`6esn`[$`6esn`..][0X7..]]..],[`2esn` In $``[$#usn8] Where 1000 Starts With 0x0|00 Starts With usn1 Starts With Count(*)].usn1 =#usn7[False..][123.654..]"),
    octest:ct_string("Merge `4esn`=(`7esn` {`2esn`:1.e1[#usn7][1.e1]})<-[`2esn`?:@usn6]->(`3esn` :`7esn`$`6esn`)<-[`6esn`?:`1esn`|@usn6 *0xabc..]-(:`7esn`{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc}) On Create Set usn1:_usn3:@usn5,@usn5:@usn6,`6esn`+=0.e0 Contains 9e1 Contains 9e0 Unwind 01 Ends With 123456789 As usn2"),
    octest:ct_string("Unwind _usn3[0Xa..] As `2esn` Unwind 123.654 =~.e0 =~9e0 As ``"),
    octest:ct_string("Optional Match #usn8=(`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]})-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->($@usn6)<-[`8esn`?:usn1|#usn7 *01..7{usn1:123456789[$_usn4..]}]-(@usn5 :`2esn`:@usn5$#usn8),_usn4=(`2esn` :`5esn`{`1esn`:$@usn6 Ends With 0.0})<-[`2esn`?*{`3esn`:$@usn5 Is Not Null Is Not Null}]-(:`7esn`{``:9e1[$#usn8],`4esn`:1.e1 Is Null Is Null}) Create (((@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})-[:`8esn`|@usn6*..]->(#usn8 {@usn5:0x0[$`2esn`..'s_str'][$@usn5..1.e1],`8esn`:$#usn8[@usn5..$1000]})-[? *..0X0123456789ABCDEF]-(@usn5 {@usn6:$123456789[12.0],#usn7:usn1 =~_usn4 =~$usn1}))),`7esn`=(((:`3esn`{#usn7:_usn3 =~$12})-[`7esn`? *123456789..]-(:`2esn`:@usn5{#usn8:$usn2 Starts With 9e1 Starts With `7esn`})-[ *..0X0123456789ABCDEF{@usn6:`4esn` Is Not Null,`2esn`:@usn6[.0]}]->(`` :usn1:``{@usn6:010[`1esn`..`4esn`]}))) Union Unwind $`5esn`['s_str'..] As #usn8 Merge ((`4esn` {_usn3:7 Contains 1000 Contains $usn1})-[#usn8:@usn5|:@usn6 *0..{`6esn`:`6esn` In $``}]->(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[? *0xabc..]->(`6esn` {`5esn`:0x0 =~@usn5 =~01})) On Match Set `4esn`+=Extract(`3esn` In 999 Where $`5esn`[.e1][#usn8]|$#usn8[@usn5..$1000]) =~Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $#usn8 =~7 =~.12) =~Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 123.654 Is Not Null Is Not Null),[`6esn` In 0x0[9e0..] Where `7esn` Is Null Is Null|$`4esn`[.e1..$usn1]].usn2! =1.e1[0..] On Create Set {`8esn`:$@usn6 Is Null}.@usn6 =\"d_str\" Is Not Null,#usn7+=[`7esn` In $`8esn`[0.12][12] Where 9e0[123456789..0][12.0..@usn6]|`4esn`[$#usn7][$#usn7]] Is Not Null Is Not Null"),
    octest:ct_string("Match `4esn`=({_usn3:.e12 =~\"d_str\" =~@usn5}) Where $``[$#usn8] Remove `5esn`(Distinct 1e1 Ends With 's_str' Ends With $@usn6,.e1 =~\"d_str\" =~'s_str').@usn6!,usn1:@usn5 Union Optional Match ((#usn8 :_usn3:@usn5{`3esn`:@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`],`4esn`:0e0 Is Null})) Where 12.e12 Contains 's_str' Contains 0.12 Return $_usn3[0e0..][12.0..] As `3esn` Order By None(`6esn` In 0x0[9e0..] Where 7 Contains 1000 Contains $usn1) In {`6esn`:1.e1[0..],usn2:`` Contains $_usn3 Contains 0e0} Descending,$123456789 In `8esn` In 0X7 Descending Skip 12.0[9e1..][Null..]"),
    octest:ct_string("Remove [$usn1[#usn8..`8esn`][7..`4esn`],`5esn` Ends With 0x0].`2esn`?,`3esn`:``:`6esn`,All(`3esn` In 999 Where .0[..False]).``! With  Any(`7esn` In $`8esn`[0.12][12] Where usn1 In 010),.e12[01..12e12][`7esn`.._usn3] Limit $`5esn` Starts With .0 Starts With 123.654"),
    octest:ct_string("Merge `3esn`=((#usn8 :`7esn`{`5esn`:$#usn8[0e0..][07..]})<-[{`4esn`:010 In $@usn5 In `5esn`,#usn7:$`7esn` Is Null Is Null}]-(:`3esn`{`1esn`:Count(*) Ends With $#usn8 Ends With 0Xa})) On Match Set `5esn` =9e12 =~0.12 =~0.0,`7esn` =999 Contains $`7esn` Contains usn2,usn1+=Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 123.654 Is Not Null Is Not Null)[{usn1:$7[$12]}][Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where \"d_str\"[..$_usn3])] Return Distinct *,$`1esn` Starts With True Starts With @usn5,.e0[123456789..][$`2esn`..] As #usn8 Order By ``($#usn7[$`3esn`..$999]) Starts With {``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]} Ascending,12e12 In Null Asc,0.12[123456789..] Desc Skip (@usn5 :`1esn`:@usn6{@usn5:`4esn` Is Not Null,`3esn`:.e1 =~usn2 =~`7esn`})<-[#usn7?:#usn7|`5esn` *01..7{`2esn`:.e0 =~01 =~9e12,#usn8:$123456789 Starts With `6esn` Starts With 123.654}]-(`2esn` )-[ *999]->(_usn3 {_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null})[..Extract(#usn8 In 07['s_str'][$@usn6] Where _usn4[.._usn4])][..Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where usn2[.e1..][01234567..])] Create _usn4=((`` {``:0.12 Contains 0x0 Contains @usn5})),(((`4esn` {_usn3:7 Contains 1000 Contains $usn1})<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(_usn3 :@usn5{`2esn`:1.e1[#usn7][1.e1]})<-[`5esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]}]->({_usn3:.e12 =~\"d_str\" =~@usn5}))) Union All Create `6esn`=(({`2esn`:9e0 Starts With 0e0 Starts With $`5esn`,`1esn`:$999[01234567][@usn5]})-[`6esn`:`7esn` *7{`6esn`:`6esn` In $``}]-(`` :_usn3:@usn5)<-[``{`8esn`:`6esn` In 0e0 In _usn4,`3esn`:1000[`1esn`..$12][$usn1..Null]}]-({``:0.12 Contains 0x0 Contains @usn5})),`8esn`=((:@usn5{#usn7:0x0 In 0X0123456789ABCDEF,`2esn`:0Xa[Count(*)][0xabc]})<-[usn1:#usn8|:`6esn` *0xabc..]->(`8esn` :`1esn`:@usn6)<-[`1esn`?:`3esn`|_usn4{_usn4:12e12 Ends With $_usn4 Ends With $`2esn`,``:.12 Is Not Null}]-(:`1esn`:@usn6{`5esn`:.e12[$_usn4..0],`4esn`:$#usn8 In True In #usn7})) Union With  0.e0 Starts With $`6esn` As @usn6,[#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]][Filter(`2esn` In $``[$#usn8] Where 01234567[`6esn`..])..][[`3esn` In False In $`2esn` In 1e1 Where .12 =~$#usn7 =~$``|01234567 Is Null]..] As usn1,`3esn`(Distinct 0.e0 Is Not Null Is Not Null,$usn1[usn1..$`8esn`][12e12..$``])[[`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $@usn6 Is Null Is Null|999 Ends With $`4esn`]..][[0 Contains $@usn5]..] As usn1 Limit $`6esn`[$`1esn`..] Create `6esn`=(({@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})) Merge (usn1 )<-[`1esn`?:_usn4|_usn3]-(`1esn` {@usn6:Null In 0xabc})<-[`2esn`:``]-({@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]}) On Create Set `3esn`:_usn4,_usn4 =[12 Is Null Is Null,9e0[$@usn6]][Filter(`6esn` In 0x0[9e0..] Where $123456789 In 010 In $`8esn`)..],None(`6esn` In .e0['s_str'..][$`8esn`..] Where `4esn`).`2esn` =$123456789[0X0123456789ABCDEF..123.654]"),
    octest:ct_string("Delete (@usn5 {`1esn`:0xabc[123.654][12]})-[:#usn8|:`6esn`{#usn8:0X7[..`5esn`][..$`7esn`]}]->(`2esn` :@usn6)-[`5esn`?:`7esn`]-({@usn6:'s_str' Ends With $7}) Ends With All(usn1 In 999 Where @usn6 Ends With 0.12 Ends With `3esn`)"),
    octest:ct_string("Match `1esn`=(((_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[`7esn`?:`2esn`|:`7esn`]->(`3esn` {#usn8:#usn7 =~$`8esn`})-[ *07{`1esn`:$``}]->(`1esn` :usn1:``))),(:`7esn`{_usn3:01[$0]})<-[{usn1:0.e0 =~01234567 =~01234567,``:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}]-(`2esn` {_usn3:0[1e1..00]})-[_usn3:_usn3|`6esn`]->({usn2:0[1e1..00],@usn6:$`6esn`[.e12..$`6esn`][$#usn7...0]}) Optional Match `1esn`=(({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})),``=((`4esn` {``:0.12 Contains 0x0 Contains @usn5})) Where #usn7 Ends With 0.12 Merge ``=(((:#usn7{``:$`6esn` Starts With usn1})-[{usn1:Count(*)[..12][..$999],#usn8:usn1 In 010}]->(`1esn` :`8esn`)<-[:`6esn`$123456789]-(@usn6 {usn2:.e12 =~\"d_str\" =~@usn5,`4esn`:.0[01234567]})))"),
    octest:ct_string("Create @usn6=(#usn8 :_usn4{`6esn`:9e1[..01234567][..`4esn`]})<-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]-(@usn6 :`4esn`:usn2{`4esn`:_usn3 =~$12,_usn4:.e1 =~usn2 =~`7esn`}) Union Delete 7[.0..01],$`3esn` Contains $12 Contains 1000,$`3esn` Ends With $7 Ends With `7esn` Optional Match `3esn`=(:`4esn`:usn2$``),(((usn1 :usn1:``{@usn6:_usn3[0Xa..]})<-[`3esn`? *0..]-({_usn4:.e0[$`1esn`..][_usn4..],usn2:.12[0X0123456789ABCDEF..]})<-[:@usn5|:@usn6 *999{`5esn`:0x0 =~@usn5 =~01}]->(:@usn6{``:00 In 1000})))"),
    octest:ct_string("Return Distinct Extract(`3esn` In 999 Where .e12 Is Null Is Null|$`7esn`[usn2]) Is Not Null As @usn5 Order By usn1 =~12 =~$0 Asc,01 In `4esn` In 1.e1 Descending Union All Match `7esn`=((`5esn` :``:`6esn`)-[:@usn5|:@usn6 *999{`5esn`:0x0 =~@usn5 =~01}]->(_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})) Match (@usn6 {`4esn`:$#usn7 =~usn2 =~`3esn`,_usn4:01 In 0.12 In .e12})"),
    octest:ct_string("Create ((`` {_usn4:False[...e0][..$#usn8],`4esn`:.e12[..$_usn4][..#usn7]})<-[? *..010{usn1:123456789[$_usn4..]}]->(@usn5 {`2esn`:$#usn7[`7esn`..][$`8esn`..],`3esn`:0.12['s_str'..$0][$usn1..9e0]})),((`6esn` :usn1:``)<-[@usn5?{`7esn`:`6esn` In $``}]->(usn1 {_usn3:#usn7 Ends With 0.12}))"),
    octest:ct_string("Unwind {`8esn`:.e12[..#usn7][..9e12]} Starts With None(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $1000[00..]) Starts With {`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`} As usn1 Optional Match ((`` :@usn5{``:.e12[``][$1000],`7esn`:$`6esn`[$`1esn`..]})),(((`1esn` {@usn6:$12[#usn8..$@usn5][9e0..usn1]})<-[?:usn2|:``{_usn3:.e1 Ends With $123456789}]-(`4esn` {#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})-[`3esn`]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5}))) Where 9e0[$@usn6] Union All Unwind `` Contains 010 Contains $1000 As #usn7 Remove `6esn`(.12 Is Not Null Is Not Null).``,Any(usn1 In 123.654 =~.e0 =~9e0 Where _usn3[0Xa..]).`8esn`? Union All Match `5esn`=((`4esn` :usn2)<-[:#usn7|`5esn`*{`8esn`:01[$0],``:0xabc Is Not Null Is Not Null}]-(_usn3 :`7esn`{#usn7:123.654 =~.e0 =~9e0,_usn3:`1esn`[Null..]})) Where 1.e1[$`7esn`] Detach Delete All(usn1 In 0xabc Is Not Null Is Not Null Where .12[..07])[..[`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $usn2[12.0..][`8esn`..]|$7[`7esn`][123.654]]][..Any(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1e1 Contains 0Xa)] Merge `4esn`=(`7esn` {`2esn`:1.e1[#usn7][1.e1]})<-[`2esn`?:@usn6]->(`3esn` :`7esn`$`6esn`)<-[`6esn`?:`1esn`|@usn6 *0xabc..]-(:`7esn`{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc}) On Create Set usn1:_usn3:@usn5,@usn5:@usn6,`6esn`+=0.e0 Contains 9e1 Contains 9e0"),
    octest:ct_string("Remove [`3esn` In @usn6[..\"d_str\"][..01] Where .e0[..$`5esn`][..``]|$`4esn` In 0.0 In `3esn`]._usn3? Union All Return Distinct *,usn2 Starts With 00,Any(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where @usn6 Ends With 0.12 Ends With `3esn`) Contains [`5esn` In $usn2 Contains $`1esn` Where Count(*)[$1000..01]|9e1[..01234567][..`4esn`]] Contains (`3esn` {#usn8:#usn7 =~$`8esn`})-[usn2?:#usn8|:`6esn` *7]->(`6esn` :`5esn`{`5esn`:`4esn` In $`2esn` In @usn5,`1esn`:$_usn3 =~`1esn`})-[?:`2esn`|:`7esn` *0..{`4esn`:010 In $@usn5 In `5esn`,#usn7:$`7esn` Is Null Is Null}]->(:`6esn`:`3esn`{`3esn`:123.654[0Xa..0x0][.12..12e12]}) Order By $_usn4 Starts With 0.e0 Starts With $12 Ascending Limit `8esn` Starts With $usn2 Union All Optional Match ({usn1:$7[$12]})-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`4esn` :_usn3:@usn5),`6esn`=((`6esn` {`7esn`:`4esn` In $`2esn` In @usn5})-[:@usn5|:@usn6 *01234567..123456789]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null})) Where 01234567[..`6esn`][..``]"),
    octest:ct_string("Match #usn8=(:@usn5{_usn4:$`5esn`[0][.12]})<-[@usn5?{usn1:7 Ends With `3esn` Ends With $`2esn`}]-(_usn4 ),`7esn`=((`3esn` :usn1:``)<-[`5esn`?:_usn3|`6esn` *..0X0123456789ABCDEF{`5esn`:usn2[.e1..][01234567..],usn1:999 Is Not Null}]->({@usn5:_usn3[_usn4..$`2esn`][$123456789..9e12]})<-[ *0Xa{#usn8:_usn4[#usn7..#usn8],usn2:9e0[0..1e1]}]->(#usn8 :#usn8:#usn7{@usn6:$#usn8[0e0..][07..],``:$`7esn` =~1.e1 =~0.e0})) Return Distinct 0X7[..True][..01234567] As `7esn`,[12 Is Null Is Null,9e0[$@usn6]] Contains Extract(`6esn` In .e0['s_str'..][$`8esn`..] Where `8esn`[0x0..]|.e0['s_str'..][$`8esn`..]) Contains #usn7 As usn2,#usn8[..0X0123456789ABCDEF][...0] Union Create (((@usn6 {@usn6:$usn1[usn1..$`8esn`][12e12..$``],`6esn`:$123456789[`1esn`..][`7esn`..]})-[`5esn`:@usn5|:@usn6*{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]->(#usn8 :`2esn`:@usn5)<-[`5esn`:_usn4|_usn3 *0X7..0x0]-(:#usn7{_usn4:\"d_str\"[7..$999]}))),((`7esn` {#usn7:1e1[`3esn`]})-[@usn6?:`` *0Xa]-(@usn6 :@usn5{`8esn`:$@usn6 Contains 0e0})<-[:_usn4|_usn3]-(#usn8 :`8esn`{_usn4:usn2 In 1e1 In `4esn`})) Unwind 00 Starts With 0X7 Starts With 123456789 As `7esn` Merge ((`4esn` {_usn3:7 Contains 1000 Contains $usn1})-[#usn8:@usn5|:@usn6 *0..{`6esn`:`6esn` In $``}]->(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[? *0xabc..]->(`6esn` {`5esn`:0x0 =~@usn5 =~01})) On Create Set usn2 =$`1esn` =~`1esn` =~0X0123456789ABCDEF,usn1+=#usn7 Starts With 's_str' Starts With usn2,`5esn`+=010 Is Null On Create Set usn2 =All(`7esn` In $`8esn`[0.12][12] Where .e1 =~\"d_str\" =~'s_str') Ends With Any(usn1 In 999 Where $999[01234567][@usn5]) Ends With [01234567 Is Null Is Null] Union Return *,$7[..$``] As `1esn` Limit (`7esn` :_usn4)-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2)-[{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]}]->(`3esn` :#usn7{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}) Contains {_usn3:12.e12 Contains 0X7 Contains Count(*)} Contains {usn2:@usn5[01234567..],usn1:0X0123456789ABCDEF Is Not Null} Delete $`3esn`[0.12..][$@usn5..] Create usn2=((_usn3 :@usn6{@usn5:0e0 =~False =~.12})-[?:@usn5|:@usn6 *0Xa]-(:`3esn`{#usn7:.e1 =~\"d_str\" =~'s_str',@usn5:#usn7 =~$`8esn`}))"),
    octest:ct_string("Merge usn1=(:`5esn`{`7esn`:'s_str'[$#usn8],``:`1esn`[..$#usn7]})<-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-(`5esn` {_usn3:1.e1 Is Null Is Null})<-[_usn4 *00]-(#usn7 :`7esn`) On Create Set usn1 =Extract(`6esn` In 1000[12.e12][#usn7] Where `7esn` Contains .0 Contains #usn8|$0[00..])[{`2esn`:07['s_str'][$@usn6],``:usn1[..$123456789][..`1esn`]}..`4esn`(Distinct 9e1 Contains 07,1000[07..][1.e1..])][Single(`5esn` In $usn2 Contains $`1esn` Where 0e0['s_str'])..[123456789[0.0..`2esn`][1.e1..$_usn4]]],`6esn`+=01234567[$`7esn`] On Create Set Single(`2esn` In $``[$#usn8] Where $usn1 Ends With $`2esn`).usn1? =#usn7[@usn6..],@usn6+=`4esn` Ends With $#usn8 Ends With 12.e12 Unwind $usn1[9e0..] As @usn6 Match ((:`7esn`{_usn3:01[$0]})-[:_usn3|`6esn` *01..7{_usn4:$`2esn`[$``..12e12]}]-(`5esn` {usn1:1000 Ends With $`5esn`})<-[`2esn`?:@usn6]->($`8esn`)) Union Delete 9e1[$`5esn`..][`5esn`..],True[7][``] Match ((`4esn` {_usn3:7 Contains 1000 Contains $usn1})-[#usn8:@usn5|:@usn6 *0..{`6esn`:`6esn` In $``}]->(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[? *0xabc..]->(`6esn` {`5esn`:0x0 =~@usn5 =~01})),(#usn8 :`6esn`:`3esn`$#usn7) Return Distinct Single(`5esn` In $usn2 Contains $`1esn` Where True Contains .e1 Contains `2esn`) In None(`3esn` In False In $`2esn` In 1e1 Where #usn7[.12][usn2]),`` In usn1 In 01234567,$`3esn` Ends With 123456789 Ends With 0.e0 As `7esn` Skip [`6esn` In 0x0[9e0..] Where 01234567[..`6esn`][..``]|01 Is Null] Starts With usn1(Distinct 0e0[...e1],$usn2 Ends With 0 Ends With 12.0) Starts With {@usn6:$usn1 Is Not Null Is Not Null,`7esn`:0x0 In 0X0123456789ABCDEF} Union Create ``=(_usn4 )-[ *0xabc..{``:0xabc =~01,`7esn`:$#usn7[123456789..][$`4esn`..]}]-({#usn7:1e1[`3esn`]}),`8esn`=(@usn6 {`1esn`:$#usn8 Starts With usn2 Starts With .12,@usn6:07[$`8esn`]})<-[`1esn`? *01..7{`4esn`:1000 Ends With $`5esn`}]-(:`4esn`:usn2{`2esn`:0Xa Contains $`6esn`}) Merge usn2=(`2esn` {_usn3:0[1e1..00]})-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2) On Create Set usn2 =0x0[01234567..Null][0Xa...e12],{#usn8:#usn7[@usn6..]}.@usn6 =#usn7[False..][123.654..] On Match Set `4esn`:`6esn`:`3esn`,@usn5 =$`7esn` Contains usn2 With Distinct *,None(#usn8 In 0x0[_usn4..] Where #usn8 Is Not Null) Is Not Null As @usn5,`3esn` Starts With $@usn5 Starts With 0xabc As `6esn` Skip 9e0[$`4esn`] Limit $0 Ends With .12 Where 0x0 =~@usn5 =~01"),
    octest:ct_string("Merge usn1=(@usn5 :usn1:``{usn2:9e0[0..1e1]})<-[#usn8?:`5esn`|:`1esn`{`8esn`:.12 Is Not Null,_usn3:Count(*) In $`2esn`}]-({`1esn`:1e1 Starts With 010}) On Create Set `` =usn1[..$123456789][..`1esn`],None(`7esn` In $`8esn`[0.12][12] Where 0Xa[..9e12][...e0]).`2esn`? =$0[$1000..][_usn4..] Optional Match #usn8=((#usn7 {usn2:$#usn8 In True In #usn7})-[`6esn` *00]->(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})) Delete (`6esn` :`8esn`{usn2:#usn7 In #usn7,`1esn`:00['s_str']})<-[``?:@usn6]-(:`2esn`:@usn5{usn2:$`3esn` Ends With @usn6 Ends With 123.654})<-[@usn5?:@usn6 *..010]->(#usn7 :#usn7{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2}) Is Null,Extract(`2esn` In $``[$#usn8] Where 01 Starts With $`5esn` Starts With 01234567) Contains Extract(`2esn` In $``[$#usn8] Where $`2esn`[.._usn3]|@usn5 In .e0 In \"d_str\") Contains None(`3esn` In 999 Where 07 Ends With $_usn4 Ends With 0.e0),$`2esn` Ends With `5esn` Ends With 0"),
    octest:ct_string("Merge _usn4=((`3esn` :#usn8:#usn7{_usn3:$`1esn` Is Not Null Is Not Null,`2esn`:0X7 Contains 12.0})<-[``?:#usn8|:`6esn`]->(`8esn` :`1esn`:@usn6{usn1:00['s_str'],#usn8:$`8esn`[``..True][1000..0.12]})<-[``? *01234567..123456789{``:9e12 In 123.654 In True}]->(:`5esn`{`7esn`:0Xa[Count(*)][0xabc],`2esn`:`4esn` Ends With 's_str' Ends With @usn6})) Remove $_usn3.`4esn` Match (({`7esn`:999,#usn8:01 Starts With $`5esn` Starts With 01234567})<-[`5esn`? *..0x0{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]->(:`7esn`$12)),(((`6esn` :_usn3:@usn5{`6esn`:1.e1[0..],`1esn`:'s_str' Ends With $7})<-[{`1esn`:$#usn8 Starts With usn2 Starts With .12,@usn6:07[$`8esn`]}]->(`7esn` {@usn6:$`3esn` Starts With 9e12 Starts With `8esn`})-[? *..0X0123456789ABCDEF{`7esn`:`4esn` Is Not Null,``:.12 Is Not Null}]->(`7esn` {`2esn`:9e0[$@usn6]}))) Union Create `3esn`=((@usn6 :#usn8:#usn7{``:Null Is Not Null Is Not Null})<-[`2esn`?:`5esn`|:`1esn`]->($1000)-[`6esn`? *999{_usn4:\"d_str\" Contains $999 Contains `2esn`}]-(`1esn` {_usn3:12.0 In 07,`2esn`:01234567[..`6esn`][..``]})) Delete [`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12]] Ends With [0] Ends With `8esn`,(#usn8 :#usn8:#usn7)<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(`4esn` :`5esn`) Contains {_usn3:12.0 In 07,`2esn`:01234567[..`6esn`][..``]} Create (#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]}) Union All With Distinct [`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where @usn6[.0]] Ends With (`1esn` :`7esn`)<-[_usn3]-(`6esn` :`8esn`)-[`2esn`? *7]->(@usn6 :_usn3:@usn5) Ends With Filter(`6esn` In .e0['s_str'..][$`8esn`..] Where Null In 0xabc) Order By `5esn` In $usn1 In `4esn` Desc Skip `7esn`(.e0 =~7 =~False,010 Is Null Is Null) Starts With [$_usn4 =~0X7,`4esn`,0.0 Ends With $usn1 Ends With $999] Starts With {@usn5:Count(*)[..$_usn3][..$usn2],@usn5:$1000[$usn1][.e1]} Match #usn7=(({_usn4:$`5esn` Starts With $`3esn` Starts With 1.e1,`3esn`:1000[Null][$`7esn`]})-[? *999]-({_usn3:123.654 Is Not Null Is Not Null})<-[usn1?:`8esn`|@usn6]->(#usn8 :#usn7{`2esn`:0.e0[.e12]})),((`` :usn1:``)-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->(`8esn` :#usn7)<-[?{`5esn`:$1000 =~$`8esn` =~$`2esn`,_usn3:$`` Starts With 0x0}]->(`2esn` :`5esn`{`1esn`:$@usn6 Ends With 0.0}))"),
    octest:ct_string("Optional Match `5esn`=(:`7esn`{``:9e1[$#usn8],`4esn`:1.e1 Is Null Is Null}) Detach Delete 999 Ends With $`4esn`,`7esn`[_usn4..][Count(*)..],[False Starts With $123456789][[usn1 In 0xabc Is Not Null Is Not Null Where 0x0[$7..][`7esn`..]|00 In 1000]..[.e12 Is Null Is Null]][Extract(#usn8 In 07['s_str'][$@usn6] Where 7 =~$1000 =~$`5esn`|\"d_str\"[1.e1][01234567])..Single(`3esn` In False In $`2esn` In 1e1 Where .e12[..$_usn4][..#usn7])]"),
    octest:ct_string("With Distinct 0[..07][..False] As `2esn` Limit $@usn5 Ends With 1.e1 Union All Return Distinct $`5esn`[#usn7..`7esn`] As ``,$1000[$usn1][.e1] As `4esn` Limit @usn5($#usn8 Ends With _usn4 Ends With usn2)[`4esn`(Distinct 's_str' Ends With $7)][{`4esn`:$`6esn`[00..$12],_usn3:`5esn`[0e0..]}] Union All Merge usn2=(:_usn3:@usn5{`6esn`:$`8esn` Ends With #usn8,`8esn`:123456789 Ends With 9e1 Ends With ``}) On Match Set `5esn`+=#usn7 Is Null On Match Set {#usn7:$123456789 Ends With 12e12,`1esn`:0e0 =~False =~.12}.`8esn`! =Extract(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $123456789[`1esn`..][`7esn`..]|usn2[.e1..][01234567..]) Is Null Is Null,`5esn` =$1000 In `7esn` In 12.0,_usn4+={_usn4:$@usn6 Ends With 0.0,`7esn`:$#usn7[123456789..][$`4esn`..]} =~Extract(`6esn` In 1000[12.e12][#usn7] Where 01234567[9e0][.0]|$@usn6 Is Null Is Null) Return *,12 Ends With 0 Ends With Null,Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null) =~[12 Is Null Is Null,9e0[$@usn6]] Skip _usn3 =~010"),
    octest:ct_string("With Distinct 0.e0 Starts With $`6esn` As @usn6,[#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]][Filter(`2esn` In $``[$#usn8] Where 01234567[`6esn`..])..][[`3esn` In False In $`2esn` In 1e1 Where .12 =~$#usn7 =~$``|01234567 Is Null]..] As usn1,`3esn`(Distinct 0.e0 Is Not Null Is Not Null,$usn1[usn1..$`8esn`][12e12..$``])[[`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $@usn6 Is Null Is Null|999 Ends With $`4esn`]..][[0 Contains $@usn5]..] As usn1 Limit $`6esn`[$`1esn`..] Unwind _usn4[7..$999] As `1esn` Create (((`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})<-[?:@usn5|:@usn6]->(#usn8 :#usn8:#usn7)-[#usn7?:`7esn` *..010]-(`1esn` {usn2:@usn5[$`1esn`..][$7..],@usn6:$#usn8[0xabc..usn2]}))),``=((:``:`6esn`{@usn6:$`4esn`[$@usn5..`7esn`],`5esn`:_usn4 Starts With `6esn` Starts With $`8esn`})<-[`6esn`?:#usn8|:`6esn` *0X7..0x0{``:`6esn`[`7esn`..$_usn3][9e0..#usn8],`8esn`:.0[01234567]}]->(:@usn5{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2})) Union All Unwind 123456789[True..][12..] As @usn5 Match `1esn`=((`8esn` :`7esn`)),((({`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`})-[`1esn`?:`3esn`|_usn4*..]->(:#usn8:#usn7{`4esn`:0Xa Contains 0x0 Contains $#usn8})<-[:_usn3|`6esn`{``:`6esn`[`7esn`..$_usn3][9e0..#usn8],`8esn`:.0[01234567]}]->(`2esn` :`5esn`{@usn5:'s_str' Contains 999,`6esn`:1000[12.e12][#usn7]}))) Where $`4esn` In 0x0"),
    octest:ct_string("Unwind Any(`7esn` In $`8esn`[0.12][12] Where usn1 In 010) As `6esn` Remove {_usn3:12.0[..0X7],usn2:$_usn3[0e0..][12.0..]}.`3esn`?,Single(#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]).`6esn`"),
    octest:ct_string("Match `5esn`=((`1esn` {`7esn`:$7[`7esn`][123.654],@usn6:`1esn`[usn1]})-[:#usn7|`5esn`]-(:_usn4{`2esn`:$@usn5 Is Not Null Is Not Null,`8esn`:$usn1 Is Not Null Is Not Null})),usn2=(:#usn8:#usn7{`6esn`:`5esn`[12.0]}) Delete $`3esn` Contains $12 Contains 1000,'s_str' In usn1 In 12.0,`3esn` Starts With $@usn5 Starts With 0xabc"),
    octest:ct_string("With Distinct 123456789 Ends With 9e1 Ends With ``,1.e1[$usn1..$`7esn`] Skip 12.0[`3esn`][_usn3] Limit [9e0 Starts With 0e0 Starts With $`5esn`] Contains {`6esn`:#usn7[False..][123.654..]} Union All Unwind 01234567[9e0][.0] As #usn7"),
    octest:ct_string("Unwind Extract(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0|0[_usn3][.12]) Starts With (#usn8 :`8esn`)<-[`2esn`?:`3esn`|_usn4]-(#usn7 :`7esn`{`3esn`:$#usn8[..123456789][..`2esn`],#usn8:0.e0 Ends With #usn8})-[:`5esn`|:`1esn`]-(@usn5 :`5esn`) As #usn8 Optional Match `3esn`=((:`4esn`:usn2{_usn3:Null Is Not Null Is Not Null,`4esn`:$1000 Is Not Null})<-[ *..0X0123456789ABCDEF{@usn6:`4esn` Is Not Null,`2esn`:@usn6[.0]}]-(`3esn` :#usn8:#usn7{_usn3:$`1esn` Is Not Null Is Not Null,`2esn`:0X7 Contains 12.0})),`1esn`=((`5esn` {`1esn`:999 Ends With $`4esn`})<-[`7esn`?]->(:``:`6esn`{`5esn`:_usn3 =~$12})-[?:usn2|:`` *7]-(`1esn` {@usn6:`1esn`[$7][0Xa]})) Where $`5esn` Is Not Null Unwind 0.0 =~$#usn7 =~`1esn` As _usn3"),
    octest:ct_string("Unwind .e1 =~$#usn8 As `4esn`"),
    octest:ct_string("Return Distinct True[07] Order By $`8esn` Contains $`2esn` Contains False Descending,$_usn3[0e0..][12.0..] Ascending Limit 9e1[$`2esn`..][12.e12..] Detach Delete [usn2 Contains 07 Contains False,.12[usn1]] Contains [0 Contains $@usn5,False Contains $`1esn` Contains @usn6],0.12[123456789..] Union All Create usn2=((#usn7 {@usn5:$`5esn` Contains $usn2})<-[{@usn6:1000 Ends With 01234567 Ends With usn1,usn2:01234567 In \"d_str\"}]-(#usn8 {`4esn`:$`3esn` Is Null})<-[{`5esn`:usn2[.e1..][01234567..],usn1:999 Is Not Null}]->(`5esn` :`8esn`{``:00 In 1000})),((({`3esn`:\"d_str\" Starts With _usn4 Starts With $_usn4,`6esn`:$`6esn`[.e12]})<-[_usn3?:#usn8|:`6esn` *0xabc..{@usn6:123.654[.e12..\"d_str\"],`8esn`:$usn2 Starts With $`7esn` Starts With _usn4}]->(#usn7 {`1esn`:$`4esn`[.e1..$usn1],``:0x0 =~`5esn` =~$`8esn`})-[@usn6 *00]->(#usn8 {`7esn`:12.e12[.12..$_usn3][0e0..9e0],`7esn`:0X7[..True][..01234567]}))) Union With Distinct #usn8(Distinct 0x0[$7],#usn8[1e1..])[[1.e1[#usn7][1.e1]]..{usn1:`2esn` Is Null Is Null}][_usn3(Distinct usn1[$`1esn`..])..Extract(`3esn` In False In $`2esn` In 1e1 Where 1000 Ends With $`5esn`)] As @usn6,123.654 In (:_usn3:@usn5{`1esn`:$`4esn`[.e1..$usn1],``:0x0 =~`5esn` =~$`8esn`})<-[?{``:$`6esn`[.e12]}]-(`4esn` :`3esn`) In [`2esn` In $``[$#usn8]] As #usn8 Where Count(*) Ends With 7 Ends With 0 Create `5esn`=((`6esn` :_usn3:@usn5))"),
    octest:ct_string("With  .12[0xabc..],$0 Is Not Null Is Not Null As `8esn`,@usn6[..\"d_str\"][..01] Order By _usn4[999..9e1] Ascending,All(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $@usn6 Is Null) Is Not Null Is Not Null Desc Limit 0[0Xa..] Merge `2esn`=(((:#usn7{_usn4:\"d_str\"[7..$999]})-[#usn8:@usn5|:@usn6 *0..{`6esn`:`6esn` In $``}]->(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})<-[`4esn`?]->(@usn6 :``:`6esn`{#usn7:9e1 Contains _usn3}))) On Create Set `8esn`+=$#usn7 Starts With $`1esn` Starts With 0.12,`8esn`+=$_usn4 =~0X7,@usn5+=$999[..0e0][..@usn6] Merge (#usn7 {_usn4:`1esn`[$7][0Xa]})-[``{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null}]->(#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]})-[``:@usn6{`3esn`:.e12[$_usn4..0],usn1:00[$0..usn2][$_usn4..$999]}]-({``:_usn3[9e0..$123456789][0X7..999]}) On Match Set @usn5+=`2esn`(Distinct 01234567[`6esn`..],Count(*) Ends With $#usn8 Ends With 0Xa)[..All(_usn4 In 12.e12 Is Null Is Null Where 0e0 =~False =~.12)][..Filter(`7esn` In $`8esn`[0.12][12] Where 9e0[123456789..0][12.0..@usn6])],{@usn6:0[1e1..00],`2esn`:1000 Starts With 0x0}.@usn5 =7[$1000][1000],_usn4 =Extract(`6esn` In .e0['s_str'..][$`8esn`..] Where `6esn` In $``) In Extract(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where .e12 =~@usn5|9e0[$@usn6]) In Filter(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 1000 Starts With ``)"),
    octest:ct_string("Return 01[#usn8..1000] As `5esn`,\"d_str\"[0X7..``][@usn5.._usn4] As _usn3,Extract(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1|$`2esn` Is Not Null Is Not Null) =~[`7esn`[..01],1e1 =~$`8esn` =~`1esn`,$`6esn`[.e12..$`6esn`][$#usn7...0]] Order By [#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]][Filter(`2esn` In $``[$#usn8] Where 01234567[`6esn`..])..][[`3esn` In False In $`2esn` In 1e1 Where .12 =~$#usn7 =~$``|01234567 Is Null]..] Ascending,(`` :`8esn`{`5esn`:True Contains .e1 Contains `2esn`})-[@usn6:@usn6 *7]->(`2esn` :_usn4{_usn4:$`8esn` Contains .0 Contains 0.12})<-[? *01234567..123456789]->(:`3esn`{`7esn`:$123456789[`4esn`..]}) Starts With (:#usn8:#usn7{`6esn`:`5esn`[12.0]})-[`5esn`?:usn2|:``{usn2:1000 Starts With 0e0 Starts With 0,`6esn`:9e1[$`3esn`][$`1esn`]}]->(#usn7 :`7esn`)-[:@usn5|:@usn6 *07]-(@usn5 :`1esn`:@usn6{@usn5:`4esn` Is Not Null,`3esn`:.e1 =~usn2 =~`7esn`}) Starts With {`4esn`:`8esn` Is Not Null} Desc Skip $`8esn`[0.12][12] Limit $7 =~`4esn` =~$7 Match #usn7=(`7esn` {`2esn`:1.e1[#usn7][1.e1]})<-[:`5esn`|:`1esn`{#usn8:`7esn` Is Null,`4esn`:False[$12]}]->(`8esn` :`3esn`{`2esn`:$`8esn`[`7esn`],`4esn`:#usn8[1e1..]})<-[#usn8:@usn6]-(:_usn4{@usn6:'s_str' Contains 999}) Where 0.0[`7esn`][`6esn`] Merge usn1=(:`5esn`{`7esn`:'s_str'[$#usn8],``:`1esn`[..$#usn7]})<-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-(`5esn` {_usn3:1.e1 Is Null Is Null})<-[_usn4 *00]-(#usn7 :`7esn`) On Create Set usn1 =Extract(`6esn` In 1000[12.e12][#usn7] Where `7esn` Contains .0 Contains #usn8|$0[00..])[{`2esn`:07['s_str'][$@usn6],``:usn1[..$123456789][..`1esn`]}..`4esn`(Distinct 9e1 Contains 07,1000[07..][1.e1..])][Single(`5esn` In $usn2 Contains $`1esn` Where 0e0['s_str'])..[123456789[0.0..`2esn`][1.e1..$_usn4]]],`6esn`+=01234567[$`7esn`] On Create Set Single(`2esn` In $``[$#usn8] Where $usn1 Ends With $`2esn`).usn1? =#usn7[@usn6..],@usn6+=`4esn` Ends With $#usn8 Ends With 12.e12 Union All Return *,01[$0] As `5esn` Remove (:`2esn`:@usn5{#usn7:0e0['s_str'],`1esn`:$#usn8[1.e1]})<-[`3esn`? *0..]-({_usn4:.e0[$`1esn`..][_usn4..],usn2:.12[0X0123456789ABCDEF..]}).`5esn`,[$_usn3 Is Not Null,`5esn` Ends With 0x0,0.e0[.e12]].`8esn`?,{usn1:$123456789[`4esn`..],usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`]}._usn4! Create `1esn`=(({``:1e1 Ends With 's_str' Ends With $@usn6,`5esn`:$`5esn` Is Not Null})<-[?:usn2|:``]->(:`6esn`:`3esn`{_usn3:00['s_str'],`5esn`:$`` Is Not Null Is Not Null})<-[? *..0x0{`1esn`:`4esn` Starts With `8esn`}]->(`4esn` {`5esn`:$0[`5esn`][9e12],``:#usn7[False..][123.654..]})) Union All Create @usn6=(`7esn` :`7esn`)-[?:`` *07{`1esn`:$#usn7[$`3esn`..$999]}]->(_usn3 {_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null}),((`3esn` :`7esn`$`6esn`)<-[?:#usn7|`5esn`{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}]->(@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})-[#usn8?:``{`7esn`:$`5esn` Starts With $`3esn` Starts With 1.e1}]-(`8esn` )) Remove Extract(`3esn` In @usn6[..\"d_str\"][..01] Where @usn6 Contains $_usn3 Contains 12.0|$`3esn`[9e0..0.0][_usn4..123456789]).`7esn`,#usn7:`1esn`:@usn6,[9e1 Starts With 12.e12 Starts With 010,$0[`5esn`][9e12]].`2esn`! Unwind _usn3[..`8esn`] As `6esn`"),
    octest:ct_string("Match `5esn`=((@usn5 {`5esn`:0e0[...e1]})<-[`8esn` *0..$12]-(:`2esn`:@usn5{#usn8:0.e0 Contains @usn5 Contains 0X7,`5esn`:0x0[9e0..]})<-[:`3esn`|_usn4]->(_usn3 {_usn4:usn2[9e0..0.e0][@usn5..`4esn`],_usn4:.e0['s_str'..][$`8esn`..]})),`2esn`=(@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8}) Remove usn1(Distinct `4esn` In $`2esn` In @usn5,Count(*)[..`5esn`])._usn4?,{_usn4:$`` Starts With 0x0}.`5esn`!,Extract(usn1 In 999 Where 1e1 =~$`8esn` =~`1esn`|7 Starts With $@usn6).usn2? Union All Remove None(`2esn` In $``[$#usn8] Where $`5esn` Is Not Null).`2esn` Remove {`8esn`:01[$0],``:0xabc Is Not Null Is Not Null}.@usn6!,Extract(#usn8 In 0x0[_usn4..] Where $`3esn` Is Not Null|$``)._usn3 Merge ((`1esn` :usn2{`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]})-[`8esn`{``:0[1.e1..#usn7],_usn4:.e12 Contains `7esn` Contains 999}]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5})<-[usn2:`6esn` *00{`5esn`:.e12[$_usn4..0],`4esn`:$#usn8 In True In #usn7}]->(:``:`6esn`{`5esn`:_usn3 =~$12})) On Create Set #usn7 =.e0 =~$1000 On Create Set _usn4+=(usn1 {@usn5:12e12 Ends With `6esn`,_usn4:\"d_str\" Starts With _usn4 Starts With $_usn4})<-[?:#usn7|`5esn`{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}]->(@usn5 :usn1:``{`2esn`:usn1 =~_usn4 =~$usn1})<-[?:`1esn`|@usn6]->(`6esn` :`2esn`:@usn5) Is Null,`5esn`+=.12[usn1],`8esn`+=usn1[..Count(*)][..`8esn`] Union All Return *,`1esn`[usn1] As `4esn`,[`7esn` In $`8esn`[0.12][12] Where 's_str'[$#usn8]][None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1)..(#usn8 :`7esn`{`7esn`:$`3esn`[9e0..0.0][_usn4..123456789],_usn3:`1esn`[Null..]})-[``?:@usn6]->({``:_usn3[9e0..$123456789][0X7..999]})][[$#usn8 =~7 =~.12,$`6esn`[.e12],_usn4 Starts With `6esn` Starts With $`8esn`]..{usn2:123.654[.e12..\"d_str\"]}] Order By @usn6(_usn4[.._usn4],00[$@usn5][0X7]) =~Extract(`3esn` In False In $`2esn` In 1e1 Where $`` Starts With 0x0|0.12 Is Null Is Null) =~Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null|True =~0 =~123456789) Ascending,@usn6 Contains $_usn3 Contains 12.0 Descending Limit $`6esn`[$0] Merge `5esn`=((:@usn5{``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]})<-[`1esn`:#usn7|`5esn` *..010{_usn4:$123456789[..`3esn`][..`7esn`],#usn8:12.e12 Contains 0X7 Contains Count(*)}]-(`4esn` :`5esn`)<-[?:@usn5|:@usn6]-({`1esn`:$`7esn` Ends With $_usn4 Ends With `5esn`})) On Create Set Extract(#usn8 In 0x0[_usn4..] Where `8esn`[0x0..]|.e12 Contains `7esn` Contains 999).#usn7 =$#usn8 Contains `5esn` Contains $#usn8 Delete 12.0[9e1..][Null..],7 Contains 1000 Contains $usn1,_usn3($123456789[..`3esn`][..`7esn`]) Is Null"),
    octest:ct_string("Return *,$_usn3[0e0..][12.0..] As usn2 Return Distinct *,All(usn1 In 0xabc Is Not Null Is Not Null Where .12[..07])[..[`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $usn2[12.0..][`8esn`..]|$7[`7esn`][123.654]]][..Any(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1e1 Contains 0Xa)] As _usn3 Order By $#usn8 In `` Desc Skip $`4esn` Limit $12[0.0..] With Distinct 0[..07][..False] As `2esn` Limit $@usn5 Ends With 1.e1 Union All Unwind .e0 Contains 999 As `8esn`"),
    octest:ct_string("Remove _usn4(Distinct 00[0X7..9e12]).usn1!,[1e1 =~$`8esn` =~`1esn`].`3esn`? Return 0Xa Is Null Is Null Skip .e1 =~\"d_str\" =~'s_str' Union All Detach Delete `6esn` Contains \"d_str\" Contains 0X7 Unwind 9e0[$@usn6] As #usn7 Merge (:`1esn`:@usn6{usn1:`` Is Not Null Is Not Null,`2esn`:#usn8[..0X0123456789ABCDEF][...0]}) On Create Set {_usn3:0Xa[..$`2esn`][..00]}.`5esn`? =[`6esn` In 1000[12.e12][#usn7] Where 12.0[9e12]['s_str']|0.e0 =~01234567 =~01234567] Ends With Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $`8esn`[0.12][12]) Ends With count(1000[Null][$`7esn`],$123456789[`3esn`..`5esn`][1e1..$`5esn`]),[#usn8 In 07['s_str'][$@usn6] Where True|0e0 Starts With $@usn6 Starts With $7].`4esn` =1000 Ends With 01234567 Ends With usn1 On Create Set Filter(`3esn` In False In $`2esn` In 1e1 Where $`4esn` =~07)._usn3! =[`7esn` In $`8esn`[0.12][12] Where usn1 In 010] Is Not Null Is Not Null,`5esn` =Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null) =~[12 Is Null Is Null,9e0[$@usn6]]"),
    octest:ct_string("Delete $usn1 Is Not Null Is Not Null,Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0) =~Filter(`6esn` In 0x0[9e0..] Where `7esn` Is Null Is Null) =~[`6esn` In 0x0[9e0..] Where `7esn` Is Null Is Null|$`4esn`[.e1..$usn1]],0x0 Starts With $usn2 Starts With $@usn6 Remove {_usn4:12e12 Ends With $_usn4 Ends With $`2esn`,``:.12 Is Not Null}.`4esn`?,Extract(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]|$`2esn` =~False).`1esn`,`1esn`:``:`6esn` Union All Optional Match ({_usn3:.12[usn1],_usn4:$usn1 Starts With Null Starts With $``})-[`3esn`]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5}) Union Merge (`8esn` {usn2:\"d_str\"[1.e1][01234567]})<-[_usn4?:_usn3|`6esn` *..0X0123456789ABCDEF]->(usn1 :`3esn`{`4esn`:$123456789 =~usn1 =~0xabc,`7esn`:999 Is Not Null})-[?:`8esn`|@usn6*{``:0.e0 Contains $123456789 Contains 123456789,`4esn`:#usn7 Is Not Null Is Not Null}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]}) Remove `4esn`:`2esn`:@usn5 Optional Match _usn3=((`7esn` )<-[`5esn`? *..0x0{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]-(`6esn` :@usn6)),`2esn`=(({`7esn`:Count(*)[..`5esn`],`2esn`:.e12[..$_usn4][..#usn7]})-[_usn4?{`3esn`:1e1[`3esn`]}]-({`2esn`:``[0X7..][$@usn6..],@usn6:usn1[..`7esn`][..$`8esn`]})-[?:`2esn`|:`7esn` *0..{`4esn`:010 In $@usn5 In `5esn`,#usn7:$`7esn` Is Null Is Null}]->(`2esn` {_usn3:0[1e1..00]}))"),
    octest:ct_string("Delete \"d_str\"[..$_usn3],{`8esn`:Count(*)[12..123.654][$`1esn`..$0]}[{``:0 Is Null Is Null,@usn6:07['s_str'][$@usn6]}..{@usn5:.12[9e1..0X7]}][`1esn`..(`7esn` {#usn7:1e1[`3esn`]})-[`3esn`]->(#usn8 {`7esn`:12.e12[.12..$_usn3][0e0..9e0],`7esn`:0X7[..True][..01234567]})-[:`1esn`|@usn6*..]->(:`8esn`{`8esn`:0X7 Contains 12.0,`3esn`:`4esn` Starts With `8esn`})] Match `8esn`=(((:usn1:``)<-[:@usn5|:@usn6 *01234567..123456789]->(`1esn` :`7esn`{`6esn`:1e1 In 12.e12})<-[`6esn`:`5esn`|:`1esn`{`4esn`:True Contains .e1 Contains `2esn`}]->(`1esn` {`6esn`:07}))),`3esn`=(((`2esn` :_usn4{`7esn`:`2esn`[`3esn`..],`6esn`:.12 Is Not Null})<-[`1esn`?:`3esn`|_usn4*..]-(:`6esn`:`3esn`{`3esn`:123.654[0Xa..0x0][.12..12e12]})-[?:`8esn`|@usn6*{``:0.e0 Contains $123456789 Contains 123456789,`4esn`:#usn7 Is Not Null Is Not Null}]->(:`1esn`:@usn6{#usn7:$999[@usn5..][Null..],`2esn`:usn1[0X7..]}))) Where 9e0 Starts With 0e0 Starts With $`5esn`"),
    octest:ct_string("Unwind [`6esn` In 0x0[9e0..] Where 01234567[..`6esn`][..``]|01 Is Null] Starts With usn1(Distinct 0e0[...e1],$usn2 Ends With 0 Ends With 12.0) Starts With {@usn6:$usn1 Is Not Null Is Not Null,`7esn`:0x0 In 0X0123456789ABCDEF} As `1esn` Merge `3esn`=((#usn8 :`7esn`{`5esn`:$#usn8[0e0..][07..]})<-[{`4esn`:010 In $@usn5 In `5esn`,#usn7:$`7esn` Is Null Is Null}]-(:`3esn`{`1esn`:Count(*) Ends With $#usn8 Ends With 0Xa})) On Match Set `5esn` =9e12 =~0.12 =~0.0,`7esn` =999 Contains $`7esn` Contains usn2,usn1+=Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 123.654 Is Not Null Is Not Null)[{usn1:$7[$12]}][Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where \"d_str\"[..$_usn3])]"),
    octest:ct_string("Create (((`8esn` :_usn4{`2esn`:\"d_str\" Ends With $1000 Ends With usn2,`2esn`:1e1 Starts With 010})<-[?:@usn5|:@usn6]->(#usn8 :#usn8:#usn7)-[#usn7?:`7esn` *..010]-(`1esn` {usn2:@usn5[$`1esn`..][$7..],@usn6:$#usn8[0xabc..usn2]}))),``=((:``:`6esn`{@usn6:$`4esn`[$@usn5..`7esn`],`5esn`:_usn4 Starts With `6esn` Starts With $`8esn`})<-[`6esn`?:#usn8|:`6esn` *0X7..0x0{``:`6esn`[`7esn`..$_usn3][9e0..#usn8],`8esn`:.0[01234567]}]->(:@usn5{@usn5:1.e1 Is Not Null Is Not Null,usn2:$`5esn` Contains $usn2})) Remove Filter(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 9e1[..01234567][..`4esn`]).usn1? Create ((`1esn` :usn2{`5esn`:$usn1[#usn8..`8esn`][7..`4esn`],`7esn`:@usn6[$usn1][$`2esn`]})-[`8esn`{``:0[1.e1..#usn7],_usn4:.e12 Contains `7esn` Contains 999}]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5})<-[usn2:`6esn` *00{`5esn`:.e12[$_usn4..0],`4esn`:$#usn8 In True In #usn7}]->(:``:`6esn`{`5esn`:_usn3 =~$12})),((@usn6 :`5esn`{@usn5:.12[9e1..0X7]})-[ *0X7..0x0{`7esn`:Count(*)[..`5esn`],`2esn`:.e12[..$_usn4][..#usn7]}]->(`8esn` :@usn5{_usn3:Count(*) Ends With 7 Ends With 0,`8esn`:@usn6 Starts With #usn8 Starts With $#usn7})) Union Return $`7esn`[`2esn`] As @usn6 Order By All(`2esn` In $``[$#usn8] Where $`2esn`[.._usn3]) =~[`6esn`[_usn3],12.0 In 07] =~[123456789[0.0..`2esn`][1.e1..$_usn4]] Ascending,@usn6[..$usn1][..010] Asc,`4esn` In .12 In $#usn8 Asc Skip 0x0 Starts With $usn2 Starts With $@usn6 Detach Delete None(`3esn` In False In $`2esn` In 1e1 Where .0[@usn6..]) Is Null Is Null,Extract(`7esn` In $`8esn`[0.12][12] Where 123456789[$_usn4..]|01234567[$`7esn`])[@usn5()..][Extract(`7esn` In $`8esn`[0.12][12] Where `5esn`[12.0]|\"d_str\"[.0][9e0])..] Merge ((`4esn` :usn2)<-[:#usn7|`5esn`*{`8esn`:01[$0],``:0xabc Is Not Null Is Not Null}]-(_usn3 :`7esn`{#usn7:123.654 =~.e0 =~9e0,_usn3:`1esn`[Null..]})) On Create Set _usn4 =All(usn1 In 0xabc Is Not Null Is Not Null Where .12[..07])[..[`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $usn2[12.0..][`8esn`..]|$7[`7esn`][123.654]]][..Any(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1e1 Contains 0Xa)] On Match Set usn2 =Single(`6esn` In 1000[12.e12][#usn7] Where $`3esn` Starts With 01234567 Starts With $`5esn`) Ends With ``(0X7[..True][..01234567]) Ends With [0.12['s_str'..$0][$usn1..9e0]]"),
    octest:ct_string("Remove Any(#usn8 In 07['s_str'][$@usn6] Where $@usn6 Ends With 0.0).``!,(usn1 :`3esn`{`4esn`:$123456789 =~usn1 =~0xabc,`7esn`:999 Is Not Null})<-[_usn4{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}]-(`` :usn1:``).`4esn`,None(`6esn` In .e0['s_str'..][$`8esn`..] Where $1000[..`6esn`][..123456789]).`3esn` Remove All(`6esn` In 1000[12.e12][#usn7] Where $`2esn` Starts With 9e12).@usn5?,({@usn5:$usn1 Ends With $`2esn`})<-[?:`8esn`|@usn6*{``:0.e0 Contains $123456789 Contains 123456789,`4esn`:#usn7 Is Not Null Is Not Null}]-(`4esn` :``:`6esn`{#usn7:`2esn`[`3esn`..],usn2:$usn2 Starts With $`7esn` Starts With _usn4}).#usn8? Merge ((`` :usn1:``)<-[?:@usn6 *07{_usn3:$`1esn` Is Null}]-(`5esn` {`5esn`:#usn8 Is Not Null,`1esn`:01234567[`6esn`..]})) On Match Set All(#usn8 In 07['s_str'][$@usn6]).#usn7! =$999[0xabc..],#usn8+=7[usn1][$7] Union Create `5esn`=((`` :usn1:``{@usn6:010[`1esn`..`4esn`]})) Remove Extract(`7esn` In $`8esn`[0.12][12] Where $999[010..]|.e12[$_usn4..0]).#usn8?,(_usn3 {_usn3:.e12 Is Not Null Is Not Null,_usn3:.12 Is Not Null Is Not Null})<-[`1esn`?:_usn4|_usn3]-(:@usn6{`7esn`:0.0 Starts With Null Starts With .e12,_usn3:1000 Ends With $`5esn`})<-[{@usn6:1000 Ends With 01234567 Ends With usn1,usn2:01234567 In \"d_str\"}]-(`5esn` :#usn8:#usn7).`5esn`,{#usn8:_usn4[$`8esn`.._usn3][.0..$@usn6]}.usn2 Return Distinct {@usn6:$12[#usn8..$@usn5][9e0..usn1]} =~Any(usn1 In 999 Where 07['s_str'][$@usn6]) =~(usn2 {`4esn`:$123456789 Ends With 12e12})<-[_usn4:`4esn` *..0x0{`3esn`:$7[$12]}]->(:@usn6$_usn3),{_usn3:`1esn`[..$#usn7]} Contains Single(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1) Contains [$1000[00..],$`6esn`[.e12..$`6esn`][$#usn7...0],0Xa[..1.e1]] Limit Extract(`3esn` In 999 Where 0.12[123456789..]|00[01234567][Count(*)]) Contains [#usn8 In 0x0[_usn4..] Where 1e1[`3esn`]|$_usn3[0e0..][12.0..]] Contains All(`5esn` In $usn2 Contains $`1esn` Where \"d_str\" Contains $999 Contains `2esn`)"),
    octest:ct_string("Create (((`6esn` :_usn3:@usn5{`6esn`:1.e1[0..],`1esn`:'s_str' Ends With $7})<-[{`1esn`:$#usn8 Starts With usn2 Starts With .12,@usn6:07[$`8esn`]}]->(`7esn` {@usn6:$`3esn` Starts With 9e12 Starts With `8esn`})-[? *..0X0123456789ABCDEF{`7esn`:`4esn` Is Not Null,``:.12 Is Not Null}]->(`7esn` {`2esn`:9e0[$@usn6]}))) Union Remove All(usn1 In 123.654 =~.e0 =~9e0 Where $`7esn` Starts With 07 Starts With `1esn`).`4esn`!,$`5esn`.`4esn`? Union Return Filter(_usn4 In 12.e12 Is Null Is Null Where 0e0 Is Not Null) =~All(`2esn` In $``[$#usn8] Where 12e12 Ends With $_usn4 Ends With $`2esn`) Limit $7 =~`4esn` =~$7 With Distinct #usn8(Distinct 0x0[$7],#usn8[1e1..])[[1.e1[#usn7][1.e1]]..{usn1:`2esn` Is Null Is Null}][_usn3(Distinct usn1[$`1esn`..])..Extract(`3esn` In False In $`2esn` In 1e1 Where 1000 Ends With $`5esn`)] As `6esn`,$7[..$``] As `` Skip .e1[01234567] Limit $@usn6 Contains `5esn` Contains .e12 Where $#usn8 Is Null Is Null Delete $123456789 In `8esn` In 0X7"),
    octest:ct_string("Detach Delete $`1esn` Is Null,All(`2esn` In $``[$#usn8] Where $`2esn`[.._usn3]) =~[`6esn`[_usn3],12.0 In 07] =~[123456789[0.0..`2esn`][1.e1..$_usn4]],$usn2 Ends With 0 Ends With 12.0 With  $0 Contains 7 Contains 1.e1,All(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $@usn6 Is Null) Is Not Null Is Not Null Skip $`6esn`[$usn1] Limit Extract(`7esn` In $`8esn`[0.12][12] Where .e1[0X7..`2esn`]) Is Null Is Null Match _usn3=((`7esn` )<-[`5esn`? *..0x0{#usn7:$7[`7esn`][123.654],usn2:`2esn`[``..]}]-(`6esn` :@usn6)) Where $`8esn`[``..True][1000..0.12]"),
    octest:ct_string("Create (@usn6 {``:12.e12 Contains 's_str' Contains 0.12}),@usn5=((`2esn` )-[:@usn5|:@usn6 *999{`5esn`:0x0 =~@usn5 =~01}]->(:``:`6esn`{`7esn`:12e12 Ends With 0e0,`8esn`:$_usn4[False..@usn6][`4esn`..$1000]})-[`3esn`? *12{@usn5:$#usn8[..123456789][..`2esn`],#usn7:12.0[..0X7]}]-(:`7esn`{@usn6:`2esn`[``..]})) Detach Delete [`3esn` In 999 Where 07 Ends With $_usn4 Ends With 0.e0|$`7esn`[`2esn`]] Starts With Any(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 07 Ends With $_usn4 Ends With 0.e0) Match (@usn6 {`4esn`:$#usn7 =~usn2 =~`3esn`,_usn4:01 In 0.12 In .e12}) Where $@usn5[$_usn3]"),
    octest:ct_string("Return *,9e0 Starts With 0e0 Starts With $`5esn`,(@usn5 {`1esn`:0xabc[123.654][12]})-[:#usn8|:`6esn`{#usn8:0X7[..`5esn`][..$`7esn`]}]->(`2esn` :@usn6)-[`5esn`?:`7esn`]-({@usn6:'s_str' Ends With $7}) Ends With All(usn1 In 999 Where @usn6 Ends With 0.12 Ends With `3esn`) Skip [`5esn` In 12.e12 In 1000,False In $`2esn` In 1e1] Contains {usn1:12 Is Null Is Null} Contains {@usn6:$`4esn`[$@usn5..`7esn`],`5esn`:_usn4 Starts With `6esn` Starts With $`8esn`} Limit False Ends With $_usn4 Ends With $#usn7 Return *,$usn1[12e12] As #usn7,Count(*) Starts With 01234567 Starts With 0x0 As `1esn` Union Detach Delete $`7esn` =~1.e1 =~0.e0,$``[$_usn4][$`3esn`],usn2[Count(*)][$`1esn`] Unwind 0X7[..$0][..0.12] As `5esn` Remove [`5esn` In $usn2 Contains $`1esn` Where True Contains .e1 Contains `2esn`]._usn3!,`5esn`:#usn8:#usn7,[\"d_str\"[..01234567][..$1000],$usn2[12.0..][`8esn`..],.e1[0X7..`2esn`]].@usn5?"),
    octest:ct_string("Merge (((:`2esn`:@usn5{#usn7:0e0['s_str'],`1esn`:$#usn8[1.e1]})-[?:_usn4|_usn3{#usn7:_usn3[0Xa..]}]-(`1esn` {@usn6:`1esn`[$7][0Xa]})-[ *12{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]}]->(`6esn` {`7esn`:12e12 Ends With 0e0,`8esn`:$_usn4[False..@usn6][`4esn`..$1000]}))) On Create Set usn2 =(usn2 :`4esn`:usn2{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[#usn7:`1esn`|@usn6 *0..]-(@usn6 :usn2) In (`5esn` {_usn3:1.e1 Is Null Is Null})<-[_usn3?:#usn7|`5esn` *..0x0]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})<-[?:@usn5|:@usn6]-(`7esn` {@usn6:.e0[123456789..][$`2esn`..],``:$0[`5esn`][9e12]}),#usn8 =Extract(`4esn` In 0.12['s_str'..$0][$usn1..9e0]|.0 =~$@usn5 =~1.e1)[({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`4esn` :``:`6esn`)<-[_usn3:@usn6]->({@usn6:`5esn` Ends With $999})..],`6esn`+=#usn7 Is Not Null Is Not Null On Match Set 0.0._usn3 =$123456789[0X0123456789ABCDEF..123.654] Remove Extract(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]).`3esn`?,Single(`6esn` In 1000[12.e12][#usn7] Where usn1[9e1..]).`3esn`! Remove (:`2esn`:@usn5{#usn7:0e0['s_str'],`1esn`:$#usn8[1.e1]})<-[`3esn`? *0..]-({_usn4:.e0[$`1esn`..][_usn4..],usn2:.12[0X0123456789ABCDEF..]}).`5esn`,[$_usn3 Is Not Null,`5esn` Ends With 0x0,0.e0[.e12]].`8esn`?,{usn1:$123456789[`4esn`..],usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`]}._usn4!"),
    octest:ct_string("Create (`1esn` {@usn5:9e1 Starts With 12.e12 Starts With 010,`8esn`:$0[@usn6..][.e12..]}),((:`5esn`)-[@usn5? *00{@usn5:usn1 Ends With 1.e1 Ends With `4esn`}]-(:@usn6{`4esn`:9e1 Starts With 12.e12 Starts With 010})) With  [`4esn` In 0.12['s_str'..$0][$usn1..9e0]|`7esn`[..01]] Is Not Null Is Not Null As @usn6,None(usn1 In 0xabc Is Not Null Is Not Null Where 123456789 =~@usn5 =~$`5esn`) =~[`4esn` Ends With 's_str' Ends With @usn6] Order By 01234567[..`6esn`][..``] Asc,[`3esn` In False In $`2esn` In 1e1 Where `` Contains 010 Contains $1000|1000[12.e12][#usn7]] In [`3esn` In 999 Where `7esn` Is Null|$#usn8[0e0..][07..]] In Single(`5esn` In 1e1 =~$`8esn` =~`1esn` Where `8esn` Starts With $12 Starts With $1000) Ascending Skip .12[usn1] Where .e12[..#usn7][..9e12] Union All Match #usn7=(`7esn` {`2esn`:1.e1[#usn7][1.e1]})<-[:`5esn`|:`1esn`{#usn8:`7esn` Is Null,`4esn`:False[$12]}]->(`8esn` :`3esn`{`2esn`:$`8esn`[`7esn`],`4esn`:#usn8[1e1..]})<-[#usn8:@usn6]-(:_usn4{@usn6:'s_str' Contains 999}) Union All Unwind $`6esn`[$usn1] As @usn6 Create `2esn`=((`2esn` {_usn3:Null =~Count(*),@usn5:7 =~$1000 =~$`5esn`})<-[#usn7:`1esn`|@usn6 *999{`4esn`:0X7[..`5esn`][..$`7esn`]}]-(:`1esn`:@usn6{`1esn`:12.0[9e12]['s_str'],`3esn`:$123456789 Is Not Null})) Return *,``($#usn7[$`3esn`..$999]) Starts With {``:Count(*)[12..123.654][$`1esn`..$0],`5esn`:$`4esn`[.e1..$usn1]} As `1esn` Order By .12 Is Not Null Ascending,0.e0 Ends With #usn8 Desc"),
    octest:ct_string("Remove Extract(`6esn` In 0x0[9e0..] Where 01234567[..`6esn`][..``]|$usn2 In 12).`4esn`?,Filter(usn1 In 999 Where True[$usn1..12][``..\"d_str\"]).#usn8?,Extract(`3esn` In 999 Where .12[0X0123456789ABCDEF..]|$@usn6 Starts With $usn2 Starts With $usn1).`5esn`! Create #usn7=(`1esn` {`3esn`:@usn6[$_usn4..`3esn`][0X0123456789ABCDEF..$`8esn`],`4esn`:0e0 Is Null})-[?:usn1|#usn7]-(:``:`6esn`{@usn6:`2esn`[``..],_usn3:12.0 In 07})"),
    octest:ct_string("Return *,010 Starts With \"d_str\" As `4esn`,#usn8[$`7esn`..12.0] As @usn6 Order By All(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where $@usn6 Is Null) Is Not Null Is Not Null Ascending,`1esn`[..$@usn6][..`3esn`] Ascending,usn2[9e12] Desc Merge usn1=(@usn5 :usn1:``{usn2:9e0[0..1e1]})<-[#usn8?:`5esn`|:`1esn`{`8esn`:.12 Is Not Null,_usn3:Count(*) In $`2esn`}]-({`1esn`:1e1 Starts With 010}) On Create Set {_usn4:123456789 =~#usn8 =~$0}.@usn6! =({usn1:$usn1 Starts With Null Starts With $``,@usn5:0x0[01234567..Null][0Xa...e12]})<-[ *..0X0123456789ABCDEF]->(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]}) Starts With (`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})-[?:``*..{#usn7:0Xa Contains $`6esn`,`4esn`:`4esn` In .12 In $#usn8}]-(`` ) Starts With (`7esn` :_usn4)-[?:_usn3|`6esn` *..0x0]-(`4esn` :usn2)-[{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]}]->(`3esn` :#usn7{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}),@usn6 =12.0 Contains #usn8 Contains 0.e0,[$`2esn`[.._usn3]].`1esn`! =True[7][``] On Match Set _usn4 =$123456789 In `8esn` In 0X7,_usn4 =False[$12]"),
    octest:ct_string("Merge (`6esn` {`4esn`:$12 Is Null Is Null,`7esn`:$`5esn` Is Null Is Null})-[?:`7esn`{usn2:1e1 =~$`8esn` =~`1esn`}]-(:@usn5{#usn8:usn1 Is Null,`8esn`:7 In 1e1})-[_usn3:`3esn`|_usn4]->(@usn6 {`2esn`:123.654 Is Not Null Is Not Null}) Match (`3esn` :#usn8:#usn7{_usn3:$`1esn` Is Not Null Is Not Null,`2esn`:0X7 Contains 12.0})-[`4esn`?:#usn8|:`6esn` *999{`8esn`:010[`1esn`..`4esn`]}]-(`` )-[:@usn5|:@usn6 *999{`5esn`:0x0 =~@usn5 =~01}]->(:``:`6esn`{`7esn`:12e12 Ends With 0e0,`8esn`:$_usn4[False..@usn6][`4esn`..$1000]}),(@usn6 {`4esn`:$#usn7 =~usn2 =~`3esn`,_usn4:01 In 0.12 In .e12}) Where $_usn3 =~`1esn` Detach Delete 0[..07][..False],Filter(usn1 In 0xabc Is Not Null Is Not Null Where False[...e0][..$#usn8]) Is Null Is Null,'s_str'[..01234567][..$`3esn`] Union All With Distinct *,.e1 =~$#usn8,`1esn` As `2esn` Order By `` In 123.654 In 0.0 Desc Limit Filter(`5esn` In $usn2 Contains $`1esn`)[`8esn`(1000[12.e12][#usn7],#usn8[1e1..])..][(`3esn` :usn2{#usn7:usn2[`6esn`..][.0..],#usn7:\"d_str\"[..$_usn3]})<-[?{`3esn`:'s_str'[$`6esn`..][$0..]}]->(`2esn` :@usn6)<-[?{`8esn`:$`7esn`[usn2],`1esn`:1000 Is Not Null}]-(#usn7 {_usn3:123456789 Starts With #usn8,`1esn`:$1000[00..]})..] Where Count(*)[$1000..01] Return *,$_usn3[0e0..][12.0..] As usn2 Delete Any(#usn8 In 0x0[_usn4..] Where $`` Starts With 0x0) In [usn1 In 123.654 =~.e0 =~9e0 Where $7 Ends With 12.e12 Ends With `1esn`],0Xa[.e12..],0.0[`7esn`][`6esn`]"),
    octest:ct_string("Return *,12 Ends With 0 Ends With Null,Extract(`2esn` In $``[$#usn8] Where 9e0 Is Null Is Null) =~[12 Is Null Is Null,9e0[$@usn6]] Skip _usn3 =~010 With Distinct *,{_usn3:Null =~Count(*),@usn5:7 =~$1000 =~$`5esn`} Starts With {`1esn`:0.12 Is Null Is Null,#usn8:.e12 =~@usn5} Starts With {`7esn`:0Xa Contains 0x0 Contains $#usn8},usn2[Count(*)][$`1esn`] As `8esn` Skip {`3esn`:'s_str'[$`6esn`..][$0..]}[[`5esn` Ends With 0x0,.0 =~$@usn5 =~1.e1]][{#usn7:1.e1 Ends With 0x0 Ends With 1e1,`6esn`:1000 Starts With 0e0 Starts With 0}] Where $_usn4[$123456789..][12..]"),
    octest:ct_string("Optional Match ``=(:`3esn`{`1esn`:Count(*) Ends With $#usn8 Ends With 0Xa})-[@usn5:@usn6]-(:`4esn`:usn2{_usn4:`1esn`[$7][0Xa]}),(`2esn` :`8esn`)<-[?:`1esn`|@usn6]->(`6esn` :`2esn`:@usn5) Union All Detach Delete [.12 Is Not Null,00[01234567][Count(*)]] =~Filter(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 's_str'[$#usn8]),1.e1[$usn1..$`7esn`],1e1[...e0][..#usn7] Union All Delete {`3esn`:@usn5[$`1esn`..][$7..]}[..[`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $usn2[12.0..][`8esn`..]|$7[`7esn`][123.654]]] Unwind [`6esn` In .e0['s_str'..][$`8esn`..] Where $@usn5 Starts With Count(*) Starts With $usn1] In None(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $`5esn` Starts With $`3esn` Starts With 1.e1) In Filter(`3esn` In False In $`2esn` In 1e1 Where True Contains $`` Contains 01234567) As @usn5 With  01[#usn8..1000] As `5esn`,\"d_str\"[0X7..``][@usn5.._usn4] As _usn3,Extract(usn1 In 0xabc Is Not Null Is Not Null Where $`2esn` Ends With 1e1|$`2esn` Is Not Null Is Not Null) =~[`7esn`[..01],1e1 =~$`8esn` =~`1esn`,$`6esn`[.e12..$`6esn`][$#usn7...0]] Order By [#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]][Filter(`2esn` In $``[$#usn8] Where 01234567[`6esn`..])..][[`3esn` In False In $`2esn` In 1e1 Where .12 =~$#usn7 =~$``|01234567 Is Null]..] Ascending,(`` :`8esn`{`5esn`:True Contains .e1 Contains `2esn`})-[@usn6:@usn6 *7]->(`2esn` :_usn4{_usn4:$`8esn` Contains .0 Contains 0.12})<-[? *01234567..123456789]->(:`3esn`{`7esn`:$123456789[`4esn`..]}) Starts With (:#usn8:#usn7{`6esn`:`5esn`[12.0]})-[`5esn`?:usn2|:``{usn2:1000 Starts With 0e0 Starts With 0,`6esn`:9e1[$`3esn`][$`1esn`]}]->(#usn7 :`7esn`)-[:@usn5|:@usn6 *07]-(@usn5 :`1esn`:@usn6{@usn5:`4esn` Is Not Null,`3esn`:.e1 =~usn2 =~`7esn`}) Starts With {`4esn`:`8esn` Is Not Null} Desc Skip $`8esn`[0.12][12] Limit $7 =~`4esn` =~$7"),
    octest:ct_string("With Distinct *,#usn8[$`7esn`..12.0] Skip usn1[..`1esn`][..$999] Limit Single(`6esn` In 1000[12.e12][#usn7] Where usn1[9e1..]) =~Any(_usn4 In 12.e12 Is Null Is Null Where .e0['s_str'..][$`8esn`..]) =~Filter(usn1 In 999 Where 010 In $@usn5 In `5esn`) Where _usn3[..usn2] Match #usn7=((usn1 {@usn5:12e12 Ends With `6esn`,_usn4:\"d_str\" Starts With _usn4 Starts With $_usn4})-[`1esn`?]->(:#usn7{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})),_usn4=((#usn8 :_usn4{`6esn`:9e1[..01234567][..`4esn`]})) Union Unwind #usn7 Starts With 's_str' Starts With usn2 As usn2"),
    octest:ct_string("Unwind 0x0[$7] As `5esn` Create `4esn`=(usn1 :usn1:``{@usn6:_usn3[0Xa..]})-[{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}),_usn4=(({@usn5:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`3esn`:`4esn` In .12 In $#usn8})-[?:`` *07{`1esn`:$#usn7[$`3esn`..$999]}]->(@usn6 {``:12.e12 Contains 's_str' Contains 0.12})<-[? *..0X0123456789ABCDEF{usn2:123456789 Ends With 9e1 Ends With ``,`3esn`:9e0[123456789..0][12.0..@usn6]}]-({``:0.12 Contains 0x0 Contains @usn5})) Union All Create (({`3esn`:.e12[$_usn4..0],usn1:00[$0..usn2][$_usn4..$999]})-[`3esn`? *0X7..0x0{`4esn`:$_usn4[$123456789..][12..]}]->(`7esn` {@usn6:0 =~#usn8})-[#usn8 *00]->(`5esn` {`6esn`:$`6esn` Starts With usn1})) Delete None(`6esn` In .e0['s_str'..][$`8esn`..] Where #usn7 Ends With 0.12)[{usn1:$`6esn`[.e12..$`6esn`][$#usn7...0]}..Single(#usn8 In 07['s_str'][$@usn6] Where $#usn7[$`3esn`..$999])][Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where 00[0X7..9e12]|$#usn7)..All(`6esn` In 1000[12.e12][#usn7] Where 12.e12 Is Not Null)],$7 Ends With 12.e12 Ends With `1esn`"),
    octest:ct_string("Remove Extract(`6esn` In 1000[12.e12][#usn7] Where #usn7[999..$999]|0x0[$7..][`7esn`..]).#usn7!,{`6esn`:0Xa Contains 0x0 Contains $#usn8}.`4esn`?"),
    octest:ct_string("Unwind .0 Ends With $`4esn` Ends With @usn6 As `6esn` Delete `5esn` Ends With 0x0,[#usn8 In 0x0[_usn4..] Where $`6esn`[.e12]][Filter(`2esn` In $``[$#usn8] Where 01234567[`6esn`..])..][[`3esn` In False In $`2esn` In 1e1 Where .12 =~$#usn7 =~$``|01234567 Is Null]..] Union All Detach Delete (`7esn` {#usn7:1e1[`3esn`]})-[`3esn`]->(#usn8 {`7esn`:12.e12[.12..$_usn3][0e0..9e0],`7esn`:0X7[..True][..01234567]})-[:`1esn`|@usn6*..]->(:`8esn`{`8esn`:0X7 Contains 12.0,`3esn`:`4esn` Starts With `8esn`}) Is Not Null,`8esn`(Distinct 0xabc Contains 0,0.12 Is Null)[..[`4esn` Ends With 's_str' Ends With @usn6]][..[$`3esn` Is Null,.12[usn1]]],$`7esn` Starts With 07 Starts With `1esn` Union Detach Delete 999 In 0,07['s_str'][$@usn6] Unwind Filter(`5esn` In 1e1 =~$`8esn` =~`1esn` Where #usn7 In #usn7)[Single(`3esn` In 999 Where $123456789 =~usn1 =~0xabc)..] As #usn8 Merge ((_usn4 :`3esn`{`2esn`:999})-[?:_usn4|_usn3]->(`` :#usn8:#usn7)<-[``? *00{`4esn`:9e0[$@usn6]}]->(`4esn` :``:`6esn`{#usn7:`2esn`[`3esn`..],usn2:$usn2 Starts With $`7esn` Starts With _usn4}))"),
    octest:ct_string("Remove [9e12[$123456789..$usn2]].`7esn`,None(`3esn` In @usn6[..\"d_str\"][..01] Where .e12 Is Not Null Is Not Null).``? Union Optional Match `6esn`=(((:#usn8:#usn7{usn1:00['s_str'],#usn8:$`8esn`[``..True][1000..0.12]})<-[?:`1esn`|@usn6]->(#usn7 {`1esn`:$`4esn`[.e1..$usn1],``:0x0 =~`5esn` =~$`8esn`})-[{`7esn`:$999[..0e0][..@usn6],usn2:123.654[$`1esn`]}]->(`3esn` :#usn7{usn2:12e12 Ends With $_usn4 Ends With $`2esn`,_usn3:Count(*)[_usn3..]}))) Remove [usn1 In 0xabc Is Not Null Is Not Null Where .e12[..#usn7][..9e12]]._usn4,(@usn6 )<-[ *0Xa{#usn8:_usn4[#usn7..#usn8],usn2:9e0[0..1e1]}]->(#usn8 :#usn8:#usn7{@usn6:$#usn8[0e0..][07..],``:$`7esn` =~1.e1 =~0.e0})<-[#usn8?:#usn7|`5esn`{`3esn`:`5esn`[usn1],`2esn`:`6esn` In $``}]-(@usn5 {usn2:123.654 =~.e0 =~9e0,`3esn`:@usn6[.0]}).`5esn`,{`8esn`:usn1[..`7esn`][..$`8esn`],_usn3:0.12['s_str'..$0][$usn1..9e0]}.`3esn`"),
    octest:ct_string("Optional Match `8esn`=((`1esn` :`7esn`{`6esn`:1e1 In 12.e12})<-[:#usn7|`5esn`*{`8esn`:01[$0],``:0xabc Is Not Null Is Not Null}]-(_usn3 :`7esn`{#usn7:123.654 =~.e0 =~9e0,_usn3:`1esn`[Null..]})<-[`5esn` *0Xa]-(:usn1:``)),((`6esn` :`2esn`:@usn5)) Where $`7esn` Is Null Is Null Unwind $123456789[`1esn`..] As #usn7"),
    octest:ct_string("Merge ``=(`3esn` {``:`6esn`[`7esn`..$_usn3][9e0..#usn8],`8esn`:.0[01234567]})<-[?{usn1:$#usn7[..$999][..9e1]}]->(@usn6 :_usn3:@usn5{_usn4:$0[1e1][`4esn`],`3esn`:$1000[$usn1][.e1]})-[`6esn`?:usn1|#usn7]-(#usn7 :`3esn`{usn2:$`6esn`[.e12]}) On Match Set @usn6+=Filter(usn1 In 0xabc Is Not Null Is Not Null Where False[...e0][..$#usn8]) Is Null Is Null On Create Set _usn3+=@usn5[..$999][..$0],`4esn`+=Single(`3esn` In False In $`2esn` In 1e1 Where usn2[.e1..][01234567..]) Starts With (:usn1:``{_usn4:1000[12.e12][#usn7]})-[ *7{`4esn`:$#usn7[$`3esn`..$999],`8esn`:$0[00..]}]-({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]}) Starts With {`1esn`:`5esn` In 12.e12 In 1000,`3esn`:0Xa Contains $`6esn`},`7esn`+=$12[`3esn`][`3esn`] Merge `4esn`=(`7esn` {`2esn`:1.e1[#usn7][1.e1]})<-[`2esn`?:@usn6]->(`3esn` :`7esn`$`6esn`)<-[`6esn`?:`1esn`|@usn6 *0xabc..]-(:`7esn`{_usn3:$#usn8[@usn5..$1000],`5esn`:$123456789 =~usn1 =~0xabc}) On Create Set usn1:_usn3:@usn5,@usn5:@usn6,`6esn`+=0.e0 Contains 9e1 Contains 9e0 Create ((`3esn` {`3esn`:1e1[`3esn`]})-[?{``:Null =~Count(*),_usn3:$@usn6 Is Null Is Null}]-(@usn5 {usn2:`3esn`[0x0][$`5esn`],`7esn`:`5esn`[$7..01]})),_usn3=(usn2 :#usn8:#usn7{@usn5:`8esn` Ends With $`1esn`,#usn8:\"d_str\" Ends With $1000 Ends With usn2}) Union Unwind 123.654 Is Null Is Null As `1esn` Match ((usn1 {_usn3:#usn7 Ends With 0.12})<-[?:@usn6 *07{_usn3:$`1esn` Is Null}]-(`5esn` {`5esn`:#usn8 Is Not Null,`1esn`:01234567[`6esn`..]})<-[*]->(usn1 :`1esn`:@usn6{`2esn`:$123456789[..$usn2],_usn4:0X0123456789ABCDEF In _usn3})),#usn8=(`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})<-[? *..010{usn1:123456789[$_usn4..]}]->(#usn7 {usn2:$#usn8 In True In #usn7}) Delete .e1[01234567] Union Remove (`5esn` :`8esn`{``:00 In 1000})<-[`5esn`:_usn4|_usn3 *0X7..0x0]-(#usn7 {`5esn`:00 Starts With usn1 Starts With Count(*),``:$999 Is Not Null})<-[`4esn`?]->(:`2esn`:@usn5{#usn8:$usn2 Starts With 9e1 Starts With `7esn`}).@usn6,@usn5(0.0[.12..`8esn`]).`1esn`!,Any(`3esn` In 999 Where $`3esn`[9e0..0.0][_usn4..123456789]).#usn7?"),
    octest:ct_string("Merge ((@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})) On Match Set `3esn`+=$`2esn` Is Not Null Is Not Null,{usn2:123.654 Is Not Null Is Not Null}._usn4! =`2esn`[0.e0..$999] On Create Set [#usn8 In 0x0[_usn4..] Where `8esn`[12.e12][`4esn`]].#usn8! =usn2[..1e1][..$_usn3],Any(`3esn` In 999 Where .e12 Is Null Is Null).@usn6? =$#usn8[@usn5..$1000] Create (({#usn8:0X0123456789ABCDEF Is Not Null,_usn4:usn2[..1e1][..$_usn3]})) Return Distinct 0X7[0xabc][$1000],.e1[123.654..] Order By $`5esn`[12.0..`3esn`][1000..12] Descending,`8esn`['s_str'..] Descending,0.e0[07..] Ascending Limit Any(`2esn` In $``[$#usn8] Where 0 Is Null Is Null)[[usn1 Is Null]..All(usn1 In 123.654 =~.e0 =~9e0 Where $7 Ends With 12.e12 Ends With `1esn`)] Union All Optional Match `1esn`=((:`4esn`:usn2$`7esn`)<-[_usn3:`3esn`|_usn4]->(_usn3 :`4esn`:usn2)) Where $@usn5[$_usn3..Null] Union All Remove Single(usn1 In 999 Where 0.12[123456789..]).@usn6?,All(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0)._usn4 Create #usn7=(usn2 :@usn6{@usn5:#usn8[True..#usn7][01..@usn5]})<-[`1esn`:`7esn` *0xabc..]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]})-[`7esn`? *123456789..]-(:`2esn`:@usn5{#usn8:$usn2 Starts With 9e1 Starts With `7esn`})"),
    octest:ct_string("Merge _usn4=((`4esn` {@usn6:_usn4[$`8esn`.._usn3][.0..$@usn6]})<-[ *07{usn1:010 =~0e0 =~9e1}]->({@usn5:07[0..],`8esn`:Count(*)[..$_usn3][..$usn2]})) Return Distinct 7[.0..01] Limit usn1[..`7esn`][..$`8esn`] Union Create `3esn`=((`7esn` {#usn7:1e1[`3esn`]})<-[_usn4?:``{@usn5:1000 Starts With 0e0 Starts With 0,#usn7:$`5esn`[`4esn`..$`2esn`]}]-(_usn4 :#usn8:#usn7)) Union Create `7esn`=((`5esn` :``:`6esn`)-[:@usn5|:@usn6 *999{`5esn`:0x0 =~@usn5 =~01}]->(_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})) Match (@usn6 {`4esn`:$#usn7 =~usn2 =~`3esn`,_usn4:01 In 0.12 In .e12}) Merge `8esn`=(:`1esn`:@usn6{`5esn`:123.654[0Xa..0x0][.12..12e12],`8esn`:_usn3[..usn2]})<-[usn1:#usn8|:`6esn` *0xabc..]->(`8esn` :`1esn`:@usn6) On Create Set Single(#usn8 In 0x0[_usn4..] Where $`6esn`[.e12])._usn4! =[usn1 In 123.654 =~.e0 =~9e0 Where Count(*) Contains 12e12 Contains 0xabc][_usn3(123.654[``])],#usn7+=Single(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where `4esn` In $`2esn` In @usn5) =~[`6esn` In 1000[12.e12][#usn7] Where $`4esn`[$@usn5..`7esn`]|0X7[..`5esn`][..$`7esn`]] =~`3esn`(Distinct 0.e0 Is Not Null Is Not Null,$usn1[usn1..$`8esn`][12e12..$``]) On Create Set usn1+=.e0[..$`5esn`][..``],`2esn`+=@usn5 Ends With 1000,[`4esn` Ends With 's_str' Ends With @usn6,$`4esn` In 0x0].`6esn`! =_usn3 =~$12"),
    octest:ct_string("Merge usn2=(((_usn3 :`1esn`:@usn6)<-[:@usn5|:@usn6 *01234567..123456789]->(`1esn` :`7esn`{`6esn`:1e1 In 12.e12})<-[``?:#usn8|:`6esn`{usn1:$#usn7[..$999][..9e1]}]->(`1esn` :`4esn`:usn2))) On Create Set [usn1 In 0xabc Is Not Null Is Not Null Where $`8esn`[`7esn`]].#usn8! =$`5esn`[0][.12] Return .0[@usn6..] Skip 0x0[$`2esn`..'s_str'][$@usn5..1.e1] Limit `2esn`[``..] Return Distinct ``[{`6esn`:12[`5esn`..$`3esn`][0.12..usn2]}..],`7esn`[..$999][..0.0],Single(`6esn` In 1000[12.e12][#usn7] Where $`3esn` Starts With 01234567 Starts With $`5esn`) Ends With ``(0X7[..True][..01234567]) Ends With [0.12['s_str'..$0][$usn1..9e0]] As `3esn` Skip {@usn6:$7 Ends With 12.e12 Ends With `1esn`,`8esn`:$usn2 Contains $`1esn`} In Extract(`6esn` In .e0['s_str'..][$`8esn`..] Where 0.12[123456789..]|$@usn6 Contains 0e0) In (:`6esn`:`3esn`{`3esn`:123.654[0Xa..0x0][.12..12e12]})<-[`1esn`:`7esn` *0xabc..]->(`7esn` :`2esn`:@usn5)"),
    octest:ct_string("With Distinct .e1 Is Not Null Is Not Null Order By Filter(`1esn` In 07 Ends With $_usn4 Ends With 0.e0 Where $@usn5 =~$usn2 =~True) In (@usn5 :`3esn`)<-[``?:usn1|#usn7]-(:`2esn`:@usn5$usn1)-[usn1?:@usn5|:@usn6 *01..7{`1esn`:`8esn` Ends With $`1esn`}]-(#usn8 :_usn4) Desc,Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) Ends With [1.e1[#usn7][1.e1],Null =~Count(*)] Ends With [#usn8[..0X0123456789ABCDEF][...0],$usn1 Is Not Null Is Not Null] Desc Skip 9e1 =~$0 Where `3esn`[0x0][$`5esn`] Optional Match @usn5=(((:`1esn`:@usn6)<-[@usn5?:_usn4|_usn3 *1000..01234567]->({@usn6:$#usn8[0e0..][07..]})<-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]})))"),
    octest:ct_string("Create usn1=((@usn5 :usn1:``{usn2:9e0[0..1e1]})-[#usn7? *123456789..{`2esn`:999 Contains $`7esn` Contains usn2}]-($#usn7))"),
    octest:ct_string("With Distinct *,`5esn` In $usn1 In `4esn` As @usn6,.0 Ends With $`4esn` Ends With @usn6 Order By {`3esn`:$_usn4[False..@usn6][`4esn`..$1000],`1esn`:$`7esn`[`2esn`]} In All(`3esn` In False In $`2esn` In 1e1 Where .0[@usn6..]) Asc Skip $7 Is Null Where 0x0 In 0X0123456789ABCDEF With  .e0 Is Not Null,01 In $7 In $1000 As #usn7,$0 Starts With `5esn` Starts With 0 Skip .e1[`2esn`..$`8esn`] Where True Unwind (_usn3 {usn2:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`4esn`:1.e1 Is Null Is Null})-[`1esn`?:`1esn`|@usn6 *12]->(`8esn` :@usn6)[({usn1:$usn1 Starts With Null Starts With $``,@usn5:0x0[01234567..Null][0Xa...e12]})<-[ *..0X0123456789ABCDEF]->(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]})..] As `7esn`"),
    octest:ct_string("Delete $`5esn`[$usn1..usn1][\"d_str\"...e12],`7esn`[..01],False Starts With $123456789 Union All With  .e12[..#usn7][..9e12] Order By .12 In 01234567 In _usn4 Desc,({#usn7:$`3esn` Is Null})<-[?:usn2|:`` *7]->(`6esn` {#usn7:`2esn`[`3esn`..],usn2:$usn2 Starts With $`7esn` Starts With _usn4})-[?:``*{_usn3:12.e12 =~.0}]-({`7esn`:Null Is Null Is Null,usn2:_usn4[#usn7..#usn8]}) =~{`3esn`:`5esn`[0e0..],`8esn`:0e0[...e1]} =~None(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1000 Ends With 01234567 Ends With usn1) Ascending,1000 Ends With $`5esn` Descending Limit 0x0[_usn4..] Where .e1[0X7..`2esn`] Union Unwind Extract(`3esn` In 999 Where $`5esn`[.e1][#usn8]|$#usn8[@usn5..$1000]) =~Extract(`5esn` In 1e1 =~$`8esn` =~`1esn` Where $#usn8 =~7 =~.12) =~Filter(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 123.654 Is Not Null Is Not Null) As usn2"),
    octest:ct_string("With  *,$7[0.e0][`8esn`],.e1[0X7..`2esn`] Order By Extract(#usn8 In 07['s_str'][$@usn6] Where Count(*) Starts With 01234567 Starts With 0x0|$1000 Is Not Null) Ends With [1.e1[#usn7][1.e1],Null =~Count(*)] Ends With [#usn8[..0X0123456789ABCDEF][...0],$usn1 Is Not Null Is Not Null] Desc Skip [12 Is Null Is Null,9e0[$@usn6]][Filter(`6esn` In 0x0[9e0..] Where $123456789 In 010 In $`8esn`)..] Limit $@usn6 Contains `5esn` Contains .e12 Where $`5esn` Starts With $`3esn` Starts With 1.e1 Delete 12e12[\"d_str\"..$`7esn`][`5esn`..@usn6],0.e0 Starts With _usn4 Starts With usn2 Create (((:usn2{_usn3:``[0X7..][$@usn6..]})<-[_usn3?:#usn8|:`6esn` *0xabc..{@usn6:123.654[.e12..\"d_str\"],`8esn`:$usn2 Starts With $`7esn` Starts With _usn4}]->(#usn7 {`1esn`:$`4esn`[.e1..$usn1],``:0x0 =~`5esn` =~$`8esn`})<-[@usn5?:usn2|:``*..]->(`7esn` {#usn7:1e1[`3esn`]})))"),
    octest:ct_string("Detach Delete [.12 Is Not Null,00[01234567][Count(*)]] =~Filter(`4esn` In 0.12['s_str'..$0][$usn1..9e0] Where 's_str'[$#usn8]),1.e1[$usn1..$`7esn`],1e1[...e0][..#usn7]"),
    octest:ct_string("Merge usn2=(usn1 :#usn8:#usn7)<-[_usn4?:#usn8|:`6esn`]->(:`1esn`:@usn6{_usn4:1000 Ends With $`5esn`}) On Create Set @usn5 =0.e0[$usn2..$@usn5] On Create Set @usn6 =Extract(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0|0[_usn3][.12]) Starts With (#usn8 :`8esn`)<-[`2esn`?:`3esn`|_usn4]-(#usn7 :`7esn`{`3esn`:$#usn8[..123456789][..`2esn`],#usn8:0.e0 Ends With #usn8})-[:`5esn`|:`1esn`]-(@usn5 :`5esn`),`3esn` =$usn2 In 12,`` =$#usn8 Is Null Is Null Union Merge _usn4=(`5esn` {`6esn`:$`6esn` Starts With usn1})<-[`5esn` *0Xa]-(:usn1:``) Delete $``"),
    octest:ct_string("Create usn2=((@usn6 {`6esn`:0e0 =~False =~.12,`2esn`:0 =~#usn8})),@usn6=((_usn4 :`3esn`{`2esn`:999})-[`5esn`?:@usn5|:@usn6 *7{`2esn`:$`8esn`[0.12][12],`6esn`:`` Contains $_usn3 Contains 0e0}]-(`6esn` :`2esn`:@usn5{`1esn`:0[$1000..9e12][Null..12e12]})) Delete {_usn4:$123456789 Starts With `6esn` Starts With 123.654} Starts With `6esn`($#usn8[0e0..][07..],.e12[``][$1000]),01234567 =~0.0 =~0e0 With  *,{#usn8:.e0 Ends With $`1esn` Ends With 1000}[Filter(#usn8 In 07['s_str'][$@usn6] Where $12[0.0..])][Filter(usn1 In 0xabc Is Not Null Is Not Null Where .0[@usn6..])],$_usn3 =~`1esn` Order By Extract(_usn4 In 12.e12 Is Null Is Null Where 1000 Starts With 0e0 Starts With 0|0[_usn3][.12]) Starts With (#usn8 :`8esn`)<-[`2esn`?:`3esn`|_usn4]-(#usn7 :`7esn`{`3esn`:$#usn8[..123456789][..`2esn`],#usn8:0.e0 Ends With #usn8})-[:`5esn`|:`1esn`]-(@usn5 :`5esn`) Desc,@usn6 Starts With #usn8 Starts With $#usn7 Descending,.0[..\"d_str\"][..usn2] Asc Skip 9e0 Is Null Is Null Limit Null Contains $_usn3 Where $``[$_usn4][$`3esn`]"),
    octest:ct_string("Remove {@usn6:@usn6[..\"d_str\"][..01],usn2:$`6esn`[$`6esn`..][0X7..]}.usn1?,`2esn`:@usn6 Delete [00[$0..usn2][$_usn4..$999]] Union Create (({@usn6:$123456789[`3esn`..`5esn`][1e1..$`5esn`],`5esn`:.12[usn1]})) Optional Match (`7esn` :`1esn`:@usn6)-[`2esn`?:`8esn`|@usn6]-({`4esn`:True Contains .e1 Contains `2esn`}),(((:`6esn`:`3esn`{`1esn`:0X7[..True][..01234567],``:`1esn`[usn1]})<-[_usn4 *00]-(#usn7 :`7esn`)<-[ *0..]->(_usn3 :@usn6))) Where 00[0X7..9e12] Union All With Distinct *,0x0 In 0X0123456789ABCDEF As usn1,0e0[$123456789..$999][\"d_str\"..Null] Order By 999[..\"d_str\"] Ascending Skip Extract(`7esn` In $`8esn`[0.12][12] Where 0Xa[..9e12][...e0]|999 Ends With 123456789 Ends With 12.0) Is Not Null Is Not Null Limit 's_str'[..Null][..$`5esn`] Where 0.0[`7esn`][`6esn`] Unwind 0[$1000..9e12][Null..12e12] As `8esn`"),
    octest:ct_string("Remove {_usn4:$@usn6 Ends With 0.0,`7esn`:$#usn7[123456789..][$`4esn`..]}.`1esn`"),
    octest:ct_string("Optional Match (`7esn` :`1esn`:@usn6)-[`2esn`?:`8esn`|@usn6]-({`4esn`:True Contains .e1 Contains `2esn`}),(((:`6esn`:`3esn`{`1esn`:0X7[..True][..01234567],``:`1esn`[usn1]})<-[_usn4 *00]-(#usn7 :`7esn`)<-[ *0..]->(_usn3 :@usn6))) Where 00[0X7..9e12] Merge @usn6=(_usn3 {`6esn`:$1000[00..],`3esn`:7 Ends With `3esn` Ends With $`2esn`}) Union Return *,$0 Ends With .12,$`4esn` In 0x0 Order By 1.e1[0..] Ascending,`2esn`[``..] Ascending,$123456789 Is Not Null Ascending Skip 12.e12[`2esn`..7] Limit 999[..01234567][..7] Remove Extract(`3esn` In @usn6[..\"d_str\"][..01] Where 12[`5esn`..$`3esn`][0.12..usn2]|`5esn` In 12.e12 In 1000)._usn4?,[usn2[.e1..][01234567..],`5esn` Ends With $999]._usn3,`7esn`(Distinct 7[$1000][1000]).`1esn`? Create ({_usn3:.12[usn1],_usn4:$usn1 Starts With Null Starts With $``})-[`3esn`]->(`4esn` {#usn7:$123456789[..$`7esn`][..\"d_str\"],`4esn`:`2esn` Contains `3esn` Contains $@usn5}),`1esn`=(((_usn3 :`3esn`{@usn6:$123456789[12.0],#usn7:7 In 1e1})-[`7esn`?:`2esn`|:`7esn`]->(`3esn` {#usn8:#usn7 =~$`8esn`})-[ *07{`1esn`:$``}]->(`1esn` :usn1:``))) Union All Unwind 01234567[9e0][.0] As #usn7"),
    octest:ct_string("With  Extract(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0e0 Starts With $@usn6 Starts With $7) =~[usn1 In 123.654 =~.e0 =~9e0 Where 0.12 Contains 0x0 Contains @usn5] =~{@usn5:$usn1 Ends With $`2esn`} Limit $_usn4 In $12 Union Optional Match `3esn`=((:`4esn`:usn2{_usn3:Null Is Not Null Is Not Null,`4esn`:$1000 Is Not Null})<-[ *..0X0123456789ABCDEF{@usn6:`4esn` Is Not Null,`2esn`:@usn6[.0]}]-(`3esn` :#usn8:#usn7{_usn3:$`1esn` Is Not Null Is Not Null,`2esn`:0X7 Contains 12.0})),`1esn`=((`5esn` {`1esn`:999 Ends With $`4esn`})<-[`7esn`?]->(:``:`6esn`{`5esn`:_usn3 =~$12})-[?:usn2|:`` *7]-(`1esn` {@usn6:`1esn`[$7][0Xa]})) Where `3esn` Is Not Null Is Not Null Unwind $123456789[..$usn2] As @usn5 Unwind Count(*) Starts With 1000 Starts With `` As `7esn` Union All Detach Delete None(#usn8 In 0x0[_usn4..] Where #usn8 Is Not Null) Is Not Null,$usn1[9e0..],$#usn8[@usn5..$1000] With Distinct 0.0 =~0 =~`` As `7esn`,0.12[123456789..] Skip None(`3esn` In 999 Where 07 Ends With $_usn4 Ends With 0.e0) Is Null Is Null Limit 0.e0 In `2esn` Where 0e0 =~False =~.12 Remove (:_usn3:@usn5{`4esn`:9e0[$@usn6]})-[`1esn`?:`3esn`|_usn4*..]->($`8esn`)-[@usn6 *00]->(`4esn` {_usn4:$`2esn`[$``..12e12]}).#usn7?,Single(`3esn` In 999 Where `7esn`[`8esn`][#usn7]).#usn7,Any(_usn4 In 12.e12 Is Null Is Null Where True =~0 =~123456789).`7esn`"),
    octest:ct_string("Remove Filter(#usn8 In 07['s_str'][$@usn6] Where 9e0 Starts With 0e0 Starts With $`5esn`).`6esn`! Merge ((usn1 {@usn5:12e12 Ends With `6esn`,_usn4:\"d_str\" Starts With _usn4 Starts With $_usn4})-[`1esn`?]->(:#usn7{`6esn`:\"d_str\"[1.e1][01234567],`5esn`:12 Is Null})) On Match Set `3esn` =7[$`5esn`..`4esn`],{`5esn`:0.0 Starts With Null Starts With .e12}.#usn7? ='s_str'[$#usn8] Return Distinct $`5esn` Starts With 0X0123456789ABCDEF Starts With Null,$#usn7[9e12..12],`8esn`[9e12] Order By 12e12 Ends With 0e0 Desc,`1esn`[..$@usn6][..`3esn`] Asc"),
    octest:ct_string("Merge (((`` :usn1:``{#usn7:$123456789[`4esn`..]})<-[@usn5?{`7esn`:`6esn` In $``}]->(usn1 {_usn3:#usn7 Ends With 0.12})<-[? *123456789..{`7esn`:.e12 =~@usn5,`3esn`:`5esn`[0e0..]}]-(`4esn` ))) On Create Set @usn6 =[`3esn` In False In $`2esn` In 1e1 Where .12 =~$#usn7 =~$``] Is Not Null On Create Set _usn3+=0X0123456789ABCDEF,_usn4+=$`7esn`[..0X7][..False],`4esn`+=0.e0 Starts With $`6esn` Unwind usn2 Contains 07 Contains False As `4esn` Union Delete `8esn`[.e1..],[\"d_str\" Ends With $1000 Ends With usn2] Is Null Is Null With Distinct .e1[01234567] As `6esn`,01 In $7 In $1000 As #usn7,$`1esn` Starts With True Starts With @usn5 Order By @usn5 In .e0 In \"d_str\" Asc"),
    octest:ct_string("With  *,usn1 Ends With _usn4 Ends With `4esn` As `4esn`,$#usn7 Starts With $`1esn` Starts With 0.12 As #usn7 Order By None(`3esn` In 999 Where 0.e0 Ends With #usn8)[..{usn1:$`2esn` Is Not Null Is Not Null,``:True Ends With `6esn` Ends With 9e0}][..{_usn4:usn2[9e0..0.e0][@usn5..`4esn`],_usn4:.e0['s_str'..][$`8esn`..]}] Desc,Extract(`3esn` In 999 Where $`3esn`[9e0..0.0][_usn4..123456789]|$@usn6 Is Null) Ends With [@usn5 Is Null] Ends With [usn1 In 999 Where `4esn` Is Null Is Null|$123456789[`1esn`..]] Desc Limit `8esn` Starts With $usn2 Optional Match usn2=(`5esn` :`2esn`:@usn5{usn2:$`6esn` Starts With usn1,``:123456789 =~@usn5 =~$`5esn`})<-[#usn7:`4esn`{`1esn`:$usn2 =~`6esn` =~`1esn`}]->(:usn1:``{`6esn`:$usn1 Starts With $0 Starts With $123456789,`8esn`:`5esn`[0X0123456789ABCDEF..$123456789][$usn1..123456789]}),(`5esn` :`6esn`:`3esn`{`6esn`:`` In False In True,@usn5:1.e1[0x0][$123456789]})<-[? *..010{usn1:123456789[$_usn4..]}]->(#usn7 {usn2:$#usn8 In True In #usn7}) Where ``[0X7..][$@usn6..] Merge ((usn1 {_usn3:#usn7 Ends With 0.12})<-[?:@usn6 *07{_usn3:$`1esn` Is Null}]-(`5esn` {`5esn`:#usn8 Is Not Null,`1esn`:01234567[`6esn`..]})<-[*]->(usn1 :`1esn`:@usn6{`2esn`:$123456789[..$usn2],_usn4:0X0123456789ABCDEF In _usn3})) On Match Set `7esn`+={@usn5:$`2esn` Ends With 1e1,usn1:'s_str'[$`6esn`..][$0..]} Is Null,usn2+=`7esn`(Distinct $#usn8[@usn5..$1000]) Ends With Extract(`6esn` In 0x0[9e0..] Where @usn5 In .e0 In \"d_str\"|@usn6[..\"d_str\"][..01]),#usn8 =1.e1 Is Not Null Is Not Null On Create Set _usn4 =All(usn1 In 0xabc Is Not Null Is Not Null Where .12[..07])[..[`2esn` In $#usn8 Starts With usn2 Starts With .12 Where $usn2[12.0..][`8esn`..]|$7[`7esn`][123.654]]][..Any(`2esn` In $#usn8 Starts With usn2 Starts With .12 Where 1e1 Contains 0Xa)]"),
    octest:ct_string("Merge ((_usn4 :#usn8:#usn7)<-[? *01234567..123456789]->(:`3esn`{`7esn`:$123456789[`4esn`..]})-[{usn1:`` Is Not Null Is Not Null,`2esn`:#usn8[..0X0123456789ABCDEF][...0]}]-(:usn1:``{_usn4:1000[12.e12][#usn7]})) Delete #usn8[1e1..],Any(`6esn` In _usn3[_usn4..$`2esn`][$123456789..9e12] Where 0X0123456789ABCDEF In _usn3) Starts With Extract(`7esn` In $`8esn`[0.12][12] Where .e1[0X7..`2esn`]|0.e0[.e12]) Starts With Extract(`3esn` In @usn6[..\"d_str\"][..01] Where 1.e1[$`7esn`]|01234567[9e0][.0]),$#usn8 Starts With usn2 Starts With .12").
