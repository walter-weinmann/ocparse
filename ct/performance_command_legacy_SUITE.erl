%%%-------------------------------------------------------------------
%%% File        : performance_command_legacy_SUITE.erl
%%% Description : Test Suite for rule: command.
%%%
%%% Created     : 26.08.2016
%%%-------------------------------------------------------------------
-module(performance_command_legacy_SUITE).

-compile(export_all).

-include_lib("common_test/include/ct.hrl").
-include_lib("eunit/include/eunit.hrl").

%%--------------------------------------------------------------------
%% COMMON TEST CALLBACK FUNCTIONS - SUITE
%%--------------------------------------------------------------------

suite() ->
    [
        {timetrap, {minutes, 10}}
    ].

init_per_suite(Config) ->
    Config.

end_per_suite(_Config) ->
    ok.

%%--------------------------------------------------------------------
%% COMMON TEST CALLBACK FUNCTIONS - ALL
%%--------------------------------------------------------------------

all() ->
    [test_command].

%%--------------------------------------------------------------------
%% TEST CASES
%%--------------------------------------------------------------------

test_command(_Config) ->
    octest_legacy:ct_string("Drop Constraint On()<-[`7esn`:@usn5]-()Assert Exists({@usn5:{`6esn`}[$1000],`5esn`:12.0[$999..][$@usn6..]}.usn1)"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:`2esn`]->()Assert Exists(Reduce(_usn3=9e1 Is Not Null Is Not Null,`6esn` In {1000} Is Not Null|$`1esn` Is Not Null).@usn5)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:usn2)Assert (`2esn` :usn1{_usn4:'s_str' =~0x0 =~{#usn8},`6esn`:01})<-[_usn3:`7esn`]-(`4esn` :`8esn`:_usn3{`6esn`:1.0[{#usn8}..]}).`` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:@usn5)Assert Exists(Single(`7esn` In @usn5[01..`6esn`] Where $`8esn` In {`2esn`} In $0).`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On(usn1:usn2)Assert Exists([_usn4 In usn2,{12} Is Null].`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(``:_usn4)Assert ['s_str' =~0xabc =~$@usn5].`5esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:_usn4)Assert Exists(All(#usn7 In {`5esn`} Ends With `2esn` Where 0X0123456789ABCDEF =~$@usn6 =~$`8esn`).``?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`7esn`)Assert Exists([0Xa[01..$`1esn`]].@usn6?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:@usn5)Assert [False[Count(*)],{`7esn`} =~01234567 =~`7esn`].`3esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`1esn`)Assert `4esn`(Distinct True Contains $123456789 Contains {`2esn`},$@usn5[$123456789..][@usn5..]).#usn7 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`2esn`:@usn5]-()Assert Exists(Extract(@usn6 In 0xabc Ends With 1.0 Ends With $``|$0 Starts With `2esn` Starts With {`1esn`}).`7esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn7:#usn7]-()Assert Exists(Any(`5esn` In `5esn` In 123.654 In {`6esn`} Where 0xabc Is Not Null Is Not Null).`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`1esn`)Assert Extract(#usn8 In True In `8esn`)._usn3 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:@usn5]->()Assert Exists(None(`5esn` In `5esn` In 123.654 In {`6esn`} Where 9e1 Is Not Null Is Not Null)._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:`3esn`]-()Assert Exists(Case When 0xabc Starts With 1.0 Starts With {`2esn`} Then 2.12 Contains 0.0 Contains $`6esn` When 1e1 In $0 Then $#usn8 In $0 In {`2esn`} End.`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`7esn`)Assert Exists(Allshortestpaths((`7esn` :`6esn`:`4esn`)).`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:_usn4)Assert Single(@usn5 In 1.0 Starts With 12 Where 0.0[.e12..]).`7esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:usn2)Assert Reduce(`3esn`={7} Is Null,#usn7 In $@usn6 Contains 0 Contains 0|{`7esn`} =~01234567 =~`7esn`)._usn3! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn1:@usn6]-()Assert Exists(Allshortestpaths(((`4esn` :`6esn`:`4esn`))).`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:usn1)Assert [@usn5 In 07[{_usn4}..{`4esn`}] Where $`6esn`[`5esn`..][$12..]].`7esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:`1esn`)Assert Exists((`` {_usn3:12[`3esn`..][0X0123456789ABCDEF..],`3esn`:12.0 Ends With 0e0 Ends With $123456789})<-[{_usn3:$`3esn` Ends With `8esn` Ends With {`5esn`}}]-(`3esn` :usn2{`8esn`:`3esn` Is Null Is Null,@usn6:0x0 =~$`2esn` =~#usn7}).@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`5esn`)Assert [$#usn7[$``..{`7esn`}],$@usn5 =~999 =~0e0,12.0[{`6esn`}..123.654][@usn5..usn1]].`4esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`4esn`)Assert Exists(Extract(usn2 In {@usn5} Where 07 Starts With \"d_str\" Starts With $12).@usn6?)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:``)Assert Case When #usn7 Then 12e12[$``..] When 0.e0 Ends With $`8esn` Then Count(*) Is Not Null Is Not Null Else {7}['s_str'..] End.`7esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:`7esn`]-()Assert Exists(`1esn`(\"d_str\" Starts With $`` Starts With $usn1).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`1esn`)Assert Extract(usn2 In {@usn5} Where {@usn5}[01234567][{1000}]).`7esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:usn1)Assert [{@usn5} In $`5esn`,{@usn6}[..0.e0][..$0],$`8esn`[2.12][$_usn4]].`6esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:`7esn`]-()Assert Exists((:#usn7:`6esn`{`4esn`:12.0[$999..][$@usn6..],_usn3:`5esn`[$usn1..$7]})-[?:`1esn`|``* 01234567..0Xa]-(@usn5 {`3esn`:'s_str'[..$123456789][..{1000}],_usn4:_usn4 =~$#usn7 =~`8esn`})-[`5esn`* ..999]-(@usn6 {`2esn`:{`1esn`} =~{``} =~$`8esn`}).`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(``:#usn8)Assert Exists((`2esn` :`6esn`:`4esn`{`5esn`:0xabc =~{_usn4}})-[`1esn`?{`2esn`:$7[0X0123456789ABCDEF]}]->(@usn6 :_usn4:`1esn`{`1esn`:$`2esn`[#usn7][01]}).`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On(``:_usn4)Assert Allshortestpaths((({@usn5:{``} =~{`2esn`} =~$`8esn`,`1esn`:#usn8[1e1..]})-[#usn7?:`3esn`|``* 01..{@usn6:07[{_usn4}..{`4esn`}],usn1:``[$7..``]}]->(`` {``:{_usn4} In 0.12 In {_usn3},`2esn`:{_usn4} In 9e0}))).`2esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`2esn`:@usn6]-()Assert Exists(Reduce(_usn3={usn1} Contains 123.654 Contains {#usn8},`4esn` In False[0.0..{@usn6}]|12 Contains 9e1 Contains $`8esn`).@usn6)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`8esn`)Assert Exists(Reduce(_usn3=$#usn7 =~Count(*) =~@usn5,#usn8 In True In `8esn`|0xabc In {`6esn`} In $@usn6).usn1)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:`7esn`]->()Assert Exists(Case .e1[@usn5] When Null[False..][12.e12..] Then {`6esn`}[0.e0..$123456789] End.#usn8!)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`5esn`)Assert Exists(Shortestpath(({`1esn`:{1000}[0e0][{usn1}]})<-[* 123456789..999{`4esn`:{@usn5} In $`5esn`,`7esn`:{`8esn`} In 12 In 1e1}]-(#usn7 )<-[#usn7?:usn2|_usn3* 7{_usn4}]-(#usn7 :usn1)).`2esn`)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:_usn4)Assert Case `3esn` =~12e12 When 9e12[{1000}..][1000..] Then $`8esn` In {`2esn`} In $0 Else $7[0X0123456789ABCDEF] End.@usn6? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:usn2)Assert Exists({`2esn`:{`5esn`} Ends With `2esn`}.@usn6!)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:#usn7)Assert usn1($`4esn` =~{usn1}).`6esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:`1esn`]->()Assert Exists(Extract(@usn6 In 0xabc Ends With 1.0 Ends With $`` Where $`4esn`[{@usn5}]).`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[usn2:`8esn`]->()Assert Exists({`4esn`:0[...e1][..$usn2]}.`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:_usn4)Assert Exists(`5esn`(Distinct Null In 1e1 In {999}).@usn6?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`3esn`)Assert Exists(Single(usn2 In {@usn5} Where $1000 Is Null Is Null).`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:`1esn`]-()Assert Exists(Filter(`1esn` In {``} =~{`2esn`} =~$`8esn` Where usn1[#usn8..0.0]).usn2?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn3:`3esn`]-()Assert Exists(Case True In `8esn` When {`2esn`}[..``] Then $#usn7 Is Not Null Is Not Null When True[..{_usn3}][..999] Then {7}['s_str'..] End.`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`1esn`)Assert Exists(Shortestpath((_usn4 :#usn7:`6esn`{`7esn`:$``[{#usn7}..{usn2}]})).``!)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:_usn4)Assert Exists(Single(usn1 In #usn8 =~$@usn5 Where $`2esn` In 0xabc).`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`3esn`)Assert Exists(Shortestpath(((`` :`7esn`:_usn4{`4esn`:2.12 Contains 0.0 Contains $`6esn`})-[?:`6esn`|:`7esn`* 1000]-({``:$`3esn`[12.e12...e1],`1esn`:0xabc =~{`8esn`} =~{_usn3}})<-[@usn5?:#usn8|_usn3{``:{7} Starts With $usn2 Starts With $usn2,`3esn`:9e12[{1000}..][1000..]}]->(#usn8 :@usn6))).`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn8:`4esn`]->()Assert Exists(Case When `6esn` =~12.e12 =~123456789 Then 0xabc Starts With 1.0 Starts With {`2esn`} When $`1esn` Starts With 999 Then {0}[.e12..] Else {#usn7}[$usn2] End.`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn5:`8esn`]-()Assert Exists(.e12.usn1?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:#usn7)Assert Exists([Count(*)[#usn8][$usn1],0.0[0.12]].#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:`2esn`]->()Assert Exists({usn1:$`8esn` In {`2esn`} In $0}.@usn5!)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:@usn5)Assert Exists(`2esn`(.e12 In `1esn` In `3esn`).@usn6)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`6esn`)Assert Exists($@usn6._usn3)"),
    octest_legacy:ct_string("Create Constraint On(usn1:``)Assert Exists(exists(Distinct $7 =~{`7esn`} =~$`6esn`,$`5esn` Starts With 1.0 Starts With $usn2).`1esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[`3esn`:usn2]-()Assert Exists(None(`7esn` In @usn5[01..`6esn`] Where $123456789 Ends With 0X0123456789ABCDEF Ends With `7esn`).usn2)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:#usn8)Assert Case #usn8 Starts With {_usn3} Starts With 123.654 When $`2esn`[Null][{``}] Then $@usn6[..{`6esn`}][...e0] End.`2esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:_usn3)Assert Filter(`` In 0X0123456789ABCDEF =~$@usn6 =~$`8esn`).`1esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`7esn`)Assert Exists(Case When #usn7[9e1..$@usn5] Then $12 Contains .e1 End.@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`5esn`)Assert Filter(usn2 In {@usn5} Where {1000}[0e0][{usn1}]).`7esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:_usn4)Assert None(usn2 In 999[{123456789}..999] Where 's_str' Contains $_usn4 Contains $`7esn`).`7esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:_usn4)Assert Filter(@usn5 In 1.0 Starts With 12 Where $#usn7[$``..{`7esn`}]).`` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:`4esn`)Assert Exists([`` In 0X0123456789ABCDEF =~$@usn6 =~$`8esn` Where 12[0X0123456789ABCDEF..][Count(*)..]|$#usn7[$``..{`7esn`}]].``!)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:_usn3)Assert {`8esn`:$#usn7 Contains {usn2},`7esn`:@usn6 In {@usn5} In 123.654}._usn4? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:usn1)Assert {`3esn`:{`4esn`} Contains \"d_str\",`7esn`:$_usn4[0X7..{1000}]}.`4esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:usn1)Assert Exists([.e12 In `1esn` In `3esn`,@usn6 In {@usn5} In 123.654,`3esn` Is Null Is Null].@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn8:_usn3]-()Assert Exists(Case When 01234567[``..$`1esn`][True..$#usn7] Then {#usn8} Ends With {123456789} Ends With #usn8 Else {`7esn`} End.#usn8)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`6esn`)Assert Reduce(`2esn`=0 Is Null,`5esn` In `5esn` In 123.654 In {`6esn`}|{``} =~{`2esn`} =~$`8esn`)._usn3? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:`1esn`]-()Assert Exists(All(`4esn` In False[0.0..{@usn6}] Where {`7esn`}).usn2?)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`6esn`)Assert Exists(All(#usn7 In {`5esn`} Ends With `2esn` Where $_usn4 Ends With False Ends With $#usn8).``!)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:usn2)Assert Exists(`7esn`($usn1[01234567]).`2esn`)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:@usn6)Assert Any(usn1 In {usn2} Contains {123456789} Contains 0Xa Where {#usn8} Ends With {123456789} Ends With #usn8).``? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`8esn`)Assert Exists(Case When 07 Is Null Then 0Xa[01..$`1esn`] When 9e12[..#usn7][...e0] Then 12e12[``..][$`3esn`..] End.`2esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:`2esn`]->()Assert Exists(Shortestpath(((_usn3 :@usn6{`4esn`:{`2esn`}[..{123456789}],@usn5:{`4esn`}[0xabc..][010..]})<-[`5esn`:`1esn`|``]->(@usn5 :@usn5:usn2{_usn3:'s_str'[..$123456789][..{1000}],`7esn`:.e12[Count(*)..{`4esn`}][07..$1000]})<-[?:`8esn`|:_usn3* 01234567..0Xa{`4esn`:`6esn` Ends With 0x0 Ends With 12}]->(`1esn` {`3esn`:0.12 In `8esn`}))).`5esn`)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:``)Assert Exists(Reduce(`5esn`=12.e12[..9e12][..1000],usn1 In #usn8 =~$@usn5|{_usn4} Is Not Null).@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`5esn`)Assert Exists(Case When 999 Starts With {``} Then Count(*) In `1esn` In {_usn3} Else {`2esn`} End.#usn8)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`5esn`)Assert {usn2:.e12[$``..],`6esn`:1.e1 =~123.654 =~$`3esn`}.`5esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:``)Assert All(@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`} Where 12 =~{#usn7})._usn3 Is Unique"),
    octest_legacy:ct_string("Drop Index On:`5esn`(#usn8)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:#usn7)Assert Extract(@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`} Where $`4esn` Is Null|{999}[..{999}]).#usn7 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:`8esn`]-()Assert Exists(Filter(`7esn` In @usn5[01..`6esn`] Where True In `8esn`).``!)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:#usn8]->()Assert Exists(Case When $0 Ends With 12.0 Ends With _usn4 Then $0 =~_usn3 When 12.0 Starts With 00 Starts With 9e1 Then usn2[..$`8esn`][..``] Else 0.e0 Ends With $`8esn` End.`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:_usn3)Assert Exists(Any(usn2 In {@usn5} Where `7esn` Is Null).#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:@usn6)Assert Exists({_usn4:12 =~{#usn7},`1esn`:$usn1[01234567]}.usn2?)"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:`1esn`]->()Assert Exists(Extract(usn2 In 999[{123456789}..999] Where `5esn` In 123.654 In {`6esn`}).`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[``:`6esn`]->()Assert Exists((_usn3 :@usn6{`4esn`:{``}[2.12],_usn4:{12}[{_usn3}..0X7][$7..0]})-[?:usn1|:@usn6{_usn4:$`2esn` In 0xabc,`3esn`:$`8esn` Contains 12}]-(:@usn5:usn2{`8esn`:@usn5 In 00,`2esn`:$usn1[..$`1esn`]}).`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:`5esn`]-()Assert Exists(Case `8esn`[1000..#usn8] When usn1 =~1000 =~12 Then {`7esn`}[..$`8esn`][..{`8esn`}] Else {`3esn`} Ends With $123456789 Ends With {12} End.`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`3esn`)Assert Reduce(``=_usn4 Ends With $`3esn` Ends With {`3esn`},`5esn` In `5esn` In 123.654 In {`6esn`}|{``} =~{`2esn`} =~$`8esn`)._usn3! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`5esn`)Assert Case When `2esn`[{_usn3}..9e1][$`7esn`..Count(*)] Then {1000}[..#usn7][..{#usn8}] Else $`4esn`['s_str'..1000][.e12..010] End.`4esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:@usn5)Assert Filter(@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`} Where Null In {_usn3} In _usn3).`4esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:`5esn`]-()Assert Exists(`4esn`(9e1 =~{#usn7})._usn3?)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`4esn`)Assert Exists(Reduce(`4esn`=`3esn` =~12e12,`7esn` In @usn5[01..`6esn`]|0.0[.e12..]).`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:``]-()Assert Exists(count({usn1}[12e12..`6esn`][`7esn`..$`6esn`]).`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`3esn`:@usn5]-()Assert Exists(Allshortestpaths(((({_usn3:0Xa Contains {`4esn`} Contains {`1esn`}})-[?* 00..999]-(:`5esn`{`4esn`:12.0 Ends With 0e0 Ends With $123456789})<-[#usn7{`3esn`:$@usn6 Contains 0 Contains 0,`1esn`:1.e1 Is Not Null}]-(:`2esn`{@usn5:{``} =~{`2esn`} =~$`8esn`,`1esn`:#usn8[1e1..]})))).usn1?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:@usn6)Assert Exists(Reduce(@usn6=01,`5esn` In `5esn` In 123.654 In {`6esn`}|$`4esn` =~{usn1}).`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:#usn7)Assert [`7esn` In @usn5[01..`6esn`] Where 1e1 In 0xabc].`8esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:`7esn`]->()Assert Exists(None(`1esn` In {``} =~{`2esn`} =~$`8esn` Where {`8esn`} In 12 In 1e1).#usn8?)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`6esn`)Assert Single(`5esn` In `5esn` In 123.654 In {`6esn`} Where 7 Is Null Is Null).@usn5? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:@usn6)Assert [01].`5esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:`2esn`]-()Assert Exists(Shortestpath(((`5esn` :#usn7:`6esn`{usn2:$usn1[0X0123456789ABCDEF...e12],@usn6:False =~9e0 =~{`5esn`}})-[?:`1esn`|``* 123456789..999]-(_usn4 :_usn3:@usn6{`7esn`:010 Starts With `3esn` Starts With {usn1},`4esn`:{999}[`2esn`]})))._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn7:`7esn`]-()Assert Exists(Extract(`5esn` In `5esn` In 123.654 In {`6esn`} Where 9e1 Is Not Null Is Not Null|$`8esn`[2.12][$_usn4]).`7esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:`3esn`]-()Assert Exists(`3esn`(Distinct {`1esn`}[`1esn`..123.654][{`4esn`}..$7],$#usn7 Is Not Null Is Not Null).`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:#usn7)Assert ({_usn3:1000 Is Not Null Is Not Null,usn2:$#usn8[12e12][0X7]})<-[`7esn`?* ..12{@usn5:{`6esn`}[_usn3]}]->(:`3esn`:@usn5{@usn6:{`6esn`} Is Not Null,``:Null Starts With {_usn4}})<-[?* 0xabc..01234567{_usn3:12[`3esn`..][0X0123456789ABCDEF..],`3esn`:12.0 Ends With 0e0 Ends With $123456789}]->({@usn6:{_usn4} Ends With 12.0 Ends With $@usn6,`4esn`:0e0 Starts With 's_str'}).@usn5? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:`8esn`]->()Assert Exists([@usn6 In 0xabc Ends With 1.0 Ends With $`` Where 9e12 Is Null Is Null|@usn5[..$`7esn`][..$`6esn`]]._usn3)"),
    octest_legacy:ct_string("Create Constraint On()<-[``:`8esn`]-()Assert Exists(Single(@usn5 In 1.0 Starts With 12 Where {@usn5} =~$`2esn`).`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`3esn`)Assert Reduce(@usn6=$#usn7 Contains {usn2},@usn6 In 0xabc Ends With 1.0 Ends With $``|$``[..`4esn`][..0]).usn2 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:_usn4]->()Assert Exists([`1esn` In {``} =~{`2esn`} =~$`8esn` Where $`7esn` Contains 9e12 Contains `2esn`|$_usn4 Ends With False Ends With $#usn8].#usn7)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:#usn7)Assert Exists(({@usn5:usn2[$7..$`5esn`]})<-[?:`2esn`* ..999{usn1:.e1[..`2esn`],@usn5:12.e12[..9e12][..1000]}]->({`1esn`:{1000}[0e0][{usn1}]})<-[@usn6:`5esn`|`3esn`* 07..]->({#usn7:_usn3[..0xabc][..@usn5],`3esn`:`4esn`[$999..][1.0..]}).`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`2esn`)Assert [usn2 In {@usn5} Where $0].`8esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`1esn`)Assert Extract(_usn4 In .e12 Is Not Null Where 0xabc Contains False Contains {1000}).usn2! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`7esn`)Assert Exists(Extract(`5esn` In $999[12] Where $999[999..][$_usn4..])._usn3?)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`7esn`)Assert [0.0[.e12..],7 Starts With `5esn`,$7[..999][..`2esn`]].@usn5 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`6esn`:#usn7]-()Assert Exists(Reduce(``=False =~Null =~12.0,`5esn` In `5esn` In 123.654 In {`6esn`}|False[0.0..{@usn6}]).usn2!)"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:`7esn`]-()Assert Exists(None(#usn7 In {`5esn`} Ends With `2esn` Where {_usn4} =~0 =~{12}).`8esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:@usn5)Assert None(@usn5 In 1.0 Starts With 12 Where 01234567[usn1]).`2esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn6:``]-()Assert Exists([#usn7 In $@usn6 Contains 0 Contains 0 Where `6esn` Contains `6esn` Contains 9e1|{`6esn`}[0.e0..$123456789]]._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(``:usn1)Assert [$@usn5[`2esn`..][#usn7..],010 Contains $`5esn`,$`7esn` Ends With $1000 Ends With {999}].usn1? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`4esn`:@usn6]-()Assert Exists((`2esn` :`6esn`:`4esn`{`5esn`:0xabc =~{_usn4}})-[`1esn`?{`2esn`:$7[0X0123456789ABCDEF]}]->(@usn6 :_usn4:`1esn`{`1esn`:$`2esn`[#usn7][01]}).`7esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`1esn`)Assert Exists([$@usn6 Contains 0 Contains 0].`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn3:usn2]-()Assert Exists(Case When 0e0 Is Null Then #usn8[#usn8..] End.@usn6!)"),
    octest_legacy:ct_string("Create Constraint On(``:@usn5)Assert Single(#usn7 In $@usn6 Contains 0 Contains 0 Where _usn4 =~`1esn`).`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:_usn4)Assert None(usn1 In {usn2} Contains {123456789} Contains 0Xa Where 7 Is Null Is Null).usn2 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`4esn`)Assert Exists({`7esn`:{`6esn`} Is Not Null,`4esn`:$#usn7[$`1esn`..{`1esn`}]}.@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn7:`6esn`]->()Assert Exists({usn1:0.e0[$`1esn`..]}.`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:usn2)Assert [@usn6 In 0xabc Ends With 1.0 Ends With $`` Where {999} =~7 =~{usn1}].`5esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:@usn6)Assert Exists(Reduce(`4esn`=.e12 Is Not Null,#usn7 In $@usn6 Contains 0 Contains 0|{#usn7} Starts With $`1esn` Starts With 07).#usn8?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:usn2)Assert `4esn`(9e1 =~$`4esn` =~{usn2})._usn3! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:`8esn`)Assert Exists(None(@usn5 In 07[{_usn4}..{`4esn`}] Where {`7esn`} =~01234567 =~`7esn`).`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:@usn6)Assert Extract(usn1 In #usn8 =~$@usn5 Where $_usn4[0X7..{1000}]).`8esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:#usn8)Assert Case 1e1[{`3esn`}][True] When 0X0123456789ABCDEF[1.0..] Then $`7esn` Is Not Null Is Not Null When 123.654[2.12..][{`7esn`}..] Then $999 =~$999 =~usn2 End.`3esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:#usn7)Assert {_usn3:{_usn4} Ends With 12.0 Ends With $@usn6}.`6esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`5esn`)Assert [@usn5 In 1.0 Starts With 12 Where $0 Ends With `2esn`].#usn7 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:@usn5)Assert Exists(Extract(@usn5 In 1.0 Starts With 12 Where {`1esn`}[01234567..][@usn5..]|$@usn6 Contains 0 Contains 0).#usn8?)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:_usn4)Assert None(@usn5 In 1.0 Starts With 12 Where Null In {_usn3} In _usn3)._usn3! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:usn2)Assert Reduce(usn1=12.0 =~0.12 =~999,`` In 0X0123456789ABCDEF =~$@usn6 =~$`8esn`|$_usn3[$usn2..]).`4esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:_usn4)Assert Exists(Case $`2esn`[Null][{``}] When 2.12 Contains `4esn` Contains .e1 Then #usn7 Contains 0X0123456789ABCDEF When `8esn`[{#usn7}..][_usn4..] Then $12[`6esn`][$#usn8] End.`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`4esn`)Assert Reduce(@usn6=9e0[..{usn1}],`7esn` In \"d_str\" Ends With 0e0 Ends With {usn2}|{``} Starts With True Starts With True).@usn6! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`5esn`)Assert {_usn4:{@usn6}[..0.e0][..$0]}.`5esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`6esn`)Assert Any(`1esn` In {``} =~{`2esn`} =~$`8esn` Where 123.654 In {`6esn`} In `6esn`).#usn7 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`6esn`)Assert Single(usn2 In {@usn5} Where True =~`5esn`).`4esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:#usn8)Assert Exists([#usn8[#usn8..],$999 =~$999 =~usn2,9e0 =~$usn1 =~{@usn6}].`8esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:_usn3)Assert Reduce(@usn6={`3esn`} Is Null Is Null,`6esn` In {1000} Is Not Null|#usn8 =~$@usn5).`5esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:@usn6)Assert Exists((:@usn5:usn2{@usn6:0x0 Is Null,`2esn`:0x0[{`1esn`}]})<-[`6esn`{``:$0,`4esn`:`4esn` Starts With 9e12 Starts With 00}]->(usn2 :``:usn1{_usn3:$@usn5[`2esn`..][#usn7..]}).#usn8)"),
    octest_legacy:ct_string("Create Constraint On(usn2:_usn3)Assert Exists({`4esn`:0X0123456789ABCDEF[0e0..0xabc],``:1e1 In 0xabc}.`5esn`)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:@usn6)Assert Exists({`4esn`:$999[$12..][.e0..]}.`5esn`)"),
    octest_legacy:ct_string("Create Constraint On(usn1:@usn6)Assert Shortestpath((((`3esn` :_usn4:`1esn`)<-[`1esn`?* 0Xa]-(@usn5 :`1esn`)-[?* 00..999]-(:``:usn1{@usn6:07 Is Null})))).`6esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`3esn`)Assert Exists(exists()._usn3!)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`5esn`)Assert Exists(None(`5esn` In `5esn` In 123.654 In {`6esn`} Where 7 Is Null Is Null).`2esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:`7esn`]->()Assert Exists(`8esn`(_usn4 =~$#usn7 =~`8esn`).`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:`5esn`]-()Assert Exists(None(usn2 In 999[{123456789}..999] Where 12e12[..Count(*)][..$usn2]).@usn6)"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:`5esn`]->()Assert Exists((`7esn` {_usn3:$`2esn`[{@usn5}..12.e12][9e0..$`8esn`]})<-[?{usn2:.e12 Starts With 12,_usn4:0X0123456789ABCDEF[0e0..0xabc]}]->(@usn6 $1000).#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:_usn3)Assert [`7esn` In \"d_str\" Ends With 0e0 Ends With {usn2} Where _usn4 Ends With $`3esn` Ends With {`3esn`}|{@usn5}[{``}][{_usn4}]].@usn6? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`5esn`)Assert Exists(Reduce(#usn8={#usn7} Contains \"d_str\" Contains {_usn4},`5esn` In `5esn` In 123.654 In {`6esn`}|1.e1 =~123.654 =~$`3esn`).``!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn1:``]-()Assert Exists(Filter(usn2 In 999[{123456789}..999] Where `5esn` In 123.654 In {`6esn`}).usn1?)"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:`6esn`]-()Assert Exists(Any(usn2 In {@usn5} Where {@usn5}[01234567][{1000}]).usn1)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:_usn4)Assert Reduce(#usn7=00[usn1..\"d_str\"][{0}..$`8esn`],`7esn` In @usn5[01..`6esn`]|`8esn` =~0).#usn7 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:`1esn`]->()Assert Exists(Shortestpath(((`1esn` :`8esn`:_usn3{@usn6:$0 =~_usn3})-[_usn3?:`7esn`* 0x0..7{`7esn`:010 Starts With `3esn` Starts With {usn1},`4esn`:{999}[`2esn`]}]->(`2esn` :`2esn`{#usn7:.e0 Starts With {0} Starts With 0x0,usn2:0xabc Contains False Contains {1000}})-[:@usn6* 0X0123456789ABCDEF{#usn8:$999 In $999}]->(:`2esn`))).#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`6esn`)Assert Exists(None(`7esn` In @usn5[01..`6esn`] Where 0Xa[..0.12]).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`6esn`)Assert Shortestpath((((:usn2{`8esn`:$`7esn` Contains 9e12 Contains `2esn`,`3esn`:$usn1[0X0123456789ABCDEF...e12]})<-[#usn8?:@usn6{`4esn`:999 =~0x0 =~2.12,`7esn`:{#usn8}[False..{usn1}][$`6esn`..0Xa]}]->(:`3esn`:@usn5{`8esn`:$`7esn` Contains 9e12 Contains `2esn`,`3esn`:$usn1[0X0123456789ABCDEF...e12]})-[@usn5?:`8esn`|:_usn3* 0X7..]->(`` :`2esn`)))).`3esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:usn1]-()Assert Exists([`5esn` In `5esn` In 123.654 In {`6esn`} Where .e0 Starts With {0} Starts With 0x0|010].`4esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[`2esn`:@usn6]-()Assert Exists({`3esn`:.e0 In 9e1 In $_usn3,`4esn`:False Is Null Is Null}._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:``]-()Assert Exists(Filter(usn2 In 999[{123456789}..999] Where 010[$12..]).@usn5!)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:usn1)Assert Exists(Reduce(`3esn`=$`2esn` In 0xabc,`` In 0X0123456789ABCDEF =~$@usn6 =~$`8esn`|$_usn3[@usn6..][{``}..]).@usn5?)"),
    octest_legacy:ct_string("Create Constraint On(usn1:#usn7)Assert None(usn2 In 999[{123456789}..999] Where `5esn` In 123.654 In {`6esn`}).`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn8:_usn3]-()Assert Exists(Extract(`5esn` In $999[12] Where {#usn7} =~$0).`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:#usn8)Assert Exists([Count(*) In `1esn` In {_usn3},{#usn7}[$usn2]].`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`6esn`:`6esn`]-()Assert Exists([@usn5 In 07[{_usn4}..{`4esn`}] Where {@usn5} Contains 0X7 Contains 1e1].`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:_usn3)Assert Exists(Reduce(`2esn`=0.0[.e12..],usn2 In 999[{123456789}..999]|#usn7 =~{7}).@usn6)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:usn2)Assert Exists({`4esn`:{``}[2.12],_usn4:{12}[{_usn3}..0X7][$7..0]}.usn1)"),
    octest_legacy:ct_string("Create Constraint On()<-[`8esn`:``]-()Assert Exists(Allshortestpaths((((#usn8 {usn2:{`1esn`} =~{@usn6} =~`2esn`})<-[_usn4:``{`3esn`:`8esn`[1000..#usn8]}]->(_usn3 {@usn6:$usn1[0X0123456789ABCDEF...e12]})<-[?:`1esn`|``* 123456789..999]->({`8esn`:12.0 =~0.12 =~999,``:'s_str' Contains $_usn4 Contains $`7esn`})))).`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:usn1)Assert Exists({#usn7:$usn2 Starts With {`1esn`},@usn5:$12 Contains .e1}.``)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:#usn7)Assert Exists(#usn8(#usn7[$7..{_usn4}]).`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`4esn`)Assert Exists(None(usn1 In {usn2} Contains {123456789} Contains 0Xa Where 0Xa[0X7..#usn8][_usn3..9e1]).`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:@usn6)Assert Case When $@usn6[..{`6esn`}][...e0] Then {7}['s_str'..] Else 0[{`4esn`}..] End.usn2? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:`3esn`]-()Assert Exists({@usn5:0X7[#usn7..][12e12..],_usn4:`4esn`[`1esn`][{`8esn`}]}._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`4esn`)Assert _usn4(Distinct Count(*)[{usn1}..][$`7esn`..],.e1[..`2esn`]).``? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:`5esn`)Assert [usn2 In {@usn5} Where 07 Starts With \"d_str\" Starts With $12].@usn5? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:usn1)Assert Exists(None(`5esn` In $999[12] Where 999[1000..]).`7esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[usn2:`4esn`]-()Assert Exists(None(@usn6 In 0xabc Ends With 1.0 Ends With $`` Where $7[{`7esn`}][12.0]).`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On()<-[`5esn`:`3esn`]-()Assert Exists(Reduce(`2esn`=$`8esn`[2.12][$_usn4],`` In 0X0123456789ABCDEF =~$@usn6 =~$`8esn`|{`2esn`}[..$`6esn`][..`3esn`]).#usn7?)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`3esn`)Assert Exists(Case `1esn`[$``][{`5esn`}] When `5esn` Then $1000[123.654] When 12 Ends With 0.e0 Then 1e1 In 0xabc Else #usn7 Ends With {@usn5} End._usn4)"),
    octest_legacy:ct_string("Create Constraint On(``:@usn5)Assert Single(#usn7 In {`5esn`} Ends With `2esn` Where `1esn`[$``][{`5esn`}]).`` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:``)Assert All(@usn5 In 1.0 Starts With 12 Where .e12[0.0..][$#usn8..])._usn3? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`3esn`)Assert `8esn`(Distinct 9e1 Ends With 0xabc Ends With @usn6,9e1 Is Not Null Is Not Null).@usn6! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`7esn`)Assert Exists((@usn6 :_usn3:@usn6{`5esn`:07 Starts With \"d_str\" Starts With $12})<-[@usn6{@usn5:999[1000..],`7esn`:12 =~$`5esn` =~$_usn3}]->(:`7esn`:_usn4{usn1:$`8esn` In {`2esn`} In $0}).`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:#usn8)Assert {usn2:True In $#usn8}.`` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:`3esn`]->()Assert Exists({_usn4:1e1 In 0xabc,usn1:0xabc In 9e1}.#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On(``:_usn3)Assert (:`2esn`{`4esn`:{@usn5} In $`5esn`,`7esn`:{`8esn`} In 12 In 1e1})<-[:usn2|_usn3* 0xabc..01234567]->(:_usn4:`1esn`).#usn7? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:`6esn`]-()Assert Exists(Shortestpath((usn1 :#usn8:#usn7{@usn6:`4esn`[`1esn`][{`8esn`}],`6esn`:$7[0X0123456789ABCDEF]})).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:`5esn`]->()Assert Exists(All(@usn6 In 0xabc Ends With 1.0 Ends With $`` Where {7}['s_str'..]).`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On()<-[``:@usn6]-()Assert Exists(Allshortestpaths(((`3esn` :`1esn`{`8esn`:12e12[$`5esn`..1.0][$`8esn`..$`1esn`]})-[?* 07..]->(:usn1{#usn8:True Ends With usn1})-[?:``]-(`7esn` :@usn6))).`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn2:`2esn`]-()Assert Exists(Case $0 Starts With `2esn` Starts With {`1esn`} When 12.0 Starts With 00 Starts With 9e1 Then usn2[..$`8esn`][..``] Else True Starts With 2.12 Starts With {123456789} End.usn1)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`7esn`)Assert usn1(Distinct $@usn5[$123456789..][@usn5..],0.0[010..12.e12])._usn4 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:usn1]-()Assert Exists(All(usn2 In {@usn5} Where {`3esn`} Ends With $123456789 Ends With {12}).`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:#usn8)Assert None(#usn7 In {`5esn`} Ends With `2esn` Where `5esn` =~@usn6 =~$`7esn`).@usn6 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`5esn`)Assert Filter(usn2 In {@usn5} Where {`2esn`}[..$`6esn`][..`3esn`]).`5esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn5:usn2]-()Assert Exists([{`8esn`}[{`6esn`}..1.e1],$`7esn` Is Not Null Is Not Null].@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:#usn7]-()Assert Exists([{`2esn`}[{123456789}..$#usn7][_usn3..999],{0}[.e12..]].`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:#usn7)Assert Any(#usn8 In True In `8esn` Where 0xabc Contains False Contains {1000}).#usn8! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:@usn5)Assert (`3esn` :#usn7:`6esn`)<-[`4esn`?:#usn7|:``* 07..]->({@usn6:12e12[..1.e1][..$12],`5esn`:{`7esn`}[..$`8esn`][..{`8esn`}]}).usn1? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`3esn`)Assert Any(`5esn` In $999[12] Where $`7esn` Is Not Null Is Not Null).`7esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`7esn`)Assert Exists(Single(`7esn` In @usn5[01..`6esn`] Where `6esn` Contains `6esn` Contains 9e1).`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:usn2)Assert Exists(`1esn`(Distinct `5esn`[$123456789][`2esn`]).``!)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn8:_usn3]-()Assert Exists({#usn8:$`7esn` Ends With usn2,`8esn`:1.e1[0xabc..][.e12..]}.usn1)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`5esn`:#usn7]-()Assert Exists(usn2(`3esn` =~12e12,Null In {_usn3} In _usn3).`5esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:`2esn`]->()Assert Exists(Reduce(_usn4=\"d_str\" Starts With $`` Starts With $usn1,#usn7 In {`5esn`} Ends With `2esn`|`4esn` Starts With 01).`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:#usn7)Assert Extract(usn2 In 999[{123456789}..999] Where 12.e12 Starts With `8esn` Starts With 9e12|7 Is Null Is Null).`5esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`6esn`)Assert Reduce(_usn4={`1esn`} =~{``} =~$`8esn`,`5esn` In $999[12]|_usn3[$123456789..]).`1esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:usn1)Assert [{usn1} Contains 123.654 Contains {#usn8},12.e12 Starts With `8esn` Starts With 9e12,#usn7 =~{7}].`6esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:@usn5]->()Assert Exists(`2esn`('s_str'[9e12..][12e12..]).`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:`4esn`]->()Assert Exists([`6esn` In {1000} Is Not Null].`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`2esn`:#usn8]-()Assert Exists(None(@usn5 In 07[{_usn4}..{`4esn`}] Where False Contains _usn3 Contains {`5esn`}).`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`8esn`)Assert Filter(@usn5 In 07[{_usn4}..{`4esn`}] Where $`6esn`[`5esn`..][$12..]).`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:#usn7)Assert Exists(#usn8(#usn7[$7..{_usn4}]).`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:`7esn`]->()Assert Exists(Single(`7esn` In \"d_str\" Ends With 0e0 Ends With {usn2} Where _usn3[..0xabc][..@usn5]).usn1)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:#usn7)Assert Extract(usn1 In #usn8 =~$@usn5 Where 0x0[9e0..][$@usn5..]|$`4esn` =~{usn1}).`2esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn4:``)Assert [@usn5 In 1.0 Starts With 12 Where 0.0[.e12..]].`1esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`4esn`:usn2]-()Assert Exists(Case {#usn8}[False..{usn1}][$`6esn`..0Xa] When $@usn5 Is Not Null Then {0}[$usn2..0.e0][{`4esn`}..True] Else #usn7 Starts With {@usn6} Starts With {`1esn`} End.`3esn`)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:#usn8)Assert Exists(Filter(usn1 In {usn2} Contains {123456789} Contains 0Xa Where $`1esn`[`6esn`..$12][{usn2}..07]).``!)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`4esn`)Assert Exists([usn2 In {@usn5} Where 12[0X0123456789ABCDEF..][Count(*)..]|0.0[.e12..]]._usn4!)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`6esn`)Assert Reduce(#usn8={0}[.e12..],`7esn` In @usn5[01..`6esn`]|`1esn` =~12.0).`2esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`3esn`)Assert Exists(Extract(`1esn` In {``} =~{`2esn`} =~$`8esn` Where {`2esn`} In `5esn` In usn2|usn1[12.e12..$`1esn`][$`2esn`..0Xa]).`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`4esn`)Assert Exists(Any(usn2 In {@usn5} Where $0 Starts With `2esn` Starts With {`1esn`}).#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:#usn7)Assert Case When 's_str' =~0x0 =~{#usn8} Then {`1esn`}[\"d_str\"][{1000}] When 12 Contains 9e1 Contains $`8esn` Then {`3esn`}[`6esn`..] Else 010 Is Not Null Is Not Null End.@usn6? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`8esn`)Assert Exists(Extract(@usn5 In 07[{_usn4}..{`4esn`}] Where True In $#usn8|0.0).`5esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[``:`8esn`]-()Assert Exists(Reduce(@usn5=$#usn7 =~Count(*) =~@usn5,usn2 In {@usn5}|$123456789 Ends With 1e1).@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`3esn`)Assert Exists(Case 12.0 =~0.12 =~999 When $`8esn` In {`2esn`} In $0 Then {usn1} Contains 123.654 Contains {#usn8} End.`7esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`7esn`:#usn8]-()Assert Exists({usn1:`4esn` Is Not Null,`6esn`:`1esn` In 9e0 In {7}}.@usn6)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`3esn`:@usn5]-()Assert Exists(Allshortestpaths(((_usn3 :`5esn`)-[#usn8:``* 00..999{usn2:{@usn5} Contains 0X7 Contains 1e1}]-({_usn3:9e12[..#usn7][...e0]}))).`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On(usn1:_usn4)Assert Shortestpath(((@usn5 :``:usn1{`7esn`:0.e0[#usn7..][$@usn5..],usn2:'s_str' Contains $_usn4 Contains $`7esn`})<-[#usn8?:@usn6{`4esn`:999 =~0x0 =~2.12,`7esn`:{#usn8}[False..{usn1}][$`6esn`..0Xa]}]->(@usn6 {@usn6:\"d_str\" Starts With $`` Starts With $usn1,`7esn`:{0}[$0][$#usn7]})-[@usn6* ..12{`1esn`:{`6esn`} Starts With 123456789 Starts With 0x0}]->(:`3esn`:@usn5{`8esn`:$`7esn` Contains 9e12 Contains `2esn`,`3esn`:$usn1[0X0123456789ABCDEF...e12]}))).`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`7esn`)Assert Exists([usn1 In #usn8 =~$@usn5 Where {#usn7}[$usn2]].`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn8:#usn7]-()Assert Exists({@usn5:0e0 Starts With 's_str'}.`5esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`4esn`)Assert Exists([#usn7 In {`5esn`} Ends With `2esn` Where 12[0X0123456789ABCDEF..][Count(*)..]|#usn7[9e1..$@usn5]].`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[``:_usn4]->()Assert Exists((`8esn` :usn2)<-[@usn5?* 01..{@usn6:0.e0 Ends With {@usn5} Ends With 0e0}]->(`7esn` {`8esn`:_usn4 In usn2})<-[`6esn`?:`5esn`|`3esn`* 01..{`4esn`:00 Starts With 12 Starts With 0e0,`5esn`:{usn1}[..{#usn7}]}]-(:@usn5:usn2{@usn6:{_usn4} Ends With 12.0 Ends With $@usn6,#usn8:0xabc Is Not Null Is Not Null}).`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`8esn`)Assert Exists((:#usn7:`6esn`{`6esn`:07 Starts With \"d_str\" Starts With $12,`3esn`:0Xa Is Null Is Null})-[`1esn`?{`2esn`:$7[0X0123456789ABCDEF]}]->(@usn6 :_usn4:`1esn`{`1esn`:$`2esn`[#usn7][01]})._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:_usn3]-()Assert Exists([9e12 Is Null Is Null,Null In 1e1 In {999}].`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`1esn`:@usn6]-()Assert Exists(Reduce(usn2=$#usn7 Contains {usn2},@usn5 In 1.0 Starts With 12|01).`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:_usn3)Assert Exists(Extract(@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`} Where 0e0 Ends With 0 Ends With {`6esn`}).`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`8esn`)Assert Exists(Shortestpath((((`` {#usn7:{#usn7} Starts With $`1esn` Starts With 07,`4esn`:_usn4 In usn2})-[?:`4esn`|`2esn`* 01234567..0Xa{`8esn`:{`7esn`},usn2:1000 Contains 12.e12}]->(`` :usn1)<-[`7esn`?* 0xabc..01234567]-(usn1 :`4esn`:`3esn`{`1esn`:{`4esn`}[0xabc..][010..]})))).`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`8esn`)Assert Exists([123.654 Starts With `8esn` Starts With @usn5,$`4esn` Is Null].`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`1esn`)Assert Reduce(`2esn`=$`8esn` In {`2esn`} In $0,`7esn` In @usn5[01..`6esn`]|$7[.e1]).`` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn2:_usn3]-()Assert Exists(Case 1.e1 Is Not Null When $0 Ends With `2esn` Then 's_str' Contains $_usn4 Contains $`7esn` End.@usn5?)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`2esn`)Assert Exists(Reduce(`4esn`={usn2} Contains {123456789} Contains 0Xa,usn1 In #usn8 =~$@usn5|.e0 In 9e1 In $_usn3).usn2?)"),
    octest_legacy:ct_string("Create Constraint On()-[usn2:#usn8]->()Assert Exists(Single(usn2 In {@usn5} Where 9e0[{`8esn`}]).`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`8esn`)Assert [0.0 Starts With $`6esn`,{@usn5} In 0X0123456789ABCDEF In 1000,1.e1 =~123.654 =~$`3esn`].``! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`4esn`)Assert Exists(Reduce(@usn5=0e0 Starts With 's_str',`5esn` In $999[12]|0xabc[{@usn5}])._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:@usn6]-()Assert Exists(Single(#usn8 In True In `8esn` Where 07[{_usn4}..{`4esn`}])._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:@usn6)Assert Extract(`` In 0X0123456789ABCDEF =~$@usn6 =~$`8esn` Where $#usn7[$``..{`7esn`}]).`6esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:usn2)Assert Exists(Reduce(`8esn`=9e1 Is Not Null Is Not Null,@usn5 In 07[{_usn4}..{`4esn`}]|12.e12[..9e12][..1000]).usn2!)"),
    octest_legacy:ct_string("Create Constraint On(usn1:_usn4)Assert Exists([{@usn5} =~$`2esn`].`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`8esn`)Assert (:`5esn`{`2esn`:0xabc =~{`8esn`} =~{_usn3}})<-[_usn4:_usn4|`5esn`* ..999]->(`4esn` {@usn6:1000 In {`4esn`}})<-[`4esn`* 1000]->(:`4esn`:`3esn`{`3esn`:{1000}[0e0][{usn1}],`1esn`:{`7esn`}}).`3esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:#usn8)Assert [`` In 0X0123456789ABCDEF =~$@usn6 =~$`8esn` Where $`8esn` Contains 12|{_usn4} =~0 =~{12}].`8esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`2esn`)Assert 12.`` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn8:#usn7]-()Assert Exists([0x0[9e0..][$@usn5..],{`4esn`} Is Null].`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:_usn3)Assert @usn6(Distinct 9e1 Is Not Null Is Not Null).`8esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:@usn6)Assert Exists({`3esn`:.e12 Is Not Null}.`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`1esn`)Assert Shortestpath(((@usn6 :`8esn`:_usn3)-[?:`6esn`|:`7esn`{`4esn`:01234567[usn1]}]-(@usn6 $12)<-[:@usn5|``* 1000{`2esn`:#usn8[1e1..],`1esn`:$#usn8 In $0 In {`2esn`}}]->(:#usn8:#usn7{``:$0 Starts With `2esn` Starts With {`1esn`},@usn6:.e12 Is Not Null}))).@usn5? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn1:_usn4]-()Assert Exists(All(_usn4 In .e12 Is Not Null Where {0}[$usn2..0.e0][{`4esn`}..True]).`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn5:@usn5]-()Assert Exists([`5esn` In `5esn` In 123.654 In {`6esn`} Where True In `8esn`|{999}[`2esn`]].`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:usn1)Assert Exists(Case When 0Xa[..0.12] Then Null[..010][..$@usn6] End.@usn5?)"),
    octest_legacy:ct_string("Create Constraint On()-[usn2:`3esn`]-()Assert Exists(Case When 0xabc Starts With 1.0 Starts With {`2esn`} Then 2.12 Contains 0.0 Contains $`6esn` When 1e1 In $0 Then $#usn8 In $0 In {`2esn`} End.`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`6esn`)Assert Reduce(`2esn`=$`7esn` =~#usn8 =~{`7esn`},`4esn` In False[0.0..{@usn6}]|$`3esn` Contains .e1)._usn4! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[``:#usn8]->()Assert Exists(Filter(_usn4 In .e12 Is Not Null Where 2.12 Contains $#usn7 Contains {`6esn`}).@usn5?)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:@usn5)Assert Exists(Extract(@usn5 In 07[{_usn4}..{`4esn`}] Where #usn8[1e1..`1esn`][{1000}..`6esn`])._usn3!)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:`2esn`]-()Assert Exists(Any(usn2 In {@usn5} Where $1000 Is Null Is Null)._usn4!)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`6esn`)Assert (#usn8 :`6esn`:`4esn`{`5esn`:`5esn`[$123456789][`2esn`]})-[#usn7?]->(#usn8 {`5esn`:0X0123456789ABCDEF[1.0..],`4esn`:{`5esn`} Starts With 123456789 Starts With 07})<-[:usn2|_usn3* 0X0123456789ABCDEF]-(#usn7 :`8esn`:_usn3{@usn6:9e1[010..][`5esn`..],`3esn`:0.e0[$`1esn`..]}).@usn6 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:_usn4)Assert {`3esn`:7 Is Null Is Null,`7esn`:$`8esn`[#usn7..][0X7..]}.@usn6? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`6esn`)Assert All(usn2 In {@usn5} Where $0 Starts With `2esn` Starts With {`1esn`}).``? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:`1esn`)Assert Exists([`5esn` In `5esn` In 123.654 In {`6esn`} Where _usn3 In 1.e1].#usn7?)"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:`2esn`]-()Assert Exists(All(usn1 In {usn2} Contains {123456789} Contains 0Xa).`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`4esn`)Assert Exists(Case 1000 In {`4esn`} When _usn3 In 1.e1 Then $999[$12..][.e0..] Else $@usn6 End.``?)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:#usn7)Assert Exists(Extract(@usn6 In 0xabc Ends With 1.0 Ends With $`` Where 0 Ends With .e0|$`3esn` In {`1esn`} In 12e12)._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:@usn5]->()Assert Exists((`7esn` :`6esn`:`4esn`{`2esn`:0.e0[$`1esn`..]})-[`1esn`?{`2esn`:$7[0X0123456789ABCDEF]}]->(@usn6 :_usn4:`1esn`{`1esn`:$`2esn`[#usn7][01]})._usn4)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:`3esn`]-()Assert Exists({@usn5:12 =~{#usn7},`4esn`:@usn6[2.12..$123456789][$`8esn`..{123456789}]}.#usn8)"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:#usn8]->()Assert Exists((`2esn` :``:usn1{`4esn`:#usn7 Starts With {@usn6} Starts With {`1esn`}})-[`5esn`?:`8esn`|:_usn3* 0x0..7{usn2:$#usn7 Contains {usn2}}]-({@usn5:usn2[$7..$`5esn`]})._usn4?)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:_usn3)Assert [@usn5 In 07[{_usn4}..{`4esn`}] Where 9e0[..{usn1}]|'s_str'[..'s_str'][..{#usn7}]].`8esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:usn1)Assert Exists(Extract(`4esn` In False[0.0..{@usn6}] Where $`8esn`[2.12][$_usn4]|{`7esn`} Starts With 12.0 Starts With 07).@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`4esn`)Assert Exists(All(`5esn` In `5esn` In 123.654 In {`6esn`} Where 1e1 In 0xabc).`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:@usn6)Assert Reduce(#usn7=$usn1 Is Not Null Is Not Null,`6esn` In {1000} Is Not Null|{0}[$usn2..0.e0][{`4esn`}..True]).#usn7 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`5esn`)Assert Case `2esn` =~$#usn7 =~_usn4 When `8esn`[$1000..$#usn8][_usn3..{7}] Then {usn2}[{`7esn`}][$usn2] When $12[{`5esn`}..] Then #usn8 =~$@usn5 Else 0x0 Is Null End.#usn8! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:_usn3)Assert Exists(Single(`5esn` In `5esn` In 123.654 In {`6esn`}).#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`7esn`:`5esn`]-()Assert Exists(Extract(#usn7 In {`5esn`} Ends With `2esn` Where 0xabc Is Null|12e12[..1.e1][..$12]).`3esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:usn2)Assert Exists(Allshortestpaths((usn1 :usn2)).usn1!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`8esn`)Assert Extract(`1esn` In {``} =~{`2esn`} =~$`8esn` Where 12[$`8esn`..{_usn4}]|9e0[..{usn1}]).@usn6 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`6esn`)Assert [`1esn` =~12.0,False[0.0..{@usn6}],0.0[.e12..]].`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:@usn6)Assert Exists((`8esn` {@usn5:{`4esn`} Contains \"d_str\",`7esn`:0Xa[$#usn8]})<-[?:`4esn`|`2esn`{`7esn`:$#usn8 In $0 In {`2esn`},`7esn`:'s_str' Is Not Null}]->({@usn6:12e12[..1.e1][..$12],`5esn`:{`7esn`}[..$`8esn`][..{`8esn`}]})-[#usn8:``* 00..999{usn2:{@usn5} Contains 0X7 Contains 1e1}]-({_usn3:9e12[..#usn7][...e0]}).`2esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`6esn`)Assert Exists(Extract(usn2 In 999[{123456789}..999] Where `5esn`[$usn1..$7]|$`8esn` Contains {`7esn`} Contains $`4esn`).`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`3esn`)Assert Exists({_usn3:{_usn4} Ends With 12.0 Ends With $@usn6}.`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`4esn`)Assert Exists(Reduce(@usn6={`5esn`} Starts With 123456789 Starts With 07,`6esn` In {1000} Is Not Null|#usn7 Starts With {@usn6} Starts With {`1esn`}).#usn8)"),
    octest_legacy:ct_string("Create Constraint On(``:`2esn`)Assert Exists(Filter(usn2 In 999[{123456789}..999] Where `5esn`[$usn1..$7]).`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:usn1]->()Assert Exists(Extract(`5esn` In `5esn` In 123.654 In {`6esn`} Where usn1[12.e12..$`1esn`][$`2esn`..0Xa]|$1000[999..][0Xa..]).`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On()<-[`1esn`:`2esn`]-()Assert Exists(Any(@usn5 In 07[{_usn4}..{`4esn`}]).`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:@usn5)Assert Exists(Extract(#usn8 In True In `8esn` Where @usn5[01..`6esn`]|010 Is Not Null Is Not Null).usn2!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:#usn8)Assert Exists(Single(@usn5 In 07[{_usn4}..{`4esn`}]).usn2!)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:#usn7)Assert Exists(Single(`5esn` In `5esn` In 123.654 In {`6esn`} Where $12[{`5esn`}..]).`5esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:usn2]-()Assert Exists([01].`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:_usn4)Assert Exists(Extract(@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`} Where {`6esn`} Starts With $1000|0.0[0.12]).usn2!)"),
    octest_legacy:ct_string("Drop Constraint On()-[``:usn2]->()Assert Exists({#usn7:$@usn5 Is Not Null}._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`3esn`)Assert None(#usn7 In {`5esn`} Ends With `2esn` Where $999[999..][$_usn4..]).usn2! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:_usn3]-()Assert Exists(Extract(@usn6 In 0xabc Ends With 1.0 Ends With $``).`4esn`!)"),
    octest_legacy:ct_string("Drop Index On:`6esn`(`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`2esn`)Assert Exists([`` In 0X0123456789ABCDEF =~$@usn6 =~$`8esn` Where {_usn4} In 9e0|{@usn5} Contains 0X7 Contains 1e1]._usn3!)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`6esn`)Assert [`` In 0X0123456789ABCDEF =~$@usn6 =~$`8esn` Where {7} Starts With $usn2 Starts With $usn2|9e1 Is Not Null].`1esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:usn2)Assert (@usn5 )-[`3esn`?* 0xabc..01234567]-(:`8esn`:_usn3)-[@usn6?* 123456789..999{`3esn`:$`3esn` Ends With `8esn` Ends With {`5esn`}}]-(:`5esn`{``:{`5esn`} Ends With `2esn`}).`8esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:usn2)Assert [{_usn4} In 9e0,`3esn`[{`1esn`}]].`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:``)Assert 010.`6esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:usn2)Assert _usn4(#usn7).`8esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:@usn5)Assert {`2esn`:0xabc[{@usn5}],@usn5:0[0xabc]}.#usn7? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:_usn4]-()Assert Exists(Shortestpath((`8esn` {#usn8:`4esn`[usn2..]})<-[* ..999]-(`8esn` :`5esn`)).`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:usn1)Assert Extract(@usn6 In 0xabc Ends With 1.0 Ends With $`` Where 00[usn2..`3esn`][0X0123456789ABCDEF..$7]|$`8esn`[..`6esn`][..#usn7])._usn4 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`1esn`)Assert Exists(Case When {`2esn`} Contains 0.12 Contains 0.0 Then 's_str'[9e12..][12e12..] When {``}[$@usn5] Then $12[0xabc..][12e12..] End.`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`4esn`)Assert Exists((:@usn5:usn2{@usn6:`4esn`[`1esn`][{`8esn`}],`6esn`:$7[0X0123456789ABCDEF]})-[`1esn`?{`2esn`:$7[0X0123456789ABCDEF]}]->(@usn6 :_usn4:`1esn`{`1esn`:$`2esn`[#usn7][01]})-[_usn4?* 0X7..{`2esn`:{#usn7} =~$0,_usn4:$@usn5[`2esn`..][#usn7..]}]-(#usn7 ).`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:#usn8)Assert Allshortestpaths((usn1 :`4esn`:`3esn`)<-[?{`4esn`:$#usn7 Starts With {`2esn`} Starts With @usn6}]-({_usn4:7[`7esn`..usn2][$`5esn`..0X7]})).`1esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:usn1)Assert Exists(Shortestpath(((:``:usn1{`5esn`:$`3esn` Is Null Is Null,`4esn`:\"d_str\" Starts With $`` Starts With $usn1})<-[?:`1esn`|``* 01234567..0Xa{`7esn`:0.0 Starts With $`6esn`,`8esn`:12 Ends With @usn5 Ends With 1e1}]->(`5esn` {usn2:$#usn7 Contains {usn2}}))).usn1)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:_usn3]->()Assert Exists([`4esn`[`1esn`][{`8esn`}],9e12[..#usn7][...e0]].#usn7?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:#usn7)Assert Exists(Extract(`1esn` In {``} =~{`2esn`} =~$`8esn` Where 12[$`8esn`..{_usn4}]|{``} Starts With True Starts With True).`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On()<-[``:`8esn`]-()Assert Exists(None(#usn7 In $@usn6 Contains 0 Contains 0 Where `4esn` Starts With 0x0)._usn4?)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:@usn5)Assert Exists(`8esn`(Distinct 0X0123456789ABCDEF Starts With #usn7,$#usn7 =~Count(*) =~@usn5).usn1?)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:@usn6)Assert Exists(Case When 00[$usn2..][0.12..] Then {`7esn`} =~01234567 =~`7esn` When `1esn` In {`4esn`} Then $0[{``}..`2esn`] End.`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:`2esn`]->()Assert Exists(Extract(@usn6 In 0xabc Ends With 1.0 Ends With $`` Where .e1 Starts With #usn7 Starts With 1.e1|False[0.0..{@usn6}]).`6esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:`3esn`]-()Assert Exists(Filter(`5esn` In `5esn` In 123.654 In {`6esn`} Where $12[{`5esn`}..]).@usn5)"),
    octest_legacy:ct_string("Create Constraint On(usn1:#usn8)Assert (`6esn` :`3esn`:@usn5{`7esn`:{@usn5} In 0X0123456789ABCDEF In 1000,#usn8:9e12[..#usn7][...e0]})<-[`5esn`:`8esn`|:_usn3{`3esn`:'s_str' =~0x0 =~{#usn8}}]->(`2esn` :`6esn`:`4esn`)<-[_usn4?:_usn3|:`6esn`]->(@usn5 ).`5esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:`3esn`]-()Assert Exists(Filter(`5esn` In `5esn` In 123.654 In {`6esn`} Where True In `8esn`)._usn4?)"),
    octest_legacy:ct_string("Create Constraint On(usn2:_usn3)Assert Exists({`7esn`:{12} Is Null}.`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:usn1)Assert Reduce(`2esn`=True Starts With `` Starts With 0.e0,_usn4 In .e12 Is Not Null|{@usn5} Contains 0X7 Contains 1e1).`7esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`2esn`)Assert #usn7({`4esn`} Is Null,{@usn5}).`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:@usn5)Assert Exists(usn2(Distinct $`2esn` Contains `5esn` Contains .e1).usn1?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:@usn5)Assert Exists(Case When $`8esn` Contains {`7esn`} Contains $`4esn` Then $@usn5 Is Not Null Else `5esn` =~@usn6 =~$`7esn` End.#usn7)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:usn2)Assert Exists(Allshortestpaths((`3esn` :usn2{`8esn`:`3esn` Is Null Is Null,@usn6:0x0 =~$`2esn` =~#usn7})).`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`3esn`)Assert Extract(`4esn` In False[0.0..{@usn6}] Where $`8esn`[2.12][$_usn4]|$`3esn`[12.e12...e1]).@usn6? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:``]-()Assert Exists(All(`1esn` In {``} =~{`2esn`} =~$`8esn` Where $`7esn` Contains 9e12 Contains `2esn`).`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:@usn5)Assert {_usn4:0X0123456789ABCDEF[..`5esn`][..$`3esn`]}.`6esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`4esn`)Assert Exists(Reduce(`7esn`=Count(*) In `1esn` In {_usn3},`6esn` In {1000} Is Not Null|False =~9e0 =~{`5esn`}).@usn6)"),
    octest_legacy:ct_string("Create Index On:#usn8(``)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:#usn8)Assert Exists(Extract(#usn7 In {`5esn`} Ends With `2esn` Where 12[0X0123456789ABCDEF..][Count(*)..]|$`8esn`[#usn7..][0X7..]).`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`7esn`)Assert Shortestpath((usn2 {`1esn`:{`2esn`} Contains 0.12 Contains 0.0,`4esn`:{`5esn`} Contains 0})-[`5esn`?:`5esn`|`3esn`* 123456789..999]->({_usn3:0 Is Null,#usn7:$_usn3[@usn6..][{``}..]})<-[@usn5?:`3esn`|``* 01..]->(#usn8 {@usn5:_usn4 =~$#usn7 =~`8esn`})).#usn7? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:usn1]-()Assert Exists([@usn5 In 07[{_usn4}..{`4esn`}]].usn1?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`6esn`)Assert Exists([$12[0xabc..][12e12..],{`1esn`}[`1esn`..123.654][{`4esn`}..$7]].`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:@usn5]->()Assert Exists([$@usn5[$123456789..][@usn5..]].`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:_usn4)Assert [@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`} Where 0xabc[$`2esn`..]].#usn8! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:usn2)Assert Exists(Case When $`8esn` Starts With $123456789 Then $#usn7 Is Null When #usn7 Starts With {@usn5} Starts With 07 Then {`1esn`}[01234567..][@usn5..] End.#usn8!)"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn7:`4esn`]-()Assert Exists(Allshortestpaths(({_usn4:{@usn5} In $`5esn`})).`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn2:`7esn`]-()Assert Exists(Case 123456789 Is Not Null Is Not Null When 999[1000..] Then {`8esn`} Is Not Null Is Not Null When 9e12 Is Null Is Null Then $12[`6esn`][$#usn8] Else $999[$12..][.e0..] End.``!)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:_usn4)Assert Any(`4esn` In False[0.0..{@usn6}] Where {1000}[0e0][{usn1}]).`6esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`1esn`)Assert Exists(Reduce(@usn5={_usn3} In 010 In 0.e0,`7esn` In \"d_str\" Ends With 0e0 Ends With {usn2}|.e0 Starts With usn2).``?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`3esn`)Assert [$`4esn`[{@usn5}],.e12 Starts With 12].`6esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`8esn`)Assert (`8esn` :`2esn`{`5esn`:0 Is Not Null})<-[* ..999]-(`5esn` {_usn3:0 Is Null,#usn7:$_usn3[@usn6..][{``}..]}).`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`7esn`)Assert {`6esn`:_usn4 Ends With $`3esn` Ends With {`3esn`}}.`4esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:`7esn`]-()Assert Exists(Extract(@usn5 In 1.0 Starts With 12 Where 01 Starts With {0} Starts With $`4esn`).`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:@usn5)Assert [$`6esn` Starts With _usn4 Starts With `5esn`,{999} Ends With 1000 Ends With 1e1].@usn5? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:@usn5)Assert [$`3esn`[$_usn4][True],`8esn` =~0].@usn5 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn7:`5esn`]->()Assert Exists(All(@usn5 In 1.0 Starts With 12 Where 010 Contains $`5esn`).`4esn`!)"),
    octest_legacy:ct_string("Create Index On:`6esn`(`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`4esn`)Assert [{usn1} Contains 123.654 Contains {#usn8},12.e12 Starts With `8esn` Starts With 9e12,#usn7 =~{7}].`6esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:#usn8)Assert Exists({#usn8:$`6esn` Starts With _usn4 Starts With `5esn`}.`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn2:``]-()Assert Exists([usn2[$7..$`5esn`],12.0 Ends With 0e0 Ends With $123456789,{`2esn`}[..$`6esn`][..`3esn`]]._usn3)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`7esn`)Assert Exists([$`6esn` Is Null Is Null,01 Starts With {0} Starts With $`4esn`,$`2esn` In 0xabc].``?)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`1esn`)Assert Exists(Extract(@usn6 In 0xabc Ends With 1.0 Ends With $`` Where $`7esn`[_usn3..][{_usn3}..]|{_usn4} In 0.12 In {_usn3}).`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:@usn6)Assert {`5esn`:{#usn7} =~{usn1}}.usn2 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:_usn4)Assert Exists([usn2 In 999[{123456789}..999] Where {usn1}[$`8esn`][0.e0]]._usn3)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:_usn4)Assert Filter(@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`} Where $`4esn` Is Null).`7esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:usn1)Assert Case 999[1000..] When {`1esn`} =~{``} =~$`8esn` Then `1esn` In `7esn` In {`7esn`} End.``? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`4esn`)Assert Exists(Any(`5esn` In $999[12] Where {``} Starts With True Starts With True).`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`4esn`)Assert #usn7(1e1[$@usn5]).@usn5! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:usn2)Assert Reduce(`6esn`=$`4esn` =~{usn1},@usn5 In 07[{_usn4}..{`4esn`}]|12 Contains 9e1 Contains $`8esn`).`5esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`6esn`)Assert Exists(None(`7esn` In @usn5[01..`6esn`] Where $123456789 Ends With 0X0123456789ABCDEF Ends With `7esn`).`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:`7esn`]-()Assert Exists(All(@usn5 In 07[{_usn4}..{`4esn`}] Where {`7esn`} =~01234567 =~`7esn`).@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:_usn4)Assert [@usn6 In 0xabc Ends With 1.0 Ends With $`` Where $@usn5[`2esn`..][#usn7..]|$`4esn` Is Null].usn1! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:`1esn`)Assert (#usn8 :`8esn`:_usn3{`2esn`:#usn8 Ends With `5esn` Ends With _usn3})-[`3esn`?* 0xabc..01234567]-(@usn6 :#usn7:`6esn`{`2esn`:00[$usn2..][0.12..]}).`2esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:#usn7)Assert Case When 01234567[``..$`1esn`][True..$#usn7] Then {#usn8} Ends With {123456789} Ends With #usn8 Else {`7esn`} End.``! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:usn1)Assert Exists(Case When 07 Starts With \"d_str\" Starts With $12 Then True =~`5esn` Else 12.e12 =~$`7esn` =~{``} End.`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`2esn`)Assert Exists((@usn5 :`1esn`{_usn4:.e12[0.0..][$#usn8..]})<-[#usn7:_usn3|:`6esn`* 0{`7esn`:{999} =~7 =~{usn1}}]->(@usn5 :usn1{usn2}).`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:_usn4)Assert Exists(Shortestpath(((`6esn` :`5esn`{@usn5:{`7esn`}[..$`8esn`][..{`8esn`}],`3esn`:usn2[..$`8esn`][..``]})-[?* 00..999{`2esn`:01[$`1esn`..\"d_str\"]}]->(_usn3 :``:usn1{#usn7:0xabc =~{`8esn`} =~{_usn3}})-[?:`4esn`|`2esn`* 01234567..0Xa]->({#usn8:`6esn` =~12.e12 =~123456789,#usn8:{@usn5} Contains 0X7 Contains 1e1}))).`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`3esn`)Assert Exists([$usn1 Ends With {123456789} Ends With 1.e1,#usn7[$7..{_usn4}],0X0123456789ABCDEF[0e0..$12][00..{12}]].`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:usn2)Assert None(`7esn` In \"d_str\" Ends With 0e0 Ends With {usn2} Where _usn4 Ends With $`3esn` Ends With {`3esn`}).`3esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:@usn5)Assert Exists(Case $999 Is Not Null Is Not Null When False Is Null Is Null Then $0 Ends With `2esn` End._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn6:`6esn`]-()Assert Exists(All(#usn8 In True In `8esn` Where False[Count(*)])._usn3)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`7esn`)Assert [@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`} Where `1esn` In 12.e12 In $#usn7].usn2 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:`7esn`]->()Assert Exists(Single(`` In 0X0123456789ABCDEF =~$@usn6 =~$`8esn` Where 1000 Contains 12.e12).`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`3esn`)Assert Exists(Extract(`` In 0X0123456789ABCDEF =~$@usn6 =~$`8esn` Where 1000 Contains 12.e12).`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`8esn`:usn2]-()Assert Exists(Case 1e1[1000] When 0.0[0.12] Then .e1[..`2esn`] End.`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`5esn`)Assert Exists([@usn5 In 07[{_usn4}..{`4esn`}] Where $`6esn`[`5esn`..][$12..]|12[True]].`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`4esn`:_usn3]-()Assert Exists([{999}[`2esn`],{usn2} Is Not Null Is Not Null,_usn3 Ends With {`7esn`} Ends With 12].@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`8esn`)Assert Exists(`6esn`(12.0 Starts With 00 Starts With 9e1).`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`7esn`)Assert Exists({``:$@usn5[`2esn`..][#usn7..]}.#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:_usn4)Assert Filter(`5esn` In $999[12] Where Count(*) Is Not Null Is Not Null)._usn3 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:`1esn`]-()Assert Exists(count(Distinct 12.0[{`6esn`}..123.654][@usn5..usn1]).`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:usn2)Assert Exists([{`3esn`} Is Null Is Null,_usn3 Ends With {`7esn`} Ends With 12,00[usn2..`3esn`][0X0123456789ABCDEF..$7]].usn2?)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:usn1)Assert All(usn2 In {@usn5} Where {`3esn`} Ends With $123456789 Ends With {12}).``? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn6:_usn4)Assert Exists(Filter(usn2 In 999[{123456789}..999] Where {usn1} Contains 123.654 Contains {#usn8}).`7esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:@usn6)Assert Any(`4esn` In False[0.0..{@usn6}] Where 0 Ends With .e0).#usn8! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`5esn`)Assert Exists([$@usn5[$123456789..][@usn5..]].`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:usn1)Assert Exists(Case $#usn8 Is Not Null When 123.654 In {12} In `` Then $@usn6 Contains 0 Contains 0 End._usn3)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`6esn`)Assert Exists([@usn5 In 1.0 Starts With 12 Where Null In {_usn3} In _usn3].usn1)"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:usn2]->()Assert Exists(Extract(#usn7 In {`5esn`} Ends With `2esn` Where 1e1[usn1..$123456789][Count(*)..False])._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`8esn`)Assert Allshortestpaths((usn1 :usn2)).usn1! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:usn2)Assert All(`7esn` In \"d_str\" Ends With 0e0 Ends With {usn2} Where _usn4 Ends With $`3esn` Ends With {`3esn`}).usn1! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:@usn5)Assert Exists(Allshortestpaths(((:#usn8:#usn7)-[`5esn`?{usn2:.e12 Starts With 12,_usn4:0X0123456789ABCDEF[0e0..0xabc]}]->(:`8esn`:_usn3{``:$7 =~{`7esn`} =~$`6esn`,@usn6:$`8esn` Starts With $123456789})-[@usn6:`1esn`|``* 0]->(`4esn` :`6esn`:`4esn`))).usn1!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`4esn`:usn1]-()Assert Exists(Case `5esn` In 123.654 In {`6esn`} When Null In {_usn3} In _usn3 Then @usn6[9e12..] Else 999[1000..] End.``)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:#usn7)Assert `2esn`(`4esn` Is Not Null,010 Starts With `3esn` Starts With {usn1}).@usn5! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`8esn`)Assert {_usn3:'s_str'[..$123456789][..{1000}],`7esn`:.e12[Count(*)..{`4esn`}][07..$1000]}._usn3 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn7:`2esn`]-()Assert Exists(Extract(`7esn` In @usn5[01..`6esn`] Where False Is Null Is Null|usn1 Ends With $@usn6 Ends With $1000).`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:@usn6]->()Assert Exists(`6esn`(Distinct {_usn4} =~0 =~{12}).`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:#usn7]->()Assert Exists([0X7 =~$`6esn`,$`1esn` Contains usn2 Contains 1.0,0Xa Contains {`4esn`} Contains {`1esn`}].usn1)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:``)Assert {`3esn`:00[{999}..$#usn7][$0...e0],`5esn`:True =~_usn3}._usn4? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`4esn`)Assert Exists({`3esn`:$``[{#usn7}..{usn2}]}.`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`5esn`)Assert Exists((@usn6 )<-[_usn4:``{`3esn`:`8esn`[1000..#usn8]}]->(_usn3 {@usn6:$usn1[0X0123456789ABCDEF...e12]})-[`1esn`?:`5esn`|`3esn`]->(`` {`7esn`:$@usn5[$123456789..][@usn5..]}).``?)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`7esn`)Assert Exists((:`5esn`{`3esn`:999[{123456789}..999],`5esn`:123.654 In {12} In ``})-[`5esn`* 123456789..999{usn1:$`4esn` Contains @usn5 Contains {`8esn`},`1esn`:`4esn` Starts With $12 Starts With $12}]->(`4esn` :#usn8:#usn7{`4esn`:12.e12 =~$`7esn` =~{``}}).`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:#usn7)Assert {@usn5:usn2[$7..$`5esn`]}._usn3? Is Unique"),
    octest_legacy:ct_string("Drop Index On:#usn8(``)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:#usn7]->()Assert Exists((:_usn4:`1esn`)-[`2esn`?:_usn4|`5esn`{usn1:9e1[010..][`5esn`..]}]->(:#usn7:`6esn`{`5esn`:Null[..010][..$@usn6],@usn5:1000 Is Not Null Is Not Null}).usn1)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`3esn`)Assert [{`1esn`}[01234567..][@usn5..],{`6esn`}[_usn3],0xabc In 9e1].`7esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`2esn`)Assert Exists({`7esn`:12.0[$999..][$@usn6..]}.`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:``)Assert Case _usn4 In usn2 When .e12 Ends With {`2esn`} Then $`7esn` In $999 In {123456789} End.`3esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:`3esn`]-()Assert Exists(Case When 1e1[1000] Then $0 Ends With `2esn` Else 9e12[..#usn7][...e0] End.usn1!)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`5esn`)Assert Exists({`2esn`:$0}._usn3?)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:#usn8)Assert [usn1 =~1000 =~12].`7esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:`7esn`]->()Assert Exists(Allshortestpaths(((`5esn` {999})<-[?:usn2|_usn3{`4esn`:False Contains {``} Contains $`2esn`,`1esn`:1000 Contains 12.e12}]->(usn2 :@usn5:usn2))).`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:`6esn`]->()Assert Exists(`6esn`({`1esn`}[`1esn`..123.654][{`4esn`}..$7])._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`3esn`)Assert Exists({#usn8:.e1[07..`5esn`][$12...e0]}.`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:`8esn`]-()Assert Exists(Reduce(#usn7=False Contains _usn3 Contains {`5esn`},_usn4 In .e12 Is Not Null|{`2esn`}[..{123456789}]).`7esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[`3esn`:@usn6]-()Assert Exists(Allshortestpaths(((({`8esn`:$`4esn`[{@usn5}],`4esn`:'s_str'[..'s_str'][..{#usn7}]})<-[`4esn`?* 01..]-(_usn4 :_usn3:@usn6{#usn7:{`6esn`} Starts With 0xabc,usn1:True[12e12..]})<-[`1esn`?* 0xabc..01234567{_usn3:$`7esn` Ends With usn2,_usn4:$`5esn` Starts With 1.0 Starts With $usn2}]-(_usn4 {@usn6:$`8esn` Starts With $123456789,@usn5:.e1[..`2esn`]})))).`8esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[``:@usn6]-()Assert Exists(Shortestpath((usn1 {_usn3})).usn2?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:`2esn`]->()Assert Exists({``:{#usn7} Contains \"d_str\" Contains {_usn4}}.usn1!)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`3esn`)Assert All(`5esn` In $999[12] Where 12e12[$`5esn`..1.0][$`8esn`..$`1esn`]).`4esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:@usn6)Assert Exists(Any(usn1 In {usn2} Contains {123456789} Contains 0Xa Where {`7esn`}[..0xabc][..0e0]).@usn6)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:_usn4)Assert Reduce(`5esn`=123.654 In {12} In ``,@usn6 In 0xabc Ends With 1.0 Ends With $``|Count(*) Is Not Null Is Not Null).`7esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:@usn5)Assert exists(Distinct 0X0123456789ABCDEF[0e0..0xabc],12.e12 =~$`7esn` =~{``}).@usn6? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`1esn`)Assert Case When #usn8 Ends With `5esn` Ends With _usn3 Then {`6esn`} Starts With 0xabc When 12 Ends With 0.e0 Then 1e1 In 0xabc End.#usn7! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`8esn`)Assert Exists([usn2 In 999[{123456789}..999] Where @usn5[_usn3..{12}][{999}..$7]|$`7esn` Contains $_usn4 Contains `8esn`].``?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`5esn`)Assert Exists((_usn3 )-[#usn8?:`8esn`|:_usn3* 123456789..999]->({``:{`5esn`} Ends With `2esn`}).#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:`7esn`]-()Assert Exists(Any(`5esn` In `5esn` In 123.654 In {`6esn`} Where 7 Is Null Is Null)._usn4)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`6esn`)Assert [`5esn` In $999[12] Where $`8esn`[#usn7..][0X7..]].`1esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:_usn3]->()Assert Exists({`1esn`:@usn5[_usn3..{12}][{999}..$7]}.`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:#usn7)Assert Exists(All(`` In 0X0123456789ABCDEF =~$@usn6 =~$`8esn` Where {`6esn`}[_usn3]).`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`1esn`)Assert Exists(Case When 00 Is Null Then Count(*) In {`4esn`} When 0xabc =~{`8esn`} =~{_usn3} Then `8esn` =~{`3esn`} =~9e12 Else 0 Is Null End.`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:_usn4]-()Assert Exists(Filter(usn2 In {@usn5} Where True =~`5esn`).`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn2:``]-()Assert Exists(All(`` In 0X0123456789ABCDEF =~$@usn6 =~$`8esn` Where {``} Starts With True Starts With True)._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(``:``)Assert (`2esn` :``:usn1{`4esn`:#usn7 Starts With {@usn6} Starts With {`1esn`}})-[`5esn`?:`8esn`|:_usn3* 0x0..7{usn2:$#usn7 Contains {usn2}}]-({@usn5:usn2[$7..$`5esn`]})._usn4? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:_usn3]->()Assert Exists([$`1esn` Contains $#usn7,0Xa Contains {`4esn`} Contains {`1esn`},00 =~.e12].`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:``]->()Assert Exists(`3esn`(Distinct $``[{#usn7}..{usn2}]).``)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`5esn`)Assert Exists({`6esn`:{12}[{_usn3}..0X7][$7..0]}.`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:usn1)Assert `5esn`({7} Starts With $usn2 Starts With $usn2,$usn1[01234567]).@usn6 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:`8esn`]->()Assert Exists(All(@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`} Where {999}[..{999}]).usn2!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:_usn3)Assert Exists({`5esn`:#usn8[#usn8..],#usn7:$_usn3 Is Not Null}.``)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:#usn8)Assert Exists((:`5esn`)-[@usn6?{`1esn`:12.e12 =~$`7esn` =~{``},@usn6:`4esn`[usn2..]}]->(:#usn7:`6esn`{``:1.0 Ends With {`4esn`} Ends With {`2esn`}}).`5esn`!)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:usn2)Assert Exists((usn2 :``:usn1{`6esn`:$`8esn`[2.12][$_usn4]})<-[* 0]-(usn1 :`4esn`:`3esn`)-[`1esn`* ..12{`3esn`:123456789 Is Not Null}]-({#usn8:`4esn` Starts With 9e12 Starts With 00})._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`5esn`)Assert Exists(Filter(#usn7 In {`5esn`} Ends With `2esn` Where 's_str' Contains $_usn4 Contains $`7esn`).`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:`5esn`]-()Assert Exists(usn1(Distinct $#usn7 Starts With $`4esn`,$`6esn`[`5esn`..][$12..]).`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`4esn`)Assert Exists(Case When 0[`6esn`][1e1] Then 010[``..][{_usn3}..] When $``[..`4esn`][..0] Then $usn2[`4esn`..] End.`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`4esn`:_usn3]-()Assert Exists([.e1 =~9e12,1e1[1000]].#usn7!)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`2esn`)Assert [#usn7[9e1..$@usn5],`4esn`[$999..][1.0..],9e1[..2.12][..@usn6]].#usn7! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`6esn`)Assert Exists(Filter(_usn4 In .e12 Is Not Null Where $`8esn` Contains 12).`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:@usn5)Assert Filter(`6esn` In {1000} Is Not Null Where $`1esn`[`6esn`..$12][{usn2}..07]).`1esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:`3esn`]-()Assert Exists([@usn5 In 1.0 Starts With 12 Where `8esn`[{#usn7}..][_usn4..]|1e1[..12e12]].#usn8)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:_usn3)Assert Case 1000 Starts With {7} Starts With $7 When 1.e1 =~123.654 =~$`3esn` Then {#usn7}[$usn2] When 999[$_usn3][@usn6] Then $#usn7[$usn2..@usn6][$`7esn`..{7}] Else 1e1[..12e12] End.usn1! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:_usn3)Assert Exists(Any(usn2 In {@usn5} Where {`3esn`} Ends With $123456789 Ends With {12}).@usn5!)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:`2esn`]->()Assert Exists({@usn6:{0}[$0][$#usn7]}.`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:usn2)Assert Exists([$7[{`7esn`}][12.0]].`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:``]->()Assert Exists(Shortestpath(({#usn7:$_usn4[0X7..{1000}]})-[`2esn`?:usn1|:@usn6* 0X7..{`6esn`:999 Is Not Null Is Not Null,``:$`1esn`[_usn3..]}]-(`7esn` {`2esn`:0.e0[$`1esn`..]})).`2esn`)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:``)Assert Exists((`4esn` :@usn6)-[usn2:#usn8|_usn3{#usn7:999 Is Not Null Is Not Null,`4esn`:12.e12 =~$`7esn` =~{``}}]-(:usn1{#usn8:True Ends With usn1}).`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:``)Assert _usn4(Distinct _usn3[..0xabc][..@usn5],$0 Ends With `2esn`).`2esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`4esn`)Assert Exists(Single(#usn7 In {`5esn`} Ends With `2esn` Where 12.e12 Starts With `8esn` Starts With 9e12).usn1?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:``)Assert [#usn7 In $@usn6 Contains 0 Contains 0 Where {#usn7} =~{usn1}|2.12 Contains `4esn` Contains .e1].`4esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn2:`4esn`)Assert Filter(`` In 0X0123456789ABCDEF =~$@usn6 =~$`8esn` Where @usn6 Contains {0}).``! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:@usn6)Assert Exists({`7esn`:`6esn` Ends With 0x0 Ends With 12}.`1esn`)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`7esn`)Assert Exists([{`7esn`} Contains 's_str' Contains 01].`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:#usn8]-()Assert Exists(All(`7esn` In @usn5[01..`6esn`] Where True In `8esn`)._usn3!)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:#usn7)Assert Exists(Filter(#usn7 In $@usn6 Contains 0 Contains 0 Where `6esn` Contains `6esn` Contains 9e1).@usn6)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`2esn`)Assert Exists(#usn7(Distinct 12 Contains 9e1 Contains $`8esn`).usn1!)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`5esn`)Assert Exists(Reduce(`5esn`=`1esn` In `7esn` In {`7esn`},@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`}|00[usn1..\"d_str\"][{0}..$`8esn`]).#usn7!)"),
    octest_legacy:ct_string("Create Constraint On(usn1:usn1)Assert Exists(Allshortestpaths((((_usn4 :usn2)-[#usn8?* 0X0123456789ABCDEF{_usn4:usn1[{123456789}..][010..]}]->({`8esn`:12.0 =~0.12 =~999,``:'s_str' Contains $_usn4 Contains $`7esn`})<-[?:usn1|:@usn6{_usn4:$`2esn` In 0xabc,`3esn`:$`8esn` Contains 12}]->(:_usn3:@usn6{@usn6:1e1[{`3esn`}][True]})))).`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:_usn4)Assert Exists(Extract(#usn8 In True In `8esn` Where $#usn8[12e12][0X7]).#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`1esn`)Assert Exists([#usn8 In True In `8esn` Where $#usn8[12e12][0X7]].usn1?)"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:_usn3]-()Assert Exists({@usn5:$``[..`4esn`][..0],`8esn`:{@usn5}}.`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`1esn`)Assert Reduce(usn2=Count(*)[#usn8][$usn1],usn2 In {@usn5}|$usn2[`4esn`..]).`3esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:#usn8)Assert Exists(Case $`6esn` Starts With _usn4 Starts With `5esn` When \"d_str\" Starts With $`` Starts With $usn1 Then 01234567 Starts With 01 Starts With 1.e1 When _usn4[12.e12..] Then {7}['s_str'..] Else $`1esn`[`6esn`..$12][{usn2}..07] End.`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`4esn`)Assert ({``:$`3esn`[12.e12...e1],`1esn`:0xabc =~{`8esn`} =~{_usn3}})<-[`7esn`?* ..12{@usn5:{`6esn`}[_usn3]}]->(`5esn` :`5esn`{`3esn`:7 Is Null Is Null,`7esn`:$`8esn`[#usn7..][0X7..]})<-[{_usn3:$`3esn` Is Null Is Null}]-(:usn1{`4esn`:{`2esn`}[..{123456789}],@usn6:$#usn7 Starts With {`2esn`} Starts With @usn6}).`6esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:`8esn`]-()Assert Exists(Any(`7esn` In \"d_str\" Ends With 0e0 Ends With {usn2} Where True Ends With usn1).`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:`4esn`]-()Assert Exists(Single(usn2 In {@usn5} Where True =~`5esn`).`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:_usn3]-()Assert Exists(Allshortestpaths((({`2esn`:$`2esn`[#usn7][01]})-[?* 0{``:0[1.0..][.e0..]}]->(`3esn` :`1esn`{`8esn`:12e12[$`5esn`..1.0][$`8esn`..$`1esn`]}))).`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:usn1)Assert Reduce(@usn5=@usn6 In {@usn5} In 123.654,`7esn` In \"d_str\" Ends With 0e0 Ends With {usn2}|$123456789[{`1esn`}][0.12])._usn3? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:usn2)Assert Exists(Extract(@usn5 In 1.0 Starts With 12 Where 01 Starts With {0} Starts With $`4esn`).`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`5esn`)Assert Any(`7esn` In \"d_str\" Ends With 0e0 Ends With {usn2} Where 1.0).`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:@usn6)Assert Exists([`` In 0X0123456789ABCDEF =~$@usn6 =~$`8esn` Where 12.0 Starts With 00 Starts With 9e1|{@usn5} In $`5esn`].`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:`6esn`]->()Assert Exists(Allshortestpaths(({_usn4:{@usn5} In $`5esn`})).`5esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:`7esn`]-()Assert Exists([@usn6 In 0xabc Ends With 1.0 Ends With $`` Where $@usn5[`2esn`..][#usn7..]|`6esn` Ends With 0x0 Ends With 12].usn1)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`2esn`)Assert @usn6(Distinct 123.654 In {12} In ``).@usn5 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:usn1)Assert Exists((_usn3 :usn1)<-[{``:$0 Ends With `2esn`,@usn6:12[True]}]-(usn2 {`7esn`:010 Starts With `3esn` Starts With {usn1},`4esn`:{999}[`2esn`]}).@usn6)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:``)Assert Case When 1000[9e12][$`1esn`] Then `7esn`[..{`8esn`}] Else 00 Is Null End.`5esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:`1esn`]->()Assert Exists([{0}[$usn2..0.e0][{`4esn`}..True],{``} =~{`2esn`} =~$`8esn`,{_usn4} Ends With 12.0 Ends With $@usn6].`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On(``:``)Assert Exists({usn1:00 =~.e12}.@usn5?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:@usn6)Assert [{`2esn`}[..{123456789}],True Starts With 2.12 Starts With {123456789},2.12 Contains `4esn` Contains .e1].@usn6 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`1esn`)Assert Exists(`2esn`(9e0 =~$usn1 =~{@usn6}).`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:`5esn`]-()Assert Exists(Case When _usn4 Ends With $`3esn` Ends With {`3esn`} Then {@usn6} Starts With 00 When 010 Is Not Null Is Not Null Then `1esn` In {999} In $123456789 Else False[0.0..{@usn6}] End.``!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn7:`4esn`]-()Assert Exists(Single(_usn4 In .e12 Is Not Null Where {0}[$usn2..0.e0][{`4esn`}..True])._usn4)"),
    octest_legacy:ct_string("Create Constraint On()<-[`4esn`:_usn4]-()Assert Exists(None(`1esn` In {``} =~{`2esn`} =~$`8esn`).#usn7!)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:usn2)Assert Exists(Case When 12 =~$`5esn` =~$_usn3 Then `7esn`[..{`8esn`}] End._usn4)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`1esn`:#usn7]-()Assert Exists(`1esn`(Distinct `5esn`[$123456789][`2esn`]).``!)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`1esn`)Assert Exists(Case When 0e0 Is Null Then #usn8[#usn8..] End.`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn4:usn2]-()Assert Exists(Single(#usn8 In True In `8esn` Where 1e1[{`3esn`}][True]).usn1?)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:#usn8)Assert Exists((`3esn` :#usn7:`6esn`)<-[`4esn`?:#usn7|:``* 07..]->({@usn6:12e12[..1.e1][..$12],`5esn`:{`7esn`}[..$`8esn`][..{`8esn`}]}).usn1?)"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:`6esn`]->()Assert Exists([$`8esn` Starts With $123456789,07 Is Null]._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`4esn`:``]-()Assert Exists(All(@usn6 In 0xabc Ends With 1.0 Ends With $`` Where $999[..$`2esn`]).@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:usn2)Assert Exists(Shortestpath((:usn2{usn1:1.e1 =~123.654 =~$`3esn`})-[`7esn`?:#usn7|:``* 0x0..7]-(#usn8 {`8esn`:$`1esn` Contains usn2 Contains 1.0,`4esn`:`5esn`})-[* 01..{`5esn`:$`7esn` Contains $_usn4 Contains `8esn`,`1esn`:#usn7 Ends With {@usn5}}]->(`` )).``!)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`2esn`)Assert All(`6esn` In {1000} Is Not Null Where {@usn6} Starts With 00).#usn7! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:#usn8)Assert Exists(Filter(@usn5 In 1.0 Starts With 12 Where 0.0 Starts With $`6esn`).`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`1esn`)Assert Exists(Single(@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`} Where Null In {_usn3} In _usn3).#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:_usn3)Assert Exists((:usn1{_usn3:.e0 Starts With {0} Starts With 0x0})<-[:`8esn`|:_usn3{@usn5:9e1 =~{#usn7},_usn4:1.e1 =~123.654 =~$`3esn`}]-(#usn8 {`1esn`:@usn5[..$`7esn`][..$`6esn`],_usn3:`4esn` Starts With 01})<-[#usn8?* ..999{#usn7:0xabc =~{`8esn`} =~{_usn3}}]->(:`8esn`:_usn3{_usn3:{999}[..{999}]}).#usn7?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`4esn`:_usn3]-()Assert Exists([{999}[`2esn`],{usn2} Is Not Null Is Not Null,_usn3 Ends With {`7esn`} Ends With 12].@usn5?)"),
    octest_legacy:ct_string("Create Constraint On()-[usn2:_usn4]->()Assert Exists((`3esn` :@usn6{`3esn`:{``} Starts With True Starts With True,`8esn`:@usn5 In 00})-[`2esn`?* 010{`2esn`:$``[{#usn7}..{usn2}],`6esn`:$999 Is Not Null Is Not Null}]-(`1esn` {`4esn`:False =~9e0 =~{`5esn`}})<-[`7esn`:``]->(_usn3 :@usn6{`4esn`:{``}[2.12],_usn4:{12}[{_usn3}..0X7][$7..0]}).#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:usn1]-()Assert Exists(None(#usn7 In {`5esn`} Ends With `2esn` Where $`6esn`[`5esn`..][$12..]).`7esn`)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`2esn`)Assert Exists(Shortestpath(((:#usn8:#usn7{`6esn`:`4esn` Starts With $12 Starts With $12,`3esn`:False Contains {``} Contains $`2esn`})<-[_usn3?{usn2:0.0[0.12],#usn8:9e12 Contains {`4esn`}}]->(:`8esn`:_usn3{_usn3:$@usn5[$7..@usn5],#usn8:0.12[$0..$``]}))).`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:#usn7)Assert Shortestpath((`2esn` {@usn5:_usn4[12.e12..],`3esn`:123.654 In {12} In ``})-[`1esn`?]-(usn1 :`4esn`:`3esn`)).`2esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:`7esn`]->()Assert Exists(Case When 0.e0[#usn7..][$@usn5..] Then $`1esn` Ends With {1000} Ends With $`8esn` When `3esn` Contains {`6esn`} Then False Is Null Is Null End._usn4)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:#usn8)Assert None(`4esn` In False[0.0..{@usn6}] Where @usn6[2.12..$123456789][$`8esn`..{123456789}]).``! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:#usn8)Assert [@usn6 In 0xabc Ends With 1.0 Ends With $`` Where 12.0 Ends With 0e0 Ends With $123456789].`6esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:@usn5]-()Assert Exists([{`2esn`} Contains 0.12 Contains 0.0,$`3esn`[$_usn4][True]].#usn8!)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`1esn`)Assert Exists(Case \"d_str\" Ends With 0e0 Ends With {usn2} When $``[..{_usn4}][..{@usn6}] Then @usn6[..{usn2}][..{`5esn`}] Else 0X0123456789ABCDEF Starts With #usn7 End.`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:@usn6)Assert Exists([{`6esn`}[_usn3],0xabc Is Null,\"d_str\" Starts With $`` Starts With $usn1].`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn6:`6esn`]-()Assert Exists(Case `3esn` =~12e12 When 9e12[{1000}..][1000..] Then $`8esn` In {`2esn`} In $0 Else $7[0X0123456789ABCDEF] End.@usn6?)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`2esn`)Assert Exists([$`7esn` Is Not Null Is Not Null,@usn6[9e12..],07[_usn3][123456789]].@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:`3esn`]->()Assert Exists((`6esn` :`3esn`:@usn5{`7esn`:{@usn5} In 0X0123456789ABCDEF In 1000,#usn8:9e12[..#usn7][...e0]})-[`4esn`?* 01..{#usn7:1.0 Is Not Null}]-(:`6esn`:`4esn`{#usn7:999[$_usn3][@usn6],`4esn`:`4esn` Starts With $12 Starts With $12}).``!)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn7:`4esn`]-()Assert Exists(({#usn8:$`2esn`[{@usn5}..12.e12][9e0..$`8esn`],`8esn`:12e12[..1.e1][..$12]})-[`1esn`?]-(usn1 :`4esn`:`3esn`)-[#usn7?:usn2|_usn3* 7{_usn4}]->(@usn5 {@usn5:{@usn5} =~$`2esn`,`5esn`:01[$`1esn`..\"d_str\"]}).`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:_usn3)Assert Exists([010,07[{_usn4}..{`4esn`}]]._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`7esn`)Assert Exists(Filter(`5esn` In `5esn` In 123.654 In {`6esn`} Where {`2esn`}[..{123456789}])._usn4)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:`4esn`]->()Assert Exists(Extract(`4esn` In False[0.0..{@usn6}] Where 0[1.0..$``]|$#usn7 Contains {usn2}).`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:`8esn`]-()Assert Exists(Extract(`5esn` In `5esn` In 123.654 In {`6esn`} Where _usn3 In 1.e1|$7[..999][..`2esn`])._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:`6esn`]-()Assert Exists({`1esn`:_usn3[..0xabc][..@usn5]}.#usn8)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`8esn`)Assert Exists(Allshortestpaths(((`` :usn1{``:$999 Is Not Null Is Not Null,`4esn`:.e12 Ends With {`2esn`}})<-[?:`4esn`|`2esn`* 123456789..999{#usn8:$999 In $999}]-({@usn6:12e12[..1.e1][..$12],`5esn`:{`7esn`}[..$`8esn`][..{`8esn`}]}))).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[``:_usn4]->()Assert Exists({#usn7:'s_str'[9e12..][12e12..],``:$`1esn` Contains usn2 Contains 1.0}.usn1!)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`5esn`)Assert All(usn2 In 999[{123456789}..999] Where 12e12[..Count(*)][..$usn2]).usn2? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`7esn`)Assert Allshortestpaths((`6esn` :_usn4:`1esn`{`1esn`:2.12 Contains $#usn7 Contains {`6esn`},`6esn`:.e12 Ends With {`2esn`}})-[`2esn`:`1esn`|``* 123456789..999]->(:_usn4:`1esn`{`7esn`:$@usn6[..{`6esn`}][...e0]})).`2esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[``:_usn3]-()Assert Exists({_usn3:#usn8 =~$@usn5,`7esn`:12 Is Null Is Null}._usn4)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:usn1]->()Assert Exists({_usn3:{@usn6}[..0.e0][..$0],`8esn`:$`5esn` =~`1esn` =~123.654}.usn2?)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`6esn`)Assert None(#usn7 In {`5esn`} Ends With `2esn` Where 1e1[usn1..$123456789][Count(*)..False]).`5esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`6esn`)Assert Reduce(_usn3=0X7 Is Null Is Null,@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`}|999).usn2! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:`7esn`]->()Assert Exists([{usn1}[$`8esn`][0.e0]].@usn6)"),
    octest_legacy:ct_string("Create Constraint On()<-[`7esn`:`8esn`]-()Assert Exists(Case 12 Contains 9e1 Contains $`8esn` When {`3esn`} Ends With $123456789 Ends With {12} Then 12 Is Null Is Null When $usn1[01234567] Then {#usn7} Starts With $`1esn` Starts With 07 Else 1e1[{`3esn`}][True] End.usn2!)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:#usn8)Assert Exists(Any(`6esn` In {1000} Is Not Null Where 0X0123456789ABCDEF[1.0..]).usn2!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:#usn7)Assert Exists(@usn5(Distinct {#usn7} =~{usn1},.e12[$``..]).`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`3esn`)Assert Reduce(`5esn`=123.654 In {12} In ``,@usn6 In 0xabc Ends With 1.0 Ends With $``|Count(*) Is Not Null Is Not Null).`7esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`7esn`)Assert Exists(Case $`6esn` Is Not Null Is Not Null When `1esn`[$``][{`5esn`}] Then {`2esn`} When 0xabc =~{_usn4} Then {usn2}[`2esn`..{`4esn`}][_usn4..``] Else $7 =~{`7esn`} =~$`6esn` End.`3esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[usn2:`3esn`]->()Assert Exists((:`1esn`{@usn6:{#usn7}[$usn2],`6esn`:12[True]})<-[_usn4{#usn7:$`1esn` Starts With 999,_usn3:`4esn`[usn2..]}]->(`4esn` :@usn6)<-[usn2?:`6esn`|:`7esn`]-(usn2 :@usn6{usn1:0.0[0.12]}).#usn7!)"),
    octest_legacy:ct_string("Create Constraint On(``:_usn3)Assert Exists(Single(`5esn` In $999[12] Where $@usn5 Starts With 1e1).`3esn`)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`3esn`)Assert Reduce(`7esn`=0xabc[0.e0..][$7..],@usn6 In 0xabc Ends With 1.0 Ends With $``|0[`6esn`][1e1]).``? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:usn1]-()Assert Exists([#usn7 In $@usn6 Contains 0 Contains 0 Where $#usn7 Starts With {`2esn`} Starts With @usn6|$999[$12..][.e0..]].@usn5)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:_usn3)Assert Exists(Case 999[1000..] When {`1esn`} =~{``} =~$`8esn` Then `1esn` In `7esn` In {`7esn`} End.``?)"),
    octest_legacy:ct_string("Drop Constraint On(``:``)Assert Allshortestpaths((#usn8 {_usn3:$999 In $999,usn1:0X0123456789ABCDEF Is Null})<-[`4esn`?:`8esn`|:_usn3* 123456789..999{_usn3:999 Is Not Null Is Not Null}]-(:`4esn`:`3esn`{#usn7:{`6esn`} Starts With 0xabc,usn1:True[12e12..]})).`5esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`1esn`)Assert `7esn`(Distinct `6esn` =~12.e12 =~123456789,0Xa[$#usn8]).`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[``:_usn4]-()Assert Exists(Extract(#usn7 In {`5esn`} Ends With `2esn` Where `5esn` =~@usn6 =~$`7esn`|9e0[{`8esn`}]).@usn5!)"),
    octest_legacy:ct_string("Create Index On:``(`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:#usn7]-()Assert Exists({`6esn`:07 Starts With \"d_str\" Starts With $12,`3esn`:0Xa Is Null Is Null}.`7esn`)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:#usn8)Assert Exists(Extract(@usn5 In 1.0 Starts With 12 Where True =~_usn3|0X7[#usn7..][12e12..]).usn2!)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:#usn7)Assert {_usn4:{@usn5} In $`5esn`}.`2esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn8:@usn6]-()Assert Exists(All(@usn5 In 07[{_usn4}..{`4esn`}] Where {`3esn`} Ends With $123456789 Ends With {12}).#usn7)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`6esn`)Assert Exists(Filter(@usn5 In 1.0 Starts With 12 Where _usn4 =~`1esn`).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`8esn`)Assert Exists(Case 's_str'[..$123456789][..{1000}] When usn2[$7..$`5esn`] Then `6esn` Contains `6esn` Contains 9e1 When 0X0123456789ABCDEF[..`5esn`][..$`3esn`] Then True Starts With 2.12 Starts With {123456789} End.`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`2esn`)Assert {#usn7:1.e1[0xabc..][.e12..],`6esn`:$@usn6[..{`6esn`}][...e0]}.`6esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn7:`3esn`]-()Assert Exists([`1esn` In `7esn` In {`7esn`}].``!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`4esn`)Assert Exists(None(`7esn` In \"d_str\" Ends With 0e0 Ends With {usn2} Where 07[{_usn4}..{`4esn`}]).`1esn`)"),
    octest_legacy:ct_string("Create Constraint On(``:#usn7)Assert Any(`5esn` In `5esn` In 123.654 In {`6esn`} Where $12[{`5esn`}..]).#usn8! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[usn1:usn1]-()Assert Exists(Reduce(@usn5=$_usn3[@usn6..][{``}..],#usn8 In True In `8esn`|#usn8[1e1..]).#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:`4esn`]-()Assert Exists(All(`7esn` In \"d_str\" Ends With 0e0 Ends With {usn2} Where 1.0)._usn4!)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`7esn`)Assert (@usn6 $12)-[:`4esn`|`2esn`* 00..999]->(:`4esn`:`3esn`{`8esn`:True Starts With 2.12 Starts With {123456789}}).`3esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:#usn7)Assert [`` In 0X0123456789ABCDEF =~$@usn6 =~$`8esn` Where {7} Starts With $usn2 Starts With $usn2|9e1 Is Not Null].`1esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:#usn7)Assert 010.`3esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`7esn`)Assert Shortestpath((:usn1)).#usn7? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[``:`6esn`]->()Assert Exists(Filter(@usn5 In 1.0 Starts With 12 Where 0xabc Contains False Contains {1000}).@usn6?)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:_usn3]->()Assert Exists(``(`1esn`[$`8esn`..][True..],`6esn` Ends With 0x0 Ends With 12).@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`4esn`)Assert Case $`1esn`[_usn3..] When {#usn8}[False..{usn1}][$`6esn`..0Xa] Then $`4esn` Is Null End.@usn5! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`2esn`)Assert [{usn1} Ends With {#usn7} Ends With 12.0,12e12[``..][$`3esn`..],1000 Is Not Null].@usn6! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:@usn6)Assert [$_usn3[$usn2..],`1esn`[$``][{`5esn`}]].usn2? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`4esn`:`6esn`]-()Assert Exists(count(Distinct 1e1[{`3esn`}][True]).`1esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:#usn8]->()Assert Exists(Shortestpath(((`` {`2esn`:{``}[$@usn5]}))).`5esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn3:`6esn`]-()Assert Exists((:usn1{#usn8:True Ends With usn1})<-[#usn8?:@usn6{`4esn`:999 =~0x0 =~2.12,`7esn`:{#usn8}[False..{usn1}][$`6esn`..0Xa]}]->(:`3esn`:@usn5{`8esn`:$`7esn` Contains 9e12 Contains `2esn`,`3esn`:$usn1[0X0123456789ABCDEF...e12]})<-[`7esn`* 010{`3esn`:$`7esn` Ends With usn2}]-(:`3esn`:@usn5).usn1)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:usn1)Assert (#usn8 {`5esn`:0X0123456789ABCDEF[1.0..],`4esn`:{`5esn`} Starts With 123456789 Starts With 07})-[#usn7{`2esn`:01[$`1esn`..\"d_str\"]}]->(#usn7 :_usn4:`1esn`{_usn3:@usn5[_usn3..{12}][{999}..$7],@usn6:_usn4 =~`1esn`})-[_usn4?* 01..]->(@usn5 :``:usn1{`7esn`:0.e0[#usn7..][$@usn5..],usn2:'s_str' Contains $_usn4 Contains $`7esn`}).`5esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:usn1)Assert All(`7esn` In \"d_str\" Ends With 0e0 Ends With {usn2} Where 0[1.0..][.e0..]).`8esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:_usn4)Assert Case 12 =~$`5esn` =~$_usn3 When {`2esn`}[usn2..][$#usn7..] Then 2.12 In {123456789} End.usn2 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:usn2]->()Assert Exists([@usn6 In 0xabc Ends With 1.0 Ends With $`` Where {999} =~7 =~{usn1}].usn2)"),
    octest_legacy:ct_string("Create Constraint On(``:#usn8)Assert Exists((_usn3 :usn1)<-[`5esn`?:`5esn`|`3esn`* 123456789..999{@usn6:07 Is Null}]-(:`3esn`:@usn5{`8esn`:$`7esn` Contains 9e12 Contains `2esn`,`3esn`:$usn1[0X0123456789ABCDEF...e12]})-[usn2?:`5esn`|`3esn`* ..999]-(`6esn` :#usn7:`6esn`).@usn6?)"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:_usn3]->()Assert Exists(Any(usn2 In 999[{123456789}..999] Where @usn5[_usn3..{12}][{999}..$7])._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:#usn7)Assert {`8esn`:0xabc[$`2esn`..],#usn8:{_usn3}[..$usn2][..$`6esn`]}.#usn8? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`3esn`)Assert Exists(All(@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`} Where $999[$12..][.e0..]).`5esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:#usn7)Assert {`8esn`:$12[{`5esn`}..]}.`3esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[usn2:#usn7]-()Assert Exists(Extract(usn2 In 999[{123456789}..999] Where 0.12 In `8esn`|`4esn` Ends With 01 Ends With `5esn`).`5esn`)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`7esn`)Assert (:@usn6{`7esn`:{12} Is Null})-[@usn6:@usn5|``* 07..]-(`6esn` :#usn7:`6esn`)<-[* 0]-(usn1 :`4esn`:`3esn`).@usn6! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:`3esn`]-()Assert Exists([{#usn7} Contains {`7esn`} Contains $`3esn`,{_usn3} In 010 In 0.e0]._usn4)"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:#usn7]->()Assert Exists(All(#usn7 In {`5esn`} Ends With `2esn` Where {@usn5} =~$`2esn`).`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:``)Assert Exists((`2esn` :#usn8:#usn7)-[:`5esn`|`3esn`* ..999]-(usn1 :`4esn`:`3esn`{`7esn`:$`7esn` =~#usn8 =~{`7esn`}})<-[* ..12{_usn3:{999}[..{999}]}]->(`2esn` :`1esn`{``:{_usn3}[..$usn2][..$`6esn`]}).usn1!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`7esn`:`8esn`]-()Assert Exists([$`2esn`[{@usn5}..12.e12][9e0..$`8esn`],{`2esn`}].`8esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`8esn`)Assert Exists(Extract(@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`} Where 0e0 Ends With 0 Ends With {`6esn`}).`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`7esn`)Assert Extract(_usn4 In .e12 Is Not Null Where 0X0123456789ABCDEF Is Null|123.654 In {12} In ``).`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`6esn`)Assert Exists({`2esn`:#usn8 Ends With `5esn` Ends With _usn3}.`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`3esn`)Assert Single(`5esn` In `5esn` In 123.654 In {`6esn`} Where $12[{`5esn`}..]).`5esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:`6esn`]->()Assert Exists(Reduce(`8esn`=1e1 In 0xabc,_usn4 In .e12 Is Not Null|12.0[$999..][$@usn6..]).`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:`3esn`]->()Assert Exists(Case When .e0 Starts With usn2 Then usn1[12.e12..$`1esn`][$`2esn`..0Xa] When @usn6 In {@usn5} In 123.654 Then {`5esn`} Starts With 123456789 Starts With 07 End.`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:`8esn`]->()Assert Exists(Case When {#usn7} =~$0 Then 07[0X0123456789ABCDEF] Else 12e12[$``..] End._usn3)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:@usn6)Assert [{_usn4}]._usn3 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:_usn4)Assert Exists(`2esn`(Distinct $@usn5 =~999 =~0e0).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:#usn8)Assert Exists([$`3esn` Ends With `8esn` Ends With {`5esn`},$`8esn`[..`6esn`][..#usn7]].``)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`8esn`)Assert Exists(Single(_usn4 In .e12 Is Not Null Where 0xabc Contains False Contains {1000}).`2esn`?)"),
    octest_legacy:ct_string("Create Index On:@usn6(@usn5)"),
    octest_legacy:ct_string("Drop Index On:`7esn`(#usn8)"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:@usn6]->()Assert Exists(All(`5esn` In `5esn` In 123.654 In {`6esn`} Where 1e1 In 0xabc).`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`8esn`:usn1]-()Assert Exists(Reduce(_usn4={@usn5} =~$`2esn`,`6esn` In {1000} Is Not Null|{usn2} Contains {123456789} Contains 0Xa).`3esn`)"),
    octest_legacy:ct_string("Create Constraint On(usn2:usn1)Assert Single(usn1 In {usn2} Contains {123456789} Contains 0Xa Where 0Xa[0X7..#usn8][_usn3..9e1]).`6esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:`2esn`]->()Assert Exists(Reduce(_usn3=False =~Null =~12.0,`1esn` In {``} =~{`2esn`} =~$`8esn`|``[$7..``]).`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`1esn`)Assert (@usn5 :_usn4:`1esn`{@usn5:.e1 Starts With #usn7 Starts With 1.e1})-[_usn3?* 0Xa{_usn3:#usn8[1e1..],_usn3:123.654 In {`6esn`} In `6esn`}]-(`3esn` :@usn6{`3esn`:{``} Starts With True Starts With True,`8esn`:@usn5 In 00}).`1esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`5esn`)Assert Exists((#usn8 :`1esn`{`1esn`:{usn2}[$usn2],`4esn`:Null Starts With {_usn4}})<-[`5esn`?* ..12{@usn6:$0 Ends With `2esn`}]->(:`7esn`:_usn4{_usn4:$`8esn` In {`2esn`} In $0})-[`4esn`?* 01..{#usn7:1.0 Is Not Null}]-({`5esn`:.e12[Count(*)..{`4esn`}][07..$1000],usn1:{#usn7} Contains \"d_str\" Contains {_usn4}}).`7esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:@usn5)Assert All(@usn6 In 0xabc Ends With 1.0 Ends With $`` Where $999[..$`2esn`]).@usn5? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`5esn`)Assert None(@usn6 In 0xabc Ends With 1.0 Ends With $`` Where 12.0 In $usn1 In True).``? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:`4esn`]->()Assert Exists({usn2:$`8esn` Contains 12}.@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn5:usn2]-()Assert Exists({_usn3:1.0 Ends With {`4esn`} Ends With {`2esn`},_usn3:0xabc[$`2esn`..]}._usn3!)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:#usn8]->()Assert Exists([{`2esn`},#usn8 =~$@usn5].@usn5?)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`4esn`)Assert Case When 07 Contains @usn5 Then 0.0[0.12] When 0xabc[0.e0..][$7..] Then {`8esn`}[{`6esn`}..1.e1] End.`4esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`2esn`:`4esn`]-()Assert Exists((`7esn` :`6esn`:`4esn`{`2esn`:0.e0[$`1esn`..]})<-[#usn8?:`2esn`{#usn8:@usn6 Contains {0}}]->(_usn4 {@usn6:$`8esn` Starts With $123456789,@usn5:.e1[..`2esn`]})<-[_usn4?:`1esn`|``* 0X7..{`5esn`:123.654 Starts With `8esn` Starts With @usn5,`4esn`:1000 Contains 12.e12}]-(`8esn` :_usn3:@usn6).@usn6?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`2esn`)Assert Case $0 Starts With `2esn` Starts With {`1esn`} When $`8esn` Contains {`7esn`} Contains $`4esn` Then $@usn5 Is Not Null Else {0}[$usn2..0.e0][{`4esn`}..True] End.`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:@usn6)Assert [`7esn` In \"d_str\" Ends With 0e0 Ends With {usn2} Where 0[1.0..][.e0..]|True Ends With usn1].`8esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:#usn8)Assert Exists(Case `1esn` In 9e0 In {7} When {#usn8} In 07 In 0 Then {usn1} Ends With {#usn7} Ends With 12.0 When 12.e12[..9e12][..1000] Then .e1[..`2esn`] End.`8esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`6esn`)Assert Exists(None(usn2 In {@usn5} Where `7esn` Is Null).``!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:`2esn`]-()Assert Exists((_usn3 {@usn6:$usn1[0X0123456789ABCDEF...e12]})-[?* 0{``:0[1.0..][.e0..]}]->(`3esn` :`1esn`{`8esn`:12e12[$`5esn`..1.0][$`8esn`..$`1esn`]})._usn3?)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`2esn`)Assert Exists(Filter(usn2 In 999[{123456789}..999] Where {usn1} Contains 123.654 Contains {#usn8}).usn1?)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:`1esn`]-()Assert Exists(Extract(_usn4 In .e12 Is Not Null Where 0xabc Contains False Contains {1000}).@usn5!)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:#usn7)Assert Exists({_usn4:9e12 Is Null Is Null}.`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:_usn4)Assert Single(`7esn` In @usn5[01..`6esn`] Where 0Xa[01..$`1esn`]).@usn5? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:_usn3)Assert Exists(Single(usn2 In 999[{123456789}..999] Where False[Count(*)]).`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On(``:usn2)Assert Case usn1[{123456789}..][010..] When $0 =~_usn3 Then $`1esn` Ends With {1000} Ends With $`8esn` When 7 Is Null Is Null Then 7[`7esn`..usn2][$`5esn`..0X7] End.`8esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`7esn`)Assert Exists([_usn4 In .e12 Is Not Null Where {@usn6} Starts With .e1].`2esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`1esn`)Assert Case {_usn4} Is Not Null When 0e0 Is Null Then $999[..$`2esn`] When #usn7[999..``] Then $#usn7 Contains {usn2} End._usn4! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn7:_usn3]-()Assert Exists(Allshortestpaths(((`2esn` :`3esn`:@usn5{`7esn`:0[...e1][..$usn2]}))).#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:`3esn`]-()Assert Exists(Shortestpath((`7esn` :`4esn`:`3esn`{`3esn`:0.12 In `8esn`})).@usn5!)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:`4esn`]-()Assert Exists(Reduce(`7esn`=123.654[2.12..][{`7esn`}..],`4esn` In False[0.0..{@usn6}]|9e0[..{usn1}]).@usn6)"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:``]->()Assert Exists({_usn3:999 Starts With {``},@usn5:0Xa[01..$`1esn`]}._usn3!)"),
    octest_legacy:ct_string("Create Constraint On(``:`2esn`)Assert Exists({`5esn`:#usn7[999..``],_usn4:'s_str' Is Not Null}.#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn1:`4esn`]-()Assert Exists(Extract(usn1 In {usn2} Contains {123456789} Contains 0Xa Where 0x0 Is Not Null).`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:@usn5)Assert Exists([_usn4 In .e12 Is Not Null Where 999 Is Not Null Is Not Null].`5esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:#usn8]-()Assert Exists(Case When 2.12 Contains @usn5 Contains {``} Then $0 Starts With `2esn` Starts With {`1esn`} Else `3esn`[{`1esn`}] End._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`5esn`)Assert Reduce(`8esn`={`1esn`}[`1esn`..123.654][{`4esn`}..$7],`7esn` In \"d_str\" Ends With 0e0 Ends With {usn2}|.e0 Starts With {0} Starts With 0x0).`2esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`1esn`)Assert Case 999 Starts With {``} When #usn8[1e1..`1esn`][{1000}..`6esn`] Then #usn7 =~{7} When `5esn`[$usn1..$7] Then {`8esn`} Is Not Null Is Not Null Else $12 Contains .e1 End.usn2 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:#usn8)Assert Exists(Case 1000 In {`4esn`} When _usn3 In 1.e1 Then $999[$12..][.e0..] Else $@usn6 End.`4esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`2esn`:#usn7]-()Assert Exists(Reduce(@usn6=$#usn7 Is Null,`6esn` In {1000} Is Not Null|07[_usn3][123456789]).``?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:_usn3)Assert Extract(@usn6 In 0xabc Ends With 1.0 Ends With $``|$0 Starts With `2esn` Starts With {`1esn`}).`7esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:`7esn`)Assert Allshortestpaths((((#usn8 {usn2:{`1esn`} =~{@usn6} =~`2esn`})<-[_usn4:``{`3esn`:`8esn`[1000..#usn8]}]->(_usn3 {@usn6:$usn1[0X0123456789ABCDEF...e12]})<-[?:`1esn`|``* 123456789..999]->({`8esn`:12.0 =~0.12 =~999,``:'s_str' Contains $_usn4 Contains $`7esn`})))).`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`2esn`:#usn8]->()Assert Exists([`1esn` In {`4esn`},010 Contains $`5esn`,\"d_str\" Ends With 0e0 Ends With {usn2}].#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:@usn6]->()Assert Exists(Reduce(`1esn`=`4esn` Starts With $12 Starts With $12,usn2 In {@usn5}|9e1[..2.12][..@usn6]).`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:usn2)Assert [{`2esn`},#usn8 =~$@usn5].@usn5? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:`1esn`]-()Assert Exists(exists(Distinct $@usn6,$@usn5 Starts With 1e1).`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`7esn`)Assert Exists(Case $usn1[..$`1esn`] When True[..{_usn3}][..999] Then {7}['s_str'..] When `6esn` Ends With 0x0 Ends With 12 Then 9e1 Ends With 0xabc Ends With @usn6 Else `1esn` In {`4esn`} End.`2esn`)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:#usn7)Assert Exists(Filter(@usn6 In 0xabc Ends With 1.0 Ends With $`` Where {`6esn`} Is Not Null).#usn8?)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:#usn8)Assert Case 0 Is Null When @usn6[2.12..$123456789][$`8esn`..{123456789}] Then 0X7[#usn7..][12e12..] When 07 Is Null Then 0Xa[01..$`1esn`] Else $7[..999][..`2esn`] End.``! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`7esn`)Assert [{`2esn`}[{123456789}..$#usn7][_usn3..999],{0}[.e12..]]._usn3? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:_usn4)Assert Case @usn5[..$`7esn`][..$`6esn`] When 7 Is Null Is Null Then _usn3 Ends With {`7esn`} Ends With 12 When 01[$_usn3..][123.654..] Then usn2[01234567..] End.#usn7 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`3esn`)Assert Exists(None(`7esn` In @usn5[01..`6esn`] Where $`8esn` In {`2esn`} In $0).#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`8esn`)Assert Exists(`2esn`(usn2[01234567..],0.e0[#usn7..][$@usn5..]).`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On(usn2:@usn5)Assert None(usn2 In {@usn5} Where 12[0X0123456789ABCDEF..][Count(*)..]).`6esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`4esn`)Assert Exists(Allshortestpaths(({_usn4:{@usn5} In $`5esn`})).usn1)"),
    octest_legacy:ct_string("Drop Constraint On()<-[``:`1esn`]-()Assert Exists(Filter(@usn5 In 07[{_usn4}..{`4esn`}] Where 12.e12 Starts With `8esn` Starts With 9e12).`3esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:`5esn`]-()Assert Exists(Shortestpath((((`` {#usn7:{#usn7} Starts With $`1esn` Starts With 07,`4esn`:_usn4 In usn2})-[?* 0X0123456789ABCDEF]-({_usn3:9e12[..#usn7][...e0]})<-[usn1?:`7esn`* 0x0..7]->(@usn6 :`5esn`{_usn4:True Starts With `` Starts With 0.e0}))))._usn4?)"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:#usn8]->()Assert Exists(Reduce(`7esn`=$usn1 Ends With {123456789} Ends With 1.e1,`4esn` In False[0.0..{@usn6}]|`1esn`[$``][{`5esn`}]).#usn7?)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`5esn`)Assert Single(@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`} Where 0e0 In .e1).usn1? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn7:`2esn`]->()Assert Exists(`3esn`(Distinct True[..{_usn3}][..999]).`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`3esn`)Assert Single(@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`} Where 0e0 Ends With 0 Ends With {`6esn`}).`4esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:`2esn`]-()Assert Exists(Case When `6esn` =~12.e12 =~123456789 Then 1000 Starts With {7} Starts With $7 When $`4esn` Ends With $12 Then 01 End.`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:#usn8)Assert Exists(({`8esn`:12.0 =~0.12 =~999,``:'s_str' Contains $_usn4 Contains $`7esn`})-[`2esn`?:_usn3|:`6esn`* 0X7..]-(_usn3 {`2esn`:0xabc Ends With 1.0 Ends With $``,`3esn`:.e12 Ends With {`2esn`}})-[@usn5{@usn5:0 =~usn1,`1esn`:0.0[010..12.e12]}]->(`` :usn2).@usn6?)"),
    octest_legacy:ct_string("Drop Index On:`8esn`(`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`3esn`)Assert Exists(Allshortestpaths(((`7esn` :_usn4:`1esn`{usn1:$#usn7 Starts With {`2esn`} Starts With @usn6,`3esn`:$_usn3[@usn6..][{``}..]})<-[`4esn`?* 010]-(usn2 :#usn8:#usn7{`2esn`:0x0[9e0..][$@usn5..],`2esn`:01234567[``..$`1esn`][True..$#usn7]})<-[?:#usn8|_usn3{_usn4:{usn2} Contains {123456789} Contains 0Xa}]->(`5esn` :``:usn1)))._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:`5esn`]-()Assert Exists(Filter(usn1 In {usn2} Contains {123456789} Contains 0Xa Where {`2esn`}[..{123456789}]).`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[``:@usn6]-()Assert Exists([{#usn7} Contains {`7esn`} Contains $`3esn`,{_usn3} In 010 In 0.e0]._usn4)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:usn1)Assert Exists({#usn8:010 Contains $`5esn`,`4esn`:12.0[$999..][$@usn6..]}.`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`8esn`)Assert All(@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`} Where _usn4 =~$#usn7 =~`8esn`).#usn8 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[usn2:`6esn`]-()Assert Exists(Case When {#usn8} =~$0 Then $12 Is Null When `4esn` Starts With $12 Starts With $12 Then 0X7 =~$`6esn` End.`3esn`)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:_usn3)Assert Exists(Reduce(`1esn`=`4esn` Starts With $12 Starts With $12,usn2 In {@usn5}|9e1[..2.12][..@usn6]).`2esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:_usn4]->()Assert Exists(Case False[Count(*)] When {`7esn`}[..1000][..#usn7] Then 999[1000..] When $0 Then {@usn5}[01234567][{1000}] End.`7esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:usn1]-()Assert Exists(Reduce(#usn7=00[usn1..\"d_str\"][{0}..$`8esn`],`7esn` In @usn5[01..`6esn`]|`8esn` =~0).`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On(``:usn2)Assert Allshortestpaths(((:``:usn1{_usn3:$@usn5[$7..@usn5],#usn8:0.12[$0..$``]})-[@usn5* ..999]-(@usn6 {`2esn`:{`1esn`} =~{``} =~$`8esn`}))).`3esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:`2esn`]-()Assert Exists([$0 =~_usn3,010].`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`6esn`)Assert `4esn`(Distinct 0xabc[$`2esn`..],0x0[9e0..][$@usn5..]).`3esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:``)Assert Shortestpath((((`` {#usn7:{#usn7} Starts With $`1esn` Starts With 07,`4esn`:_usn4 In usn2})-[?:`4esn`|`2esn`* 01234567..0Xa{`8esn`:{`7esn`},usn2:1000 Contains 12.e12}]->(`` :usn1)<-[`7esn`?* 0xabc..01234567]-(usn1 :`4esn`:`3esn`{`1esn`:{`4esn`}[0xabc..][010..]})))).`6esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn6:`7esn`]-()Assert Exists(Reduce(_usn3=0X7 Is Null Is Null,@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`}|999).usn2!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`8esn`)Assert {`1esn`:$7 In $usn2 In {1000},@usn6:1e1 In $0}.`3esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`3esn`)Assert Exists([_usn4 In .e12 Is Not Null Where $``[{#usn7}..{usn2}]|$usn2[`4esn`..]].``!)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:_usn4)Assert [usn2 In 999[{123456789}..999] Where `5esn` In 123.654 In {`6esn`}|$@usn6 Contains 0 Contains 0].usn1 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`7esn`)Assert Any(`5esn` In `5esn` In 123.654 In {`6esn`} Where usn2[..$`8esn`][..``]).usn2 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`8esn`)Assert All(`` In 0X0123456789ABCDEF =~$@usn6 =~$`8esn` Where 9e12 In 's_str' In $`4esn`).`3esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:`6esn`]-()Assert Exists(Extract(#usn8 In True In `8esn` Where $`6esn` Is Not Null Is Not Null).``!)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`1esn`)Assert Reduce(_usn3=$@usn5[$7..@usn5],@usn6 In 0xabc Ends With 1.0 Ends With $``|0xabc =~{`8esn`} =~{_usn3}).`2esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`1esn`)Assert Exists([`7esn` In @usn5[01..`6esn`] Where {``}[2.12]|{`1esn`} =~{``} =~$`8esn`]._usn4)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:`8esn`]-()Assert Exists(Filter(usn2 In {@usn5} Where `1esn` In 9e0 In {7}).`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[``:``]->()Assert Exists({@usn6:0.e0[#usn7..][$@usn5..]}.@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:`1esn`]-()Assert Exists(Case When 01234567[``..$`1esn`][True..$#usn7] Then {#usn8} Ends With {123456789} Ends With #usn8 Else {`7esn`} End.#usn8)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`4esn`)Assert Exists([@usn5 In 07[{_usn4}..{`4esn`}] Where 12.0 Ends With 0e0 Ends With $123456789|$`2esn` Ends With $`2esn`].`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:_usn4)Assert Filter(@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`} Where .e12[0.0..][$#usn8..])._usn4 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`6esn`)Assert Exists(Allshortestpaths(((:``:usn1{_usn3:$@usn5[$7..@usn5],#usn8:0.12[$0..$``]})-[@usn5* ..999]-(@usn6 {`2esn`:{`1esn`} =~{``} =~$`8esn`}))).`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:``]->()Assert Exists(`6esn`(Distinct $12 Is Null).usn2?)"),
    octest_legacy:ct_string("Create Constraint On(usn2:@usn5)Assert Exists(Reduce(`2esn`=`8esn`[$123456789..][$usn1..],usn2 In 999[{123456789}..999]|$`4esn` Contains @usn5 Contains {`8esn`}).`3esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`5esn`)Assert Exists(Extract(usn2 In 999[{123456789}..999] Where {`5esn`} Ends With `2esn`|usn2[01234567..]).`2esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn2:`2esn`]-()Assert Exists(None(`5esn` In $999[12] Where 0e0 Starts With 's_str').``?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`2esn`)Assert Exists((:_usn4:`1esn`{`8esn`:$12[{`5esn`}..]})-[@usn6?* 123456789..999{`3esn`:$`3esn` Ends With `8esn` Ends With {`5esn`}}]-(`4esn` {`1esn`:{#usn7}[{`1esn`}..][`1esn`..],`1esn`:{`5esn`} Starts With 123456789 Starts With 07})-[@usn5?* 01..]-({@usn6:12e12[..1.e1][..$12],`5esn`:{`7esn`}[..$`8esn`][..{`8esn`}]}).@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:_usn4)Assert (:@usn6{`1esn`:$999[12],@usn5:07[{_usn4}..{`4esn`}]})<-[_usn4?:``]-(@usn5 :_usn4:`1esn`{#usn8:#usn7[999..``]}).#usn7 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[``:usn1]-()Assert Exists([`1esn` In `7esn` In {`7esn`}].`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:``]-()Assert Exists([`7esn` In \"d_str\" Ends With 0e0 Ends With {usn2} Where @usn6[9e12..]].``)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`3esn`)Assert Exists({#usn8:0xabc =~{_usn4}}.`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`2esn`)Assert #usn7(Distinct _usn4 =~$#usn7 =~`8esn`,999[{12}..][$1000..]).`6esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn6:usn1]->()Assert Exists((@usn5 :_usn4:`1esn`)<-[#usn8?{`4esn`:`3esn` Is Null Is Null}]-(`5esn` )<-[:usn2|_usn3]->(@usn5 {_usn3:#usn7 Starts With {@usn6} Starts With {`1esn`},`6esn`:9e1 =~{#usn7}}).#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:@usn6)Assert Allshortestpaths((((`1esn` {`1esn`:`5esn`,#usn8:00[.e0][010]})-[_usn3?:`6esn`|:`7esn`]->(_usn3 {``:\"d_str\" Starts With $`` Starts With $usn1})-[?:`4esn`|`2esn`* 0X0123456789ABCDEF{_usn3:$`7esn` Ends With usn2,_usn4:$`5esn` Starts With 1.0 Starts With $usn2}]-(`1esn` {_usn3:$@usn5[$7..@usn5],#usn8:0.12[$0..$``]})))).`2esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:`8esn`]-()Assert Exists(Case When _usn4 =~$#usn7 =~`8esn` Then {`7esn`}[..1000][..#usn7] When 123456789 Is Not Null Is Not Null Then 9e12 Contains {`4esn`} Else {#usn8} =~$0 End.@usn6)"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:#usn8]-()Assert Exists({@usn6:07[{_usn4}..{`4esn`}],`4esn`:07[_usn3][123456789]}._usn3!)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:usn1)Assert None(`4esn` In False[0.0..{@usn6}] Where 1e1[1000]).`8esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`7esn`)Assert Case {#usn8} In 07 In 0 When {#usn7} =~{usn1} Then 1.0 Ends With {`4esn`} Ends With {`2esn`} When 1e1 Contains @usn6 Contains {`8esn`} Then 's_str' =~0xabc =~$@usn5 End.`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:_usn3]->()Assert Exists(Extract(usn1 In #usn8 =~$@usn5 Where 0[...e1][..$usn2]|01234567[usn1]).usn2!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`4esn`)Assert Exists(Reduce(@usn5=0e0 Starts With 's_str',`5esn` In $999[12]|0xabc[{@usn5}])._usn3!)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:#usn8)Assert Exists(Extract(@usn5 In 1.0 Starts With 12 Where {`1esn`}[01234567..][@usn5..]).`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`8esn`)Assert [Null In 1e1 In {999},12.e12 Starts With `8esn` Starts With 9e12,{#usn8} Ends With {123456789} Ends With #usn8].#usn7! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:`4esn`]->()Assert Exists([010,07[{_usn4}..{`4esn`}]]._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn4:``]-()Assert Exists([{@usn6}[..0.e0][..$0],$usn2 =~`6esn` =~{usn1},0X7[#usn7..][12e12..]].`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:#usn8)Assert Reduce(`7esn`=usn2[01234567..],`7esn` In @usn5[01..`6esn`]|{@usn5}).@usn5? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[usn1:`5esn`]-()Assert Exists((`6esn` :_usn4:`1esn`{`1esn`:2.12 Contains $#usn7 Contains {`6esn`},`6esn`:.e12 Ends With {`2esn`}})-[@usn5* ..999]-(`1esn` :`4esn`:`3esn`{`1esn`:{`2esn`}[..{123456789}]}).`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:#usn8)Assert Exists(Extract(_usn4 In .e12 Is Not Null Where 's_str' =~0xabc =~$@usn5|$_usn3[@usn6..][{``}..]).`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`8esn`)Assert Reduce(`2esn`=`8esn`[$123456789..][$usn1..],usn2 In 999[{123456789}..999]|$`4esn` Contains @usn5 Contains {`8esn`})._usn3? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:@usn6]->()Assert Exists(Shortestpath((@usn5 {`3esn`:'s_str'[..$123456789][..{1000}],_usn4:_usn4 =~$#usn7 =~`8esn`})-[`5esn`?:`5esn`|`3esn`]->(:#usn8:#usn7{``:usn1[#usn8..0.0],`7esn`:{_usn3} In 010 In 0.e0})-[?* 00..999]->(`4esn` :@usn6))._usn3)"),
    octest_legacy:ct_string("Create Constraint On()-[usn2:#usn8]-()Assert Exists(Reduce(#usn7=$`4esn` =~{usn1},@usn6 In 0xabc Ends With 1.0 Ends With $``|`8esn`[{#usn7}..][_usn4..]).usn2!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:_usn3)Assert Exists([True =~_usn3].#usn8?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`1esn`:`2esn`]-()Assert Exists(Extract(@usn6 In 0xabc Ends With 1.0 Ends With $`` Where 9e12 Is Null Is Null|9e12[..#usn7][...e0]).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`6esn`)Assert Single(#usn7 In {`5esn`} Ends With `2esn` Where 12.e12 Starts With `8esn` Starts With 9e12).usn1? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`7esn`)Assert Exists(Shortestpath((({_usn4:Null[False..][12.e12..]})-[:`6esn`|:`7esn`* 0x0..7{`2esn`:0xabc =~{`8esn`} =~{_usn3}}]-(#usn7 :_usn4:`1esn`{_usn3:@usn5[_usn3..{12}][{999}..$7],@usn6:_usn4 =~`1esn`})-[_usn3?:``{`4esn`:12.e12 =~$`7esn` =~{``}}]-(`7esn` {`3esn`:1000 Is Not Null Is Not Null,`7esn`:12.0 Ends With 0e0 Ends With $123456789}))).@usn5)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:`1esn`]-()Assert Exists(None(#usn8 In True In `8esn`).`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:usn2]->()Assert Exists((`3esn` :_usn3:@usn6{`6esn`:7 Starts With `5esn`})<-[?{_usn4}]-(:_usn4:`1esn`{_usn3:`3esn` Is Null Is Null}).#usn7)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:usn1)Assert Exists((_usn4 :#usn7:`6esn`{``:{@usn5} =~$`2esn`})<-[usn1?:usn2|_usn3* 01234567..0Xa]-({#usn7:\"d_str\"[..{`1esn`}][..$`2esn`],`8esn`:123456789[123.654..{usn1}]})-[`3esn`?* 0xabc..01234567]-(:_usn4:`1esn`{#usn8:$@usn5 Is Not Null,_usn3:0.12[$0..$``]}).`4esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`3esn`)Assert Exists(Any(usn2 In 999[{123456789}..999] Where usn1 Ends With $@usn6 Ends With $1000).`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On(usn1:usn1)Assert (`7esn` )-[* 0x0..7{@usn6:$0 Ends With `2esn`}]->(:usn1{`4esn`:{`2esn`}[..{123456789}],@usn6:$#usn7 Starts With {`2esn`} Starts With @usn6})<-[?{`4esn`:$`4esn` =~{usn1}}]-(:`6esn`:`4esn`{#usn7:999[$_usn3][@usn6],`4esn`:`4esn` Starts With $12 Starts With $12}).`1esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`8esn`)Assert Shortestpath(((`3esn` :`1esn`{`8esn`:12e12[$`5esn`..1.0][$`8esn`..$`1esn`]})-[?* 07..]->(:usn1{#usn8:True Ends With usn1})-[?:``]-(`7esn` :@usn6))).`1esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`1esn`)Assert Filter(@usn5 In 07[{_usn4}..{`4esn`}] Where $`6esn`[`5esn`..][$12..]).usn2? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`6esn`:`5esn`]-()Assert Exists([`6esn` Contains `6esn` Contains 9e1,$usn2 =~`6esn` =~{usn1},$`5esn` Starts With 1.0 Starts With $usn2].``)"),
    octest_legacy:ct_string("Drop Constraint On(``:`6esn`)Assert Exists([#usn7 In $@usn6 Contains 0 Contains 0 Where {#usn7} =~{usn1}|2.12 Contains `4esn` Contains .e1].`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:usn1)Assert ``(Distinct 1000[9e12][$`1esn`],01[123456789..][$_usn4..]).`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn3:usn2]-()Assert Exists(Reduce(_usn3=1e1[$@usn5],usn1 In #usn8 =~$@usn5|{`7esn`} Contains 's_str' Contains 01).`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn1:usn2]-()Assert Exists({`3esn`:`5esn` =~@usn6 =~$`7esn`,usn2:$0 Ends With 12.0 Ends With _usn4}.`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`3esn`)Assert [usn2 In {@usn5} Where 12.e12 Starts With `8esn` Starts With 9e12|00[{999}..$#usn7][$0...e0]]._usn3! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:@usn6)Assert Exists(Reduce(``=$999 =~$999 =~usn2,@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`}|{_usn4} In 9e0).`4esn`?)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`7esn`)Assert _usn3($``[{#usn7}..{usn2}]).#usn7 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:#usn7)Assert Exists(Allshortestpaths((:usn2{#usn8:00[{999}..$#usn7][$0...e0]})).`3esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:``)Assert Single(usn2 In {@usn5} Where {`2esn`}).@usn5 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:`3esn`)Assert Exists(Any(@usn6 In 0xabc Ends With 1.0 Ends With $`` Where \"d_str\" Starts With $`` Starts With $usn1).`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`3esn`)Assert `1esn`($0 Ends With `2esn`,#usn7[999..``]).#usn7! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:#usn8)Assert Exists(Single(`5esn` In $999[12] Where $`8esn`[#usn7..][0X7..]).@usn6?)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`6esn`)Assert Exists(None(`1esn` In {``} =~{`2esn`} =~$`8esn` Where 0xabc =~{`8esn`} =~{_usn3}).usn1)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`6esn`)Assert Exists([0[`6esn`][1e1],{@usn6}[..0.e0][..$0]].`7esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`7esn`)Assert Shortestpath((((:`5esn`{``:{`5esn`} Ends With `2esn`})<-[`6esn`?:`1esn`|``]-(`1esn` {`4esn`:False =~9e0 =~{`5esn`}})<-[`4esn`?:`1esn`|``]->({`3esn`:01234567 Starts With 01 Starts With 1.e1,usn2:`8esn`[{#usn7}..][_usn4..]})))).`1esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:@usn5]->()Assert Exists({_usn3:12[`3esn`..][0X0123456789ABCDEF..],`3esn`:12.0 Ends With 0e0 Ends With $123456789}.#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn5:`2esn`]-()Assert Exists([$@usn5[`2esn`..][#usn7..],010 Contains $`5esn`,$`7esn` Ends With $1000 Ends With {999}].`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:@usn6)Assert Shortestpath((`6esn` {@usn6:{#usn7}[$usn2],`6esn`:12[True]})<-[`3esn`?:#usn7|:``]-(usn1 :`7esn`:_usn4)).@usn6 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`5esn`)Assert Extract(#usn7 In {`5esn`} Ends With `2esn` Where {usn1}[$`8esn`][0.e0]|`1esn` In {`4esn`}).#usn7 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`6esn`)Assert Exists(Reduce(_usn3=`1esn` In `7esn` In {`7esn`},_usn4 In .e12 Is Not Null|#usn7 Starts With {@usn6} Starts With {`1esn`}).#usn7)"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:_usn4]-()Assert Exists(All(usn2 In 999[{123456789}..999] Where {usn1}[$`8esn`][0.e0]).@usn5)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:_usn4)Assert Case $999[12] When $`7esn` =~#usn8 =~{`7esn`} Then $0 When `5esn` Starts With {999} Then 0.e0 Ends With $`8esn` End.`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:@usn5)Assert Exists(Extract(#usn7 In {`5esn`} Ends With `2esn` Where 12[0X0123456789ABCDEF..][Count(*)..]|$`8esn`[#usn7..][0X7..]).`1esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:`7esn`]->()Assert Exists(Single(#usn7 In $@usn6 Contains 0 Contains 0 Where 's_str' =~0x0 =~{#usn8}).usn2!)"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:`5esn`]-()Assert Exists([@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`} Where $@usn5 Starts With 1e1|$usn1 Ends With {123456789} Ends With 1.e1].`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn1:`5esn`]-()Assert Exists([usn2 In {@usn5} Where 12.e12 Starts With `8esn` Starts With 9e12|{999}[..{999}]]._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn8:_usn4]->()Assert Exists([usn1 In #usn8 =~$@usn5 Where .e1 Starts With #usn7 Starts With 1.e1|{`5esn`} Ends With `2esn`].`8esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`3esn`)Assert {`2esn`:01234567[``..$`1esn`][True..$#usn7]}.`4esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn5:@usn5]-()Assert Exists({`7esn`:12.0[$999..][$@usn6..]}.``?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn7:`1esn`]-()Assert Exists((`5esn` :`5esn`)<-[#usn8?:@usn6{`4esn`:999 =~0x0 =~2.12,`7esn`:{#usn8}[False..{usn1}][$`6esn`..0Xa]}]->(:`3esn`:@usn5{`8esn`:$`7esn` Contains 9e12 Contains `2esn`,`3esn`:$usn1[0X0123456789ABCDEF...e12]})._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`3esn`)Assert Exists(All(#usn8 In True In `8esn` Where `2esn` =~$#usn7 =~_usn4).`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:`4esn`]-()Assert Exists([12 Contains 9e1 Contains $`8esn`,010[.e12]].`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`3esn`)Assert Exists([0.e0[$`1esn`..],.e1[07..`5esn`][$12...e0]].#usn8)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:`4esn`]->()Assert Exists(`4esn`(Distinct .e12 In `1esn` In `3esn`,$7 In $usn2 In {1000}).usn2!)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`1esn`)Assert Exists(Any(_usn4 In .e12 Is Not Null Where $``[{#usn7}..{usn2}]).@usn5?)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:_usn3)Assert Exists(Extract(usn1 In #usn8 =~$@usn5 Where 12.e12 Starts With `8esn` Starts With 9e12|$@usn6[..{`6esn`}][...e0]).`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`5esn`)Assert (usn2 )-[?:`6esn`|:`7esn`* 0X0123456789ABCDEF{usn1:`4esn`[$999..][1.0..]}]-(`1esn` {`1esn`:`5esn`,#usn8:00[.e0][010]})<-[@usn5?:#usn8|_usn3{``:{7} Starts With $usn2 Starts With $usn2,`3esn`:9e12[{1000}..][1000..]}]->(:``:usn1{usn2:010 Contains $`5esn`}).``? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:_usn3)Assert Exists([#usn8 In True In `8esn` Where 0xabc Contains False Contains {1000}|9e1 =~$`4esn` =~{usn2}].@usn5?)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`4esn`)Assert Filter(@usn5 In 07[{_usn4}..{`4esn`}] Where $`6esn`[`5esn`..][$12..]).`7esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:@usn5]-()Assert Exists([9e12 In 's_str' In $`4esn`,01234567 Starts With 01 Starts With 1.e1,{`6esn`} Starts With 0xabc].@usn6?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`6esn`)Assert Case {#usn7}[{`1esn`}..][`1esn`..] When $7[..999][..`2esn`] Then 12.0[{`6esn`}..123.654][@usn5..usn1] Else 010 End.``! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`5esn`)Assert Exists(Case {_usn4} In 0.12 In {_usn3} When 0.12 In `8esn` Then $999 =~$999 =~usn2 When @usn6 Contains {0} Then 0.e0 Ends With {@usn5} Ends With 0e0 Else $`4esn` =~{usn1} End.@usn5?)"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:`7esn`]-()Assert Exists(Any(usn2 In {@usn5} Where 9e0[{`8esn`}]).`1esn`)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`2esn`)Assert (`` :_usn4:`1esn`)<-[`7esn`* 7]->(#usn8 :_usn4:`1esn`{`4esn`:{``}[2.12],_usn4:{12}[{_usn3}..0X7][$7..0]}).`1esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:``)Assert [`7esn` In @usn5[01..`6esn`] Where {_usn3}[..$usn2][..$`6esn`]|$_usn4[0X7..{1000}]].`2esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[``:#usn7]-()Assert Exists(All(@usn5 In 1.0 Starts With 12 Where .e12[0.0..][$#usn8..]).`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:@usn5)Assert [@usn5 In 1.0 Starts With 12 Where #usn7 Starts With {@usn6} Starts With {`1esn`}|{@usn6} Starts With 00].`7esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:_usn4]->()Assert Exists(Extract(@usn5 In 07[{_usn4}..{`4esn`}] Where {`3esn`} Ends With $123456789 Ends With {12}).`1esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:`1esn`]-()Assert Exists({usn1:$0 =~_usn3,_usn3:1.0 Starts With 12}.`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:usn1)Assert 010.`3esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn7:`4esn`]-()Assert Exists(All(@usn6 In 0xabc Ends With 1.0 Ends With $`` Where $usn2 =~`6esn` =~{usn1}).`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[usn2:`6esn`]-()Assert Exists(Extract(usn1 In #usn8 =~$@usn5 Where 0[...e1][..$usn2]|Null Starts With {_usn4}).#usn8?)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`2esn`)Assert Exists(All(`7esn` In @usn5[01..`6esn`] Where 0Xa[..0.12]).usn2?)"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:`6esn`]-()Assert Exists([`5esn` In `5esn` In 123.654 In {`6esn`} Where $`6esn` Starts With _usn4 Starts With `5esn`]._usn4!)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:#usn7)Assert Exists({`5esn`:999 Starts With {``}}.@usn6!)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`2esn`)Assert Exists(Case $`4esn` Is Null When `4esn` Starts With $12 Starts With $12 Then @usn5[_usn3..{12}][{999}..$7] End.`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`4esn`)Assert Exists(Allshortestpaths(({`1esn`:{1000}[0e0][{usn1}]})<-[* 123456789..999{`4esn`:{@usn5} In $`5esn`,`7esn`:{`8esn`} In 12 In 1e1}]-(#usn7 )<-[#usn7?:usn2|_usn3* 7{_usn4}]-(#usn7 :usn1)).`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`8esn`)Assert Exists(Case When 0e0 Ends With 0 Ends With {`6esn`} Then 0x0 Is Not Null End.#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`1esn`)Assert Exists(#usn8(Distinct 0x0[{`1esn`}]).#usn7!)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`8esn`)Assert Filter(`7esn` In @usn5[01..`6esn`] Where False Is Null Is Null).`3esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[``:``]-()Assert Exists(Extract(#usn7 In {`5esn`} Ends With `2esn` Where 1e1[usn1..$123456789][Count(*)..False])._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`2esn`)Assert `1esn`(Distinct {`4esn`} Contains \"d_str\").@usn6? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:@usn6)Assert (:usn1{_usn3:.e0 Starts With {0} Starts With 0x0})<-[`8esn`:_usn4|`5esn`* 0Xa{usn1:00 =~.e12}]->(:@usn5:usn2{`5esn`:$`7esn` Contains $_usn4 Contains `8esn`,`1esn`:#usn7 Ends With {@usn5}}).`6esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`7esn`)Assert Exists(usn2(False[0.0..{@usn6}]).usn1?)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`4esn`)Assert Reduce(`4esn`=`5esn` Starts With {999},#usn7 In $@usn6 Contains 0 Contains 0|`6esn` Contains {`3esn`}).#usn8! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:#usn7)Assert None(usn1 In #usn8 =~$@usn5 Where 0x0[9e0..][$@usn5..]).@usn5? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`2esn`)Assert Exists([12e12[$`5esn`..1.0][$`8esn`..$`1esn`],9e1[12.e12..]].usn1?)"),
    octest_legacy:ct_string("Create Index On:usn1(#usn7)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:`2esn`]->()Assert Exists(Shortestpath((_usn4 :`3esn`:@usn5{`2esn`:00[$usn2..][0.12..],_usn3:123456789 Is Not Null})<-[`6esn`:@usn5|``{usn2}]-(`5esn` :`6esn`:`4esn`{`4esn`:01234567[usn1]})).`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`7esn`:#usn8]-()Assert Exists(Extract(usn2 In 999[{123456789}..999] Where 9e1 Is Not Null).usn2)"),
    octest_legacy:ct_string("Drop Constraint On()<-[``:#usn8]-()Assert Exists(Reduce(`2esn`=usn2 Contains {usn1},#usn7 In {`5esn`} Ends With `2esn`|1e1[$@usn5]).`7esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[`1esn`:`1esn`]-()Assert Exists(None(usn1 In #usn8 =~$@usn5 Where {`6esn`}[0.e0..$123456789]).`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`3esn`)Assert Exists(`8esn`(Distinct `4esn` Is Null).`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[``:#usn8]-()Assert Exists(Extract(#usn8 In True In `8esn` Where `7esn`[..{`8esn`}]|$`1esn` Contains $#usn7).@usn5!)"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:`7esn`]->()Assert Exists(Single(`7esn` In \"d_str\" Ends With 0e0 Ends With {usn2} Where _usn3[..0xabc][..@usn5]).usn1)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:``)Assert Exists([usn1 In #usn8 =~$@usn5 Where {`6esn`} Starts With $1000|$#usn7 Contains {usn2}].``)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`5esn`)Assert Exists([`4esn` In False[0.0..{@usn6}] Where $@usn6 Contains 0 Contains 0|True Contains $123456789 Contains {`2esn`}].#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`1esn`)Assert Exists(Allshortestpaths((({`2esn`:$`2esn`[#usn7][01]})-[?* 0{``:0[1.0..][.e0..]}]->(`3esn` :`1esn`{`8esn`:12e12[$`5esn`..1.0][$`8esn`..$`1esn`]}))).`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`6esn`)Assert [`` In 0X0123456789ABCDEF =~$@usn6 =~$`8esn` Where {7} Starts With $usn2 Starts With $usn2|9e1 Is Not Null].`1esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:`1esn`]-()Assert Exists(None(usn2 In {@usn5} Where .e12 Is Null Is Null).#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`4esn`)Assert Filter(`7esn` In @usn5[01..`6esn`] Where {`6esn`} Starts With 0xabc).usn2! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:@usn5)Assert Exists({`1esn`:{#usn7} =~$0}.`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:usn1)Assert Single(`5esn` In `5esn` In 123.654 In {`6esn`} Where 9e1 Is Not Null Is Not Null).`1esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`1esn`)Assert Exists(Allshortestpaths((((:#usn8:#usn7{@usn5:@usn5 In 00})-[usn1?:`2esn`]->(:`4esn`:`3esn`)-[* 010]->(`4esn` :#usn8:#usn7{`4esn`:12.e12 =~$`7esn` =~{``}})))).@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn8:@usn6]-()Assert Exists((`8esn` :#usn7:`6esn`{`2esn`:`1esn` =~12.0,_usn4:$#usn8 In $0 In {`2esn`}})<-[?:@usn5|``* 00..999{@usn6:0.12 Is Not Null}]->(usn1 )<-[@usn6:`5esn`|`3esn`* 07..]->(`` :usn1{``:$999 Is Not Null Is Not Null,`4esn`:.e12 Ends With {`2esn`}}).@usn6)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`3esn`)Assert Case 1000 In {`4esn`} When `1esn` In 9e0 In {7} Then $#usn8 Is Not Null When Count(*) Is Not Null Is Not Null Then 123456789 Is Not Null Is Not Null End.#usn8 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`1esn`)Assert {@usn5:{#usn8} Ends With {123456789} Ends With #usn8,_usn3:$`1esn` Is Not Null}._usn3! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`7esn`)Assert [1e1[usn1..$123456789][Count(*)..False]].`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:`6esn`]->()Assert Exists(Single(@usn5 In 1.0 Starts With 12 Where 12.0 Ends With 0e0 Ends With $123456789).`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:#usn8)Assert Exists(Filter(@usn6 In 0xabc Ends With 1.0 Ends With $`` Where $`4esn`[{@usn5}]).`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:usn1]->()Assert Exists([`1esn` In {``} =~{`2esn`} =~$`8esn` Where {usn2}[$usn2]|0x0[{`1esn`}]].@usn5?)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:`5esn`]->()Assert Exists(None(@usn5 In 07[{_usn4}..{`4esn`}] Where $0 Ends With `2esn`).@usn6)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:`5esn`]-()Assert Exists(Reduce(`3esn`=$`1esn` Ends With {1000} Ends With $`8esn`,`1esn` In {``} =~{`2esn`} =~$`8esn`|`5esn`).@usn5!)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:`4esn`]-()Assert Exists(usn2(Distinct $999[12]).#usn8!)"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn8:usn2]-()Assert Exists(Reduce(usn1=999[1000..],`6esn` In {1000} Is Not Null|999[{12}..][$1000..]).`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`5esn`)Assert Exists(exists({1000} Is Not Null,07 Starts With \"d_str\" Starts With $12).`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:usn1)Assert Extract(_usn4 In .e12 Is Not Null Where 0xabc Contains False Contains {1000}|00[{999}..$#usn7][$0...e0]).`6esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:@usn5)Assert [_usn4 In .e12 Is Not Null Where {#usn8} =~$0|{`7esn`}[..0xabc][..0e0]].@usn5 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:usn1]-()Assert Exists(Filter(@usn5 In 1.0 Starts With 12 Where 010 Contains $`5esn`).#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:@usn6)Assert All(@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`} Where 12.e12 =~$`7esn` =~{``}).`2esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:usn2)Assert Exists({#usn8:9e1 Is Not Null,#usn7:12.0 In $usn1 In True}.usn1?)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:usn1)Assert Case When $0 Then 00 Is Null When 010[``..][{_usn3}..] Then @usn5[..$`7esn`][..$`6esn`] End.`6esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:usn2)Assert Exists(All(`` In 0X0123456789ABCDEF =~$@usn6 =~$`8esn` Where {`6esn`}[_usn3]).`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`2esn`)Assert Exists([usn2 In 999[{123456789}..999] Where {usn1}[$`8esn`][0.e0]]._usn4?)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:#usn8)Assert All(`1esn` In {``} =~{`2esn`} =~$`8esn` Where {usn2}[`2esn`..{`4esn`}][_usn4..``]).`3esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:_usn3)Assert Exists(None(`5esn` In `5esn` In 123.654 In {`6esn`} Where $`6esn` Starts With _usn4 Starts With `5esn`).`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`5esn`)Assert Filter(@usn6 In 0xabc Ends With 1.0 Ends With $`` Where $`4esn`[{@usn5}]).`5esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:_usn4)Assert Exists(Extract(_usn4 In .e12 Is Not Null|``[..`3esn`][..{@usn6}]).@usn5)"),
    octest_legacy:ct_string("Create Constraint On()-[``:usn1]->()Assert Exists(Single(_usn4 In .e12 Is Not Null Where 9e1 Is Not Null).`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn5:`2esn`]-()Assert Exists((@usn5 :_usn4:`1esn`)<-[#usn8?{`4esn`:`3esn` Is Null Is Null}]-(`5esn` )<-[:usn2|_usn3]->(@usn5 {_usn3:#usn7 Starts With {@usn6} Starts With {`1esn`},`6esn`:9e1 =~{#usn7}}).#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`6esn`)Assert [`8esn` =~0,0X0123456789ABCDEF[0e0..0xabc]]._usn4? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`1esn`)Assert `4esn`(Distinct Count(*)[#usn8][$usn1]).`5esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:`2esn`]-()Assert Exists(({``:$`3esn`[12.e12...e1],`1esn`:0xabc =~{`8esn`} =~{_usn3}})<-[`7esn`?* ..12{@usn5:{`6esn`}[_usn3]}]->(`5esn` :`5esn`{`3esn`:7 Is Null Is Null,`7esn`:$`8esn`[#usn7..][0X7..]})<-[{_usn3:$`3esn` Is Null Is Null}]-(:usn1{`4esn`:{`2esn`}[..{123456789}],@usn6:$#usn7 Starts With {`2esn`} Starts With @usn6}).`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn1:``]-()Assert Exists(Reduce(`3esn`=$12 Is Null,`5esn` In $999[12]|@usn5[_usn3..{12}][{999}..$7]).`4esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:``)Assert Exists(Filter(`` In 0X0123456789ABCDEF =~$@usn6 =~$`8esn` Where \"d_str\"[..{`1esn`}][..$`2esn`]).`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:_usn4)Assert Exists({usn2:$#usn7 =~Count(*) =~@usn5}.@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:`5esn`]-()Assert Exists(Reduce(`6esn`=$`4esn` =~{usn1},@usn5 In 07[{_usn4}..{`4esn`}]|12 Contains 9e1 Contains $`8esn`).`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`7esn`:usn2]-()Assert Exists(Filter(usn2 In {@usn5} Where .e12 Is Null Is Null).`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:``)Assert ``(Distinct 1000[9e12][$`1esn`],01[123456789..][$_usn4..]).`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`1esn`)Assert Reduce(usn2=Count(*)[#usn8][$usn1],usn2 In {@usn5}|$usn2[`4esn`..]).`3esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn4:``]-()Assert Exists([`3esn`[#usn8]].`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`2esn`)Assert ``({`7esn`}[{#usn7}..],{7}['s_str'..]).`7esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:@usn5)Assert None(@usn5 In 1.0 Starts With 12 Where .e12[0.0..][$#usn8..]).`4esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`7esn`)Assert [`7esn` In @usn5[01..`6esn`] Where 0xabc =~{_usn4}|$`8esn`[..`6esn`][..#usn7]].`3esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:usn1)Assert Exists(Reduce(`7esn`='s_str'[9e12..][12e12..],#usn7 In {`5esn`} Ends With `2esn`|Null In {_usn3} In _usn3).#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On()-[``:``]->()Assert Exists(Any(usn1 In {usn2} Contains {123456789} Contains 0Xa Where {`7esn`}[..0xabc][..0e0]).@usn6)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:_usn3)Assert Exists({#usn8:0xabc =~{_usn4}}.``)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:#usn7)Assert Exists([`` In 0X0123456789ABCDEF =~$@usn6 =~$`8esn` Where 9e1 Ends With 0xabc Ends With @usn6].@usn5?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:@usn5)Assert All(usn1 In #usn8 =~$@usn5 Where {``}[$@usn5]).@usn5? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:_usn4]->()Assert Exists((:#usn8:#usn7{``:usn1[#usn8..0.0],`7esn`:{_usn3} In 010 In 0.e0})-[_usn3?:#usn8|_usn3{`3esn`:12.0[{`6esn`}..123.654][@usn5..usn1],`8esn`:$`6esn`[`5esn`..][$12..]}]->(`3esn` {`5esn`:Null[..010][..$@usn6],@usn5:1000 Is Not Null Is Not Null})._usn4)"),
    octest_legacy:ct_string("Create Constraint On(usn1:usn1)Assert Exists((usn1 {usn1:$`4esn` =~{usn1},@usn5:999 =~0x0 =~2.12})<-[`7esn`* 01..]-(@usn6 ).#usn7!)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:usn1)Assert Reduce(`4esn`=$`7esn` Ends With usn2,`6esn` In {1000} Is Not Null|$`6esn`[$7..{`3esn`}])._usn4! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:_usn4]->()Assert Exists(None(usn2 In {@usn5} Where True =~`5esn`).`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`7esn`)Assert Single(@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`} Where {@usn6} Starts With .e1).usn2! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`6esn`)Assert (`1esn` :`4esn`:`3esn`{`1esn`:{`2esn`}[..{123456789}]})-[_usn4?]-(usn1 :``:usn1{_usn3:#usn8[1e1..],_usn3:123.654 In {`6esn`} In `6esn`})<-[* 01..{`7esn`:{#usn7} =~{usn1},`7esn`:0x0 Is Null}]-(`` :usn1).`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn3:`6esn`]-()Assert Exists([usn2 In 999[{123456789}..999] Where 010[$12..]|9e0 =~$usn1 =~{@usn6}].`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:#usn7)Assert Exists(Reduce(#usn8={`4esn`}[0xabc..][010..],_usn4 In .e12 Is Not Null|$`4esn` Is Null).`2esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(``:`8esn`)Assert (`7esn` )-[* 0x0..7{@usn6:$0 Ends With `2esn`}]->(:usn1{`4esn`:{`2esn`}[..{123456789}],@usn6:$#usn7 Starts With {`2esn`} Starts With @usn6})<-[?{`4esn`:$`4esn` =~{usn1}}]-(:`6esn`:`4esn`{#usn7:999[$_usn3][@usn6],`4esn`:`4esn` Starts With $12 Starts With $12}).`1esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:#usn8)Assert Shortestpath(((:`7esn`:_usn4{#usn7:999 Starts With {``},usn2:.e12[0.0..][$#usn8..]})-[@usn5?* 00..999]->(_usn3 :@usn6{`4esn`:{`2esn`}[..{123456789}],@usn5:{`4esn`}[0xabc..][010..]})-[`4esn`?* ..999]-(:usn1{_usn3:.e0 Starts With {0} Starts With 0x0}))).@usn5 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:#usn7)Assert Exists(Single(@usn5 In 1.0 Starts With 12 Where `8esn`[{#usn7}..][_usn4..]).`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:``)Assert Exists([07[_usn3][123456789],#usn8 Ends With 0Xa].usn1)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`8esn`:`7esn`]-()Assert Exists(Extract(usn2 In {@usn5} Where 010|0xabc Ends With 1.0 Ends With $``).#usn8)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`4esn`)Assert [`5esn` In $999[12] Where False[0.0..{@usn6}]|01[$_usn3..][123.654..]].`2esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:`4esn`]-()Assert Exists(Case When _usn4 In usn2 Then 0X7[#usn7..][12e12..] When {@usn5} In 0X0123456789ABCDEF In 1000 Then 0[0xabc] Else .e1[..`2esn`] End.`4esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[`6esn`:`5esn`]-()Assert Exists(Filter(`5esn` In $999[12] Where 999[{12}..][$1000..])._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`8esn`)Assert Exists(Case 01[$_usn3..][123.654..] When `4esn` Starts With 0x0 Then #usn8 Ends With 0Xa When {`7esn`} Contains 's_str' Contains 01 Then Null In 1e1 In {999} Else {@usn5} In $`5esn` End.`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn5:`4esn`]-()Assert Exists((#usn8 {`4esn`:01234567[``..$`1esn`][True..$#usn7],`5esn`:010[$12..]})<-[?* 0X7..{`7esn`:$@usn6[..{`6esn`}][...e0]}]-(`1esn` :``:usn1{#usn7:Count(*)[#usn8][$usn1]})<-[@usn5?:`3esn`|``* 01..]->(#usn8 {@usn5:_usn4 =~$#usn7 =~`8esn`})._usn3?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`2esn`:`4esn`]-()Assert Exists(Reduce(@usn5={_usn3} In 010 In 0.e0,`7esn` In \"d_str\" Ends With 0e0 Ends With {usn2}|.e0 Starts With usn2).``?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:@usn5)Assert Exists(Any(#usn7 In {`5esn`} Ends With `2esn` Where 0X0123456789ABCDEF =~$@usn6 =~$`8esn`).`6esn`)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:#usn8)Assert Exists(Filter(`5esn` In `5esn` In 123.654 In {`6esn`} Where True In `8esn`)._usn4?)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`2esn`)Assert Filter(`4esn` In False[0.0..{@usn6}] Where 9e1[12.e12..]).usn2! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`4esn`)Assert Exists(Reduce(_usn3={`7esn`} Starts With 12.0 Starts With 07,usn1 In #usn8 =~$@usn5|$`7esn` Is Not Null Is Not Null).usn2!)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn1:`2esn`]-()Assert Exists(Extract(#usn8 In True In `8esn` Where .e0 Starts With {0} Starts With 0x0|$`8esn`[..`6esn`][..#usn7]).`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:``)Assert Exists(Case _usn4 In usn2 When 01234567[usn1] Then $`4esn`[{@usn5}] Else 0.e0 Ends With $`8esn` End.`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:_usn3)Assert Exists([True =~_usn3].#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`4esn`)Assert (usn2 )-[?:`6esn`|:`7esn`* 0X0123456789ABCDEF{usn1:`4esn`[$999..][1.0..]}]-(`1esn` {`1esn`:`5esn`,#usn8:00[.e0][010]})<-[@usn5?:#usn8|_usn3{``:{7} Starts With $usn2 Starts With $usn2,`3esn`:9e12[{1000}..][1000..]}]->(:``:usn1{usn2:010 Contains $`5esn`}).``? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:usn1)Assert (:`2esn`{`4esn`:$999[$12..][.e0..]})-[usn2?:@usn6* 0x0..7]->({#usn8:`6esn` =~12.e12 =~123456789,#usn8:{@usn5} Contains 0X7 Contains 1e1}).`` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:_usn3)Assert (`4esn` :usn2)<-[`3esn`?:`6esn`|:`7esn`* ..999]->(:#usn7:`6esn`{usn1:$#usn8 Is Not Null})-[`5esn`?:`8esn`|:_usn3* 0x0..7{usn2:$#usn7 Contains {usn2}}]-({@usn5:usn2[$7..$`5esn`]}).`1esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:`5esn`)Assert Exists([_usn3[$123456789..]].@usn6)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:#usn8)Assert Exists(`2esn`(_usn3 Ends With {#usn7},{`2esn`}[..$`6esn`][..`3esn`]).`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`4esn`)Assert Single(usn2 In {@usn5} Where 12e12[..Count(*)][..$usn2]).#usn8 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`3esn`)Assert {`2esn`:0.e0 Ends With {@usn5} Ends With 0e0}.usn2! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`5esn`)Assert [1.e1[0xabc..][.e12..],123456789 Is Not Null]._usn4? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:@usn5)Assert Reduce(#usn7=.e12 Starts With 12,@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`}|$999[12]).#usn7! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:``)Assert Any(@usn5 In 07[{_usn4}..{`4esn`}] Where $`6esn`[`5esn`..][$12..]).`1esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`6esn`)Assert Any(usn2 In {@usn5} Where `7esn` Is Null).#usn8? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`1esn`)Assert [0x0 Is Null,12.0[$999..][$@usn6..],{`2esn`}[@usn6][{_usn3}]].`3esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[usn2:`7esn`]-()Assert Exists(`2esn`(Distinct {#usn7} Contains {`7esn`} Contains $`3esn`,2.12 =~9e1 =~{_usn4}).`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`1esn`)Assert Exists(Allshortestpaths((`` )).@usn5)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:`1esn`]-()Assert Exists(Single(`5esn` In $999[12] Where $@usn5 Starts With 1e1).`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`8esn`)Assert {@usn5:0 =~usn1,`1esn`:0.0[010..12.e12]}.`6esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:#usn7]-()Assert Exists([`` In 0X0123456789ABCDEF =~$@usn6 =~$`8esn` Where 00[$usn2..][0.12..]|0e0 In .e1].#usn8)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`1esn`)Assert Exists(Extract(@usn5 In 1.0 Starts With 12 Where .e0 Starts With {0} Starts With 0x0|@usn6[9e12..]).@usn5!)"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn4:#usn8]-()Assert Exists(Filter(usn1 In {usn2} Contains {123456789} Contains 0Xa Where $`1esn`[`6esn`..$12][{usn2}..07]).``!)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`4esn`)Assert Exists(Shortestpath((`3esn` )-[`5esn`* 123456789..999{usn1:$`4esn` Contains @usn5 Contains {`8esn`},`1esn`:`4esn` Starts With $12 Starts With $12}]->({_usn4:7[`7esn`..usn2][$`5esn`..0X7]})-[?:usn1|:@usn6{_usn4:$`2esn` In 0xabc,`3esn`:$`8esn` Contains 12}]-(:@usn5:usn2{`8esn`:@usn5 In 00,`2esn`:$usn1[..$`1esn`]})).usn2)"),
    octest_legacy:ct_string("Create Constraint On()<-[`3esn`:`1esn`]-()Assert Exists([`8esn`[$123456789..][$usn1..]].usn1!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:``]-()Assert Exists(Shortestpath((:`1esn`{#usn8:0e0 In .e1})<-[`7esn`?]-(usn1 :_usn4:`1esn`{usn1:$`7esn`[_usn3..][{_usn3}..],_usn4:{`3esn`}[`6esn`..]})).`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:#usn8)Assert 1000.`7esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:_usn3]-()Assert Exists({@usn5:$``[..`4esn`][..0],`8esn`:{@usn5}}.`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn6:``]->()Assert Exists(Any(_usn4 In .e12 Is Not Null Where 0e0 Starts With 's_str').@usn5)"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:`8esn`]->()Assert Exists(Reduce(@usn5=#usn8[#usn8..],`5esn` In $999[12]|0.e0[#usn7..][$@usn5..])._usn4?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`4esn`:`8esn`]-()Assert Exists([`6esn` In {1000} Is Not Null Where $`1esn`[`6esn`..$12][{usn2}..07]|$`4esn` Ends With $12].`2esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:``)Assert Filter(`7esn` In @usn5[01..`6esn`] Where {1000} Is Not Null).`1esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`1esn`)Assert Allshortestpaths((_usn3 {usn1:{`5esn`} Starts With 123456789 Starts With 07,#usn8:@usn5[_usn3..{12}][{999}..$7]})-[?:`6esn`|:`7esn`* 1000]-({``:$`3esn`[12.e12...e1],`1esn`:0xabc =~{`8esn`} =~{_usn3}})<-[`6esn`?:@usn6* 01..{#usn8:$`7esn` Ends With usn2,`8esn`:1.e1[0xabc..][.e12..]}]-(usn1 :#usn8:#usn7{@usn6:`4esn`[`1esn`][{`8esn`}],`6esn`:$7[0X0123456789ABCDEF]})).`7esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:`3esn`]-()Assert Exists(Single(`` In 0X0123456789ABCDEF =~$@usn6 =~$`8esn` Where 1000 Contains 12.e12).@usn5?)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:``)Assert `1esn`(Distinct).#usn8 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`4esn`)Assert {usn2:usn1 Ends With $@usn6 Ends With $1000}.`3esn` Is Unique"),
    octest_legacy:ct_string("Create Index On:`4esn`(`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[``:usn1]-()Assert Exists(`7esn`(1000 Contains 12.e12).`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn4:#usn8]-()Assert Exists([`5esn` In `5esn` In 123.654 In {`6esn`} Where True In `8esn`].#usn8)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`1esn`)Assert Single(usn2 In {@usn5} Where {`2esn`})._usn4 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`2esn`:_usn4]->()Assert Exists([`` In 0X0123456789ABCDEF =~$@usn6 =~$`8esn` Where 9e12 In 's_str' In $`4esn`|{#usn7} Contains {`7esn`} Contains $`3esn`].@usn6)"),
    octest_legacy:ct_string("Create Constraint On(usn2:_usn3)Assert {@usn5:0.12 In `8esn`}.`3esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:@usn6)Assert (:@usn6)<-[:`3esn`|``* 1000]-(`6esn` :usn1)<-[#usn7?:usn2|_usn3* 7{_usn4}]-(:_usn3:@usn6{#usn8:0.0 Is Null,``:$`1esn` Contains $#usn7}).#usn8! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`1esn`)Assert (#usn7 :#usn7:`6esn`)<-[?:usn2|_usn3{``:#usn7,`4esn`:$12[`6esn`][$#usn8]}]-(:_usn4:`1esn`{_usn3:`3esn` Is Null Is Null})-[:`2esn`{_usn3:$@usn5[`2esn`..][#usn7..]}]-({`3esn`:_usn3 In 1.e1})._usn4! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:@usn6)Assert (:_usn4:`1esn`{`8esn`:$12[{`5esn`}..]})-[:usn2|_usn3* 01234567..0Xa]-(_usn4 {@usn6:$`8esn` Starts With $123456789,@usn5:.e1[..`2esn`]}).`5esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:`1esn`]->()Assert Exists((:#usn7:`6esn`{`5esn`:Null[..010][..$@usn6],@usn5:1000 Is Not Null Is Not Null})<-[`4esn`?:`8esn`|:_usn3* 01..{`4esn`:False Contains {``} Contains $`2esn`,`1esn`:1000 Contains 12.e12}]-(`1esn` :@usn6{@usn6:.e0 Contains $@usn6,`1esn`:usn1 Ends With $@usn6 Ends With $1000})<-[?* 07..{#usn8:Null[..010][..$@usn6]}]->(`` {`4esn`:0.0}).usn1)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn7:`6esn`]->()Assert Exists([$12[0xabc..][12e12..]].@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`2esn`:#usn7]-()Assert Exists(Case _usn4 In usn2 When .e12 Ends With {`2esn`} Then $`7esn` In $999 In {123456789} End.`5esn`)"),
    octest_legacy:ct_string("Create Constraint On(usn1:usn2)Assert Exists(Reduce(_usn4={@usn5} =~$`2esn`,`6esn` In {1000} Is Not Null|{usn2} Contains {123456789} Contains 0Xa).`3esn`)"),
    octest_legacy:ct_string("Create Index On:`8esn`(``)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`3esn`)Assert Shortestpath(((:@usn5:usn2{``:1e1[1.e1..],@usn6:12[0X0123456789ABCDEF..][Count(*)..]})-[?{usn2:.e12[0.0..][$#usn8..]}]-(:#usn8:#usn7{`3esn`:{`7esn`} Contains 's_str' Contains 01,`6esn`:$usn2[`4esn`..]}))).#usn8! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:@usn5)Assert {#usn7:'s_str'[9e12..][12e12..],``:$`1esn` Contains usn2 Contains 1.0}.`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[usn2:`2esn`]-()Assert Exists(Case `4esn` Ends With 01 Ends With `5esn` When 010 Ends With 123456789 Ends With .e0 Then {_usn4} End.`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:@usn6)Assert Extract(`1esn` In {``} =~{`2esn`} =~$`8esn` Where 12[$`8esn`..{_usn4}]|12.e12[..9e12][..1000]).`5esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:_usn3)Assert Case When @usn6[9e12..] Then 1.0[{#usn8}..] When {@usn6} Starts With 00 Then `2esn`[{_usn3}..9e1][$`7esn`..Count(*)] End.`5esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:@usn6)Assert Exists(Reduce(`2esn`=0 Is Null,`5esn` In `5esn` In 123.654 In {`6esn`}|{``} =~{`2esn`} =~$`8esn`)._usn3?)"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:`7esn`]-()Assert Exists(Reduce(@usn5=@usn6 Contains {0},`1esn` In {``} =~{`2esn`} =~$`8esn`|$1000[999..][0Xa..]).``?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:#usn8)Assert Extract(#usn7 In {`5esn`} Ends With `2esn` Where `5esn` =~@usn6 =~$`7esn`|{`6esn`} Starts With $1000).usn2! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn6:`3esn`]->()Assert Exists([{_usn4} In 9e0,`3esn`[{`1esn`}]].`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On(``:@usn6)Assert Any(@usn5 In 07[{_usn4}..{`4esn`}] Where #usn8[1e1..`1esn`][{1000}..`6esn`]).`7esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:#usn8)Assert Exists((`4esn` :`1esn`{`2esn`:1000 Is Not Null})<-[:_usn3|:`6esn`]-(_usn3 :`3esn`:@usn5{``:1.0 =~`7esn` =~$`7esn`,`3esn`:{`4esn`} Contains \"d_str\"}).#usn7!)"),
    octest_legacy:ct_string("Create Constraint On()<-[`1esn`:_usn3]-()Assert Exists(Extract(`5esn` In `5esn` In 123.654 In {`6esn`} Where 9e12[{1000}..][1000..]|0Xa[01..$`1esn`]).usn2!)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:usn1)Assert [@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`} Where .e12[0.0..][$#usn8..]].@usn6! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:#usn7)Assert Exists(Allshortestpaths(((:`4esn`:`3esn`{`8esn`:@usn6[..{usn2}][..{`5esn`}],`2esn`:$`1esn` Starts With 999})-[?:``]-({`3esn`:.e12 Is Not Null})<-[usn1?:`7esn`* 0x0..7]->(_usn4 {usn2:0[1.0..$``],#usn7:0.0}))).@usn5?)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:usn1)Assert [{`2esn`}[..``],1e1[1000],{@usn6} Starts With 00].`8esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:``)Assert Exists(Single(`5esn` In $999[12] Where `5esn` In 123.654 In {`6esn`}).usn2?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[``:`1esn`]-()Assert Exists([`6esn` In {1000} Is Not Null Where 1000 In {`4esn`}].`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn3:@usn6]-()Assert Exists(Any(`` In 0X0123456789ABCDEF =~$@usn6 =~$`8esn` Where 1.e1 Starts With False Starts With $@usn6).#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:#usn8)Assert Any(usn1 In {usn2} Contains {123456789} Contains 0Xa Where {_usn3}[..$usn2][..$`6esn`]).`` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:usn1]-()Assert Exists(_usn3(0.12[$0..$``]).`3esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:`8esn`]->()Assert Exists([#usn7 In {`5esn`} Ends With `2esn` Where 12[0X0123456789ABCDEF..][Count(*)..]|9e12[{1000}..][1000..]]._usn4!)"),
    octest_legacy:ct_string("Drop Index On:`6esn`(`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:#usn8]-()Assert Exists([@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`} Where 's_str'[..'s_str'][..{#usn7}]].`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`2esn`)Assert (:#usn7:`6esn`{`5esn`:Null[..010][..$@usn6],@usn5:1000 Is Not Null Is Not Null})<-[`4esn`?:`8esn`|:_usn3* 01..{`4esn`:False Contains {``} Contains $`2esn`,`1esn`:1000 Contains 12.e12}]-(`1esn` :@usn6{@usn6:.e0 Contains $@usn6,`1esn`:usn1 Ends With $@usn6 Ends With $1000})<-[?* 07..{#usn8:Null[..010][..$@usn6]}]->(`` {`4esn`:0.0}).usn1 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:@usn6)Assert Exists(#usn8(0.12 Is Not Null,0.e0[True..][True..])._usn3?)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:usn1)Assert Exists([`7esn` In @usn5[01..`6esn`] Where 0xabc =~{_usn4}|$`8esn`[..`6esn`][..#usn7]].`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:@usn6)Assert Exists(Allshortestpaths((((#usn8 :`8esn`:_usn3{`2esn`:#usn8 Ends With `5esn` Ends With _usn3})-[@usn6?:_usn4|`5esn`* ..12]->(_usn3 :`4esn`:`3esn`)<-[`6esn`:@usn5|``{usn2}]-(`5esn` :`6esn`:`4esn`{`4esn`:01234567[usn1]})))).`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:_usn4)Assert Exists(Reduce(#usn7=Count(*) In {`4esn`},usn2 In 999[{123456789}..999]|12e12[``..][$`3esn`..]).``!)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:`7esn`]-()Assert Exists({`3esn`:{`6esn`} Starts With 0xabc,_usn3:False[0.0..{@usn6}]}.#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:_usn4)Assert Exists(Filter(`7esn` In \"d_str\" Ends With 0e0 Ends With {usn2} Where .e1[07..`5esn`][$12...e0]).`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:`2esn`]-()Assert Exists(Extract(@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`} Where $`4esn` Is Null|{999}[..{999}]).#usn7)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:usn1)Assert Exists(Extract(`1esn` In {``} =~{`2esn`} =~$`8esn` Where $`1esn` Ends With {1000} Ends With $`8esn`|9e1 =~{#usn7}).#usn7)"),
    octest_legacy:ct_string("Create Index On:`7esn`(`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:_usn3)Assert Exists(Any(`7esn` In @usn5[01..`6esn`] Where .e1[07..`5esn`][$12...e0]).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn1:#usn7]-()Assert Exists([0[`6esn`][1e1],$@usn5[$7..@usn5],`3esn` Contains {`6esn`}].usn1)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:@usn6)Assert Filter(@usn5 In 07[{_usn4}..{`4esn`}] Where 12.e12 Starts With `8esn` Starts With 9e12).`3esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:_usn4)Assert Exists((_usn3 :@usn5:usn2)<-[* 07..{`6esn`:{0}[.e12..]}]->({`3esn`:{#usn8} Is Not Null Is Not Null})<-[@usn6{@usn5:999[1000..],`7esn`:12 =~$`5esn` =~$_usn3}]->(:`7esn`:_usn4{usn1:$`8esn` In {`2esn`} In $0}).`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`3esn`)Assert Exists(All(@usn6 In `3esn` Starts With @usn5 Starts With {`4esn`} Where $999[$12..][.e0..]).`5esn`!)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`8esn`)Assert Exists([$`7esn` Is Not Null Is Not Null,@usn6[9e12..],07[_usn3][123456789]]._usn3)"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:`2esn`]->()Assert Exists(Filter(`` In 0X0123456789ABCDEF =~$@usn6 =~$`8esn` Where .e0 Starts With usn2)._usn3!)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`7esn`)Assert Filter(`5esn` In $999[12] Where 0.0[.e12..]).`6esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn7:`3esn`]-()Assert Exists(Any(usn2 In 999[{123456789}..999] Where usn1 Ends With $@usn6 Ends With $1000).@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:@usn5)Assert Exists(Extract(`5esn` In `5esn` In 123.654 In {`6esn`} Where $@usn5 Starts With 1e1|{`7esn`}[..$`8esn`][..{`8esn`}]).`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:#usn8)Assert Allshortestpaths((((:_usn4:`1esn`{#usn8:$@usn5 Is Not Null,_usn3:0.12[$0..$``]})<-[?* 010]-({@usn6:{usn1}[12e12..`6esn`][`7esn`..$`6esn`],@usn6:_usn3 Ends With {`7esn`} Ends With 12})<-[?:usn1|:@usn6{_usn4:$`2esn` In 0xabc,`3esn`:$`8esn` Contains 12}]->(`7esn` )))).`4esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:usn2)Assert None(_usn4 In .e12 Is Not Null Where 999 Is Not Null Is Not Null).#usn7? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:@usn6)Assert _usn4(#usn7).`8esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:`6esn`)Assert Case When #usn7 Starts With {@usn5} Starts With 07 Then {`2esn`} When 00 Is Null Then Count(*) In {`4esn`} Else usn2[$7..$`5esn`] End.``? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:#usn8)Assert Exists([`1esn`[$``][{`5esn`}],{@usn5} Contains 0X7 Contains 1e1,0 =~usn1].@usn6!)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`5esn`)Assert Exists(Reduce(_usn3=$#usn7 Starts With {`2esn`} Starts With @usn6,@usn6 In 0xabc Ends With 1.0 Ends With $``|1e1[..12e12]).@usn6)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`1esn`:`2esn`]-()Assert Exists((:#usn7:`6esn`{usn1:$#usn8 Is Not Null})-[:usn2|_usn3* 01234567..0Xa]-(_usn4 {@usn6:$`8esn` Starts With $123456789,@usn5:.e1[..`2esn`]})<-[:`6esn`|:`7esn`{usn2:1e1[1000]}]->(_usn4 :_usn4:`1esn`).``!)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`1esn`)Assert Extract(#usn7 In $@usn6 Contains 0 Contains 0 Where 123456789 Is Not Null Is Not Null|$7 =~{`7esn`} =~$`6esn`).@usn6! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`6esn`)Assert None(@usn5 In 1.0 Starts With 12 Where {`2esn`}[usn2..][$#usn7..]).usn2 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:_usn3]->()Assert Exists(Reduce(`3esn`=`2esn`[0Xa][{`8esn`}],@usn6 In 0xabc Ends With 1.0 Ends With $``|`4esn` Starts With 9e12 Starts With 00).`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`7esn`:usn2]-()Assert Exists(Reduce(`2esn`={`1esn`} =~{@usn6} =~`2esn`,`` In 0X0123456789ABCDEF =~$@usn6 =~$`8esn`|0[`6esn`][1e1]).@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:_usn4)Assert Reduce(_usn4=12[True],@usn5 In 1.0 Starts With 12|usn1 Ends With $@usn6 Ends With $1000).`2esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:usn1]->()Assert Exists([_usn4 =~$#usn7 =~`8esn`,.e1 Starts With #usn7 Starts With 1.e1].#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`4esn`:`2esn`]-()Assert Exists([$`1esn`[`6esn`..$12][{usn2}..07]].usn1)"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:`6esn`]-()Assert Exists([{``} Starts With True Starts With True,{@usn6} In $999 In 01234567,True In `8esn`].`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn2:@usn5]-()Assert Exists([{usn1} Contains 123.654 Contains {#usn8},1e1[$@usn5],$``[..`4esn`][..0]].@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`4esn`:usn1]-()Assert Exists(None(usn1 In {usn2} Contains {123456789} Contains 0Xa Where $7[0X0123456789ABCDEF]).``?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`2esn`:_usn4]-()Assert Exists(`7esn`(1000 Contains 12.e12).`2esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[usn2:usn1]-()Assert Exists(Single(usn2 In 999[{123456789}..999] Where {usn1} Contains 123.654 Contains {#usn8}).@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:_usn3]->()Assert Exists([usn1 In #usn8 =~$@usn5 Where {`6esn`} Starts With $1000|$#usn7 Contains {usn2}].usn2?)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:#usn7)Assert [_usn3[..0xabc][..@usn5],$#usn7 Starts With $`4esn`,{`7esn`} Ends With $usn2 Ends With 9e0].@usn6! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn5:@usn6]->()Assert Exists((`5esn` :`5esn`)-[#usn8{@usn6:07 Is Null}]->({`4esn`:01234567[``..$`1esn`][True..$#usn7],`5esn`:010[$12..]})-[#usn7?:``]->(#usn7 {#usn8:$`7esn` In $999 In {123456789}}).``)"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:_usn3]-()Assert Exists(Extract(usn2 In {@usn5} Where $#usn7 =~Count(*) =~@usn5|0xabc[{@usn5}]).usn2!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:@usn5)Assert Case {`1esn`}[01234567..][@usn5..] When 0x0[{`1esn`}] Then $0 =~_usn3 When 1e1[$@usn5] Then True Starts With `` Starts With 0.e0 End.`8esn`? Is Unique").
