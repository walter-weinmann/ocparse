%%%-------------------------------------------------------------------
%%% File        : performance_command_legacy_SUITE.erl
%%% Description : Test Suite for rule: command.
%%%
%%% Created     : 03.10.2016
%%%-------------------------------------------------------------------
-module(performance_command_legacy_SUITE).

-compile(export_all).

-include_lib("common_test/include/ct.hrl").
-include_lib("eunit/include/eunit.hrl").

%%--------------------------------------------------------------------
%% COMMON TEST CALLBACK FUNCTIONS - SUITE
%%--------------------------------------------------------------------

suite() ->
    [
        {timetrap, {minutes, 10}}
    ].

init_per_suite(Config) ->
    Config.

end_per_suite(_Config) ->
    ok.

%%--------------------------------------------------------------------
%% COMMON TEST CALLBACK FUNCTIONS - ALL
%%--------------------------------------------------------------------

all() ->
    [test_command].

%%--------------------------------------------------------------------
%% TEST CASES
%%--------------------------------------------------------------------

test_command(_Config) ->
    octest_legacy:ct_string("Drop Constraint On(``:`7esn`)Assert Extract(#usn8 In {`5esn`}[.e1..``]|$`6esn` Is Null)._usn4 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:`2esn`]->()Assert Exists([#usn8 In 7[..999][..{#usn8}] Where \"d_str\"[#usn8]|False].`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:`6esn`]->()Assert Exists({_usn3:{#usn7} Is Not Null Is Not Null}.`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`7esn`:`8esn`]-()Assert Exists(All(_usn3 In {`3esn`}[`2esn`] Where $_usn4[Count ( * )..]).@usn6?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`8esn`)Assert Allshortestpaths((((:usn1{`5esn`:`5esn`[_usn4..],`4esn`:`7esn`[..{usn1}]})<-[ *123456789..{@usn6:1e1[{`3esn`}..{`4esn`}][0Xa..$_usn4],`6esn`:12e12 Ends With {usn1}}]->(#usn8 :@usn6:#usn8)-[usn1? *1000..00]->({`4esn`:2.12['s_str'..$12][{`1esn`}..`2esn`],`1esn`:0e0 In @usn5})))).`5esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:@usn5)Assert Exists([#usn8 In {`5esn`}[.e1..``] Where $`` =~12.0 =~$`7esn`].@usn6?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn8:`3esn`]-()Assert Exists(Allshortestpaths(((:`1esn`{})-[:usn1|@usn6 *7..12]->(`7esn` {usn1:`7esn`[..{usn1}],usn2:Null[``]}))).`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn2:`6esn`]-()Assert Exists((:_usn4{@usn6})-[`5esn`?:_usn4|:usn2{_usn4:{999}}]-(@usn6 {#usn7:2.12 Contains usn2 Contains True})<-[{`4esn`:{_usn3}[..$12][..0.12],`7esn`:1.0[0X7][{`5esn`}]}]-({`2esn`:{7} In `2esn`,`1esn`:`4esn`[1.0]})._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`3esn`)Assert Case When 1.0 Starts With 12e12 Starts With {`5esn`} Then {0} End.usn2 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`2esn`)Assert Exists(Single(`5esn` In $999[0.0..] Where Count ( * ) Contains {`1esn`} Contains 07).``!)"),
    octest_legacy:ct_string("Create Constraint On()-[usn2:usn1]->()Assert Exists(All(#usn8 In {`5esn`}[.e1..``] Where $`3esn` Is Not Null).#usn8?)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:@usn6]->()Assert Exists(`7esn`(Distinct {999}).usn1?)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`6esn`)Assert Allshortestpaths(((`4esn` {`6esn`:#usn8[..{#usn7}]})-[:`2esn`{usn2:01[2.12..`8esn`],_usn4:1.0 Starts With 12e12 Starts With {`5esn`}}]->(:_usn4{`6esn`:$usn1 In {999} In $#usn7,_usn4:#usn7})<-[`6esn`?:_usn4|:usn2]-(:`5esn`{`2esn`:Count(*)[..usn2][..usn2]}))).#usn7! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`1esn`)Assert Exists(Case When True[07..$usn2][$7..{usn1}] Then 's_str'[00][{`5esn`}] When 12e12 Ends With {usn1} Then 2.12 =~False End.`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:_usn4)Assert Exists(All(`` In `` Is Not Null Is Not Null Where 12.e12[0xabc]).@usn5)"),
    octest_legacy:ct_string("Drop Constraint On(``:usn1)Assert Exists((`3esn` :`7esn`:_usn3)-[`7esn` *0X0123456789ABCDEF]->({#usn8:$`8esn`[1000..0Xa],#usn7:12.0})<-[#usn8?:#usn7{`1esn`:#usn7 =~Count ( * ) =~``,usn2:`` Ends With $1000}]->(:@usn6:#usn8{`4esn`:$`8esn`[..00]}).`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`3esn`)Assert {`6esn`:#usn8[..{#usn7}],@usn5:`8esn`[`4esn`..{#usn8}][$12..2.12]}.`4esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`3esn`)Assert Shortestpath((:#usn8:#usn8{_usn4})).@usn6? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:``)Assert Exists((`` :_usn4{_usn4:False[..``],usn2:9e1[1000][{123456789}]})<-[:`5esn`{@usn6:$#usn8 Ends With $`2esn` Ends With $@usn6,`6esn`:{7}[..12e12][..Count ( * )]}]->(`6esn` :_usn3:_usn3{``:$usn1 Ends With $`` Ends With $12})-[`8esn`?:`2esn`{`3esn`:$1000 Is Null Is Null,`8esn`:`` Ends With 0Xa Ends With `2esn`}]->({@usn6:$usn1 Ends With $`` Ends With $12}).`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`3esn`:_usn3]-()Assert Exists([`3esn` In {7} Is Null Where {usn2}[.e0..$999]|01[2.12..`8esn`]].@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn6:usn2]-()Assert Exists(Extract(_usn3 In {`3esn`}[`2esn`]).`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`7esn`)Assert Exists({`3esn`:usn1 Is Null Is Null}.`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[``:`3esn`]->()Assert Exists([`7esn`[..2.12][..{usn1}]].@usn5)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`6esn`)Assert Allshortestpaths((((`1esn` {@usn6:$#usn8[$`8esn`..{`8esn`}],``:0Xa[usn2..]})<-[?:#usn8|`1esn`*..{`3esn`:{`1esn`}[12.0..`2esn`][@usn6..{usn1}]}]-(_usn4 :#usn8:#usn8{`8esn`:'s_str' In 00})-[`6esn`?:`3esn`|:#usn8]->(:usn2{_usn3:`7esn`[9e0..],`6esn`:.e0 Starts With 0 Starts With 0.e0})))).#usn7! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:@usn5)Assert Case When 0X7[1000..{`1esn`}] Then Count(*) Ends With 12.0 Ends With 12 End.@usn6! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:@usn5]->()Assert Exists(Extract(`3esn` In {7} Is Null Where 1.0 Starts With 12e12 Starts With {`5esn`}|$@usn5 Starts With $1000).@usn5!)"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:`5esn`]-()Assert Exists(Any(#usn7 In {``} Is Not Null Where True =~010).`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`6esn`)Assert (@usn6 :``:#usn8)-[usn1?:#usn7{`2esn`:12.e12[0e0..$`1esn`][0X0123456789ABCDEF.._usn3],@usn5:{usn2}[.e0..$999]}]->(:``:#usn8{`4esn`:{`4esn`}[$123456789..][$#usn7..]})<-[?{usn1:Count ( * )[0.12...e1],`6esn`:07 Contains 0X7 Contains $`8esn`}]->(`5esn` {@usn6:`6esn`[..$@usn6],_usn4:{7}[..12e12][..Count ( * )]}).`6esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:#usn8)Assert Single(#usn7 In `2esn`[..$#usn8][..Count(*)] Where 9e1[2.12..{#usn8}]).`8esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`8esn`)Assert [01 Ends With 999 Ends With {`7esn`},#usn8[#usn8..],`5esn` Is Null].usn1! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:_usn3]->()Assert Exists(Case When @usn6[{`5esn`}] Then $_usn4 Contains Null Contains #usn8 When `5esn` Is Null Then 010[#usn7..True] Else {123456789} Contains $#usn8 End.@usn6)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:usn2)Assert Exists({_usn4:`5esn` Is Null}.`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:`6esn`]-()Assert Exists(Allshortestpaths(({`1esn`:`3esn`[{`2esn`}]})-[`3esn`?*{`8esn`:False Is Null Is Null}]->(:#usn7{_usn4:$`8esn` Contains 123456789 Contains $usn2})).usn1?)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`2esn`)Assert Allshortestpaths((_usn4 :usn1)<-[`1esn`?:`4esn`]->(`5esn` :`4esn`)).usn2? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`8esn`:#usn8]-()Assert Exists(Any(`` In `` Is Not Null Is Not Null Where {`7esn`} Is Null).`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:usn1]->()Assert Exists(Reduce(_usn4=1.0 =~7 =~{usn2},usn1 In @usn5 =~{`5esn`} =~`5esn`|$#usn8[9e12..][.e1..]).#usn7?)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`2esn`)Assert Allshortestpaths(((_usn4 )<-[?:`3esn`|:#usn8 *0X0123456789ABCDEF]->(#usn7 :_usn4)-[``?:`3esn`|:#usn8]->(:``:#usn8{`2esn`:{1000}[$999...e12][`7esn`..'s_str'],usn2:01234567 Is Null Is Null}))).`8esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn3:``]-()Assert Exists(Reduce(#usn7=9e12[`6esn`..12.0],`8esn` In $`5esn`[$`4esn`..{@usn6}][07..$@usn6]|{@usn5}[{#usn8}][9e0]).``)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn7:@usn5]-()Assert Exists(Reduce(`3esn`=01234567 Is Null Is Null,#usn7 In {``} Is Not Null|{`5esn`} =~`4esn` =~{_usn4}).`3esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:@usn5]->()Assert Exists({@usn6:$_usn3[..1000]}.`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`4esn`)Assert Reduce(@usn6=7[True..][2.12..],#usn8 In {`5esn`}[.e1..``]|$`3esn` Is Null)._usn4? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:@usn5)Assert Exists(Shortestpath((((:#usn8:#usn8{`2esn`:{`1esn`}[usn1][.e1],_usn4:#usn8 Is Not Null})<-[:usn2|``{`5esn`:$_usn3 Contains 999 Contains \"d_str\",``:$usn1 Ends With $`` Ends With $12}]->(`4esn` {@usn6:{12}[..0X7]})<-[:`6esn`|`5esn` *..010]-(`8esn` :usn2{usn2:$0,`4esn`:#usn8 Is Not Null Is Not Null})))).`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:@usn6)Assert Allshortestpaths((@usn6 :_usn3:_usn3{`7esn`:$`6esn`[123456789..12][True..{`3esn`}],`5esn`:0X0123456789ABCDEF[123456789]})-[{#usn8:$#usn8 =~{@usn5},`8esn`:0X0123456789ABCDEF[{_usn4}..00]}]-(_usn3 :usn2{`5esn`:$_usn4[Count ( * )..],#usn7:7[$`8esn`..123456789][$usn1..$usn1]})<-[`6esn`? *..010]-(`` :`1esn`)).`2esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:usn2]-()Assert Exists(Filter(#usn8 In 7[..999][..{#usn8}] Where 0.12 =~$0 =~$0).usn2)"),
    octest_legacy:ct_string("Create Constraint On(``:#usn8)Assert Reduce(`8esn`=Count ( * ) Contains 07,@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7|\"d_str\"[#usn8]).`5esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:_usn3)Assert `7esn`(Count(*) Ends With 12.0 Ends With 12)._usn4 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`2esn`:_usn3]-()Assert Exists([_usn4 In _usn3 Starts With 12.e12 Starts With 0.12 Where $@usn6 Contains 07|999 Is Not Null Is Not Null].@usn5)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:_usn4)Assert All(`3esn` In {7} Is Null Where 1.0 Starts With 12e12 Starts With {`5esn`}).#usn8? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:usn1)Assert Exists((_usn4 :``:#usn8{#usn7})<-[?:`7esn`{`3esn`:{#usn8}[010]}]-(:`3esn`:@usn5{`2esn`:$_usn4[1.e1]['s_str'],#usn7:$12[True..][{0}..]})<-[`7esn`? *7..12]->(@usn6 :_usn3:_usn3).`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(``:#usn7)Assert `4esn`(0X7[$999][_usn4],#usn8 Is Not Null Is Not Null).`5esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:usn2)Assert [2.12 Contains usn2 Contains True].`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:usn2)Assert [`1esn` In {`6esn`}[..$@usn6][..`7esn`] Where 123.654[$`1esn`]]._usn3! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:#usn8]->()Assert Exists(Any(#usn8 In {`5esn`}[.e1..``] Where {_usn3}[..\"d_str\"][..`5esn`]).usn1!)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:_usn3)Assert {#usn8:`4esn`[``]}.usn2 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:`5esn`)Assert [`8esn` In $`5esn`[$`4esn`..{@usn6}][07..$@usn6] Where {`4esn`} Starts With $usn2 Starts With $1000|123456789 Is Null].usn2? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn6:usn2)Assert Exists(Reduce(`8esn`=$0[$`1esn`..07],`8esn` In 01[2.12..`8esn`]|{12} =~#usn8)._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`5esn`)Assert Exists((:usn2{`3esn`:0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF]})<-[ *..999{@usn5:`` Is Not Null Is Not Null,_usn3:{`3esn`} Is Not Null Is Not Null}]->(`7esn` {usn2:`2esn`[..$#usn8][..Count(*)]})-[@usn6?$0]-(:_usn4{`6esn`:$usn1 In {999} In $#usn7,_usn4:#usn7}).usn2!)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:_usn4)Assert [#usn7 In {``} Is Not Null Where usn1[9e12..][$7..]].`1esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`8esn`:`4esn`]-()Assert Exists(Reduce(`3esn`=12.0[123.654][Count(*)],`1esn` In `8esn`[`4esn`..{#usn8}][$12..2.12]|`1esn` =~\"d_str\").usn1?)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`1esn`)Assert Exists(Reduce(usn1=01 Contains {`8esn`} Contains 2.12,`5esn` In $999[0.0..]|0x0[`4esn`..'s_str'])._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:`8esn`]-()Assert Exists(Any(@usn5 In 0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF] Where 01[2.12..`8esn`])._usn4)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`1esn`:`6esn`]-()Assert Exists(Reduce(`4esn`=$`3esn`[..$123456789][..$`1esn`],@usn5 In 0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF]|$#usn8[$`8esn`..{`8esn`}]).`7esn`)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:_usn3)Assert None(_usn4 In _usn3 Starts With 12.e12 Starts With 0.12 Where 9e0[{0}..{`3esn`}][\"d_str\"..0Xa]).`8esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:#usn8)Assert Exists(Reduce(usn1=01 Contains {`8esn`} Contains 2.12,`5esn` In $999[0.0..]|0x0[`4esn`..'s_str']).`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:usn2)Assert Exists(Shortestpath((`6esn` {usn2:$1000 =~$`2esn`,`4esn`:{``}[010..][0xabc..]})<-[`5esn`?{`8esn`:{7} In `2esn`,`4esn`:12.e12[7..$`6esn`]}]-(`3esn` :`6esn`)).`8esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`2esn`)Assert Exists((_usn3 {`3esn`:False Is Null Is Null,`8esn`:2.12})<-[:`5esn`{usn2:123.654[{7}..]}]->(@usn6 :`3esn`:@usn5)<-[? *..999]-(#usn8 :`5esn`{#usn8:0xabc[.e0]}).`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`7esn`)Assert Exists(Filter(usn1 In @usn5 =~{`5esn`} =~`5esn` Where $`1esn`[1.0..][_usn3..]).`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:#usn8]->()Assert Exists(Reduce(#usn8={0}[01][`7esn`],@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7|2.12 =~False).#usn7)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:_usn4)Assert Exists(Case When .e12 Ends With _usn4 Then True[..$`6esn`] When 123.654[0e0..$``][$`1esn`..$`8esn`] Then {`1esn`}[usn1][.e1] Else {#usn7} Is Not Null Is Not Null End.`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn4:`4esn`]-()Assert Exists((@usn6 :`1esn`{#usn8:`4esn`[1.0],``:.e12[@usn5..#usn7][010..{usn1}]})<-[_usn4?:_usn4|:usn2 *00]->(`` :`5esn`)._usn3)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:`7esn`]->()Assert Exists(Case $`4esn`[..$`3esn`][..0.0] When 1.0 =~7 =~{usn2} Then #usn8 End.`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`8esn`:`4esn`]-()Assert Exists(Allshortestpaths((:`4esn`{`5esn`})<-[@usn6?:`5esn`]->(@usn6 {`5esn`:`3esn`[`3esn`..][#usn8..],``:$0[..9e1]})-[`6esn`]->(:`8esn`:`7esn`{usn1:$`3esn` In $_usn4 In {_usn3}})).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`2esn`)Assert Exists(Allshortestpaths(((:#usn7{usn2:{`1esn`}[usn1][.e1],#usn8:$`5esn`[..$`5esn`][..$12]})<-[?*..$#usn8]-({`8esn`:`3esn`[{0}][usn1]}))).`3esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[``:usn1]-()Assert Exists(Case {999} Is Null Is Null When 12.0 =~1.0 =~9e12 Then $usn1 In {999} In $#usn7 Else `1esn` Ends With {_usn3} Ends With `2esn` End.usn2)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`6esn`)Assert {_usn4:12e12[$`3esn`],_usn3:usn2 Is Null}.`3esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:`3esn`]-()Assert Exists(Single(_usn3 In {`3esn`}[`2esn`] Where `3esn`[`3esn`..][#usn8..]).`8esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:#usn8)Assert Exists((`7esn` {`4esn`:0.e0 Ends With $#usn7 Ends With $7,`2esn`:0x0 =~$usn2})<-[`6esn`? *..0x0{_usn4:$_usn3 In {1000} In 0.12,#usn7:{`7esn`}[..{`4esn`}]}]-(:#usn8:#usn8{`2esn`:$_usn4 Contains Null Contains #usn8,`6esn`:$`5esn`[$`4esn`..{@usn6}][07..$@usn6]})._usn4)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:@usn6)Assert Exists(Reduce(#usn8=123.654[$`1esn`],#usn8 In {`5esn`}[.e1..``]|{`5esn`} Starts With $`5esn` Starts With .e1).`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:_usn4)Assert All(`3esn` In {7} Is Null Where 1.0 Starts With 12e12 Starts With {`5esn`}).#usn8? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`4esn`)Assert [`4esn` In $`3esn` Is Not Null Where `7esn`[..2.12][..{usn1}]|#usn7 Contains _usn3 Contains {`3esn`}]._usn4! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`3esn`)Assert Exists([#usn7 In {``} Is Not Null Where @usn5 In {`7esn`} In `2esn`].#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:#usn8]->()Assert Exists(Extract(`5esn` In \"d_str\" Is Null Is Null Where #usn8|$0[$`1esn`..07]).#usn7)"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:_usn3]-()Assert Exists(Shortestpath(((`5esn` :`2esn`:usn1)<-[@usn5{`1esn`:{`8esn`} Ends With `6esn`}]->(_usn3 :`7esn`:_usn3))).usn2?)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`2esn`)Assert Exists((`6esn` :@usn6:#usn8)-[`1esn`?:`8esn`]->(`4esn` :`7esn`:_usn3{`6esn`:{123456789}[0xabc..],usn2:{_usn4}[...e1][..$7]})._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`3esn`)Assert Case `4esn`[1.0] When $`4esn`[9e12..123.654] Then $`4esn` In Null In 0xabc End.``? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`5esn`)Assert Exists(`4esn`().`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:#usn8)Assert Exists(Shortestpath((`4esn` {`6esn`:`1esn` =~\"d_str\",#usn8:{`4esn`} =~9e0 =~{12}})).`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`4esn`)Assert count($1000 Is Null,0Xa[$123456789..123.654][.e12..0.e0]).`8esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:_usn4)Assert Exists([@usn5 In 0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF] Where 01[2.12..`8esn`]|$`2esn`[2.12..'s_str'][{@usn6}.._usn4]]._usn3)"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:_usn3]->()Assert Exists([1.0[0X0123456789ABCDEF]].@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn8:@usn6]-()Assert Exists([`5esn` In $999[0.0..] Where {_usn3}[..\"d_str\"]|Count(*) Is Null Is Null]._usn3)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:usn2)Assert [$`5esn` Starts With $0 Starts With {0},0x0[`4esn`..'s_str'],$usn2[9e0]].#usn8! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:_usn3)Assert Exists(Extract(`3esn` In {7} Is Null Where 0.e0[123.654][01]|12e12 Is Not Null Is Not Null).#usn7)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:`2esn`]-()Assert Exists(Case `5esn` Starts With $`2esn` Starts With $1000 When 123.654 =~$usn2 =~{999} Then Count ( * ) Contains `8esn` Contains .e1 End.usn2?)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:usn1)Assert None(usn1 In @usn5 =~{`5esn`} =~`5esn` Where 9e1 Is Not Null).`5esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:usn1)Assert Extract(`` In `` Is Not Null Is Not Null Where `4esn`[..Count ( * )][..{#usn7}]|00[`2esn`..12][123456789..0.e0]).usn2? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`1esn`)Assert Exists(Single(`8esn` In $`5esn`[$`4esn`..{@usn6}][07..$@usn6] Where 01[{@usn5}])._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`3esn`)Assert {_usn3:{7}[..1.0][..9e0],`8esn`:{123456789} Is Not Null}.usn2 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`1esn`)Assert Exists(Reduce(`8esn`={`2esn`} Is Not Null Is Not Null,usn1 In @usn5 =~{`5esn`} =~`5esn`|{usn1} Ends With $0).`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:`2esn`]->()Assert Exists(Reduce(`6esn`=$`4esn`[9e12..123.654],`8esn` In 01[2.12..`8esn`]|$0[$`1esn`..07]).@usn5!)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`4esn`)Assert Exists(Reduce(`8esn`={`2esn`} Is Not Null Is Not Null,usn1 In @usn5 =~{`5esn`} =~`5esn`|{usn1} Ends With $0).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(``:``)Assert {`3esn`:$usn1 Ends With $`` Ends With $12,_usn4:12.e12[..Null][..$#usn8]}.`3esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`6esn`)Assert Exists({`1esn`:\"d_str\" Starts With 01}.`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn6:`2esn`]-()Assert Exists({`6esn`:0.e0 Ends With $#usn7 Ends With $7}.`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:usn2]->()Assert Exists(_usn3(Distinct).#usn8)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:#usn8]->()Assert Exists((:`3esn`:@usn5{#usn8:_usn4 Is Null Is Null})<-[`4esn`:`2esn` *1000..00{#usn8:1.0[0e0..0.e0]}]->({@usn5:0.12[$`3esn`..$_usn3][12.0..usn1]})-[ *..999{usn1:\"d_str\" Starts With $123456789,``:Count ( * ) Contains 07}]->(@usn5 {_usn3:`1esn` Contains {usn2} Contains $#usn8}).`6esn`)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:#usn7)Assert `7esn`(Distinct $`6esn`[123456789..12][True..{`3esn`}],7 =~{`8esn`} =~$`6esn`).#usn7 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`5esn`)Assert [`5esn` In \"d_str\" Is Null Is Null Where {0}]._usn4? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`2esn`)Assert [`4esn` In $`3esn` Is Not Null Where 01[2.12..`8esn`]|{`7esn`}[..$@usn5][..$#usn8]].`5esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`7esn`)Assert {`3esn`:\"d_str\" Is Null Is Null,usn1:0X0123456789ABCDEF[123456789]}.`5esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:`3esn`]-()Assert Exists({@usn5:$`3esn` Is Not Null}.`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`4esn`)Assert Exists(Shortestpath(((({#usn7:0Xa =~Null =~$``,`6esn`:$7[{usn2}..][{usn2}..]})<-[:usn2|``{`5esn`:$_usn3 Contains 999 Contains \"d_str\",``:$usn1 Ends With $`` Ends With $12}]->(`` :_usn3:_usn3{_usn4:{`4esn`} =~9e0 =~{12},#usn8:0[{usn2}..][$`6esn`..]})-[`4esn`]->(:`6esn`$123456789)))).usn2!)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:usn2)Assert None(`1esn` In `8esn`[`4esn`..{#usn8}][$12..2.12] Where $@usn5 =~1000 =~1000).`5esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`4esn`)Assert Exists(None(`4esn` In $`3esn` Is Not Null Where `2esn`[..$#usn8][..Count(*)]).`3esn`)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:@usn6)Assert Allshortestpaths(((@usn6 {_usn3:Null Ends With {`5esn`} Ends With 0.e0,@usn5:$`7esn` =~{`8esn`} =~$usn1})<-[? *..12{#usn8:`5esn` Is Null,#usn8:`1esn`[{usn1}..``][7..$#usn8]}]-(`2esn` :#usn7{`2esn`:$`5esn`[..$`5esn`][..$12]}))).`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`4esn`)Assert Exists(Filter(@usn5 In 0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF] Where {_usn4} In {12} In $0).usn2?)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`5esn`)Assert Exists(({#usn8:$`8esn`[1000..0Xa],#usn7:12.0})<-[ *..999{@usn5:`` Is Not Null Is Not Null,_usn3:{`3esn`} Is Not Null Is Not Null}]-(:@usn5{usn2:{``} Starts With $`2esn` Starts With `1esn`,`3esn`:$`5esn` In $`` In 123.654}).@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:@usn5]-()Assert Exists(Single(@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7 Where ``[$`2esn`]).`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:usn1]-()Assert Exists(Extract(`` In 123456789 Ends With 12.e12 Ends With $`7esn` Where 0X7[{@usn6}]|07[..True][..9e12]).`8esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:``)Assert Exists(Filter(`8esn` In $`5esn`[$`4esn`..{@usn6}][07..$@usn6] Where 's_str' Ends With 7 Ends With {_usn4}).`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[``:`2esn`]->()Assert Exists(Shortestpath((@usn6 :#usn7{_usn3:{_usn4} Is Not Null Is Not Null})-[usn1:_usn4|:usn2 *..010{``:2.12 Is Not Null Is Not Null}]->(_usn3 {#usn8:_usn4 Is Null Is Null})).usn2?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`2esn`:`2esn`]->()Assert Exists(Single(@usn5 In 0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF] Where Null[``]).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`3esn`)Assert Exists([{12} Contains {123456789} Contains `4esn`,1.e1[`8esn`][00],1.0[$`1esn`..][$123456789..]].usn1?)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`3esn`)Assert Allshortestpaths((({_usn3:.e12[@usn5..$12]})-[`7esn` *0X0123456789ABCDEF]->({#usn8:$`8esn`[1000..0Xa],#usn7:12.0}))).usn1 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`8esn`)Assert Single(_usn4 In _usn3 Starts With 12.e12 Starts With 0.12 Where {`4esn`} =~{7} =~{`7esn`}).`` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`7esn`)Assert Exists(Extract(`8esn` In 01[2.12..`8esn`] Where Count ( * ) Ends With $@usn5|Count ( * )[True..][{#usn7}..]).`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:``)Assert (#usn8 :`4esn`{`8esn`:Count ( * ) Ends With 12.0,`7esn`:$`3esn` In $_usn4 In {_usn3}})<-[? *1000..00]->(`4esn` {_usn3:Count ( * )[True..][{#usn7}..],_usn4:$`7esn`['s_str']}).`8esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:_usn3]-()Assert Exists([_usn4 In _usn3 Starts With 12.e12 Starts With 0.12 Where $`6esn` Is Null|@usn6 Is Null Is Null].`6esn`)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:_usn3)Assert [`5esn` In $999[0.0..] Where $`3esn`[..$123456789][..$`1esn`]|7[..999][..{#usn8}]]._usn4? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`5esn`)Assert Exists(Single(@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7 Where Count ( * )[True..][{#usn7}..])._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:@usn5)Assert Filter(`` In 123456789 Ends With 12.e12 Ends With $`7esn` Where {``} Starts With $`2esn` Starts With `1esn`).`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn7:@usn5]-()Assert Exists(Any(`2esn` In `1esn` =~\"d_str\" Where $`4esn` In Null In 0xabc)._usn3?)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`3esn`)Assert Case #usn8[..{#usn7}] When $@usn5 Starts With $1000 Then 0e0 In @usn5 Else $#usn7 Contains 0x0 Contains 1000 End.usn2 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:@usn6)Assert Exists(Filter(`` In `` Is Not Null Is Not Null Where 9e1[1000][{123456789}]).`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`1esn`)Assert Exists(Shortestpath((#usn8 {#usn7:`4esn` Ends With 07 Ends With {`3esn`},`3esn`:{0} In $_usn3})<-[:`4esn` *..010{`1esn`:1.0 In Count(*),`4esn`:{`1esn`}[12.0..`2esn`][@usn6..{usn1}]}]->(`8esn` {#usn8:010 In Count(*),`4esn`:12.e12[9e12..{`6esn`}]})).#usn7)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`5esn`)Assert [{1000} =~0 =~123.654,\"d_str\" Starts With $123456789,$`2esn`[2.12..'s_str'][{@usn6}.._usn4]].`4esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:``]-()Assert Exists({`4esn`:12e12 Ends With {usn1}}._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`5esn`)Assert ({`1esn`:$`8esn`[1000..0Xa]})-[:`8esn` *0..{_usn3:`4esn` Ends With 07 Ends With {`3esn`}}]->({`8esn`:`3esn`[`3esn`..][#usn8..],`5esn`:{12} Is Not Null}).`8esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn1:@usn6]-()Assert Exists(Shortestpath((((`8esn` :#usn8:#usn8{_usn4:`8esn`[`4esn`..{#usn8}][$12..2.12]})-[#usn8]-(`6esn` :#usn7)<-[:#usn7 *..010]-(@usn6 :@usn5{usn2:$`5esn`[..$`5esn`][..$12]})))).@usn5!)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`8esn`)Assert $`7esn`.`8esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:``)Assert Exists(Any(`5esn` In $999[0.0..] Where {1000}[$`4esn`][\"d_str\"]).@usn6)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:_usn4)Assert Exists(Filter(#usn8 In 7[..999][..{#usn8}] Where 2.12['s_str'..$12][{`1esn`}..`2esn`]).@usn5)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`4esn`:@usn5]-()Assert Exists([$@usn5[..12e12][..$123456789]].`3esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:#usn7)Assert [{`2esn`} Starts With 0.0 Starts With {usn1}].usn1! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn5:@usn6]->()Assert Exists(Reduce(`5esn`=$123456789 Starts With 9e0 Starts With 's_str',`` In 123456789 Ends With 12.e12 Ends With $`7esn`|False =~$7 =~2.12).`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn2:`4esn`]-()Assert Exists({#usn7:{`4esn`} =~9e0 =~{12},#usn7:True[07..$usn2][$7..{usn1}]}.#usn8!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`4esn`)Assert (:`6esn`{`2esn`:$#usn7[..{`5esn`}][..9e12],`8esn`:{1000}[{_usn3}..]})<-[`1esn`:_usn4|:usn2]->(`` :`3esn`:@usn5{`8esn`:`4esn` Is Not Null Is Not Null,`2esn`:2.12 Ends With $_usn3 Ends With `3esn`}).@usn6! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:#usn7)Assert Reduce(usn1=Count ( * ) Ends With 12.0,`3esn` In {7} Is Null|$999).`3esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:usn1)Assert [$@usn5 Starts With $1000,0x0 Is Null,`1esn`[{usn1}..``][7..$#usn8]]._usn3 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`2esn`)Assert Filter(_usn3 In {`3esn`}[`2esn`] Where 0e0[07]).@usn6 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:``)Assert Exists([`7esn`[$0][9e12],$`7esn`['s_str']].`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On(``:@usn5)Assert Exists(None(`` In 123456789 Ends With 12.e12 Ends With $`7esn` Where {#usn8}[.._usn4][..$`3esn`])._usn4!)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`6esn`)Assert Exists((:`7esn`:_usn3)<-[`6esn`?:`4esn` *..01]->(`3esn` :#usn7{usn2:12.0 =~999 =~$_usn3,@usn6:{usn2}[$`3esn`..][{#usn7}..]})<-[:`7esn` *1000..00{@usn6:$#usn8[$`8esn`..{`8esn`}],``:0Xa[usn2..]}]-(`1esn` :`5esn`{`5esn`:{``} Is Null}).`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:@usn6)Assert Reduce(`4esn`={7}[$``][{@usn6}],usn1 In @usn5 =~{`5esn`} =~`5esn`|0.e0[123.654][01]).`4esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:_usn4)Assert Shortestpath(((:usn2{#usn8:$`5esn` In $`6esn`})-[:`8esn`*]->(`5esn` {@usn6:`6esn`[..$@usn6],_usn4:{7}[..12e12][..Count ( * )]})<-[ *0X7..]-(`4esn` {_usn3:Count ( * )[True..][{#usn7}..],_usn4:$`7esn`['s_str']}))).@usn6 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:#usn7)Assert Exists([`4esn` In $`3esn` Is Not Null Where @usn5 =~{`5esn`} =~`5esn`|#usn8].@usn5?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`1esn`:`3esn`]-()Assert Exists(All(#usn7 In {``} Is Not Null Where {`6esn`} =~$999).`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:``)Assert Exists(Single(`` In 123456789 Ends With 12.e12 Ends With $`7esn` Where {#usn8}[.._usn4][..$`3esn`]).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(``:`8esn`)Assert Exists(Single(#usn8 In {`5esn`}[.e1..``] Where {`1esn`}[12.0..`2esn`][@usn6..{usn1}]).``!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`8esn`)Assert Exists(({`7esn`:7[{0}..{_usn4}]})-[`` *..12]->(:`6esn`{@usn6:$0[``][{@usn6}],@usn6:0e0 In @usn5})-[:`2esn`*..{`1esn`}]-(usn2 :`5esn`{`7esn`:01234567 Is Null Is Null})._usn3?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:#usn8)Assert Exists(`8esn`(00 Starts With 0xabc,{12} Is Not Null).`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:#usn7]->()Assert Exists([`` In `` Is Not Null Is Not Null|@usn6 Starts With `6esn` Starts With $`1esn`]._usn3)"),
    octest_legacy:ct_string("Create Constraint On()<-[`2esn`:`7esn`]-()Assert Exists(All(`2esn` In `1esn` =~\"d_str\" Where 0.12 In _usn3 In {0}).``!)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`7esn`)Assert Extract(`2esn` In `1esn` =~\"d_str\" Where `` Ends With 123456789 Ends With 123.654|#usn7 =~Count ( * ) =~``).`2esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:``]->()Assert Exists(`4esn`(Distinct $_usn3['s_str'][07],{12}[..0X7]).`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:``)Assert Exists(Allshortestpaths((:@usn6:#usn8{`3esn`:{@usn6}[{#usn7}..$#usn8][$_usn4..12.e12],`2esn`:False Contains {`6esn`}})-[_usn3{@usn5:123.654[...e0],`8esn`:07 =~01}]-(_usn4 :usn1)).`2esn`)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:#usn8)Assert Exists([01 =~{_usn3} =~`3esn`,9e1[2.12..{#usn8}],{usn2}[.e0..$999]].`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(usn1:_usn3)Assert (:`3esn`:@usn5)-[?:`5esn`{`4esn`:{`4esn`}[$123456789..][$#usn7..]}]-(:`5esn`{@usn6:2.12['s_str'..$12][{`1esn`}..`2esn`],``:`8esn`[`4esn`..{#usn8}][$12..2.12]}).`8esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:@usn6)Assert Exists(Filter(#usn8 In 7[..999][..{#usn8}] Where $@usn5 Starts With {0} Starts With 12).usn2?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`7esn`:`2esn`]-()Assert Exists({`8esn`:{_usn4} Ends With `6esn`,``:{1000}[{_usn3}..]}.#usn7?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:usn1)Assert Allshortestpaths((({#usn8:1.0 Is Null Is Null,`4esn`:{usn2}[.e0..$999]})-[`6esn`?]->({@usn6:$usn1 Ends With $`` Ends With $12}))).``! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`8esn`:`1esn`]-()Assert Exists([`` In 123456789 Ends With 12.e12 Ends With $`7esn` Where $`8esn`[1000..0Xa]|usn1 Is Not Null].usn1)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:usn2)Assert Filter(`5esn` In \"d_str\" Is Null Is Null).@usn6! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:@usn6]->()Assert Exists(None(_usn4 In _usn3 Starts With 12.e12 Starts With 0.12 Where `6esn` In 0Xa).``?)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`2esn`)Assert Reduce(`4esn`=$usn1 In {999} In $#usn7,`8esn` In 01[2.12..`8esn`]|usn2 Is Not Null Is Not Null).`5esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn7:_usn3]-()Assert Exists(Allshortestpaths((:@usn5{_usn3:07 =~01}))._usn4)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:#usn8)Assert Exists([12.e12 Starts With {999} Starts With {`1esn`}].`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:@usn6)Assert Exists({#usn8:{`7esn`} Starts With $123456789 Starts With $@usn6}.@usn6)"),
    octest_legacy:ct_string("Create Constraint On()-[``:`2esn`]-()Assert Exists(#usn7(0.e0 Starts With `2esn`).`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`4esn`)Assert (:`6esn`{`2esn`:$#usn7[..{`5esn`}][..9e12],`8esn`:{1000}[{_usn3}..]})<-[`1esn`:_usn4|:usn2]->(`` :`3esn`:@usn5{`8esn`:`4esn` Is Not Null Is Not Null,`2esn`:2.12 Ends With $_usn3 Ends With `3esn`}).@usn6! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`6esn`)Assert Exists([`3esn` In {7} Is Null Where usn1 Is Null Is Null].`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:_usn4)Assert All(#usn7 In {``} Is Not Null Where @usn5 In {`7esn`} In `2esn`).`5esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn6:_usn4)Assert Exists(Case When $`7esn` =~{`8esn`} =~$usn1 Then $`4esn`[9e12..123.654] When $#usn7 Is Null Then Count(*) Is Null Is Null End.#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:@usn6)Assert Exists(Single(`4esn` In $`3esn` Is Not Null Where {`6esn`}).#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`3esn`)Assert Exists({`6esn`:$usn1 Ends With $`` Ends With $12}._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`1esn`)Assert Exists(`4esn`(Distinct $_usn3['s_str'][07],{12}[..0X7])._usn4)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:#usn7)Assert Any(`3esn` In {7} Is Null Where usn1 Is Null Is Null).`4esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:usn2)Assert Exists(None(`1esn` In `8esn`[`4esn`..{#usn8}][$12..2.12] Where 0Xa[2.12])._usn3)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`4esn`)Assert Exists([@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7 Where 1.0 Contains $_usn4].`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:@usn6]->()Assert Exists(Reduce(`7esn`=$#usn8[$`2esn`..][{`2esn`}..],#usn7 In `2esn`[..$#usn8][..Count(*)]|$123456789 Ends With {`1esn`} Ends With $`4esn`).`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn2:@usn6]-()Assert Exists([#usn7 In {``} Is Not Null Where 123456789[0xabc..'s_str'][``..`1esn`]|{`1esn`}[12.0..`2esn`][@usn6..{usn1}]].`3esn`)"),
    octest_legacy:ct_string("Create Constraint On(usn1:usn2)Assert Exists(Shortestpath(({`7esn`:{999}})<-[:`3esn`|:#usn8{@usn5:{#usn8} Is Not Null}]->(`` :_usn3:_usn3{_usn4:{`4esn`} =~9e0 =~{12},#usn8:0[{usn2}..][$`6esn`..]})-[`2esn`:usn1|@usn6{_usn3:{`4esn`} Ends With {123456789} Ends With $`4esn`,``:9e1 In $`3esn` In $@usn6}]->(_usn3 :usn1{`6esn`:$usn1 Ends With $`` Ends With $12})).``!)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:`4esn`]->()Assert Exists(Allshortestpaths(((usn2 :`4esn`)-[_usn3:#usn8|`1esn`{_usn4:`4esn` Ends With 07 Ends With {`3esn`},usn2:$0[$`1esn`..07]}]->(@usn6 :`1esn`{_usn4:#usn7 =~Count ( * ) =~``,`6esn`:#usn8[#usn8..]})-[:`5esn` *0..{_usn4:7[$`2esn`..{`5esn`}]}]->())).`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:_usn3)Assert {`6esn`:01 Is Null,`7esn`:True In 0e0}.`1esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`5esn`)Assert Exists(usn1(0e0 =~`6esn` =~123456789,$#usn8[$`2esn`..][{`2esn`}..]).`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`2esn`)Assert Exists(Reduce(usn2=0.e0 In $#usn7 In $_usn3,`3esn` In {7} Is Null|{12} Is Null Is Null).`7esn`)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:``)Assert Exists(Reduce(`5esn`=usn1 Is Not Null,@usn5 In 0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF]|7 Is Not Null Is Not Null).`3esn`)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`7esn`)Assert Exists([$`5esn` Starts With $0 Starts With {0},0x0[`4esn`..'s_str'],$usn2[9e0]].#usn8!)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:_usn3)Assert Reduce(#usn7=$@usn5[..12e12][..$123456789],_usn4 In _usn3 Starts With 12.e12 Starts With 0.12|{``} Is Not Null).`1esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:`1esn`]-()Assert Exists(Allshortestpaths((`1esn` :_usn3:_usn3)<-[usn2:_usn3|_usn3{usn2:123456789[#usn8..False],usn1:{`5esn`} Contains $0 Contains {``}}]->(`3esn` :_usn3:_usn3{@usn5:False})-[#usn8? *..07$_usn4]->({#usn8:'s_str'[00][{`5esn`}],`6esn`:9e1[$usn2]})).``)"),
    octest_legacy:ct_string("Create Constraint On()<-[`8esn`:#usn8]-()Assert Exists(None(`3esn` In {7} Is Null Where {123456789} Contains $#usn8)._usn3)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:usn1)Assert Extract(`1esn` In `8esn`[`4esn`..{#usn8}][$12..2.12] Where {@usn5} Is Null Is Null|01[2.12..`8esn`])._usn3! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`4esn`)Assert Exists(Single(@usn5 In 0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF] Where Null[``]).`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:_usn4]->()Assert Exists(Case `4esn`[1.0] When $`4esn`[9e12..123.654] Then $`4esn` In Null In 0xabc End.`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`6esn`)Assert Exists(({`8esn`:12 Ends With 0x0 Ends With 0.e0,usn1:#usn7 Contains _usn3 Contains {`3esn`}})-[:#usn7 *..010]->(:`1esn`{})-[_usn3? *7..12{`2esn`:Count ( * ) Contains {`1esn`} Contains 07,#usn7:`7esn`[..2.12][..00]}]->(usn2 {@usn5:`2esn` Starts With $_usn4,`5esn`:\"d_str\" Starts With 01}).`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[``:usn2]-()Assert Exists(Extract(`8esn` In $`5esn`[$`4esn`..{@usn6}][07..$@usn6] Where {@usn6}[7]|$_usn3[.e0..$usn2]).#usn7)"),
    octest_legacy:ct_string("Create Constraint On(usn1:#usn8)Assert Extract(#usn7 In `2esn`[..$#usn8][..Count(*)] Where usn1[9e12..][$7..]).usn2? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`4esn`)Assert Exists(``(Distinct $_usn3 Contains 999 Contains \"d_str\").``?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`2esn`:_usn3]-()Assert Exists(None(@usn5 In 0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF] Where {7} In `2esn`).``?)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:@usn6]->()Assert Exists(Any(`8esn` In $`5esn`[$`4esn`..{@usn6}][07..$@usn6] Where {`6esn`}).``?)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`4esn`)Assert Reduce(`4esn`=$_usn4 Ends With usn1 Ends With $0,@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7|.e12 Is Not Null Is Not Null).usn1? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:usn2]-()Assert Exists(`1esn`($1000[999],True In 0e0).`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:usn1)Assert {`5esn`:$123456789 In 0X0123456789ABCDEF In 0.e0,``:$1000[0Xa][{#usn7}]}.`7esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:``)Assert Exists(Reduce(`2esn`=.e1[{`7esn`}..{_usn4}],#usn7 In `2esn`[..$#usn8][..Count(*)]|usn1 In 7 In {123456789}).`1esn`)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:``)Assert (#usn7 {@usn6:1.0[0e0..0.e0],`5esn`:9e1 In $`3esn` In $@usn6})<-[usn2:`2esn` *..01{`6esn`:{#usn7}[..9e12][..`8esn`]}]->(`4esn` )-[`7esn`*]->(:#usn7{@usn5:{12} =~#usn8}).`8esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:`3esn`]-()Assert Exists(Case When 1.0 Starts With 12e12 Starts With {`5esn`} Then {0}[{`8esn`}..`4esn`] When usn2[{7}] Then $`4esn`[`7esn`] Else 9e1 In $`3esn` In $@usn6 End.@usn5!)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:@usn5)Assert (:#usn8:#usn8)<-[? *0X7..{#usn8:{1000} Is Null Is Null,`3esn`:0.e0 Starts With 12.e12 Starts With {_usn4}}]->(`6esn` :_usn3:_usn3{``:$usn1 Ends With $`` Ends With $12}).usn2! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:@usn6)Assert Shortestpath((((`8esn` :@usn5{usn2:{999} Is Null Is Null,`2esn`:`3esn`[{usn1}]})<-[`8esn`?{`2esn`:Count ( * ) Contains {`1esn`} Contains 07,#usn7:`7esn`[..2.12][..00]}]->(`7esn` {usn2:`2esn`[..$#usn8][..Count(*)]})-[usn1:_usn3|_usn3 *..999{`2esn`:'s_str'[00][{`5esn`}],@usn6:999 Is Not Null Is Not Null}]-(:`5esn`{@usn6:2.12['s_str'..$12][{`1esn`}..`2esn`],``:`8esn`[`4esn`..{#usn8}][$12..2.12]})))).`1esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`1esn`)Assert Exists(Filter(#usn7 In {``} Is Not Null Where Count ( * ) =~$usn2 =~$usn2).usn1)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`3esn`)Assert Exists(usn2(Distinct `5esn` Is Null,#usn8 Is Not Null Is Not Null).``)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:``)Assert Allshortestpaths((`2esn` :`8esn`:`7esn`)-[`6esn`]->(:`8esn`:`7esn`{usn1:$`3esn` In $_usn4 In {_usn3}})-[`2esn`?:@usn6|`6esn` *0xabc..{`5esn`:`6esn`[12..$usn2][{#usn8}..{usn2}],@usn5:$`2esn` Is Null Is Null}]-(`8esn` {#usn8:010 In Count(*),`4esn`:12.e12[9e12..{`6esn`}]})).`8esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn4:usn2)Assert Case When $#usn8 Ends With $`2esn` Ends With $@usn6 Then $@usn5[010..$#usn8][12..$`4esn`] When $12 Ends With 07 Ends With $123456789 Then $`4esn`[`7esn`] Else {`3esn`}[`2esn`] End.usn1! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:`4esn`]-()Assert Exists(({@usn6:$0[``][{@usn6}],@usn6:0e0 In @usn5})<-[`6esn`?:`4esn` *..01]-({`7esn`:{999}}).`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:`3esn`]->()Assert Exists({_usn4:00 Starts With 0xabc}.`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`3esn`)Assert Exists((`7esn` :`8esn`:`7esn`)-[?:`2esn` *00]->(`8esn` :`4esn`{@usn6:1.0[$`1esn`..][$123456789..]}).`7esn`)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`1esn`)Assert Extract(@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7 Where Count ( * )[True..][{#usn7}..]|0xabc[01..{999}][{7}..{`7esn`}])._usn3! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:_usn3)Assert Exists(`5esn`(@usn6 Contains Null Contains $`7esn`).@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`1esn`)Assert Exists({_usn3:{#usn7} Is Not Null Is Not Null}.`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:#usn7]-()Assert Exists(All(`8esn` In $`5esn`[$`4esn`..{@usn6}][07..$@usn6] Where 's_str' Ends With 7 Ends With {_usn4})._usn4!)"),
    octest_legacy:ct_string("Create Constraint On()<-[`5esn`:@usn5]-()Assert Exists({`3esn`:{0}[01][`7esn`],`8esn`:2.12 Is Null}.usn2)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:_usn3)Assert Exists((`` :`2esn`:usn1{`2esn`:$7 Is Not Null Is Not Null,`1esn`:`1esn` =~\"d_str\"})<-[usn2?:`5esn`{`8esn`:{_usn4}[1000..{@usn5}],_usn3:12e12 Ends With {usn1}}]-(usn2 {_usn3:{123456789}[0X0123456789ABCDEF..07][{`1esn`}.._usn4],`1esn`:7[$`8esn`..123456789][$usn1..$usn1]})<-[ *..12]->(`3esn` :@usn5{`8esn`:$`8esn` =~{1000}}).`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:@usn6]->()Assert Exists((usn1 {`7esn`:{999}})<-[?:`3esn`|:#usn8 *0X0123456789ABCDEF]->(#usn7 :_usn4).#usn7!)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:usn2]->()Assert Exists(Reduce(usn1=$12 Is Null Is Null,usn1 In @usn5 =~{`5esn`} =~`5esn`|Count ( * ) Contains {`1esn`} Contains 07).`4esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:#usn8]-()Assert Exists(Extract(`3esn` In {7} Is Null Where 0.e0[123.654][01]|{@usn5}[{#usn8}][9e0]).@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:`6esn`]-()Assert Exists((#usn7 :``:#usn8{`2esn`})-[`2esn`?{_usn3:$_usn4[Count ( * )..],#usn7:{`3esn`}[..07][..{`5esn`}]}]-({_usn4:$`1esn`[{`2esn`}..],_usn4:$_usn3['s_str'][07]}).`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn1:#usn7]-()Assert Exists(Allshortestpaths((((usn2 :#usn8:#usn8)-[`2esn`?:`7esn` *..07$0]-(`4esn` )-[:`2esn`*..{`1esn`}]-(`` {@usn6:1.0[$`1esn`..][$123456789..]})))).`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn2:`6esn`]-()Assert Exists(Extract(#usn7 In {``} Is Not Null Where `8esn`[{123456789}..]).`3esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn6:`7esn`]-()Assert Exists(Extract(_usn4 In _usn3 Starts With 12.e12 Starts With 0.12 Where {_usn4}[...e1][..$7]|$1000[999]).#usn7)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:@usn5)Assert Reduce(`5esn`=07[..True][..9e12],#usn8 In {`5esn`}[.e1..``]|@usn5 =~{`5esn`} =~`5esn`).`1esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:usn2)Assert Exists(Filter(`4esn` In $`3esn` Is Not Null Where 12.0 =~999 =~$_usn3).`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:`5esn`]->()Assert Exists(Case usn1 Ends With $@usn6 Ends With `3esn` When $`7esn`['s_str'] Then 0X0123456789ABCDEF =~1e1 =~{`4esn`} When Null Ends With `2esn` Ends With $usn1 Then {#usn7}[9e1..][{123456789}..] Else {_usn3}[12.e12] End.`6esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:`3esn`]->()Assert Exists([$_usn4 Contains Null Contains #usn8,usn2 Is Null,$`8esn`].@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`6esn`)Assert Exists(({@usn6:$0[``][{@usn6}],@usn6:0e0 In @usn5})-[:#usn8|`1esn` *..01{``:$@usn6 Ends With $_usn4 Ends With 0.12,`6esn`:$`8esn`[..{`2esn`}]}]->(`1esn` {@usn6:$#usn8[$`8esn`..{`8esn`}],``:0Xa[usn2..]})-[usn1?]->(:usn2{_usn3:`7esn`[9e0..],`6esn`:.e0 Starts With 0 Starts With 0.e0}).@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:#usn7]->()Assert Exists(Case When 0X7[1000..{`1esn`}] Then Count(*) Ends With 12.0 Ends With 12 End.#usn7)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:_usn4)Assert Exists([`6esn` In 0Xa,`8esn` Contains $usn1 Contains $12].`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:usn1]->()Assert Exists(Reduce(usn1={usn1} Is Null Is Null,_usn4 In _usn3 Starts With 12.e12 Starts With 0.12|False)._usn4!)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`5esn`)Assert Exists(None(`` In 123456789 Ends With 12.e12 Ends With $`7esn` Where 7[True..][2.12..])._usn4?)"),
    octest_legacy:ct_string("Create Constraint On(``:usn2)Assert Exists(Case When _usn3[$`8esn`] Then $0[..9e1] End.`7esn`)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:#usn7)Assert Case `4esn`[1.0] When $`4esn`[9e12..123.654] Then $`4esn` In Null In 0xabc End.``? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:``]->()Assert Exists(Reduce(usn2={123456789} Is Not Null,`` In 123456789 Ends With 12.e12 Ends With $`7esn`|$0[``][{@usn6}]).@usn6!)"),
    octest_legacy:ct_string("Create Constraint On()<-[`5esn`:``]-()Assert Exists(Filter(`5esn` In \"d_str\" Is Null Is Null Where {_usn4} Starts With 0.e0 Starts With 0x0).`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[``:usn2]-()Assert Exists([$12 Ends With 07 Ends With $123456789,$@usn5 =~1000 =~1000,.e12[@usn5..$12]].#usn7?)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:`8esn`]-()Assert Exists((`4esn` :`7esn`:_usn3{#usn8:{`7esn`} Is Null,`3esn`:`1esn` =~\"d_str\"})-[_usn4?:`1esn` *7..12]->(:#usn8:#usn8{_usn3:$_usn3['s_str'][07],`7esn`:$1000 In $1000 In $`3esn`}).usn1?)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`8esn`)Assert Exists(Filter(#usn7 In `2esn`[..$#usn8][..Count(*)] Where 00[{`8esn`}..][{`8esn`}..]).`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:usn1)Assert {`6esn`:{123456789}[0xabc..],usn2:{_usn4}[...e1][..$7]}.`2esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`1esn`)Assert Exists(({`5esn`:$`8esn`[1000..0Xa]})-[`4esn`?:_usn4|:usn2 *..01]->(`7esn` :`8esn`:`7esn`{#usn8:01234567[usn2..$12][{`7esn`}..$usn2]}).`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`2esn`)Assert (`3esn` {usn1:#usn8 Is Not Null Is Not Null,`5esn`:010[#usn7..True]})<-[`6esn`? *..0x0{_usn4:$_usn3 In {1000} In 0.12,#usn7:{`7esn`}[..{`4esn`}]}]-({_usn3:Null Ends With {`5esn`} Ends With 0.e0,@usn5:$`7esn` =~{`8esn`} =~$usn1}).@usn6 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:usn1)Assert usn1(Distinct $123456789 Ends With `3esn` Ends With 123456789,`5esn`[7][{usn2}]).`2esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`6esn`)Assert [#usn8 In {`5esn`}[.e1..``]|$`1esn` =~0X7]._usn4 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`7esn`:usn1]-()Assert Exists(Single(#usn7 In `2esn`[..$#usn8][..Count(*)]).usn1)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`5esn`)Assert Exists(Case When $`2esn`[2.12..'s_str'][{@usn6}.._usn4] Then Count ( * )[0.12...e1] Else 1e1[{`3esn`}..{`4esn`}][0Xa..$_usn4] End.`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:_usn4)Assert Exists(Reduce(@usn5=\"d_str\"[..{@usn5}][..``],`1esn` In `8esn`[`4esn`..{#usn8}][$12..2.12]|$`7esn` Is Null Is Null).`2esn`)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:@usn6)Assert Exists(Single(_usn4 In _usn3 Starts With 12.e12 Starts With 0.12 Where \"d_str\" Starts With 01).@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`5esn`:`7esn`]-()Assert Exists([@usn5 In 0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF] Where 123456789 Ends With 12.e12 Ends With $`7esn`|`3esn`[..$12][..{`7esn`}]].`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`7esn`)Assert Exists(Case 123.654[...e0] When $#usn7 Contains 0x0 Contains 1000 Then usn2[$_usn4..][True..] When 0.12[$`3esn`..$_usn3][12.0..usn1] Then #usn8 Else 07 =~01 End.@usn5)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:@usn6)Assert Exists(Single(@usn5 In 0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF] Where {`6esn`}).``?)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:_usn3]->()Assert Exists(Extract(@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7 Where ``[$`2esn`])._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:@usn5)Assert Exists([{usn1} Is Null Is Null].`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`1esn`:`6esn`]-()Assert Exists([`1esn` In {`6esn`}[..$@usn6][..`7esn`] Where #usn8 Is Not Null|{123456789}[0xabc..]]._usn4?)"),
    octest_legacy:ct_string("Create Constraint On()<-[``:_usn4]-()Assert Exists(Shortestpath((((_usn3 )-[?{@usn6:0X7[`7esn`][123.654]}]->(@usn6 {`5esn`:`3esn`[`3esn`..][#usn8..],``:$0[..9e1]})-[`3esn`?:`1esn`{`8esn`:@usn6 Starts With `6esn` Starts With $`1esn`}]->(#usn7 :`6esn`{`4esn`:12e12 Is Not Null Is Not Null,_usn4:@usn6 Starts With `6esn` Starts With $`1esn`})))).usn1?)"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:`3esn`]->()Assert Exists([@usn5 In 0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF] Where 01[2.12..`8esn`]|$`2esn`[2.12..'s_str'][{@usn6}.._usn4]]._usn3)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:`2esn`]-()Assert Exists(Extract(`5esn` In \"d_str\" Is Null Is Null Where 1.e1[$`1esn`..@usn6][$0..$_usn3]|{`7esn`}[..{`4esn`}]).`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:``)Assert Exists(Case When 0X0123456789ABCDEF Is Null Is Null Then `3esn` In $0 In `1esn` End.#usn8?)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:#usn7)Assert Exists(Extract(`8esn` In $`5esn`[$`4esn`..{@usn6}][07..$@usn6] Where $123456789 Starts With 9e0 Starts With 's_str'|9e12 Is Not Null Is Not Null).``!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:@usn5)Assert (`8esn` {#usn8:@usn5 In {`7esn`} In `2esn`,`8esn`:Count ( * ) Contains `8esn` Contains .e1})-[_usn4? *..01]-(@usn6 :`8esn`:`7esn`).`4esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:@usn5)Assert Exists([$123456789 Ends With `3esn` Ends With 123456789,$7[{usn2}..][{usn2}..],$_usn3 Contains 999 Contains \"d_str\"].`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn1:#usn7]-()Assert Exists(All(`4esn` In $`3esn` Is Not Null Where {@usn5} Is Null Is Null).`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`4esn`)Assert None(`8esn` In 01[2.12..`8esn`] Where {999} Starts With {0}).`4esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:#usn7]->()Assert Exists(Extract(@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7 Where {123456789} Contains $#usn8).`3esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`7esn`:`2esn`]-()Assert Exists(({`8esn`:12e12 Is Not Null Is Not Null,usn1:0X7[0e0..`7esn`][1000..0e0]})-[`2esn`:@usn6|`6esn` *..999]->(_usn4 :`4esn`)._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On(``:`6esn`)Assert Extract(`4esn` In $`3esn` Is Not Null Where 01[2.12..`8esn`]).#usn8 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:#usn8)Assert Exists(All(`5esn` In \"d_str\" Is Null Is Null Where 00[$`7esn`]).#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:@usn5]-()Assert Exists(Reduce(usn2=@usn6 Contains $1000 Contains {`7esn`},`2esn` In `1esn` =~\"d_str\"|usn1 In 7 In {123456789}).`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`7esn`)Assert Case When 07 Contains 0X7 Contains $`8esn` Then {`4esn`} =~9e0 =~{12} When .e1 Ends With 1e1 Ends With @usn5 Then $#usn8[Count ( * )] Else Count ( * )[True..][{#usn7}..] End.`6esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn5:#usn7]->()Assert Exists(Any(@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7 Where $0[``][{@usn6}]).@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`7esn`:`5esn`]-()Assert Exists((`` :`8esn`:`7esn`)-[`1esn`? *1000..00{@usn5:.e0[..$`8esn`],`4esn`:{usn2} =~12}]->({`6esn`:.e1 Ends With 1e1 Ends With @usn5,usn1:2.12 Is Not Null Is Not Null}).`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:`4esn`]-()Assert Exists(Extract(_usn4 In _usn3 Starts With 12.e12 Starts With 0.12 Where $@usn6 Contains 07).`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn6:@usn6]->()Assert Exists(Extract(`` In 123456789 Ends With 12.e12 Ends With $`7esn` Where _usn4 Contains 2.12)._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:``)Assert Exists(({`1esn`:$`8esn`[1000..0Xa]})-[:`8esn` *0..{_usn3:`4esn` Ends With 07 Ends With {`3esn`}}]->({`8esn`:`3esn`[`3esn`..][#usn8..],`5esn`:{12} Is Not Null}).`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`3esn`)Assert Exists({`3esn`:12.0 Contains #usn7}.@usn5!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:#usn8)Assert `1esn`(Distinct `3esn`[{`2esn`}],$#usn7 Contains 0x0 Contains 1000).``! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:#usn7)Assert (_usn3 :usn2{#usn7:{999} Starts With {0}})-[:`7esn` *1000..00{@usn6:$#usn8[$`8esn`..{`8esn`}],``:0Xa[usn2..]}]->(:``:#usn8{`7esn`:00 Starts With 0xabc,_usn3:{123456789} Contains $#usn8})<-[usn1 *..999{@usn5:1.0[0X7][{`5esn`}],_usn3:$`7esn` Is Null Is Null}]-(@usn6 {`4esn`:True Contains {0} Contains 7,`6esn`:{999} Starts With $999}).usn2! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`3esn`)Assert {#usn7:12[1.e1..{_usn3}][1.e1..1.0],_usn4:Null[$`5esn`][False]}.#usn7! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:_usn4)Assert Single(@usn5 In 0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF] Where Null[``]).`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:usn2)Assert Exists({_usn4:`8esn`[`4esn`..{#usn8}][$12..2.12]}.#usn7)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`8esn`)Assert [usn1 In @usn5 =~{`5esn`} =~`5esn` Where $`1esn`[1.0..][_usn3..]].#usn7? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:`4esn`]-()Assert Exists(All(`1esn` In {`6esn`}[..$@usn6][..`7esn`] Where `1esn` =~0 =~$#usn7).``?)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`7esn`)Assert Exists(Single(#usn8 In 7[..999][..{#usn8}] Where .e0[..$`8esn`]).#usn8)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:#usn7)Assert Exists((`` :@usn5{`1esn`:2.12 Contains usn2 Contains True})-[usn1? *0X0123456789ABCDEF]->(usn1 :#usn8:#usn8{``:$@usn6 Ends With $_usn4 Ends With 0.12,`6esn`:$`8esn`[..{`2esn`}]})<-[`4esn`?:`1esn` *..999{`4esn`:False,_usn4:$`7esn` Is Null Is Null}]->(_usn3 {`5esn`:12.e12[0xabc],`2esn`:{`7esn`}[..$@usn5][..$#usn8]}).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`2esn`)Assert (@usn6 :``:#usn8)-[usn1?:#usn7{`2esn`:12.e12[0e0..$`1esn`][0X0123456789ABCDEF.._usn3],@usn5:{usn2}[.e0..$999]}]->(:``:#usn8{`4esn`:{`4esn`}[$123456789..][$#usn7..]})<-[?{usn1:Count ( * )[0.12...e1],`6esn`:07 Contains 0X7 Contains $`8esn`}]->(`5esn` {@usn6:`6esn`[..$@usn6],_usn4:{7}[..12e12][..Count ( * )]}).#usn8? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:#usn7)Assert Exists([{`4esn`} Ends With {123456789} Ends With $`4esn`].usn1!)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:@usn5)Assert Extract(@usn5 In 0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF] Where usn1 Ends With $@usn6 Ends With `3esn`|$_usn3[..1000]).`` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[usn2:`6esn`]-()Assert Exists(Extract(`2esn` In `1esn` =~\"d_str\" Where usn2[9e12]|$usn1[{`5esn`}][$`6esn`]).`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:_usn3)Assert Exists(Extract(_usn4 In _usn3 Starts With 12.e12 Starts With 0.12 Where False =~1e1 =~0.e0)._usn3)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`2esn`)Assert Any(`8esn` In 01[2.12..`8esn`] Where {12}[..0X7]).@usn6 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:@usn5)Assert Filter(#usn8 In {`5esn`}[.e1..``] Where 0X7[..2.12]).@usn5 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:_usn3)Assert Any(#usn7 In `2esn`[..$#usn8][..Count(*)] Where Count ( * ) Contains 0X0123456789ABCDEF Contains {@usn6})._usn3! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`3esn`)Assert Exists(Single(`` In `` Is Not Null Is Not Null Where $`6esn` Is Null).`8esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(``:#usn7)Assert Exists(Reduce(usn2=#usn7,@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7|#usn7 Is Null Is Null)._usn4)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`7esn`)Assert Exists(Allshortestpaths((((`8esn` {_usn4:`4esn`[1.0],`5esn`:0e0 Ends With 1.e1 Ends With $`4esn`})-[`3esn`?:`1esn`{`8esn`:@usn6 Starts With `6esn` Starts With $`1esn`}]->({`8esn`:`3esn`[`3esn`..][#usn8..],`5esn`:{12} Is Not Null})<-[{``:#usn7[usn1][$`5esn`],``:{_usn4} Is Not Null Is Not Null}]->(#usn8 :`6esn`{usn2:{7}[$`5esn`][{_usn3}],@usn5:0.12 =~$0 =~$0})))).`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:_usn3)Assert Exists(Case When 0x0 Ends With $12 Then 07 =~01 When 0X7[`7esn`][123.654] Then 's_str' Ends With 7 Ends With {_usn4} End._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`6esn`)Assert Case `3esn`[`3esn`..][#usn8..] When 9e12[`6esn`..12.0] Then 123.654[`3esn`..] When Count ( * ) =~$usn2 =~$usn2 Then #usn7 Else 12e12 Contains 0Xa End.`2esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`3esn`)Assert [{`5esn`} Starts With $`5esn` Starts With .e1]._usn4? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:`1esn`]->()Assert Exists(All(#usn8 In 7[..999][..{#usn8}] Where $@usn5 Starts With {0} Starts With 12).usn2?)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:usn1)Assert Exists(Case 0X0123456789ABCDEF Ends With $`8esn` Ends With 0.12 When 9e1 Is Not Null Then $`4esn`[..$`3esn`][..0.0] End.`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:usn2)Assert [@usn5 In 0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF] Where {123456789} Is Null Is Null|1e1 Contains Count ( * )].`6esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[``:`1esn`]-()Assert Exists(Case @usn6 Contains $1000 Contains {`7esn`} When $_usn3[Count(*)] Then 010[#usn7..True] When {`2esn`} Is Not Null Is Not Null Then $`2esn` Is Null Is Null End.`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:usn2)Assert Exists((:#usn7{@usn5:{12} =~#usn8})<-[usn2?:`6esn`|`5esn`{_usn3:{#usn7}[`2esn`..]}]->({`1esn`:{`2esn`} Ends With {`7esn`}})-[usn1?:#usn7{`2esn`:12.e12[0e0..$`1esn`][0X0123456789ABCDEF.._usn3],@usn5:{usn2}[.e0..$999]}]->(`` :_usn4).`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`4esn`)Assert Exists(Single(usn1 In @usn5 =~{`5esn`} =~`5esn` Where $usn1 Ends With $`` Ends With $12).`7esn`)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:_usn4)Assert [`8esn` In 01[2.12..`8esn`] Where Count ( * ) Ends With $@usn5|_usn3[_usn3..][12.e12..]]._usn3 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:_usn4)Assert Exists(Reduce(`3esn`=Null[``],_usn3 In {`3esn`}[`2esn`]|{123456789} Contains $#usn8).`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn4:_usn4]-()Assert Exists(Extract(#usn7 In `2esn`[..$#usn8][..Count(*)] Where 0.0[$0][{@usn5}]).`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`8esn`)Assert Extract(`` In 123456789 Ends With 12.e12 Ends With $`7esn` Where {`6esn`}|{7}[..1.0][..9e0])._usn4! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:`7esn`]->()Assert Exists([0.12 =~`5esn` =~`5esn`].#usn7)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:@usn6)Assert Exists(Case {``} Is Null When {0} Then {`5esn`} Starts With $`5esn` Starts With .e1 End.`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:``)Assert (usn1 :`6esn`)<-[`4esn`?:`7esn` *0..{`2esn`:00[`2esn`..12][123456789..0.e0]}]-(_usn3 {`3esn`:False Is Null Is Null,`8esn`:2.12}).`1esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:#usn7]->()Assert Exists(Case When 123.654[True..$#usn8][0.12..Count(*)] Then #usn8 Is Not Null Is Not Null When `4esn`[..Count ( * )][..{#usn7}] Then 0e0 Starts With 1000 Starts With #usn7 End._usn4)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`3esn`)Assert Reduce(#usn7={`5esn`} Starts With $`5esn` Starts With .e1,`` In 123456789 Ends With 12.e12 Ends With $`7esn`|{`5esn`} Contains $0 Contains {``}).usn1? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`7esn`)Assert All(#usn7 In `2esn`[..$#usn8][..Count(*)] Where usn1 Is Not Null).`5esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:`2esn`)Assert Exists(Extract(`1esn` In `8esn`[`4esn`..{#usn8}][$12..2.12] Where $usn1[{`5esn`}][$`6esn`]|`5esn`[7][{usn2}]).`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:#usn8)Assert (usn1 :``:#usn8)-[`4esn`?:_usn4|:usn2 *..01]->(`7esn` :`8esn`:`7esn`{#usn8:01234567[usn2..$12][{`7esn`}..$usn2]})<-[@usn5? *..01]-(`8esn` :@usn6:#usn8).@usn5 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:usn2)Assert {`2esn`:{`5esn`}[.e1..``],`1esn`:0.12 =~$0 =~$0}.`6esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:#usn7]-()Assert Exists(Case When {#usn8}[010] Then False =~$7 =~2.12 End.`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`3esn`)Assert Exists([`3esn` In {7} Is Null Where 0.e0[123.654][01]].`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:@usn6)Assert Exists((`8esn` :_usn3:_usn3{`4esn`:0.e0 Ends With $#usn7 Ends With $7,`2esn`:0x0 =~$usn2})<-[`6esn`?:#usn7]->(`2esn` )<-[`7esn`?:@usn5{_usn4:#usn7 =~Count ( * ) =~``,`6esn`:#usn8[#usn8..]}]-(`` :@usn6:#usn8{`8esn`:'s_str' In 00}).`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[``:`2esn`]-()Assert Exists(All(`1esn` In {`6esn`}[..$@usn6][..`7esn`] Where @usn6 Is Null Is Null).`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn5:usn2]->()Assert Exists(Reduce(_usn3={@usn5} Is Null Is Null,_usn4 In _usn3 Starts With 12.e12 Starts With 0.12|{usn1}[0X0123456789ABCDEF]).@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn7:`3esn`]->()Assert Exists((`8esn` :#usn8:#usn8{`3esn`:$`4esn`[9e12..123.654]})<-[`2esn` *0Xa{#usn8:1.0[0e0..0.e0]}]-(_usn4 {``:1.0[0e0..0.e0]}).`3esn`?)"),
    octest_legacy:ct_string("Create Index On:_usn4(@usn5)"),
    octest_legacy:ct_string("Create Constraint On()-[``:`2esn`]-()Assert Exists(All(`4esn` In $`3esn` Is Not Null Where {`6esn`} Contains \"d_str\").`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On(``:_usn3)Assert [`` In 123456789 Ends With 12.e12 Ends With $`7esn` Where {123456789}[0xabc..]].`2esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn5:`6esn`]-()Assert Exists(Extract(`1esn` In `8esn`[`4esn`..{#usn8}][$12..2.12] Where {@usn5} Is Null Is Null|@usn5 In $7).#usn7)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`3esn`)Assert Exists(All(#usn7 In `2esn`[..$#usn8][..Count(*)] Where usn1 Is Not Null).@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`7esn`)Assert Exists((`4esn` {_usn4:`4esn` Ends With 07 Ends With {`3esn`},usn2:$0[$`1esn`..07]})-[`5esn`?:`5esn` *1000..00]->({`1esn`:`3esn`[{`2esn`}]})-[{_usn4:`4esn`[`5esn`..12][@usn6..False],#usn7:0Xa[usn2..]}]-(:``:#usn8{_usn3:1000[Null..{123456789}],`5esn`:$1000[`2esn`..`5esn`][1e1..1.e1]}).usn2?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`6esn`:`7esn`]-()Assert Exists(Case When $#usn8[$`8esn`..{`8esn`}] Then $#usn8[$`8esn`..{`8esn`}] Else 9e1[2.12..{#usn8}] End.`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`4esn`)Assert Exists(usn1(123.654 =~$usn2 =~{999},1.0[$`1esn`..][$123456789..]).`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`4esn`)Assert Allshortestpaths((_usn4 :#usn7)<-[ *123456789..{@usn6:1e1[{`3esn`}..{`4esn`}][0Xa..$_usn4],`6esn`:12e12 Ends With {usn1}}]->(#usn8 :@usn6:#usn8)<-[`7esn`?:#usn8|`1esn` *0xabc..{#usn8:$#usn8 =~{@usn5}}]->(`` {usn2:0X0123456789ABCDEF[123456789]})).`4esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:usn2]-()Assert Exists((`2esn` :usn1)-[:`6esn`|`5esn`]-(_usn3 {`4esn`:2.12['s_str'..$12][{`1esn`}..`2esn`],`1esn`:0e0 In @usn5}).usn2!)"),
    octest_legacy:ct_string("Create Constraint On()-[``:@usn5]-()Assert Exists(`5esn`(Distinct #usn7 =~Count ( * ) =~``).`5esn`!)"),
    octest_legacy:ct_string("Drop Index On:#usn8(`6esn`)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`4esn`)Assert Exists(None(`8esn` In 01[2.12..`8esn`] Where 0X7[..2.12]).`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:@usn6)Assert Exists([_usn4 In _usn3 Starts With 12.e12 Starts With 0.12|`` Is Not Null Is Not Null]._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`7esn`)Assert Extract(_usn4 In _usn3 Starts With 12.e12 Starts With 0.12 Where $`6esn` Is Null).`6esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:``)Assert Reduce(#usn8=#usn7 Is Null Is Null,`8esn` In 01[2.12..`8esn`]|0Xa[2.12]).`7esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:`7esn`]->()Assert Exists(Extract(#usn7 In {``} Is Not Null Where @usn5 In {`7esn`} In `2esn`).`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[``:#usn7]-()Assert Exists({`3esn`:usn1 Is Null Is Null}.`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:``]->()Assert Exists(Single(#usn7 In {``} Is Not Null Where {`2esn`} Ends With {`7esn`}).`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:`8esn`]->()Assert Exists(Any(`8esn` In 01[2.12..`8esn`] Where #usn7 Starts With {#usn7} Starts With `7esn`).#usn7?)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:`5esn`]->()Assert Exists(Filter(`5esn` In \"d_str\" Is Null Is Null Where usn1 Ends With $@usn6 Ends With `3esn`).usn2!)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`8esn`)Assert Exists(Case {_usn4} Is Not Null Is Not Null When {#usn8} Is Not Null Then $`8esn`[..00] When $#usn7[..{`5esn`}][..9e12] Then `7esn`[$0][9e12] End.@usn5?)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:usn1)Assert Exists(Case 12.e12[0e0..$`1esn`][0X0123456789ABCDEF.._usn3] When $123456789 =~{`6esn`} =~\"d_str\" Then {@usn5} Is Null Is Null When 9e0 Then {_usn4} Is Not Null Is Not Null Else `7esn` In {123456789} In `1esn` End.usn1!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:usn1)Assert (`8esn` :`7esn`:_usn3{#usn7:'s_str' Is Not Null Is Not Null})-[:@usn6|`6esn`{``:$123456789 Starts With 9e0 Starts With 's_str',``:{``} Is Not Null}]->(:usn1{#usn7:@usn6 Ends With {_usn3},`3esn`:$`1esn` Ends With 9e1 Ends With $123456789}).@usn5 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:#usn7)Assert Exists(Extract(#usn8 In {`5esn`}[.e1..``] Where `6esn`[..$@usn6]|7 Starts With {@usn6} Starts With $``).usn2!)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:`2esn`]-()Assert Exists(Allshortestpaths(((usn2 :``:#usn8{`5esn`:$#usn8[$`8esn`..{`8esn`}]})<-[`2esn`?:@usn6|`6esn` *0xabc..{`5esn`:`6esn`[12..$usn2][{#usn8}..{usn2}],@usn5:$`2esn` Is Null Is Null}]->(`5esn` :`4esn`{@usn6:{`6esn`} =~$999})-[`6esn`?:`8esn`{#usn8:'s_str'[00][{`5esn`}],`6esn`:9e1[$usn2]}]-(:@usn6:#usn8$`5esn`))).`5esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:#usn8]->()Assert Exists([@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7 Where $@usn5 Starts With $1000|$usn2[{@usn5}]].@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On(``:`4esn`)Assert {`3esn`:$`6esn` Ends With Count(*),``:.e12 Ends With _usn4}.`5esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:_usn4)Assert [`` In `` Is Not Null Is Not Null Where `1esn` =~0 =~$#usn7|'s_str' In 00].`2esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:`8esn`]->()Assert Exists((:usn2{`1esn`:1.0 In Count(*),`4esn`:{`1esn`}[12.0..`2esn`][@usn6..{usn1}]})-[`6esn`:`2esn`{`5esn`:00 Starts With 0xabc,`6esn`:0Xa =~Null =~$``}]->(:_usn4{`2esn`:{`1esn`}[usn1][.e1],_usn4:#usn8 Is Not Null})<-[``? *00{`6esn`:'s_str'[00][{`5esn`}],``:01234567 Ends With .e12 Ends With $#usn7}]->(`8esn` {#usn8:010 In Count(*),`4esn`:12.e12[9e12..{`6esn`}]}).`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`5esn`)Assert #usn8(Distinct {``}[010..][0xabc..],`7esn` In {123456789} In `1esn`).usn2? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:`1esn`]->()Assert Exists(None(`4esn` In $`3esn` Is Not Null Where `2esn`[..$#usn8][..Count(*)]).`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[usn2:`7esn`]-()Assert Exists(Reduce(#usn7=1.0 Contains $_usn4,#usn7 In {``} Is Not Null|$`4esn`[9e12..123.654]).`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:usn1)Assert Shortestpath(((:@usn6:#usn8{`4esn`:$`8esn`[..00]})<-[_usn4?:_usn4|:usn2 *00]->(:`7esn`:_usn3{#usn8:{`7esn`} Starts With $123456789 Starts With $@usn6})-[`2esn`?:`7esn` *..07$0]-(`6esn` :`6esn`{`8esn`:{0} In _usn4,_usn3:`7esn`[..2.12][..{usn1}]}))).`2esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`2esn`)Assert {_usn4:#usn7 =~Count ( * ) =~``,`6esn`:#usn8[#usn8..]}.`7esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[``:`2esn`]->()Assert Exists((`1esn` {``:`7esn` Starts With $#usn7 Starts With $`7esn`})-[`4esn`]->(:`6esn`$123456789)-[?:#usn7 *0xabc..]->(`3esn` :`5esn`{_usn3:7[True..][2.12..],`1esn`:$@usn5 Starts With {0} Starts With 12}).@usn5)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`8esn`)Assert Exists([`8esn` In 01[2.12..`8esn`] Where {`3esn`}[`2esn`]|123.654[{7}..]].@usn5)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`8esn`)Assert Exists(Case $`6esn`[123456789..12][True..{`3esn`}] When 1e1 Contains Count ( * ) Then $`3esn`[..$123456789][..$`1esn`] When $1000 In $1000 In $`3esn` Then {`7esn`}[..{`4esn`}] End.@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn6:`3esn`]-()Assert Exists(({``:00 Starts With 0xabc,`3esn`:$`1esn` Ends With 9e1 Ends With $123456789})<-[? *0X0123456789ABCDEF{`6esn`:`1esn` =~\"d_str\",#usn8:{`4esn`} =~9e0 =~{12}}]-(:#usn8:#usn8{`2esn`:$_usn4 Contains Null Contains #usn8,`6esn`:$`5esn`[$`4esn`..{@usn6}][07..$@usn6]}).`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:@usn6)Assert Extract(`` In 123456789 Ends With 12.e12 Ends With $`7esn` Where $`1esn` Ends With 9e1 Ends With $123456789)._usn3 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:usn2]-()Assert Exists(Reduce(`7esn`=01 =~{_usn3} =~`3esn`,usn1 In @usn5 =~{`5esn`} =~`5esn`|12e12[$`3esn`]).`3esn`)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`2esn`)Assert Single(#usn7 In {``} Is Not Null Where usn1[9e12..][$7..]).`1esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn2:#usn7]-()Assert Exists(Reduce(``={@usn5} Is Null Is Null,`8esn` In $`5esn`[$`4esn`..{@usn6}][07..$@usn6]|0[.e0..{`1esn`}]).usn2?)"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:_usn3]-()Assert Exists(Single(#usn8 In {`5esn`}[.e1..``] Where {`1esn`}[12.0..`2esn`][@usn6..{usn1}]).``!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:_usn4)Assert Exists({@usn5:$_usn3['s_str'][07]}._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(``:_usn3)Assert Exists(Extract(#usn7 In `2esn`[..$#usn8][..Count(*)] Where \"d_str\" Starts With 01|7[True..][2.12..])._usn4)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`3esn`)Assert {_usn4:True[07..$usn2][$7..{usn1}]}.``? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`3esn`)Assert Exists(Filter(`2esn` In `1esn` =~\"d_str\" Where 0.12 In _usn3 In {0})._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`8esn`)Assert (usn1 )-[@usn6?:#usn8|`1esn`{usn1:`5esn`[.e0..][07..]}]-(:`6esn`{`7esn`:{usn2}[$`3esn`..][{#usn7}..]})-[``?:`3esn`|:#usn8]->(:``:#usn8{`2esn`:{1000}[$999...e12][`7esn`..'s_str'],usn2:01234567 Is Null Is Null}).`4esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:@usn5)Assert {usn1:12 Ends With 0x0 Ends With 0.e0}._usn3? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:_usn4)Assert Exists({`2esn`:usn2[{7}],`2esn`:0e0 Ends With 1.e1 Ends With $`4esn`}.`4esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`2esn`)Assert $123456789._usn3! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:_usn4]-()Assert Exists(`8esn`(`4esn`[..Count ( * )][..{#usn7}],{``}[...e12]).``)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:#usn8)Assert `8esn`(Distinct `8esn` =~0xabc =~010).@usn5 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:#usn7)Assert {@usn5}.usn1? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn5:`4esn`]-()Assert Exists(Extract(`5esn` In $999[0.0..] Where {999}|9e1[$usn2]).usn1)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:#usn8)Assert Exists(exists(Distinct 0X7[..2.12],07 =~01).`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`4esn`:@usn6]-()Assert Exists(Extract(`8esn` In $`5esn`[$`4esn`..{@usn6}][07..$@usn6] Where {`4esn`} Starts With $usn2 Starts With $1000).`7esn`)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`1esn`)Assert Any(@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7 Where $0[``][{@usn6}]).`7esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:``]-()Assert Exists(Extract(`` In 123456789 Ends With 12.e12 Ends With $`7esn` Where {`6esn`}|{7}[..1.0][..9e0]).`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn8:usn2]-()Assert Exists({@usn6:{999} Starts With $999,`4esn`:$usn1[{`5esn`}][$`6esn`]}.@usn5?)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`5esn`)Assert (:`7esn`:_usn3{#usn8:{`7esn`} Starts With $123456789 Starts With $@usn6})<-[{`1esn`:{123456789}[0xabc..],@usn6:0X0123456789ABCDEF[{_usn4}..00]}]-(`7esn` :`5esn`{`3esn`:`7esn` Is Null}).#usn8! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:_usn4)Assert Exists((@usn6 :#usn7{_usn3:{_usn4} Is Not Null Is Not Null})<-[?:`7esn`{`3esn`:{#usn8}[010]}]-(:`3esn`:@usn5{`2esn`:$_usn4[1.e1]['s_str'],#usn7:$12[True..][{0}..]}).@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:@usn6]-()Assert Exists(Any(`` In 123456789 Ends With 12.e12 Ends With $`7esn` Where {`2esn`} Is Not Null).`3esn`)"),
    octest_legacy:ct_string("Create Constraint On(usn2:``)Assert Exists(()<-[`1esn`?:`8esn` *123456789..]->(:`1esn`{@usn6:$usn1 Ends With $`` Ends With $12})<-[_usn3?:#usn7 *..0x0]-(:@usn6:#usn8$`5esn`).usn2!)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:@usn6)Assert {`6esn`:0.e0 Ends With $#usn7 Ends With $7}.`5esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:_usn3)Assert Exists(`5esn`(Distinct Count ( * )[0.12...e1]).usn1)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`6esn`)Assert Exists((:usn2{`3esn`:0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF]})<-[`4esn`?:_usn4|:usn2{`2esn`:{123456789}[0X0123456789ABCDEF..07][{`1esn`}.._usn4],`6esn`:01[{`2esn`}..{@usn6}][$`2esn`..0.0]}]-(:`8esn`:`7esn`{`8esn`:.e1[..usn2][..`8esn`],`5esn`:.e0 Starts With $`` Starts With $usn2})._usn4?)"),
    octest_legacy:ct_string("Create Constraint On(``:usn2)Assert Exists(Any(`5esn` In \"d_str\" Is Null Is Null Where 00[$`7esn`]).`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:@usn6)Assert Exists(Case When 0.12[`2esn`..{`6esn`}] Then 7[{0}..{_usn4}] When $@usn5 Starts With {0} Starts With 12 Then `` Ends With 123456789 Ends With 123.654 Else $`8esn`[$`6esn`..$`4esn`][0.12.._usn3] End._usn3?)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`2esn`)Assert Exists(Filter(`` In `` Is Not Null Is Not Null Where 1.0 In Count(*)).@usn5?)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:#usn8)Assert Exists(`2esn`(Distinct 01234567[usn2..$12][{`7esn`}..$usn2]).#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`4esn`)Assert Reduce(`7esn`=False[..``],#usn8 In {`5esn`}[.e1..``]|$`` Starts With $1000 Starts With False).``? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[``:_usn4]-()Assert Exists(Single(`` In 123456789 Ends With 12.e12 Ends With $`7esn` Where 0X7[{@usn6}]).@usn5)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:@usn5)Assert (:_usn4{@usn6})<-[`4esn`?:_usn4|:usn2{_usn4:$usn2[{@usn5}],`2esn`:usn1[`5esn`..$7]}]->({``:$`8esn` =~{1000}})<-[ *..999{@usn5:`` Is Not Null Is Not Null,_usn3:{`3esn`} Is Not Null Is Not Null}]->(:``:#usn8{usn1:{`6esn`}}).`1esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:_usn3)Assert Any(`` In 123456789 Ends With 12.e12 Ends With $`7esn` Where $`8esn`[1000..0Xa]).`2esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:@usn6)Assert Exists(Allshortestpaths((((:`1esn`{_usn4:{999}})-[{`1esn`:$`5esn`[`3esn`..]}]->(`7esn` :``:#usn8)<-[`5esn`?:`8esn` *1000..00]->(:_usn4{`6esn`:$usn1 In {999} In $#usn7,_usn4:#usn7})))).``)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`8esn`)Assert (@usn6 :``:#usn8)-[#usn8?{`5esn`:#usn7 Contains _usn3 Contains {`3esn`}}]-(:``:#usn8)<-[?{usn1:Count ( * )[0.12...e1],`6esn`:07 Contains 0X7 Contains $`8esn`}]->(:usn2{`3esn`:0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF]}).#usn8? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:_usn3)Assert Exists({`6esn`}.usn1)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:#usn7)Assert usn1(Distinct 0X7[`7esn`][123.654],$`5esn`[..$`5esn`][..$12]).#usn7? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:#usn8)Assert Allshortestpaths(((:@usn5{#usn7:$_usn4[1.e1]['s_str'],usn1:1e1 In 123.654 In `3esn`})<-[`8esn`?{`2esn`:Count ( * ) Contains {`1esn`} Contains 07,#usn7:`7esn`[..2.12][..00]}]->(`4esn` {`7esn`:{999} Contains .e0 Contains 12.0,@usn5:`5esn` Is Null})))._usn4 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:_usn4)Assert Exists(Extract(`` In 123456789 Ends With 12.e12 Ends With $`7esn` Where {123456789}[0xabc..]|{7}[$``][{@usn6}]).#usn7)"),
    octest_legacy:ct_string("Create Constraint On()<-[``:_usn3]-()Assert Exists(Shortestpath(((`1esn` :`7esn`:_usn3{`2esn`:$#usn7[#usn7..],_usn4:'s_str' Is Not Null Is Not Null})-[`2esn`? *00]-(`8esn` {#usn8:@usn5 In {`7esn`} In `2esn`,`8esn`:Count ( * ) Contains `8esn` Contains .e1}))).`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:_usn3]->()Assert Exists(Extract(#usn7 In {``} Is Not Null Where {`1esn`}[usn1][.e1]|`6esn` In 0Xa)._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:usn1]->()Assert Exists(Extract(#usn8 In {`5esn`}[.e1..``]).``?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn2:`5esn`]-()Assert Exists(Allshortestpaths((@usn5 {`7esn`:$`6esn`[010..],#usn8:0.e0 Starts With `2esn`})-[@usn5]->(:`5esn`{`1esn`:9e12[{123456789}..#usn8][{_usn3}..{#usn7}],@usn6:$usn1 In {999} In $#usn7})).usn1!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`3esn`)Assert `6esn`(`4esn`[``],True[{`7esn`}..]).usn1? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`8esn`)Assert Exists({@usn5}.usn1?)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`7esn`)Assert Exists(`8esn`(`3esn`[{usn1}]).`3esn`)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:usn1)Assert Exists(Reduce(@usn5=$1000[999],`1esn` In {`6esn`}[..$@usn6][..`7esn`]|0xabc[.e0]).`3esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:#usn7]-()Assert Exists([$_usn4[1.e1]['s_str'],#usn8 Is Not Null,123456789[#usn8..False]].usn1!)"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:`3esn`]-()Assert Exists(Filter(`5esn` In \"d_str\" Is Null Is Null Where {_usn3}[..\"d_str\"][..`5esn`]).`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:_usn3)Assert Case When {``} Starts With $`2esn` Starts With `1esn` Then False =~$7 =~2.12 When `1esn`[..{@usn6}][..$123456789] Then `3esn`[{`2esn`}] Else True In 0e0 End.`1esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`8esn`)Assert (:`5esn`{`1esn`:9e12[{123456789}..#usn8][{_usn3}..{#usn7}],@usn6:$usn1 In {999} In $#usn7})-[`7esn`?:usn1|@usn6 *1000..00{`8esn`:Count(*)[..usn2][..usn2],`5esn`:usn1 Is Null}]->(:`1esn`{`5esn`}).usn1! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:usn1)Assert [0.12 =~$0 =~$0,Count ( * ) Contains {`1esn`} Contains 07].`2esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:usn2)Assert Case When @usn6 Ends With {_usn3} Then False Contains {`6esn`} When `3esn`[`3esn`..][#usn8..] Then {`7esn`}[`6esn`][#usn7] End.@usn6? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`5esn`)Assert Extract(`8esn` In 01[2.12..`8esn`] Where Count ( * ) Ends With $@usn5|Count ( * )[True..][{#usn7}..]).usn2? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:`8esn`]->()Assert Exists([`6esn` In 0Xa,12.0 =~999 =~$_usn3].``)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:`1esn`]-()Assert Exists([$0[$`1esn`..07],{`5esn`} =~`4esn` =~{_usn4},.e0[..$`8esn`]]._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:@usn6]-()Assert Exists([{12}[..0X7]].#usn8)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`3esn`)Assert Exists(Filter(`8esn` In $`5esn`[$`4esn`..{@usn6}][07..$@usn6] Where 01234567 Is Null Is Null).`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`6esn`)Assert @usn6(`5esn` Is Null,7[..123456789][..{@usn6}]).`6esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn6:@usn6)Assert Exists({_usn3:Null Ends With {`5esn`} Ends With 0.e0,@usn5:$`7esn` =~{`8esn`} =~$usn1}.`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:_usn3)Assert Exists(Any(`5esn` In \"d_str\" Is Null Is Null Where {0}).``?)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:`1esn`]-()Assert Exists(Any(@usn5 In 0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF] Where {`3esn`} Is Not Null Is Not Null).`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`2esn`)Assert (:`6esn`{#usn8:{`3esn`}[@usn6..0Xa][{12}..0Xa],@usn5:False Is Null Is Null})-[?:`5esn`]->(`2esn` :`3esn`:@usn5{`8esn`:_usn3 Starts With 12.e12 Starts With 0.12,#usn7:{7}[$``][{@usn6}]}).`2esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:usn2)Assert Exists(Shortestpath((_usn3 :usn2{#usn7:{999} Starts With {0}})).`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:@usn5)Assert Exists(None(_usn3 In {`3esn`}[`2esn`])._usn3?)"),
    octest_legacy:ct_string("Create Constraint On()<-[``:_usn4]-()Assert Exists({#usn7:.e1 Ends With 1e1 Ends With @usn5}.@usn5)"),
    octest_legacy:ct_string("Drop Constraint On(``:`7esn`)Assert Exists(Case When `5esn` Is Null Then True[..$`6esn`] Else `3esn`[`3esn`..][#usn8..] End.@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:_usn3)Assert Exists((`4esn` :usn1{#usn7:1.0 Contains $_usn4,`7esn`:00 Starts With 0xabc})-[:@usn5{@usn5:{#usn7}[9e1..][{123456789}..],``:#usn7 Is Not Null Is Not Null}]->(:_usn4{`6esn`:$usn1 In {999} In $#usn7,_usn4:#usn7})<-[? *00]->(@usn5 :usn1).`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:`5esn`]->()Assert Exists(Reduce(`1esn`=9e0[`3esn`..$_usn4],#usn7 In `2esn`[..$#usn8][..Count(*)]|{7} In `2esn`).usn1?)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:@usn5)Assert Reduce(`7esn`={12} =~#usn8,#usn7 In {``} Is Not Null|1.e1[$`1esn`..@usn6][$0..$_usn3]).`5esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:_usn3]->()Assert Exists(All(`4esn` In $`3esn` Is Not Null Where $`2esn`).usn2!)"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:`3esn`]-()Assert Exists({`6esn`:False =~$7 =~2.12,`1esn`:\"d_str\" Is Null Is Null}.``!)"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:``]-()Assert Exists({`7esn`:9e1[2.12],`4esn`:$`8esn` Contains 123456789 Contains $usn2}.`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:usn2]-()Assert Exists({@usn5:123.654[...e0],`8esn`:07 =~01}.usn1?)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:@usn6)Assert Exists(All(#usn8 In 7[..999][..{#usn8}] Where $1000 In $1000 In $`3esn`).`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:@usn6)Assert Exists(Reduce(``=`8esn` Ends With 999 Ends With .e12,`3esn` In {7} Is Null|1.0 Starts With 12e12 Starts With {`5esn`}).#usn7?)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:@usn5)Assert Exists([_usn3 In {`3esn`}[`2esn`]|{#usn7}[`2esn`..]].`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:usn1)Assert Exists({usn1:0X0123456789ABCDEF Is Null Is Null}.`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn4:@usn6]-()Assert Exists(Any(`` In 123456789 Ends With 12.e12 Ends With $`7esn` Where {`8esn`} Ends With `6esn`).`1esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:`4esn`]-()Assert Exists(Single(`1esn` In {`6esn`}[..$@usn6][..`7esn`] Where #usn8 Is Not Null).`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`5esn`)Assert (`5esn` :`2esn`:usn1)-[`5esn`:`5esn`{`5esn`:01234567 Is Null Is Null}]-(:#usn8:#usn8{_usn3:1000[Null..{123456789}],`5esn`:$1000[`2esn`..`5esn`][1e1..1.e1]})-[:`3esn`|:#usn8 *7..12{@usn5:_usn4 Starts With $_usn4 Starts With 12.e12}]-(`3esn` :_usn4).`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn6:_usn4]-()Assert Exists(Allshortestpaths(((@usn5 :`4esn`))).`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:_usn3]-()Assert Exists(`7esn`(Distinct #usn7 Starts With {#usn7} Starts With `7esn`,9e0).@usn5)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:usn1)Assert Exists([0[1.e1..12e12],999 In {`3esn`} In usn2].`5esn`)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:#usn7)Assert {@usn5:{usn1}[0X0123456789ABCDEF],_usn4:usn2[$7..$123456789][$@usn6..$7]}._usn3 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:@usn6)Assert [$@usn5 Is Not Null,_usn3[_usn3..][12.e12..]].#usn8? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:@usn6)Assert Exists(Allshortestpaths((({`8esn`:`3esn` In $0 In `1esn`,#usn8:0.e0[#usn8]})))._usn3)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`6esn`)Assert Exists(None(`8esn` In 01[2.12..`8esn`] Where 0.0 In $usn1)._usn3!)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`8esn`)Assert Exists([12.e12[7..$`6esn`],07 In `2esn` In 12e12,{#usn8}[.._usn4][..$`3esn`]]._usn3)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`4esn`)Assert Exists({`3esn`:.e0 Starts With 0 Starts With 0.e0}._usn3?)"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:`8esn`]-()Assert Exists(Reduce(``=$usn1[.._usn4][..False],`1esn` In `8esn`[`4esn`..{#usn8}][$12..2.12]|#usn8[#usn8..]).`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On(``:`6esn`)Assert #usn8({`3esn`} In 01).`6esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:usn2)Assert ({usn1:{`7esn`}[`6esn`][#usn7],usn1:{999} Starts With $999})-[ *0..]->(`` :usn2)<-[`5esn`?:_usn3|_usn3 *0X7..]->(:#usn8:#usn8{``:1.0[0e0..0.e0]}).`1esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:`8esn`]-()Assert Exists(Case When 1e1 Contains Count ( * ) Then $`` Is Not Null When {`5esn`} Starts With $`5esn` Starts With .e1 Then .e12 In 0.e0 In {12} Else {`3esn`} In 0X7 End.``?)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:#usn7)Assert Exists(All(`1esn` In `8esn`[`4esn`..{#usn8}][$12..2.12] Where True =~010).``)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:#usn7)Assert Allshortestpaths((((`8esn` {_usn4:`4esn`[1.0],`5esn`:0e0 Ends With 1.e1 Ends With $`4esn`})-[`3esn`?:`1esn`{`8esn`:@usn6 Starts With `6esn` Starts With $`1esn`}]->({`8esn`:`3esn`[`3esn`..][#usn8..],`5esn`:{12} Is Not Null})<-[{``:#usn7[usn1][$`5esn`],``:{_usn4} Is Not Null Is Not Null}]->(#usn8 :`6esn`{usn2:{7}[$`5esn`][{_usn3}],@usn5:0.12 =~$0 =~$0})))).`8esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:`2esn`]-()Assert Exists(Single(`3esn` In {7} Is Null Where {`4esn`} =~{7} =~{`7esn`}).usn2!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`7esn`:#usn8]-()Assert Exists(None(`8esn` In $`5esn`[$`4esn`..{@usn6}][07..$@usn6] Where 12.e12[0e0..$`1esn`][0X0123456789ABCDEF.._usn3]).#usn8)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:``)Assert Single(#usn7 In {``} Is Not Null Where $12[True..][{0}..]).@usn5! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`8esn`)Assert Exists(All(@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7 Where $@usn5 Is Not Null).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:`5esn`]-()Assert Exists(Allshortestpaths((#usn8 {@usn5:123.654 Contains $`4esn` Contains 1.0,`6esn`:$`` =~12.0 =~$`7esn`})-[`2esn` *..999{`7esn`:7[{0}..{_usn4}]}]-(#usn7 ))._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:_usn4)Assert Any(`` In `` Is Not Null Is Not Null Where `4esn`[..Count ( * )][..{#usn7}]).usn2? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:@usn6)Assert Exists(Allshortestpaths((((`7esn` {`5esn`:123.654 Contains $`4esn` Contains 1.0,`8esn`:123.654 =~$usn2 =~{999}})<-[?{@usn6:0X7[`7esn`][123.654]}]->(:_usn4{`2esn`:{`1esn`}[usn1][.e1],_usn4:#usn8 Is Not Null})<-[`2esn`?:`1esn` *00]->({#usn8:1.0 Is Null Is Null,`4esn`:{usn2}[.e0..$999]})))).``!)"),
    octest_legacy:ct_string("Create Constraint On()<-[`2esn`:`6esn`]-()Assert Exists(Reduce(#usn7=usn2[9e12],`3esn` In {7} Is Null|0Xa[usn2..]).`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`5esn`)Assert [Null Ends With `2esn` Ends With $usn1,0X0123456789ABCDEF[123456789],0Xa[$123456789..123.654][.e12..0.e0]].`3esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`4esn`)Assert ({`7esn`:0e0 Contains Null,#usn7:1.0 In Count(*)})-[usn2?]-(:@usn5).#usn8! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:_usn4)Assert Single(#usn7 In `2esn`[..$#usn8][..Count(*)] Where 12e12[$`3esn`]).`3esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:_usn3)Assert Reduce(_usn4=$`2esn`,#usn8 In 7[..999][..{#usn8}]|'s_str' Ends With 7 Ends With {_usn4}).`4esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:``)Assert None(`5esn` In \"d_str\" Is Null Is Null Where {_usn3}[..\"d_str\"][..`5esn`]).usn2! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn1:`3esn`]-()Assert Exists(Extract(#usn7 In `2esn`[..$#usn8][..Count(*)] Where {12}[{7}][$123456789]).`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:#usn7)Assert Exists([0X0123456789ABCDEF Ends With $@usn6 Ends With $`5esn`,Count ( * ) Contains 0X0123456789ABCDEF Contains {@usn6},0Xa Starts With {`6esn`} Starts With $usn1].`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:_usn3)Assert [`8esn` In $`5esn`[$`4esn`..{@usn6}][07..$@usn6] Where {_usn4} Starts With 0.e0 Starts With 0x0|{0}[@usn6..$1000]].#usn8? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:`5esn`]-()Assert Exists(Reduce(`7esn`=2.12 Contains usn2 Contains True,`` In 123456789 Ends With 12.e12 Ends With $`7esn`|`5esn` Starts With 010 Starts With 0.0).`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:_usn4)Assert `3esn`(Distinct `1esn` =~0 =~$#usn7,$usn1 =~``).usn1 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`4esn`)Assert Reduce(#usn7=0Xa[2.12],`5esn` In \"d_str\" Is Null Is Null|$@usn6 Ends With $_usn4 Ends With 0.12).`` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:usn2]->()Assert Exists([`5esn` In \"d_str\" Is Null Is Null].usn1!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`1esn`)Assert @usn6(0[..usn2][..{@usn5}],$`7esn` =~{`8esn`} =~$usn1).usn1 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`4esn`:@usn5]-()Assert Exists([`1esn` In `8esn`[`4esn`..{#usn8}][$12..2.12] Where usn2[{7}]].``?)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:usn1)Assert Shortestpath((`2esn` :`3esn`:@usn5)<-[`3esn`:`6esn`|`5esn` *..12{usn1:0X0123456789ABCDEF Is Null Is Null}]-(:#usn8:#usn8{`2esn`:{`1esn`}[usn1][.e1],_usn4:#usn8 Is Not Null})-[`7esn` *0X0123456789ABCDEF]->({#usn8:$`8esn`[1000..0Xa],#usn7:12.0})).`4esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`8esn`)Assert Filter(usn1 In @usn5 =~{`5esn`} =~`5esn` Where 00[`2esn`..12][123456789..0.e0]).`3esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:`8esn`]-()Assert Exists(Reduce(`4esn`=usn1 In 7 In {123456789},@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7|$`8esn` Contains 123456789 Contains $usn2).`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:@usn6]->()Assert Exists(Reduce(``=@usn5 In {`7esn`} In `2esn`,_usn4 In _usn3 Starts With 12.e12 Starts With 0.12|{_usn4}[1000..{@usn5}]).`1esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:`4esn`]-()Assert Exists(Extract(`5esn` In $999[0.0..] Where Count ( * ) Contains {`1esn`} Contains 07|0.e0[123.654][01]).`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`2esn`:@usn6]-()Assert Exists((`7esn` :@usn5$`7esn`)-[{`1esn`:{123456789}[0xabc..],@usn6:0X0123456789ABCDEF[{_usn4}..00]}]->(`7esn` {@usn5:{7}[..1.0][..9e0]}).`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:@usn5)Assert Case 0x0 Ends With $12 When {_usn4} Ends With `6esn` Then $0 Ends With 12.0 Else _usn3[$`8esn`] End.#usn7! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:#usn7)Assert Exists(`6esn`(Distinct $_usn4 Ends With usn1 Ends With $0,$`1esn`[1.0..][_usn3..]).usn1!)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:#usn7)Assert Exists({usn1:#usn7 Is Null Is Null,`5esn`:{`3esn`} In 0X7}.`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:#usn7]->()Assert Exists(`2esn`(Distinct 0X7[$999][_usn4],`1esn` =~\"d_str\").`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`5esn`)Assert ({`5esn`:`7esn`[..2.12][..{usn1}],`3esn`:12e12 Contains 0Xa})-[`1esn`? *1000..00{@usn5:.e0[..$`8esn`],`4esn`:{usn2} =~12}]->(_usn4 {usn1:True Contains {0} Contains 7})<-[``?:``$1000]-(`3esn` :`4esn`{`3esn`:0.12 =~$0 =~$0,``:0Xa =~123456789 =~_usn4}).@usn6? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:``)Assert `6esn`(Distinct `5esn` Ends With {``} Ends With 12.e12).@usn5 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:@usn6]-()Assert Exists(Any(@usn5 In 0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF] Where {`3esn`} Is Not Null Is Not Null).`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:`7esn`]-()Assert Exists([2.12 Is Null].`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn6:usn1]->()Assert Exists(Allshortestpaths((((`6esn` :`1esn`{`5esn`:$#usn8 Ends With $`2esn` Ends With $@usn6})-[`6esn`? *0..]-(`5esn` :`2esn`:usn1)-[``?{#usn7:{usn1} Is Not Null Is Not Null}]->(:`4esn`{@usn6:01234567 Is Null Is Null,usn1:$`5esn` Starts With $0 Starts With {0}})))).`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:_usn4)Assert All(`5esn` In \"d_str\" Is Null Is Null Where 1000 In {`8esn`} In 01)._usn4 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`3esn`:@usn6]-()Assert Exists([#usn8 In {`5esn`}[.e1..``] Where $`3esn` Is Not Null].#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn8:`4esn`]->()Assert Exists((:@usn5{usn1:Count ( * )[0.12...e1],`6esn`:07 Contains 0X7 Contains $`8esn`})<-[?:_usn4|:usn2]->({usn2:123.654[$`1esn`],@usn5:#usn8 Is Not Null}).`7esn`)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`2esn`)Assert Exists({`1esn`:1e1 In 123.654 In `3esn`,`3esn`:$#usn7 Is Null}.@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:usn1)Assert Exists(None(`8esn` In 01[2.12..`8esn`] Where $1000[0Xa][{#usn7}]).`5esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:`3esn`]-()Assert Exists({@usn6:01234567 Is Null Is Null,usn1:$`5esn` Starts With $0 Starts With {0}}.`3esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:`4esn`]->()Assert Exists(Any(_usn3 In {`3esn`}[`2esn`] Where 7 Ends With $`4esn`).`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn7:`8esn`]-()Assert Exists(Extract(#usn7 In {``} Is Not Null Where usn1[9e12..][$7..]).`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`6esn`)Assert None(`8esn` In $`5esn`[$`4esn`..{@usn6}][07..$@usn6] Where 123456789[{123456789}..'s_str']).`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[``:#usn8]->()Assert Exists(Reduce(`6esn`={1000} =~0 =~123.654,`5esn` In \"d_str\" Is Null Is Null|.e1[{`7esn`}..{_usn4}]).usn2!)"),
    octest_legacy:ct_string("Create Constraint On()<-[`2esn`:``]-()Assert Exists(All(`1esn` In `8esn`[`4esn`..{#usn8}][$12..2.12] Where 7 Starts With {@usn6} Starts With $``).#usn7)"),
    octest_legacy:ct_string("Create Constraint On(usn2:#usn7)Assert Exists(Extract(`` In 123456789 Ends With 12.e12 Ends With $`7esn` Where {0}|`1esn` In .e0 In {`3esn`}).#usn7?)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:#usn8)Assert Reduce(`6esn`={`6esn`}[..$@usn6][..`7esn`],@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7|{123456789} Is Null Is Null).`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`5esn`)Assert Exists(({#usn8:1.0 Is Null Is Null,`4esn`:{usn2}[.e0..$999]})<-[?:`6esn`|`5esn`*..{`8esn`:1000[Null..{123456789}]}]-(_usn4 :#usn7{@usn6:01234567 Is Null Is Null,usn1:$`5esn` Starts With $0 Starts With {0}})._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:``)Assert Exists({`8esn`:`1esn` Ends With {_usn3} Ends With `2esn`}.usn2?)"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:`5esn`]-()Assert Exists(None(@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7 Where `7esn`[9e0..]).`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:`1esn`]->()Assert Exists(Reduce(_usn4=0.0 Ends With 010 Ends With 1.e1,_usn3 In {`3esn`}[`2esn`]|01 Ends With 999 Ends With {`7esn`}).`2esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`7esn`)Assert {`5esn`:{#usn7} Is Not Null Is Not Null,`3esn`:@usn6 Starts With `6esn` Starts With $`1esn`}.``! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:#usn8)Assert Shortestpath(((`1esn` :_usn3:_usn3))).``! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:usn2)Assert 00.usn1? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:_usn4]->()Assert Exists(Filter(#usn7 In `2esn`[..$#usn8][..Count(*)] Where 0.0[$0][{@usn5}]).#usn7?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`1esn`)Assert Exists(`1esn`(Distinct `4esn`[1.0]).#usn7)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`6esn`)Assert Exists([`5esn`[7][{usn2}]].#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:#usn8)Assert Extract(_usn3 In {`3esn`}[`2esn`] Where 01[{`2esn`}..{@usn6}][$`2esn`..0.0]).`2esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`7esn`)Assert Exists(All(usn1 In @usn5 =~{`5esn`} =~`5esn` Where 0.0 In $usn1).`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn7:`7esn`]-()Assert Exists(@usn5(Distinct $_usn3[.e0..$usn2]).@usn6?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:#usn8]-()Assert Exists(Reduce(usn2=0.e0 In $#usn7 In $_usn3,`3esn` In {7} Is Null|{12} Is Null Is Null).`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:_usn4)Assert Exists(None(#usn8 In {`5esn`}[.e1..``] Where {`6esn`} =~$999).#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:@usn6)Assert [#usn7 In `2esn`[..$#usn8][..Count(*)] Where $`3esn` In $_usn4 In {_usn3}]._usn3? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`5esn`)Assert Exists({_usn4:00[`2esn`..12][123456789..0.e0],`8esn`:0x0[`4esn`..'s_str']}.#usn7)"),
    octest_legacy:ct_string("Drop Constraint On()-[``:`2esn`]->()Assert Exists([.e12 Ends With _usn4,$#usn8[9e12..][.e1..],$1000 In $1000 In $`3esn`].#usn8)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:#usn7)Assert Single(`8esn` In 01[2.12..`8esn`] Where {`2esn`} Is Not Null).@usn6! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:#usn7)Assert Any(`2esn` In `1esn` =~\"d_str\" Where 0e0 Ends With 1.e1 Ends With $`4esn`)._usn4! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`8esn`)Assert Exists(Filter(#usn8 In {`5esn`}[.e1..``] Where $`3esn` Is Not Null).`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:`2esn`]->()Assert Exists([@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7 Where True In 0e0|1.0[00..]].#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn4:_usn4]-()Assert Exists(Extract(#usn7 In `2esn`[..$#usn8][..Count(*)] Where 0.0[$0][{@usn5}]).`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[``:usn1]-()Assert Exists({@usn5:@usn6 Starts With `6esn` Starts With $`1esn`}.`4esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`8esn`)Assert Exists([2.12 =~False,`3esn`[{usn1}],usn2[9e12]].`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:_usn4)Assert Filter(_usn4 In _usn3 Starts With 12.e12 Starts With 0.12 Where $#usn7[@usn5..{1000}][1.e1..7]).`7esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`8esn`)Assert Exists(Any(`` In `` Is Not Null Is Not Null Where {0}[12.0..0Xa][$`5esn`..{_usn3}])._usn3!)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:#usn8)Assert Exists(None(`5esn` In $999[0.0..] Where {1000}[$`4esn`][\"d_str\"])._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:@usn6)Assert Exists(Allshortestpaths(((@usn6 :`1esn`{#usn8:`4esn`[1.0],``:.e12[@usn5..#usn7][010..{usn1}]}))).`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`2esn`)Assert Filter(`1esn` In `8esn`[`4esn`..{#usn8}][$12..2.12] Where usn2[{7}]).`1esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:@usn6)Assert Exists(None(#usn7 In {``} Is Not Null Where {`6esn`} =~$999).`8esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:`1esn`]-()Assert Exists(None(_usn3 In {`3esn`}[`2esn`] Where 01[{`2esn`}..{@usn6}][$`2esn`..0.0])._usn4)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:#usn8)Assert Exists(Reduce(_usn4=$@usn5 =~1000 =~1000,`8esn` In $`5esn`[$`4esn`..{@usn6}][07..$@usn6]|$`6esn`[12]).`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:``)Assert Exists(Extract(#usn7 In `2esn`[..$#usn8][..Count(*)] Where {_usn4}[...e1][..$7]|@usn6 Contains Null Contains $`7esn`).`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`4esn`)Assert Case When {@usn6} Ends With 's_str' Ends With 12.0 Then @usn6 Contains Null Contains $`7esn` End.`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:_usn4)Assert count(`1esn` Contains {usn2} Contains $#usn8).@usn6 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`2esn`)Assert None(`4esn` In $`3esn` Is Not Null Where Null Ends With {`5esn`} Ends With 0.e0).`4esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:_usn4)Assert {`7esn`:{0} Ends With $_usn3 Ends With $`7esn`,`8esn`:.e1[{`7esn`}..{_usn4}]}.`5esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:``)Assert `7esn`($999,12e12 Contains 0Xa).`2esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:#usn8)Assert Exists({usn1:{#usn7} Is Not Null Is Not Null}.usn1?)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:`3esn`]->()Assert Exists(Allshortestpaths(((:`1esn`{@usn6:$usn1 Ends With $`` Ends With $12})-[]-(`` :_usn4{@usn5:123.654[True..$#usn8][0.12..Count(*)]})-[{_usn4:`4esn`[`5esn`..12][@usn6..False],#usn7:0Xa[usn2..]}]-(:``:#usn8{_usn3:1000[Null..{123456789}],`5esn`:$1000[`2esn`..`5esn`][1e1..1.e1]}))).@usn6?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:``)Assert (:#usn8:#usn8)<-[? *0X7..{#usn8:{1000} Is Null Is Null,`3esn`:0.e0 Starts With 12.e12 Starts With {_usn4}}]->(`6esn` :_usn3:_usn3{``:$usn1 Ends With $`` Ends With $12}).`` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`4esn`)Assert Exists(Case {_usn4} Is Not Null Is Not Null When {#usn8} Is Not Null Then $`8esn`[..00] When $#usn7[..{`5esn`}][..9e12] Then `7esn`[$0][9e12] End.`5esn`)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`4esn`)Assert Exists(Single(#usn7 In {``} Is Not Null Where {`2esn`} Ends With {`7esn`}).`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`2esn`:#usn7]-()Assert Exists(`4esn`(Distinct False =~$7 =~2.12,$`7esn` Is Null Is Null)._usn3)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`8esn`)Assert [`8esn` In $`5esn`[$`4esn`..{@usn6}][07..$@usn6] Where 123456789 Ends With 12.e12 Ends With $`7esn`|123.654[{7}..]]._usn4! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:`5esn`)Assert Reduce(`3esn`=#usn7 Starts With {#usn7} Starts With `7esn`,`4esn` In $`3esn` Is Not Null|{@usn5}[{#usn8}][9e0]).#usn8! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`4esn`)Assert Any(`3esn` In {7} Is Null Where 1.0 Starts With 12e12 Starts With {`5esn`}).`6esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`2esn`:`5esn`]-()Assert Exists(`6esn`(.e1 =~$`8esn`)._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:#usn7)Assert _usn4(#usn7 Starts With {#usn7} Starts With `7esn`,$999).usn1! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:_usn4]-()Assert Exists({``:_usn4 Starts With $_usn4 Starts With 12.e12}.`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`4esn`)Assert Allshortestpaths((:`1esn`{`2esn`:$12 Is Null Is Null,_usn4:$#usn8[9e12..][.e1..]})-[?:`6esn`|`5esn`{`4esn`:`7esn` In {123456789} In `1esn`,_usn3:$_usn4[Count ( * )..]}]-(#usn8 :`5esn`{`6esn`:2.12 Contains usn2 Contains True,`4esn`:{@usn5} Is Null Is Null})-[`1esn`:_usn4|:usn2]-(`8esn` :`8esn`:`7esn`)).@usn5? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn6:@usn6)Assert Case `4esn`[1.0] When {@usn5}[{#usn8}][9e0] Then {7} In `2esn` When 0Xa Starts With {`6esn`} Starts With $usn1 Then {`6esn`} Contains \"d_str\" End._usn3 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:_usn4)Assert Single(`` In 123456789 Ends With 12.e12 Ends With $`7esn` Where 010 =~{usn2}).@usn5 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:``)Assert None(`4esn` In $`3esn` Is Not Null Where {999} Contains .e0 Contains 12.0).`6esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`1esn`)Assert Exists(All(#usn7 In `2esn`[..$#usn8][..Count(*)] Where _usn4 Contains 2.12).`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`2esn`:`6esn`]-()Assert Exists(Case 0X7[{@usn6}] When `4esn`[..010][..{12}] Then $_usn3[{#usn7}] End.@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn1:usn2]-()Assert Exists(`4esn`(01234567 Ends With .e12 Ends With $#usn7,.e12 Is Not Null Is Not Null).@usn5!)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`4esn`)Assert Exists(Extract(usn1 In @usn5 =~{`5esn`} =~`5esn` Where 0X7[`7esn`][123.654]|$@usn5 Starts With {0} Starts With 12).@usn6?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:`7esn`]-()Assert Exists(Reduce(``=0x0[{`7esn`}..][$usn2..],`5esn` In \"d_str\" Is Null Is Null|$`1esn`[1.0..][_usn3..]).@usn6)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:usn1)Assert Exists((`8esn` {#usn8:@usn5 In {`7esn`} In `2esn`,`8esn`:Count ( * ) Contains `8esn` Contains .e1})-[`7esn`?:`5esn`]->(:@usn6:#usn8{`4esn`:$`8esn`[..00]}).`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:`8esn`]->()Assert Exists({_usn3:Null Ends With {`5esn`} Ends With 0.e0,@usn5:$`7esn` =~{`8esn`} =~$usn1}.`1esn`!)"),
    octest_legacy:ct_string("Create Index On:@usn6(@usn5)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:usn2)Assert Exists(Reduce(#usn8=$_usn4[0e0..][False..],`8esn` In $`5esn`[$`4esn`..{@usn6}][07..$@usn6]|#usn8[#usn8..])._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn6:_usn3]->()Assert Exists({_usn4:usn1 Is Not Null}.`1esn`)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`4esn`)Assert [_usn3 In {`3esn`}[`2esn`] Where 1e1 In 123.654 In `3esn`|.e1[..usn2][..`8esn`]].usn2 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:@usn5)Assert Exists([_usn3[_usn3..][12.e12..],$`7esn` Is Null Is Null].usn1!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:`5esn`]-()Assert Exists({`5esn`:`7esn`[..2.12][..{usn1}],`3esn`:12e12 Contains 0Xa}.@usn5)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:usn2)Assert Exists(Shortestpath(((:#usn8:#usn8{_usn4})<-[usn1?:`7esn`]-(:usn1{usn1:{`6esn`}}))).@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn4:`2esn`]-()Assert Exists(Extract(`1esn` In {`6esn`}[..$@usn6][..`7esn`] Where $_usn3[Count(*)]|{_usn4} In {12} In $0).`7esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`1esn`)Assert Exists({usn2:_usn3[$`8esn`]}.`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:usn1)Assert [$_usn4[Count ( * )..],$`3esn` In $`6esn` In $``,$`6esn`[123456789..12][True..{`3esn`}]]._usn4! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn2:``)Assert Reduce(`3esn`=0.e0 In $#usn7 In $_usn3,@usn5 In 0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF]|`8esn` Contains $usn1 Contains $12).@usn5 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:#usn8)Assert Exists(Case When 9e1[$usn2] Then $`` Is Not Null When 1.0[0e0..0.e0] Then 01[{`2esn`}..{@usn6}][$`2esn`..0.0] End.usn1)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`3esn`)Assert Extract(_usn4 In _usn3 Starts With 12.e12 Starts With 0.12 Where $`5esn`[`3esn`..]).usn2! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`4esn`:``]-()Assert Exists([#usn8 In {`5esn`}[.e1..``] Where {7}[..12e12][..Count ( * )]].`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On(usn1:#usn7)Assert [9e1[2.12..{#usn8}],01 Is Null].usn1! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:usn2)Assert Exists(Reduce(`4esn`=`7esn`[..2.12][..00],`5esn` In $999[0.0..]|0X0123456789ABCDEF =~1e1 =~{`4esn`}).`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`1esn`)Assert Shortestpath(((`5esn` :`2esn`:usn1)))._usn3 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`3esn`)Assert Exists(Extract(@usn5 In 0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF] Where {7} In `2esn`).``?)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`2esn`)Assert [`1esn` In `8esn`[`4esn`..{#usn8}][$12..2.12] Where $@usn5 =~1000 =~1000|`6esn` In 0Xa].@usn6? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:#usn7)Assert Extract(@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7 Where $`3esn` In $`6esn` In $``).`7esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:`2esn`]->()Assert Exists(Case When 07 Contains 0X7 Contains $`8esn` Then {`4esn`} =~9e0 =~{12} When .e1 Ends With 1e1 Ends With @usn5 Then $#usn8[Count ( * )] Else Count ( * )[True..][{#usn7}..] End.`6esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn8:@usn6]-()Assert Exists({`4esn`:Null In $7 In .e1,_usn3:usn2 Is Null}.#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:@usn5)Assert Exists({#usn8:1.0 Is Null Is Null,`4esn`:{usn2}[.e0..$999]}._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:``)Assert Exists((_usn4 :_usn4{#usn7:12[1.e1..{_usn3}][1.e1..1.0],_usn4:Null[$`5esn`][False]})-[`8esn`?]-(`7esn` {``:$123456789 Starts With 9e0 Starts With 's_str',``:{``} Is Not Null})<-[`2esn`?*..{`2esn`:$`5esn`[..$`5esn`][..$12]}]-(`1esn` :`5esn`{`5esn`:{``} Is Null}).usn2)"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:#usn7]->()Assert Exists(({`5esn`:2.12 Ends With $_usn3 Ends With `3esn`})-[`2esn` *..999{`7esn`:7[{0}..{_usn4}]}]-(#usn7 )<-[`8esn`?{`2esn`:Count ( * ) Contains {`1esn`} Contains 07,#usn7:`7esn`[..2.12][..00]}]->(`4esn` {`7esn`:{999} Contains .e0 Contains 12.0,@usn5:`5esn` Is Null}).`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:_usn3)Assert Exists(usn1($`3esn` In $_usn4 In {_usn3}).@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn8:_usn3]-()Assert Exists([`5esn` Starts With $`2esn` Starts With $1000,{`1esn`}[12.0..`2esn`][@usn6..{usn1}]].`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:#usn7)Assert (@usn6 :`4esn`)<-[?:@usn6|`6esn`{`2esn`:`3esn`[{0}][usn1],``:usn1 Is Null Is Null}]->({``:00 Starts With 0xabc,`3esn`:$`1esn` Ends With 9e1 Ends With $123456789}).usn1 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[``:usn1]->()Assert Exists([Count ( * ) Contains `8esn` Contains .e1,0.12 =~$0 =~$0].usn1)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:`7esn`]->()Assert Exists(None(`4esn` In $`3esn` Is Not Null Where Null Ends With {`5esn`} Ends With 0.e0).`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:usn2)Assert Exists(Case When {usn1} In 2.12 In 1000 Then `5esn` Ends With {``} Ends With 12.e12 When .e12 Is Not Null Is Not Null Then _usn4 Is Null Is Null End.usn2!)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`3esn`)Assert (`6esn` {usn2:$1000 =~$`2esn`,`4esn`:{``}[010..][0xabc..]})-[:`6esn`|`5esn`]-({#usn7:{123456789}[0X0123456789ABCDEF..07][{`1esn`}.._usn4],#usn8:$usn1[.._usn4][..False]}).`6esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:@usn6)Assert Exists(Case When 1.0 =~7 =~{usn2} Then \"d_str\"[..{@usn5}][..``] Else @usn6 Contains Null Contains $`7esn` End.usn2!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:#usn8)Assert [$123456789 =~{`6esn`} =~\"d_str\",0e0 Contains Null,usn1 Is Null].`1esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:``)Assert $7.@usn5! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`3esn`)Assert Exists(count($1000 Is Null,0Xa[$123456789..123.654][.e12..0.e0]).`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`6esn`)Assert {`6esn`:#usn8[..{#usn7}],@usn5:`8esn`[`4esn`..{#usn8}][$12..2.12]}.`3esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`3esn`)Assert Exists((#usn7 :usn1{_usn4:\"d_str\" Is Null Is Null,usn1:$`3esn` Is Null})<-[usn2?:`5esn` *0..]-(_usn4 $999)-[usn1:`8esn`]-({_usn3:0.e0 Starts With `2esn`,#usn7:1.0 Is Null Is Null}).@usn5)"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:#usn7]->()Assert Exists((:@usn6:#usn8$`5esn`)<-[`1esn`?:usn1|@usn6 *0..]-(:#usn8:#usn8{@usn6:$_usn3[..1000]})-[:`5esn`{usn2:123.654[{7}..]}]->(@usn6 :_usn3:_usn3{`7esn`:$`6esn`[123456789..12][True..{`3esn`}],`5esn`:0X0123456789ABCDEF[123456789]})._usn3)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:`7esn`]-()Assert Exists(Extract(_usn4 In _usn3 Starts With 12.e12 Starts With 0.12 Where \"d_str\" Starts With 01).usn1)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:`4esn`]->()Assert Exists((`` {usn2:9e0[..999],`2esn`:0e0 In @usn5})<-[`4esn`?:`1esn` *..999{`4esn`:False,_usn4:$`7esn` Is Null Is Null}]->({@usn5:12e12 Contains 0Xa,_usn4:01[2.12..`8esn`]})<-[?:`3esn`|:#usn8 *0X0123456789ABCDEF]->(#usn7 :_usn4).``?)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:usn2]-()Assert Exists(Extract(@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7 Where `5esn` Starts With `3esn`|$1000 In $1000 In $`3esn`).`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:_usn3)Assert Reduce(usn2=2.12 Is Null,#usn7 In {``} Is Not Null|0.e0 Contains 9e1 Contains {`7esn`})._usn4? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`2esn`)Assert Exists([_usn3[_usn3..][12.e12..],$`7esn` Is Null Is Null].usn1!)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:usn1)Assert Exists([@usn5 Is Null].`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:`6esn`]-()Assert Exists(Any(#usn7 In {``} Is Not Null Where {`1esn`}[usn1][.e1]).#usn8?)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:#usn8)Assert Case When $_usn4 Starts With 1e1 Then _usn3[$`8esn`] When usn1 Is Not Null Then $0[12.e12..] Else `1esn` =~0 =~$#usn7 End.@usn5? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn5:`3esn`]-()Assert Exists({_usn4:00 Starts With 0xabc}.`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`2esn`)Assert Exists(Case 1000[Null..{123456789}] When 12.e12 Starts With {999} Starts With {`1esn`} Then 0 In `2esn` In 010 When `7esn`[$0][9e12] Then `6esn`[..$@usn6] End._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:@usn6)Assert Exists(Reduce(usn1=7[{0}..{_usn4}],`` In 123456789 Ends With 12.e12 Ends With $`7esn`|$999 Is Not Null)._usn3)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`3esn`)Assert {#usn8:$`7esn`['s_str'],_usn3:{999}[1000..{usn2}]}.usn1 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:`3esn`)Assert Reduce(usn2=$`4esn`[..$`3esn`][..0.0],`3esn` In {7} Is Null|{`5esn`} Contains $0 Contains {``}).@usn6! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:_usn4)Assert Reduce(@usn5=$12[$1000..123456789],`1esn` In {`6esn`}[..$@usn6][..`7esn`]|`4esn` Is Not Null Is Not Null).`1esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`3esn`)Assert Exists([@usn6 Starts With `6esn` Starts With $`1esn`,9e12[{123456789}..#usn8][{_usn3}..{#usn7}]].@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn7:`6esn`]->()Assert Exists(Case When #usn7 Starts With {#usn7} Starts With `7esn` Then $`7esn` =~{`8esn`} =~$usn1 When $`1esn` =~0X7 Then usn1[9e12..][$7..] End._usn3)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:#usn7)Assert Exists(({@usn5:12e12 Contains 0Xa,_usn4:01[2.12..`8esn`]})-[?:`4esn` *..010{#usn8:{123456789} Is Null Is Null}]-({`2esn`:{`5esn`}[.e1..``],`1esn`:0.12 =~$0 =~$0}).usn1)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`8esn`)Assert Exists(Case usn1 Ends With $@usn6 Ends With `3esn` When $`7esn`['s_str'] Then 0X0123456789ABCDEF =~1e1 =~{`4esn`} When Null Ends With `2esn` Ends With $usn1 Then {#usn7}[9e1..][{123456789}..] Else {_usn3}[12.e12] End.`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn7:_usn3]-()Assert Exists(Case 0Xa[2.12] When `1esn`[..{@usn6}][..$123456789] Then `3esn`[{`2esn`}] Else $1000[0Xa][{#usn7}] End.`1esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[`8esn`:`4esn`]-()Assert Exists(Reduce(`2esn`=$@usn5 Starts With 01 Starts With .e0,`1esn` In `8esn`[`4esn`..{#usn8}][$12..2.12]|usn2[{7}]).`6esn`)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:``)Assert `5esn`({12} Ends With 1.0 Ends With .e0).@usn6 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`5esn`)Assert Exists(Reduce(@usn5=0e0 In @usn5,@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7|{999} Is Null Is Null).`3esn`)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`1esn`)Assert Exists(Extract(@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7 Where {123456789} Contains $#usn8).`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`8esn`)Assert $123456789.@usn5! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:usn1)Assert Extract(`5esn` In $999[0.0..] Where {999}|9e1[$usn2]).usn1 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn4:#usn7]-()Assert Exists(All(`8esn` In 01[2.12..`8esn`] Where {`3esn`}[`2esn`]).@usn5?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:_usn4)Assert Exists(Reduce(#usn7=0.0[$0][{@usn5}],#usn8 In {`5esn`}[.e1..``]|00[$`7esn`])._usn4?)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:_usn3)Assert Exists({``:@usn5 Is Null,`8esn`:123.654[0e0..$``][$`1esn`..$`8esn`]}.`7esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`5esn`)Assert Exists(None(_usn3 In {`3esn`}[`2esn`] Where 123456789[{123456789}..'s_str']).``)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`1esn`)Assert Exists(Reduce(#usn8={`7esn`} Is Null,usn1 In @usn5 =~{`5esn`} =~`5esn`|010 =~{usn2}).@usn6!)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`6esn`)Assert Exists(Filter(_usn3 In {`3esn`}[`2esn`] Where _usn3 Contains $123456789 Contains ``).#usn8)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn2:`6esn`]-()Assert Exists(Single(usn1 In @usn5 =~{`5esn`} =~`5esn` Where 1.0 =~7 =~{usn2}).usn1?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`2esn`:_usn4]-()Assert Exists({`4esn`:`7esn` In {123456789} In `1esn`,_usn3:$_usn4[Count ( * )..]}._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:`8esn`]-()Assert Exists(Case When #usn7[usn1][$`5esn`] Then {1000} Is Null Is Null End.`5esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:#usn7)Assert Case When _usn3[$`8esn`] Then $0[..9e1] End.`7esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn5:#usn8]->()Assert Exists(Filter(`5esn` In $999[0.0..] Where $1000[0Xa][{#usn7}]).`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On()<-[`1esn`:usn1]-()Assert Exists([`5esn` In $999[0.0..] Where {@usn6} Ends With 's_str' Ends With 12.0].`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:#usn8)Assert count($`5esn` Is Not Null Is Not Null).usn1 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:#usn7]->()Assert Exists([2.12 Ends With $_usn3 Ends With `3esn`,#usn7,01[{@usn5}]].`6esn`)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:@usn6)Assert Exists(Case When _usn3[_usn3..][12.e12..] Then $12[True..][{0}..] End.@usn5!)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn2:`7esn`]-()Assert Exists([07 In `2esn` In 12e12,01 =~{_usn3} =~`3esn`,{12}[..0X7]].`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:usn1)Assert Exists(Allshortestpaths(((:`5esn`{``:1.0[0e0..0.e0]})-[_usn4:#usn8|`1esn`{`6esn`:#usn8[..{#usn7}]}]->(#usn7 :`4esn`)))._usn3!)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`5esn`)Assert Filter(`8esn` In $`5esn`[$`4esn`..{@usn6}][07..$@usn6] Where usn1 Ends With $@usn6 Ends With `3esn`).`6esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:usn2)Assert Exists(@usn5(Distinct 12 Ends With 0x0 Ends With 0.e0)._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`1esn`)Assert Extract(`8esn` In $`5esn`[$`4esn`..{@usn6}][07..$@usn6] Where usn1 Ends With $@usn6 Ends With `3esn`|$`6esn` Ends With Count(*)).@usn5! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[``:@usn6]-()Assert Exists((`6esn` {_usn4:0Xa =~Null =~$``})-[`6esn`?:#usn8|`1esn`]->(_usn3 :@usn5).`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:@usn6)Assert Exists([`8esn` In $`5esn`[$`4esn`..{@usn6}][07..$@usn6] Where {@usn6}[7]|{1000}[$`4esn`][\"d_str\"]].`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`4esn`)Assert Exists(Extract(`` In 123456789 Ends With 12.e12 Ends With $`7esn` Where 123.654 Contains $`4esn` Contains 1.0)._usn3)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:usn2)Assert None(#usn8 In {`5esn`}[.e1..``] Where $@usn6 Contains 07).@usn5 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:@usn5)Assert Reduce(@usn6=`` Ends With 0Xa Ends With `2esn`,`1esn` In {`6esn`}[..$@usn6][..`7esn`]|01[2.12..`8esn`]).#usn7! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:@usn6)Assert Exists(`2esn`(Distinct $`4esn`[9e12..123.654]).@usn6)"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:`4esn`]->()Assert Exists(Filter(#usn8 In 7[..999][..{#usn8}] Where $_usn3 In {1000} In 0.12).#usn7?)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:#usn8)Assert Case 0X7[$999][_usn4] When `6esn`[..$@usn6] Then 7[$`2esn`..{`5esn`}] Else `7esn` Starts With $#usn7 Starts With $`7esn` End.usn2 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn5:`4esn`]-()Assert Exists([`7esn` Is Null,.e12 Ends With _usn4,{``} Is Null].`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`8esn`)Assert None(#usn7 In `2esn`[..$#usn8][..Count(*)] Where 0[{usn2}..][$`6esn`..]).@usn5? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:usn2]->()Assert Exists(Reduce(_usn3={#usn8} Is Not Null,_usn3 In {`3esn`}[`2esn`]|0[.e0..{`1esn`}]).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`2esn`)Assert Reduce(_usn4={7} In `2esn`,`4esn` In $`3esn` Is Not Null|`6esn` In 0Xa).`6esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`6esn`)Assert {`4esn`:`7esn` In {123456789} In `1esn`,_usn3:$_usn4[Count ( * )..]}.`8esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:_usn3]->()Assert Exists(Filter(_usn3 In {`3esn`}[`2esn`] Where False =~$7 =~2.12).`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On(``:#usn7)Assert Case When \"d_str\" Contains {123456789} Contains 01 Then 0X7 =~9e1 When {`5esn`}[.e1..``] Then $_usn4[1.e1]['s_str'] End.#usn7! Is Unique"),
    octest_legacy:ct_string("Drop Index On:usn2(`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:`2esn`]->()Assert Exists(Shortestpath((((`` :#usn7)-[@usn6?:#usn8|`1esn`{usn1:`5esn`[.e0..][07..]}]-(usn2 :``:#usn8{`5esn`:$#usn8[$`8esn`..{`8esn`}]})-[`3esn`?:`8esn`{`8esn`:{0} In _usn4,_usn3:`7esn`[..2.12][..{usn1}]}]-({#usn7:{`7esn`} Starts With $123456789 Starts With $@usn6})))).`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:usn1)Assert Exists(Any(#usn8 In {`5esn`}[.e1..``] Where {7}[..12e12][..Count ( * )]).`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:#usn8)Assert Single(@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7 Where $@usn5 Is Not Null)._usn3! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`4esn`)Assert Exists(Case True[{`7esn`}..] When .e1 Is Null Is Null Then `3esn`[..$12][..{`7esn`}] When {_usn3}[..$12][..0.12] Then $7[0.12][usn1] End._usn3)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`3esn`:`2esn`]-()Assert Exists({``:7 =~{`8esn`} =~$`6esn`}.usn2!)"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:`3esn`]->()Assert Exists(`7esn`(Distinct 123.654[`3esn`..]).`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`8esn`)Assert Exists((`7esn` :``:#usn8)-[usn2?:#usn7]-(:`4esn`{``:2.12 Is Not Null Is Not Null})<-[`5esn`? *..12{`8esn`:{`7esn`}[`6esn`][#usn7],`1esn`:0x0 Ends With $12}]->({`7esn`:00[{`8esn`}..][{`8esn`}..],#usn8:$@usn5 =~1000 =~1000}).``!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:usn2)Assert {@usn6:{999} Starts With $999,`4esn`:$usn1[{`5esn`}][$`6esn`]}.@usn6 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:@usn6]->()Assert Exists(All(usn1 In @usn5 =~{`5esn`} =~`5esn` Where 0.0 In $usn1).`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:usn1]-()Assert Exists(Any(usn1 In @usn5 =~{`5esn`} =~`5esn` Where usn2 Is Not Null Is Not Null).`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`5esn`)Assert [{12} Contains {123456789} Contains `4esn`,1.e1[`8esn`][00],1.0[$`1esn`..][$123456789..]].usn1? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:`7esn`]-()Assert Exists({#usn7:'s_str' Is Not Null Is Not Null}.#usn8)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:#usn8)Assert {`6esn`:{``} Is Not Null}._usn3 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:`1esn`]->()Assert Exists(Shortestpath((`2esn` :#usn7{`2esn`:$`5esn`[..$`5esn`][..$12]})).`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`7esn`)Assert [.e0 Starts With $`` Starts With $usn2].#usn8? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:@usn6]->()Assert Exists(Reduce(@usn5=$`5esn` In $`6esn`,#usn7 In `2esn`[..$#usn8][..Count(*)]|$#usn7[#usn7..]).`5esn`!)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`3esn`)Assert Exists(count(Distinct 1e1 In 123.654 In `3esn`).`7esn`)"),
    octest_legacy:ct_string("Create Constraint On(usn2:@usn6)Assert Exists(Extract(#usn8 In 7[..999][..{#usn8}] Where `8esn` Ends With 999 Ends With .e12|'s_str'[00][{`5esn`}]).`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:_usn4)Assert [#usn8[`3esn`..][{#usn7}..],$`5esn`[..$`5esn`][..$12],0.e0[123.654][01]].``? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn6:usn2]-()Assert Exists({`5esn`:00 Starts With 0xabc,`6esn`:0Xa =~Null =~$``}._usn4?)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`8esn`)Assert None(#usn8 In 7[..999][..{#usn8}] Where `5esn`[{`4esn`}..`2esn`]).`6esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:_usn4]->()Assert Exists(Allshortestpaths((((`3esn` :`8esn`:`7esn`)-[`7esn`:#usn8|`1esn` *0xabc..]->(#usn7 :`3esn`:@usn5{`7esn`:0x0[`4esn`..'s_str']})-[`2esn`?:`7esn` *..07$0]-(`7esn` :`3esn`:@usn5{`1esn`:$`5esn`[`3esn`..]})))).``!)"),
    octest_legacy:ct_string("Create Constraint On(usn2:usn2)Assert Any(`3esn` In {7} Is Null Where \"d_str\" Contains {123456789} Contains 01).usn1! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:`2esn`)Assert Exists(Allshortestpaths((`` {usn2:9e0[..999],`2esn`:0e0 In @usn5})-[`4esn`:`2esn` *1000..00{#usn8:1.0[0e0..0.e0]}]->(`3esn` :@usn5{`4esn`:0Xa[$123456789..123.654][.e12..0.e0],`7esn`:$`8esn`[..00]})<-[@usn5{`1esn`:{`8esn`} Ends With `6esn`}]->(usn1 {`4esn`:$@usn5 Is Not Null,`5esn`:0.e0 Contains 9e1 Contains {`7esn`}})).`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`2esn`)Assert Exists(Extract(@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7 Where usn2[$7..$123456789][$@usn6..$7]|0xabc[01..{999}][{7}..{`7esn`}]).`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:_usn4]->()Assert Exists(Extract(#usn8 In 7[..999][..{#usn8}] Where $_usn4[1.e1]['s_str']|{_usn4}[1000..{@usn5}]).usn2?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:``)Assert Exists(None(`` In `` Is Not Null Is Not Null Where {`6esn`} Contains \"d_str\")._usn3)"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:`6esn`]-()Assert Exists(Extract(#usn7 In {``} Is Not Null Where {`1esn`}[usn1][.e1]|`6esn` In 0Xa)._usn3?)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:``]->()Assert Exists((:usn2{`3esn`:0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF]})<-[ *..999{@usn5:`` Is Not Null Is Not Null,_usn3:{`3esn`} Is Not Null Is Not Null}]->(`7esn` {usn2:`2esn`[..$#usn8][..Count(*)]})-[@usn6?$0]-(:_usn4{`6esn`:$usn1 In {999} In $#usn7,_usn4:#usn7}).usn2!)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`8esn`)Assert Exists((`5esn` :_usn4{`5esn`:07[..True][..9e12]})-[`8esn`?:`2esn`{@usn6:{12}[..0X7]}]->(`5esn` :`2esn`:usn1{`8esn`:$`2esn`[2.12..'s_str'][{@usn6}.._usn4],usn2:`4esn`[..Count ( * )][..{#usn7}]})<-[_usn4{`5esn`:$_usn3 Contains 999 Contains \"d_str\",``:$usn1 Ends With $`` Ends With $12}]->(_usn4 :#usn8:#usn8{`8esn`:'s_str' In 00})._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`1esn`)Assert Exists(Extract(`8esn` In $`5esn`[$`4esn`..{@usn6}][07..$@usn6] Where 01234567 Is Null Is Null|.e12 Is Not Null Is Not Null).#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:@usn6)Assert Exists(Case When {usn2} Then $0[$`1esn`..07] When False Is Null Is Null Then .e0 Starts With $`` Starts With $usn2 End.#usn8!)"),
    octest_legacy:ct_string("Drop Index On:@usn6(usn1)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`3esn`)Assert (:usn1{usn1:`5esn`[_usn4..]})<-[@usn6:_usn4|:usn2]->(:`7esn`:_usn3{@usn5:.e0 Starts With 0 Starts With 0.e0,usn2:Count ( * ) Contains 07})<-[@usn5?:@usn5 *..010{`5esn`:False Contains {`6esn`}}]->(@usn5 {_usn4:`4esn` Ends With 07 Ends With {`3esn`},usn2:$0[$`1esn`..07]})._usn3! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:usn2)Assert Exists(Case $`7esn` =~{`8esn`} =~$usn1 When 0e0 Starts With 1000 Starts With #usn7 Then 0.0 In $usn1 End.`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn2:#usn7]-()Assert Exists(All(`5esn` In $999[0.0..] Where Count ( * ) Contains {`1esn`} Contains 07).`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`2esn`)Assert Exists(Case $`2esn` When {`3esn`}[@usn6..0Xa][{12}..0Xa] Then .e0[..$`8esn`] When 0.12 =~`5esn` =~`5esn` Then {@usn6}[$`6esn`..`4esn`] End.#usn7?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`8esn`:`4esn`]-()Assert Exists({@usn5:12e12 Contains 0Xa,_usn4:01[2.12..`8esn`]}.@usn5)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn1:#usn7]-()Assert Exists(Reduce(_usn4=$0[$`1esn`..07],`8esn` In $`5esn`[$`4esn`..{@usn6}][07..$@usn6]|.e0 Starts With 0 Starts With 0.e0)._usn3)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`5esn`)Assert Reduce(_usn3=0Xa[usn2..],`` In 123456789 Ends With 12.e12 Ends With $`7esn`|`3esn`[{0}][usn1])._usn4 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`7esn`)Assert Null.#usn8? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:#usn8)Assert [.e1[{`7esn`}..{_usn4}]].`2esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:#usn8)Assert {`6esn`:#usn8}.usn2? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:usn2)Assert Reduce(@usn6=#usn7 Starts With {#usn7} Starts With `7esn`,#usn7 In `2esn`[..$#usn8][..Count(*)]|12e12[$`3esn`]).`2esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:_usn4)Assert Exists((`4esn` {`6esn`:#usn8[..{#usn7}]})<-[`2esn`:@usn5 *0..{`1esn`:0.12[$`3esn`..$_usn3][12.0..usn1]}]-(`4esn` :#usn7).`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`6esn`)Assert Extract(`` In `` Is Not Null Is Not Null Where 1000 In {`8esn`} In 01|_usn3 Starts With 12.e12 Starts With 0.12).`4esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn7:`1esn`]-()Assert Exists(Reduce(``=@usn5 In {`7esn`} In `2esn`,_usn4 In _usn3 Starts With 12.e12 Starts With 0.12|{_usn4}[1000..{@usn5}]).`2esn`)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:#usn8)Assert (`3esn` {@usn5:$usn2[9e0]})<-[`5esn`?:`8esn` *1000..00]->(:_usn4{`6esn`:$usn1 In {999} In $#usn7,_usn4:#usn7}).`5esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn8:usn2]-()Assert Exists(Filter(#usn7 In `2esn`[..$#usn8][..Count(*)] Where 00[{`8esn`}..][{`8esn`}..]).`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`3esn`)Assert (@usn5 :`8esn`:`7esn`{`6esn`:`7esn`[$0][9e12],`4esn`:.e1 Is Null Is Null})<-[``?:#usn8|`1esn`{#usn8:@usn5 In {`7esn`} In `2esn`,`8esn`:Count ( * ) Contains `8esn` Contains .e1}]->({@usn5:12e12 Contains 0Xa,_usn4:01[2.12..`8esn`]})<-[`4esn`:``{usn1:`` Is Not Null Is Not Null,usn1:{1000}[{_usn3}..]}]->(`7esn` {`6esn`:$usn1 Ends With $`` Ends With $12,usn1:@usn6[$`3esn`..{`3esn`}]}).`7esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:``)Assert ({@usn5:_usn3 Contains $123456789 Contains ``,_usn4:{``} Ends With `7esn` Ends With 0.0})-[`4esn`:@usn5 *00{#usn8:{`7esn`} Starts With $123456789 Starts With $@usn6}]->(#usn7 :usn1).#usn7! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:usn2]->()Assert Exists({#usn8:{`7esn`}[..{`4esn`}]}.`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:`6esn`]->()Assert Exists([@usn5 In 0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF] Where 01[2.12..`8esn`]|{0} Ends With $_usn3 Ends With $`7esn`].``)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn2:`4esn`]-()Assert Exists([@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7 Where 01[2.12..`8esn`]|{1000}[{_usn3}..]].`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(``:`2esn`)Assert Reduce(_usn4=`7esn`[9e0..],`` In `` Is Not Null Is Not Null|Count ( * )[True..][{#usn7}..]).`7esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:`1esn`]-()Assert Exists(`7esn`({0}[01][`7esn`],False =~$7 =~2.12).`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:_usn3)Assert Exists(Extract(_usn3 In {`3esn`}[`2esn`] Where {1000} =~0 =~123.654)._usn3?)"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:`1esn`]-()Assert Exists((:_usn4{usn2:0.0 Ends With 010 Ends With 1.e1})-[`4esn`:``{usn1:`` Is Not Null Is Not Null,usn1:{1000}[{_usn3}..]}]-(`3esn` :_usn4)<-[_usn4{`8esn`:usn1 Is Null Is Null,@usn5:@usn6 Is Null Is Null}]-(_usn4 :_usn4{#usn7:12[1.e1..{_usn3}][1.e1..1.0],_usn4:Null[$`5esn`][False]}).`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn5:_usn3]-()Assert Exists(Extract(@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7 Where usn1 Ends With $@usn6 Ends With `3esn`).`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:``)Assert Reduce(#usn7=`7esn` Starts With $#usn7 Starts With $`7esn`,#usn8 In 7[..999][..{#usn8}]|`1esn` Ends With {_usn3} Ends With `2esn`).`4esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`3esn`)Assert Exists(Extract(`3esn` In {7} Is Null Where 1e1 Contains Count ( * )|12.e12[9e12..{`6esn`}]).`6esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:`7esn`]->()Assert Exists({#usn8:7 Starts With {@usn6} Starts With $``,`6esn`:{`2esn`} Is Not Null Is Not Null}.`3esn`)"),
    octest_legacy:ct_string("Create Constraint On(usn1:@usn6)Assert (_usn3 :usn1{`6esn`:$usn1 Ends With $`` Ends With $12})<-[@usn6 *..01{#usn7:@usn6 Contains $1000 Contains {`7esn`},@usn5:`2esn` Starts With $_usn4}]->(`6esn` :@usn6:#usn8)<-[`5esn`{usn1:\"d_str\" Starts With $123456789,``:Count ( * ) Contains 07}]->(_usn3 {#usn8:_usn4 Is Null Is Null}).`8esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:`2esn`]->()Assert Exists(Reduce(#usn7=`` Is Not Null Is Not Null,`1esn` In {`6esn`}[..$@usn6][..`7esn`]|{`7esn`}[..$@usn5][..$#usn8]).`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`1esn`)Assert (`` {@usn6:1.0[$`1esn`..][$123456789..]})<-[ *..999{@usn5:`` Is Not Null Is Not Null,_usn3:{`3esn`} Is Not Null Is Not Null}]->(:``:#usn8{usn1:{`6esn`}}).``? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:usn1)Assert Extract(#usn7 In `2esn`[..$#usn8][..Count(*)] Where 0Xa Starts With {`6esn`} Starts With $usn1|00[$`7esn`]).#usn8! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:@usn5)Assert Exists([$#usn7 Contains 0x0 Contains 1000]._usn4?)"),
    octest_legacy:ct_string("Create Index On:`6esn`(`5esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:`7esn`]->()Assert Exists(Filter(@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7 Where 0 In `2esn` In 010).`7esn`)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:_usn4)Assert Extract(#usn7 In {``} Is Not Null Where 123456789[0xabc..'s_str'][``..`1esn`]).`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`2esn`)Assert Exists(Any(`1esn` In {`6esn`}[..$@usn6][..`7esn`] Where 0.e0[123.654][01]).#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`2esn`:#usn7]-()Assert Exists([`1esn` In `8esn`[`4esn`..{#usn8}][$12..2.12] Where usn1 Starts With usn1 Starts With $``|`4esn` =~$`5esn`].usn2)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`4esn`)Assert [_usn4 In _usn3 Starts With 12.e12 Starts With 0.12 Where $@usn6 Contains 07|`4esn`[`5esn`..12][@usn6..False]].#usn7 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`5esn`)Assert Exists(@usn5(#usn8,{`3esn`} In 0X7).`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:#usn7)Assert [`4esn` In $`3esn` Is Not Null Where @usn5 =~{`5esn`} =~`5esn`|$`4esn`[..$`3esn`][..0.0]].@usn5! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:#usn7)Assert Exists({@usn5:$`3esn` Is Not Null}.@usn6?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn4:#usn7]-()Assert Exists(Filter(`5esn` In $999[0.0..] Where `2esn` Starts With $_usn4).``!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn7:usn2]-()Assert Exists((:#usn8:#usn8)<-[? *0X7..{#usn8:{1000} Is Null Is Null,`3esn`:0.e0 Starts With 12.e12 Starts With {_usn4}}]->(`6esn` :_usn3:_usn3{``:$usn1 Ends With $`` Ends With $12}).`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:usn1)Assert Exists(None(`8esn` In 01[2.12..`8esn`] Where 0X7[..2.12]).`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:usn2)Assert Exists(Shortestpath(({`7esn`:{999}})<-[:`3esn`|:#usn8{@usn5:{#usn8} Is Not Null}]->(`` :_usn3:_usn3{_usn4:{`4esn`} =~9e0 =~{12},#usn8:0[{usn2}..][$`6esn`..]})-[`2esn`:usn1|@usn6{_usn3:{`4esn`} Ends With {123456789} Ends With $`4esn`,``:9e1 In $`3esn` In $@usn6}]->(_usn3 :usn1{`6esn`:$usn1 Ends With $`` Ends With $12})).``!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`5esn`)Assert Exists(Filter(`2esn` In `1esn` =~\"d_str\" Where usn2[9e12]).`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn6:`8esn`]-()Assert Exists(count(`1esn` Contains {usn2} Contains $#usn8).@usn6)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:_usn4)Assert Extract(`4esn` In $`3esn` Is Not Null Where 12.0 =~999 =~$_usn3|2.12 =~False).`7esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:#usn8)Assert Any(_usn3 In {`3esn`}[`2esn`] Where usn2 Is Null).usn1? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:`3esn`]->()Assert Exists(Any(`4esn` In $`3esn` Is Not Null Where {`6esn`} Contains \"d_str\").#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn8:usn1]-()Assert Exists(Reduce(`5esn`=12[1.e1..{_usn3}][1.e1..1.0],#usn7 In `2esn`[..$#usn8][..Count(*)]|12.e12[7..$`6esn`]).`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`7esn`)Assert Exists(Case When Null[$#usn7] Then 's_str'[00][{`5esn`}] When {``} Is Not Null Then 1.0[0X0123456789ABCDEF] Else 9e0[{0}..{`3esn`}][\"d_str\"..0Xa] End.``?)"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:#usn8]->()Assert Exists([123456789 Ends With 12.e12 Ends With $`7esn`,7[True..][2.12..]].@usn6)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`3esn`)Assert Exists(Filter(`` In 123456789 Ends With 12.e12 Ends With $`7esn` Where {``} Starts With $`2esn` Starts With `1esn`).`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`1esn`)Assert Exists(usn1(usn1[`5esn`..$7]).``)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:@usn5]->()Assert Exists({`2esn`:usn2[{7}],`2esn`:0e0 Ends With 1.e1 Ends With $`4esn`}.`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn5:_usn3]-()Assert Exists(({usn1:`5esn`[_usn4..]})<-[usn2:`2esn` *..01{`6esn`:{#usn7}[..9e12][..`8esn`]}]->({`5esn`:{#usn7} Is Not Null Is Not Null,`3esn`:@usn6 Starts With `6esn` Starts With $`1esn`})-[`1esn`?{`3esn`:$`6esn`[12],`3esn`:usn2 Is Not Null Is Not Null}]-(#usn8 {@usn5:123.654 Contains $`4esn` Contains 1.0,`6esn`:$`` =~12.0 =~$`7esn`}).`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:`7esn`]-()Assert Exists((:usn2{`1esn`:1.0 In Count(*),`4esn`:{`1esn`}[12.0..`2esn`][@usn6..{usn1}]})<-[?:#usn8|`1esn`*..{`3esn`:{`1esn`}[12.0..`2esn`][@usn6..{usn1}]}]-(_usn3 :`7esn`:_usn3)-[`1esn`?{`3esn`:$`6esn`[12],`3esn`:usn2 Is Not Null Is Not Null}]->(:`2esn`:usn1{usn2:{`7esn`}[..{`4esn`}],_usn3:{_usn3}[..\"d_str\"]}).`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:_usn3)Assert Exists((usn1 {`2esn`})<-[`4esn`?:`1esn` *..999{`4esn`:False,_usn4:$`7esn` Is Null Is Null}]->(:_usn3:_usn3{`4esn`:12e12 Ends With {usn1}})<-[`7esn`?:`8esn`]-(`3esn` {@usn6:`4esn`[..010][..{12}]}).#usn8!)"),
    octest_legacy:ct_string("Create Constraint On(``:#usn7)Assert Case 07 Contains 0X7 Contains $`8esn` When {999} Starts With {0} Then Count(*) Is Null Is Null When #usn7 Then 9e1 In $`3esn` In $@usn6 End.`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`1esn`)Assert Exists(Reduce(`5esn`=$`4esn`[Null..],#usn7 In `2esn`[..$#usn8][..Count(*)]|@usn6 Starts With `6esn` Starts With $`1esn`).#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`2esn`)Assert Exists(Extract(`1esn` In {`6esn`}[..$@usn6][..`7esn`] Where `1esn` =~\"d_str\").@usn6?)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:_usn3)Assert Exists(Case `` Ends With 123456789 Ends With 123.654 When True[07..$usn2][$7..{usn1}] Then 's_str'[00][{`5esn`}] End.`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:`3esn`]-()Assert Exists({#usn8:{1000} Is Null Is Null,`3esn`:0.e0 Starts With 12.e12 Starts With {_usn4}}.@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:@usn6)Assert None(_usn3 In {`3esn`}[`2esn`] Where 1e1 In 123.654 In `3esn`).#usn7 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:#usn7)Assert Single(`` In 123456789 Ends With 12.e12 Ends With $`7esn` Where _usn4 Contains 2.12).@usn5! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:_usn3)Assert Case $@usn6 Ends With $_usn4 Ends With 0.12 When 0X7[`7esn`][123.654] Then $`5esn`[..$`5esn`][..$12] Else `` Is Not Null Is Not Null End.`4esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:#usn7)Assert Exists([$`6esn`[{999}..9e0],.e1 =~$`8esn`,{123456789} Is Not Null].`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`4esn`:`2esn`]-()Assert Exists(`6esn`(Distinct `5esn` Ends With {``} Ends With 12.e12).@usn5)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:usn1)Assert All(`` In 123456789 Ends With 12.e12 Ends With $`7esn` Where {`4esn`} Starts With $usn2 Starts With $1000).`3esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:`7esn`]->()Assert Exists(Reduce(`7esn`=7[$`2esn`..{`5esn`}],`1esn` In {`6esn`}[..$@usn6][..`7esn`]|$_usn4[0e0..][False..])._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On(``:#usn8)Assert Exists(Any(usn1 In @usn5 =~{`5esn`} =~`5esn`).`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:#usn7)Assert (usn1 {`4esn`:$@usn5 Is Not Null,`5esn`:0.e0 Contains 9e1 Contains {`7esn`}})<-[@usn5?:@usn5 *..010{`5esn`:False Contains {`6esn`}}]->(:@usn5{_usn4:0x0[`4esn`..'s_str'],`5esn`:123456789 Ends With $`6esn` Ends With $#usn7}).`6esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`4esn`)Assert ({``:00 Starts With 0xabc,`3esn`:$`1esn` Ends With 9e1 Ends With $123456789})<-[? *0X0123456789ABCDEF{`6esn`:`1esn` =~\"d_str\",#usn8:{`4esn`} =~9e0 =~{12}}]-(:#usn8:#usn8{`2esn`:$_usn4 Contains Null Contains #usn8,`6esn`:$`5esn`[$`4esn`..{@usn6}][07..$@usn6]})._usn3? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`6esn`)Assert Exists(Filter(`8esn` In $`5esn`[$`4esn`..{@usn6}][07..$@usn6] Where `2esn`[..$#usn8][..Count(*)]).``?)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`2esn`)Assert Reduce(usn2=12e12 Is Not Null Is Not Null,`3esn` In {7} Is Null|0[1.e1..12e12]).#usn8? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:_usn4)Assert (`` :`7esn`:_usn3)-[usn2?]-(:@usn5).`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:usn2)Assert Exists({_usn4:$`4esn`[..$`3esn`][..0.0],@usn6:0e0 Starts With 2.12 Starts With $12}.`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[``:`4esn`]->()Assert Exists({`8esn`:0Xa[usn2..]}.#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`5esn`)Assert All(_usn3 In {`3esn`}[`2esn`] Where 7 Ends With $`4esn`)._usn3 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:_usn4)Assert Reduce(#usn7=@usn6 Ends With {_usn3},@usn5 In 0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF]|{_usn4} Ends With `6esn`).usn1! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`5esn`)Assert (@usn5 :`4esn`)<-[`7esn`?:#usn8|`1esn` *0xabc..{#usn8:$#usn8 =~{@usn5}}]->(`6esn` :_usn4)-[`1esn`?{`3esn`:$`6esn`[12],`3esn`:usn2 Is Not Null Is Not Null}]-(usn2 {`6esn`:{#usn8}[.._usn4][..$`3esn`],`7esn`:01 =~{_usn3} =~`3esn`}).``! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:_usn3)Assert [@usn6 Ends With {_usn3}].`5esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`1esn`:usn1]-()Assert Exists(Reduce(`5esn`=07[..True][..9e12],#usn8 In {`5esn`}[.e1..``]|@usn5 =~{`5esn`} =~`5esn`).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:usn2]->()Assert Exists([$_usn4[1.e1]['s_str']].#usn8)"),
    octest_legacy:ct_string("Create Constraint On(``:@usn5)Assert Exists(All(`3esn` In {7} Is Null Where $#usn7[@usn5..{1000}][1.e1..7]).usn1)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn1:_usn4]-()Assert Exists(Extract(`1esn` In `8esn`[`4esn`..{#usn8}][$12..2.12] Where 12e12 Ends With {usn1}).usn1?)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`3esn`)Assert #usn8({`3esn`} In 01).@usn5? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:usn2)Assert Reduce(`3esn`=7 Starts With {@usn6} Starts With $``,`4esn` In $`3esn` Is Not Null|$`4esn`[Null..]).`7esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:@usn5)Assert Exists({``:usn1 Starts With usn1 Starts With $``}.#usn8)"),
    octest_legacy:ct_string("Drop Index On:`3esn`(`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:_usn4)Assert Reduce(_usn3={12}[..0X7],`` In 123456789 Ends With 12.e12 Ends With $`7esn`|`3esn`[..$12][..{`7esn`}]).`3esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[``:usn2]-()Assert Exists(Extract(#usn7 In `2esn`[..$#usn8][..Count(*)] Where #usn8[..{#usn7}]|{`4esn`} =~9e0 =~{12}).#usn8?)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`1esn`)Assert Exists([9e12[`1esn`..][$`1esn`..]]._usn4!)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:#usn8)Assert Exists(Reduce(@usn5='s_str' Ends With 7 Ends With {_usn4},`8esn` In 01[2.12..`8esn`]|{999}).#usn8!)"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:_usn3]-()Assert Exists([#usn8 In 7[..999][..{#usn8}] Where $@usn5 Is Not Null Is Not Null|07 In `2esn` In 12e12].usn1?)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:`1esn`]-()Assert Exists({@usn6:{1000} =~$@usn6 =~12}.@usn5?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`6esn`)Assert [`5esn` In \"d_str\" Is Null Is Null Where ``[$`2esn`]|9e1[2.12..{#usn8}]].@usn6! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:usn1]-()Assert Exists([@usn5 In 0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF] Where 01[2.12..`8esn`]|Null[$`5esn`][False]].`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`1esn`:`3esn`]-()Assert Exists(Any(`5esn` In $999[0.0..] Where 0x0 Ends With $12).`8esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`1esn`)Assert Allshortestpaths((((_usn3 {`4esn`:2.12['s_str'..$12][{`1esn`}..`2esn`],`1esn`:0e0 In @usn5})<-[`4esn`:@usn6|`6esn`{`4esn`:`2esn` Is Null,@usn5:00 Starts With 0xabc}]-({`5esn`:$#usn8 Ends With $`2esn` Ends With $@usn6})-[usn2?:_usn4|:usn2{``:`1esn` Contains {usn2} Contains $#usn8}]->(#usn7 :usn1{_usn4:\"d_str\" Is Null Is Null,usn1:$`3esn` Is Null})))).`7esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:``)Assert [$@usn5 Is Not Null].@usn6! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`3esn`)Assert Exists([`2esn` In `1esn` =~\"d_str\" Where usn2 Ends With 999 Ends With .e1|9e0[..999]].`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:#usn8)Assert Exists({usn2:7[..999][..{#usn8}]}.@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:usn1)Assert Reduce(`6esn`=`3esn`[{0}][usn1],`5esn` In $999[0.0..]|'s_str' Ends With 7 Ends With {_usn4})._usn3! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:usn2)Assert `7esn`(123456789[#usn8..False]).``? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:#usn8)Assert Exists(Extract(#usn7 In `2esn`[..$#usn8][..Count(*)] Where \"d_str\" Starts With 01|7[True..][2.12..]).@usn5)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:_usn4]-()Assert Exists(Filter(`2esn` In `1esn` =~\"d_str\" Where Count ( * ) =~$usn2 =~$usn2).`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`2esn`:`7esn`]-()Assert Exists(Case When .e1 Ends With 1e1 Ends With @usn5 Then 01[{`2esn`}..{@usn6}][$`2esn`..0.0] End._usn3?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`3esn`)Assert Exists(Extract(@usn5 In 0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF] Where {@usn6}[{999}..][00..]|`8esn`[{123456789}..]).usn2!)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:#usn7)Assert Extract(#usn7 In {``} Is Not Null Where {@usn5}[{#usn8}][9e0]|010 =~{usn2}).@usn6 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:`7esn`]-()Assert Exists(Reduce(_usn3=12e12 Is Not Null Is Not Null,@usn5 In 0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF]|`7esn` Starts With $#usn7 Starts With $`7esn`).`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`3esn`)Assert Exists(`6esn`(_usn3 Ends With 7 Ends With `1esn`).`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:`8esn`]->()Assert Exists([`2esn` In `1esn` =~\"d_str\" Where Count ( * ) =~$usn2 =~$usn2|9e1[2.12]].usn1?)"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn8:`3esn`]-()Assert Exists([{usn1}[0X0123456789ABCDEF],9e0].@usn5!)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:usn1)Assert None(`8esn` In $`5esn`[$`4esn`..{@usn6}][07..$@usn6] Where {usn1} Ends With $0).usn1 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`8esn`)Assert Exists(Any(#usn7 In {``} Is Not Null Where 01234567 Is Null Is Null)._usn3)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn6:`1esn`]-()Assert Exists(`6esn`(Distinct `` Ends With 123456789 Ends With 123.654,$_usn4 Ends With usn1 Ends With $0).usn1!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:#usn7)Assert Exists(Extract(`4esn` In $`3esn` Is Not Null Where usn2 Is Not Null Is Not Null|$0[12.e12..]).@usn5?)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`5esn`)Assert {``:.e1 Is Null Is Null}.#usn8! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`6esn`:`7esn`]-()Assert Exists(Single(_usn3 In {`3esn`}[`2esn`] Where 1e1 In 123.654 In `3esn`)._usn4?)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`1esn`)Assert Exists([`` In 123456789 Ends With 12.e12 Ends With $`7esn` Where $123456789 Is Null Is Null|{`6esn`}[..$@usn6][..`7esn`]]._usn4)"),
    octest_legacy:ct_string("Drop Constraint On()-[``:#usn8]-()Assert Exists([{0}[12.0..0Xa][$`5esn`..{_usn3}],123.654 Is Not Null Is Not Null].`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:usn1)Assert Case $usn1 =~`` When 07 Contains 0X7 Contains $`8esn` Then 123456789[{123456789}..'s_str'] When $_usn3[Count(*)] Then $`5esn` In $`` In 123.654 End.`6esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:_usn4)Assert Exists((:_usn4{`2esn`:{`1esn`}[usn1][.e1],_usn4:#usn8 Is Not Null})-[_usn3{@usn5:123.654[...e0],`8esn`:07 =~01}]-(_usn4 $999).`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`1esn`)Assert Shortestpath(({_usn4:00 Starts With 0xabc})<-[`4esn`?:`2esn`{`4esn`:#usn7 Contains _usn3 Contains {`3esn`}}]-({`3esn`:.e1[..usn2][..`8esn`]})).`7esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:_usn4)Assert Exists(`8esn`(1.e1[$`1esn`..@usn6][$0..$_usn3])._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`5esn`)Assert Exists(Single(@usn5 In 0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF] Where Null[``]).`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(``:`1esn`)Assert Exists(Reduce(`7esn`=2.12 Contains usn2 Contains True,`` In 123456789 Ends With 12.e12 Ends With $`7esn`|`5esn` Starts With 010 Starts With 0.0).`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On(``:`1esn`)Assert Case `3esn`[..$12][..{`7esn`}] When {`4esn`} Starts With $usn2 Starts With $1000 Then {``} Is Not Null End.`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn6:`7esn`]->()Assert Exists(`7esn`(@usn6 Contains Null Contains $`7esn`,Null[$#usn7]).`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`7esn`)Assert Exists([@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7 Where `7esn`[9e0..]].`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`5esn`)Assert Exists(Allshortestpaths((@usn6 :`2esn`:usn1{_usn4:`5esn` Is Null})).@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:#usn7)Assert Exists(None(`1esn` In `8esn`[`4esn`..{#usn8}][$12..2.12] Where {`3esn`} Is Not Null Is Not Null)._usn4!)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`3esn`)Assert Allshortestpaths((((`2esn` :`2esn`:usn1{usn1:123.654 Is Not Null Is Not Null,`8esn`:@usn6 Is Null Is Null})-[`6esn`?:`4esn` *..01]->({`6esn`:.e1 Ends With 1e1 Ends With @usn5,usn1:2.12 Is Not Null Is Not Null})<-[`5esn`?:`4esn`]-(_usn4 :usn1)))).``! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:usn1)Assert Exists(Extract(usn1 In @usn5 =~{`5esn`} =~`5esn` Where 0X0123456789ABCDEF =~1e1 =~{`4esn`}|Null[{#usn7}..][0X0123456789ABCDEF..]).`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:#usn8)Assert Exists(Case When Count ( * ) Ends With $@usn5 Then _usn4 Contains 2.12 Else False =~$7 =~2.12 End.usn2)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`1esn`:`4esn`]-()Assert Exists(Single(`` In `` Is Not Null Is Not Null Where 0e0 Starts With 1000 Starts With #usn7).``!)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn5:`5esn`]-()Assert Exists(All(`` In `` Is Not Null Is Not Null Where Count(*)[..usn2][..usn2])._usn3)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:#usn7)Assert {`4esn`:$@usn5 Is Not Null,`5esn`:0.e0 Contains 9e1 Contains {`7esn`}}.#usn7 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`5esn`)Assert Exists([@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7 Where `1esn`[{usn1}..``][7..$#usn8]]._usn3)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:@usn5)Assert (_usn3 :#usn7)-[`6esn`?:`3esn`|:#usn8{usn1:$usn1 In {999} In $#usn7}]-(:`8esn`:`7esn`{#usn7:False =~$7 =~2.12}).`8esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:`4esn`]-()Assert Exists(Any(`2esn` In `1esn` =~\"d_str\" Where $`1esn`[1.0..][_usn3..]).`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:`4esn`]->()Assert Exists(``(Distinct $_usn4[Count ( * )..],$@usn5[..12e12][..$123456789]).`4esn`?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`6esn`)Assert Exists(Extract(`2esn` In `1esn` =~\"d_str\" Where {@usn5} Is Null Is Null).usn2)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`2esn`)Assert Exists(Shortestpath((`3esn` {`5esn`:7[$`2esn`..{`5esn`}],@usn6:.e12[@usn5..#usn7][010..{usn1}]})<-[@usn5?:@usn5 *..010{`5esn`:False Contains {`6esn`}}]->(`6esn` :_usn3:_usn3{`4esn`:0Xa Starts With {`6esn`} Starts With $usn1})-[#usn8?:`7esn`$1000]->(_usn3 {`3esn`:010[#usn7..True],``:usn1 Ends With $@usn6 Ends With `3esn`})).`6esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:`5esn`]-()Assert Exists([`2esn` In `1esn` =~\"d_str\" Where {``} Ends With `7esn` Ends With 0.0|{`6esn`} Contains \"d_str\"].#usn7?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`5esn`:``]-()Assert Exists({_usn4:$_usn4[1.e1]['s_str']}.`7esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(``:`7esn`)Assert Extract(usn1 In @usn5 =~{`5esn`} =~`5esn` Where {`3esn`}[`2esn`]|2.12 Contains usn2 Contains True).`1esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:``)Assert Allshortestpaths(((:``:#usn8{`2esn`:`3esn`[{0}][usn1],``:usn1 Is Null Is Null})<-[{#usn7:123456789 Is Null}]-(:`6esn`{#usn7:$@usn5 Contains 0xabc Contains {#usn7},`1esn`:0xabc[.e0]}))).@usn6! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:_usn3]-()Assert Exists(Case When {@usn5}[{#usn8}][9e0] Then {7} In `2esn` When 1000 In {`8esn`} In 01 Then `2esn` Starts With $_usn4 End.usn1!)"),
    octest_legacy:ct_string("Create Index On:`4esn`(`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`4esn`)Assert Extract(`` In `` Is Not Null Is Not Null Where {`8esn`} Ends With `6esn`|0e0 In @usn5).usn1? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:#usn7)Assert Exists(Case {#usn8} Is Null When .e1 =~$`8esn` Then \"d_str\"[..{@usn5}][..``] When {_usn3}[12.e12] Then 7 Ends With $`4esn` Else $123456789 Starts With 9e0 Starts With 's_str' End._usn4?)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:usn1)Assert Exists(`8esn`(Distinct $1000[`2esn`..`5esn`][1e1..1.e1],0X0123456789ABCDEF Ends With $`8esn` Ends With 0.12).`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:_usn3)Assert `6esn`(`4esn`[``],True[{`7esn`}..]).usn1? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:``)Assert Any(_usn4 In _usn3 Starts With 12.e12 Starts With 0.12 Where \"d_str\" Starts With 01).@usn5 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:`5esn`]->()Assert Exists((_usn3 {`5esn`:12.e12[0xabc],`2esn`:{`7esn`}[..$@usn5][..$#usn8]})<-[`1esn`?:`4esn`]->({`7esn`:1.0 =~7 =~{usn2},`8esn`:`3esn` In $0 In `1esn`}).`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`4esn`)Assert Exists(Extract(@usn5 In 0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF] Where 1.0[0X7][{`5esn`}]).`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`3esn`)Assert All(`8esn` In $`5esn`[$`4esn`..{@usn6}][07..$@usn6] Where `2esn`[..$#usn8][..Count(*)]).``! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`7esn`)Assert All(`8esn` In 01[2.12..`8esn`] Where {usn2}).``? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`4esn`)Assert Exists([`3esn`[..$12][..{`7esn`}],9e12[{123456789}..#usn8][{_usn3}..{#usn7}],{`2esn`} Ends With {`7esn`}].@usn6)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:`6esn`]->()Assert Exists(Extract(`` In `` Is Not Null Is Not Null Where {`6esn`} Contains \"d_str\").`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:@usn6)Assert Exists(Extract(`1esn` In {`6esn`}[..$@usn6][..`7esn`]|$#usn7 Contains 0x0 Contains 1000).`4esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`2esn`:`6esn`]-()Assert Exists(Reduce(#usn7=0Xa[2.12],`5esn` In \"d_str\" Is Null Is Null|$@usn6 Ends With $_usn4 Ends With 0.12).``)"),
    octest_legacy:ct_string("Drop Constraint On()<-[``:@usn6]-()Assert Exists(Reduce(_usn4=0X7[{@usn6}],`` In `` Is Not Null Is Not Null|{123456789} Contains $#usn8).`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:`6esn`]-()Assert Exists(Extract(`2esn` In `1esn` =~\"d_str\" Where usn2[9e12]|$usn1[{`5esn`}][$`6esn`]).`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On(``:`8esn`)Assert Case When Null Ends With `2esn` Ends With $usn1 Then $usn2[{@usn5}] End._usn3 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`3esn`)Assert Exists({`4esn`:07 In `2esn` In 12e12,`5esn`:$12 Ends With 07 Ends With $123456789}.`5esn`!)"),
    octest_legacy:ct_string("Create Constraint On(usn1:``)Assert Exists(Extract(@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7 Where Count ( * )[True..][{#usn7}..]|7[$`8esn`..123456789][$usn1..$usn1]).`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:``)Assert Case When $`` Is Not Null Then 12[1.e1..{_usn3}][1.e1..1.0] When 7[True..][2.12..] Then $_usn4 Is Not Null Is Not Null End.@usn5? Is Unique"),
    octest_legacy:ct_string("Drop Index On:_usn4(`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`7esn`)Assert `1esn`(Distinct 01[{@usn5}]).@usn6 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:@usn5)Assert Exists(Shortestpath(((`7esn` {#usn7:\"d_str\" Contains {123456789} Contains 01,@usn5:$1000 In $1000 In $`3esn`})<-[?{`3esn`:7[{0}..{_usn4}]}]-(@usn6 :`4esn`)<-[`5esn`?:`5esn` *1000..00]->(#usn7 :`3esn`:@usn5))).usn2)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:usn2)Assert Exists(Shortestpath((:_usn4{usn2:0.0 Ends With 010 Ends With 1.e1})<-[@usn6:_usn4|:usn2]->(:`7esn`:_usn3{@usn5:.e0 Starts With 0 Starts With 0.e0,usn2:Count ( * ) Contains 07})-[`3esn`?:@usn5]->(usn1 {`8esn`:False Is Null Is Null}))._usn4)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:_usn4)Assert Exists(Filter(_usn3 In {`3esn`}[`2esn`] Where _usn3 Contains $123456789 Contains ``)._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:``]-()Assert Exists(@usn5($`3esn` In $_usn4 In {_usn3},{123456789} =~`8esn` =~@usn5).`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`8esn`)Assert Exists([@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7 Where 1.0 Contains $_usn4].#usn7?)"),
    octest_legacy:ct_string("Create Constraint On(``:`8esn`)Assert Exists([#usn7 In `2esn`[..$#usn8][..Count(*)] Where 9e1[2.12..{#usn8}]|0x0[{`7esn`}..][$usn2..]].#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`3esn`:`6esn`]-()Assert Exists(None(#usn7 In `2esn`[..$#usn8][..Count(*)] Where {`2esn`} Ends With {`7esn`})._usn3)"),
    octest_legacy:ct_string("Drop Constraint On()-[`2esn`:@usn6]->()Assert Exists(Case 1.0[0e0..0.e0] When {`7esn`}[`6esn`][#usn7] Then {999} Starts With {0} End._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`3esn`)Assert Exists(Case When $#usn7[@usn5..{1000}][1.e1..7] Then $`8esn`[..00] End._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:_usn4)Assert Allshortestpaths((#usn8 :`5esn`{`6esn`:2.12 Contains usn2 Contains True,`4esn`:{@usn5} Is Null Is Null})<-[?:`1esn`{``:{`2esn`} Ends With {`7esn`}}]->(:usn1{``})).`6esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:usn2]->()Assert Exists({`3esn`:$`2esn`[2.12..'s_str'][{@usn6}.._usn4]}.usn1)"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:@usn5]-()Assert Exists(Case When `2esn`[..$#usn8][..Count(*)] Then False =~1e1 =~0.e0 When {`4esn`} Starts With $usn2 Starts With $1000 Then {``} Is Not Null End.#usn7?)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`8esn`)Assert Exists(Allshortestpaths((`8esn` :usn2{usn2:$0,`4esn`:#usn8 Is Not Null Is Not Null})).@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:_usn3)Assert Exists([`2esn` In `1esn` =~\"d_str\" Where Count ( * ) =~$usn2 =~$usn2|9e1[2.12]].`7esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`7esn`)Assert None(`` In 123456789 Ends With 12.e12 Ends With $`7esn` Where {`4esn`} Starts With $usn2 Starts With $1000)._usn3 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`2esn`)Assert Single(#usn7 In {``} Is Not Null Where 0.12 In _usn3 In {0}).`3esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`3esn`)Assert Case {@usn6}[$`6esn`..`4esn`] When {`5esn`}[.e1..``] Then $_usn4[1.e1]['s_str'] Else $`4esn` In Null In 0xabc End.`7esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:_usn4)Assert Exists([`1esn` In {`6esn`}[..$@usn6][..`7esn`] Where $`6esn`[12]].usn1!)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`7esn`)Assert Exists(Shortestpath(((_usn3 :`4esn`{`7esn`:`5esn` Is Null,`7esn`:{`1esn`}[12.0..`2esn`][@usn6..{usn1}]})-[?:`6esn`|`5esn`{`4esn`:`7esn` In {123456789} In `1esn`,_usn3:$_usn4[Count ( * )..]}]-(#usn8 :`5esn`{`6esn`:2.12 Contains usn2 Contains True,`4esn`:{@usn5} Is Null Is Null})-[`6esn`:`2esn`{`5esn`:00 Starts With 0xabc,`6esn`:0Xa =~Null =~$``}]->(:_usn4{`2esn`:{`1esn`}[usn1][.e1],_usn4:#usn8 Is Not Null}))).`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:usn2]-()Assert Exists((#usn7 :``:#usn8{`2esn`})-[`2esn`?{_usn3:$_usn4[Count ( * )..],#usn7:{`3esn`}[..07][..{`5esn`}]}]-({_usn4:$`1esn`[{`2esn`}..],_usn4:$_usn3['s_str'][07]}).@usn5)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`6esn`)Assert Exists((#usn8 :usn1)-[`2esn`?:`2esn`{`1esn`:0.12 In _usn3 In {0}}]->(:`4esn`{``:2.12 Is Not Null Is Not Null}).`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn1:usn2]-()Assert Exists(Shortestpath(((({`4esn`:`7esn` Is Null})<-[`4esn`? *..12{`1esn`:9e12[{123456789}..#usn8][{_usn3}..{#usn7}],@usn6:$usn1 In {999} In $#usn7}]->({@usn5:0.12[$`3esn`..$_usn3][12.0..usn1]})<-[`6esn`?:`8esn`{#usn8:'s_str'[00][{`5esn`}],`6esn`:9e1[$usn2]}]-(`2esn` :_usn3:_usn3)))).`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:``)Assert Exists(Reduce(`7esn`=0.e0 Contains 9e1 Contains {`7esn`},`4esn` In $`3esn` Is Not Null|$@usn6 Contains 07).`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`6esn`)Assert Exists(`6esn`(Distinct `5esn`[7][{usn2}],.e12[@usn5..$12]).usn1!)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:`7esn`]->()Assert Exists([01[{@usn5}],0X0123456789ABCDEF[{_usn4}..00]].#usn7?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`7esn`)Assert [00[`2esn`..12][123456789..0.e0],$`6esn`[12]].#usn8 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:`5esn`]->()Assert Exists(Case $_usn4 Is Not Null Is Not Null When #usn7 Is Not Null Is Not Null Then Count ( * ) =~$usn2 =~$usn2 When 12.0 Then 0e0 Starts With 1000 Starts With #usn7 End._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`2esn`)Assert Exists((#usn7 {_usn4:{_usn4} Starts With 0.e0 Starts With 0x0})<-[{_usn3:$@usn6 Ends With $_usn4 Ends With 0.12,#usn8:usn2 Is Not Null Is Not Null}]->(:#usn7{`3esn`:$`7esn` =~{`8esn`} =~$usn1})<-[?{usn2:123.654[$`1esn`],@usn5:#usn8 Is Not Null}]-(@usn5 {`3esn`:010[#usn7..True],``:usn1 Ends With $@usn6 Ends With `3esn`}).`6esn`)"),
    octest_legacy:ct_string("Create Constraint On(``:@usn6)Assert [$@usn5 Is Not Null Is Not Null,$123456789 Ends With `3esn` Ends With 123456789,$#usn8[9e12..][.e1..]].`1esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`7esn`)Assert Any(#usn8 In {`5esn`}[.e1..``] Where 0X7[..2.12]).``? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:``)Assert Extract(`3esn` In {7} Is Null Where 0.e0[123.654][01]|12e12 Is Not Null Is Not Null).#usn7 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`2esn`)Assert Case When {usn1} In 2.12 In 1000 Then `5esn` Ends With {``} Ends With 12.e12 When .e12 Is Not Null Is Not Null Then _usn4 Is Null Is Null End.`7esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:`2esn`]->()Assert Exists([#usn7 In `2esn`[..$#usn8][..Count(*)] Where 0xabc[.e0]].`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:`2esn`]-()Assert Exists({`3esn`:{@usn6}[{#usn7}..$#usn8][$_usn4..12.e12],`2esn`:False Contains {`6esn`}}.`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`4esn`)Assert Exists(({_usn3:$`5esn`[`3esn`..]})<-[_usn4 *..01]->(_usn3 :_usn4{`2esn`:{#usn8}[010],_usn3:123.654 =~$usn2 =~{999}})-[#usn8]-(`6esn` :#usn7).#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`4esn`)Assert Exists(None(`` In 123456789 Ends With 12.e12 Ends With $`7esn` Where 01 =~{_usn3} =~`3esn`).usn1!)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`2esn`)Assert Exists((:usn1{usn1:{`6esn`}})-[`1esn`?{`3esn`:$`6esn`[12],`3esn`:usn2 Is Not Null Is Not Null}]->(@usn6 :`1esn`)<-[`6esn`]-(`1esn` {@usn5:1.0[0e0..0.e0]}).`7esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(``:@usn5)Assert Exists({`5esn`:{#usn7} Is Not Null Is Not Null,`3esn`:@usn6 Starts With `6esn` Starts With $`1esn`}.`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:#usn7)Assert Exists(#usn8(Distinct $#usn7[@usn5..{1000}][1.e1..7]).#usn7?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`3esn`)Assert Exists({_usn4:12.e12[0e0..$`1esn`][0X0123456789ABCDEF.._usn3],`4esn`:{0} In _usn4}.`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`3esn`)Assert Exists({`2esn`:_usn4 Starts With $_usn4 Starts With 12.e12,`1esn`:$#usn8[$`2esn`..][{`2esn`}..]}.`3esn`)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`1esn`)Assert Exists(Reduce(`3esn`=00[{`8esn`}..][{`8esn`}..],`1esn` In `8esn`[`4esn`..{#usn8}][$12..2.12]|Count ( * ) Contains {`1esn`} Contains 07)._usn4)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`1esn`)Assert `7esn`(Distinct `1esn` Ends With {_usn3} Ends With `2esn`).`8esn` Is Unique"),
    octest_legacy:ct_string("Create Index On:@usn5(usn2)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:usn1)Assert Exists(Single(`` In `` Is Not Null Is Not Null Where 12.0 Ends With True).@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`7esn`)Assert Reduce(`1esn`=True =~010,`8esn` In 01[2.12..`8esn`]|{_usn3}[..\"d_str\"][..`5esn`])._usn4 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`4esn`)Assert Extract(`` In 123456789 Ends With 12.e12 Ends With $`7esn` Where {`8esn`} Ends With `6esn`).@usn6! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`8esn`)Assert Case 0X7[{@usn6}] When `4esn`[..010][..{12}] Then $_usn3[{#usn7}] End.@usn5? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:``)Assert Exists(Case $`7esn` =~{`8esn`} =~$usn1 When 0e0 =~`6esn` =~123456789 Then 01234567[usn2..$12][{`7esn`}..$usn2] When {0}[01][`7esn`] Then \"d_str\"[..{@usn5}][..``] Else Count ( * ) Contains 0X0123456789ABCDEF Contains {@usn6} End._usn3!)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:_usn3)Assert Exists(Case When #usn7[usn1][$`5esn`] Then {1000} Is Null Is Null End._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`6esn`)Assert [01 Ends With 999 Ends With {`7esn`},999 Is Not Null Is Not Null].`4esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`6esn`)Assert [@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7 Where .e0[..$`8esn`]|$123456789 Starts With 9e0 Starts With 's_str'].`1esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:usn1)Assert Exists(Case When `3esn`[`3esn`..][#usn8..] Then {`7esn`}[`6esn`][#usn7] End.#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:#usn8)Assert Reduce(usn2=0.e0 In $#usn7 In $_usn3,`3esn` In {7} Is Null|{12} Is Null Is Null).@usn6! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:usn1)Assert Single(#usn7 In {``} Is Not Null).`5esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:@usn6)Assert All(#usn8 In 7[..999][..{#usn8}] Where $_usn4[1.e1]['s_str']).`3esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:`7esn`)Assert Exists(Filter(_usn3 In {`3esn`}[`2esn`] Where False =~$7 =~2.12).`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:@usn5)Assert Any(#usn8 In 7[..999][..{#usn8}] Where Null[$#usn7]).`7esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:usn1)Assert Exists(Any(@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7 Where {usn1} In 2.12 In 1000).@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`2esn`)Assert Exists(Reduce(`7esn`=0.e0[123.654][01],`5esn` In $999[0.0..]|`8esn` Ends With 999 Ends With .e12).usn2?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:@usn5]-()Assert Exists(All(#usn7 In {``} Is Not Null Where 0x0 Is Null).@usn5?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:_usn3)Assert (:#usn8:#usn8{`2esn`:$_usn4 Contains Null Contains #usn8,`6esn`:$`5esn`[$`4esn`..{@usn6}][07..$@usn6]})<-[usn2?:`6esn`|`5esn`{_usn3:{#usn7}[`2esn`..]}]->({`1esn`:{`2esn`} Ends With {`7esn`}}).`2esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`8esn`)Assert Exists(Allshortestpaths((`2esn` :`8esn`:`7esn`)-[`6esn`]->(:`8esn`:`7esn`{usn1:$`3esn` In $_usn4 In {_usn3}})-[`2esn`?:@usn6|`6esn` *0xabc..{`5esn`:`6esn`[12..$usn2][{#usn8}..{usn2}],@usn5:$`2esn` Is Null Is Null}]-(`8esn` {#usn8:010 In Count(*),`4esn`:12.e12[9e12..{`6esn`}]})).`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`2esn`)Assert Exists(Allshortestpaths(((_usn4 {usn1:True Contains {0} Contains 7}))).#usn7)"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn3:`1esn`]-()Assert Exists([2.12 Contains `1esn`].`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`4esn`:`1esn`]-()Assert Exists({_usn3:$@usn6 Ends With $_usn4 Ends With 0.12,#usn8:usn2 Is Not Null Is Not Null}.`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`7esn`)Assert {``:00 Starts With 0xabc,`3esn`:$`1esn` Ends With 9e1 Ends With $123456789}.`3esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:usn1]->()Assert Exists(_usn4({999} Is Null Is Null).`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`5esn`:`4esn`]-()Assert Exists([{#usn7}[9e1..][{123456789}..]].usn1!)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`6esn`)Assert usn2(Distinct 0e0 =~`6esn` =~123456789).@usn5! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`1esn`)Assert Exists(Extract(`5esn` In $999[0.0..] Where Count ( * ) Contains {`1esn`} Contains 07|0.e0[123.654][01]).`3esn`)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:@usn5)Assert [@usn5 In 0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF] Where 0 In `2esn` In 010].`6esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`8esn`)Assert None(`` In `` Is Not Null Is Not Null Where 1000 In {`8esn`} In 01).`6esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:_usn3)Assert Exists(Reduce(`6esn`=1.0 Contains $_usn4,@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7|{12} =~#usn8).``?)"),
    octest_legacy:ct_string("Drop Constraint On(``:usn2)Assert #usn8(9e1 Is Not Null,`3esn`[{0}][usn1]).@usn6! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:usn2)Assert {`1esn`:$0[..9e1]}.usn2! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:``)Assert Extract(#usn7 In `2esn`[..$#usn8][..Count(*)] Where .e12[@usn5..#usn7][010..{usn1}]).usn1 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`8esn`)Assert Exists([$_usn3[.e0..$usn2],True[00][0Xa]].usn1!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:_usn4)Assert None(@usn5 In 123456789 Ends With $`6esn` Ends With $#usn7 Where $12[True..][{0}..]).usn1! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[usn2:usn2]->()Assert Exists(Case $`7esn` =~{`8esn`} =~$usn1 When 0e0 Starts With 1000 Starts With #usn7 Then 0.0 In $usn1 End.`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:usn1)Assert All(@usn5 In 0.12[usn2..$`5esn`][$`4esn`..0X0123456789ABCDEF] Where {_usn4} In {12} In $0).#usn8! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[``:`4esn`]-()Assert Exists([`3esn`[`3esn`..][#usn8..],1.0 Contains $_usn4].usn2!)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:`5esn`]-()Assert Exists((#usn7 :``:#usn8{`2esn`})-[`2esn`?{_usn3:$_usn4[Count ( * )..],#usn7:{`3esn`}[..07][..{`5esn`}]}]-({_usn4:$`1esn`[{`2esn`}..],_usn4:$_usn3['s_str'][07]}).@usn6!)"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn4:``]-()Assert Exists(Any(`3esn` In {7} Is Null Where Count ( * ) Ends With 12.0).`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:``)Assert Exists(Extract(#usn7 In {``} Is Not Null Where True =~010).`6esn`)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`2esn`)Assert [#usn7 In `2esn`[..$#usn8][..Count(*)] Where {`4esn`} Starts With $usn2 Starts With $1000|{0} Ends With $_usn3 Ends With $`7esn`].#usn8! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`7esn`)Assert Allshortestpaths(((:`5esn`{`1esn`:{999}[1000..{usn2}],`8esn`:{#usn7} Is Not Null Is Not Null})<-[?:`1esn`{``:{`2esn`} Ends With {`7esn`}}]->(:usn1{``})-[usn1?:#usn7{`2esn`:12.e12[0e0..$`1esn`][0X0123456789ABCDEF.._usn3],@usn5:{usn2}[.e0..$999]}]->(:usn1{`3esn`:{123456789} Is Null Is Null}))).#usn8 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:#usn7]->()Assert Exists([#usn8 In {`5esn`}[.e1..``] Where 1e1[{`3esn`}..{`4esn`}][0Xa..$_usn4]].@usn5?)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:`8esn`]-()Assert Exists(Filter(#usn8 In {`5esn`}[.e1..``]).usn1?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:#usn7)Assert Any(`5esn` In \"d_str\" Is Null Is Null Where `4esn` Is Not Null Is Not Null).`4esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:`6esn`]->()Assert Exists(Allshortestpaths(({`7esn`:9e1[2.12],`4esn`:$`8esn` Contains 123456789 Contains $usn2})<-[usn2?:@usn5{`4esn`:{`7esn`} Is Null,_usn4:$123456789 Ends With {`1esn`} Ends With $`4esn`}]->(`6esn` {`3esn`:$`8esn`,@usn6:usn2 Is Not Null Is Not Null})-[usn1? *0X0123456789ABCDEF]->(usn1 :#usn8:#usn8{``:$@usn6 Ends With $_usn4 Ends With 0.12,`6esn`:$`8esn`[..{`2esn`}]})).`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[``:@usn5]->()Assert Exists((@usn5 :`4esn`)<-[_usn3? *7..12{`2esn`:Count ( * ) Contains {`1esn`} Contains 07,#usn7:`7esn`[..2.12][..00]}]->(`3esn` :_usn3:_usn3{usn1:`1esn` Contains {usn2} Contains $#usn8})<-[`2esn`?:`7esn`]->(#usn8 {@usn5:123.654 Contains $`4esn` Contains 1.0,`6esn`:$`` =~12.0 =~$`7esn`})._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On(``:`7esn`)Assert Exists(({``:00 Starts With 0xabc,`3esn`:$`1esn` Ends With 9e1 Ends With $123456789})<-[? *0X0123456789ABCDEF{`6esn`:`1esn` =~\"d_str\",#usn8:{`4esn`} =~9e0 =~{12}}]-(:#usn8:#usn8{`2esn`:$_usn4 Contains Null Contains #usn8,`6esn`:$`5esn`[$`4esn`..{@usn6}][07..$@usn6]})._usn3?)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:#usn8)Assert Exists({`4esn`:`2esn` Is Null,@usn5:00 Starts With 0xabc}.`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:@usn5)Assert Exists(Case True[{`7esn`}..] When .e1 Is Null Is Null Then `3esn`[..$12][..{`7esn`}] When {_usn3}[..$12][..0.12] Then $7[0.12][usn1] End.`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:``)Assert [`2esn` In `1esn` =~\"d_str\" Where 0.12 In _usn3 In {0}].`4esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:#usn7)Assert Exists(Extract(#usn8 In {`5esn`}[.e1..``]|12e12 Ends With {usn1}).`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`8esn`)Assert Any(`3esn` In {7} Is Null Where 1e1 Contains Count ( * )).`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[``:usn1]-()Assert Exists(123456789.`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:@usn5)Assert {`3esn`:12.0 Contains #usn7}.@usn5! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:@usn5)Assert Reduce(`5esn`=2.12 Contains usn2 Contains True,#usn7 In {``} Is Not Null|@usn5 =~{`5esn`} =~`5esn`).`4esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:usn1)Assert Exists(Filter(`5esn` In $999[0.0..] Where {`5esn`} Contains $0 Contains {``}).`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:usn2]-()Assert Exists(Single(`1esn` In {`6esn`}[..$@usn6][..`7esn`] Where 123.654[$`1esn`]).#usn7?)").
