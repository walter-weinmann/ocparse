%%%-------------------------------------------------------------------
%%% File        : performance_command_legacy_SUITE.erl
%%% Description : Test Suite for rule: command.
%%%
%%% Created     : 26.08.2016
%%%-------------------------------------------------------------------
-module(performance_command_legacy_SUITE).

-compile(export_all).

-include_lib("common_test/include/ct.hrl").
-include_lib("eunit/include/eunit.hrl").

%%--------------------------------------------------------------------
%% COMMON TEST CALLBACK FUNCTIONS - SUITE
%%--------------------------------------------------------------------

suite() ->
    [
        {timetrap, {minutes, 10}}
    ].

init_per_suite(Config) ->
    Config.

end_per_suite(_Config) ->
    ok.

%%--------------------------------------------------------------------
%% COMMON TEST CALLBACK FUNCTIONS - ALL
%%--------------------------------------------------------------------

all() ->
    [test_command].

%%--------------------------------------------------------------------
%% TEST CASES
%%--------------------------------------------------------------------

test_command(_Config) ->
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:usn1]->()Assert Exists(({usn1:$_usn4 Contains {1000}})<-[`1esn`?:`3esn` *999{`3esn`:2.12 =~.e12 =~#usn8}]->(:`2esn`:@usn5{`6esn`:{1000}[{@usn5}..][1.e1..],``:$#usn7 In `4esn` In 1.0}).`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`3esn`)Assert Exists({`7esn`:0.12[..$`4esn`][..$`7esn`],`5esn`:$7 Starts With $12 Starts With 12e12}.`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:`2esn`]-()Assert Exists(Shortestpath(((`3esn` {`8esn`:@usn5 Is Not Null,`8esn`:'s_str'[12..$`5esn`]})<-[`4esn`:`1esn`|`6esn` *0{@usn5:{`1esn`} In $999 In {#usn8},usn1:12 In {#usn7}}]-(`` :`4esn`{`2esn`:$`` =~$1000 =~7,#usn7:{7}[{#usn7}..{`5esn`}][123.654..{@usn6}]})))._usn3)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`5esn`)Assert Exists(Single(#usn7 In `7esn` In $`1esn` In $999 Where 's_str' Contains 0xabc).`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(``:`3esn`)Assert None(`4esn` In 0.12[.e12..0][1.0..{_usn4}] Where 01 Is Null Is Null)._usn4? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:usn2]-()Assert Exists(Extract(`4esn` In `4esn`[\"d_str\"..][123.654..] Where $`6esn`|$`6esn` =~$_usn3 =~.e1).`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`8esn`)Assert Exists(Case When {#usn8} Contains 7 Then False Starts With {``} Starts With 07 When `3esn` Starts With `3esn` Starts With 0X0123456789ABCDEF Then {`8esn`}[Count(*)..] Else $7 Is Not Null Is Not Null End.#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn2:`5esn`]-()Assert Exists([`5esn` Is Null Is Null].`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`1esn`)Assert ({``:{999} Ends With 1e1})<-[_usn3?:usn2{`5esn`:$999 Contains 0e0}]->(:`2esn`:@usn5{usn1:1e1[..1e1]}).@usn5 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[``:`2esn`]-()Assert Exists(($7)<-[`8esn`{@usn5:$`` Ends With 9e0}]->(:`6esn`{usn2:010 Ends With `8esn` Ends With $_usn4}).@usn6?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:usn1)Assert Exists(Shortestpath((((`` :_usn3:`5esn`{usn2:`1esn`[True..1000][`4esn`..{`3esn`}],``:`1esn` In `` In {`6esn`}})<-[? *010..]-(`7esn` {`6esn`:0X0123456789ABCDEF =~123.654 =~{_usn4}})-[_usn3 *..00]-(:`5esn`{#usn8:$#usn8[..#usn8][..{`5esn`}]})))).``?)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:usn1)Assert Reduce(`1esn`=2.12 Ends With usn1 Ends With $`2esn`,`1esn` In $`7esn` Contains `1esn` Contains {usn1}|$usn1 =~{_usn3}).`` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`5esn`)Assert Exists(usn1(Distinct {`2esn`} =~Count(*) =~{#usn8},0e0[..$`2esn`][..Count(*)]).usn1?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:_usn3)Assert Extract(`5esn` In 9e1 In 0.0 In {999} Where $``[$@usn6..usn1][usn1..7]|{`8esn`} =~usn1 =~12.e12).`5esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:usn2)Assert Exists((`6esn` {@usn6:0X0123456789ABCDEF,`6esn`:#usn7[`4esn`..$`8esn`]})<-[:`7esn`|:`2esn`{`5esn`:{`6esn`}[07..][{@usn5}..],#usn7:{#usn7}[{12}..usn1]}]->(`3esn` {`8esn`:@usn5 Is Not Null,`8esn`:'s_str'[12..$`5esn`]})-[:`1esn`|`6esn`{@usn6:12 =~0xabc,#usn7:{`7esn`} Starts With {0} Starts With {1000}}]->(`7esn` :``{``:$@usn5 Ends With 00 Ends With 12.e12}).#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:usn1)Assert Extract(_usn4 In $`` =~$1000 =~7 Where {0} Is Not Null Is Not Null|7 Is Null).@usn5? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`7esn`)Assert All(`3esn` In $_usn3 Starts With 0.0 Starts With {#usn7} Where $12[..$`6esn`][..$`1esn`]).`3esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:usn2]-()Assert Exists(#usn8(Distinct $@usn6[`4esn`..{999}][$``..{@usn6}],_usn3[..1000]).#usn7!)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:@usn6]->()Assert Exists(None(`2esn` In 9e12[_usn4..1.e1][{`3esn`}...e1] Where {#usn8}[`7esn`..][_usn3..]).`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:@usn5)Assert Exists(Extract(#usn7 In 12 Starts With $_usn4 Starts With $`6esn` Where 0Xa[_usn4..]|$`5esn` =~`7esn` =~usn2).`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`2esn`:@usn6]-()Assert Exists((usn2 {_usn4:@usn5 Starts With 0xabc})-[_usn4?:_usn3|:@usn5]-(usn1 :``{@usn5:$#usn7 =~$`1esn`})-[{_usn3:2.12[True]}]-(`8esn` {_usn3:0X7 Contains usn2 Contains $`1esn`,`4esn`:$_usn4 Is Null Is Null}).`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[``:`4esn`]-()Assert Exists([`7esn` In Null =~$`8esn` =~{`4esn`} Where {`6esn`}[..$`8esn`]|$`7esn` Ends With @usn5 Ends With .e1].`2esn`)"),
    octest_legacy:ct_string("Create Index On:`2esn`(`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`1esn`:#usn8]-()Assert Exists(Allshortestpaths((`4esn` :usn1{`3esn`:12 Ends With {999} Ends With 's_str'})-[:`3esn` *01]-(:@usn5:`7esn`{_usn4:`5esn`[12.0..],`6esn`:'s_str'[`4esn`..]})-[`7esn`?:_usn4 *0xabc..]->(`4esn` :usn2:_usn4{usn2:@usn6})).``?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[``:`3esn`]-()Assert Exists(Any(_usn4 In $`` =~$1000 =~7 Where 1.e1 Starts With {`3esn`} Starts With #usn8).#usn8)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`2esn`)Assert Exists({usn2:usn1 Starts With Count(*) Starts With @usn6,`1esn`:$`8esn`[...e1]}.`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`1esn`)Assert Single(#usn8 In $`8esn`[{``}..] Where usn1 Is Null).#usn8 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:_usn4)Assert Case When {`1esn`} Starts With 9e12 Starts With $`2esn` Then $`4esn` Contains {7} Contains 999 Else `2esn` Is Not Null End.`2esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`3esn`:`3esn`]-()Assert Exists({`6esn`:`1esn` In `2esn` In $@usn6,_usn4:{1000}[True]}.`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:#usn8)Assert Exists([`2esn` In 9e12[_usn4..1.e1][{`3esn`}...e1] Where $usn2 Ends With $@usn6 Ends With $_usn3]._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:`2esn`]->()Assert Exists(Reduce(`1esn`=$`2esn` In $999 In 0.12,`2esn` In 9e12[_usn4..1.e1][{`3esn`}...e1]|{1000} Is Null Is Null).@usn6)"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn8:`3esn`]-()Assert Exists(Any(#usn7 In 12 Starts With $_usn4 Starts With $`6esn` Where 0Xa[..`6esn`]).``?)"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn8:`5esn`]-()Assert Exists(Reduce(usn2=`4esn` Is Not Null Is Not Null,`1esn` In $`7esn` Contains `1esn` Contains {usn1}|usn2[`3esn`])._usn4)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:usn1)Assert Exists([9e12 In 0Xa In $#usn7,0Xa,$`1esn` Contains {`4esn`} Contains 0.12].`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:@usn5)Assert [#usn7 In `7esn` In $`1esn` In $999 Where $`8esn` Is Not Null Is Not Null|0.e0 Is Not Null Is Not Null]._usn3? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:`3esn`]->()Assert Exists(Reduce(@usn5={999}[{`7esn`}],`4esn` In `4esn`[\"d_str\"..][123.654..]|$`8esn`[...e1]).`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:usn1)Assert None(#usn8 In $`8esn`[{``}..] Where {`1esn`}[`8esn`][{usn2}]).`7esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:_usn3)Assert {`4esn`:\"d_str\" Contains `6esn` Contains $12,`1esn`:@usn5[`5esn`]}.`4esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:@usn5]->()Assert Exists(Reduce(`5esn`=07[{12}..],#usn8 In $`8esn`[{``}..]|`4esn`[$`4esn`]).usn2?)"),
    octest_legacy:ct_string("Create Constraint On(usn1:_usn4)Assert Reduce(usn1={123456789} Contains `7esn` Contains 010,#usn7 In `7esn` In $`1esn` In $999|01234567[`1esn`])._usn4 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:#usn8)Assert Exists(Case ``[``] When {#usn8} Contains 7 Then False Starts With {``} Starts With 07 When 0X7 Ends With {@usn5} Ends With {_usn3} Then {0} Starts With {usn1} End.`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:_usn4)Assert Reduce(`1esn`=.e0[$`8esn`..12e12][usn1..999],`3esn` In $_usn3 Starts With 0.0 Starts With {#usn7}|12[`3esn`..{usn1}])._usn3 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:`5esn`]-()Assert Exists(Allshortestpaths(((`` :`2esn`:@usn5)-[{`5esn`:0X0123456789ABCDEF =~123.654 =~{_usn4}}]->(usn1 :`8esn`{``:#usn7[0.12..12.e12]})-[`1esn`?:`7esn`|:`2esn`]->(`7esn` :`6esn`))).`8esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:`3esn`]-()Assert Exists({_usn4:1.0[..`3esn`][...e0]}.`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`2esn`)Assert Exists(#usn7(Distinct {#usn7}[..$_usn4][..$`4esn`]).`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`3esn`)Assert Exists([_usn4 Is Not Null,$#usn8[..#usn8][..{`5esn`}],#usn8[\"d_str\"..999]].`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:#usn8)Assert Exists(None(#usn8 In $`8esn`[{``}..] Where 1e1 In #usn8).`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:@usn5)Assert Reduce(`2esn`=0Xa[..07][..`2esn`],#usn7 In 0e0 Is Not Null Is Not Null|123456789 Starts With 0e0).`8esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`8esn`)Assert Exists(({`8esn`:{`6esn`}[{@usn5}..{`8esn`}][$_usn3..$`6esn`]})-[#usn8?{usn2:010 Ends With `8esn` Ends With $_usn4}]->(usn2 {#usn8:{#usn8} Contains 7,@usn5:$`1esn` Contains {`4esn`} Contains 0.12})-[_usn4?:`8esn`|:#usn8 *0X0123456789ABCDEF..{usn2:12 Starts With $_usn4 Starts With $`6esn`,@usn5:`7esn` In $`1esn` In $999}]->(_usn4 :usn1)._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:@usn6)Assert (`5esn` {@usn6:0.12 Ends With #usn8 Ends With $1000})<-[`4esn`?:_usn4*]-(_usn3 :#usn8:_usn3)<-[usn2?:#usn8|`1esn`{`2esn`:{`6esn`}[..$12][..0.e0]}]->(`5esn` :@usn5:`7esn`).`4esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`2esn`:`7esn`]-()Assert Exists(Case When 999[$_usn3..][$``..] Then {`2esn`}[`3esn`][{#usn7}] End.#usn7)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`3esn`)Assert Exists(@usn6(Distinct {@usn5} In `6esn` In .e0).@usn6)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`2esn`)Assert [12e12 Starts With $`7esn`,$_usn3[..@usn6][..{999}]].#usn8! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:`4esn`]->()Assert Exists(Reduce(`1esn`={`8esn`} Is Not Null,_usn3 In 010 Contains $`2esn` Contains 01|12e12['s_str'..`8esn`][usn2..$_usn4]).`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`5esn`)Assert Exists(Reduce(`5esn`=07[{12}..],#usn8 In $`8esn`[{``}..]|`4esn`[$`4esn`]).`3esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:@usn6)Assert Exists(Filter(@usn5 In {#usn8} Contains 7 Where True[$7..]).``!)"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:#usn7]-()Assert Exists(Single(`` In {`7esn`} Starts With {0} Starts With {1000} Where $`6esn` =~$_usn3 =~.e1)._usn3?)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`3esn`)Assert Exists(`8esn`(Distinct `1esn` In `` In {`6esn`}).`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On(``:`4esn`)Assert Filter(`4esn` In `4esn`[\"d_str\"..][123.654..] Where 123456789 Contains $@usn6 Contains Count(*)).@usn6 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:_usn3)Assert Allshortestpaths((`4esn` :_usn3:`5esn`{usn2:$`3esn` In $#usn8 In {_usn3}})-[`4esn`{usn1:1e1[..1e1]}]-({`5esn`:{`5esn`}[{_usn3}..][.e0..],@usn5:123456789 Starts With 0e0})).`3esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`2esn`:#usn8]-()Assert Exists(Extract(`` In {`7esn`} Starts With {0} Starts With {1000} Where 0xabc Is Null|{usn1} Contains 0xabc).usn1)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:@usn5)Assert All(`2esn` In 9e12[_usn4..1.e1][{`3esn`}...e1] Where usn2[999..][{`1esn`}..]).@usn5! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`6esn`)Assert Exists({`4esn`:{7} In `1esn` In 123456789}.`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn8:#usn8]->()Assert Exists({@usn5:usn2[999..][{`1esn`}..],#usn7:{@usn6} Starts With 9e1 Starts With usn1}.``?)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`2esn`)Assert (`2esn` :`7esn`:#usn8{usn2:@usn6[2.12..][`5esn`..]})<-[`1esn`? *..0X7]->({#usn8:00}).@usn5 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn2:`5esn`)Assert [#usn7 In 12 Starts With $_usn4 Starts With $`6esn` Where 9e12 Is Null Is Null|{#usn8} Starts With 123456789 Starts With $`1esn`].@usn5 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`4esn`)Assert Reduce(@usn5=0X7 Is Null,_usn4 In $`` =~$1000 =~7|@usn6[..0X0123456789ABCDEF][..{`6esn`}]).@usn5! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[usn2:`5esn`]-()Assert Exists(Allshortestpaths(((`3esn` {`8esn`:@usn5 Is Not Null,`8esn`:'s_str'[12..$`5esn`]})<-[`4esn`:`1esn`|`6esn` *0{@usn5:{`1esn`} In $999 In {#usn8},usn1:12 In {#usn7}}]-(`` :`4esn`{`2esn`:$`` =~$1000 =~7,#usn7:{7}[{#usn7}..{`5esn`}][123.654..{@usn6}]})))._usn3)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:`2esn`]-()Assert Exists((`6esn` {`1esn`:$usn1[$0..Count(*)][@usn6..$12],`4esn`:$`5esn`[$7]})<-[@usn6?{@usn5:07[{12}..]}]-({`6esn`:{12} Starts With 00 Starts With 12}).#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:#usn8)Assert Exists(None(_usn4 In $`` =~$1000 =~7 Where 01[$_usn4..][0..]).#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`6esn`)Assert Any(`7esn` In Null =~$`8esn` =~{`4esn`} Where $usn1 =~{_usn3}).@usn5 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`1esn`)Assert [#usn7 In 0e0 Is Not Null Is Not Null Where $_usn4 Is Null Is Null|9e12 In 0Xa In $#usn7].usn1? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[usn2:usn1]->()Assert Exists(Extract(#usn7 In 12 Starts With $_usn4 Starts With $`6esn` Where $_usn3[..@usn6][..{999}]|0.12 Ends With #usn8 Ends With $1000).usn1!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:@usn6)Assert Exists((`8esn` :`5esn`{@usn5:{`1esn`} In 0.e0 In $1000,`5esn`:$usn1[$0..Count(*)][@usn6..$12]})<-[?{#usn7:{`8esn`}[Count(*)..]}]->({`3esn`:12 Ends With {999} Ends With 's_str'}).#usn8?)"),
    octest_legacy:ct_string("Drop Index On:#usn7(``)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:usn2]->()Assert Exists([0[9e1..][0x0..],9e1 In 0.0 In {999}].`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:``)Assert Any(#usn8 In $`8esn`[{``}..] Where 0Xa[..07][..`2esn`]).`4esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn5:`5esn`]-()Assert Exists({#usn7:9e0[..usn2][..0]}.`5esn`)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:_usn4)Assert [`` In {`7esn`} Starts With {0} Starts With {1000} Where 0xabc Is Null|0.12[..$`4esn`][..$`7esn`]].usn2! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:`3esn`]-()Assert Exists(All(`4esn` In `4esn`[\"d_str\"..][123.654..] Where 123456789 Is Not Null Is Not Null).``)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`5esn`)Assert Exists(Extract(usn2 In 1000 Starts With $123456789 Where False Starts With {``} Starts With 07|Count(*)[.e12..]).usn1?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`7esn`:`2esn`]-()Assert Exists({`1esn`:`7esn` Contains 01234567 Contains `1esn`}.`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:`5esn`]->()Assert Exists((usn2 :@usn6{`4esn`:9e1 In 0.0 In {999},#usn8:$`5esn`[$#usn7]})<-[:`1esn`|`6esn` *0]->(`` :`5esn`{#usn8:$7 In 00}).``)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`5esn`)Assert Shortestpath(({@usn5:$#usn7 =~$`1esn`})).`3esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn5:_usn4]-()Assert Exists(Case 1.0 =~$_usn4 When @usn5 Is Null Is Null Then 01234567 Is Null Is Null End.`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:usn2)Assert Exists(@usn5($7[..{`8esn`}][..{999}]).`1esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:`1esn`]->()Assert Exists(All(@usn5 In {#usn8} Contains 7 Where $_usn3[123456789][0X7]).`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:_usn3)Assert Exists(Single(#usn8 In $`8esn`[{``}..] Where usn1 Is Null).`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:usn1]->()Assert Exists(Single(#usn7 In 12 Starts With $_usn4 Starts With $`6esn` Where {1000}[..$`3esn`][..2.12]).#usn7?)"),
    octest_legacy:ct_string("Create Constraint On(usn2:#usn8)Assert All(`` In {0} Is Not Null Is Not Null).`7esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:usn2]-()Assert Exists((@usn5 {`1esn`:$`5esn` =~`7esn` =~usn2,`8esn`:01234567[`1esn`]})-[@usn6?:`6esn`]-({`3esn`:9e0 Is Not Null})-[usn2:@usn6]->(@usn6 :@usn6{_usn4:{1000} Is Not Null Is Not Null}).`6esn`)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`7esn`)Assert Exists(@usn5(0X0123456789ABCDEF[...e12][..0.12]).`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:usn2)Assert Exists(Reduce(``={`1esn`}[$_usn4..\"d_str\"][{0}..$usn2],`` In `1esn` In `2esn` In $@usn6|#usn7[$@usn6][$`8esn`])._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(``:`2esn`)Assert Exists({`4esn`:$123456789 Is Null Is Null}.``?)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:#usn7)Assert Shortestpath(((`2esn` {`5esn`:.e0[$`8esn`..12e12][usn1..999],#usn7:{`7esn`} Starts With {0} Starts With {1000}}))).`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:`4esn`]->()Assert Exists([@usn5 In {#usn8} Contains 7 Where 0X7 =~{_usn3} =~0x0|usn2 Ends With usn2 Ends With 1.e1].usn1!)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`6esn`)Assert Exists(Filter(@usn5 In {#usn8} Contains 7 Where 010[123456789]).`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`4esn`:`3esn`]-()Assert Exists({`3esn`:$`4esn` Starts With #usn8 Starts With 2.12}.`3esn`)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:usn2)Assert Exists((@usn6 :@usn6{_usn4:{1000} Is Not Null Is Not Null})-[`5esn`?]-(:`6esn`{_usn4:07 =~usn2}).usn2)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:@usn6)Assert [{usn2}[01],$@usn5[0.12..]].`4esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:``]->()Assert Exists(Case {`5esn`}[{_usn3}..][.e0..] When $`6esn` =~$_usn3 =~.e1 Then @usn6[$`2esn`..] Else False Starts With #usn7 Starts With 12e12 End.#usn8)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:@usn5)Assert Exists(Reduce(`5esn`=0.12 Ends With #usn8 Ends With $1000,#usn7 In 12 Starts With $_usn4 Starts With $`6esn`|_usn3 Starts With 0X7).@usn5!)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`8esn`)Assert Exists(Any(`` In 9e0 Is Not Null Where {_usn4}[$`3esn`][$`3esn`]).`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:_usn3)Assert ({usn1:$_usn4 Contains {1000}})-[#usn7? *..0X7{usn1:010 Ends With {999}}]->(`8esn` :_usn3:`5esn`{`5esn`:$`2esn`[..$#usn8],`2esn`:$`2esn` Ends With 9e0 Ends With True})-[`6esn`:`4esn`{@usn5:999 In 0X0123456789ABCDEF In 9e0,``:9e12[_usn4..1.e1][{`3esn`}...e1]}]->(:@usn6).`8esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`3esn`)Assert Case When $@usn6 Is Null Is Null Then `6esn`[$123456789..0xabc][``..$`4esn`] When 0.12 Ends With #usn8 Ends With $1000 Then {`1esn`} In 0.e0 In $1000 End._usn4 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:usn1]->()Assert Exists(Reduce(`7esn`=1000[01234567],`` In {`7esn`} Starts With {0} Starts With {1000}|$_usn3[123456789][0X7]).#usn7)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`2esn`)Assert Exists((`5esn` {usn2:\"d_str\" Ends With `7esn` Ends With 12.0})-[`5esn`?{`1esn`:{``}[...e1]}]->(usn1 :_usn3:`5esn`{_usn4:\"d_str\" Contains `6esn` Contains $12})._usn4?)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`8esn`)Assert Exists(Reduce(@usn6=9e0[.e12..][$`3esn`..],`5esn` In 9e1 In 0.0 In {999}|0.12[..$`4esn`][..$`7esn`]).@usn5)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:usn1]->()Assert Exists([`7esn` In Null =~$`8esn` =~{`4esn`}|12e12['s_str'..`8esn`][usn2..$_usn4]].`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn4:usn2]-()Assert Exists(Allshortestpaths(((`` :usn1))).usn1?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:@usn5)Assert Exists(Single(#usn7 In 0e0 Is Not Null Is Not Null Where `4esn` Ends With $#usn8 Ends With {12}).#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`4esn`)Assert ({`2esn`:9e0 Is Not Null,@usn6:7 In {7}})-[?:`5esn` *..1000{`3esn`:1e1 In #usn8}]->({`2esn`:{0}[1.e1],`5esn`:{`8esn`} =~usn1 =~12.e12}).`6esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn6:usn2)Assert Exists((@usn6 :`7esn`:#usn8{`4esn`:{7}[..123456789][..$#usn8],@usn6:{``}[True][00]})-[?:_usn4{@usn6:_usn3 Starts With 0X7,`6esn`:{@usn6} Starts With 9e1 Starts With usn1}]-(`2esn` :`7esn`:#usn8)<-[:#usn8|`1esn`]->(`1esn` :`8esn`{``:{999} Ends With 1e1}).@usn6!)"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:usn1]->()Assert Exists([`1esn` In $`7esn` Contains `1esn` Contains {usn1} Where {#usn8} In $7|{999} Starts With {`3esn`}].#usn8)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn5:`3esn`]-()Assert Exists(Filter(`5esn` In usn2 Ends With 0.e0 Where @usn5[01234567..$`8esn`][``..`5esn`]).`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`2esn`:`6esn`]-()Assert Exists(Reduce(`6esn`=010 Ends With {999},`5esn` In 9e1 In 0.0 In {999}|123456789 Is Null).``?)"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:`4esn`]->()Assert Exists(None(`4esn` In `4esn`[\"d_str\"..][123.654..] Where {12} Ends With $`6esn` Ends With {#usn7}).``!)"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:`1esn`]->()Assert Exists(None(#usn7 In 0e0 Is Not Null Is Not Null Where {0} Ends With $@usn5 Ends With 010).``!)"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:`6esn`]->()Assert Exists(Filter(`` In {0} Is Not Null Is Not Null Where 123.654[..$`7esn`][...e0]).usn2!)"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:@usn5]->()Assert Exists(Reduce(@usn6=1.e1 Ends With $12 Ends With #usn8,`4esn` In `4esn`[\"d_str\"..][123.654..]|Null =~$`8esn` =~{`4esn`}).`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:`4esn`]-()Assert Exists(`6esn`({12} Starts With 00 Starts With 12).usn2!)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:usn2)Assert All(#usn7 In 0e0 Is Not Null Is Not Null Where $usn1 Is Null Is Null).`3esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:``)Assert Exists([`4esn` Is Not Null Is Not Null].usn1)"),
    octest_legacy:ct_string("Create Constraint On(``:`7esn`)Assert Exists(Reduce(usn2=0X7 In 0xabc,`` In `1esn` In `2esn` In $@usn6|$`4esn` Contains {7} Contains 999).`5esn`)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`5esn`)Assert Exists([{12} Contains $`4esn` Contains usn2,$7 Is Not Null Is Not Null].@usn6!)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`4esn`)Assert Exists(Reduce(_usn3=`4esn` Contains {`7esn`},`5esn` In 9e1 In 0.0 In {999}|1e1 In #usn8).``?)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:@usn5)Assert Reduce(`6esn`=0xabc =~@usn6 =~{`2esn`},#usn7 In 12 Starts With $_usn4 Starts With $`6esn`|1.e1 Is Not Null).`1esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:`4esn`]-()Assert Exists(Reduce(`1esn`={usn2} =~{1000},#usn7 In 12 Starts With $_usn4 Starts With $`6esn`|1.e1[{``}]).``)"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:`5esn`]->()Assert Exists([{1000}[..$`3esn`][..2.12],07[..0Xa],0x0 =~$usn2].@usn5)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:usn2)Assert {`8esn`:$@usn6[`4esn`..][0X7..]}.@usn5 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`8esn`)Assert [True Ends With Count(*) Ends With 1.0,{usn2} Ends With $`7esn` Ends With {`1esn`}]._usn3? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn4:`1esn`]-()Assert Exists(usn1(Distinct `8esn`[`1esn`..{7}][{_usn4}..$_usn4]).`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On(``:`2esn`)Assert Exists(@usn6(`2esn` Ends With $`6esn` Ends With `2esn`).#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:@usn5)Assert Allshortestpaths(((@usn6 {usn2:`8esn` Starts With {_usn4} Starts With $#usn8,#usn7:#usn8[{#usn7}][12e12]})-[?:#usn8|`1esn`{@usn5:$#usn7 =~$`1esn`}]-(#usn8 {`1esn`:$#usn7[..0e0][..$12],`2esn`:{_usn3}[..1.0]}))).usn2! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`2esn`)Assert All(`1esn` In $`7esn` Contains `1esn` Contains {usn1} Where 1.0 Is Not Null Is Not Null).`7esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:_usn4)Assert Exists(_usn4().#usn7)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`1esn`)Assert Case {#usn8} Contains 7 When {`6esn`}[0x0..{1000}] Then 0X0123456789ABCDEF[{`5esn`}..] End._usn4! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`2esn`)Assert Exists({`1esn`:0.12[.e12..0][1.0..{_usn4}]}.``?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:@usn5)Assert Exists(Shortestpath((`` {usn2:1000 Starts With $123456789,`6esn`:$#usn7[$123456789..][{0}..]})).`3esn`)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:#usn7)Assert Reduce(@usn5={_usn4} Ends With .e1 Ends With 0x0,`` In `1esn` In `2esn` In $@usn6|2.12 =~{``} =~0X7).@usn6! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn6:_usn3)Assert ({`7esn`:{7} Contains {#usn8} Contains {7},_usn4:$`8esn` Ends With {`5esn`} Ends With $`4esn`})<-[`3esn`?:_usn4*..]-(#usn8 {`3esn`:123456789 Contains $@usn6 Contains Count(*)}).`5esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[``:``]->()Assert Exists(_usn4(Distinct {``}[True][00],{999} Starts With {`3esn`}).#usn7!)"),
    octest_legacy:ct_string("Create Constraint On(``:`1esn`)Assert All(`` In `1esn` In `2esn` In $@usn6 Where $_usn3[..@usn6][..{999}]).`4esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`7esn`)Assert Exists(All(#usn7 In 12 Starts With $_usn4 Starts With $`6esn` Where $_usn3[..@usn6][..{999}]).`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:usn1)Assert Exists([_usn4 In $`` =~$1000 =~7 Where #usn7[$@usn6][$`8esn`]|@usn5 Starts With 0xabc].@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`8esn`)Assert Single(usn2 In 1000 Starts With $123456789 Where $`4esn` Contains {7} Contains 999).usn2 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:`1esn`]->()Assert Exists({usn1:$123456789 =~00 =~0X0123456789ABCDEF}.`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:``)Assert Exists(Filter(`` In {0} Is Not Null Is Not Null Where $#usn8[@usn5..9e0][2.12...e1]).`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn3:@usn5]-()Assert Exists([usn2 In 1000 Starts With $123456789 Where 0[9e12..{usn1}]].`1esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:`3esn`]-()Assert Exists(All(`7esn` In Null =~$`8esn` =~{`4esn`} Where $#usn8 Ends With #usn8 Ends With 12).`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:_usn3)Assert Exists(Filter(`1esn` In $`7esn` Contains `1esn` Contains {usn1} Where {#usn8} In $7).#usn8)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:``)Assert Exists(Reduce(`5esn`={``}[$@usn5],@usn5 In {#usn8} Contains 7|0X7 Is Null).#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`7esn`:@usn6]-()Assert Exists(Case `6esn` In _usn4 In {_usn4} When $_usn4 Contains 0 Contains False Then {`1esn`}[$_usn4..\"d_str\"][{0}..$usn2] Else True[{1000}][1000] End._usn4!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`7esn`)Assert Case 1.e1[{``}] When $``[..999][..{`1esn`}] Then 00[``..usn2][01..$999] When 1.e1[$_usn4..999] Then 01234567[`1esn`] End.#usn7? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`4esn`)Assert usn1(`6esn` In _usn4 In {_usn4},999[0.0..$`6esn`])._usn4! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:@usn5)Assert Exists(Any(`` In {0} Is Not Null Is Not Null Where 999[$_usn3..][$``..]).`1esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:``]->()Assert Exists([#usn7 In 12 Starts With $_usn4 Starts With $`6esn` Where 0Xa[_usn4..]].`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`2esn`)Assert Exists(`6esn`(Distinct $_usn3[..@usn6][..{999}]).`6esn`)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`7esn`)Assert Exists([`` In {0} Is Not Null Is Not Null Where 12[{usn2}]|{123456789} Starts With {`5esn`}].`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:#usn8]->()Assert Exists(Any(#usn7 In 12 Starts With $_usn4 Starts With $`6esn` Where 9e12 Is Null Is Null).@usn5!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:@usn5)Assert Exists(Allshortestpaths(((`` :`2esn`:@usn5)-[{`5esn`:0X0123456789ABCDEF =~123.654 =~{_usn4}}]->(usn1 :`8esn`{``:#usn7[0.12..12.e12]})-[`1esn`?:`7esn`|:`2esn`]->(`7esn` :`6esn`))).`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:``)Assert Case True Ends With Count(*) Ends With 1.0 When 0X0123456789ABCDEF[{`5esn`}..] Then {`2esn`} Starts With 1e1 When 12[{usn2}] Then #usn8[_usn4] Else {#usn8}[`7esn`..][_usn3..] End.`8esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`4esn`)Assert [{`1esn`}[`8esn`][{usn2}],'s_str' Contains 01 Contains $``,$999[...e1][..{`3esn`}]]._usn4 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:@usn5]->()Assert Exists(None(`4esn` In `4esn`[\"d_str\"..][123.654..] Where 2.12 =~{``} =~0X7).`2esn`)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`3esn`)Assert Exists(Filter(`5esn` In usn2 Ends With 0.e0 Where @usn5[01234567..$`8esn`][``..`5esn`]).`4esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:_usn4]-()Assert Exists([12.0 Contains {`3esn`},{1000} Is Not Null Is Not Null,0xabc[{@usn5}..][Count(*)..]].`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:_usn4)Assert Filter(`4esn` In 0.12[.e12..0][1.0..{_usn4}] Where $`2esn`[..$#usn8]).`6esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:@usn5)Assert Exists(All(`` In {0} Is Not Null Is Not Null Where 1.0 =~$_usn4).`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:usn2)Assert Exists(Shortestpath(((({`8esn`:{`6esn`}[{@usn5}..{`8esn`}][$_usn3..$`6esn`]})<-[?:`2esn`|_usn3]-({`8esn`:{999} In `3esn`,`1esn`:$`6esn` Ends With $`3esn` Ends With 07})-[`7esn`?:`8esn`|:#usn8 *0xabc..]->(`2esn` :usn2:_usn4)))).`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[usn2:#usn7]->()Assert Exists(None(`` In 9e0 Is Not Null Where {1000} Is Not Null Is Not Null).`4esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[``:`8esn`]-()Assert Exists(Single(`1esn` In $`7esn` Contains `1esn` Contains {usn1} Where 's_str'[`4esn`..]).usn2)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:usn1)Assert Extract(_usn4 In $`` =~$1000 =~7 Where _usn4 Contains {123456789} Contains $`5esn`).@usn5 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:#usn7)Assert ({`6esn`:{1000}[$_usn3...e1],usn2:{@usn5}[...e1][..01]})-[`4esn`? *0X0123456789ABCDEF..{usn2:`2esn`[#usn8],`1esn`:9e0[.e12..][$`3esn`..]}]-(#usn8 :`1esn`).`6esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:#usn7)Assert Filter(`1esn` In $`7esn` Contains `1esn` Contains {usn1} Where 010 Is Not Null Is Not Null).`1esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`1esn`)Assert Exists(Case 0 Contains 010 Contains 0.12 When `4esn` Contains {`7esn`} Then {`2esn`} Starts With 1e1 When {`1esn`}[`8esn`][{usn2}] Then $_usn4 Contains 0 Contains False End.`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:@usn5)Assert Reduce(usn2={0} Starts With {usn1},`` In 9e0 Is Not Null|_usn4 Starts With $`3esn` Starts With {#usn8}).`2esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn4:#usn8)Assert Exists([_usn3 In 010 Contains $`2esn` Contains 01 Where 1000[..$12][..$usn2]|12 =~0xabc].usn2)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:usn1]-()Assert Exists((#usn8 {``:123456789[{`7esn`}..][{@usn6}..]})<-[?*..$`4esn`]->(:`2esn`:@usn5{`3esn`:01[$#usn8..][7..]})-[usn2?:`1esn`|`6esn`{usn2:{999} In Count(*) In `6esn`}]->(`8esn` :@usn5:`7esn`{`4esn`:$`2esn` In $999 In 0.12,`1esn`:$`8esn` Is Not Null Is Not Null}).#usn7)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`5esn`)Assert Exists(Reduce(#usn8=.e0[$`8esn`..12e12][usn1..999],`2esn` In 9e12[_usn4..1.e1][{`3esn`}...e1]|{usn1} Contains 0xabc).`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:`7esn`]-()Assert Exists(Allshortestpaths(((:_usn4:`4esn`{_usn3:True Ends With Count(*) Ends With 1.0,`7esn`:{#usn8} Contains 7})<-[ *0X0123456789ABCDEF..{@usn6:{`8esn`}[@usn5][0]}]->(`` :@usn6{@usn6:$#usn7 Ends With `6esn` Ends With {`3esn`},`6esn`:2.12 =~.e12 =~#usn8})-[`3esn`:_usn3|:@usn5 *010..{`2esn`:{0}[1.e1],`5esn`:{`8esn`} =~usn1 =~12.e12}]->(:`8esn`{`6esn`:01[$_usn4..][0..]}))).`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On(``:`6esn`)Assert [`5esn` In usn2 Ends With 0.e0 Where @usn5[01234567..$`8esn`][``..`5esn`]].usn2? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn2:_usn3)Assert (`4esn` :@usn6{`7esn`:{#usn8} In $7})-[`1esn`:@usn5|:`1esn` *01234567..]->(`5esn` :@usn5:`7esn`)<-[`3esn`{`8esn`:`5esn` Is Null}]->(`6esn` {`2esn`:usn2 Ends With 0.e0,#usn7:{`3esn`}[$_usn3...e0]}).`2esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`1esn`)Assert Exists([$7[..{`8esn`}][..{999}],{`3esn`}[`1esn`]].`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`5esn`)Assert Exists(({``:9e1[$`5esn`..0xabc],`2esn`:#usn7[$@usn6][$`8esn`]})-[?:`8esn`|:#usn8 *0xabc..]->(`7esn` :`5esn`{#usn7:{@usn5}[123.654]})-[ *0{_usn3:{#usn8}[`7esn`..][_usn3..],`3esn`:{usn1}[...e1][..{_usn4}]}]->(`2esn` :``{_usn4:{#usn7} In {`6esn`}})._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:#usn7]-()Assert Exists([{999} Starts With {`3esn`}].usn2?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`6esn`)Assert Reduce(`4esn`={123456789}[..010][..#usn8],`` In {`7esn`} Starts With {0} Starts With {1000}|2.12 Ends With usn1 Ends With $`2esn`).#usn7? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:usn2)Assert Exists(None(_usn3 In 010 Contains $`2esn` Contains 01 Where 0x0 Is Null).`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn8:_usn3]-()Assert Exists(@usn5(Distinct `4esn` Starts With 01234567,$999 Is Not Null Is Not Null).usn2?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:usn2)Assert Case When {@usn5} Is Not Null Is Not Null Then \"d_str\" Ends With `7esn` Ends With 12.0 Else {`8esn`} In 123.654 In usn2 End.#usn7? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`4esn`)Assert `8esn`(Distinct 1.e1 Starts With {`3esn`} Starts With #usn8).@usn6? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:_usn4)Assert All(#usn7 In 0e0 Is Not Null Is Not Null Where {0} Ends With $@usn5 Ends With 010).usn1 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`1esn`)Assert Exists(Shortestpath((usn1 :`5esn`{`6esn`:$#usn7 =~$`1esn`})<-[`8esn`?:`5esn` *0X0123456789ABCDEF..{`8esn`:$@usn5[0.12..]}]->({`2esn`:01234567 Is Null Is Null,`7esn`:$_usn3[123456789][0X7]}))._usn3)"),
    octest_legacy:ct_string("Drop Index On:`4esn`(``)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:usn2)Assert [`` In 9e0 Is Not Null Where $`7esn` Contains `1esn` Contains {usn1}].usn1 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:`7esn`]-()Assert Exists([`2esn` In 9e12[_usn4..1.e1][{`3esn`}...e1] Where {``}[True][00]].`2esn`)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`8esn`)Assert Extract(usn2 In 1000 Starts With $123456789 Where {`5esn`} In {#usn7} In $7).`7esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:`3esn`]-()Assert Exists(Any(`` In 9e0 Is Not Null Where {_usn4}[$`3esn`][$`3esn`]).`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`8esn`)Assert Any(#usn7 In 0e0 Is Not Null Is Not Null Where `4esn` Ends With $#usn8 Ends With {12}).@usn5 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`8esn`)Assert Any(#usn7 In `7esn` In $`1esn` In $999 Where `5esn` Is Null).#usn8? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:usn1)Assert All(`4esn` In `4esn`[\"d_str\"..][123.654..] Where 0X7 =~{_usn3} =~0x0).`2esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`1esn`)Assert ``.@usn6? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:``)Assert Case When $@usn6 Is Null Is Null Then `6esn`[$123456789..0xabc][``..$`4esn`] When $7 In 00 Then $`` Ends With 9e0 Else {`8esn`} End.`6esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`6esn`)Assert Exists(Allshortestpaths((usn1 :usn1{`6esn`:{1000}[$_usn3...e1],usn2:{@usn5}[...e1][..01]})<-[@usn6:_usn4*..]->(:@usn5:`7esn`{usn2:9e12 In $_usn3})-[usn2:@usn6]->(@usn6 :#usn7:`3esn`{#usn7:$@usn6[{`8esn`}..9e0][0..$`4esn`],_usn3:2.12 =~1.0 =~{`4esn`}}))._usn3!)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`7esn`)Assert [{`2esn`} =~Count(*) =~{#usn8}].`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:`7esn`]-()Assert Exists(Extract(`` In {`7esn`} Starts With {0} Starts With {1000} Where {1000} Is Null|{`6esn`}[False..$`3esn`]).`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:#usn7)Assert (usn2 {`2esn`:`1esn`[``..$``],`2esn`:0.12 Ends With #usn8 Ends With $1000})-[`7esn`:usn1|usn2]-(:usn2:_usn4{`2esn`:{7}[..123456789][..$#usn8],`2esn`:`2esn` Is Not Null})<-[`5esn`:`2esn`|_usn3{usn1:9e1[..`4esn`]}]-(`1esn` {`7esn`:$usn1[{``}..usn2][`3esn`..$1000]}).usn2 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:@usn6)Assert Extract(`1esn` In $`7esn` Contains `1esn` Contains {usn1} Where {#usn8} In $7|{`1esn`} Is Null).`6esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:@usn5)Assert Exists([`` In {0} Is Not Null Is Not Null Where 12[{usn2}]|0.0 Ends With 1000 Ends With 12e12].`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`7esn`)Assert [#usn7[0.12..12.e12],$123456789 Is Null Is Null,True[$7..]].`8esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`8esn`:_usn3]-()Assert Exists([`` In {`7esn`} Starts With {0} Starts With {1000} Where 0Xa[..`6esn`]].``!)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`1esn`)Assert Exists(None(`` In {0} Is Not Null Is Not Null Where 999[$_usn3..][$``..]).`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:#usn7]-()Assert Exists(Single(`` In 9e0 Is Not Null Where $`` =~$1000 =~7).usn1!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:``]-()Assert Exists(Extract(#usn7 In 0e0 Is Not Null Is Not Null Where $@usn6[`4esn`..{999}][$``..{@usn6}]|`1esn`[0X7..][#usn7..]).`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:#usn8)Assert Exists(Case {`1esn`} Starts With 9e12 Starts With $`2esn` When {_usn4} Ends With .e1 Ends With 0x0 Then 9e0[.e12..][$`3esn`..] When $123456789 =~$`7esn` Then 9e12[_usn4..1.e1][{`3esn`}...e1] Else {999} Is Null Is Null End.#usn8?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`1esn`)Assert (_usn3 :`3esn`:usn2{#usn8:True[..$7][..$`4esn`]})<-[_usn3?:@usn5|:`1esn`]-(`5esn` {#usn7:{@usn5}[123.654]})-[?*{`6esn`:9e12[$#usn7..01234567],_usn3:{#usn8} Contains 7}]-(`8esn` :usn2:_usn4{``:{`8esn`}[Count(*)..],`5esn`:usn2[999..][{`1esn`}..]}).`1esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:#usn7)Assert Single(`` In {0} Is Not Null Is Not Null Where 1.0 =~$_usn4)._usn3! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`1esn`)Assert Exists(`8esn`(Distinct $#usn8[@usn5..9e0][2.12...e1],{`8esn`} Is Not Null).@usn5!)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:#usn8]->()Assert Exists((:_usn4:`4esn`{`7esn`:$usn1[{``}..usn2][`3esn`..$1000]})<-[?:`8esn`|:#usn8{`6esn`:$#usn8 Ends With #usn8 Ends With 12,`1esn`:_usn3[..1000]}]-(`3esn` {usn2:$@usn5[0.12..]}).#usn8?)"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:_usn4]-()Assert Exists(Any(`` In {`7esn`} Starts With {0} Starts With {1000} Where 0Xa[..`6esn`]).usn1?)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn8:usn1]-()Assert Exists(Any(#usn8 In $`8esn`[{``}..] Where 0x0[$123456789..$usn1]).@usn6!)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:#usn8]->()Assert Exists(Filter(`` In 9e0 Is Not Null Where $123456789 =~00 =~0X0123456789ABCDEF).``!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`2esn`)Assert Exists(Single(#usn7 In 0e0 Is Not Null Is Not Null Where 9e1[$@usn5..]).`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:#usn8)Assert Allshortestpaths(((`1esn` :`4esn`))).`6esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:@usn6)Assert Exists(Case When `3esn` =~usn2 =~7 Then 12 In $_usn4 In $123456789 Else 0xabc[{`7esn`}..][{`8esn`}..] End.`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn8:`3esn`]-()Assert Exists(Reduce(`6esn`={@usn5} Contains $999 Contains 0.12,#usn7 In 0e0 Is Not Null Is Not Null|0x0 Starts With usn1 Starts With 01).#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`3esn`)Assert (`8esn` {usn2:$_usn3[..@usn6][..{999}],_usn3:$#usn7 Ends With `6esn` Ends With {`3esn`}})<-[`1esn`:`3esn`]-(:_usn4:`4esn`{@usn6:0x0[$123456789..$usn1]}).#usn7! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:#usn7)Assert Exists(Shortestpath(((#usn8 :#usn8:_usn3{`3esn`:`1esn` In `` In {`6esn`},@usn6:$@usn6 Ends With Count(*)})<-[`3esn`?]->(:`7esn`:#usn8{`1esn`:{`7esn`} Starts With {0} Starts With {1000},`2esn`:#usn8[1e1][$12]})-[`7esn`?:_usn4 *0xabc..]->(usn1 {usn2:True[$7..],``:$1000[`6esn`..][Count(*)..]}))).#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`3esn`:#usn7]-()Assert Exists(Reduce(_usn4=010[$_usn4..][{`3esn`}..],#usn8 In $`8esn`[{``}..]|{_usn4}[$#usn7..]).`5esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:usn1]-()Assert Exists({#usn7:\"d_str\" Is Null Is Null,`8esn`:010[00]}.`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:``)Assert Case When 01234567 Is Null Is Null Then @usn5 Starts With $_usn4 Starts With 12.e12 End.#usn8! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`6esn`)Assert All(`4esn` In 0.12[.e12..0][1.0..{_usn4}] Where 0X0123456789ABCDEF[{`5esn`}..]).`8esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`7esn`:usn2]-()Assert Exists(Allshortestpaths((((:`7esn`:#usn8{`1esn`:{`7esn`} Starts With {0} Starts With {1000},`2esn`:#usn8[1e1][$12]})<-[? *010..]->(`3esn` {`8esn`:{#usn8}[`7esn`..][_usn3..],``:{`6esn`} Is Not Null Is Not Null})<-[:`2esn`|_usn3{#usn7:0Xa Contains 0X7 Contains {``},`8esn`:12.0[12..9e1]}]->(:`4esn`$999))))._usn3)"),
    octest_legacy:ct_string("Drop Constraint On(``:`6esn`)Assert Any(`` In {`7esn`} Starts With {0} Starts With {1000} Where 1000 =~{`1esn`}).usn1? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:`2esn`)Assert Exists(All(_usn4 In $`` =~$1000 =~7 Where {@usn5}[$usn2..]).usn1)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`6esn`)Assert exists(Distinct).`2esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[``:`3esn`]-()Assert Exists([@usn5 In {#usn8} Contains 7 Where 2.12 Ends With usn1 Ends With $`2esn`|0xabc[{`7esn`}..][{`8esn`}..]].`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`7esn`)Assert Exists((:usn2:_usn4{_usn4:@usn6[2.12..][`5esn`..]})-[#usn8?:`3esn` *010..{`5esn`:{`1esn`} =~{usn2} =~$``}]-({`1esn`:usn1 In {usn1} In 0e0,`2esn`:{7} Contains {#usn8} Contains {7}}).#usn8!)"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:`5esn`]-()Assert Exists(Shortestpath(((:`6esn`{usn2:$`1esn` =~$`6esn` =~9e1,`3esn`:$`5esn`[$7]})-[? *0Xa..{#usn8:07[{12}..]}]-({_usn3:999[0.0..$`6esn`]}))).#usn8!)"),
    octest_legacy:ct_string("Create Constraint On()<-[`7esn`:@usn5]-()Assert Exists(Case $`` =~_usn4 =~_usn4 When .e0 Is Not Null Is Not Null Then 9e12[$#usn7..01234567] When $`8esn`[...e1] Then 0xabc[{`7esn`}..][{`8esn`}..] Else 0 Is Null Is Null End.#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:@usn5)Assert Exists([0xabc[{@usn5}..][Count(*)..]]._usn4)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`5esn`)Assert Exists(({_usn4:@usn5[`5esn`]})<-[?*{`6esn`:9e12[$#usn7..01234567],_usn3:{#usn8} Contains 7}]->(`3esn` :usn1{_usn3:$123456789 =~$`7esn`,@usn6:{`2esn`}[`3esn`][{#usn7}]})<-[`6esn`$`6esn`]-({`2esn`:12.0[12..9e1],usn2:{7}[{#usn7}..{`5esn`}][123.654..{@usn6}]}).@usn6?)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:usn1)Assert Exists(Single(#usn8 In $`8esn`[{``}..])._usn3!)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:#usn8)Assert {#usn7:999[0.0..$`6esn`]}.`2esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`1esn`)Assert Reduce(usn1=#usn8 Ends With $usn1,_usn3 In 010 Contains $`2esn` Contains 01|False Starts With 's_str' Starts With $`6esn`).`7esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:`7esn`]->()Assert Exists(Extract(#usn7 In 12 Starts With $_usn4 Starts With $`6esn` Where `1esn`[$`4esn`..]).`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:@usn5)Assert Exists((`6esn` {@usn5:$``[$@usn6..usn1][usn1..7],_usn3:`6esn`[$123456789..0xabc][``..$`4esn`]})<-[?*]-(#usn8 {`6esn`:$usn1 Is Null Is Null})<-[`7esn` *..00]->(`7esn` {`6esn`:{#usn7} In {`6esn`},`2esn`:$12 In {`8esn`}}).``?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:@usn5)Assert Exists(Single(@usn5 In {#usn8} Contains 7 Where 2.12 Ends With usn1 Ends With $`2esn`).`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:``)Assert Case $`7esn` Ends With @usn5 Ends With .e1 When _usn4 In False In {usn1} Then $_usn3[123456789][0X7] Else $`3esn`[..{`4esn`}][..12.e12] End.`5esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:_usn4]->()Assert Exists(Filter(`7esn` In Null =~$`8esn` =~{`4esn`} Where $usn1[{``}..usn2][`3esn`..$1000]).@usn6)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:usn1)Assert `3esn`(Distinct $`` =~_usn4 =~_usn4).@usn6? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`8esn`)Assert Reduce(`4esn`=@usn5 Starts With $_usn4 Starts With 12.e12,usn2 In 1000 Starts With $123456789|\"d_str\" Is Null Is Null).`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn2:`1esn`)Assert {@usn5:0X0123456789ABCDEF[...e12][..0.12],`8esn`:{123456789} Starts With {`5esn`}}.#usn8 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:_usn3]->()Assert Exists([$@usn6[`4esn`..][0X7..]].`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`8esn`)Assert Extract(`5esn` In 9e1 In 0.0 In {999} Where {`1esn`} In $999 In {#usn8}|True[..$7][..$`4esn`]).`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:`7esn`)Assert Exists([#usn7 In `7esn` In $`1esn` In $999 Where 0X7 Contains usn2 Contains $`1esn`|{usn2} =~{1000}]._usn3?)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:usn1)Assert Allshortestpaths((`4esn` :usn1{`3esn`:12 Ends With {999} Ends With 's_str'})-[:`3esn` *01]-(:@usn5:`7esn`{_usn4:`5esn`[12.0..],`6esn`:'s_str'[`4esn`..]})-[`7esn`?:_usn4 *0xabc..]->(`4esn` :usn2:_usn4{usn2:@usn6})).``? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`7esn`)Assert None(`` In `1esn` In `2esn` In $@usn6 Where {7} =~$usn1 =~{_usn4}).#usn7 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[usn2:@usn5]->()Assert Exists(Case `7esn` Contains 01234567 Contains `1esn` When 0X0123456789ABCDEF[..0.12] Then {123456789} Starts With {`5esn`} When `8esn` Contains 123.654 Contains {`7esn`} Then 010 Contains $`2esn` Contains 01 End.@usn5!)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:``)Assert Exists(Shortestpath((((`1esn` :`4esn`)-[`3esn`?:@usn5|:`1esn`{usn2:$`` Contains 123.654 Contains $#usn7}]-(usn1 :`3esn`:usn2)-[? *01234567..{#usn8:`1esn`[0X7..][#usn7..],`7esn`:9e12[`6esn`..{12}]}]-(`3esn` :usn1)))).`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:``)Assert Exists(Reduce(`5esn`={``}[$@usn5],@usn5 In {#usn8} Contains 7|0X7 Is Null).#usn8!)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:#usn7)Assert Exists(({``:9e1[$`5esn`..0xabc],`2esn`:#usn7[$@usn6][$`8esn`]})-[?:`8esn`|:#usn8 *0xabc..]->(`7esn` :`5esn`{#usn7:{@usn5}[123.654]})-[ *0{_usn3:{#usn8}[`7esn`..][_usn3..],`3esn`:{usn1}[...e1][..{_usn4}]}]->(`2esn` :``{_usn4:{#usn7} In {`6esn`}})._usn3?)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`3esn`)Assert Exists(Shortestpath((_usn4 {`4esn`:999 In 0X0123456789ABCDEF In 9e0,`4esn`:0.e0[\"d_str\"][.e12]})-[?:`5esn` *..7]->(`1esn` :`2esn`:@usn5{usn1:9e12[$#usn7..01234567],usn1:010 Ends With {999}})).`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn8:`1esn`]-()Assert Exists((`2esn` :`8esn`{`3esn`:{`6esn`}[{@usn5}..{`8esn`}][$_usn3..$`6esn`],usn2:`1esn` Starts With $`7esn` Starts With `8esn`})-[@usn6?:`1esn`|`6esn`{_usn4:usn1 Starts With Count(*) Starts With @usn6,#usn8:\"d_str\" Is Null Is Null}]->(_usn3 :`1esn`).@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:``)Assert _usn3({usn1}[...e1][..{_usn4}],$`8esn`[..$usn2][..12]).`4esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:#usn7]->()Assert Exists(Reduce(#usn8=#usn7 Is Null,`1esn` In $`7esn` Contains `1esn` Contains {usn1}|False Ends With #usn7 Ends With 1.e1).`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:`6esn`]-()Assert Exists(Case When $`2esn` In $999 In 0.12 Then 123456789[{`7esn`}..][{@usn6}..] When 12e12[@usn5..][01..] Then {123456789}[01234567..Null] End._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:#usn7)Assert Exists({#usn8:{`1esn`} Is Null,``:{`6esn`}[0x0..{1000}]}.@usn6?)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`4esn`)Assert Exists({@usn5:$usn1[{`5esn`}][0Xa]}.`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:_usn4)Assert Exists(Single(`1esn` In $`7esn` Contains `1esn` Contains {usn1} Where 01[$_usn4..][0..])._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`3esn`)Assert Exists(Extract(_usn4 In $`` =~$1000 =~7 Where .e12[..010][..{0}]).@usn6)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`4esn`)Assert Exists({usn1:{1000} Is Not Null Is Not Null,``:1000[{7}..]}.`1esn`)"),
    octest_legacy:ct_string("Create Constraint On(``:usn2)Assert Exists(All(usn2 In 1000 Starts With $123456789 Where `6esn` Contains 01234567 Contains $12).usn1!)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:`4esn`]-()Assert Exists({@usn5:999 In 0X0123456789ABCDEF In 9e0,``:9e12[_usn4..1.e1][{`3esn`}...e1]}._usn4)"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:``]->()Assert Exists(Extract(#usn7 In 12 Starts With $_usn4 Starts With $`6esn` Where {#usn8}[`7esn`..][_usn3..]|{@usn6}[..1000]).`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:usn2)Assert Exists([$@usn6[`4esn`..][0X7..]].`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:`7esn`]->()Assert Exists(Case {0}[{`4esn`}..] When `8esn` Contains 123.654 Contains {`7esn`} Then 1.0 Is Not Null Is Not Null Else @usn6 End.#usn7)"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:`4esn`]-()Assert Exists(Single(`` In {`7esn`} Starts With {0} Starts With {1000} Where $7 In 00).``!)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:usn1)Assert Exists([`7esn` In Null =~$`8esn` =~{`4esn`} Where 12 =~0xabc|True[{1000}][1000]].`1esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:`8esn`]-()Assert Exists(`1esn`(Distinct Count(*) Contains ``).`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`6esn`)Assert [2.12 =~.e12 =~#usn8,{0}[1.e1],`` Ends With $usn1 Ends With $`2esn`].`7esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:@usn5)Assert [`5esn` In usn2 Ends With 0.e0 Where $_usn3[..@usn6][..{999}]|usn1 Contains 9e1 Contains 0X0123456789ABCDEF].`5esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:`7esn`)Assert (@usn6 {`2esn`:$`3esn` Ends With {_usn3} Ends With 9e1})<-[?:#usn7|:`` *010..]-(_usn4 :`5esn`).usn1 Is Unique"),
    octest_legacy:ct_string("Drop Index On:`2esn`(`6esn`)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`2esn`)Assert Reduce(_usn4={#usn7}[..12e12][..{1000}],`5esn` In 9e1 In 0.0 In {999}|{`1esn`} In $999 In {#usn8}).`6esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:usn1]-()Assert Exists(Case When `8esn`[`1esn`..{7}][{_usn4}..$_usn4] Then $7 Contains {1000} Contains 0X7 When {_usn3}[{``}..] Then 0e0 Is Null Is Null Else $`3esn` Ends With {_usn3} Ends With 9e1 End.#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:`3esn`]-()Assert Exists(Shortestpath(((_usn4 {_usn4:0xabc[$#usn7][0Xa]})-[ *..0X7]->(`2esn` {`3esn`:2.12 =~.e12 =~#usn8})<-[?*{`6esn`:9e12[$#usn7..01234567],_usn3:{#usn8} Contains 7}]->(`3esn` :usn1{_usn3:$123456789 =~$`7esn`,@usn6:{`2esn`}[`3esn`][{#usn7}]}))).usn1?)"),
    octest_legacy:ct_string("Create Constraint On()-[usn2:`5esn`]-()Assert Exists({@usn6:#usn7 Is Null}.#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`2esn`)Assert Exists(Allshortestpaths((#usn7 :`2esn`:@usn5{usn1:{`3esn`} Starts With 1.e1 Starts With $#usn7})-[ *0]->(:@usn5:`7esn`{_usn3:{7} Contains {#usn8} Contains {7}})).`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:_usn4)Assert (usn1 :#usn8:_usn3{`7esn`:{`6esn`}[..$`8esn`]})-[#usn8?{_usn3:@usn5 Is Null Is Null,`8esn`:{_usn4}[$`3esn`][$`3esn`]}]-(`1esn` :@usn5:`7esn`{`8esn`:$@usn6[`4esn`..][0X7..]})-[_usn4? *0xabc..{#usn8:Count(*) In ``}]-(`` :`3esn`:usn2{`8esn`:1e1 Contains $`` Contains 12.0}).`1esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`1esn`)Assert Exists(Allshortestpaths((((_usn3 {@usn6:{123456789}[..010][..#usn8],``:.e1[..12e12][..Count(*)]})-[`6esn`?:@usn5|:`1esn`{_usn3:0X7 Contains usn2 Contains $`1esn`,`4esn`:$_usn4 Is Null Is Null}]->(:@usn5:`7esn`{_usn4:`5esn`[12.0..],`6esn`:'s_str'[`4esn`..]})<-[_usn3?:``]->({#usn7:\"d_str\" Starts With 1.0 Starts With 2.12})))).`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On(``:`8esn`)Assert Reduce(``=usn1 Is Null,`5esn` In 9e1 In 0.0 In {999}|$usn2 Ends With `5esn` Ends With 0Xa).#usn8 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:usn2)Assert Exists(Single(`` In {0} Is Not Null Is Not Null).`3esn`)"),
    octest_legacy:ct_string("Drop Index On:`8esn`(`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On(``:@usn5)Assert Exists(Any(`2esn` In 9e12[_usn4..1.e1][{`3esn`}...e1] Where usn2[999..][{`1esn`}..]).`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:_usn3)Assert Exists((`4esn` {usn1:010 Ends With {999}})<-[`2esn`? *0Xa..{#usn7:_usn3 Starts With 0X7,`1esn`:123456789[{`7esn`}..][{@usn6}..]}]-(usn2 $_usn4).`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:usn1)Assert [#usn7 In 0e0 Is Not Null Is Not Null Where $_usn4 Contains 0 Contains False].#usn8? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:`8esn`)Assert [`1esn` In $`7esn` Contains `1esn` Contains {usn1} Where ``[..`2esn`][..@usn5]]._usn4! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`5esn`)Assert Exists([$123456789 =~$`7esn`,$@usn5 Is Not Null Is Not Null,Count(*)[.e12..]].@usn5)"),
    octest_legacy:ct_string("Drop Constraint On(``:`7esn`)Assert Any(`` In {`7esn`} Starts With {0} Starts With {1000} Where `3esn` =~usn2 =~7).@usn5 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn8:_usn3]-()Assert Exists((`8esn` :#usn8:_usn3{#usn7:$_usn3[123456789][0X7]})<-[`2esn`:`` *..123456789]->(@usn5 :usn1).`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:#usn8)Assert {`7esn`:$usn1[{``}..usn2][`3esn`..$1000]}.#usn7 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn2:`5esn`)Assert Case When 9e1[{usn2}..$1000] Then {999} Starts With {`3esn`} End._usn3! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[usn1:`7esn`]-()Assert Exists((usn1 {`3esn`:0e0 Is Not Null Is Not Null,_usn4:$usn2 Ends With $@usn6 Ends With $_usn3})<-[usn2{`7esn`:123.654[_usn3..Null][{@usn6}..0x0]}]->(:`8esn`{`2esn`:_usn4 Starts With $`3esn` Starts With {#usn8},_usn3:{@usn6} Contains {`1esn`}})-[`5esn`?:`8esn`|:#usn8{#usn8:Count(*) In ``}]-(`4esn` :`5esn`{#usn8:`6esn`[$123456789..0xabc][``..$`4esn`]}).@usn6!)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`5esn`)Assert Reduce(`8esn`=123.654[_usn3..Null][{@usn6}..0x0],`3esn` In $_usn3 Starts With 0.0 Starts With {#usn7}|`5esn`[12.0..]).`7esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:#usn7]->()Assert Exists(Case When 0Xa Starts With .e12 Then {`2esn`}[`3esn`][{#usn7}] Else 0X7 =~{_usn3} =~0x0 End.`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:`5esn`]->()Assert Exists([{`5esn`} In {#usn7} In $7,Count(*)[.e12..],999[$_usn3..][$``..]].`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On(usn1:_usn3)Assert All(#usn7 In `7esn` In $`1esn` In $999 Where $`2esn`[Null][{usn2}]).`3esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`7esn`)Assert Filter(`` In `1esn` In `2esn` In $@usn6 Where $_usn3[..@usn6][..{999}]).#usn8 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`8esn`)Assert Extract(_usn3 In 010 Contains $`2esn` Contains 01 Where {`5esn`} In {#usn7} In $7)._usn4! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn7:`6esn`]->()Assert Exists(@usn5(01[$#usn8..][7..],{0}[1.e1]).@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`7esn`)Assert Shortestpath((`4esn` {@usn6:0X0123456789ABCDEF[..0.12],`6esn`:{`8esn`}[`3esn`..999]})<-[?{`6esn`:2.12 =~.e12 =~#usn8,``:$`5esn` In $_usn4 In $`2esn`}]->(:`4esn`)-[ *0]-(`6esn` {@usn5:9e12[$#usn7..01234567]})).`3esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`1esn`)Assert [0.e0 =~0.e0 =~12.e12,{_usn4}[$#usn7..]].`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`8esn`:_usn3]-()Assert Exists(Shortestpath((:usn1$`1esn`)).`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`4esn`)Assert [True[$7..],010 Ends With `8esn` Ends With $_usn4].usn1 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn8:`7esn`]-()Assert Exists({`2esn`:True Ends With {`7esn`} Ends With @usn5}.#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:@usn6)Assert Case 0.12 In 123456789 When 01[..$usn1] Then $usn1[{`5esn`}][0Xa] When `1esn` In `2esn` In $@usn6 Then $`8esn` Is Not Null Is Not Null Else $123456789 =~00 =~0X0123456789ABCDEF End.#usn8? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`5esn`:`8esn`]-()Assert Exists(`8esn`(Distinct `1esn` In `` In {`6esn`}).#usn8)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:#usn8)Assert Exists((`1esn` {#usn8:9e12 Starts With $_usn3})<-[:`4esn` *01{`3esn`:`1esn`[$`4esn`..],#usn8:2.12 Ends With usn1 Ends With $`2esn`}]-({`1esn`:usn1 In {usn1} In 0e0,`2esn`:{7} Contains {#usn8} Contains {7}})<-[`6esn`$`6esn`]-({`2esn`:12.0[12..9e1],usn2:{7}[{#usn7}..{`5esn`}][123.654..{@usn6}]}).`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:usn1]-()Assert Exists(Single(#usn7 In 0e0 Is Not Null Is Not Null Where 0.e0 =~0.e0 =~12.e12)._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`3esn`:#usn7]-()Assert Exists([`` In {`7esn`} Starts With {0} Starts With {1000} Where 07[$_usn3..][$``..]|12.0 Contains {`3esn`}].`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:`7esn`]-()Assert Exists([$12 Starts With {#usn8} Starts With {999},{@usn5} In {_usn3} In 0e0,0 Contains 010 Contains 0.12].#usn8?)"),
    octest_legacy:ct_string("Create Constraint On(``:@usn5)Assert {`5esn`:12e12[12.0][{usn2}],`1esn`:$`5esn` Is Null}.`2esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:`1esn`)Assert Exists({`1esn`:9e0 =~.e12}.`3esn`)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:@usn6)Assert Exists((`` :`3esn`:usn2{`8esn`:1e1 Contains $`` Contains 12.0})<-[usn2 *..7{`6esn`:{usn2} Contains 0e0 Contains 1.e1}]->(_usn4 :`5esn`{`5esn`:9e12 Starts With $_usn3,@usn5:{_usn4}[$`3esn`][$`3esn`]}).`7esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:#usn7]-()Assert Exists({`4esn`:#usn7 In 2.12 In $_usn3,`6esn`:'s_str'[12..$`5esn`]}.#usn7?)"),
    octest_legacy:ct_string("Create Constraint On()<-[``:#usn8]-()Assert Exists(None(`` In {`7esn`} Starts With {0} Starts With {1000} Where 01 Contains _usn3 Contains .e12)._usn3!)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`7esn`)Assert `7esn`(12e12[@usn5..][01..],$usn1[$0..Count(*)][@usn6..$12]).usn2! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`3esn`)Assert (`2esn` :usn2:_usn4)<-[@usn6?:`3esn`]-(`2esn` :`7esn`:#usn8).`5esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:usn2)Assert Exists(Allshortestpaths((#usn8 :`6esn`)-[_usn4?:`4esn`{`3esn`:12.e12,`2esn`:12.e12}]-(#usn7 :`2esn`:@usn5{#usn7:9e0[..usn2][..0]})).`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:@usn5)Assert Reduce(@usn5=0xabc Is Not Null,`4esn` In `4esn`[\"d_str\"..][123.654..]|{123456789} Contains `7esn` Contains 010).`7esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:`5esn`]-()Assert Exists(Allshortestpaths((({`3esn`:12 Ends With {999} Ends With 's_str'})<-[:`7esn`|:`2esn` *0xabc..]-(`5esn` :`7esn`:#usn8{usn1:12e12[@usn5..][01..],`6esn`:{`3esn`}[`1esn`]})<-[usn2? *0x0{usn2:`8esn` Contains 123.654 Contains {`7esn`},`5esn`:9e0 Is Not Null}]->(:_usn3:`5esn`{usn2:$`3esn` In $#usn8 In {_usn3}}))).`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[``:#usn7]-()Assert Exists(Shortestpath((:`8esn`{usn2:{@usn5} In {_usn3} In 0e0,`2esn`:9e0[.e12..][$`3esn`..]})).`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:@usn5]->()Assert Exists(Single(`` In {0} Is Not Null Is Not Null Where \"d_str\" Ends With `7esn` Ends With 12.0).`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:`8esn`]->()Assert Exists([`1esn` In $`7esn` Contains `1esn` Contains {usn1} Where 0X7 =~{_usn3} =~0x0].usn2!)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`1esn`)Assert (_usn4 {`1esn`:0[9e12..{usn1}],`7esn`:{usn2} Ends With _usn3})<-[?*..$`4esn`]->(:`2esn`:@usn5{`3esn`:01[$#usn8..][7..]})-[`1esn`?:@usn5|:`1esn` *010..]-(`3esn` :`4esn`).@usn6? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:@usn5]-()Assert Exists(Filter(#usn7 In 0e0 Is Not Null Is Not Null Where 0.e0 =~0.e0 =~12.e12).``?)"),
    octest_legacy:ct_string("Create Constraint On(usn2:@usn6)Assert [0x0 Contains 0x0 Contains {`1esn`},#usn8 Ends With $usn1,0 In Null In 00].`6esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:_usn3)Assert {usn1:{`1esn`}[..\"d_str\"],#usn8:@usn5 Is Null Is Null}.`7esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:`3esn`]->()Assert Exists(True.`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`7esn`)Assert {_usn4:07 =~usn2}.`5esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn2:`2esn`)Assert [#usn8 In $`8esn`[{``}..] Where 1e1 In #usn8|$`8esn` Ends With {`5esn`} Ends With $`4esn`].usn1! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn7:`5esn`]-()Assert Exists(#usn7({`3esn`} Contains 12.0 Contains {`8esn`})._usn3?)"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:`1esn`]-()Assert Exists(Case When 999[0.0..$`6esn`] Then 0xabc[{@usn5}..][Count(*)..] End._usn4)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`8esn`)Assert _usn3(Distinct {`6esn`}[0x0..{1000}])._usn3! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:#usn7)Assert Exists(Filter(`5esn` In usn2 Ends With 0.e0 Where 12[0X7..]).#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`2esn`)Assert [Null[$`1esn`..][7..]]._usn3 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:``]->()Assert Exists([`4esn` In `4esn`[\"d_str\"..][123.654..] Where $`6esn`|'s_str'[`4esn`..]].#usn8)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`1esn`)Assert [`2esn` In 9e12[_usn4..1.e1][{`3esn`}...e1] Where $usn2 Ends With $@usn6 Ends With $_usn3|``[..`2esn`][..@usn5]]._usn4? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`1esn`:`8esn`]-()Assert Exists([12 Ends With {0} Ends With _usn4,9e12 In $_usn3].`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`3esn`)Assert Case $@usn5 Contains 12e12 Contains {`6esn`} When 010 Ends With {999} Then ``[..`2esn`][..@usn5] When #usn8[\"d_str\"..999] Then $@usn6[{`8esn`}..9e0][0..$`4esn`] End.`2esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn6:``)Assert Exists(Single(`` In {0} Is Not Null Is Not Null Where $@usn5 Contains 12e12 Contains {`6esn`}).`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On(``:`7esn`)Assert [#usn7 In 0e0 Is Not Null Is Not Null Where 's_str' Is Null|{@usn6} Contains {`1esn`}].`8esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`7esn`)Assert Reduce(``=0X7 Is Null,#usn7 In `7esn` In $`1esn` In $999|{999}[{`1esn`}..``][{12}..$123456789]).`1esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`4esn`)Assert Exists(All(`` In {0} Is Not Null Is Not Null Where 0xabc[{@usn5}..][Count(*)..]).#usn7)"),
    octest_legacy:ct_string("Create Constraint On()<-[``:`4esn`]-()Assert Exists((#usn8 :`4esn`)-[#usn8:_usn4{_usn3:True Ends With Count(*) Ends With 1.0,`7esn`:{#usn8} Contains 7}]->({``:{`1esn`} In $999 In {#usn8},`7esn`:{12} Contains $`4esn` Contains usn2}).`6esn`)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`6esn`)Assert Exists(exists({@usn6}[..1000],False Contains _usn4 Contains 2.12)._usn3!)"),
    octest_legacy:ct_string("Create Constraint On(usn2:``)Assert Exists(None(`4esn` In `4esn`[\"d_str\"..][123.654..] Where {usn1}[`6esn`..@usn5][$usn1..0.0]).`5esn`)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`7esn`)Assert Exists((`1esn` {`5esn`:12 In {#usn7}})-[:@usn6 *01234567..{`6esn`:0.0[$`1esn`..$`5esn`][usn2..$``],`1esn`:@usn5[01234567..$`8esn`][``..`5esn`]}]->({@usn5:`6esn` =~{usn2},`1esn`:010})-[#usn8? *..0X7]->(`3esn` {`6esn`:$`2esn` Starts With 0xabc Starts With 1000}).`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`2esn`:`7esn`]->()Assert Exists(Extract(`5esn` In 9e1 In 0.0 In {999} Where 12[{usn2}]|_usn3[..1000]).`6esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:`2esn`]->()Assert Exists({`5esn`:01[..$usn1]}.``)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:usn2]->()Assert Exists([`` In {0} Is Not Null Is Not Null Where `4esn` Is Not Null Is Not Null|_usn4 Contains {123456789} Contains $`5esn`].@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:@usn6)Assert Exists({@usn5:{`8esn`} In {`6esn`} In .e12,@usn5:$@usn6[`4esn`..{999}][$``..{@usn6}]}.`5esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[``:`5esn`]-()Assert Exists([True[#usn8..][$123456789..],0.0 =~$usn1 =~$_usn3]._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:``)Assert Reduce(`8esn`={`8esn`} In {`6esn`} In .e12,@usn5 In {#usn8} Contains 7|$usn1 Starts With {`5esn`}).`8esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`6esn`)Assert Exists(All(usn2 In 1000 Starts With $123456789).@usn5!)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:_usn3)Assert All(@usn5 In {#usn8} Contains 7 Where True[$7..]).#usn7 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:_usn4)Assert count({0}[1.e1],12.0[12..9e1])._usn4? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:_usn3)Assert Exists([$`2esn`[Null][{usn2}],{`7esn`} =~{7},12.0[12..9e1]]._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`8esn`)Assert Exists(usn2($`7esn`[..True],{1000} Contains 12.0 Contains @usn5).usn1?)"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:``]-()Assert Exists([`5esn` Is Not Null Is Not Null].usn1?)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:@usn5)Assert Exists([$_usn4 Contains {1000},0[9e12..{usn1}],Count(*)[.e12..]].#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`3esn`:`5esn`]-()Assert Exists([`2esn` In 9e12[_usn4..1.e1][{`3esn`}...e1] Where {``}[True][00]|{1000}[..$`3esn`][..2.12]].`1esn`)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:usn2)Assert Exists(Shortestpath(((`5esn` :`1esn`)-[?:_usn4]-({`3esn`:True[$7..]})-[ *..0X7]->(#usn7 :_usn4:`4esn`{`4esn`:$`4esn` In $@usn5}))).`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`4esn`)Assert Reduce(usn2=.e1 In {`6esn`} In \"d_str\",`` In {`7esn`} Starts With {0} Starts With {1000}|{#usn8}[`7esn`..][_usn3..]).@usn6? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:_usn4]-()Assert Exists([$_usn4 =~$12 =~`3esn`,``[..`2esn`][..@usn5]].`8esn`!)"),
    octest_legacy:ct_string("Create Index On:_usn4(`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(``:@usn5)Assert Case .e12[..010][..{0}] When {`8esn`}[.e12][01] Then 01[..$usn1] End.usn2? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:@usn6)Assert Exists(Shortestpath(((@usn5 :`1esn`))).#usn7?)"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:@usn6]-()Assert Exists(Single(#usn7 In 0e0 Is Not Null Is Not Null Where {`6esn`} =~{`4esn`} =~0x0).usn2!)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`8esn`)Assert Extract(`4esn` In `4esn`[\"d_str\"..][123.654..] Where 0xabc[{@usn5}..][Count(*)..]).`2esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:@usn6)Assert Case $#usn7 In `4esn` In 1.0 When 12[0X7..] Then {7} =~$usn1 =~{_usn4} When $#usn7 In `4esn` In 1.0 Then 's_str' Is Null Is Null Else $999 Contains 0e0 End._usn4 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:#usn8)Assert [usn2 In 1000 Starts With $123456789 Where $`2esn` Starts With 0xabc Starts With 1000].usn2! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:@usn6]-()Assert Exists([#usn7 In `7esn` In $`1esn` In $999 Where {7} In `1esn` In 123456789].`4esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:``]-()Assert Exists([$usn1 Is Null Is Null,999[0.0..$`6esn`]].`5esn`)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`8esn`)Assert Exists(Case {`5esn`} In {#usn7} In $7 When 0X0123456789ABCDEF[..0.12] Then {123456789} Starts With {`5esn`} End.``!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:@usn5)Assert (`` :@usn6{@usn6:$#usn7 Ends With `6esn` Ends With {`3esn`},`6esn`:2.12 =~.e12 =~#usn8})<-[#usn8?:`3esn`{@usn5:$`3esn`[..{`4esn`}][..12.e12],_usn4:07[..0Xa]}]->(#usn8 :`5esn`{`3esn`:{0} Ends With $@usn5 Ends With 010})<-[:`3esn` *01]->({`3esn`:`2esn`[#usn8]})._usn4! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn2:`7esn`)Assert Exists([`5esn` In usn2 Ends With 0.e0 Where #usn7[$@usn6][$`8esn`]].@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:_usn4)Assert Exists(Any(`1esn` In $`7esn` Contains `1esn` Contains {usn1} Where 1.0 Is Not Null Is Not Null).`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:#usn7)Assert Exists({`3esn`:$`4esn` Starts With #usn8 Starts With 2.12}.`3esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:`6esn`]->()Assert Exists([`1esn` In $`7esn` Contains `1esn` Contains {usn1} Where {#usn8} In $7|{999} Starts With {`3esn`}].`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:`4esn`]-()Assert Exists(All(`5esn` In 9e1 In 0.0 In {999} Where usn2[_usn3..{usn1}][@usn6..{`4esn`}]).#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`7esn`)Assert Exists((:@usn6{`7esn`:$usn1[{``}..usn2][`3esn`..$1000]})-[#usn8?{_usn3:@usn5 Is Null Is Null,`8esn`:{_usn4}[$`3esn`][$`3esn`]}]-(`1esn` :@usn5:`7esn`{`8esn`:$@usn6[`4esn`..][0X7..]})._usn3?)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`5esn`)Assert Exists({`1esn`:0x0 Is Null,`2esn`:$`3esn`[..True][..12.e12]}.@usn6)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn6:`3esn`]->()Assert Exists(Reduce(#usn7=9e1[..`4esn`],#usn7 In 0e0 Is Not Null Is Not Null|@usn5[`5esn`]).#usn7!)"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:`6esn`]-()Assert Exists(Allshortestpaths((@usn6 :@usn6{`3esn`:`7esn`[$`6esn`][$`8esn`],#usn8:@usn6[..0X0123456789ABCDEF][..{`6esn`}]})).``?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`5esn`)Assert Exists(Any(@usn5 In {#usn8} Contains 7 Where 0X7)._usn4)"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:`2esn`]->()Assert Exists(`1esn`(Distinct {``}[$@usn5]).`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:#usn8)Assert All(#usn8 In $`8esn`[{``}..] Where $123456789 =~$`7esn`).#usn8 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:usn2)Assert None(`` In {`7esn`} Starts With {0} Starts With {1000} Where $usn1[$0..Count(*)][@usn6..$12]).`8esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:#usn7)Assert Exists([Count(*)[`8esn`..$`7esn`],#usn8[Null]]._usn3)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:@usn5)Assert [12[0X7..],2.12 Ends With usn1 Ends With $`2esn`,{`1esn`} In $999 In {#usn8}]._usn3! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn4:_usn4]-()Assert Exists(Reduce(_usn4='s_str' Contains 01 Contains $``,`4esn` In 0.12[.e12..0][1.0..{_usn4}]|@usn5[Count(*)][07]).`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:#usn8)Assert Exists(Reduce(`7esn`=#usn7[`4esn`..$`8esn`],`4esn` In 0.12[.e12..0][1.0..{_usn4}]|$#usn7 =~$123456789 =~12).`5esn`!)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:@usn6)Assert Exists(Any(#usn8 In $`8esn`[{``}..] Where $123456789 =~$`7esn`).#usn8)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`3esn`)Assert (#usn8 :`8esn`{`5esn`:$999 Contains 0e0})-[usn2:@usn6]->(@usn6 :#usn7:`3esn`{#usn7:$@usn6[{`8esn`}..9e0][0..$`4esn`],_usn3:2.12 =~1.0 =~{`4esn`}})<-[`3esn`{`8esn`:`5esn` Is Null}]->(`6esn` {`2esn`:usn2 Ends With 0.e0,#usn7:{`3esn`}[$_usn3...e0]}).usn1! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:``)Assert {`2esn`:0.12 Ends With #usn8 Ends With $1000}.@usn6? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:#usn7)Assert Shortestpath((#usn8 {`3esn`:123456789 Contains $@usn6 Contains Count(*)})-[`1esn`?:@usn5|:`1esn` *010..]-(`1esn` :@usn5:`7esn`{`8esn`:$@usn6[`4esn`..][0X7..]})).`8esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`6esn`)Assert [{999}[{`7esn`}],$`5esn` Contains 123456789 Contains $`1esn`,$0 Starts With True Starts With $_usn4]._usn4! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:`5esn`)Assert Exists(Extract(`4esn` In `4esn`[\"d_str\"..][123.654..] Where 0xabc Is Null|'s_str' =~\"d_str\").@usn6?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn2:#usn7]-()Assert Exists({``:$usn1[010..][{@usn6}..],`8esn`:$usn2 Ends With `5esn` Ends With 0Xa}.`8esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:#usn8)Assert [$#usn8 Ends With $_usn4,$@usn6 Is Null Is Null].`5esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn8:@usn6]-()Assert Exists(({usn1:9e12[$#usn7..01234567],usn1:010 Ends With {999}})-[`6esn`?]-(`7esn` :``{@usn6:$usn1[$0..Count(*)][@usn6..$12],`8esn`:0e0[$@usn5..$usn1][usn2..9e1]})<-[`6esn`:@usn6]->(`3esn` :_usn4:`4esn`).#usn7)"),
    octest_legacy:ct_string("Create Constraint On(usn1:usn1)Assert (_usn4 :`5esn`{`5esn`:9e12 Starts With $_usn3,@usn5:{_usn4}[$`3esn`][$`3esn`]})-[`2esn`?:_usn4 *01]-(`2esn` :`5esn`{@usn5:123456789 Contains $@usn6 Contains Count(*)})._usn3? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[``:#usn8]-()Assert Exists(Reduce(_usn4=12e12['s_str'..`8esn`][usn2..$_usn4],_usn4 In $`` =~$1000 =~7|0e0 In `7esn` In $`8esn`).#usn7!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`8esn`)Assert Exists(Case 12 In $_usn4 In $123456789 When 01234567 Is Not Null Then $`7esn` Is Null Is Null When usn2[_usn3..{usn1}][@usn6..{`4esn`}] Then $0[{7}..][123.654..] Else True Ends With {`7esn`} Ends With @usn5 End.`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:`4esn`]-()Assert Exists(_usn4(Distinct 12 In $_usn4 In $123456789).#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:usn2)Assert Exists({`4esn`:#usn7 In 2.12 In $_usn3,`6esn`:'s_str'[12..$`5esn`]}.#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`1esn`)Assert Exists(None(`` In {0} Is Not Null Is Not Null Where {_usn4} Ends With .e1 Ends With 0x0).@usn6)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:usn1)Assert Reduce(#usn8=`3esn`[{``}..$#usn8],`1esn` In $`7esn` Contains `1esn` Contains {usn1}|{`1esn`} =~{usn2} =~$``).@usn6? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:_usn4)Assert ({`6esn`:{`3esn`} Contains 12.0 Contains {`8esn`},#usn7:12e12[@usn5..][01..]})-[`1esn`?:`8esn`|:#usn8{`4esn`:$123456789 Is Null Is Null}]-(`8esn` :_usn3:`5esn`{`5esn`:$`2esn`[..$#usn8],`2esn`:$`2esn` Ends With 9e0 Ends With True})<-[`2esn` *0xabc..{`7esn`:$12 Starts With {#usn8} Starts With {999},@usn6:usn2 Ends With usn2 Ends With 1.e1}]->(`` :`3esn`:usn2{`8esn`:1e1 Contains $`` Contains 12.0}).usn1? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`7esn`)Assert (:@usn5:`7esn`{`8esn`:#usn7 =~#usn8 =~{`6esn`},`7esn`:999[0.0..][$_usn4..]})<-[_usn3?:usn2{`5esn`:$999 Contains 0e0}]->(`6esn` {`1esn`:$usn1[$0..Count(*)][@usn6..$12],`4esn`:$`5esn`[$7]})<-[`3esn`{`8esn`:`5esn` Is Null}]-(`8esn` :@usn5:`7esn`{`4esn`:$`2esn` In $999 In 0.12,`1esn`:$`8esn` Is Not Null Is Not Null}).`2esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`2esn`)Assert Exists(Extract(#usn7 In 0e0 Is Not Null Is Not Null Where {`1esn`} Starts With usn2).`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:`7esn`]->()Assert Exists(usn2(Distinct `6esn` In _usn4 In {_usn4}).`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn6:`2esn`]-()Assert Exists(Any(#usn7 In 12 Starts With $_usn4 Starts With $`6esn` Where $`7esn` Is Null Is Null).#usn7)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`4esn`)Assert {usn1:{#usn8} Ends With $999}.#usn7! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:``)Assert Exists([`` In {`7esn`} Starts With {0} Starts With {1000} Where {1000} Is Null].@usn5?)"),
    octest_legacy:ct_string("Create Constraint On(usn1:@usn6)Assert Exists(Reduce(usn1={#usn8} Contains 7,@usn5 In {#usn8} Contains 7|$`4esn` In $@usn5).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn8:`4esn`]-()Assert Exists({@usn5:$`6esn`,`7esn`:$`6esn`}.`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`2esn`:`1esn`]-()Assert Exists(Reduce(#usn7=`1esn`[``..$``],`4esn` In 0.12[.e12..0][1.0..{_usn4}]|9e1 Is Null Is Null).`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On()<-[`4esn`:`3esn`]-()Assert Exists(#usn7(Distinct @usn5 Starts With 0xabc,$`2esn` Starts With 0xabc Starts With 1000).`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`8esn`)Assert ({`8esn`:$@usn5[0.12..]})<-[ *0X0123456789ABCDEF..{@usn6:{`8esn`}[@usn5][0]}]->(`` :@usn6{@usn6:$#usn7 Ends With `6esn` Ends With {`3esn`},`6esn`:2.12 =~.e12 =~#usn8})<-[`1esn`?:`7esn`|:`2esn`]-(:`4esn`{`3esn`:True[$7..]}).@usn6! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:#usn8)Assert Exists(Reduce(#usn8=12 In {#usn7},_usn3 In 010 Contains $`2esn` Contains 01|0xabc Is Not Null).`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`6esn`)Assert Exists({`4esn`:{`4esn`}[..0Xa],_usn3:@usn6}.`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:usn1)Assert Exists(Case {`6esn`}[07..][{@usn5}..] When 1000 Starts With {@usn5} Starts With 123.654 Then .e12[..010][..{0}] End.#usn8)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:#usn8)Assert Extract(`3esn` In $_usn3 Starts With 0.0 Starts With {#usn7} Where {`1esn`} =~{usn2} =~$``).@usn6 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:``]-()Assert Exists(`5esn`(Distinct $`` =~$1000 =~7).usn2!)"),
    octest_legacy:ct_string("Drop Constraint On(``:`7esn`)Assert Extract(`` In {`7esn`} Starts With {0} Starts With {1000} Where $usn1[$0..Count(*)][@usn6..$12]).`1esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:`5esn`)Assert Exists({`4esn`:{@usn5} In `6esn` In .e0,_usn3:2.12 Ends With {@usn5} Ends With `2esn`}._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:_usn4]->()Assert Exists(@usn5(Distinct #usn7[`4esn`..$`8esn`]).usn1)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`6esn`)Assert [`` In {`7esn`} Starts With {0} Starts With {1000} Where 07[$_usn3..][$``..]|12.0 Contains {`3esn`}].`6esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:`2esn`)Assert Filter(`4esn` In 0.12[.e12..0][1.0..{_usn4}] Where 0xabc[$#usn7][0Xa]).`2esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`5esn`)Assert Exists((`2esn` {`2esn`:12.0[12..9e1],usn2:{7}[{#usn7}..{`5esn`}][123.654..{@usn6}]})<-[#usn7?:`3esn` *..1000]-(:_usn4:`4esn`{@usn6:0x0[$123456789..$usn1]})<-[? *0Xa..{`5esn`:{`2esn`} Starts With 1e1,`6esn`:$_usn4 Is Null Is Null}]->({@usn5:{`8esn`}[@usn5][0],`3esn`:{`3esn`}[$_usn3...e0]}).#usn8?)"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:`5esn`]->()Assert Exists(Shortestpath((`6esn` )<-[`8esn`?{_usn3:.e12[..010][..{0}],usn2:`2esn` Starts With `` Starts With .e12}]-(`5esn` {_usn4:$`7esn` Contains `1esn` Contains {usn1},`5esn`:01[$_usn4..][0..]})-[ *0X0123456789ABCDEF..]->({`7esn`:0.12[..$`4esn`][..$`7esn`],`5esn`:$7 Starts With $12 Starts With 12e12})).`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:@usn6)Assert Extract(`` In {`7esn`} Starts With {0} Starts With {1000} Where 0xabc[..``]).`2esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:@usn6)Assert (#usn8 {`6esn`:$usn1 Is Null Is Null})<-[:@usn5|:`1esn`]->(`` :`8esn`{@usn5:2.12 =~1.0 =~{`4esn`}}).#usn7? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`5esn`)Assert Allshortestpaths((($#usn8)<-[`3esn`{`8esn`:`5esn` Is Null}]-({#usn8:00})<-[usn2 *..7{`6esn`:{usn2} Contains 0e0 Contains 1.e1}]->(_usn4 :`6esn`{``:#usn8[..0Xa],_usn3:12 In {#usn7}}))).@usn6 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn3:_usn4]-()Assert Exists(Case 9e12[0Xa][0x0] When {#usn8} Starts With 123456789 Starts With $`1esn` Then {0}[{`4esn`}..] When {usn1} Is Null Then 7[0e0..][$`1esn`..] End.``?)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`1esn`)Assert Exists(All(`` In 9e0 Is Not Null Where {`8esn`} Is Not Null).`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`5esn`)Assert Case $_usn3 Starts With 0.0 Starts With {#usn7} When $@usn6 Is Not Null Then True[$7..] End.`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn8:_usn4]-()Assert Exists([@usn5 Is Not Null,0Xa[..07][..`2esn`],7[0e0..][$`1esn`..]].`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`7esn`:`2esn`]-()Assert Exists(Reduce(`8esn`={`2esn`} =~{@usn6},`2esn` In 9e12[_usn4..1.e1][{`3esn`}...e1]|`2esn`[#usn8]).``?)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:@usn5)Assert Exists(None(`` In {0} Is Not Null Is Not Null Where $@usn6 Contains {@usn6}).`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`4esn`)Assert Exists(Case $`` =~_usn4 =~_usn4 When .e0 Is Not Null Is Not Null Then 9e12[$#usn7..01234567] When $`8esn`[...e1] Then 0xabc[{`7esn`}..][{`8esn`}..] Else 0 Is Null Is Null End.#usn8?)"),
    octest_legacy:ct_string("Create Constraint On(usn2:usn2)Assert Exists(Case ``[..`2esn`][..@usn5] When `3esn` In .e1 In 0X0123456789ABCDEF Then `3esn` Starts With `3esn` Starts With 0X0123456789ABCDEF End.#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`7esn`)Assert {`3esn`:#usn8[_usn4],usn2:$123456789 =~00 =~0X0123456789ABCDEF}.usn2? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn7:@usn5]-()Assert Exists((_usn4 :`5esn`)<-[`8esn`?{_usn3:.e12[..010][..{0}],usn2:`2esn` Starts With `` Starts With .e12}]-(`5esn` {_usn4:$`7esn` Contains `1esn` Contains {usn1},`5esn`:01[$_usn4..][0..]}).``?)"),
    octest_legacy:ct_string("Create Constraint On(usn2:``)Assert (#usn8 {``:123456789[{`7esn`}..][{@usn6}..]})<-[?*..$`4esn`]->(:`2esn`:@usn5{`3esn`:01[$#usn8..][7..]})-[usn2?:`1esn`|`6esn`{usn2:{999} In Count(*) In `6esn`}]->(`8esn` :@usn5:`7esn`{`4esn`:$`2esn` In $999 In 0.12,`1esn`:$`8esn` Is Not Null Is Not Null}).`5esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[``:`4esn`]-()Assert Exists([$usn1 =~{_usn3},{usn2}[01]].`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn5:`4esn`]-()Assert Exists(Extract(`` In 9e0 Is Not Null Where {0} Starts With {usn1}).#usn7?)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:#usn7]->()Assert Exists(Reduce(`7esn`={`2esn`} =~{@usn6},`2esn` In 9e12[_usn4..1.e1][{`3esn`}...e1]|{`3esn`}[{`8esn`}..$7][0e0..0x0]).#usn7?)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:_usn3)Assert Exists([{`5esn`} Starts With {12} Starts With 07,{#usn8}[True][{`7esn`}]].`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:_usn4)Assert Exists((:``)-[`3esn`?*{@usn6}]-({`1esn`:{_usn4} =~`7esn`})-[`7esn`:`7esn`|:`2esn` *12..00]-({`3esn`:$`3esn` Ends With {_usn3} Ends With 9e1,`1esn`:9e1 Is Null Is Null})._usn4)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:@usn5)Assert [_usn4 Is Not Null,{@usn5} Ends With {usn1} Ends With @usn5].`7esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:#usn8)Assert {`1esn`:999[0.0..][$_usn4..]}.`6esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:``)Assert Exists(All(`4esn` In 0.12[.e12..0][1.0..{_usn4}] Where 0X0123456789ABCDEF[{`5esn`}..]).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:_usn4)Assert Exists(usn1(`6esn` In _usn4 In {_usn4},999[0.0..$`6esn`]).`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:_usn3)Assert Exists([{`7esn`} =~{7},Count(*) Starts With $7,{`3esn`} Starts With 1.e1 Starts With $#usn7].`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`5esn`)Assert Exists(Case #usn7 =~#usn8 =~{`6esn`} When 999[$_usn3..][$``..] Then {`2esn`}[`3esn`][{#usn7}] When $`` =~$1000 =~7 Then {usn2} Is Not Null Is Not Null Else 12 In $_usn4 In $123456789 End.usn1)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`4esn`)Assert Allshortestpaths(((usn2 $_usn4)-[{_usn3:2.12[True]}]-(`8esn` {_usn3:0X7 Contains usn2 Contains $`1esn`,`4esn`:$_usn4 Is Null Is Null}))).#usn7 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`2esn`:`4esn`]-()Assert Exists((_usn4 :#usn8:_usn3)-[`7esn`?{`2esn`:$`` =~$1000 =~7,#usn7:{7}[{#usn7}..{`5esn`}][123.654..{@usn6}]}]->(_usn4 :``)<-[?:usn2{@usn5:{`8esn`} In {`6esn`} In .e12,@usn5:$@usn6[`4esn`..{999}][$``..{@usn6}]}]->(#usn8 :#usn8:_usn3{#usn7:$`2esn`[..$#usn8],@usn6:07[..0Xa]}).`5esn`!)"),
    octest_legacy:ct_string("Create Index On:@usn6(#usn7)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:#usn8)Assert Exists([01[$_usn4..][0..],9e12[`6esn`..{12}],9e12 =~$usn2 =~9e1].usn1?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`2esn`)Assert Exists(Any(_usn3 In 010 Contains $`2esn` Contains 01 Where $7 Is Not Null Is Not Null).usn1)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn5:`8esn`]-()Assert Exists(Allshortestpaths(((#usn8 :usn2:_usn4{``:`1esn`[$`4esn`..],`4esn`:01 Is Null Is Null})<-[usn2?]-(:_usn4:`4esn`{_usn3:True Ends With Count(*) Ends With 1.0,`7esn`:{#usn8} Contains 7}))).`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`7esn`)Assert Exists(Allshortestpaths((#usn8 :_usn4:`4esn`)-[?:`8esn`|:#usn8 *0xabc..]->({#usn8:{@usn5} In `6esn` In .e0})-[@usn5{`6esn`:1e1 Contains $`` Contains 12.0}]-(@usn6 $usn1)).#usn7!)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:#usn7)Assert Exists(({usn1:1e1[..1e1]})<-[_usn4:`6esn`{`7esn`:0e0 In `7esn` In $`8esn`,`7esn`:{_usn3} =~`6esn` =~$`8esn`}]-(_usn4 {`2esn`:`1esn`[``..$``],`2esn`:0.12 Ends With #usn8 Ends With $1000}).#usn7)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`1esn`)Assert Exists(Any(`3esn` In $_usn3 Starts With 0.0 Starts With {#usn7} Where 's_str' =~\"d_str\").#usn8)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`4esn`)Assert Exists((`1esn` {#usn8:9e12 Starts With $_usn3})<-[:`4esn` *01{`3esn`:`1esn`[$`4esn`..],#usn8:2.12 Ends With usn1 Ends With $`2esn`}]-({`1esn`:usn1 In {usn1} In 0e0,`2esn`:{7} Contains {#usn8} Contains {7}})<-[`6esn`$`6esn`]-({`2esn`:12.0[12..9e1],usn2:{7}[{#usn7}..{`5esn`}][123.654..{@usn6}]}).`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`7esn`)Assert Exists(exists(_usn4 Is Not Null).#usn7?)"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn6:`5esn`]-()Assert Exists(Any(#usn7 In 0e0 Is Not Null Is Not Null Where {`6esn`} =~{`4esn`} =~0x0).`4esn`?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:#usn7)Assert Exists(All(#usn8 In $`8esn`[{``}..] Where _usn4 Starts With $`3esn` Starts With {#usn8}).`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:usn1)Assert Exists({`3esn`:$`8esn`[...e1],`5esn`:$`7esn`[..True]}.`7esn`)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`7esn`)Assert Single(#usn7 In `7esn` In $`1esn` In $999 Where 010 Ends With {999}).`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn7:`6esn`]-()Assert Exists((#usn8 :`6esn`)<-[`` *0x0{`3esn`:Count(*)[.e12..],usn2:010 Ends With `8esn` Ends With $_usn4}]-(@usn5 )<-[`1esn`? *0x0{#usn8:$`5esn`[$#usn7]}]-(`` :`4esn`)._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`7esn`:_usn3]-()Assert Exists(({``:{999} Ends With 1e1})<-[_usn3?:usn2{`5esn`:$999 Contains 0e0}]->(:`2esn`:@usn5{usn1:1e1[..1e1]}).@usn5)"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:`6esn`]-()Assert Exists(Allshortestpaths((usn2 :`2esn`:@usn5)-[_usn3:`5esn` *01{`8esn`:_usn4 Is Not Null,`6esn`:0xabc In $`5esn` In @usn5}]->(:`4esn`{_usn3:usn1[..$usn2][..0]})-[@usn5?:_usn3|:@usn5]-(#usn8 :#usn8:_usn3{`3esn`:`1esn` In `` In {`6esn`},@usn6:$@usn6 Ends With Count(*)})).`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:#usn8)Assert Case When {@usn5}[123.654] Then 01234567 Is Null Is Null When {_usn3} =~`6esn` =~$`8esn` Then 0.0 Else 7 Is Null End.@usn6? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:#usn8)Assert [123456789 In usn2,0X7 Is Null,#usn8[..0Xa]].`4esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:#usn7]-()Assert Exists(`6esn`({12} Starts With 00 Starts With 12).usn2!)"),
    octest_legacy:ct_string("Create Constraint On()<-[`5esn`:@usn5]-()Assert Exists(Reduce(`8esn`=@usn5[Count(*)][07],`` In 9e0 Is Not Null|999[$_usn3..][$``..]).@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:_usn4]->()Assert Exists((`1esn` :`5esn`)<-[`8esn`?:`4esn` *999]-(`3esn` {`8esn`:@usn5 Is Not Null,`8esn`:'s_str'[12..$`5esn`]})._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:@usn6]-()Assert Exists((usn1 :#usn8:_usn3{`7esn`:{`6esn`}[..$`8esn`]})-[#usn8?{_usn3:@usn5 Is Null Is Null,`8esn`:{_usn4}[$`3esn`][$`3esn`]}]-(`1esn` :@usn5:`7esn`{`8esn`:$@usn6[`4esn`..][0X7..]})-[_usn4? *0xabc..{#usn8:Count(*) In ``}]-(`` :`3esn`:usn2{`8esn`:1e1 Contains $`` Contains 12.0}).@usn5)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:``)Assert Allshortestpaths(((:@usn6{@usn6:0X0123456789ABCDEF,`6esn`:#usn7[`4esn`..$`8esn`]})<-[#usn8?{`7esn`:123.654[..$`7esn`][...e0]}]->({`3esn`:9e0 =~.e12})<-[usn2?:#usn8|`1esn`{`2esn`:{`6esn`}[..$12][..0.e0]}]->(`5esn` :@usn5:`7esn`))).`2esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`6esn`)Assert Exists(Any(`7esn` In Null =~$`8esn` =~{`4esn`} Where {`6esn`}[..$`8esn`]).`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:`5esn`]-()Assert Exists(Filter(`3esn` In $_usn3 Starts With 0.0 Starts With {#usn7} Where 0.0 =~$usn1 =~$_usn3).`2esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:@usn6]-()Assert Exists(Extract(`7esn` In Null =~$`8esn` =~{`4esn`} Where {_usn4}[$#usn7..]|False Contains _usn4 Contains 2.12).`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`7esn`)Assert Exists(Reduce(``=`2esn` Ends With $0 Ends With {7},_usn4 In $`` =~$1000 =~7|{@usn6} Contains 's_str').`2esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:`5esn`]->()Assert Exists(Case 9e12[_usn4..1.e1][{`3esn`}...e1] When 123.654[_usn3..Null][{@usn6}..0x0] Then {_usn3}[..1.0] When $`5esn` =~`7esn` =~usn2 Then 12.e12 Else $_usn4 Is Null Is Null End.#usn7!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`2esn`)Assert Exists(Reduce(`3esn`=0X7 =~{_usn3} =~0x0,`7esn` In Null =~$`8esn` =~{`4esn`}|{1000}[True]).@usn6?)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`8esn`)Assert Exists({_usn4:{`8esn`}}.@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[``:@usn6]-()Assert Exists({``:$``[$@usn6..usn1][usn1..7],usn1:$usn1[010..][{@usn6}..]}.`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:`2esn`]-()Assert Exists([#usn8 In $`8esn`[{``}..] Where {@usn5}[9e1..][1e1..]|`` Ends With $usn1 Ends With $`2esn`].`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:@usn6)Assert [`5esn` In 9e1 In 0.0 In {999} Where {`1esn`} In $999 In {#usn8}|1.0[..`3esn`][...e0]].@usn5! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:usn1)Assert [`7esn`[$`6esn`][$`8esn`],{7} Contains {#usn8} Contains {7},$12 In $`3esn` In 07].usn2? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:#usn8)Assert Extract(`` In 9e0 Is Not Null Where 2.12 =~.e12 =~#usn8).#usn8? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:#usn7)Assert Exists(Allshortestpaths((#usn8 :_usn4:`4esn`)-[?:`8esn`|:#usn8 *0xabc..]->({#usn8:{@usn5} In `6esn` In .e0})-[@usn5{`6esn`:1e1 Contains $`` Contains 12.0}]-(@usn6 $usn1)).usn1)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:@usn6)Assert (:#usn8:_usn3{#usn8:_usn4 Contains {123456789} Contains $`5esn`,#usn7:$`6esn`})-[`3esn`?*{@usn6}]-(:_usn4:`4esn`{`6esn`:$`8esn`[...e1],@usn5:{@usn5} Is Not Null Is Not Null}).`` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:_usn3)Assert `6esn`(Distinct #usn7[$@usn6][$`8esn`],9e1 In 0.0 In {999}).`` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`6esn`:`4esn`]-()Assert Exists([{12} Starts With 00 Starts With 12,$12 In {`8esn`}].`5esn`)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`5esn`)Assert Exists([@usn5 In {#usn8} Contains 7 Where 010[123456789]].`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:`4esn`]-()Assert Exists(`5esn`(@usn6[2.12..][`5esn`..],`1esn`[0X7..][#usn7..]).usn1?)"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:`1esn`]->()Assert Exists(Filter(#usn8 In $`8esn`[{``}..] Where 01 Contains {0} Contains $`5esn`).#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn8:_usn3]->()Assert Exists([010 Ends With `8esn` Ends With $_usn4,{@usn6} Starts With 9e1 Starts With usn1].`8esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:_usn4]->()Assert Exists([010[123456789],0.0 Ends With {_usn4} Ends With $1000,{123456789}[{12}..$0][0X0123456789ABCDEF..$_usn3]]._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`8esn`)Assert Exists(Shortestpath((((usn1 {usn2:True[$7..],``:$1000[`6esn`..][Count(*)..]})<-[`7esn`{``:{`1esn`} In $999 In {#usn8},`7esn`:{12} Contains $`4esn` Contains usn2}]->(:#usn7:`3esn`{usn1:{`8esn`} Is Not Null})<-[? *..1000{`6esn`:$#usn8 Ends With #usn8 Ends With 12,`1esn`:_usn3[..1000]}]->(`4esn` :`2esn`:@usn5{#usn8:#usn8[{#usn7}][12e12]})))).`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:_usn3)Assert {`5esn`:$``[$@usn6..usn1][usn1..7]}.`8esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:@usn5)Assert Exists(Extract(@usn5 In {#usn8} Contains 7 Where 0X7|010 Is Null Is Null)._usn4!)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`2esn`)Assert Single(`` In {0} Is Not Null Is Not Null Where 010[123456789]).`2esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`7esn`)Assert (_usn3 :`3esn`:usn2{#usn8:True[..$7][..$`4esn`]})<-[_usn3?:@usn5|:`1esn`]-(`5esn` {#usn7:{@usn5}[123.654]})-[?*{`6esn`:9e12[$#usn7..01234567],_usn3:{#usn8} Contains 7}]-(`8esn` :usn2:_usn4{``:{`8esn`}[Count(*)..],`5esn`:usn2[999..][{`1esn`}..]}).`1esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`1esn`)Assert exists(_usn4 Is Not Null).#usn8! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`3esn`)Assert $12.#usn7! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn4:usn1)Assert Exists({@usn6:{#usn7} In `` In @usn6,_usn3:{`1esn`} In `` In {12}}.@usn6)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:_usn3)Assert Exists({usn2:@usn6}.@usn5!)"),
    octest_legacy:ct_string("Create Constraint On()-[``:`7esn`]->()Assert Exists(None(`` In 9e0 Is Not Null Where 01234567[True]).@usn6)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`1esn`)Assert (`1esn` :@usn5:`7esn`{`8esn`:$@usn6[`4esn`..][0X7..]})-[ *0]->({`2esn`:01234567 Is Null Is Null,`7esn`:$_usn3[123456789][0X7]})._usn3? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn2:`5esn`]-()Assert Exists(Any(`` In {`7esn`} Starts With {0} Starts With {1000} Where 1000 =~{`1esn`}).#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:@usn5)Assert Any(`` In {`7esn`} Starts With {0} Starts With {1000} Where $7 In 00).@usn5! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`1esn`)Assert Exists((_usn4 {`1esn`:0[9e12..{usn1}],`7esn`:{usn2} Ends With _usn3})<-[?*..$`4esn`]->(:`2esn`:@usn5{`3esn`:01[$#usn8..][7..]})-[`1esn`?:@usn5|:`1esn` *010..]-(`3esn` :`4esn`).@usn6?)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`3esn`)Assert Exists(Single(@usn5 In {#usn8} Contains 7 Where 2.12 Ends With usn1 Ends With $`2esn`).`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`3esn`:`1esn`]-()Assert Exists(None(`2esn` In 9e12[_usn4..1.e1][{`3esn`}...e1] Where {`1esn`}[$_usn4..\"d_str\"][{0}..$usn2]).usn2)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:@usn6)Assert [`4esn` In `4esn`[\"d_str\"..][123.654..] Where 0xabc Is Null]._usn4! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:`8esn`)Assert Exists([_usn3 In 010 Contains $`2esn` Contains 01]._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`3esn`:`1esn`]-()Assert Exists(Reduce(@usn6=1.e1 Ends With $12 Ends With #usn8,`4esn` In `4esn`[\"d_str\"..][123.654..]|Null =~$`8esn` =~{`4esn`}).#usn7)"),
    octest_legacy:ct_string("Create Constraint On(usn2:usn2)Assert Exists(None(#usn8 In $`8esn`[{``}..] Where {`6esn`}[False..$`3esn`]).@usn6!)"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:@usn6]->()Assert Exists([12 =~0xabc,7 In {7}].`2esn`!)"),
    octest_legacy:ct_string("Create Index On:#usn7(`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`6esn`)Assert Extract(`5esn` In 9e1 In 0.0 In {999} Where {`1esn`} In $999 In {#usn8}|$`5esn`[.e0..][0.0..]).#usn8? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:usn2)Assert Exists((`6esn` {@usn5:9e12[$#usn7..01234567]})<-[`3esn`{`8esn`:`5esn` Is Null}]-(`5esn` {`1esn`:07 Ends With $0 Ends With \"d_str\"}).`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn6:_usn4]-()Assert Exists([_usn3 In 010 Contains $`2esn` Contains 01 Where {`6esn`} Is Null]._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:usn2)Assert Exists(Any(`3esn` In $_usn3 Starts With 0.0 Starts With {#usn7} Where 12[0X7..])._usn4?)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`3esn`)Assert Exists([{_usn3}[{``}..],{_usn4}[$#usn7..]].`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:#usn8)Assert Exists((:@usn5:`7esn`{`2esn`:usn1 Contains 9e1 Contains 0X0123456789ABCDEF,@usn6:`7esn`[{`7esn`}..$1000]})<-[@usn5 *12..00{usn1:`1esn` Starts With $`7esn` Starts With `8esn`,`7esn`:{#usn7} In {`6esn`}}]-(`3esn` {`2esn`:{`6esn`}[..$12][..0.e0]})<-[_usn3:#usn7|:``]->(`8esn` :`5esn`{_usn4:$`8esn`[{``}..]}).@usn5!)"),
    octest_legacy:ct_string("Create Constraint On()<-[`2esn`:`1esn`]-()Assert Exists(Filter(`3esn` In $_usn3 Starts With 0.0 Starts With {#usn7} Where {usn2}[{999}..][0Xa..]).`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`7esn`:_usn4]-()Assert Exists(Shortestpath((#usn7 :`2esn`:@usn5{usn1:{`3esn`} Starts With 1.e1 Starts With $#usn7})-[ *0]->(:@usn5:`7esn`{_usn3:{7} Contains {#usn8} Contains {7}})).`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`5esn`)Assert Exists(Filter(`4esn` In `4esn`[\"d_str\"..][123.654..] Where $`6esn`).`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`2esn`)Assert Any(`5esn` In 9e1 In 0.0 In {999} Where $0[{7}..][123.654..]).``! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:usn1]->()Assert Exists(Case When 123456789 Contains $@usn6 Contains Count(*) Then $@usn6 Ends With Count(*) When 0Xa Then {`5esn`} In {#usn7} In $7 Else `1esn` Starts With $`7esn` Starts With `8esn` End.usn1!)"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:`4esn`]-()Assert Exists(All(`` In {`7esn`} Starts With {0} Starts With {1000} Where 0xabc[..``]).`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:usn2)Assert (:`3esn`:usn2{`5esn`:{`5esn`}[{_usn3}..][.e0..],@usn5:123456789 Starts With 0e0})<-[?:`7esn`|:`2esn` *0X0123456789ABCDEF..]->(@usn5 :_usn4:`4esn`{`1esn`:0e0[..$`2esn`][..Count(*)],`1esn`:$#usn8 Ends With $_usn4}).usn2 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:@usn6)Assert Exists([{`8esn`} In {`6esn`} In .e12]._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:usn1)Assert Exists({_usn4:$`4esn` Contains {7} Contains 999}.`7esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:`4esn`]-()Assert Exists(Any(`` In 9e0 Is Not Null Where $123456789 =~00 =~0X0123456789ABCDEF).`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:_usn4)Assert Exists(Allshortestpaths(((`4esn` :`2esn`:@usn5{#usn8:1e1[{`6esn`}..{1000}][07..123456789]})-[?:`8esn`|:#usn8]-(`3esn` {`8esn`:{#usn8}[`7esn`..][_usn3..],``:{`6esn`} Is Not Null Is Not Null})<-[?:@usn5|:`1esn`{usn2:$12[$`3esn`][9e12]}]->(:@usn5:`7esn`{``:123.654[0xabc][1.e1]}))).`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(``:`2esn`)Assert Case When 12 Ends With _usn4 Then True Ends With {`7esn`} Ends With @usn5 Else 0X0123456789ABCDEF[..0.12] End.#usn7? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:@usn6)Assert Reduce(usn2=$usn1 Starts With {`5esn`},#usn7 In `7esn` In $`1esn` In $999|{`4esn`}[..0Xa]).`7esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:_usn4)Assert {``:@usn6,`7esn`:2.12 =~{``} =~0X7}.`8esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`6esn`)Assert Exists(Extract(#usn7 In `7esn` In $`1esn` In $999 Where 's_str' Contains 0xabc).@usn6)"),
    octest_legacy:ct_string("Drop Constraint On(``:``)Assert Exists(Allshortestpaths((#usn8 {`3esn`:123456789 Contains $@usn6 Contains Count(*)})<-[@usn5?]-(:`4esn`{`8esn`:{#usn8} Ends With $999})-[ *0X0123456789ABCDEF..]->(usn2 :`2esn`:@usn5{`2esn`:{`6esn`}[07..][{@usn5}..]})).`4esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`8esn`)Assert {@usn5:9e12[$#usn7..01234567]}._usn4 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:#usn8)Assert Any(#usn8 In $`8esn`[{``}..] Where 0xabc[{@usn5}..][Count(*)..]).usn1 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:_usn4)Assert Exists(2.12.`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[``:`7esn`]->()Assert Exists(Case 9e12 In $_usn3 When `1esn` Starts With $`7esn` Starts With `8esn` Then False Starts With 's_str' Starts With $`6esn` End.`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`3esn`)Assert Exists([0.e0[\"d_str\"][.e12],{usn2} Contains `4esn` Contains @usn5,`4esn`[\"d_str\"..][123.654..]].#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(``:`5esn`)Assert Exists(Case When 2.12 Ends With {@usn5} Ends With `2esn` Then 's_str' Is Null Is Null End.`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:`4esn`]-()Assert Exists(#usn8(#usn7[0.12..12.e12]).`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:_usn4)Assert [#usn7[0.12..12.e12],$123456789 Is Null Is Null,True[$7..]]._usn4? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`7esn`)Assert Exists(Extract(#usn7 In 0e0 Is Not Null Is Not Null Where 1e1 In #usn8).`1esn`)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`3esn`)Assert {#usn7:$`4esn` Starts With #usn8 Starts With 2.12,``:12e12['s_str'..`8esn`][usn2..$_usn4]}.`8esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:`4esn`]->()Assert Exists(Extract(`2esn` In 9e12[_usn4..1.e1][{`3esn`}...e1] Where 0Xa|$0 Starts With {`2esn`}).@usn6)"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:usn1]-()Assert Exists(Any(`` In 9e0 Is Not Null Where {#usn8} Starts With 123456789 Starts With $`1esn`).`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:_usn4)Assert Case $_usn4[1.0..@usn6] When $_usn3[..@usn6][..{999}] Then `4esn` Starts With 01234567 End.``? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`4esn`)Assert Single(_usn3 In 010 Contains $`2esn` Contains 01 Where $`5esn` =~`7esn` =~usn2).`1esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn5:#usn8]-()Assert Exists(Extract(`7esn` In Null =~$`8esn` =~{`4esn`} Where {usn2}[01]|\"d_str\" Starts With 1.0 Starts With 2.12).`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`5esn`)Assert Exists((_usn4 :`8esn`{`8esn`:`1esn` Is Null,#usn7:07[$_usn3..][$``..]})<-[usn2?{#usn7:{0} Is Not Null Is Not Null,`7esn`:1000 Starts With {@usn5} Starts With 123.654}]->(:@usn6{@usn6:01234567[True]})<-[`6esn`$`6esn`]-(:`3esn`:usn2{`5esn`:{`5esn`}[{_usn3}..][.e0..],@usn5:123456789 Starts With 0e0}).`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`7esn`)Assert Exists({_usn3:0X7 Contains usn2 Contains $`1esn`,`4esn`:$_usn4 Is Null Is Null}.`1esn`)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:usn2)Assert Exists(Reduce(`8esn`=_usn4 In False In {usn1},`` In {`7esn`} Starts With {0} Starts With {1000}|{`2esn`} Starts With 1e1).`8esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:`8esn`]->()Assert Exists({`1esn`:{_usn4} =~`7esn`}.`5esn`)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:``)Assert Exists([$`1esn` =~$`6esn` =~9e1,`1esn` In `2esn` In $@usn6,{`6esn`}[0x0..{1000}]].`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`2esn`)Assert [#usn7 In 12 Starts With $_usn4 Starts With $`6esn` Where @usn5 Starts With 0xabc|{_usn4}[$`3esn`][$`3esn`]]._usn4! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`6esn`)Assert Exists([`1esn` In $`7esn` Contains `1esn` Contains {usn1} Where $123456789 =~00 =~0X0123456789ABCDEF].``!)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:usn1)Assert ({`2esn`:9e0 Is Not Null,@usn6:7 In {7}})-[?:`5esn` *..1000{`3esn`:1e1 In #usn8}]->({`2esn`:{0}[1.e1],`5esn`:{`8esn`} =~usn1 =~12.e12}).`7esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn1:@usn6]-()Assert Exists(Reduce(`7esn`={`8esn`}[@usn5][0],#usn7 In `7esn` In $`1esn` In $999|{`6esn`} Is Not Null Is Not Null).`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`7esn`)Assert 9e1.#usn7? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:`6esn`]-()Assert Exists(Allshortestpaths((@usn6 :@usn6{`3esn`:`7esn`[$`6esn`][$`8esn`],#usn8:@usn6[..0X0123456789ABCDEF][..{`6esn`}]})).``?)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:@usn6)Assert Exists(usn2(Distinct).`3esn`)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:@usn6)Assert Exists([`` In `1esn` In `2esn` In $@usn6 Where 07 Ends With `1esn` Ends With {@usn5}|$12 In $`3esn` In 07]._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:@usn5)Assert {`6esn`:$7[..{`8esn`}][..{999}]}._usn4? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`2esn`)Assert [`` In {0} Is Not Null Is Not Null Where $123456789 Is Not Null Is Not Null].usn2? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:#usn8)Assert Exists(Extract(`` In 9e0 Is Not Null Where usn2[999..][{`1esn`}..]|{999} Is Null Is Null).usn2!)"),
    octest_legacy:ct_string("Drop Index On:``(@usn5)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:``)Assert Exists(Extract(`7esn` In Null =~$`8esn` =~{`4esn`} Where $`5esn` =~`7esn` =~usn2|{`5esn`} In {#usn7} In $7).`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`5esn`)Assert [`3esn` In $_usn3 Starts With 0.0 Starts With {#usn7} Where {`1esn`} =~{usn2} =~$``|$`5esn` In $_usn4 In $`2esn`].`3esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:#usn7]-()Assert Exists([$`5esn`[$#usn7],#usn8[Null],{@usn5}[9e1..][1e1..]].#usn8!)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:#usn8)Assert Extract(`` In {`7esn`} Starts With {0} Starts With {1000} Where $`5esn`[$#usn7]).`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:@usn6]-()Assert Exists(Allshortestpaths((({`2esn`:9e1[{`5esn`}]})<-[``:`` *..0X7{`3esn`:`2esn`[#usn8]}]-(`3esn` {_usn4:0.e0 Ends With Count(*) Ends With `8esn`}))).`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:`2esn`]-()Assert Exists(_usn4(Distinct 0xabc[$#usn7][0Xa],12 Starts With $_usn4 Starts With $`6esn`).`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:usn1)Assert `4esn`(Distinct 999[$_usn3..][$``..],Count(*)[.e12..]).`6esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`1esn`:`4esn`]-()Assert Exists(Reduce(`7esn`=01[$#usn8..][7..],usn2 In 1000 Starts With $123456789|.e12 Contains 00 Contains usn2).`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`2esn`)Assert Extract(`2esn` In 9e12[_usn4..1.e1][{`3esn`}...e1] Where True[..$7][..$`4esn`]|#usn8[1e1][$12]).``! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:#usn7)Assert [@usn5 In {#usn8} Contains 7 Where #usn8[_usn4]]._usn4! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`2esn`:`7esn`]->()Assert Exists(Shortestpath((`1esn` {#usn8:9e12 Starts With $_usn3})).usn2!)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:usn2)Assert Allshortestpaths(((@usn5 :`7esn`:#usn8))).`3esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:`4esn`]-()Assert Exists((`1esn` :@usn5:`7esn`{``:{`8esn`}[@usn5][0],`8esn`:01 Contains _usn3 Contains .e12})-[?:`8esn`|:#usn8 *..123456789]-(:`2esn`:@usn5{`3esn`:01[$#usn8..][7..]})<-[`5esn`?:`3esn` *..7{@usn6:_usn3 Starts With 0X7,`6esn`:{@usn6} Starts With 9e1 Starts With usn1}]-(:`6esn`{`1esn`:07 Ends With $0 Ends With \"d_str\"}).`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`3esn`)Assert Exists((:usn2:_usn4{`2esn`:{7}[..123456789][..$#usn8],`2esn`:`2esn` Is Not Null})-[_usn4?:`4esn`{`3esn`:12.e12,`2esn`:12.e12}]-(`1esn` {`5esn`:$_usn4[1.0..@usn6]})<-[#usn7?:`7esn`|:`2esn` *..0X7{#usn7:usn2[`3esn`],#usn7:1.0[..`3esn`][...e0]}]->(`8esn` {#usn7:$`6esn` Is Not Null,usn2:7[{_usn4}..{usn2}][9e0..0X7]}).#usn7?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:``)Assert Exists(Filter(`` In `1esn` In `2esn` In $@usn6 Where 07 Ends With `1esn` Ends With {@usn5}).`2esn`)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:_usn4)Assert Case {@usn5} Is Not Null Is Not Null When 12.e12 Then $`7esn` Ends With @usn5 Ends With .e1 When 07 Starts With 123.654 Starts With 1.0 Then {usn2} Ends With _usn3 End.`1esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`6esn`)Assert [{`5esn`} Starts With {12} Starts With 07,{#usn8}[True][{`7esn`}]].`4esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:@usn5)Assert [$0 Starts With True Starts With $_usn4,$`2esn` Starts With 0xabc Starts With 1000,{_usn4}[$`3esn`][$`3esn`]].usn1? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:``)Assert {`5esn`:12e12[12..`8esn`][0.e0..9e1],`4esn`:{_usn4} Starts With 01234567 Starts With $#usn7}.`3esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn7:`5esn`]-()Assert Exists(Case When 12 Ends With {0} Ends With _usn4 Then 9e12[$#usn7..01234567] Else .e12[..010][..{0}] End.``?)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`3esn`)Assert Exists(Any(`1esn` In $`7esn` Contains `1esn` Contains {usn1} Where 0.0 Ends With {_usn4} Ends With $1000).#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`3esn`)Assert [$@usn6 Contains {@usn6},False[{`5esn`}..{`8esn`}]].#usn8! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:usn2]-()Assert Exists([`` In `1esn` In `2esn` In $@usn6 Where .e1[..12e12][..Count(*)]|{_usn4}[$#usn7..]]._usn3)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`3esn`)Assert Single(`` In {0} Is Not Null Is Not Null Where 12e12['s_str'..`8esn`][usn2..$_usn4]).``! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`8esn`)Assert ({`3esn`:`2esn`[#usn8]})-[?:@usn5|:`1esn` *0]-(`3esn` {usn1:$@usn6 Contains {@usn6},usn1:0 Is Null Is Null})<-[:`2esn`|_usn3{#usn7:0Xa Contains 0X7 Contains {``},`8esn`:12.0[12..9e1]}]->(:`4esn`$999)._usn3? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`1esn`)Assert Exists(Case $`7esn`[..True] When {`1esn`} Starts With 9e12 Starts With $`2esn` Then $`4esn` Contains {7} Contains 999 End.`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn1:`4esn`]-()Assert Exists({`3esn`:0xabc[$#usn7][0Xa],`2esn`:{@usn5}[123.654]}._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`4esn`)Assert All(`2esn` In 9e12[_usn4..1.e1][{`3esn`}...e1] Where 0X0123456789ABCDEF[{`5esn`}..]).#usn8! Is Unique"),
    octest_legacy:ct_string("Drop Index On:`1esn`(``)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`6esn`)Assert [_usn4 In $`` =~$1000 =~7 Where 1.0 =~$_usn4].`4esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:#usn8)Assert {`2esn`:\"d_str\" Contains `6esn` Contains $12}.`5esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:_usn3)Assert Case 0X0123456789ABCDEF When 9e12 Starts With Count(*) Starts With {`4esn`} Then 's_str' Contains {_usn4} When 7[{_usn4}..{usn2}][9e0..0X7] Then 123.654[_usn3..Null][{@usn6}..0x0] End.@usn6? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`7esn`)Assert Exists(Extract(#usn7 In 12 Starts With $_usn4 Starts With $`6esn` Where {#usn8}[`7esn`..][_usn3..]|$7 Contains {1000} Contains 0X7).#usn8!)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`7esn`)Assert Exists(All(#usn8 In $`8esn`[{``}..] Where {`6esn`}[False..$`3esn`]).``)"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:usn1]->()Assert Exists(Reduce(usn1={_usn3} Starts With $`4esn` Starts With {_usn4},`2esn` In 9e12[_usn4..1.e1][{`3esn`}...e1]|1000 Starts With $123456789).`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:`4esn`]-()Assert Exists(Single(#usn7 In 0e0 Is Not Null Is Not Null Where $_usn4 Is Null Is Null).@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:#usn8]-()Assert Exists({`3esn`:$`4esn` Starts With #usn8 Starts With 2.12}.`3esn`)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`1esn`)Assert Exists((`4esn` {`3esn`:#usn8 Ends With $usn1})<-[`4esn`?{`4esn`:{_usn4}[$#usn7..],`3esn`:$1000[$`7esn`..1e1]}]-({@usn5:`6esn` =~{usn2},`1esn`:010}).``)"),
    octest_legacy:ct_string("Create Constraint On()<-[`5esn`:#usn8]-()Assert Exists(Reduce(@usn5=$`8esn`[{usn1}..],_usn4 In $`` =~$1000 =~7|$``[$@usn6..usn1][usn1..7]).#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`1esn`)Assert Extract(#usn7 In 0e0 Is Not Null Is Not Null Where 's_str' Is Null|0X7 =~{_usn3} =~0x0).`1esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:`8esn`)Assert Any(`` In {0} Is Not Null Is Not Null Where {usn1}[`6esn`..@usn5][$usn1..0.0]).`6esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`4esn`)Assert Exists(({_usn3:{#usn8}[`7esn`..][_usn3..],`2esn`:123.654[..$`7esn`][...e0]})-[`7esn`:usn1|usn2]->({`5esn`:$usn1[{`5esn`}][0Xa]})<-[?:`7esn`|:`2esn`{usn2:`7esn` In $`1esn` In $999,`8esn`:{`2esn`} =~Count(*) =~{#usn8}}]->({`6esn`:{1000}[$_usn3...e1],usn2:{@usn5}[...e1][..01]}).`2esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`7esn`)Assert Extract(`7esn` In Null =~$`8esn` =~{`4esn`} Where $`5esn` =~`7esn` =~usn2|{`5esn`} In {#usn7} In $7).`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`7esn`)Assert Exists(Allshortestpaths((((`5esn` {`5esn`:$usn1[{`5esn`}][0Xa]})-[`7esn`?:#usn8|`1esn` *..7]->(:``{@usn5:`7esn` Contains 01234567 Contains `1esn`,_usn3:{usn1}[`6esn`..@usn5][$usn1..0.0]})<-[#usn7?{`7esn`:12.0 Is Not Null Is Not Null,`6esn`:.e12[..010][..{0}]}]-({@usn6:0e0 =~{usn2}})))).``!)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`2esn`)Assert {`2esn`:0 Is Null Is Null}.``! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:_usn4)Assert Exists(Reduce(usn1=#usn7 Is Null,`4esn` In 0.12[.e12..0][1.0..{_usn4}]|`7esn` Contains 01234567 Contains `1esn`).`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`2esn`)Assert Exists(Case 0xabc =~@usn6 =~{`2esn`} When $999[0.12][0xabc] Then 0[9e12..{usn1}] Else {#usn8}[$`6esn`..12e12] End.#usn8?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:#usn8)Assert Reduce(_usn3=Null =~$`8esn` =~{`4esn`},`` In 9e0 Is Not Null|'s_str' Is Null)._usn4? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:usn2)Assert [`1esn` In $`7esn` Contains `1esn` Contains {usn1} Where 12[1e1]|False Starts With #usn7 Starts With 12e12].@usn6? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:@usn6)Assert Exists(`8esn`(Distinct 01234567 Is Null Is Null,\"d_str\" Starts With 1.0 Starts With 2.12)._usn4)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`5esn`:``]-()Assert Exists((:`6esn`{usn2:$`1esn` =~$`6esn` =~9e1,`3esn`:$`5esn`[$7]})<-[ *12..00{`6esn`:$7[..{`8esn`}][..{999}]}]->(`1esn` {#usn8:9e12 Starts With $_usn3}).#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:usn2)Assert Shortestpath((`3esn` {_usn4:1.0[..`3esn`][...e0]})).`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn1:`6esn`]-()Assert Exists((`1esn` {`7esn`:$usn1[{``}..usn2][`3esn`..$1000]})-[`8esn`?]->(:`3esn`:usn2{`2esn`:1e1 In $`5esn` In {7}}).@usn6!)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`2esn`)Assert (`7esn` :_usn3:`5esn`{`1esn`:$`5esn` Is Null,_usn4:{usn1}[`6esn`..@usn5][$usn1..0.0]})<-[?:usn2 *0xabc..]-(usn1 {`3esn`:0e0 Is Not Null Is Not Null,_usn4:$usn2 Ends With $@usn6 Ends With $_usn3})-[_usn4]-(_usn4 {`1esn`:0[9e12..{usn1}],`7esn`:{usn2} Ends With _usn3}).#usn7 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn5:`8esn`]-()Assert Exists(Allshortestpaths(((usn2 :_usn3:`5esn`{_usn3:{#usn8}[`7esn`..][_usn3..],`3esn`:{usn1}[...e1][..{_usn4}]}))).``?)"),
    octest_legacy:ct_string("Create Constraint On(usn1:_usn4)Assert Exists((`1esn` :_usn3:`5esn`)-[usn2:`4esn`]-(:``)-[`3esn`?:`7esn`|:`2esn`{`6esn`:{``} Ends With 0Xa Ends With $999}]-({`1esn`:{_usn4} =~`7esn`}).`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn7:usn2]-()Assert Exists({`1esn`:`2esn` Starts With $0 Starts With 12.0}.`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:_usn3)Assert {usn2:{`1esn`} Is Null,#usn7:{`8esn`}[@usn5][0]}.`7esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`4esn`)Assert Exists(Shortestpath((((#usn7 :`5esn`)-[`7esn`? *010..{`8esn`:$999[0.12][0xabc]}]-({``:9e12 In 0Xa In $#usn7,`3esn`:#usn7[`4esn`..$`8esn`]})<-[:`8esn`|:#usn8 *0]->({@usn5:{`1esn`} In 0.e0 In $1000,`5esn`:$usn1[$0..Count(*)][@usn6..$12]})))).#usn7!)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn1:`7esn`]-()Assert Exists(Filter(`` In {0} Is Not Null Is Not Null Where 01[..$usn1]).`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`4esn`)Assert Exists(Allshortestpaths(((_usn4 :`6esn`)<-[:`7esn`|:`2esn` *0xabc..]-({`6esn`:$7 Starts With $12 Starts With 12e12,#usn7:{#usn8} Ends With `7esn`}))).`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:`5esn`]->()Assert Exists(None(`7esn` In Null =~$`8esn` =~{`4esn`} Where $usn1[{``}..usn2][`3esn`..$1000]).usn2)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:#usn8)Assert Exists([_usn4 In $`` =~$1000 =~7 Where #usn7[$@usn6][$`8esn`]|_usn3 Starts With 0X7].usn2)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`4esn`)Assert Exists(Case 0X0123456789ABCDEF When 01[..$usn1] Then 12e12 Starts With $`7esn` When $1000 Contains $12 Then $7[..{`8esn`}][..{999}] Else $`5esn` =~`7esn` =~usn2 End.`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn4:`7esn`]-()Assert Exists([_usn3 In 010 Contains $`2esn` Contains 01 Where $`5esn` =~`7esn` =~usn2].#usn7!)"),
    octest_legacy:ct_string("Create Constraint On()<-[`3esn`:_usn3]-()Assert Exists([#usn7 In 0e0 Is Not Null Is Not Null Where {0} Ends With $@usn5 Ends With 010|True Ends With Count(*) Ends With 1.0].@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:_usn3)Assert Single(#usn7 In 0e0 Is Not Null Is Not Null Where _usn4[01234567.._usn4][False..12]).`8esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn2:`7esn`)Assert Exists([0x0 Contains 0x0 Contains {`1esn`},#usn8 Ends With $usn1,0 In Null In 00].`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:_usn3)Assert [{`1esn`}[..\"d_str\"],010 Contains $`2esn` Contains 01,$12 In $`3esn` In 07]._usn3! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:#usn7)Assert Exists([`` In `1esn` In `2esn` In $@usn6 Where {`8esn`}[0xabc..][`4esn`..]].`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`7esn`)Assert All(#usn7 In 0e0 Is Not Null Is Not Null Where 01[..$usn1]).`1esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn4:#usn8)Assert Exists([`` In {0} Is Not Null Is Not Null Where `4esn` Is Not Null Is Not Null|_usn4 Contains {123456789} Contains $`5esn`].#usn8!)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:#usn7)Assert None(#usn7 In `7esn` In $`1esn` In $999 Where 9e1[{`5esn`}]).``! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`8esn`)Assert (`8esn` :`2esn`:@usn5)-[`7esn`:`7esn`|:`2esn` *12..00]-({usn2:9e12 In $_usn3})<-[`8esn`?:@usn5|:`1esn`{`5esn`:0X0123456789ABCDEF =~123.654 =~{_usn4}}]-(`6esn` :`1esn`)._usn4? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:usn2]-()Assert Exists({`7esn`:0e0 In `7esn` In $`8esn`,`7esn`:{_usn3} =~`6esn` =~$`8esn`}.@usn5)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`5esn`)Assert Exists(Single(`` In {`7esn`} Starts With {0} Starts With {1000} Where {`3esn`} Starts With 1.e1 Starts With $#usn7).`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`3esn`)Assert [0X7 Is Null,{`1esn`} Ends With 2.12 Ends With _usn4].`7esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:_usn4)Assert Shortestpath(((`1esn` {#usn8:True[..$7][..$`4esn`]}))).`2esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[usn2:#usn8]-()Assert Exists(All(`2esn` In 9e12[_usn4..1.e1][{`3esn`}...e1] Where usn2[999..][{`1esn`}..]).@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`3esn`)Assert All(`` In {0} Is Not Null Is Not Null Where 123.654[..$`7esn`][...e0]).`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:_usn3)Assert {#usn8:$`5esn`[$#usn7]}.`3esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`4esn`)Assert Exists(Extract(`` In {`7esn`} Starts With {0} Starts With {1000} Where 01[$#usn8..][7..]|{`8esn`} In 123.654 In usn2).`3esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`5esn`)Assert Exists(Allshortestpaths((usn1 {usn2:True[$7..],``:$1000[`6esn`..][Count(*)..]})).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`2esn`)Assert Reduce(`5esn`=$_usn3 In $`5esn`,`4esn` In `4esn`[\"d_str\"..][123.654..]|{999}[{`1esn`}..``][{12}..$123456789]).@usn5? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:usn1)Assert Exists([_usn4 In $`` =~$1000 =~7 Where _usn4 Contains {123456789} Contains $`5esn`|0.0 =~$usn1 =~$_usn3].@usn6)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`7esn`)Assert Exists(Any(`1esn` In $`7esn` Contains `1esn` Contains {usn1} Where ``[..`2esn`][..@usn5]).#usn8?)"),
    octest_legacy:ct_string("Create Constraint On(``:_usn4)Assert Exists(Reduce(_usn3={usn2}[07],`1esn` In $`7esn` Contains `1esn` Contains {usn1}|True[{1000}][1000]).`2esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[`2esn`:@usn6]-()Assert Exists((:`5esn`{`8esn`:{999} In `3esn`,`2esn`:_usn4[01234567.._usn4][False..12]})<-[`5esn`?:`3esn` *..7{@usn6:_usn3 Starts With 0X7,`6esn`:{@usn6} Starts With 9e1 Starts With usn1}]->(#usn8 :`1esn`).`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(``:`3esn`)Assert (`5esn` :usn1)<-[`7esn`?:#usn8|`1esn` *..7]->(_usn3 {@usn6:{123456789}[..010][..#usn8],``:.e1[..12e12][..Count(*)]}).`7esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:usn2]-()Assert Exists(Extract(`5esn` In usn2 Ends With 0.e0 Where @usn5 Starts With 0xabc|$@usn6 Ends With Count(*)).`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`7esn`)Assert Exists({usn2:{@usn6}[..1000]}.`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:``)Assert Exists((`8esn` :`2esn`:@usn5$``)<-[`5esn`?{`1esn`:{``}[...e1]}]->(`1esn` {#usn8:9e12 Starts With $_usn3})-[usn2:@usn6]->(@usn6 :@usn6{_usn4:{1000} Is Not Null Is Not Null}).`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:_usn3)Assert Single(`` In {0} Is Not Null Is Not Null Where 12e12['s_str'..`8esn`][usn2..$_usn4]).``! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:@usn5)Assert Exists([#usn8 In $`8esn`[{``}..] Where {`2esn`} =~Count(*) =~{#usn8}|999[0.0..][$_usn4..]].`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`7esn`)Assert Exists(Extract(`2esn` In 9e12[_usn4..1.e1][{`3esn`}...e1] Where {``} =~.e12 =~{0}|$`2esn`[..$#usn8]).#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn7:`6esn`]-()Assert Exists(Case When $@usn5 Contains 12e12 Contains {`6esn`} Then {@usn5}[{0}..0X0123456789ABCDEF] Else 0X7 End.`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:`2esn`]-()Assert Exists((usn2 :`3esn`:usn2{`5esn`:Null =~$`8esn` =~{`4esn`},#usn8:$#usn7[..0e0][..$12]})-[@usn6?:`6esn`]-({`3esn`:9e0 Is Not Null}).#usn7?)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:@usn6)Assert Exists(Single(`` In {0} Is Not Null Is Not Null Where $usn2 Ends With `5esn` Ends With 0Xa).`5esn`!)"),
    octest_legacy:ct_string("Create Constraint On(usn2:#usn8)Assert [usn2 In 1000 Starts With $123456789].@usn5! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:_usn3)Assert exists({@usn5} In `6esn` In .e0,{0} Ends With $@usn5 Ends With 010).#usn8 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:#usn7)Assert Extract(`5esn` In usn2 Ends With 0.e0 Where `4esn` Ends With $#usn8 Ends With {12}).#usn7? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:`8esn`]-()Assert Exists(Allshortestpaths((`4esn` :usn1{`3esn`:12 Ends With {999} Ends With 's_str'})-[:`3esn` *01]-(:@usn5:`7esn`{_usn4:`5esn`[12.0..],`6esn`:'s_str'[`4esn`..]})-[`7esn`?:_usn4 *0xabc..]->(`4esn` :usn2:_usn4{usn2:@usn6})).``?)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:@usn5)Assert Exists(Case When {usn2} Is Not Null Is Not Null Then Count(*) Contains `` When {`5esn`}[{_usn3}..][.e0..] Then 0x0[0.0..] Else 0.e0 Is Not Null Is Not Null End.`2esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`6esn`)Assert Case When {usn2} Contains `4esn` Contains @usn5 Then `4esn` Ends With $#usn8 Ends With {12} When $@usn5 Contains 12e12 Contains {`6esn`} Then {@usn5}[{0}..0X0123456789ABCDEF] End.`3esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:``)Assert Single(#usn7 In 0e0 Is Not Null Is Not Null Where 1e1 In #usn8).``? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn2:@usn6)Assert None(`3esn` In $_usn3 Starts With 0.0 Starts With {#usn7} Where `5esn` Is Null Is Null).`2esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:usn2)Assert Exists(@usn6(Distinct {`1esn`} Ends With 2.12 Ends With _usn4,{#usn8}[`7esn`..][_usn3..])._usn3?)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:@usn5)Assert Allshortestpaths(((`6esn` {@usn5:$``[$@usn6..usn1][usn1..7],_usn3:`6esn`[$123456789..0xabc][``..$`4esn`]}))).usn2! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:_usn3)Assert Exists({0}.`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:usn1]-()Assert Exists(Shortestpath((((:@usn5:`7esn`{`3esn`:0X0123456789ABCDEF Starts With {`2esn`} Starts With Null})-[`5esn`?:`3esn`{`5esn`:$123456789 Is Null Is Null,``:`7esn`[$`6esn`][$`8esn`]}]-(`1esn` :`4esn`{usn2:$@usn5[0.12..]})<-[`8esn`?{_usn3:.e12[..010][..{0}],usn2:`2esn` Starts With `` Starts With .e12}]-(_usn4 :`8esn`{usn2:True[$7..],``:$1000[`6esn`..][Count(*)..]})))).`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`7esn`)Assert Exists([#usn7 In `7esn` In $`1esn` In $999 Where 07[$_usn3..][$``..]|False Is Null Is Null].usn1!)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`1esn`)Assert Exists([#usn7 In `7esn` In $`1esn` In $999 Where $`8esn` Is Not Null Is Not Null|0.e0 Is Not Null Is Not Null].`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:#usn7]->()Assert Exists(None(#usn7 In `7esn` In $`1esn` In $999 Where 12.0[12..9e1])._usn4)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:usn2)Assert Filter(`` In 9e0 Is Not Null Where {#usn8} Starts With 123456789 Starts With $`1esn`).`4esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[``:_usn4]->()Assert Exists(All(#usn7 In `7esn` In $`1esn` In $999 Where `5esn` Is Null).#usn8!)"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:_usn4]->()Assert Exists(Extract(`` In 9e0 Is Not Null Where $@usn6 Ends With Count(*)).#usn7?)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:usn1]->()Assert Exists(Single(`1esn` In $`7esn` Contains `1esn` Contains {usn1} Where {#usn7}[..$_usn4][..$`4esn`]).@usn6)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:usn1)Assert Exists(Case False Ends With #usn7 Ends With 1.e1 When #usn8[{#usn7}][12e12] Then {`8esn`} Is Not Null End.`2esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`2esn`)Assert Case {0}[{`4esn`}..] When `8esn` Contains 123.654 Contains {`7esn`} Then 1.0 Is Not Null Is Not Null Else @usn6 End.#usn7 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:#usn7]-()Assert Exists([$123456789 Is Null Is Null,0X7 Is Null,{#usn8}[$`6esn`..12e12]].`5esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:@usn6)Assert All(`` In 9e0 Is Not Null Where {@usn5}[9e1..][1e1..]).`6esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:`7esn`]-()Assert Exists(Allshortestpaths(((`8esn` :`5esn`)<-[?{`6esn`:2.12 =~.e12 =~#usn8,``:$`5esn` In $_usn4 In $`2esn`}]->(:`4esn`)-[`3esn`?:`7esn`|:`2esn`{`6esn`:{``} Ends With 0Xa Ends With $999}]-({`1esn`:{_usn4} =~`7esn`}))).`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:@usn6]-()Assert Exists(Shortestpath((((`1esn` :@usn5:`7esn`{`8esn`:$@usn6[`4esn`..][0X7..]})-[`8esn`:`7esn`|:`2esn`{`5esn`:0Xa[..07][..`2esn`]}]-(_usn4 {`2esn`:$`3esn`[..True][..12.e12]})<-[@usn5 *01234567..{`5esn`:{@usn5}[...e1][..01],`8esn`:{`2esn`} Starts With 1e1}]-({`5esn`:{`5esn`}[{_usn3}..][.e0..],@usn5:123456789 Starts With 0e0})))).@usn6)"),
    octest_legacy:ct_string("Create Index On:#usn7(``)"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn4:`1esn`]-()Assert Exists({`3esn`:`7esn`[1.e1..#usn8]}.`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:usn2]-()Assert Exists(Reduce(@usn5=0X7 Is Null,_usn4 In $`` =~$1000 =~7|@usn6[..0X0123456789ABCDEF][..{`6esn`}]).@usn5!)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:@usn5)Assert Exists(Single(_usn3 In 010 Contains $`2esn` Contains 01 Where 12 Starts With $_usn4 Starts With $`6esn`).#usn8?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:@usn6)Assert [01234567 Starts With {`2esn`} Starts With {``},12[{usn2}],{`8esn`} =~usn1 =~12.e12].`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:``]->()Assert Exists(Extract(#usn7 In 12 Starts With $_usn4 Starts With $`6esn` Where 0Xa[..`6esn`]|$`7esn`[..True]).`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:`8esn`]-()Assert Exists(Reduce(@usn6={usn1}[0..{@usn6}][True..usn2],`4esn` In `4esn`[\"d_str\"..][123.654..]|0.12[..$`4esn`][..$`7esn`]).#usn7!)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:usn1)Assert Exists(None(`5esn` In usn2 Ends With 0.e0 Where usn1[12e12..]).@usn6?)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:_usn4)Assert ``(Distinct 9e12 Starts With $_usn3).`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:#usn7)Assert Reduce(`7esn`=0x0 Contains 0x0 Contains {`1esn`},`` In `1esn` In `2esn` In $@usn6|999[$_usn3..][$``..]).usn1 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`4esn`)Assert [Null[$`1esn`..][7..]]._usn3 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:#usn8)Assert Exists(Extract(`2esn` In 9e12[_usn4..1.e1][{`3esn`}...e1] Where 12[`3esn`..{usn1}]).usn1)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:_usn4)Assert Exists(Shortestpath((`1esn` :@usn5:`7esn`{`8esn`:$@usn6[`4esn`..][0X7..]})<-[? *010..]-(`7esn` {`6esn`:0X0123456789ABCDEF =~123.654 =~{_usn4}})<-[? *0Xa..{`5esn`:{`2esn`} Starts With 1e1,`6esn`:$_usn4 Is Null Is Null}]->(_usn3 :_usn3:`5esn`{`6esn`:9e12[$#usn7..01234567],_usn3:{#usn8} Contains 7})).usn2)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:``)Assert Exists({usn1:{`3esn`} Starts With 1.e1 Starts With $#usn7}.`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On(usn2:#usn8)Assert [01 Contains _usn3 Contains .e12,$`8esn`[{``}..],0xabc =~@usn6 =~{`2esn`}].usn2! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn5:#usn8]-()Assert Exists([$@usn6 Contains {@usn6},{1000}[$_usn3...e1],{_usn4}[$`3esn`][$`3esn`]].`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`3esn`)Assert Exists(Allshortestpaths((`4esn` :_usn3:`5esn`{usn2:$`3esn` In $#usn8 In {_usn3}})-[`4esn`{usn1:1e1[..1e1]}]-({`5esn`:{`5esn`}[{_usn3}..][.e0..],@usn5:123456789 Starts With 0e0})).`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:#usn7)Assert Exists((#usn8 {usn2:`8esn` Starts With {_usn4} Starts With $#usn8,#usn7:#usn8[{#usn7}][12e12]})-[usn2:`4esn`]-(:``).`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:`1esn`]-()Assert Exists([_usn3 Starts With 0X7,{123456789}[..010][..#usn8]].usn1!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:usn1)Assert Exists([#usn7 In `7esn` In $`1esn` In $999 Where $`2esn`[Null][{usn2}]].`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:_usn3)Assert Allshortestpaths((((_usn3 {@usn6:{123456789}[..010][..#usn8],``:.e1[..12e12][..Count(*)]})-[`6esn`?:@usn5|:`1esn`{_usn3:0X7 Contains usn2 Contains $`1esn`,`4esn`:$_usn4 Is Null Is Null}]->(:@usn5:`7esn`{_usn4:`5esn`[12.0..],`6esn`:'s_str'[`4esn`..]})<-[_usn3?:``]->({#usn7:\"d_str\" Starts With 1.0 Starts With 2.12})))).`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:_usn4]-()Assert Exists([1.e1 Starts With {`3esn`} Starts With #usn8,{``}[True][00],07[{12}..]].`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On(``:usn1)Assert Exists((:``{`3esn`:12e12[12..`8esn`][0.e0..9e1]})-[usn2? *0xabc..]-({_usn4:`2esn` Ends With $`6esn` Ends With `2esn`,#usn8:2.12 =~.e12 =~#usn8})<-[?{usn2:Count(*) Starts With $7}]-(_usn4 {`4esn`:999 In 0X0123456789ABCDEF In 9e0,`4esn`:0.e0[\"d_str\"][.e12]}).`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:`3esn`]->()Assert Exists(None(`7esn` In Null =~$`8esn` =~{`4esn`} Where Count(*)[.e12..]).`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`8esn`)Assert Exists(`6esn`(07 Ends With $0 Ends With \"d_str\").#usn8)"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:`4esn`]->()Assert Exists(Reduce(``=False Is Null Is Null,`` In {`7esn`} Starts With {0} Starts With {1000}|$`` Contains 123.654 Contains $#usn7).#usn7!)"),
    octest_legacy:ct_string("Create Constraint On(usn2:usn2)Assert Exists(Reduce(#usn7=`5esn` Is Null Is Null,`5esn` In usn2 Ends With 0.e0|{#usn8} Contains 7).#usn7!)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:#usn8]->()Assert Exists(#usn7({999} Starts With {`3esn`},#usn8[_usn4]).@usn5)"),
    octest_legacy:ct_string("Create Constraint On()<-[`2esn`:`4esn`]-()Assert Exists((:`6esn`)-[#usn8?:`3esn` *010..{`5esn`:{`1esn`} =~{usn2} =~$``}]-(`1esn` :@usn5:`7esn`{``:{`8esn`}[@usn5][0],`8esn`:01 Contains _usn3 Contains .e12})<-[`8esn`?:`4esn` *999]-(_usn3 ).@usn6!)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:`4esn`]-()Assert Exists(Single(`3esn` In $_usn3 Starts With 0.0 Starts With {#usn7} Where {`7esn`} Starts With {0} Starts With {1000}).`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:`8esn`]->()Assert Exists(Reduce(@usn5=.e0[$`8esn`..12e12][usn1..999],`` In {`7esn`} Starts With {0} Starts With {1000}|010[123456789]).#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`3esn`)Assert {@usn5:$#usn8[@usn5..9e0][2.12...e1]}.`1esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`5esn`)Assert Exists(Reduce(#usn7=0Xa,`5esn` In 9e1 In 0.0 In {999}|{`6esn`}[{@usn6}..{_usn3}][`6esn`..0.0]).`8esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:@usn6)Assert Exists((`` :@usn6{@usn6:$#usn7 Ends With `6esn` Ends With {`3esn`},`6esn`:2.12 =~.e12 =~#usn8})-[#usn7? *..0X7{usn1:010 Ends With {999}}]->(`7esn` {`2esn`:.e0 Is Not Null Is Not Null}).`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On(``:`8esn`)Assert ({`1esn`:@usn5 Is Null Is Null,`7esn`:07 =~usn2})<-[`` *..7]->(:_usn3:`5esn`)-[usn1?{`4esn`:$`8esn`[{usn1}..]}]-(_usn4 :`8esn`{usn2:True[$7..],``:$1000[`6esn`..][Count(*)..]}).`8esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:`6esn`]-()Assert Exists(Reduce(#usn8=`3esn` In .e1 In 0X0123456789ABCDEF,_usn3 In 010 Contains $`2esn` Contains 01|12[`3esn`..{usn1}]).#usn8?)"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:@usn5]->()Assert Exists(010._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`4esn`)Assert Exists(Case 123.654[0xabc][1.e1] When {`1esn`} =~{usn2} =~$`` Then @usn6[..0X0123456789ABCDEF][..{`6esn`}] End.`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:_usn3)Assert Shortestpath(((:@usn6{@usn6:0X0123456789ABCDEF,`6esn`:#usn7[`4esn`..$`8esn`]})-[`5esn`?:`3esn`{`5esn`:$123456789 Is Null Is Null,``:`7esn`[$`6esn`][$`8esn`]}]-(`1esn` :`4esn`{usn2:$@usn5[0.12..]}))).`2esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn4:#usn7]-()Assert Exists((`7esn` :`7esn`:#usn8{`1esn`:{_usn3}[{``}..]})-[#usn7?:_usn4 *12..00]-(`6esn` )<-[#usn8?:@usn5|:`1esn` *0Xa..{@usn5:9e1[$`5esn`..0xabc],`4esn`:0X7 Is Null}]-(`` {usn1:{`8esn`} Is Not Null}).`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`1esn`)Assert Exists({_usn3:01 Contains {0} Contains $`5esn`}.`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:`8esn`]-()Assert Exists(Shortestpath(())._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`3esn`:`4esn`]-()Assert Exists([`` In {`7esn`} Starts With {0} Starts With {1000} Where `1esn` Is Null].`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:@usn5)Assert {_usn4:$`7esn` Contains `1esn` Contains {usn1}}.`5esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:#usn7)Assert Exists(Reduce(`6esn`=$@usn6 Contains {@usn6},`` In 9e0 Is Not Null|{``}[$@usn5]).@usn5!)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:``)Assert Exists(None(`` In `1esn` In `2esn` In $@usn6).`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn1:`3esn`]-()Assert Exists([$_usn3 Starts With 0.0 Starts With {#usn7},$1000 Contains $12,$usn2 Ends With $@usn6 Ends With $_usn3].`5esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:_usn4]-()Assert Exists(Case When {1000} Is Null Then 12e12['s_str'..`8esn`][usn2..$_usn4] When $@usn6[{`8esn`}..9e0][0..$`4esn`] Then {#usn8} Contains 7 End._usn4)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn5:`7esn`]-()Assert Exists(Case $@usn5 Ends With 00 Ends With 12.e12 When 0.12 In 123456789 Then True[$7..] When $123456789 Is Null Is Null Then $999 Contains 0e0 End.`2esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn3:#usn8]-()Assert Exists(_usn4().``)"),
    octest_legacy:ct_string("Create Constraint On(``:usn1)Assert Extract(`` In `1esn` In `2esn` In $@usn6 Where {``}[12e12..`6esn`]).`1esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:@usn6)Assert Case When 12 In $_usn4 In $123456789 Then $0 Starts With {`2esn`} Else `1esn`[``..$``] End.usn2? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:`2esn`]-()Assert Exists([#usn7 In 0e0 Is Not Null Is Not Null Where $`3esn` In $#usn8 In {_usn3}].`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:usn2)Assert Extract(`2esn` In 9e12[_usn4..1.e1][{`3esn`}...e1] Where True[..$7][..$`4esn`]).@usn6! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn5:usn1]-()Assert Exists(None(`` In {0} Is Not Null Is Not Null Where $123456789 Is Not Null Is Not Null).`4esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:@usn6]-()Assert Exists([{`3esn`}[$_usn3...e0],{usn2} Ends With 9e12,$usn1 Is Null Is Null].@usn5)"),
    octest_legacy:ct_string("Create Constraint On()<-[`5esn`:#usn8]-()Assert Exists([`4esn` In 0.12[.e12..0][1.0..{_usn4}] Where 0X0123456789ABCDEF[{`5esn`}..]].`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn3:_usn4]-()Assert Exists(Case {`2esn`}[`3esn`][{#usn7}] When {7} =~$usn1 =~{_usn4} Then Count(*)[.e12..] Else usn2 Ends With 0.e0 End._usn3!)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:``)Assert Exists([@usn5 In {#usn8} Contains 7 Where 01[..$usn1]|'s_str'[`4esn`..]].`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:@usn6)Assert Exists((`` )-[`1esn`?:@usn5|:`1esn` *010..]-(`1esn` :@usn5:`7esn`{`8esn`:$@usn6[`4esn`..][0X7..]}).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:`2esn`]->()Assert Exists(Extract(`` In `1esn` In `2esn` In $@usn6 Where 0[9e1..][0x0..]|0.12 Ends With #usn8 Ends With $1000).`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`7esn`)Assert {#usn7:\"d_str\" Is Null Is Null,`8esn`:010[00]}._usn3! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:`3esn`]->()Assert Exists({@usn5:1e1 In $`5esn` In {7},`3esn`:0e0 =~{usn2}}.#usn7)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`3esn`)Assert Exists(Case When {#usn7}[..12e12][..{1000}] Then {_usn4} Ends With .e1 Ends With 0x0 When 's_str' Is Null Is Null Then 9e12[`6esn`..{12}] End._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:usn1)Assert Reduce(``={`1esn`}[$_usn4..\"d_str\"][{0}..$usn2],`` In `1esn` In `2esn` In $@usn6|#usn7[$@usn6][$`8esn`]).`3esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:@usn6]->()Assert Exists(All(#usn7 In 12 Starts With $_usn4 Starts With $`6esn` Where 2.12 =~.e12 =~#usn8).``!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`2esn`:#usn8]-()Assert Exists(All(`5esn` In 9e1 In 0.0 In {999} Where 1000[{7}..])._usn4)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:#usn8)Assert Exists([True[#usn8..][$123456789..],{`8esn`} =~usn1 =~12.e12,@usn6[$`2esn`..]].usn2!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:``]-()Assert Exists(Allshortestpaths(((#usn8 :`6esn`))).`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:#usn7)Assert Exists(Shortestpath(((:#usn8:_usn3{_usn4:{#usn7} In {`6esn`}})<-[`3esn`{`8esn`:`5esn` Is Null}]-({#usn8:00})-[`3esn`?*{@usn6}]-({`1esn`:{_usn4} =~`7esn`}))).#usn8!)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`5esn`)Assert Shortestpath(({_usn4:$1000[`6esn`..][Count(*)..],`8esn`:`4esn` Is Not Null Is Not Null})<-[#usn7?:`2esn`|_usn3{_usn3:$_usn4 Contains {1000},@usn5:{_usn4} Contains {999} Contains 2.12}]-(`5esn` {`1esn`:07 Ends With $0 Ends With \"d_str\"})<-[:`7esn`|:`2esn` *0xabc..]-(`1esn` {``:01[$#usn8..][7..]})).#usn8! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`3esn`)Assert Reduce(@usn6={123456789}[01234567..Null],_usn4 In $`` =~$1000 =~7|$`3esn`[..{`4esn`}][..12.e12]).#usn7 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:#usn7]-()Assert Exists((_usn4 :`6esn`)<-[`7esn` *..00]->(`7esn` {`6esn`:{#usn7} In {`6esn`},`2esn`:$12 In {`8esn`}}).@usn6)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:usn2)Assert Exists(Allshortestpaths(({_usn4:$1000[`6esn`..][Count(*)..],`8esn`:`4esn` Is Not Null Is Not Null})<-[#usn7?:`2esn`|_usn3{_usn3:$_usn4 Contains {1000},@usn5:{_usn4} Contains {999} Contains 2.12}]-(`5esn` {`1esn`:07 Ends With $0 Ends With \"d_str\"})<-[:`7esn`|:`2esn` *0xabc..]-(`1esn` {``:01[$#usn8..][7..]})).``)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:usn1)Assert Exists(Extract(`5esn` In usn2 Ends With 0.e0 Where #usn7[$@usn6][$`8esn`]|$`4esn` In $@usn5)._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:_usn3)Assert {`2esn`:$`` =~_usn4 =~_usn4}._usn3! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`1esn`:`2esn`]-()Assert Exists(Extract(`2esn` In 9e12[_usn4..1.e1][{`3esn`}...e1] Where 0Xa|{#usn7} In {`6esn`}).`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`4esn`)Assert Exists(@usn6(Distinct 0.e0[\"d_str\"][.e12],{0} Ends With $@usn5 Ends With 010).`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`8esn`)Assert Exists([`2esn` In 9e12[_usn4..1.e1][{`3esn`}...e1] Where $usn2 Ends With $@usn6 Ends With $_usn3|``[..`2esn`][..@usn5]].`3esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[`3esn`:`5esn`]-()Assert Exists(Any(#usn8 In $`8esn`[{``}..] Where 1e1 In #usn8).`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`5esn`)Assert Exists(usn2(Distinct 0Xa[..`6esn`],{usn1}[0..{@usn6}][True..usn2]).usn1?)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`5esn`)Assert Exists(_usn3(Distinct 12 In {#usn7},01234567 Is Not Null).``)"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:`6esn`]->()Assert Exists(count(Distinct 9e0[..usn2][..0],9e12[_usn4..1.e1][{`3esn`}...e1]).``!)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`4esn`)Assert Exists({`1esn`:'s_str' Is Null Is Null,`6esn`:`2esn` Starts With `` Starts With .e12}.`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:_usn3)Assert exists(Distinct $`5esn` Is Null).#usn8? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[usn1:`4esn`]-()Assert Exists({usn1:``[..`2esn`][..@usn5]}.`5esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:`4esn`]->()Assert Exists(Reduce(@usn5={`1esn`} Starts With usn2,`` In `1esn` In `2esn` In $@usn6|#usn7 =~#usn8 =~{`6esn`}).`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On()<-[`8esn`:`8esn`]-()Assert Exists([$12[$`3esn`][9e12],$`7esn`[..True]].@usn6?)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:#usn7)Assert Exists(Case $@usn6[`4esn`..{999}][$``..{@usn6}] When 0xabc[$#usn7][0Xa] Then `4esn` Is Not Null Is Not Null When {`1esn`}[`8esn`][{usn2}] Then $_usn4 Contains 0 Contains False Else 123456789 Contains $@usn6 Contains Count(*) End.#usn7)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`7esn`)Assert All(#usn7 In 12 Starts With $_usn4 Starts With $`6esn` Where {#usn8}[`7esn`..][_usn3..]).`3esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`4esn`:usn1]-()Assert Exists([`` In {0} Is Not Null Is Not Null Where {`1esn`} In 0.e0 In $1000].`4esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[usn2:`1esn`]->()Assert Exists(Case 0 Is Null Is Null When 123456789 Is Null Then {@usn5}[{0}..0X0123456789ABCDEF] When {`1esn`} Starts With 9e12 Starts With $`2esn` Then 1e1 In False Else {`3esn`}[$_usn3...e0] End.`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:_usn4)Assert $`1esn`._usn3? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:usn1)Assert Exists(Reduce(``=0.e0[1e1..9e1],#usn7 In `7esn` In $`1esn` In $999|$_usn3 Starts With 0.0 Starts With {#usn7}).`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:_usn3)Assert ({``:`1esn`[``..$``]})<-[`7esn`?{usn1:$`4esn` Contains {7} Contains 999}]->(:``{`1esn`:{@usn5}[{0}..0X0123456789ABCDEF]})<-[#usn8?:`3esn`{@usn5:$`3esn`[..{`4esn`}][..12.e12],_usn4:07[..0Xa]}]-(_usn4 :`5esn`{`8esn`:$@usn6 Contains {@usn6}}).`8esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:usn1)Assert All(`` In {0} Is Not Null Is Not Null Where $`1esn` Ends With $`7esn` Ends With `2esn`)._usn3! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:_usn4)Assert Shortestpath(((_usn3 {_usn3:$12 In {`8esn`},@usn5:{`1esn`}[`8esn`][{usn2}]})<-[?$usn1]-(:#usn8:_usn3{`2esn`:$`` =~$1000 =~7,#usn7:{7}[{#usn7}..{`5esn`}][123.654..{@usn6}]}))).``? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:@usn6)Assert Exists(exists({@usn6}[..1000],False Contains _usn4 Contains 2.12).@usn6?)"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:`2esn`]->()Assert Exists(Single(`` In 9e0 Is Not Null Where 2.12 =~.e12 =~#usn8).usn2?)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:@usn6)Assert count(Distinct `8esn` Starts With {_usn4} Starts With $#usn8,`3esn` Starts With `3esn` Starts With 0X0123456789ABCDEF).#usn8! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:@usn5)Assert Shortestpath(((`6esn` {@usn5:$``[$@usn6..usn1][usn1..7],_usn3:`6esn`[$123456789..0xabc][``..$`4esn`]})))._usn4? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:usn1)Assert Reduce(``={#usn7}[..$_usn4][..$`4esn`],#usn7 In `7esn` In $`1esn` In $999|{@usn5} Ends With {usn1} Ends With @usn5).`8esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`6esn`)Assert Allshortestpaths(({`8esn`:{`6esn`}[{@usn5}..{`8esn`}][$_usn3..$`6esn`]})<-[?:_usn3|:@usn5{usn1:{`3esn`} Starts With 1.e1 Starts With $#usn7}]-(_usn3 :`8esn`)).`7esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[usn1:_usn3]-()Assert Exists(Shortestpath(((`2esn` {`5esn`:.e0[$`8esn`..12e12][usn1..999],#usn7:{`7esn`} Starts With {0} Starts With {1000}}))).``?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:`5esn`]->()Assert Exists(None(`` In {`7esn`} Starts With {0} Starts With {1000} Where $usn1[$0..Count(*)][@usn6..$12]).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`2esn`)Assert All(usn2 In 1000 Starts With $123456789 Where $`2esn` Starts With 0xabc Starts With 1000).`3esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`5esn`)Assert Case `3esn`[{``}..$#usn8] When 12 =~0xabc Then {`1esn`}[`8esn`][{usn2}] End.`8esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:_usn3)Assert Exists(Case 0.12 In 123456789 When 01[..$usn1] Then $usn1[{`5esn`}][0Xa] When `1esn` In `2esn` In $@usn6 Then $`8esn` Is Not Null Is Not Null Else $123456789 =~00 =~0X0123456789ABCDEF End._usn3!)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:``]->()Assert Exists(Extract(`` In {0} Is Not Null Is Not Null Where 123456789 In usn2|{usn2} Ends With 9e12).`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn3:_usn4]-()Assert Exists(Reduce(usn1=`3esn` =~usn2 =~7,`3esn` In $_usn3 Starts With 0.0 Starts With {#usn7}|010[``..123456789][@usn6..{12}]).``?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`8esn`)Assert Exists(Allshortestpaths(((`3esn` {`8esn`:@usn5 Is Not Null,`8esn`:'s_str'[12..$`5esn`]}))).#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:_usn3)Assert Exists(Case {`1esn`} In $999 In {#usn8} When `7esn`[$`6esn`][$`8esn`] Then $`8esn`[...e1] When $1000[$`7esn`..1e1] Then $usn1 Starts With {`5esn`} End.#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:#usn7)Assert Exists(None(`4esn` In `4esn`[\"d_str\"..][123.654..] Where {7}[{#usn7}..{`5esn`}][123.654..{@usn6}]).`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:usn1)Assert {@usn6:0X0123456789ABCDEF,`6esn`:#usn7[`4esn`..$`8esn`]}.`6esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:`5esn`]->()Assert Exists([$_usn4 Contains {1000},0[9e12..{usn1}],Count(*)[.e12..]].#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`1esn`)Assert Exists({`1esn`:{_usn4} =~`7esn`}.`4esn`?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`6esn`)Assert Any(#usn8 In $`8esn`[{``}..] Where 0xabc[{@usn5}..][Count(*)..]).usn1 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`8esn`)Assert Exists(None(#usn7 In `7esn` In $`1esn` In $999 Where False Is Null Is Null).#usn8)"),
    octest_legacy:ct_string("Create Constraint On()-[``:`6esn`]-()Assert Exists(Reduce(`2esn`=0Xa[..07][..`2esn`],#usn7 In 0e0 Is Not Null Is Not Null|123456789 Starts With 0e0)._usn4!)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`6esn`)Assert Exists(Case 00 When usn2[_usn3..{usn1}][@usn6..{`4esn`}] Then {`6esn`} Is Not Null Is Not Null When $#usn8 Ends With #usn8 Ends With 12 Then _usn4[01234567.._usn4][False..12] End.`2esn`)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`8esn`)Assert Case {`2esn`} =~{@usn6} When $@usn6 Ends With Count(*) Then 12 Starts With $_usn4 Starts With $`6esn` End.#usn7! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`2esn`:`5esn`]-()Assert Exists(None(_usn3 In 010 Contains $`2esn` Contains 01 Where $`5esn` =~`7esn` =~usn2).`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn2:`8esn`]-()Assert Exists(None(#usn7 In `7esn` In $`1esn` In $999 Where $`8esn`[{usn1}..]).`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:_usn4)Assert Exists((`6esn` {@usn6:0X0123456789ABCDEF,`6esn`:#usn7[`4esn`..$`8esn`]})<-[:#usn8|`1esn`]->(`4esn` :`3esn`:usn2{@usn6:True[#usn8..][$123456789..]})._usn4!)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`7esn`)Assert {`6esn`:$#usn8 Ends With #usn8 Ends With 12,`1esn`:_usn3[..1000]}.`7esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn8:`8esn`]->()Assert Exists(Reduce(`6esn`=01234567 Starts With {`2esn`} Starts With {``},#usn7 In 0e0 Is Not Null Is Not Null|{12}[..9e1]).`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`8esn`)Assert Exists([`` In {`7esn`} Starts With {0} Starts With {1000} Where $usn1[$0..Count(*)][@usn6..$12]|1.e1 Is Not Null].@usn5)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:``)Assert Reduce(``={`1esn`}[$_usn4..\"d_str\"][{0}..$usn2],`` In `1esn` In `2esn` In $@usn6|#usn7[$@usn6][$`8esn`]).`3esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`3esn`)Assert Exists(None(_usn3 In 010 Contains $`2esn` Contains 01 Where 7[0e0..][$`1esn`..]).`4esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:`3esn`]-()Assert Exists(None(`` In 9e0 Is Not Null Where @usn5 Is Null Is Null).`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:#usn7]-()Assert Exists([#usn7 In 0e0 Is Not Null Is Not Null Where 9e1[$@usn5..]|'s_str'[`4esn`..]].`6esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn3:usn1]-()Assert Exists((`2esn` :`6esn`)-[`2esn`:`5esn` *..1000{_usn4:`7esn`[{`7esn`}..$1000]}]->({@usn6:0e0 =~{usn2}})<-[{`5esn`:{`1esn`} =~{usn2} =~$``}]->(`7esn` {`6esn`:{#usn7} In {`6esn`},`2esn`:$12 In {`8esn`}}).`5esn`)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:@usn5)Assert Exists(Any(`2esn` In 9e12[_usn4..1.e1][{`3esn`}...e1] Where 12[`3esn`..{usn1}]).#usn8)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:#usn7]-()Assert Exists(All(_usn3 In 010 Contains $`2esn` Contains 01 Where $7 Is Not Null Is Not Null).#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:usn1)Assert Exists([{@usn5} Is Not Null Is Not Null,{@usn6}[..1000]].#usn7!)"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:@usn6]->()Assert Exists(Reduce(`3esn`=`8esn`[`1esn`..{7}][{_usn4}..$_usn4],`1esn` In $`7esn` Contains `1esn` Contains {usn1}|`4esn` Starts With 01234567).usn2!)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:usn1]-()Assert Exists(`3esn`(01234567 Starts With {`2esn`} Starts With {``}).usn1)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`8esn`)Assert Reduce(`5esn`=$_usn3 In $`5esn`,`4esn` In `4esn`[\"d_str\"..][123.654..]|{999}[{`1esn`}..``][{12}..$123456789]).@usn5! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn1:usn1]-()Assert Exists(None(`2esn` In 9e12[_usn4..1.e1][{`3esn`}...e1] Where $_usn3 Is Not Null).`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:#usn7)Assert [`7esn` In Null =~$`8esn` =~{`4esn`} Where $#usn8 Ends With #usn8 Ends With 12|$_usn3 In $`5esn`].`7esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:`2esn`)Assert Reduce(@usn5=1.e1 Is Not Null,`` In {`7esn`} Starts With {0} Starts With {1000}|$#usn7 In `4esn` In 1.0).#usn7! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn2:`6esn`)Assert Exists(Any(`5esn` In usn2 Ends With 0.e0 Where `5esn` Is Null Is Null).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`5esn`)Assert Single(`3esn` In $_usn3 Starts With 0.0 Starts With {#usn7} Where $12[..$`6esn`][..$`1esn`])._usn3 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:#usn7)Assert Exists(Any(`4esn` In `4esn`[\"d_str\"..][123.654..] Where False[{`5esn`}..{`8esn`}]).#usn7)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`6esn`)Assert Extract(usn2 In 1000 Starts With $123456789|$_usn4[1.0..@usn6]).`4esn` Is Unique"),
    octest_legacy:ct_string("Create Index On:`6esn`(`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:``)Assert Exists((`1esn` :@usn5:`7esn`{`8esn`:$@usn6[`4esn`..][0X7..]})-[ *0]->({`2esn`:01234567 Is Null Is Null,`7esn`:$_usn3[123456789][0X7]})._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`4esn`)Assert Exists(Reduce(usn1=#usn7 In 2.12 In $_usn3,`4esn` In `4esn`[\"d_str\"..][123.654..]|{1000} Is Not Null Is Not Null)._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`6esn`)Assert Exists(Case When $0 Starts With True Starts With $_usn4 Then {@usn5}[`4esn`][12.0] Else {``} Starts With 12.e12 Starts With .e12 End.#usn8?)"),
    octest_legacy:ct_string("Create Index On:usn2(`7esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:@usn5]-()Assert Exists(Any(_usn4 In $`` =~$1000 =~7 Where $`5esn`[$`4esn`][$_usn4]).`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn8:`7esn`]-()Assert Exists(Filter(`2esn` In 9e12[_usn4..1.e1][{`3esn`}...e1] Where 0 In Null In 00).#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`4esn`)Assert Exists(`8esn`($7 Is Not Null Is Not Null,{`1esn`} =~{usn2} =~$``).usn2)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:_usn3)Assert Allshortestpaths(((:`3esn`:usn2{`5esn`:{`5esn`}[{_usn3}..][.e0..],@usn5:123456789 Starts With 0e0})<-[_usn3?:@usn5|:`1esn`]-({@usn5:`6esn` =~{usn2},`1esn`:010}))).`2esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`7esn`)Assert ({``:{999} Ends With 1e1})<-[_usn3?:usn2{`5esn`:$999 Contains 0e0}]->(:`2esn`:@usn5{usn1:1e1[..1e1]}).@usn5 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`7esn`)Assert Extract(`7esn` In Null =~$`8esn` =~{`4esn`} Where {_usn4}[$#usn7..]).#usn7 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:``)Assert Exists({#usn8:9e12 Starts With $_usn3}.`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:usn1]->()Assert Exists(Case When $999 Contains 0e0 Then 12[`3esn`..{usn1}] When 2.12[True] Then 01 Is Null Is Null Else 0Xa[..`6esn`] End.`4esn`?)"),
    octest_legacy:ct_string("Create Constraint On(usn2:@usn6)Assert Extract(#usn7 In `7esn` In $`1esn` In $999 Where 's_str' Contains 0xabc).@usn6 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn7:usn2]-()Assert Exists({`1esn`:`2esn` Starts With $0 Starts With 12.0}.`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:`4esn`]->()Assert Exists(Any(_usn3 In 010 Contains $`2esn` Contains 01 Where $usn1 =~{_usn3}).`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`5esn`)Assert Exists(Shortestpath(((`2esn` :``{_usn4:{#usn7} In {`6esn`}})-[`3esn`?]->(:@usn6{@usn6:01234567[True]})))._usn4)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`1esn`)Assert Exists([`5esn` In 9e1 In 0.0 In {999} Where {`6esn`}[{@usn6}..{_usn3}][`6esn`..0.0]].`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On(usn1:@usn6)Assert Exists([#usn8 In $`8esn`[{``}..] Where 0Xa[..07][..`2esn`]].`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:#usn8)Assert Exists(`4esn`(Distinct {usn2}[{999}..][0Xa..],`5esn`[12.0..]).@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`8esn`)Assert Exists(None(`` In {`7esn`} Starts With {0} Starts With {1000} Where 1000 =~{`1esn`}).``)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:_usn4)Assert [010[123456789],$`4esn` In $@usn5,12e12[12.0][{usn2}]]._usn4? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn4:_usn4)Assert {`4esn`:$`4esn` In $@usn5}.`7esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`5esn`)Assert Reduce(#usn8=`3esn`[{``}..$#usn8],`1esn` In $`7esn` Contains `1esn` Contains {usn1}|{`1esn`} =~{usn2} =~$``).`3esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:usn1)Assert Allshortestpaths((($#usn8)<-[`3esn`{`8esn`:`5esn` Is Null}]-({#usn8:00})<-[usn2 *..7{`6esn`:{usn2} Contains 0e0 Contains 1.e1}]->(_usn4 :`6esn`{``:#usn8[..0Xa],_usn3:12 In {#usn7}}))).@usn6 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:#usn8)Assert Exists((:_usn4:`4esn`{_usn3:True Ends With Count(*) Ends With 1.0,`7esn`:{#usn8} Contains 7})<-[usn2?:usn2]-({``:9e12 In 0Xa In $#usn7,`3esn`:#usn7[`4esn`..$`8esn`]})-[ *0X0123456789ABCDEF..]->(:`8esn`{`5esn`:{`8esn`},`4esn`:`4esn`[\"d_str\"..][123.654..]}).usn1!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:#usn7)Assert Exists(Any(`3esn` In $_usn3 Starts With 0.0 Starts With {#usn7} Where {999} In Count(*) In `6esn`).`8esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`2esn`)Assert Exists(Case 0xabc[$#usn7][0Xa] When {`6esn`} Is Null Then {999} Ends With 1e1 When 123.654 Is Null Then {0}[1.e1] End.``)"),
    octest_legacy:ct_string("Drop Constraint On(``:`7esn`)Assert #usn8(_usn4 Starts With $`3esn` Starts With {#usn8}).@usn5! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:`1esn`)Assert Exists(All(usn2 In 1000 Starts With $123456789 Where 9e0 Is Not Null).`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`5esn`)Assert {`4esn`:`5esn`[12.0..]}.@usn6! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`6esn`)Assert Exists(count(Distinct 9e0 Is Not Null).`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:_usn3)Assert Exists(Shortestpath(($#usn8)-[_usn4?:`8esn`|:#usn8 *0X0123456789ABCDEF..{usn2:12 Starts With $_usn4 Starts With $`6esn`,@usn5:`7esn` In $`1esn` In $999}]->(:`3esn`:usn2{`5esn`:{`5esn`}[{_usn3}..][.e0..],@usn5:123456789 Starts With 0e0})<-[@usn6?{#usn7:$usn1 Is Null Is Null,_usn4:$@usn6[`4esn`..{999}][$``..{@usn6}]}]->(`2esn` :``{_usn4:{#usn7} In {`6esn`}})).@usn6!)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`1esn`)Assert Any(#usn8 In $`8esn`[{``}..] Where 1e1 In #usn8).`1esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:#usn8)Assert Exists(count(Distinct).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`2esn`)Assert Exists([`4esn` In 0.12[.e12..0][1.0..{_usn4}] Where Null Contains \"d_str\" Contains {@usn6}|{123456789}[..010][..#usn8]].@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`1esn`:`7esn`]-()Assert Exists(exists(Distinct {`3esn`} Starts With 1.e1 Starts With $#usn7,`5esn` Is Null).#usn8?)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`3esn`)Assert Exists(Filter(`1esn` In $`7esn` Contains `1esn` Contains {usn1} Where {#usn8} In $7).#usn8)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:#usn7)Assert Reduce(`6esn`=#usn8[{#usn7}..12.e12][7..`8esn`],`3esn` In $_usn3 Starts With 0.0 Starts With {#usn7}|{@usn5}[9e1..][1e1..]).#usn7? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:_usn3]->()Assert Exists(All(usn2 In 1000 Starts With $123456789 Where 0[9e12..{usn1}])._usn4)"),
    octest_legacy:ct_string("Drop Index On:usn1(usn1)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:#usn8)Assert Exists([`7esn` In Null =~$`8esn` =~{`4esn`} Where {`6esn`}[{@usn5}..{`8esn`}][$_usn3..$`6esn`]].usn2?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`3esn`:`4esn`]-()Assert Exists(Case {@usn6} Contains 's_str' When ``[``] Then {7} In `1esn` In 123456789 Else {usn1}[...e1][..{_usn4}] End.@usn5!)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:``)Assert [`1esn` In $`7esn` Contains `1esn` Contains {usn1} Where $123456789 =~00 =~0X0123456789ABCDEF].#usn7! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:usn2]-()Assert Exists(Reduce(`4esn`={123456789}[..010][..#usn8],`` In {`7esn`} Starts With {0} Starts With {1000}|2.12 Ends With usn1 Ends With $`2esn`).`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`7esn`)Assert {`3esn`:2.12 =~.e12 =~#usn8}.`1esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:@usn5)Assert Reduce(usn2={0} Starts With {usn1},`` In 9e0 Is Not Null|_usn4 Starts With $`3esn` Starts With {#usn8}).`2esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn4:#usn8)Assert Shortestpath((((`4esn` :`2esn`:@usn5{#usn8:1e1[{`6esn`}..{1000}][07..123456789]})<-[`8esn`? *0X0123456789ABCDEF..{`5esn`:.e0[$`8esn`..12e12][usn1..999],#usn7:{`7esn`} Starts With {0} Starts With {1000}}]->(`7esn` :``{``:$@usn5 Ends With 00 Ends With 12.e12})<-[`6esn`? *..0X7{usn1:.e1 In {`6esn`} In \"d_str\"}]-(:#usn7:`3esn`{usn1:{`8esn`} Is Not Null})))).`3esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:#usn7)Assert All(`4esn` In `4esn`[\"d_str\"..][123.654..] Where 123456789 Is Not Null Is Not Null).`1esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:#usn7)Assert [1.e1 Starts With {`3esn`} Starts With #usn8,1000 =~{`1esn`},123456789 Starts With 0e0].@usn5 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:@usn5)Assert Exists([{_usn4} Starts With 01234567 Starts With $#usn7,0.0 Ends With {_usn4} Ends With $1000].`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`1esn`)Assert Single(@usn5 In {#usn8} Contains 7 Where @usn5 Is Null Is Null).#usn7 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:@usn5)Assert Exists((`3esn` {`2esn`:{`6esn`}[..$12][..0.e0]})<-[`7esn` *..00]->(`7esn` {`6esn`:{#usn7} In {`6esn`},`2esn`:$12 In {`8esn`}})._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`4esn`)Assert Exists(None(`` In {0} Is Not Null Is Not Null Where {_usn4} Ends With .e1 Ends With 0x0)._usn3!)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`6esn`)Assert {`2esn`:{`1esn`} In $999 In {#usn8},_usn4:07 In `2esn` In {`3esn`}}._usn4 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:@usn6)Assert All(`` In {`7esn`} Starts With {0} Starts With {1000} Where 0xabc Is Null).`2esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn2:`6esn`)Assert count(`4esn`[$`4esn`],12[0X7..])._usn4 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`1esn`)Assert (`7esn` :`6esn`)<-[`3esn`?:_usn4*..]-(#usn8 {`3esn`:123456789 Contains $@usn6 Contains Count(*)}).`5esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:@usn5)Assert (@usn5 :`4esn`{_usn3:True[#usn8..][$123456789..],`1esn`:{`6esn`} Is Null})<-[`8esn`:`8esn`|:#usn8{_usn4:`5esn`[12.0..],`6esn`:'s_str'[`4esn`..]}]-(`7esn` :_usn3:`5esn`).usn2 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`5esn`)Assert Exists(None(#usn7 In 12 Starts With $_usn4 Starts With $`6esn` Where $`7esn` Is Null Is Null)._usn3?)"),
    octest_legacy:ct_string("Create Constraint On(``:`3esn`)Assert Exists(Extract(`3esn` In $_usn3 Starts With 0.0 Starts With {#usn7} Where 0X0123456789ABCDEF).`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:`6esn`]-()Assert Exists([@usn5 In {#usn8} Contains 7 Where 9e0[.e12..][$`3esn`..]|{`1esn`} Starts With usn2].#usn8?)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`5esn`)Assert Exists(Any(_usn4 In $`` =~$1000 =~7 Where $`5esn`[$`4esn`][$_usn4]).@usn5!)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:#usn8)Assert Exists((usn1 :#usn8:_usn3)-[`6esn`?]-(`7esn` :``{@usn6:$usn1[$0..Count(*)][@usn6..$12],`8esn`:0e0[$@usn5..$usn1][usn2..9e1]})._usn4!)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`4esn`)Assert Shortestpath((((:#usn8:_usn3{`2esn`:$`` =~$1000 =~7,#usn7:{7}[{#usn7}..{`5esn`}][123.654..{@usn6}]})<-[:`3esn` *01]->(`6esn` {`1esn`:$usn1[$0..Count(*)][@usn6..$12],`4esn`:$`5esn`[$7]})<-[:`3esn`{`1esn`:0x0 Is Null,`2esn`:$`3esn`[..True][..12.e12]}]->({`2esn`:9e1[{`5esn`}]})))).#usn7 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`5esn`:_usn4]-()Assert Exists(count(@usn5[Count(*)][07]).`1esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:_usn3]->()Assert Exists(Shortestpath(((`2esn` )-[`1esn`]->(`1esn` :`3esn`:usn2))).`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`4esn`)Assert Exists(Any(`3esn` In $_usn3 Starts With 0.0 Starts With {#usn7} Where 0x0 Is Null).`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`6esn`)Assert (`5esn` {`5esn`:$usn1[{`5esn`}][0Xa]})<-[@usn5:usn1|usn2]->(:`6esn`{_usn4:12.0 Is Not Null Is Not Null,@usn5:#usn8[..0Xa]})<-[`3esn`?]->(:`7esn`:#usn8{`1esn`:{`7esn`} Starts With {0} Starts With {1000},`2esn`:#usn8[1e1][$12]}).``! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`8esn`)Assert Exists(Case 1e1 In $`5esn` In {7} When 0X0123456789ABCDEF[...e12][..0.12] Then $usn1[$0..Count(*)][@usn6..$12] When $`1esn` Ends With $`7esn` Ends With `2esn` Then 010[123456789] Else 12 Ends With 0X7 Ends With 12.0 End.`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`2esn`:`3esn`]-()Assert Exists({`6esn`:$usn1 Is Null Is Null}.`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(``:usn2)Assert Exists(Case When 0Xa Starts With .e12 Then {`2esn`}[`3esn`][{#usn7}] Else 0X7 =~{_usn3} =~0x0 End.`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:``)Assert Exists(Extract(#usn7 In 12 Starts With $_usn4 Starts With $`6esn` Where `1esn`[$`4esn`..]).#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`4esn`:`5esn`]-()Assert Exists(Single(@usn5 In {#usn8} Contains 7 Where 2.12 Ends With usn1 Ends With $`2esn`).`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`7esn`)Assert Shortestpath(({`4esn`:$`2esn` In $999 In 0.12})-[:`7esn`|:`2esn` *0xabc..]-(_usn3 :``)).@usn5! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`3esn`)Assert Reduce(`7esn`={999} Is Null Is Null,`2esn` In 9e12[_usn4..1.e1][{`3esn`}...e1]|False Starts With {``} Starts With 07).usn1! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`6esn`)Assert Exists([`` In {`7esn`} Starts With {0} Starts With {1000} Where 07[$_usn3..][$``..]|12.0 Contains {`3esn`}].`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`8esn`)Assert Exists(Case #usn8[{#usn7}..12.e12][7..`8esn`] When False Is Null Is Null Then False =~$`8esn` Else _usn4 Contains {123456789} Contains $`5esn` End._usn4)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`5esn`)Assert Exists({`3esn`:$`5esn`[$7],`8esn`:9e1 In 0.0 In {999}}.`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:@usn5]-()Assert Exists(({`2esn`:9e0 Is Not Null,@usn6:7 In {7}})-[?:`5esn` *..1000{`3esn`:1e1 In #usn8}]->({`2esn`:{0}[1.e1],`5esn`:{`8esn`} =~usn1 =~12.e12}).`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On()<-[`1esn`:`2esn`]-()Assert Exists({#usn8:0e0 Is Not Null Is Not Null}.#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:@usn6]-()Assert Exists(Case When {999} In Count(*) In `6esn` Then {1000}[True] End.`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:_usn4]-()Assert Exists({@usn6:\"d_str\" Starts With 1.0 Starts With 2.12,`3esn`:$`1esn` Contains {`4esn`} Contains 0.12}.@usn6)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:_usn3)Assert Exists(Case {7}[{#usn7}..{`5esn`}][123.654..{@usn6}] When 0.12 In 123456789 Then 9e12[$#usn7..01234567] End._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`4esn`)Assert {_usn4:$`7esn` Contains `1esn` Contains {usn1}}.`2esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`8esn`)Assert Exists((@usn6 :@usn6{`3esn`:`7esn`[$`6esn`][$`8esn`],#usn8:@usn6[..0X0123456789ABCDEF][..{`6esn`}]})-[_usn3?:`7esn`|:`2esn` *..00]->(:usn2:_usn4).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:_usn3)Assert [`8esn`[12.0..$`6esn`][0.0..$@usn5]].usn1? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:#usn7)Assert Exists(Extract(`5esn` In 9e1 In 0.0 In {999} Where 7[0e0..][$`1esn`..]|{_usn4} Starts With 01234567 Starts With $#usn7).`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`2esn`)Assert Exists({_usn3:'s_str' Contains {_usn4}}._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:`8esn`]-()Assert Exists([{`8esn`}[0xabc..][`4esn`..],{`8esn`}[@usn5][0]]._usn3!)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`2esn`)Assert Case 0.12 In 123456789 When 01[..$usn1] Then $usn1[{`5esn`}][0Xa] When `1esn` In `2esn` In $@usn6 Then $`8esn` Is Not Null Is Not Null Else $123456789 =~00 =~0X0123456789ABCDEF End._usn3! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:usn1)Assert Exists(None(`` In {0} Is Not Null Is Not Null Where {`1esn`} In 0.e0 In $1000).``!)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`1esn`)Assert Exists([999[0.0..][$_usn4..],0e0 Is Null Is Null]._usn4!)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`6esn`)Assert Extract(`2esn` In 9e12[_usn4..1.e1][{`3esn`}...e1] Where 12[`3esn`..{usn1}]|{`1esn`} =~{usn2} =~$``).`3esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:_usn3]-()Assert Exists(({#usn8:$`` Contains 123.654 Contains $#usn7,#usn7:$`8esn` Is Not Null Is Not Null})-[ *0]->({`2esn`:01234567 Is Null Is Null,`7esn`:$_usn3[123456789][0X7]}).`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:``]-()Assert Exists(Case When $`8esn`[...e1] Then 9e1 Is Null Is Null End.`1esn`)"),
    octest_legacy:ct_string("Create Constraint On(``:`1esn`)Assert Exists({`1esn`:9e12[`6esn`..{12}]}.usn1?)"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn8:#usn8]-()Assert Exists(Case When {`2esn`} =~12e12 =~1.0 Then `1esn`[True..1000][`4esn`..{`3esn`}] When #usn8[Null] Then #usn7[$@usn6][$`8esn`] Else #usn7 =~#usn8 =~{`6esn`} End.@usn6?)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`6esn`)Assert Exists(None(@usn5 In {#usn8} Contains 7 Where {usn1}[...e1][..{_usn4}]).`3esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:``]-()Assert Exists({_usn3:`4esn` Starts With 01234567}.`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn6:`2esn`]-()Assert Exists([12e12[12..`8esn`][0.e0..9e1]].`7esn`!)"),
    octest_legacy:ct_string("Create Index On:`3esn`(`6esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn7:`3esn`]-()Assert Exists(({#usn8:00})-[:`3esn` *01]-(:@usn5:`7esn`{_usn4:`5esn`[12.0..],`6esn`:'s_str'[`4esn`..]}).#usn8)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:@usn6)Assert [{`6esn`}[..$12][..0.e0],$`` Ends With 9e0,2.12 =~.e12 =~#usn8].`5esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:`7esn`]-()Assert Exists([`7esn` In Null =~$`8esn` =~{`4esn`} Where 12.e12|.e12 Contains 00 Contains usn2]._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:``]->()Assert Exists(Shortestpath(((`4esn` :`5esn`)-[`7esn`:`7esn`|:`2esn` *12..00]-({usn2:9e12 In $_usn3}))).usn1?)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`7esn`)Assert Exists((#usn7 :`2esn`:@usn5{usn1:{`3esn`} Starts With 1.e1 Starts With $#usn7})-[?:#usn7|:`` *010..]-(usn1 :@usn5:`7esn`)-[?:_usn4{@usn6:_usn3 Starts With 0X7,`6esn`:{@usn6} Starts With 9e1 Starts With usn1}]-(`5esn` :@usn5:`7esn`).`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:usn1)Assert Exists(Any(`1esn` In $`7esn` Contains `1esn` Contains {usn1} Where ``[..`2esn`][..@usn5]).`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:#usn8)Assert Extract(_usn3 In 010 Contains $`2esn` Contains 01 Where {`3esn`}[`1esn`]|{`1esn`} Contains {`5esn`} Contains 0e0).`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`2esn`:usn2]-()Assert Exists(Reduce(usn1=12.0 Contains {`3esn`},_usn4 In $`` =~$1000 =~7|#usn7 In 2.12 In $_usn3).`1esn`)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`8esn`)Assert Case $0[{7}..][123.654..] When `` Starts With 0.0 Starts With $`1esn` Then True Ends With {`7esn`} Ends With @usn5 When `2esn` Ends With $`6esn` Ends With `2esn` Then 9e12[_usn4..1.e1][{`3esn`}...e1] Else 0X0123456789ABCDEF Starts With {usn1} Starts With {_usn3} End.usn1 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`8esn`)Assert Extract(usn2 In 1000 Starts With $123456789 Where 0e0[..$`2esn`][..Count(*)]|9e0[.e12..][$`3esn`..]).`6esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:`2esn`]->()Assert Exists(Single(`` In 9e0 Is Not Null Where usn1[..$usn2][..0]).usn2!)"),
    octest_legacy:ct_string("Create Constraint On(``:#usn7)Assert Extract(`5esn` In usn2 Ends With 0.e0 Where $`5esn`[$#usn7]|$`2esn` In $999 In 0.12).@usn6 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:`7esn`]-()Assert Exists({``:0x0 =~$usn2}.``)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`4esn`)Assert Extract(#usn8 In $`8esn`[{``}..] Where `3esn` In .e1 In 0X0123456789ABCDEF)._usn3? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:@usn5)Assert Exists(Single(`` In 9e0 Is Not Null Where 0x0[0.0..]).usn2?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:#usn7)Assert Case $@usn5[$`6esn`] When 9e1[{usn2}..$1000] Then `2esn` Starts With `` Starts With .e12 Else $@usn5 Contains 12e12 Contains {`6esn`} End.`5esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:`5esn`)Assert Filter(`4esn` In 0.12[.e12..0][1.0..{_usn4}] Where $`2esn`[..$#usn8]).#usn8? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:``]-()Assert Exists([0[9e1..][0x0..]].`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On(``:#usn7)Assert [`7esn` In Null =~$`8esn` =~{`4esn`}|`8esn`[`1esn`..{7}][{_usn4}..$_usn4]].`` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`2esn`:`7esn`]-()Assert Exists([`` In {0} Is Not Null Is Not Null Where #usn8 Ends With $usn1].#usn8?)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:``]->()Assert Exists(Reduce(`3esn`=0xabc In $`5esn` In @usn5,`7esn` In Null =~$`8esn` =~{`4esn`}|0xabc[{@usn5}..][Count(*)..]).`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`8esn`)Assert Exists(({_usn4:$1000[`6esn`..][Count(*)..],`8esn`:`4esn` Is Not Null Is Not Null})-[``? *..00]-(`8esn` :_usn3:`5esn`{`5esn`:$`2esn`[..$#usn8],`2esn`:$`2esn` Ends With 9e0 Ends With True})<-[`4esn`:`6esn` *07..07{``:`1esn`[``..$``]}]->(:`2esn`:@usn5{@usn5:{`8esn`} In {`6esn`} In .e12,@usn5:$@usn6[`4esn`..{999}][$``..{@usn6}]}).`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:_usn4)Assert Exists(Any(`5esn` In 9e1 In 0.0 In {999} Where usn2[_usn3..{usn1}][@usn6..{`4esn`}]).`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`7esn`)Assert Extract(#usn8 In $`8esn`[{``}..] Where $#usn7 =~$123456789 =~12).`` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`3esn`:`4esn`]-()Assert Exists(Case {@usn6} Contains 's_str' When ``[``] Then {7} In `1esn` In 123456789 Else {usn1}[...e1][..{_usn4}] End.@usn5!)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`2esn`)Assert Exists(Reduce(`6esn`={@usn5} Contains $999 Contains 0.12,`1esn` In $`7esn` Contains `1esn` Contains {usn1}|0xabc[{`7esn`}..][{`8esn`}..]).`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:``)Assert Exists(Extract(`1esn` In $`7esn` Contains `1esn` Contains {usn1} Where 12[1e1]|$@usn5 Is Not Null Is Not Null).@usn6!)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:#usn7)Assert Allshortestpaths((((:#usn7:`3esn`{`5esn`:{@usn5}[...e1][..01]})<-[`6esn`:@usn6]->(`3esn` :_usn4:`4esn`)<-[`3esn`{`8esn`:`5esn` Is Null}]->(`6esn` {`2esn`:usn2 Ends With 0.e0,#usn7:{`3esn`}[$_usn3...e0]})))).#usn8 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`4esn`)Assert Exists({`4esn`}.`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:`5esn`]-()Assert Exists(Filter(`1esn` In $`7esn` Contains `1esn` Contains {usn1} Where $usn1[{``}..usn2][`3esn`..$1000]).`5esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[`2esn`:`7esn`]-()Assert Exists([`5esn` In usn2 Ends With 0.e0 Where 9e1[{`5esn`}]|False Is Null Is Null].`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`6esn`)Assert Exists(Reduce(`2esn`=0Xa[..07][..`2esn`],#usn7 In 0e0 Is Not Null Is Not Null|123456789 Starts With 0e0)._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(``:`6esn`)Assert {`4esn`:{#usn8}[$`6esn`..12e12],_usn4:12e12[@usn5..][01..]}.#usn7 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`8esn`)Assert (usn1 {usn2:True[$7..],``:$1000[`6esn`..][Count(*)..]})-[@usn5?:_usn3|:@usn5]-(:`4esn`).@usn5 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn8:@usn6]-()Assert Exists([7[{_usn4}..{usn2}][9e0..0X7]].`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On(``:@usn5)Assert Exists(Allshortestpaths((((:`7esn`:#usn8{#usn8:$7 In 00,_usn4:{123456789} Is Null Is Null})<-[`2esn` *0xabc..{`7esn`:$12 Starts With {#usn8} Starts With {999},@usn6:usn2 Ends With usn2 Ends With 1.e1}]->(`` :`3esn`:usn2{`8esn`:1e1 Contains $`` Contains 12.0})<-[@usn5?]-(#usn8 :_usn3:`5esn`{`3esn`:0.12 In 123456789})))).@usn5?)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:``]-()Assert Exists(None(`` In {`7esn`} Starts With {0} Starts With {1000} Where 1000 =~{`1esn`}).`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`3esn`)Assert {`5esn`:01[..$usn1]}.`6esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`3esn`)Assert [010 Ends With `8esn` Ends With $_usn4,{@usn6} Starts With 9e1 Starts With usn1].@usn5? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:_usn4)Assert `6esn`(Distinct 's_str' Contains 0xabc,{_usn4} Contains {999} Contains 2.12).`5esn`? Is Unique").
