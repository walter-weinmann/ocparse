%%%-------------------------------------------------------------------
%%% File        : performance_cypher_SUITE.erl
%%% Description : Test Suite for rule: cypher.
%%%
%%% Created     : 03.10.2016
%%%-------------------------------------------------------------------
-module(performance_cypher_SUITE).

-compile(export_all).

-include_lib("common_test/include/ct.hrl").
-include_lib("eunit/include/eunit.hrl").

%%--------------------------------------------------------------------
%% COMMON TEST CALLBACK FUNCTIONS - SUITE
%%--------------------------------------------------------------------

suite() ->
    [
        {timetrap, {minutes, 10}}
    ].

init_per_suite(Config) ->
    Config.

end_per_suite(_Config) ->
    ok.

%%--------------------------------------------------------------------
%% COMMON TEST CALLBACK FUNCTIONS - ALL
%%--------------------------------------------------------------------

all() ->
    [test_cypher].

%%--------------------------------------------------------------------
%% TEST CASES
%%--------------------------------------------------------------------

test_cypher(_Config) ->
    octest:ct_string("With Distinct *,7 Is Null Order By $12[01..][1.e1..] Ascending,0x0 =~_usn4 Desc Limit 12[`7esn`...0][0.12..``] Where $123456789 Ends With .e0 Union All Merge (:#usn7) On Match Set `8esn`+=123456789[1000],`1esn` =(@usn6 {_usn4:$_usn4[#usn8..]})<-[#usn8?:`6esn` *0..010]-(`` :@usn5)[Extract(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6|#usn7 Is Not Null Is Not Null)..],#usn8+=@usn5 Ends With 1.e1 Ends With 0X0123456789ABCDEF On Create Set usn1+=$@usn6 In $`5esn` In $usn2 Union All Merge (`5esn` {_usn4:0X7 =~``});"),
    octest:ct_string("Delete $_usn4[$`1esn`],[01234567 =~usn1,9e0 =~$`5esn`,usn2[$`1esn`...0]][..[.12 In $999 In `5esn`,010 =~`6esn`,#usn7 Contains .0 Contains .e1]] Unwind $@usn5 Contains $`7esn` Contains #usn8 As `` Union All With  *,#usn7 Starts With .e12 Starts With $`7esn` As usn2,{`4esn`:$usn1[0.12..]['s_str'..]} In None(`4esn` In $`8esn` Starts With 1000 Where 0.12 In 01 In $`3esn`) In usn2(True Contains @usn6) As @usn5 Limit Extract(`4esn` In 's_str'[12..'s_str'] Where 00 Starts With _usn3|$`1esn` Is Null Is Null) Is Null Is Null Remove [@usn5 In .12[#usn7][$`8esn`] Where Count ( * )].`8esn`? Union Merge @usn5=(((_usn3 :_usn3{_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})-[#usn8:`3esn`|:`4esn` *0..010]-(:usn1{_usn3:'s_str'[..0.0][..$`4esn`],`4esn`:$123456789 Is Not Null Is Not Null})-[usn1? *07..{`5esn`:#usn7 Is Not Null Is Not Null}]-(`2esn` :usn1{`8esn`:$``[_usn4..][`7esn`..]}))) On Match Set `3esn`(False In `3esn`).`5esn`! =Count ( * )[Count ( * )..12e12][usn1..1000],#usn7 =(#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :usn2:@usn6)-[`1esn`:`8esn`|:usn1 *0xabc{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]-(@usn5 :#usn8{`1esn`:0xabc Ends With $7 Ends With $`2esn`,_usn4:``})[.._usn4(@usn6[`5esn`..$`3esn`],`8esn`[$``])],#usn7+=00[01234567][False] On Match Set @usn5 =1e1[..#usn8][..'s_str'],`8esn` =usn2[`3esn`][_usn3] Optional Match ((:`6esn`:`7esn`{usn2:.e0[..0X0123456789ABCDEF][...e12]})),((`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]})) Where $`4esn`[12.e12..][0.0..]"),
    octest:ct_string("Match _usn4=(@usn6 {#usn7:False[`2esn`..#usn8]})<-[`6esn`? *00..{`8esn`:$`2esn`[123456789..][00..],`7esn`:123.654 Contains #usn8}]-(`4esn` {@usn6:True[..'s_str'][..01]}),`6esn`=(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})<-[#usn8? *0xabc{`5esn`:0X7[12]}]->(`4esn` {usn2:7 In 0xabc})<-[?:#usn8{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]->({@usn5:False In $`7esn` In .0,usn2:Null[1.e1..]}) Where usn2[$`1esn`...0] With  *,All(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $123456789 Ends With $`6esn`) Is Null As `5esn` Skip 1e1[..False] Limit 12e12[$`5esn`][07] Optional Match #usn7=(((`5esn` :`6esn`:`7esn`{`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->(`2esn` :usn2:@usn6)-[?:@usn6 *00..{@usn5:$`5esn`[False],`4esn`:usn1[..$_usn4][..``]}]->(:``{`1esn`:`6esn` =~$_usn3}))),(((_usn4 :`2esn`:`3esn`{#usn8:123456789[$#usn7..],#usn7:07[12e12]})-[:#usn7|:_usn4 *123456789..999]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})-[:``|:_usn4 *01234567..12{`2esn`:$`` Is Null Is Null,``:$`4esn`[usn1..$#usn8][12.0..`3esn`]}]-({usn1:0x0[0X7..][usn1..]}))) Union With  *,12e12 Is Not Null As usn1 Order By [0.0 =~0X7 =~#usn7,123456789 =~_usn4 =~$0] Ends With `7esn`(Distinct 12.0[..$7][..999],0X7[.e12..01234567]) Asc Skip $`6esn` =~1e1 Limit .12 Is Not Null Is Not Null Where @usn5 Contains $`1esn` Contains 999 Unwind $1000 Starts With .0 Starts With 0.0 As `4esn` Return @usn5[..True][..0X7] As #usn8,[#usn7 In 01234567[$`3esn`..] Where `7esn` Starts With $`` Starts With $#usn7|07 In 0 In 's_str'][Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 12.0[..$7][..999])..][[@usn5 In .12[#usn7][$`8esn`] Where $0[7..][Null..]|$@usn5 Contains 01]..] Order By 0 Ends With $7 Ends With _usn3 Ascending Skip \"d_str\"[$`7esn`][$1000] Limit False[0Xa..$@usn5][$`6esn`..12e12] Union Merge `5esn`=((_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8})<-[?:usn2|#usn8 *00..]-(`3esn` :`4esn`:#usn8)) Delete 01234567 Ends With 0x0,{@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`} In (:_usn3{`6esn`:.e12[..0.e0][..$`1esn`],`8esn`:7 In 0xabc})-[#usn7:`1esn` *07..]->(:`4esn`:#usn8{_usn4:'s_str' In \"d_str\" In 123456789,`2esn`:0.12 Ends With $usn1 Ends With $@usn5}) In All(@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7),None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 00 Ends With .12 Ends With `4esn`)[`3esn`(Distinct $`1esn` =~$`1esn` =~#usn7,$@usn5 Contains 01)..] Remove [Count ( * )[Count ( * )..12e12][usn1..1000],12e12[$`5esn`][07],$_usn3[9e1][$_usn4]]._usn4,_usn4($123456789[..0.12][..#usn7]).`6esn`!"),
    octest:ct_string("Return *,Any(@usn5 In $#usn8 Is Null Is Null Where True[Count(*)..][1e1..]) Is Not Null As `6esn` Union All Merge `2esn`=(:_usn4:usn1) On Match Set `6esn` =9e12 Ends With 0X0123456789ABCDEF Ends With #usn7,`7esn` =9e1[0.e0..][#usn8..],#usn7+=({`7esn`:12e12 Ends With 010 Ends With .0})<-[?:`5esn`|`1esn`{_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12}]-({@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]}) Ends With @usn6(123456789 =~$123456789) Ends With [`1esn` Contains Count ( * ),$@usn6 Contains Count ( * ),False In 123456789 In $0] On Create Set `` =(`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[usn1?:`8esn`|:usn1]->({`6esn`:.e1 Starts With 0.0 Starts With `6esn`,_usn3:$@usn6 Contains 0 Contains $`2esn`})<-[:`2esn`|usn2 *0..010]->(`2esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}) Is Null Is Null,`7esn`+=(`7esn` :_usn4:usn1)<-[:``|:_usn4 *0Xa]->(`7esn` :`2esn`:`3esn`) Starts With ({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})<-[? *0..010]-(`4esn` :`5esn`{_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[:#usn7|:_usn4 *1000..{_usn4:07 In `5esn` In 12e12,@usn6:.0 Is Null Is Null}]->(#usn7 $usn2) Starts With Extract(usn2 In 1000 Contains 0.e0 Where $`6esn`[..0X0123456789ABCDEF]|07[`6esn`..][`5esn`..]),`2esn`:`1esn` Unwind 12[usn1][True] As @usn6"),
    octest:ct_string("Return Distinct *,`` =~12 =~$#usn7 As _usn4,[$`5esn` Is Not Null,0e0 Is Null Is Null] Ends With Filter(`4esn` In `6esn`['s_str'..][010..] Where Count(*)[..`3esn`]) Ends With (_usn4 {`8esn`:9e1 In 01 In 999})-[`8esn`?:#usn7|:_usn4]-(#usn8 :_usn3)-[ *0..010{#usn7:$@usn6 Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)}) Skip `3esn`[..7][..12e12] Limit (:`1esn`{`8esn`:Count ( * ) =~Count(*)})-[`2esn`*..$usn1]->(:@usn5{_usn4:.12 Starts With 0Xa})-[:`3esn`|:`4esn` *999..{`6esn`:$123456789[..0.12][..#usn7],`3esn`:0 Ends With $7 Ends With _usn3}]->(`1esn` {_usn4:12.e12 Ends With 01 Ends With .e1})[Any(@usn6 In @usn5 In $`6esn` Where 9e0[$_usn3..0X7][7..$#usn8])] Unwind {@usn5:$`3esn`} Starts With .12 As `8esn`"),
    octest:ct_string("Detach Delete 0x0[$`3esn`],07 In $7 In 12 Union All Remove Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where usn2[$`1esn`...0]|@usn6 Contains .e1 Contains $`4esn`).`4esn`!,@usn6:usn2:@usn6,None(`4esn` In 's_str'[12..'s_str'] Where $`2esn`[..7][..$usn1]).`2esn`! Match usn2=(_usn3 :_usn3),usn1=((:_usn4:usn1{#usn8:$`7esn` Ends With `1esn` Ends With True})-[`7esn`?:usn1|`3esn` *123456789..999{`5esn`:.e1 In $@usn6 In 999}]-(usn2 :#usn8{`3esn`:123.654[@usn5]})) Where 0 Is Not Null Is Not Null Union Create ``=({`7esn`:`6esn` Starts With $@usn6,``:`6esn` =~$_usn3})-[? *12..0xabc]-(:`6esn`:`7esn`{`6esn`:_usn4 Ends With 01 Ends With $`1esn`,`4esn`:$`8esn` In \"d_str\" In 9e12})<-[ *0xabc]-(_usn4 {`1esn`:010[@usn5..]}),(`` :usn1)"),
    octest:ct_string("Optional Match ((usn1 :`6esn`:`7esn`)),((usn2 :`7esn`{@usn5:usn1[$`3esn`..$999][True..False],`8esn`:$`5esn` Is Null Is Null})-[@usn5?:@usn6*..]-(@usn5 {@usn6:0.0[999..],#usn8:Null Is Null Is Null})<-[`6esn`?{`7esn`:@usn6 Contains _usn4 Contains $`4esn`}]-(`1esn` :``)) Where 07[..010][..12.0]"),
    octest:ct_string("Unwind 999 Contains `7esn` As `7esn` Union All Unwind usn2[..$`3esn`] As `6esn` Union All Delete [$1000 =~$`7esn`,.12 Starts With @usn5 Starts With $#usn8,0x0[...e12][..@usn5]] Ends With Single(@usn5 In .12[#usn7][$`8esn`]) Create @usn6=(`` :#usn7)<-[?:`4esn`|:`7esn` *..0X7]-(:`3esn`:`1esn`{`1esn`:0.0[1000..][.e1..]})<-[`5esn`?:`6esn`]->(`6esn` :`6esn`:`7esn`{_usn4:\"d_str\"}),`6esn`=(`8esn` )-[ *0..010{#usn7:$@usn6 Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)})"),
    octest:ct_string("Unwind 1e1 In 9e0 In 9e0 As _usn4 Create ((@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(:``{`2esn`:9e0[``][123.654],`1esn`:$_usn3[Null]})-[@usn6?:#usn7|:_usn4 *00..]->(`` :@usn5{#usn7:0X7[12]})) Merge `4esn`=(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})-[?:#usn7|:_usn4]->(`` :#usn7$0)-[`2esn` *0X0123456789ABCDEF..{usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3}]->(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]}) On Create Set `3esn`+=(:`1esn`{`6esn`:$0[..`8esn`],`1esn`:True Starts With $`8esn` Starts With \"d_str\"})<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[usn1?:`2esn`|usn2 *123456789..999]-(`3esn` :usn2:@usn6) Contains [usn2 In 1000 Contains 0.e0 Where #usn7 Ends With 9e1|010 Is Null Is Null] Contains Filter(@usn6 In @usn5 In $`6esn` Where 12[`7esn`...0][0.12..``]),{`6esn`:$`8esn`[``..][123.654..],``:999[$`6esn`]}.`5esn`? =$_usn4[$`8esn`..][07..] On Create Set _usn4 =@usn5 Contains 01 Contains 12,#usn7+={#usn8:0X0123456789ABCDEF[..usn1]} Ends With (:``{_usn3:0X0123456789ABCDEF In 01234567})<-[``? *..0X7{_usn4:12 Ends With 01 Ends With 1e1}]-(usn2 :@usn6:`7esn`)-[:usn2|#usn8*..]-(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12}) Ends With [1e1 In $#usn8 In 12e12,123.654 Contains #usn8]"),
    octest:ct_string("Unwind $`3esn`[@usn5..$123456789] As `2esn` Unwind $`` Is Null Is Null As `7esn` Return *,0.12[Count(*)..],$@usn5 =~$`` =~$usn2 As #usn8 Union Merge _usn3=((_usn4 {#usn8:@usn5 In $`6esn`,`7esn`:010 =~`6esn`})-[`5esn`? *00..{usn1:07[`6esn`..][`5esn`..],`2esn`:#usn7 Contains .0 Contains .e1}]->(#usn7 :`7esn`{`4esn`:.12 Starts With .12 Starts With `3esn`})-[{`5esn`:.e1[..$``][..0X0123456789ABCDEF]}]->(_usn3 {`5esn`:0.12 Contains .e1})) On Match Set _usn4 =@usn5 Contains 01 Contains 12,#usn7+={#usn8:0X0123456789ABCDEF[..usn1]} Ends With (:``{_usn3:0X0123456789ABCDEF In 01234567})<-[``? *..0X7{_usn4:12 Ends With 01 Ends With 1e1}]-(usn2 :@usn6:`7esn`)-[:usn2|#usn8*..]-(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12}) Ends With [1e1 In $#usn8 In 12e12,123.654 Contains #usn8] On Create Set None(`4esn` In 's_str'[12..'s_str'] Where @usn5 In 0X0123456789ABCDEF).`2esn`! =$`1esn` Is Null,`5esn`()._usn4! =[`4esn` In `6esn`['s_str'..][010..] Where $@usn5 In 12e12 In Count(*)|$1000[01234567]][Any(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7)..{usn1:usn1 Is Null Is Null,usn2:12.0[``]}][(_usn3 {`5esn`:0.12 Contains .e1})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`})..00],`8esn` =`7esn` Contains .0 Contains 9e12 Union All Unwind 0 Starts With `6esn` Starts With 0X0123456789ABCDEF As @usn6 Return *,01234567 Is Null Is Null Order By {`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null}[..[_usn4 In usn1 Contains False Contains `` Where True[..'s_str'][..01]]] Ascending Skip 010 =~$usn2 =~1e1;"),
    octest:ct_string("Delete 01234567 Ends With 0x0,{@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`} In (:_usn3{`6esn`:.e12[..0.e0][..$`1esn`],`8esn`:7 In 0xabc})-[#usn7:`1esn` *07..]->(:`4esn`:#usn8{_usn4:'s_str' In \"d_str\" In 123456789,`2esn`:0.12 Ends With $usn1 Ends With $@usn5}) In All(@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7),None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 00 Ends With .12 Ends With `4esn`)[`3esn`(Distinct $`1esn` =~$`1esn` =~#usn7,$@usn5 Contains 01)..] Union All With Distinct 00 Ends With $_usn4 Ends With $`2esn` As `5esn` Order By $`8esn` In \"d_str\" In 9e12 Desc,`3esn`(.e0 =~`5esn`)[Single(`6esn` In 0X7 =~`` Where $`3esn` =~Null)][[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $_usn3[$`4esn`..Null]|False[`2esn`..#usn8]]] Asc,1e1 In 9e0 In 9e0 Ascending Unwind 00 Is Not Null Is Not Null As `` Optional Match ``=((_usn4 )-[#usn7:_usn3|:`4esn` *..0x0{usn2:$#usn7 In 12.0 In 0X0123456789ABCDEF,`6esn`:`7esn`[1e1..07][0x0..Count ( * )]}]->(`6esn` {`2esn`:$`2esn`[..`2esn`],usn1:False[0Xa..$@usn5][$`6esn`..12e12]})) Where 123456789 =~_usn4 =~$0 Union Create ((:_usn3{@usn6:$`7esn` Is Null Is Null})-[``:``|:_usn4 *0X0123456789ABCDEF..{_usn3:$_usn3[..Count ( * )][..@usn5]}]-(#usn8 :@usn6:`7esn`)<-[?:_usn3|:`4esn` *010{`8esn`:$``[_usn4..][`7esn`..]}]-(`2esn` )),(({_usn3:$0 Ends With $#usn7 Ends With .12})-[:``|:_usn4 *01234567..12{`2esn`:$`` Is Null Is Null,``:$`4esn`[usn1..$#usn8][12.0..`3esn`]}]->(#usn7 {@usn5:`5esn`[.e1][0Xa],@usn6:Count(*)[`7esn`..$12]})-[?:``|:_usn4 *..0X7]->({`2esn`:@usn5 In 0X0123456789ABCDEF,`1esn`:@usn6[`5esn`..$`3esn`]}))"),
    octest:ct_string("Return Distinct $@usn5[0.12..][@usn5..],010 Contains 0X0123456789ABCDEF Limit 9e0 Starts With `6esn` Remove (usn2 :`7esn`{_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`})<-[`4esn`:`4esn`|:`7esn`{`3esn`:Count(*)[`7esn`..$12],_usn3:$999[$1000]}]->(`3esn` :`4esn`:#usn8{``:\"d_str\" Is Null Is Null}).`4esn`!,{#usn8:9e1[0.e0..][#usn8..]}.``,Any(@usn6 In @usn5 In $`6esn` Where $_usn4[$`8esn`..][07..]).#usn8 Create _usn3=((:``{`5esn`:.e1 In $@usn6 In 999}))"),
    octest:ct_string("Unwind $12[`3esn`..0e0][`2esn`..$7] As usn2 Merge @usn5=({`5esn`:Count(*)[..`3esn`],usn1:01234567 Ends With 0x0})-[?{@usn5:12.e12['s_str'],`1esn`:_usn3 Ends With 12e12 Ends With .e0}]-(`8esn` :`7esn`)<-[?:usn2|#usn8{#usn8:$@usn6 Is Null Is Null,_usn4:_usn4 Starts With $@usn6 Starts With #usn7}]-({_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"}) On Create Set _usn3+=$@usn5 =~$`` =~$usn2,`6esn`+=`6esn`[1.e1..$#usn7][.e0..True],(`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`})<-[`` *0xabc]->(`7esn` :#usn7{`6esn`:$`3esn` Contains 0X0123456789ABCDEF Contains 00,`1esn`:1000[123.654..9e12][1000.._usn3]}).``! =[@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7|`6esn`[1.e1..$#usn7][.e0..True]][..Extract(#usn8 In $`5esn` Is Null Is Null Where #usn8[$#usn8..]|$@usn6[..$usn1])][..(:`4esn`:#usn8{#usn8:07})-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]-(@usn5 :`3esn`:`1esn`{`3esn`:$`5esn` Is Not Null,`2esn`:9e1[0.e0..][#usn8..]})-[``:`2esn`|usn2{_usn4:0X0123456789ABCDEF Ends With 0X0123456789ABCDEF Ends With 's_str',`3esn`:'s_str' In \"d_str\" In 123456789}]-(:``{`2esn`:9e0[``][123.654],`1esn`:$_usn3[Null]})] Union All Merge `2esn`=(:`1esn`)<-[`2esn`?:usn2|#usn8{`6esn`:0X7[.e12..01234567],@usn6:`7esn`[...e1][..\"d_str\"]}]->(`5esn` :`8esn`{#usn8:0.12 Contains $`2esn` Contains $_usn4,`2esn`:$`5esn` Starts With _usn3 Starts With @usn5})<-[`4esn`? *00..]-(`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]}) On Match Set _usn3+=07 In Count ( * ) In \"d_str\" Match (#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]})<-[:`6esn` *..0X7{`3esn`:`1esn` Contains Count ( * ),`7esn`:01234567 =~usn1}]-(:@usn5{`8esn`:$`3esn`[@usn5..$123456789],@usn5:\"d_str\" Starts With $usn1})-[?:#usn7|:_usn4]->(`` :#usn7$0) Remove (usn2 :`6esn`:`7esn`{`6esn`:`` Contains 12 Contains True,usn2:$`2esn`[123456789..][00..]})-[_usn3 *010]->(:usn1{`8esn`:usn1 Contains $``})._usn4?,usn1:`3esn`:`1esn`,{`2esn`:9e1 In 01 In 999,`5esn`:$@usn6[..$usn1]}.@usn5! Union All Merge (((@usn6 {#usn7:'s_str' In \"d_str\" In 123456789,usn2:07[12][$`6esn`]})-[#usn7?:@usn6 *00..]->(#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})<-[?:`7esn`|`2esn`{_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"}]->(usn1 :#usn8)))"),
    octest:ct_string("Unwind 12[..0.0][..#usn7] As `8esn` Return Distinct *,[@usn6 =~01,$`7esn` In $7,00[``..][$`4esn`..]][All(`4esn` In $`8esn` Starts With 1000 Where 9e1 Is Null Is Null)..(_usn4 {_usn3:$`1esn` Is Null,usn1:$`4esn`[$`2esn`..]})<-[#usn8?:_usn4|:@usn5 *..0x0]-(#usn8 :`1esn`{#usn7:1e1[`6esn`..]})] As @usn6 Order By 010 Starts With `7esn` Starts With 9e1 Ascending,123456789 Is Null Descending,Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With $usn1|.12 Ends With `1esn` Ends With $`1esn`)[[True[..'s_str'][..01],_usn4 Ends With 01 Ends With $`1esn`,.0[$`6esn`..False]]..`7esn`(Distinct 010 Is Null Is Null,$`8esn`[..$``])][({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})<-[? *0..010]-(`4esn` :`5esn`{_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[:#usn7|:_usn4 *1000..{_usn4:07 In `5esn` In 12e12,@usn6:.0 Is Null Is Null}]->(#usn7 $usn2)..All(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null)] Desc Skip {#usn8:$`5esn` In False,usn2:$`7esn` In $7} Is Not Null Is Not Null With Distinct \"d_str\",0X0123456789ABCDEF Ends With 0X0123456789ABCDEF Ends With 's_str',$@usn5[01] Order By 01234567 Starts With $_usn4 Desc,0.12 Contains .e1 Ascending,0x0 =~_usn4 Descending Skip [usn2 In 1000 Contains 0.e0 Where $`6esn`[..0X0123456789ABCDEF]] Contains None(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $`4esn`[..usn1]) Contains Extract(`6esn` In 0X7 =~`` Where 0x0[..`4esn`]) Union All Merge (:``{`5esn`:.e1 In $@usn6 In 999})-[`5esn`?:`3esn`|:`4esn`{`1esn`:$usn2 Contains 12.e12 Contains 00}]-(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]}) With  `6esn`['s_str'..][010..],$`4esn` Contains 0Xa Where 0X0123456789ABCDEF In $1000 In $`3esn` Detach Delete Any(@usn6 In @usn5 In $`6esn` Where 9e0[$_usn3..0X7][7..$#usn8]) Contains None(usn1 In 00 Starts With _usn3 Where 01234567 Ends With 12.0 Ends With 0X7) Contains Single(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn8 In .e12 In 9e1),$@usn5 =~07 =~True"),
    octest:ct_string("Return `7esn`($123456789 Ends With $`6esn`) Starts With {`7esn`:$12[01..][1.e1..],_usn3:$_usn3 =~`7esn` =~$_usn4} As usn1 Order By #usn7 Contains 07 Descending,Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $usn2[..12.0]) In Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where Count(*)[True]) In Extract(`4esn` In 's_str'[12..'s_str'] Where 0xabc Ends With $#usn7 Ends With #usn8|.e1 Starts With 0.0 Starts With `6esn`) Asc,[$12 Is Null Is Null,999 Contains Count ( * ) Contains 123.654][Extract(usn2 In 1000 Contains 0.e0 Where 9e12 =~01 =~$`7esn`)..Any(`4esn` In $`8esn` Starts With 1000 Where 01 Ends With .e0)][[Null Contains _usn4,$`7esn` Is Null Is Null]..({_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[? *..0x0]->(:usn2:@usn6{`6esn`:12[12e12..@usn6],#usn8:`6esn` =~$_usn3})] Desc With  *,$`1esn` Ends With _usn4 Ends With `3esn` As `7esn`,({usn1:`4esn` In $12 In `8esn`})-[`4esn`]-(`1esn` {usn1:True[Count(*)..][1e1..],usn1:9e1 Is Null Is Null})<-[?{`5esn`:0x0 Contains $`8esn` Contains `6esn`,#usn8:010 =~$usn2 =~1e1}]->({`6esn`:$`5esn` Is Null,`2esn`:`7esn` Starts With $usn2 Starts With .e0})[[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 0e0 =~_usn4|0x0 Contains _usn4 Contains 123456789]..[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 7 In $`3esn` In #usn7]][usn1($`1esn` Is Null Is Null,$0[0X0123456789ABCDEF..$#usn7])..[usn1 In 00 Starts With _usn3 Where .12[9e0][$7]|07]] As @usn6 Order By $999 Ends With $`3esn` Ends With `8esn` Asc Skip $0[..07] Where $@usn5 In 12e12 In Count(*) Union Create @usn6=(({_usn3:$0 Ends With $#usn7 Ends With .12})-[@usn6?:#usn7|:_usn4 *00..]->(:`6esn`:`7esn`{@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]})),(usn1 :_usn3{@usn6:True[..'s_str'][..01]})<-[`7esn` *..0x0]->(:`8esn`{usn2:7 Contains 9e1}) Detach Delete $`7esn` In 0.e0 In `4esn` With  @usn6 =~01,12.0 In 1000 In _usn4 As _usn3,0 =~12.e12 =~$`` As #usn7 Order By All(@usn5 In $#usn8 Is Null Is Null Where 's_str'[..0.0][..$`4esn`]) Is Null Is Null Descending Skip None(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 12e12[.12..]) Ends With None(_usn4 In usn1 Contains False Contains `` Where 12 Ends With 01234567) Ends With @usn6($123456789[0.0..]) Union Return $`6esn`[..0X0123456789ABCDEF],`1esn`[9e12..$`8esn`][usn2..$``] As #usn8,[#usn8 In $`5esn` Is Null Is Null][Single(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where #usn7[..$1000][..01])..][[@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7|`6esn`[1.e1..$#usn7][.e0..True]]..] As #usn7 Limit 9e12[0.0..12.e12] Create @usn6=({`3esn`:$`3esn` =~$`7esn` =~False,`4esn`:12 Ends With 01234567}),`7esn`=((:@usn6:`7esn`{_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`})-[`6esn`:@usn5|`8esn` *12..0xabc]-(`` :@usn5)-[?{@usn5:12.e12['s_str'],`1esn`:_usn3 Ends With 12e12 Ends With .e0}]-(:`4esn`:#usn8{_usn4:'s_str' In \"d_str\" In 123456789,`2esn`:0.12 Ends With $usn1 Ends With $@usn5}))"),
    octest:ct_string("With Distinct *,`4esn`($123456789 =~$0 =~$`3esn`) =~[07[12][$`6esn`],$`2esn` =~'s_str',$12[01..][1.e1..]] =~usn1(#usn7 Starts With `1esn`) As `3esn` Order By Extract(usn2 In 1000 Contains 0.e0 Where 0X7 =~`4esn` =~`8esn`) Contains [0 Contains 12e12,0xabc Ends With $7 Ends With $`2esn`,0x0 =~_usn4] Ascending,07[1e1] Ascending Skip 0e0[$12..`5esn`][Count(*)..`6esn`] Limit $123456789 Is Not Null Is Not Null Where 7 =~9e0 =~'s_str' With  *,07[0..`4esn`] Order By 12.e12[$`7esn`] Desc,Single(@usn5 In .12[#usn7][$`8esn`] Where `6esn` =~$_usn3) Ends With {`2esn`:.12 Ends With `1esn` Ends With $`1esn`,`5esn`:9e12[@usn6..$``][#usn8..Count ( * )]} Ends With (:_usn3{`2esn`:$`5esn` Is Null,@usn6:#usn7 Starts With `1esn`})<-[``?:@usn6]-(:`2esn`:`3esn`{`6esn`:01 In _usn3 In 12,_usn3:$`3esn` =~$`6esn` =~`8esn`})<-[:_usn4|:@usn5 *..0X7]->(`4esn` {`7esn`:.e0[..999][..0X7]}) Descending Where @usn6 Starts With `7esn` Starts With Null Union Create ``=(({`8esn`:0X7 In 's_str' In $`1esn`})<-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]->(`1esn` :`1esn`)),`2esn`=(((`2esn` :`7esn`)<-[? *..7]->({`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null})<-[:`6esn`]->(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}))) Create `4esn`=((:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12})-[#usn8? *0xabc{`5esn`:0X7[12]}]->(usn1 {`2esn`:True =~@usn5 =~$`1esn`,`2esn`:`6esn`[1.e1..$#usn7][.e0..True]})),((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})) Return Distinct *,12 Is Null Is Null As #usn7,$1000 Is Not Null Is Not Null Skip (`3esn` :usn2:@usn6{`4esn`:`7esn` Contains .0 Contains 9e12})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:@usn5{#usn7:1e1[@usn5..]})-[`5esn`? *00..{usn1:07[`6esn`..][`5esn`..],`2esn`:#usn7 Contains .0 Contains .e1}]->(`5esn` :usn2:@usn6)[Filter(@usn6 In @usn5 In $`6esn` Where $999[$1000])..][#usn7($`8esn`[``..][123.654..],12.e12 Contains `5esn`)..];"),
    octest:ct_string("Detach Delete Count ( * ) In 010,$123456789 Is Null Is Null,$1000 Starts With .0 Starts With 0.0 With  's_str'[..0.0][..$`4esn`] As `2esn`,#usn7 Contains .0 Contains .e1,({`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`4esn` {@usn6:True[..'s_str'][..01]}) In Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where 07[12e12]) Skip `6esn` Starts With $usn2 Starts With 0.0 Limit 9e1 Contains $`3esn` Contains 01234567 Where True Starts With $`8esn` Starts With \"d_str\" Union Remove Any(@usn6 In @usn5 In $`6esn` Where False Contains `3esn`).`5esn`? Union All Return $usn2[12..$`7esn`][$0..$`7esn`],0x0 Contains _usn4 Contains 123456789 As `7esn`,9e12 Ends With 0X0123456789ABCDEF Ends With #usn7 As `5esn` Order By 01234567 Ends With 12.0 Ends With 0X7 Ascending,12e12 Ends With 010 Ends With .0 Asc Limit count(Distinct 's_str' Starts With 1000 Starts With #usn8,12e12 Starts With $123456789 Starts With 12.0)[[_usn4 In usn1 Contains False Contains `` Where $#usn8]][[$`1esn` Is Null,\"d_str\" =~`6esn` =~0Xa,$usn2[0e0..]]] With  7[$`4esn`..123456789] As `2esn` Limit 1000 Ends With 1000 Ends With $`4esn` Where $usn2[..12.0] Detach Delete $123456789 =~$0 =~$`3esn`,$0 Contains `7esn` Contains $`8esn`,9e0[False]"),
    octest:ct_string("With Distinct 010 Starts With `7esn` Starts With 9e1,False[.e1..Null] As `2esn` Order By {`7esn`:Count(*) In 01 In .0,`6esn`:$123456789[..0.12][..#usn7]} Ends With (usn1 :_usn3)<-[`5esn`:@usn6]-(:``{_usn3:0X0123456789ABCDEF In 01234567})-[ *..0x0]->(:`7esn`{@usn6:0.0[999..],#usn8:Null Is Null Is Null}) Asc Skip [@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7|`6esn`[1.e1..$#usn7][.e0..True]][..Extract(#usn8 In $`5esn` Is Null Is Null Where #usn8[$#usn8..]|$@usn6[..$usn1])][..(:`4esn`:#usn8{#usn8:07})-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]-(@usn5 :`3esn`:`1esn`{`3esn`:$`5esn` Is Not Null,`2esn`:9e1[0.e0..][#usn8..]})-[``:`2esn`|usn2{_usn4:0X0123456789ABCDEF Ends With 0X0123456789ABCDEF Ends With 's_str',`3esn`:'s_str' In \"d_str\" In 123456789}]-(:``{`2esn`:9e0[``][123.654],`1esn`:$_usn3[Null]})] Where $`6esn` Is Null Is Null;"),
    octest:ct_string("Merge `4esn`=({`8esn`:0X7 In 's_str' In $`1esn`}) On Match Set usn2+=.e1 Ends With _usn4 Ends With @usn5,@usn5+=_usn3 In .e1 In $12,Extract(`4esn` In `6esn`[1e1..] Where $`7esn` Ends With `1esn` Ends With True).`` =010 In @usn6 On Match Set usn1 =Count ( * ) =~All(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7) With Distinct {#usn8:$`5esn` In False,usn2:$`7esn` In $7}[..Any(@usn6 In @usn5 In $`6esn` Where 010 =~$usn2 =~1e1)] Order By usn1($@usn5[0.12..][@usn5..],\"d_str\" Starts With $usn1) Is Null Ascending,`` Asc,$999 In $`8esn` In `5esn` Descending Skip Extract(@usn6 In @usn5 In $`6esn` Where $_usn4[`3esn`][0]|_usn3 Is Null Is Null) Is Not Null Limit `4esn` Is Null Optional Match @usn5=((:#usn8$usn1)-[`1esn`:`5esn`|`1esn` *..7{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]}]->(usn2 :@usn6:`7esn`)-[_usn4?:#usn8 *..0X7{@usn5:07}]-(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})),((#usn8 :@usn6:`7esn`{``:9e1 Is Not Null Is Not Null})) Union Match `5esn`=(#usn7 {@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]}) Where $`2esn` Contains usn1 Contains `2esn` Unwind 12e12[0.e0][9e1] As usn2 Union All With Distinct *,usn2 Is Not Null Is Not Null As `2esn` Skip $1000 Ends With 1e1 Ends With 123.654 Limit {#usn8:$`5esn` In False,usn2:$`7esn` In $7}[..Any(@usn6 In @usn5 In $`6esn` Where 010 =~$usn2 =~1e1)] Where $0 Remove Extract(`4esn` In 's_str'[12..'s_str'] Where 12.0[0Xa][00]).@usn5,{`6esn`:`` Contains 12 Contains True,usn2:$`2esn`[123456789..][00..]}.`3esn`!"),
    octest:ct_string("With  usn1 Is Null Is Null As ``,.12 Is Null Where False[0Xa..$@usn5][$`6esn`..12e12] Merge (((:_usn4:usn1)-[@usn5?:@usn6*..]-(`2esn` :`5esn`{#usn8:$999 Ends With $`3esn` Ends With `8esn`})-[?:@usn6]-(_usn3 :`4esn`:#usn8{`1esn`:07[1e1],`7esn`:12e12[$`5esn`][07]}))) On Match Set `5esn` =999[.e12][01],Extract(usn1 In 0x0[..`4esn`] Where @usn6[$`3esn`]).#usn8? =`1esn` In 999 In $#usn7,usn1 =12.e12[0e0..7] Union All Optional Match ((@usn5 :@usn6:`7esn`{`6esn`:$0[01234567..00][$`2esn`..$@usn6],`3esn`:`6esn` Starts With $@usn6})),((:`7esn`{`2esn`:`` Starts With @usn5,usn2:$`2esn` Starts With .e0 Starts With 12.0})-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(:`3esn`:`1esn`{_usn4:`1esn`[@usn6..$123456789],`4esn`:$usn2[..12.0]})) Union With  $@usn5[0.12..][@usn5..],010 Contains 0X0123456789ABCDEF Order By $12[01..][1.e1..] Descending Skip .12[.e12..0.e0][0.e0..$`2esn`] Where $_usn4[12e12][`4esn`] Merge `1esn`=(#usn7 {@usn5:`5esn`[.e1][0Xa],@usn6:Count(*)[`7esn`..$12]})-[? *999..]-(`` :`1esn`) On Create Set usn2 =0.0[..12e12][..$0] Merge `2esn`=(_usn4 {`8esn`:9e1 In 01 In 999})<-[:_usn3|:`4esn`{_usn4:$`3esn` =~$`6esn` =~`8esn`,`5esn`:0X7[0e0..]}]-(:`8esn`) On Match Set @usn5+=`1esn`[9e12..$`8esn`][usn2..$``],usn1 =[12.e12 Ends With 01 Ends With .e1,$@usn5[0.12..][@usn5..],$usn1 In 1000 In $#usn7] Is Not Null On Match Set _usn4 =0 Contains 12e12,`1esn`:#usn8,`7esn` =0 Is Not Null"),
    octest:ct_string("Create ({`2esn`:123456789 Starts With `2esn` Starts With .0,@usn6:$123456789[$`2esn`][True]}) Unwind [_usn4 In usn1 Contains False Contains `` Where $usn1[0.12..]['s_str'..]|12[..True][..$`4esn`]] Ends With [`6esn` In 0X7 =~``|$#usn7[...e12][..$7]] As `1esn` Create `1esn`=(`3esn` {``:.e0[7..$`3esn`]})"),
    octest:ct_string("Merge #usn7=((#usn7 :`5esn`)<-[:`2esn`|usn2 *07..]-({`7esn`:`6esn` Starts With $@usn6,``:`6esn` =~$_usn3})<-[`1esn`?:`1esn` *01234567..12]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})) On Create Set `4esn` =.12 Is Not Null Is Not Null,{@usn6:True[..'s_str'][..01]}.`2esn` =12.e12[...0][..0x0],[usn1 In 00 Starts With _usn3 Where $`` Ends With 12e12].`3esn`? =0.12 Starts With {`1esn`:@usn6[..0xabc][..$#usn7]} Starts With {`3esn`:`8esn`[1000..$7][$`7esn`..`2esn`],_usn4:\"d_str\" Is Null Is Null} Remove [_usn4 Starts With $@usn6 Starts With #usn7].`4esn`,usn2(Distinct usn2[`3esn`][_usn3]).@usn5? Union Delete `6esn`(Distinct 12.0[0Xa][00]) In {`7esn`:12e12 Ends With 010 Ends With .0} In Extract(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6|#usn7 Is Not Null Is Not Null),$@usn6[..$#usn7][..12.e12],.e0[`4esn`..`4esn`][0.0..$0] Delete 12.e12 In $1000,{_usn3:0.12 Is Null Is Null,`1esn`:9e12[0.0..12.e12]} Ends With {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]},$999 Ends With $`3esn` Ends With `8esn` Union All Return {`8esn`:$123456789 Is Null Is Null,_usn3:$`4esn` Starts With 1e1}[(#usn7 :`2esn`:`3esn`)<-[`8esn`?]->(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})..All(_usn4 In usn1 Contains False Contains `` Where $`8esn`[$``..$7][$1000..$`7esn`])] As `5esn`,`6esn`(00 In 1e1) Starts With Extract(#usn7 In 01234567[$`3esn`..] Where .12 In $999 In `5esn`) Starts With Extract(#usn8 In $`5esn` Is Null Is Null Where $usn2 Is Not Null)"),
    octest:ct_string("Merge #usn8=((@usn5 {@usn6:$123456789[0X7..12.e12]})<-[:`5esn`|`1esn`]-(#usn8 {@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null})) On Create Set `5esn`+=0 Starts With `6esn` Starts With 0X0123456789ABCDEF,`4esn`+=$`7esn` Ends With $usn2,[usn2 In 1000 Contains 0.e0 Where #usn7 Ends With 9e1|010 Is Null Is Null].@usn5! =$1000 Ends With 1e1 Ends With 123.654 On Match Set [`6esn` In 0X7 =~`` Where $`3esn` =~Null|1.e1[0X0123456789ABCDEF..][$`5esn`..]]._usn3? =Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where \"d_str\" Is Null Is Null)[count(Distinct 0.12 Contains $12 Contains `8esn`)..[$`1esn` Is Null Is Null,9e1 In 01 In 999]],`1esn`+=None(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 12e12[.12..]) Ends With None(_usn4 In usn1 Contains False Contains `` Where 12 Ends With 01234567) Ends With @usn6($123456789[0.0..]),(_usn4 {#usn7:False[`2esn`..#usn8],#usn8:`5esn`[`1esn`..`1esn`]})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})-[#usn7?:@usn6 *00..]->(_usn3 :_usn4:usn1{@usn5:$@usn6 In $`5esn` In $usn2,#usn7:$0[0X0123456789ABCDEF..$#usn7]}).`3esn` =01234567[$@usn6..0X7][$`1esn`..123.654] Remove [`6esn`[1e1..]].@usn6!,[$_usn3[..Count ( * )][..@usn5]].@usn6! Union All Remove {`4esn`:.12 Starts With 0Xa}.usn1!,[`6esn` In 0X7 =~`` Where 123456789 =~_usn4 =~$0|$#usn8 Ends With 1000 Ends With .0].`7esn`? Remove (:`2esn`:`3esn`{usn2:9e12[@usn6..$``][#usn8..Count ( * )],`3esn`:$1000 In $`7esn` In $7})<-[?:`1esn`]-(_usn4 :@usn6:`7esn`{@usn5:$_usn3[$`4esn`..Null]})._usn3! Union All Optional Match ((@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})) Merge (`` :@usn6:`7esn`{`4esn`:0X0123456789ABCDEF Is Not Null}) On Match Set [@usn5 In 0X7 =~.0 =~\"d_str\" Where 12.e12 Ends With 01 Ends With .e1|00 Starts With _usn3].`2esn`? =None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 00 Ends With .12 Ends With `4esn`)[`3esn`(Distinct $`1esn` =~$`1esn` =~#usn7,$@usn5 Contains 01)..]"),
    octest:ct_string("Detach Delete usn1 Is Not Null Is Not Null,[$`4esn`[9e1..][0..]][Any(`4esn` In $`8esn` Starts With 1000 Where 0.e0[9e1..][0.0..])..Single(#usn8 In $`5esn` Is Null Is Null Where 1000 Ends With 1000 Ends With $`4esn`)],#usn8 Ends With `4esn` Ends With $`4esn` Optional Match ``=((`6esn` :`7esn`)) Union All Merge `5esn`=((`2esn` :usn2:@usn6)-[usn1?{`7esn`:$`2esn` Starts With .e0 Starts With 12.0}]-(`5esn` {`5esn`:$`5esn`[False]})) Optional Match ((:`7esn`{`2esn`:`` Starts With @usn5,usn2:$`2esn` Starts With .e0 Starts With 12.0})-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(:`3esn`:`1esn`{_usn4:`1esn`[@usn6..$123456789],`4esn`:$usn2[..12.0]})),(`8esn` )-[ *0..010{#usn7:$@usn6 Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)}) Union All Unwind $`5esn`[False] As `6esn` Return *,$0[7..][Null..] As `7esn`,`3esn`()[Filter(usn2 In 1000 Contains 0.e0 Where 0.12 In 01 In $`3esn`)..{@usn6:`6esn`[_usn4..][$`6esn`..]}] Order By (#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :usn2:@usn6)-[`1esn`:`8esn`|:usn1 *0xabc{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]-(@usn5 :#usn8{`1esn`:0xabc Ends With $7 Ends With $`2esn`,_usn4:``})[.._usn4(@usn6[`5esn`..$`3esn`],`8esn`[$``])] Asc,.e1[..$``][..0X0123456789ABCDEF] Ascending Skip 01[..$``][..$`7esn`] Merge `3esn`=(({`5esn`:0.12 Contains .e1})-[usn1?:`2esn`|usn2 *123456789..999]-(usn1 :`7esn`{`1esn`:$@usn6 Contains 07 Contains 0.e0})-[:@usn5|`8esn` *123456789..999{usn1:9e12 Is Not Null Is Not Null}]-(#usn7 :`5esn`)) On Match Set @usn5+=`` In `6esn`,Filter(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`` Is Null Is Null).`` =12.e12 Is Not Null On Match Set `` =None(`4esn` In 's_str'[12..'s_str'])[Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`)..][Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where $@usn6 Contains Count ( * ))..],#usn7($`8esn`[$``..$7][$1000..$`7esn`],`2esn` In 7 In usn2).`6esn`? =$_usn4['s_str'..],`4esn`+=$`7esn` Ends With $usn2"),
    octest:ct_string("Return *,usn1[Count ( * )..$usn1] As usn1,$`2esn` =~'s_str' As @usn5 Union All Create (((`7esn` :`2esn`:`3esn`)<-[@usn5?:#usn8 *999..{`1esn`:$@usn5 =~$`` =~$usn2}]->(`2esn` {`3esn`:$999[12.0..]})-[? *00..{#usn8:12.e12[...0][..0x0],`7esn`:$`4esn`[9e1..][0..]}]-(:usn1{`6esn`:7 Contains 9e1,#usn8:`7esn`[...e1][..\"d_str\"]}))),(@usn6 {`4esn`:$`2esn`[..`2esn`]})<-[`4esn`? *00..]-(`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]})-[ *..7]-(:_usn3{@usn6:$`7esn` Is Null Is Null})"),
    octest:ct_string("Remove Extract(usn1 In 0x0[..`4esn`] Where $#usn7 In .e1 In 01).#usn8 Delete usn2(Distinct 0xabc Contains Null Contains 9e12,12[..True][..$`4esn`]) Is Null,$999[..`1esn`],$_usn4[$`4esn`..$#usn7][`6esn`..7]"),
    octest:ct_string("Return Distinct *,{`4esn`:$@usn6 Contains 0 Contains $`2esn`}[[@usn5 In 0X7 =~.0 =~\"d_str\"|$`1esn` Ends With _usn4 Ends With `3esn`]..Extract(@usn5 In .12[#usn7][$`8esn`] Where $usn2 Contains 12.e12 Contains 00|9e0 Ends With $`7esn`)] Optional Match #usn8=((@usn5 {@usn6:$123456789[0X7..12.e12]})<-[:`5esn`|`1esn`]-(#usn8 {@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null})),((#usn7 :_usn3)<-[:_usn4|:@usn5 *..0X7]->(`4esn` {`7esn`:.e0[..999][..0X7]})-[#usn7:_usn3|:`4esn`]-(:#usn7{usn1:$123456789[..0.12][..#usn7]})) Remove `5esn`:_usn4:usn1,_usn4($`6esn`[$@usn6..],_usn3[.0]).#usn8,[07[$999],@usn6[$`7esn`]].@usn5! Union All Detach Delete 12[12e12..@usn6];"),
    octest:ct_string("Delete 's_str' Ends With .e0 Remove Extract(@usn6 In @usn5 In $`6esn` Where .12[`1esn`..][$`3esn`..]|@usn6[..0xabc][..$#usn7])._usn3,Single(usn2 In 1000 Contains 0.e0 Where 0e0 Is Not Null Is Not Null).``!"),
    octest:ct_string("Match (((:`6esn`:`7esn`{usn2:_usn3 Contains @usn6 Contains 1.e1,usn2:$`6esn`[`1esn`..][.e0..]})<-[? *..0x0]->(@usn5 {@usn6:0.0[999..],#usn8:Null Is Null Is Null})-[? *..0X7{`3esn`:`8esn`[$``]}]->({`2esn`:@usn5 In 0X0123456789ABCDEF,`1esn`:@usn6[`5esn`..$`3esn`]}))) Where True[`4esn`][$`6esn`] Unwind 9e12 =~01 =~$`7esn` As usn1 Union Create #usn7=(((`4esn` )<-[_usn3?:`3esn`|:`4esn` *0..010]->(_usn3 )<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3}))),`5esn`=(#usn7 {@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]})"),
    octest:ct_string("Return *,$_usn3 =~`7esn` =~$_usn4 As `` Skip Count ( * ) Ends With 1000 Ends With 12 Limit .e1[..$`4esn`][.._usn4] Remove ({`2esn`:$`5esn` Is Null,@usn6:#usn7 Starts With `1esn`})<-[ *..0x0{`8esn`:010[@usn5..],#usn8:False Is Not Null Is Not Null}]-(`5esn` {`8esn`:0.0[12...12]})._usn3,All(`4esn` In `6esn`[1e1..] Where 07[12e12]).`3esn`!,[0Xa[$``..][01234567..]].@usn5 Delete 00[01234567][False] Union All Unwind {#usn7:0[0.12..]} Ends With Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]) Ends With {@usn5:\"d_str\" Is Null Is Null,@usn5:$_usn4[`3esn`][0]} As `5esn` Detach Delete `7esn` Starts With $`` Starts With $#usn7 Create `4esn`=((`2esn` :`6esn`:`7esn`{`6esn`:$#usn8 Ends With 1000 Ends With .0,`7esn`:010 =~`6esn`})),_usn3=((_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8})-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]}));"),
    octest:ct_string("Optional Match `2esn`=(`` :usn2:@usn6)<-[?{@usn5:12.e12['s_str'],`1esn`:_usn3 Ends With 12e12 Ends With .e0}]-(`7esn` :`4esn`:#usn8{`2esn`:Count(*)[..`3esn`]}),(:@usn6:`7esn`{_usn3:False[`2esn`..#usn8]})-[`4esn`:`2esn`|usn2{@usn6:0.12[0.e0..][`4esn`..]}]-(_usn3 :``)-[?:usn2|#usn8{`2esn`:@usn5 In 0X0123456789ABCDEF,`1esn`:@usn6[`5esn`..$`3esn`]}]->({`1esn`:0.0[1000..][.e1..]}) Where $`7esn` Ends With $`2esn` Ends With $usn1 Unwind @usn6 =~01 As `8esn` Return *,0.12[Count(*)..],$@usn5 =~$`` =~$usn2 As #usn8 Order By Single(#usn8 In $`5esn` Is Null Is Null Where $123456789 Ends With $`6esn`) Is Null Desc Skip Single(`4esn` In 's_str'[12..'s_str'] Where .12[9e0][$7])[None(`4esn` In 's_str'[12..'s_str'] Where $`3esn`[@usn5..$123456789])..@usn6(Distinct True =~@usn5 =~$`1esn`,.12 Starts With $usn2)]"),
    octest:ct_string("Remove [$123456789 Is Null Is Null,usn1 Contains $``,$123456789 Ends With .e1]._usn4! With Distinct `` Is Not Null Is Not Null As @usn6,`5esn`[`1esn`..`1esn`],[$`8esn` In \"d_str\" In 9e12,9e0 Contains `8esn`,$@usn6 Contains 0 Contains $`2esn`][Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 01 In _usn3 In 12)][Extract(#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|`7esn` Starts With $usn2 Starts With .e0)] As _usn4 Order By Count(*) Is Null Descending,[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 12 Ends With 01234567|Count(*) In 01 In .0] Ends With [`4esn` In 's_str'[12..'s_str'] Where 0.12 In 01 In $`3esn`|9e0 =~$`5esn`] Ascending,[0X0123456789ABCDEF In 01234567,0x0 Contains _usn4 Contains 123456789] Asc Skip 1000 Contains 123456789 Contains 1e1 Limit $`6esn`[`3esn`..0e0]"),
    octest:ct_string("Create `5esn`=(({`4esn`:$_usn3[..Count ( * )][..@usn5],#usn8:_usn3 =~00})-[_usn4?:_usn4|:@usn5 *123456789..999{`2esn`:@usn5 In $`6esn`}]->(#usn8 :`4esn`:#usn8{#usn7:$`8esn` Starts With 1000})<-[:#usn7|:_usn4 *0Xa]-(usn1 :_usn3{_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"})),(@usn6 {_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12})<-[:`5esn`|`1esn`{`4esn`:9e0[True..`1esn`],@usn6:7 =~9e0 =~'s_str'}]->(`6esn` {`2esn`:$`2esn`[..`2esn`],usn1:False[0Xa..$@usn5][$`6esn`..12e12]}) Match `5esn`=((_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8})<-[?:usn2|#usn8 *00..]-(`3esn` :`4esn`:#usn8)),#usn8=({_usn3:12.e12 In $0 In Count(*)})<-[:@usn5|`8esn`*..]-(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4}) Where `` Starts With @usn5"),
    octest:ct_string("With  1000[123.654..9e12][1000.._usn3],count($_usn3 =~`7esn` =~$_usn4) Is Not Null Is Not Null,$123456789 =~$#usn8 =~$#usn8 Order By $usn2 Is Not Null Is Not Null Ascending,Count ( * )[(`7esn` {usn1:$1000 Contains $`3esn`})-[`5esn`?:_usn4|:@usn5]-(`3esn` {`8esn`:$``[_usn4..][`7esn`..]})-[@usn5:`4esn`|:`7esn` *0X0123456789ABCDEF..{`7esn`:.e0[..999][..0X7]}]-(usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1})..Single(usn1 In 0x0[..`4esn`] Where $999[12.0..])][(:`6esn`:`7esn`{@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]})-[?{`2esn`:$`6esn`[$@usn6..]}]-(`4esn` :`6esn`:`7esn`)<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})..Single(`6esn` In 0X7 =~`` Where $usn1[0.12..]['s_str'..])] Ascending Where $_usn3[Null] Return 00 Ends With $_usn4 Ends With $`2esn` As `5esn` Order By $`8esn` In \"d_str\" In 9e12 Desc,`3esn`(.e0 =~`5esn`)[Single(`6esn` In 0X7 =~`` Where $`3esn` =~Null)][[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $_usn3[$`4esn`..Null]|False[`2esn`..#usn8]]] Asc,1e1 In 9e0 In 9e0 Ascending Union Merge `5esn`=(({_usn3:12.e12 In $0 In Count(*)})<-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(`2esn` :``)-[:_usn4|:@usn5 *0xabc]-({`6esn`:.e1 Starts With 0.0 Starts With `6esn`,_usn3:$@usn6 Contains 0 Contains $`2esn`})) On Match Set `7esn` ={`4esn`:$@usn6 Contains 0 Contains $`2esn`}[[@usn5 In 0X7 =~.0 =~\"d_str\"|$`1esn` Ends With _usn4 Ends With `3esn`]..Extract(@usn5 In .12[#usn7][$`8esn`] Where $usn2 Contains 12.e12 Contains 00|9e0 Ends With $`7esn`)],@usn6 =`5esn` In $999 On Create Set (@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})-[`2esn`]-({`4esn`:$_usn3[..Count ( * )][..@usn5],#usn8:_usn3 =~00})<-[`6esn`?{`7esn`:.12 Ends With `1esn` Ends With $`1esn`,``:9e0 Starts With `6esn`}]->(:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})._usn3 =123.654 Contains `2esn`,`3esn` =Extract(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null|12.e12 Ends With 01 Ends With .e1) Ends With $0 Ends With All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`),{`6esn`:$_usn4[$`8esn`..][07..]}.@usn6! =`5esn`[.e1][0Xa] Union With Distinct `5esn` In $999 As `6esn` Order By [_usn4 In usn1 Contains False Contains `` Where True[..'s_str'][..01]][[.0 Starts With `2esn` Starts With `6esn`,9e1[0.e0..][#usn8..]]..][[07[$999],9e0 In 01234567,@usn5 In 0X0123456789ABCDEF]..] Asc,False Ends With $`8esn` Asc Where _usn4[$`4esn`..]"),
    octest:ct_string("With Distinct $#usn8[1e1][9e1] As @usn5,$`3esn`[`2esn`...e0] As _usn3,.e1 Starts With $`8esn` Skip 0x0 =~$`7esn` =~@usn6 Limit [$_usn3[$`4esn`..Null],0x0 Contains $`8esn` Contains `6esn`,\"d_str\" =~`6esn` =~0Xa] Contains [@usn6 Starts With `7esn` Starts With Null] Contains `6esn`(Distinct $`4esn`[usn1..$#usn8][12.0..`3esn`],12.e12['s_str']);"),
    octest:ct_string("Return *,`4esn` Is Null Order By `5esn` In $999 Descending Limit `3esn` =~$`5esn` =~12 Merge #usn8=(({`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})<-[`6esn`?:_usn3|:`4esn` *12..0xabc]-(`1esn` :usn1$@usn6)<-[#usn8?:`3esn`|:`4esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]-({_usn3:$`1esn` Starts With @usn6})) On Match Set (usn2 :`6esn`:`7esn`{`6esn`:`` Contains 12 Contains True,usn2:$`2esn`[123456789..][00..]})-[`7esn`?{usn1:@usn5 Ends With $`3esn` Ends With 12e12,@usn6:12e12[_usn3..][$@usn5..]}]->(usn2 :`5esn`).#usn8? =[`4esn` In `6esn`[1e1..] Where `3esn` =~0.0 =~$``] =~[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`],`2esn` ={@usn5:$`3esn`} Starts With .12 Unwind $`4esn` Starts With 1e1 As usn2 Union All Match `5esn`=((_usn4 :@usn6:`7esn`)-[:usn2|#usn8*..]-(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12})) Where 0 Ends With $7 Ends With _usn3 Union All Create (usn2 :#usn7),#usn8=(((`8esn` :@usn5)<-[@usn5:#usn7|:_usn4]->(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})<-[`4esn`:``|:_usn4{`5esn`:0e0 =~_usn4}]-(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})))"),
    octest:ct_string("Return *,Single(_usn4 In usn1 Contains False Contains `` Where False In 123456789 In $0) Starts With Any(@usn6 In @usn5 In $`6esn` Where $`5esn` Contains Count(*) Contains #usn7) Starts With Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where .12 Ends With `1esn` Ends With $`1esn`) As `5esn`,Count ( * )[..999] As `6esn` Limit 12.0 =~#usn7 =~$usn2"),
    octest:ct_string("Detach Delete $999[..`1esn`],$usn2[$123456789..123.654][$`5esn`..'s_str'] Return 00 Ends With $_usn4 Ends With $`2esn` As `5esn` Order By $`8esn` In \"d_str\" In 9e12 Desc,`3esn`(.e0 =~`5esn`)[Single(`6esn` In 0X7 =~`` Where $`3esn` =~Null)][[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $_usn3[$`4esn`..Null]|False[`2esn`..#usn8]]] Asc,1e1 In 9e0 In 9e0 Ascending Union All Merge `4esn`=((#usn8 {@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null})) On Match Set {`8esn`:`8esn` In $@usn5}.`3esn`! =$@usn5[#usn8..][$`1esn`..],All(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $@usn6 Is Null Is Null).`1esn`! =$12[..``][..$7] On Create Set usn2 =_usn3 Is Not Null Is Not Null,`4esn` =.e1 Starts With $`8esn` Union Match _usn4=(#usn8 {@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null})-[:`2esn`|usn2 *999..{#usn8:`5esn` =~0Xa,usn1:12 =~usn1 =~.e12}]-(@usn6 ) Detach Delete 0x0 Is Not Null Is Not Null"),
    octest:ct_string("Remove (#usn8 :`5esn`{usn2:.e1 Starts With 0.0 Starts With `6esn`,#usn8:9e12 =~01 =~$`7esn`})<-[`7esn`?:`5esn`|`1esn` *0xabc]->(#usn7 {`6esn`:123456789 Is Null,`1esn`:00 In 12.e12}).`8esn`?;"),
    octest:ct_string("Delete Count ( * )[.0..][$999..],_usn3[...e1],Single(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where .12 Starts With @usn5 Starts With $#usn8) =~(@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})<-[_usn4?:`6esn`]-(`2esn` {`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null}) =~(_usn4 :usn1)-[@usn5? *999..]-(usn1 :`4esn`:#usn8)-[usn2?:`2esn`|usn2*..{@usn5:$1000[01234567],@usn5:0x0[$`3esn`..010][$#usn7..00]}]->(`4esn` {#usn8:`1esn`[0e0..],#usn7:$`6esn`[..0X0123456789ABCDEF]}) Return Distinct 0X0123456789ABCDEF Ends With 0X0123456789ABCDEF Ends With 's_str' Limit usn2[$`7esn`..010][00..``] With  @usn6(123456789 =~$123456789) In Extract(`4esn` In `6esn`[1e1..]) In {``:True[..'s_str'][..01],usn1:0.12 In $7 In 0} Limit .12 Is Not Null Is Not Null;"),
    octest:ct_string("Unwind Extract(`6esn` In 0X7 =~`` Where $_usn3[9e1][$_usn4]|@usn6[..0xabc][..$#usn7])[[@usn6 In @usn5 In $`6esn` Where $@usn5 In 12e12 In Count(*)|999[$`6esn`]]..Any(_usn4 In usn1 Contains False Contains `` Where 0X7 In 123.654 In $`2esn`)][{`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`],usn2:@usn6[`3esn`..][$7..]}..`7esn`($123456789 Ends With $`6esn`)] As _usn4 Merge `8esn`=(({_usn3:$0 Ends With $#usn7 Ends With .12})-[:``|:_usn4 *01234567..12{`2esn`:$`` Is Null Is Null,``:$`4esn`[usn1..$#usn8][12.0..`3esn`]}]->(#usn7 {@usn5:`5esn`[.e1][0Xa],@usn6:Count(*)[`7esn`..$12]})-[?:``|:_usn4 *..0X7]->({`2esn`:@usn5 In 0X0123456789ABCDEF,`1esn`:@usn6[`5esn`..$`3esn`]})) Union Remove (`3esn` :#usn8{#usn8:$_usn4[$`8esn`..][07..]})<-[`2esn` *12..0xabc{`6esn`:$123456789[0.0..],@usn5:999[$`6esn`]}]-({@usn6:9e1 Contains $`3esn` Contains 01234567,@usn6:.e12[.12..][_usn4..]})<-[?:usn2|#usn8 *00..]-(`6esn` :`5esn`{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]}).`6esn`,#usn7:#usn8,{#usn7:0Xa[..$``],`1esn`:usn2 Is Not Null}.usn1? Union Delete usn1 Contains \"d_str\" Contains 9e12"),
    octest:ct_string("Create usn1=((:#usn8{#usn7:12e12 Ends With 010 Ends With .0})-[#usn8? *0xabc]-(#usn8 :`4esn`:#usn8)),#usn7=(((`4esn` )<-[_usn3?:`3esn`|:`4esn` *0..010]->(_usn3 )<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3}))) Union With  0.12[Count(*)..] Order By .0 Is Null Is Null Ascending,`1esn`(Distinct $@usn5[#usn8..][$`1esn`..],#usn7 Ends With `4esn` Ends With @usn5)[[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $999[12.0..]|usn1[Count ( * )..$usn1]]][{`8esn`:010[@usn5..],#usn8:False Is Not Null Is Not Null}] Asc Skip 0 Contains 12e12"),
    octest:ct_string("With Distinct 0x0 In `8esn` In 999,``[$`3esn`][$`2esn`],01234567 Ends With 12.0 Ends With 0X7 Order By Count ( * )[..usn1][..12.e12] Asc,$usn2 Is Not Null Is Not Null Descending Skip `3esn`(Distinct $_usn3[Null],12[..True][..$`4esn`]) Is Null Is Null Detach Delete _usn3 Ends With 12e12 Ends With .e0,({`5esn`:0.12 Contains .e1})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:@usn5{#usn7:1e1[@usn5..]})<-[?:`6esn` *01234567..12{`7esn`:7 In 0xabc}]-(#usn7 :usn2:@usn6{`1esn`:$usn2 Contains 12.e12 Contains 00}) =~None(usn1 In 00 Starts With _usn3 Where False[.e1..Null]) Unwind $123456789 In Count(*) In .e1 As usn1 Union With  123.654 Is Not Null Is Not Null As `3esn`,01[Null..][`1esn`..] Where 0X7[0e0..] Union All Return Distinct *,`4esn` Is Null Order By `5esn` In $999 Descending Limit `3esn` =~$`5esn` =~12;"),
    octest:ct_string("Unwind 9e12 As `7esn` Unwind 12.e12 Contains $`5esn` As #usn7 Remove {`6esn`:$`8esn`[``..][123.654..],``:999[$`6esn`]}.``,[0X7[..12e12],$`6esn`[$`1esn`][1000]].usn2?;"),
    octest:ct_string("Delete 0.12 =~9e0,12.0[0Xa][00] With  {_usn4:00}[#usn7(00 In 12.e12)][[.12 Ends With `1esn` Ends With $`1esn`,$`5esn`[False]]] As `1esn` Order By 0 Is Not Null Descending Skip 0x0 Where 123456789 Starts With #usn7 Starts With `6esn` Optional Match `8esn`=((_usn4 :@usn6:`7esn`)-[:usn2|#usn8*..]-(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12})) Union All Create `1esn`=((_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8})-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})) Return Distinct 123.654 Is Not Null Is Not Null As `3esn`,00 As `4esn` Order By [@usn5 In .12[#usn7][$`8esn`] Where .e12 =~0.0 =~9e0] Is Null Descending Skip #usn8 Is Not Null Create ((:`1esn`{@usn6:$_usn4[$`4esn`..$#usn7][`6esn`..7],`8esn`:'s_str'['s_str'..$usn2][_usn3.._usn3]})-[usn1?:`2esn`|usn2 *123456789..999]-(`3esn` :usn2:@usn6)) Union Remove Any(usn1 In 00 Starts With _usn3 Where `6esn`[1e1..]).`3esn`!,Any(usn2 In 1000 Contains 0.e0 Where _usn4[0xabc..]).@usn5?"),
    octest:ct_string("Merge (((`` :@usn6:`7esn`{`2esn`:0.12[0.e0..][`4esn`..]})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->(`8esn` :_usn3{`8esn`:$`3esn` In $12 In 's_str'})-[`7esn`{usn1:0 Is Not Null}]->(:`7esn`{`6esn`:123456789 Is Null,`1esn`:00 In 12.e12}))) Return Distinct *,@usn6[`5esn`..$`3esn`] As ``,`7esn` In 's_str' In 0.12 As _usn3 Skip True Is Not Null Is Not Null Union All Optional Match @usn6=(#usn7 {@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]}) Match (`8esn` :@usn5)-[#usn7:`7esn`|`2esn` *..01{``:0X7 In 's_str' In $`1esn`,#usn8:010 Contains Count(*)}]->(`6esn` :_usn4:usn1{`6esn`:00 In 12.e12}),(({`5esn`:_usn3 Contains @usn6 Contains 1.e1,`7esn`:$12[01..][1.e1..]})-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})<-[usn1?{#usn7:9e12 Is Not Null Is Not Null,usn2:`3esn` =~0.0 =~$``}]->(`5esn` :`3esn`:`1esn`{`6esn`:$1000[.e0..]}))"),
    octest:ct_string("Merge `3esn`=(:`3esn`:`1esn`{usn1:`4esn` In $12 In `8esn`})-[?:usn1|`3esn` *999..{_usn4:$999[12.0..],usn1:0[usn2..]}]->(:usn2:@usn6{@usn5:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:.12 Ends With $`4esn` Ends With Count(*)}) On Create Set _usn3+=True In All(`6esn` In 0X7 =~`` Where #usn7 Starts With 0 Starts With 12),#usn7+=`` Is Not Null,`5esn` =0.0[Extract(`4esn` In 's_str'[12..'s_str'] Where `` Contains 12 Contains True|$`1esn` Is Null)..Extract(#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str'|_usn3 Ends With 12e12 Ends With .e0)][None(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where `8esn` In $@usn5)..{@usn6:.12 Starts With 0Xa}] Unwind 9e0[$_usn3..0X7][7..$#usn8] As @usn6 Create (({_usn4:$_usn4[$`8esn`..][07..],#usn7:12.e12[...0][..0x0]})) Union All Match usn2=(((`7esn` :`7esn`)-[{`2esn`:\"d_str\" =~`3esn` =~0Xa,_usn4:usn1 Is Null Is Null}]->(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]})<-[`2esn`?:`7esn`|`2esn`{`8esn`:00}]-(`5esn` {@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00}))) Match `5esn`=(`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})<-[`8esn`?:`5esn`|`1esn`]-(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]})<-[`3esn`?*..]->(`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]}) Union All Unwind [`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn7 In .e1 In 01][..(usn1 :#usn8)-[:`1esn` *010{`2esn`:$_usn3[9e1][$_usn4],`7esn`:`7esn`[...e1][..\"d_str\"]}]->(`7esn` :#usn8)<-[:#usn7|:_usn4{usn2:`5esn`[Count ( * )..][\"d_str\"..],`7esn`:.e1 In $@usn6 In 999}]-({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})][..Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $usn2[..12.0])] As `3esn` Optional Match `6esn`=((#usn7 :#usn8{`2esn`:12 =~usn1 =~.e12})),((@usn5 :_usn4:usn1{`1esn`:07[1e1],`7esn`:12e12[$`5esn`][07]})) Where 's_str' Ends With .e0"),
    octest:ct_string("Unwind 12[usn1][True] As @usn6 Union Detach Delete $usn2 =~$_usn4 =~`5esn` Merge usn1=(`4esn` :#usn7)-[_usn4?:`6esn`]-(`2esn` :`1esn`{``:9e1 Starts With _usn3 Starts With `4esn`})-[_usn4?:@usn6 *..7]->(`` :@usn6:`7esn`{`4esn`:0X0123456789ABCDEF Is Not Null}) Return 123.654 Is Not Null Is Not Null As `3esn`,00 As `4esn` Order By [usn1 In 00 Starts With _usn3 Where 00][#usn8(Distinct $`2esn`[$123456789..$`1esn`][0Xa..$``],@usn6[`5esn`..$`3esn`])..['s_str'[..0.e0][..`1esn`],`5esn`[.e1][0Xa],123456789 In $usn2 In `6esn`]] Asc,999 Contains `7esn` Desc,Filter(@usn5 In $#usn8 Is Null Is Null Where 9e1 Contains $`3esn` Contains 01234567) =~['s_str'[..0.e0][..`1esn`],`5esn`[.e1][0Xa],123456789 In $usn2 In `6esn`] Ascending Skip 0e0 Is Null Is Null Union Unwind $`1esn` Is Null As `6esn`"),
    octest:ct_string("Remove `7esn`(Distinct 010 Is Null Is Null,$`8esn`[..$``]).@usn5,{#usn7:0Xa Is Not Null Is Not Null,#usn7:.0[$`6esn`..False]}.`4esn`?,[usn1[..@usn5][...e0],$`8esn`[``..][123.654..]].`` Delete ({_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[? *..0x0]->(:usn2:@usn6{`6esn`:12[12e12..@usn6],#usn8:`6esn` =~$_usn3}),$123456789[$``][010] Return All(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $123456789 Ends With $`6esn`) Is Null Skip [0X0123456789ABCDEF Ends With 0X0123456789ABCDEF Ends With 's_str',0X0123456789ABCDEF In $1000 In $`3esn`,$0[..`8esn`]] In `4esn`(Distinct 12.e12 In $0 In Count(*),00 In 1e1) In [`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where _usn3[...e1]|.e0 =~`5esn`]"),
    octest:ct_string("With  `2esn` In 7 In usn2,$0 =~$usn1 =~9e1 As `5esn`,@usn5[_usn4..][.e0..] As usn1 Skip Any(`6esn` In 0X7 =~`` Where $`5esn` In `2esn` In $12)[Extract(`4esn` In 's_str'[12..'s_str'] Where .12[9e0][$7]|$`3esn` Starts With $usn1)..[@usn5 In .12[#usn7][$`8esn`] Where $12 Contains 123.654 Contains `8esn`|@usn5 Ends With 1.e1 Ends With 0X0123456789ABCDEF]][{`6esn`:$12[..``][..$7]}..[usn1 In 1000 In $`5esn`]] Optional Match ((:`7esn`{`2esn`:`` Starts With @usn5,usn2:$`2esn` Starts With .e0 Starts With 12.0})-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(:`3esn`:`1esn`{_usn4:`1esn`[@usn6..$123456789],`4esn`:$usn2[..12.0]})),(`8esn` )-[ *0..010{#usn7:$@usn6 Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)}) Union Remove [`5esn`[`1esn`..`1esn`],.12[#usn7][$`8esn`]]._usn3,None(usn1 In 0x0[..`4esn`] Where \"d_str\" Contains `3esn` Contains 00).`6esn` Union All Unwind 01234567[.12..7][1000..1.e1] As `` Remove [.12 Starts With .12 Starts With `3esn`,Count ( * )[Count ( * )..12e12][usn1..1000],False In `3esn`].#usn7,{usn1:$1000 Contains $`3esn`}.#usn8!,None(`4esn` In $`8esn` Starts With 1000 Where True Starts With $`8esn` Starts With \"d_str\").`4esn`!;"),
    octest:ct_string("Create (#usn7 $usn2)<-[?:_usn3|:`4esn` *010{`8esn`:$``[_usn4..][`7esn`..]}]-(`2esn` ) Union All Unwind [@usn6 In @usn5 In $`6esn` Where $`1esn` Is Null Is Null] Contains Filter(`4esn` In 's_str'[12..'s_str'] Where 123.654 Starts With usn1 Starts With @usn5) Contains [`4esn` In $`8esn` Starts With 1000 Where False In `3esn`] As #usn7 Match ((`` :`1esn`)-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`4esn` {`2esn`:@usn6[`5esn`..$`3esn`],`7esn`:$`1esn` Is Null})) Where $`8esn`[$``..$7][$1000..$`7esn`];"),
    octest:ct_string("Remove [@usn5 In 0X7 =~.0 =~\"d_str\" Where $`8esn` Starts With 1000|@usn6 Contains .e1 Contains $`4esn`].`8esn`! Merge (((`` :@usn6:`7esn`{`2esn`:0.12[0.e0..][`4esn`..]})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->(`8esn` :_usn3{`8esn`:$`3esn` In $12 In 's_str'})-[`7esn`{usn1:0 Is Not Null}]->(:`7esn`{`6esn`:123456789 Is Null,`1esn`:00 In 12.e12}))) Create (`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]})<-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :`4esn`:#usn8) Union All Remove {usn2:$#usn7 In 12.0 In 0X0123456789ABCDEF,`6esn`:`7esn`[1e1..07][0x0..Count ( * )]}.`4esn`,Single(`4esn` In `6esn`['s_str'..][010..] Where 9e0 =~$`5esn`).`8esn`? Unwind `6esn` =~$_usn3 As usn2"),
    octest:ct_string("Unwind 00 In 12.0 In 's_str' As `3esn` Union All Return 's_str'[..0.0][..$`4esn`] As `2esn`,#usn7 Contains .0 Contains .e1,({`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`4esn` {@usn6:True[..'s_str'][..01]}) In Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where 07[12e12]) Skip `6esn` Starts With $usn2 Starts With 0.0 Limit 9e1 Contains $`3esn` Contains 01234567 With Distinct Count ( * )[@usn6..0x0],.e0 Is Not Null Is Not Null As `2esn`,usn2 Is Not Null Is Not Null As `2esn` Skip $@usn5 =~$`` =~$usn2 Where `` Starts With 12 Remove (:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[`2esn`]-(`6esn` :#usn7)-[_usn4?:`6esn`]-(@usn5 :`8esn`).`7esn`,`7esn`(usn2 Is Null Is Null,`6esn` =~$_usn3).`1esn`!"),
    octest:ct_string("Return 123.654 =~$#usn8 =~`8esn` As `6esn`,@usn6[`5esn`..$`3esn`] As ``,Null[1.e1..] As _usn4 Limit #usn8 Is Not Null Union All Merge `2esn`=(:`1esn`)<-[`2esn`?:usn2|#usn8{`6esn`:0X7[.e12..01234567],@usn6:`7esn`[...e1][..\"d_str\"]}]->(`5esn` :`8esn`{#usn8:0.12 Contains $`2esn` Contains $_usn4,`2esn`:$`5esn` Starts With _usn3 Starts With @usn5})<-[`4esn`? *00..]-(`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]}) On Match Set _usn3+=07 In Count ( * ) In \"d_str\" Match (#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]})<-[:`6esn` *..0X7{`3esn`:`1esn` Contains Count ( * ),`7esn`:01234567 =~usn1}]-(:@usn5{`8esn`:$`3esn`[@usn5..$123456789],@usn5:\"d_str\" Starts With $usn1})-[?:#usn7|:_usn4]->(`` :#usn7$0) Remove (usn2 :`6esn`:`7esn`{`6esn`:`` Contains 12 Contains True,usn2:$`2esn`[123456789..][00..]})-[_usn3 *010]->(:usn1{`8esn`:usn1 Contains $``})._usn4?,usn1:`3esn`:`1esn`,{`2esn`:9e1 In 01 In 999,`5esn`:$@usn6[..$usn1]}.@usn5!;"),
    octest:ct_string("Return *,0X0123456789ABCDEF Ends With 0X0123456789ABCDEF Ends With 's_str' Order By [`8esn` In 's_str' Starts With 1000 Starts With #usn8] =~[01234567 Ends With 12.0 Ends With 0X7,999[$`6esn`],`` Starts With @usn5] =~(:@usn6:`7esn`{`1esn`:010[@usn5..]})<-[`7esn`?:`5esn`|`1esn`]->(#usn8 :_usn4:usn1) Descending,$123456789 Ends With .e0 Ascending,({@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]})-[`6esn`?:`4esn`|:`7esn` *0..010{_usn3:$`1esn` Starts With @usn6}]-(`2esn` {#usn8:12.e12[0e0..7]}) Desc Skip 0X0123456789ABCDEF[.e0..$`4esn`] Remove {usn2:$#usn7 In 12.0 In 0X0123456789ABCDEF,`6esn`:`7esn`[1e1..07][0x0..Count ( * )]}.`4esn`,Single(`4esn` In `6esn`['s_str'..][010..] Where 9e0 =~$`5esn`).`8esn`? Create (:``{`5esn`:.e1 In $@usn6 In 999})-[`5esn`?:`3esn`|:`4esn`{`1esn`:$usn2 Contains 12.e12 Contains 00}]-(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]}),((:_usn3{@usn6:$`7esn` Is Null Is Null})-[``:``|:_usn4 *0X0123456789ABCDEF..{_usn3:$_usn3[..Count ( * )][..@usn5]}]-(#usn8 :@usn6:`7esn`)<-[?:_usn3|:`4esn` *010{`8esn`:$``[_usn4..][`7esn`..]}]-(`2esn` ))"),
    octest:ct_string("Merge (({usn1:`2esn`[$`1esn`..][$_usn3..]})<-[?:@usn6{`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]}]->(:usn1{`8esn`:usn1 Contains $``})) On Create Set usn2:usn1,None(_usn4 In usn1 Contains False Contains `` Where .12 In $999 In `5esn`).usn2 =9e0 In 01234567,`8esn` =$@usn5 Ends With 0X0123456789ABCDEF Remove None(@usn5 In $#usn8 Is Null Is Null Where 9e1 Contains $`3esn` Contains 01234567).`8esn` Remove [$`2esn` =~'s_str',12 Ends With 01234567,$1000 Is Null Is Null].`3esn`?,[12.e12[...0][..0x0]]._usn4,(`1esn` :`8esn`)<-[#usn7:`3esn`|:`4esn` *00..]->(`4esn` :`8esn`)-[`4esn`? *0Xa]-(`7esn` :`2esn`:`3esn`{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}).`3esn`? Union All Return Distinct .e12[.12..][_usn4..] As _usn4 Order By $usn1[1e1.._usn3][$@usn6..$#usn7] Desc Skip Extract(@usn6 In @usn5 In $`6esn` Where $_usn4[`3esn`][0]|_usn3 Is Null Is Null) Is Not Null Limit Extract(@usn6 In @usn5 In $`6esn` Where 123456789 =~_usn4 =~$0) Is Null Delete usn1 Contains False Contains ``,12e12[0.e0][9e1] Return *,[`4esn` In 's_str'[12..'s_str'] Where 9e1 Contains $`3esn` Contains 01234567][[7[..12e12][..$`6esn`]]..{usn1:7 =~9e0 =~'s_str',@usn6:$usn1[..$`6esn`][..Null]}],$999 Ends With $`3esn` Ends With `8esn` Order By .12[..$`6esn`] Descending,@usn6(Distinct Null[0e0][12])[..[@usn5 In 0X7 =~.0 =~\"d_str\" Where 0X7[0e0..]]][..`8esn`(010 =~`6esn`)] Descending Skip Count(*)[True] Limit 0xabc Ends With $7 Ends With $`2esn` Union All Merge (((`1esn` :`8esn`)-[_usn4:`7esn`|`2esn`]-(`3esn` {`8esn`:$usn2[12..$`7esn`][$0..$`7esn`]})-[_usn4{@usn6:`1esn`[...e1],`5esn`:`5esn`[`1esn`]}]->(:usn2:@usn6{`6esn`:12[12e12..@usn6],#usn8:`6esn` =~$_usn3}))) On Match Set Filter(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`` Is Null Is Null)._usn4! =$@usn6[..$#usn7][..12.e12],{`4esn`:00 In 12.e12,@usn6:12e12[Null]}.`` =$`8esn` In \"d_str\" In 9e12 On Match Set @usn5+=`1esn`[9e12..$`8esn`][usn2..$``],usn1 =[12.e12 Ends With 01 Ends With .e1,$@usn5[0.12..][@usn5..],$usn1 In 1000 In $#usn7] Is Not Null Merge (((usn2 :#usn7)<-[`7esn`?:@usn5|`8esn`]-(`1esn` :``)-[`6esn`:`4esn`|:`7esn` *1000..{`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null}]->(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]}))) Remove Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null).`5esn`"),
    octest:ct_string("Return Distinct 123456789 =~$123456789 Order By 00 Is Null Is Null Descending Skip [\"d_str\" Starts With $usn1,.12 Contains $`4esn` Contains $`6esn`,01234567 =~usn1] Is Null Is Null Match `5esn`=((_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8})<-[?:usn2|#usn8 *00..]-(`3esn` :`4esn`:#usn8)),`1esn`=(((:_usn3{@usn6:$`7esn` Is Null Is Null})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :usn2:@usn6)<-[`3esn`? *999..{`6esn`:.e12 =~0.0 =~9e0,@usn6:$usn2 =~$_usn4 =~`5esn`}]->(:@usn6:`7esn`{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`}))) With Distinct $999[$1000] As `4esn`,[`4esn` In 's_str'[12..'s_str'] Where 9e12 =~01 =~$`7esn`][#usn7(00 In 12.e12)..Extract(usn1 In 0x0[..`4esn`] Where 1000 Ends With 1000 Ends With $`4esn`|@usn6[$`3esn`])][(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})<-[`8esn`]->(#usn8 )<-[`3esn` *00..{`8esn`:@usn6 Contains .e1 Contains $`4esn`,_usn4:0X7[..12e12]}]->(@usn5 {`1esn`:0[usn2..]})..(usn1 :_usn4:usn1)<-[@usn5?:`1esn`]-(#usn7 :`2esn`:`3esn`)] Order By #usn8 Ends With $@usn6 Ends With _usn4 Ascending,9e0 =~$`5esn` Descending,[\"d_str\" Starts With $usn1,.12 Contains $`4esn` Contains $`6esn`,01234567 =~usn1] Is Null Is Null Descending Limit .12[`1esn`..][$`3esn`..] Where `1esn` In 999 In $#usn7 Union All Return `2esn` Contains $999 As #usn7,$123456789[False.._usn3] As `1esn` Order By [@usn6 In @usn5 In $`6esn` Where $999[$1000]|$7[.12]] In {`1esn`:$@usn6 Contains 07 Contains 0.e0} In (`2esn` {usn1:@usn6[$`7esn`],_usn3:$@usn6[..12e12]})-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]->(usn1 {#usn7:Count ( * )[@usn6..0x0]})-[@usn6?:#usn8 *..7{@usn5:@usn5 Starts With 12e12 Starts With @usn5}]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3}) Ascending,00[.e1..] Desc Skip 9e1[.12..] Create (`7esn` {_usn3:usn1 Contains $``})<-[usn1]->(:#usn7{`7esn`:\"d_str\",usn2:True[`4esn`][$`6esn`]})-[:`1esn` *010{`2esn`:$_usn3[9e1][$_usn4],`7esn`:`7esn`[...e1][..\"d_str\"]}]->({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12}),`8esn`=((({`1esn`:12[..9e0][..999],usn1:0x0 =~$`7esn` =~@usn6})-[#usn8:`3esn`|:`4esn` *0..010]-(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]})<-[_usn3]->(_usn4 :`3esn`:`1esn`{`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]}))) Merge ((`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`5esn`?:usn1|`3esn` *1000..]-({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})) On Match Set `7esn`+=.e1[..$`4esn`][.._usn4],`4esn`+=@usn6[$`8esn`][12.e12],@usn5+=1000 Contains $#usn7 Contains `6esn`"),
    octest:ct_string("Return Distinct $`4esn`[$`2esn`..] As #usn8,#usn8 In $0,Any(`6esn` In 0X7 =~`` Where 0X7[0e0..]) Contains Single(`4esn` In `6esn`['s_str'..][010..] Where @usn6[`3esn`..][$7..]) As #usn7 Limit Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`6esn`[$@usn6..]) In {`7esn`:12e12 Ends With 010 Ends With .0} In None(#usn8 In $`5esn` Is Null Is Null Where 123456789 In $usn2 In `6esn`)"),
    octest:ct_string("Return Distinct *,[`4esn` In `6esn`['s_str'..][010..] Where $@usn5 In 12e12 In Count(*)|$1000[01234567]][Any(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7)..{usn1:usn1 Is Null Is Null,usn2:12.0[``]}][(_usn3 {`5esn`:0.12 Contains .e1})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`})..00] As `7esn` Order By 00 Is Null Is Null Descending,$usn2 Starts With $`6esn` Starts With 0xabc Ascending,123456789 Starts With #usn7 Starts With `6esn` Asc Skip Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`|999[$`6esn`]) =~Single(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn`) Limit 0x0 Contains _usn4 Contains 123456789 Unwind Filter(_usn4 In usn1 Contains False Contains `` Where 0.12 Contains $`2esn` Contains $_usn4)[..`3esn`(Distinct $`1esn` =~$`1esn` =~#usn7,$@usn5 Contains 01)][..{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}] As #usn7 Remove ({`2esn`:$`5esn` Is Null,@usn6:#usn7 Starts With `1esn`})<-[ *..0x0{`8esn`:010[@usn5..],#usn8:False Is Not Null Is Not Null}]-(`5esn` {`8esn`:0.0[12...12]}).``!,Single(usn2 In 1000 Contains 0.e0 Where 0e0 Is Not Null Is Not Null).``!,usn1:`8esn` Union Detach Delete (`3esn` :usn2:@usn6{`4esn`:`7esn` Contains .0 Contains 9e12})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:@usn5{#usn7:1e1[@usn5..]})-[`5esn`? *00..{usn1:07[`6esn`..][`5esn`..],`2esn`:#usn7 Contains .0 Contains .e1}]->(`5esn` :usn2:@usn6)[Filter(@usn6 In @usn5 In $`6esn` Where $999[$1000])..][#usn7($`8esn`[``..][123.654..],12.e12 Contains `5esn`)..],{`8esn`:@usn5[..True][..0X7],`1esn`:`1esn` Contains Count ( * )}[{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}][Any(usn1 In $123456789 Contains usn2 Where 0.e0 Ends With 12 Ends With $7)] Unwind 999 Contains `7esn` As @usn5 Return Distinct Single(#usn7 In 01234567[$`3esn`..]) Is Null As `3esn`,$`1esn`[9e1.._usn4][$999..$`2esn`],Single(`4esn` In 's_str'[12..'s_str'] Where .12[9e0][$7])[None(`4esn` In 's_str'[12..'s_str'] Where $`3esn`[@usn5..$123456789])..@usn6(Distinct True =~@usn5 =~$`1esn`,.12 Starts With $usn2)] As `4esn` Skip Count(*)['s_str'..`1esn`] Limit Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`])[..[True =~@usn5 =~$`1esn`]][..Any(#usn8 In $`5esn` Is Null Is Null Where $123456789 Ends With $`6esn`)] Union All Delete Extract(@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7|Null Starts With $`7esn` Starts With `2esn`) =~{`5esn`:Count(*)[..`3esn`],usn1:01234567 Ends With 0x0},0x0 Starts With $`7esn` Starts With `2esn` Detach Delete 12e12[$`5esn`][07],0.e0[9e0][0e0];"),
    octest:ct_string("Create (`7esn` {usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3})<-[{@usn5:$123456789 Ends With .e1,#usn8:0x0 =~_usn4}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})-[#usn8?]->(:`4esn`:#usn8{_usn4:'s_str' In \"d_str\" In 123456789,`2esn`:0.12 Ends With $usn1 Ends With $@usn5}) Union Return [@usn5 In $#usn8 Is Null Is Null Where $`2esn` Starts With .e0 Starts With 12.0|$`7esn` Is Null Is Null][``(Distinct 0X7 In $@usn5 In 9e0,12.0[0Xa][00])][`6esn`(Distinct 12.e12 In $0 In Count(*),$`2esn`[$`2esn`..])] As `3esn`,`` =~12 =~$#usn7,False Is Not Null Is Not Null As `2esn` Skip 999[$usn2..] Limit 00 In 0.12 In `5esn`"),
    octest:ct_string("Optional Match ((:_usn3{@usn6:$`7esn` Is Null Is Null})-[``:``|:_usn4 *0X0123456789ABCDEF..{_usn3:$_usn3[..Count ( * )][..@usn5]}]-(#usn8 :@usn6:`7esn`)<-[?:_usn3|:`4esn` *010{`8esn`:$``[_usn4..][`7esn`..]}]-(`2esn` )),(({_usn3:$0 Ends With $#usn7 Ends With .12})-[:``|:_usn4 *01234567..12{`2esn`:$`` Is Null Is Null,``:$`4esn`[usn1..$#usn8][12.0..`3esn`]}]->(#usn7 {@usn5:`5esn`[.e1][0Xa],@usn6:Count(*)[`7esn`..$12]})-[?:``|:_usn4 *..0X7]->({`2esn`:@usn5 In 0X0123456789ABCDEF,`1esn`:@usn6[`5esn`..$`3esn`]})) Where $`7esn` Ends With 07 Ends With 07 Return *,$`4esn`[12.0..`5esn`] Order By 0.e0 Ends With 12 Ends With $7 Descending,$`6esn` Is Not Null Is Not Null Desc Skip 0.0[1000..][.e1..] Limit `2esn` Is Not Null Is Not Null Merge `1esn`=((`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]})) On Match Set usn2+=$`4esn`[9e1..][0..],[usn1 In 00 Starts With _usn3 Where $`` Ends With 12e12].`3esn`? =0.12 Starts With {`1esn`:@usn6[..0xabc][..$#usn7]} Starts With {`3esn`:`8esn`[1000..$7][$`7esn`..`2esn`],_usn4:\"d_str\" Is Null Is Null},(usn1 :#usn7)-[?:usn2|#usn8{`2esn`:@usn5 In 0X0123456789ABCDEF,`1esn`:@usn6[`5esn`..$`3esn`]}]->(`4esn` {`7esn`:.e0[..999][..0X7]}).usn2 =$`3esn`[`2esn`...e0] Union Detach Delete @usn6[..0xabc][..$#usn7],None(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 12e12[.12..]) Ends With None(_usn4 In usn1 Contains False Contains `` Where 12 Ends With 01234567) Ends With @usn6($123456789[0.0..]) Union Remove Extract(`4esn` In `6esn`['s_str'..][010..] Where 12.0 Contains 0.e0)._usn4?,{`8esn`:010[@usn5..],#usn8:False Is Not Null Is Not Null}.`1esn`!,`5esn`:`8esn`"),
    octest:ct_string("Create ((:`1esn`{`6esn`:$0[..`8esn`],`1esn`:True Starts With $`8esn` Starts With \"d_str\"})-[#usn8? *12..0xabc]-(#usn8 :`4esn`:#usn8{#usn7:$`8esn` Starts With 1000})),({`5esn`:123456789 Starts With `2esn` Starts With .0})-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]-(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa})<-[`` *12..0xabc]->(`3esn` :_usn4:usn1) Create #usn7=((@usn6 {#usn7:False[`2esn`..#usn8]})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]-(`7esn` {_usn3:usn1 Contains $``})-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]-(_usn3 )),_usn4=((`2esn` :``)<-[`1esn`?:`1esn` *01234567..12]->(`8esn` {`6esn`:00 In 12.e12})) Union Merge (#usn7 {@usn5:`5esn`[.e1][0Xa],@usn6:Count(*)[`7esn`..$12]}) On Create Set `2esn` ={`4esn`:0X7 =~.0 =~\"d_str\",_usn4:00 Ends With $_usn4 Ends With $`2esn`} Ends With Extract(#usn7 In 01234567[$`3esn`..] Where .12 In $999 In `5esn`) Ends With [$`3esn`[@usn5..$123456789],00,'s_str'[.12..$#usn7][$999..`2esn`]],#usn8 =`3esn`[$123456789][$#usn7];"),
    octest:ct_string("Delete (`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})<-[{_usn3:12.e12 In $0 In Count(*)}]->({`6esn`:$_usn4[$`8esn`..][07..]}) Ends With Any(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn7 In .e1 In 01) Ends With usn2(Distinct _usn3 Contains @usn6 Contains 1.e1),`` Contains 12 Contains True,07[12][$`6esn`] Union All With Distinct $@usn6 Contains 0 Contains $`2esn`,(@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})<-[_usn4?:`6esn`]-(`2esn` {`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null}) Is Not Null Is Not Null As #usn7,True[Count(*)..][1e1..] Unwind All(#usn8 In $`5esn` Is Null Is Null Where #usn8[$#usn8..])[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..(#usn8 {`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]})<-[?:@usn5|`8esn`]-(usn2 :@usn5{`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})<-[?:#usn8{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]->(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})] As `` Unwind [0 Is Null Is Null][..[_usn3 =~00,9e1 Is Null Is Null]] As usn2"),
    octest:ct_string("Unwind $@usn5[Count ( * )] As #usn7 Detach Delete 999 In 12 In \"d_str\",$`5esn` Contains Count(*) Contains #usn7"),
    octest:ct_string("Merge usn2=((`3esn` :`4esn`:#usn8)<-[?:@usn6]-(`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})-[usn2?:`2esn`|usn2*..{@usn5:$1000[01234567],@usn5:0x0[$`3esn`..010][$#usn7..00]}]->(`4esn` {#usn8:`1esn`[0e0..],#usn7:$`6esn`[..0X0123456789ABCDEF]})) On Match Set #usn7 =Any(usn1 In 00 Starts With _usn3 Where `2esn` Is Not Null Is Not Null) Starts With All(`4esn` In $`8esn` Starts With 1000 Where 1.e1[0X0123456789ABCDEF..][$`5esn`..]) Starts With {`4esn`:$usn2 Contains 12.e12 Contains 00,`5esn`:7[$`4esn`..123456789]} On Create Set `1esn` =Null[0.e0..0x0] Optional Match ({`8esn`:$@usn5 Contains 01,`2esn`:123.654 Contains #usn8})-[{`5esn`:.e1[..$``][..0X0123456789ABCDEF]}]->(_usn3 {`5esn`:0.12 Contains .e1})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]}),(usn2 :`2esn`:`3esn`)-[`7esn`?]-(usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1}) Where 0Xa Is Null Is Null Delete 1000 Contains 123456789 Contains 1e1,(`6esn` :`3esn`:`1esn`{_usn3:1e1[.e1..],`1esn`:$#usn8})-[`4esn`:`2esn`|usn2{@usn6:0.12[0.e0..][`4esn`..]}]-(`5esn` :#usn7)-[ *..0X7]->(`5esn` :_usn4:usn1) Starts With None(@usn5 In .12[#usn7][$`8esn`] Where $@usn5 =~$`` =~$usn2) Starts With [.0 =~$#usn8 =~.0,0e0 Is Not Null Is Not Null,_usn3[.0]],0e0"),
    octest:ct_string("Merge ((`5esn` {`5esn`:$`5esn`[False]})<-[?:usn2|#usn8 *00..]-(`6esn` :`5esn`{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]})) Delete $usn2 Starts With $`6esn` Starts With 0xabc"),
    octest:ct_string("Return Distinct $_usn3[9e1][$_usn4],None(usn2 In 1000 Contains 0.e0 Where $`6esn`[Count(*)..0.e0][0.0..Count ( * )])[(:usn2:@usn6{@usn6:$`4esn`[$`2esn`..]})<-[#usn8? *12..0xabc]-(:`6esn`:`7esn`{`3esn`:`8esn`[$``]})][Any(@usn6 In @usn5 In $`6esn` Where 12.0[0Xa][00])] As `5esn`,0X0123456789ABCDEF Contains 12.e12 Contains 999 Limit $@usn6 In $`5esn` In $usn2 With  \"d_str\" =~`6esn` =~0Xa,.e1[usn1..] As `6esn` Union All Create `6esn`=((`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})<-[?:`6esn` *01234567..12{`7esn`:7 In 0xabc}]-(#usn7 :usn2:@usn6{`1esn`:$usn2 Contains 12.e12 Contains 00})) With Distinct *,`7esn` In 999 In @usn6,00 Is Null Is Null Order By None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 00 Ends With .12 Ends With `4esn`)[`3esn`(Distinct $`1esn` =~$`1esn` =~#usn7,$@usn5 Contains 01)..] Desc,$`3esn` In $12 In 's_str' Asc Skip $123456789 Is Null Is Null Limit .e0 =~`5esn` Unwind $usn2[False..`7esn`][`7esn`.._usn3] As _usn4;"),
    octest:ct_string("Return .0 Starts With `2esn` Starts With `6esn` As _usn4,_usn4[$`4esn`..] As `7esn`,\"d_str\"[Count ( * )] As `7esn` Limit 0.e0[123.654] Union Merge ``=((({`8esn`:$@usn5 Contains 01,`2esn`:123.654 Contains #usn8})-[usn2?]-(`3esn` {_usn4:12.e12 Ends With 01 Ends With .e1})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`}))) On Match Set `7esn`+=0.e0[`6esn`...e0][9e12...e12],`5esn` =0x0 Contains _usn4 Contains 123456789,`8esn` =0xabc Starts With _usn3 On Match Set #usn7:``,({#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1})<-[?:@usn5|`8esn` *..0X7]-(:usn1).`4esn` =`6esn` Starts With $`5esn`,[`6esn` In 0X7 =~`` Where 0.12[Null..]]._usn4 =Count ( * )[`3esn`..][`2esn`..] Remove [_usn3 Ends With 0x0 Ends With 01234567,9e0[$_usn3..0X7][7..$#usn8]].`6esn` With Distinct *,`3esn` =~`3esn` =~$`6esn` As `7esn`,Any(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 123456789[$#usn7..]) Contains [#usn8 In $`5esn` Is Null Is Null Where 0e0 =~_usn4|$@usn6 =~usn1] Skip .12[..`6esn`][..\"d_str\"] Limit [@usn5 In 0X7 =~.0 =~\"d_str\" Where #usn7 Starts With 0 Starts With 12][Filter(#usn8 In $`5esn` Is Null Is Null Where $12 Contains 123.654 Contains `8esn`)][[_usn4 In usn1 Contains False Contains `` Where True[..'s_str'][..01]|9e1[0.e0..][#usn8..]]] Where @usn6[$`7esn`] Union All Return Distinct *,01234567 Starts With $_usn4 As `1esn`,Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 00 Ends With .12 Ends With `4esn`) Contains {`7esn`:0e0 Is Null Is Null,usn2:`4esn` =~123456789} Order By [@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7|`6esn`[1.e1..$#usn7][.e0..True]][..Extract(#usn8 In $`5esn` Is Null Is Null Where #usn8[$#usn8..]|$@usn6[..$usn1])][..(:`4esn`:#usn8{#usn8:07})-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]-(@usn5 :`3esn`:`1esn`{`3esn`:$`5esn` Is Not Null,`2esn`:9e1[0.e0..][#usn8..]})-[``:`2esn`|usn2{_usn4:0X0123456789ABCDEF Ends With 0X0123456789ABCDEF Ends With 's_str',`3esn`:'s_str' In \"d_str\" In 123456789}]-(:``{`2esn`:9e0[``][123.654],`1esn`:$_usn3[Null]})] Ascending,0.0[Extract(`4esn` In 's_str'[12..'s_str'] Where `` Contains 12 Contains True|$`1esn` Is Null)..Extract(#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str'|_usn3 Ends With 12e12 Ends With .e0)][None(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where `8esn` In $@usn5)..{@usn6:.12 Starts With 0Xa}] Asc Limit 0x0 Is Not Null Is Not Null Create (`` :@usn6:`7esn`{`2esn`:0.12[0.e0..][`4esn`..]})-[@usn6?:#usn8 *..7{@usn5:@usn5 Starts With 12e12 Starts With @usn5}]->(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})-[usn1?:`2esn`|usn2 *123456789..999]-(usn1 :`7esn`{`1esn`:$@usn6 Contains 07 Contains 0.e0}) Return Distinct *,[`4esn` In `6esn`['s_str'..][010..] Where $@usn5 In 12e12 In Count(*)|$1000[01234567]][Any(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7)..{usn1:usn1 Is Null Is Null,usn2:12.0[``]}][(_usn3 {`5esn`:0.12 Contains .e1})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`})..00] As `7esn` Order By 00 Is Null Is Null Descending,$usn2 Starts With $`6esn` Starts With 0xabc Ascending,123456789 Starts With #usn7 Starts With `6esn` Asc Skip Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`|999[$`6esn`]) =~Single(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn`) Limit 0x0 Contains _usn4 Contains 123456789;"),
    octest:ct_string("Merge (((`` :@usn6:`7esn`{`2esn`:0.12[0.e0..][`4esn`..]})<-[`3esn`?:_usn3|:`4esn`]-(_usn3 :`1esn`)<-[_usn3{_usn3:12.e12 In $0 In Count(*)}]-(`7esn` :@usn5))) Merge ((`6esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})) Remove Single(`4esn` In $`8esn` Starts With 1000 Where `6esn`['s_str'..][010..]).@usn5,(usn2 :`3esn`:`1esn`)-[ *..7]-(usn1 :`4esn`:#usn8)-[?:`3esn`|:`4esn`]-(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]}).`3esn`,(:`1esn`{_usn4:$_usn3[Null]})-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]-(`2esn` :#usn7)-[:usn2|#usn8 *01234567..12]-(_usn4 {_usn3:$`1esn` Is Null,usn1:$`4esn`[$`2esn`..]})._usn3 Union Unwind Count ( * )[(`7esn` {usn1:$1000 Contains $`3esn`})-[`5esn`?:_usn4|:@usn5]-(`3esn` {`8esn`:$``[_usn4..][`7esn`..]})-[@usn5:`4esn`|:`7esn` *0X0123456789ABCDEF..{`7esn`:.e0[..999][..0X7]}]-(usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1})..Single(usn1 In 0x0[..`4esn`] Where $999[12.0..])][(:`6esn`:`7esn`{@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]})-[?{`2esn`:$`6esn`[$@usn6..]}]-(`4esn` :`6esn`:`7esn`)<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})..Single(`6esn` In 0X7 =~`` Where $usn1[0.12..]['s_str'..])] As `2esn` Merge `4esn`=(:`5esn`{`7esn`:$`7esn` Ends With 07 Ends With 07,`5esn`:@usn5 Ends With $`3esn` Ends With 12e12})<-[`1esn`?:`1esn` *01234567..12]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})<-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(_usn4 );"),
    octest:ct_string("Return Distinct *,1.e1 Contains @usn6 As usn2 Order By (#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :usn2:@usn6)-[`1esn`:`8esn`|:usn1 *0xabc{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]-(@usn5 :#usn8{`1esn`:0xabc Ends With $7 Ends With $`2esn`,_usn4:``})[.._usn4(@usn6[`5esn`..$`3esn`],`8esn`[$``])] Ascending,Single(#usn8 In $`5esn` Is Null Is Null Where $123456789 Ends With $`6esn`) =~Extract(@usn5 In $#usn8 Is Null Is Null Where 0.e0 Ends With 12 Ends With $7) =~Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where $`4esn`[9e1..][0..]) Asc,0.0[999..] Asc"),
    octest:ct_string("Optional Match ((:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})),`1esn`=((@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})<-[#usn7 *123456789..999]-(:@usn6:`7esn`{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})) Where 0 Ends With $7 Ends With _usn3 Unwind `6esn`[..`5esn`] As #usn8"),
    octest:ct_string("Optional Match `5esn`=((#usn8 :`1esn`{#usn7:1e1[`6esn`..]})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->({usn1:`2esn`[$`1esn`..][$_usn3..]})),`5esn`=(((`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[ *..7]-(:_usn3{@usn6:$`7esn` Is Null Is Null})-[:`7esn`|`2esn` *12..0xabc]->(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}))) Where `7esn` In 999 In @usn6 Union Unwind usn2(Distinct 0xabc Contains Null Contains 9e12,12[..True][..$`4esn`]) Is Null As `3esn`"),
    octest:ct_string("Optional Match (((`2esn` :``)-[?:`3esn`|:`4esn`]-(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})<-[`2esn`?]-(:usn2:@usn6{_usn4:$_usn4[$`8esn`..][07..],#usn7:12.e12[...0][..0x0]}))),usn2=((#usn8 :`4esn`:#usn8)-[`6esn`? *01234567..12{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]-(@usn5 {usn2:$999[12.0..]})-[`5esn`? *00..{usn1:07[`6esn`..][`5esn`..],`2esn`:#usn7 Contains .0 Contains .e1}]->(`5esn` :usn2:@usn6)) Where 01234567[$`3esn`..] Union With  *,$@usn6 =~usn1 As `1esn` Limit .0[$`6esn`..False] Where 0.12[0.e0..][`4esn`..] Union Merge usn1=((:#usn8{#usn7:12e12 Ends With 010 Ends With .0})-[#usn8? *0xabc]-(#usn8 :`4esn`:#usn8)) On Match Set #usn7($123456789 Contains 01 Contains 0.12).usn2! =.e12 =~0.0 =~9e0,All(#usn7 In 01234567[$`3esn`..] Where $@usn6 =~usn1).`4esn` =$999[12.0..],`8esn`+=Filter(_usn4 In usn1 Contains False Contains `` Where 9e0 =~$`5esn`) =~``($`4esn`[usn1..$#usn8][12.0..`3esn`]) =~Single(usn2 In 1000 Contains 0.e0)"),
    octest:ct_string("Create (`2esn` :``)<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(_usn3 :_usn4:usn1),`8esn`=(`4esn` {@usn5:1e1 In $#usn8 In 12e12})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->(`7esn` {`8esn`:$123456789 Contains 01 Contains 0.12})<-[?:usn2|#usn8 *00..]-(`3esn` :`4esn`:#usn8) Remove (_usn3 :_usn4:usn1)-[`3esn`?:`3esn`|:`4esn` *..01{_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`}]->(usn2 :#usn7)<-[@usn5?:`1esn`]-(#usn7 :`2esn`:`3esn`).usn2,[`6esn` In 0X7 =~`` Where $`6esn`[..0X0123456789ABCDEF]|12 Is Null Is Null].#usn8? Detach Delete 0X0123456789ABCDEF Contains 12.e12 Contains 999,0X0123456789ABCDEF In $1000 In $`3esn`,'s_str' Is Not Null Is Not Null"),
    octest:ct_string("Remove `3esn`:_usn3,{`7esn`:Count(*) In 01 In .0,`6esn`:$123456789[..0.12][..#usn7]}._usn3? Union Merge ((usn2 {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})-[`1esn`{_usn4:`3esn` Contains 0Xa}]-(:usn2:@usn6{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8})) On Create Set usn1+=$@usn6 In $`5esn` In $usn2 On Match Set @usn6+=(usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1})-[#usn8? *0xabc{`5esn`:0X7[12]}]->(usn1 {`2esn`:True =~@usn5 =~$`1esn`,`2esn`:`6esn`[1.e1..$#usn7][.e0..True]})[Any(_usn4 In usn1 Contains False Contains `` Where 0.12 In 01 In $`3esn`)..Single(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $123456789[..0x0][..`4esn`])][All(`6esn` In 0X7 =~`` Where $`3esn` =~Null)..{`8esn`:0xabc Ends With $#usn7 Ends With #usn8,usn2:usn1[$`3esn`..$999][True..False]}]"),
    octest:ct_string("Unwind 12e12[0.e0][9e1] As usn2 Return Distinct *,12 Is Null Is Null As #usn7,$`7esn` Ends With $0 Ends With .e12 As `` Order By $0[01234567..00][$`2esn`..$@usn6] Desc,12.e12['s_str'] Desc,123456789 Starts With #usn7 Starts With `6esn` Asc Limit 999 In 9e1 In 7 Union All Unwind `6esn` Is Not Null As `4esn` Remove [usn1 In 0x0[..`4esn`]|`` Starts With @usn5].`6esn`?,(:#usn7{`6esn`:.e12 =~0.0 =~9e0,@usn6:$usn2 =~$_usn4 =~`5esn`})<-[ *1000..]->(#usn7 {`2esn`:$``[_usn4..][`7esn`..],`3esn`:#usn7 Ends With 9e1})._usn4? Return `8esn`[_usn3..$#usn7],({`1esn`:@usn6})<-[_usn4?:_usn4|:@usn5 *123456789..999{`2esn`:@usn5 In $`6esn`}]->(:`3esn`:`1esn`{`1esn`:0.0[1000..][.e1..]}) Is Null Is Null As `3esn` Skip `7esn` Starts With $usn2 Starts With .e0 Limit 00 Is Not Null Is Not Null"),
    octest:ct_string("Remove #usn8:_usn3,None(usn1 In 0x0[..`4esn`] Where False[.e1..Null]).``,@usn5:#usn7 Remove Extract(usn1 In 0x0[..`4esn`] Where $`2esn` Contains usn1 Contains `2esn`).`6esn`?,Extract(@usn6 In @usn5 In $`6esn` Where $`1esn` Is Null Is Null|@usn5 Starts With 12e12 Starts With @usn5).`2esn`?,[Count ( * )[Count ( * )..12e12][usn1..1000],12e12[$`5esn`][07],$_usn3[9e1][$_usn4]]._usn4 Union All Merge `1esn`=((`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`5esn`?:usn1|`3esn` *1000..]-({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})) On Match Set #usn7:``,({#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1})<-[?:@usn5|`8esn` *..0X7]-(:usn1).`4esn` =`6esn` Starts With $`5esn`,[`6esn` In 0X7 =~`` Where 0.12[Null..]]._usn4 =Count ( * )[`3esn`..][`2esn`..] On Match Set `6esn`+=0X7 =~``,{usn1:$usn2 Is Not Null,`4esn`:0xabc[$@usn5]}.`8esn` =`3esn`[..7][..12e12] Create #usn7=(`3esn` :`8esn`{usn1:`2esn`[$`3esn`..],`6esn`:$12[..``][..$7]})-[@usn5?:``|:_usn4]-(`8esn` :#usn8)<-[?:``|:_usn4]-({`5esn`:00 Ends With $_usn4 Ends With $`2esn`,usn2:#usn7 Starts With 0 Starts With 12}) Unwind 123456789 Starts With #usn7 Starts With `6esn` As `7esn` Union Optional Match `8esn`=(`8esn` {`6esn`:00 In 12.e12})<-[`5esn`:@usn6]-(:``{_usn3:0X0123456789ABCDEF In 01234567})<-[`7esn`?:@usn5|`8esn`{@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]}]->(`6esn` {@usn6:9e0 Contains `8esn`}) With  (#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :usn2:@usn6)-[`1esn`:`8esn`|:usn1 *0xabc{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]-(@usn5 :#usn8{`1esn`:0xabc Ends With $7 Ends With $`2esn`,_usn4:``})[.._usn4(@usn6[`5esn`..$`3esn`],`8esn`[$``])] Order By [$12[01..][1.e1..]][[usn1 In 00 Starts With _usn3 Where 00]..@usn6(Distinct 0X0123456789ABCDEF[.e0..$`4esn`],$0 Ends With $#usn7 Ends With .12)] Desc,[@usn5 In $#usn8 Is Null Is Null Where 12.e12[@usn5..123.654]|#usn7 Starts With `1esn`][[@usn5 In .12[#usn7][$`8esn`] Where 0.12 In $`4esn` In `6esn`|$`1esn` Starts With @usn6]..][$`1esn`..] Ascending,{#usn8:$`5esn` In False,usn2:$`7esn` In $7} Is Not Null Is Not Null Asc Skip Null[0.e0..0x0];"),
    octest:ct_string("Detach Delete 010 Starts With `7esn` Starts With 9e1 With  `` Contains 12 Contains True Order By #usn7 Starts With 0 Starts With 12 Asc Skip True =~@usn5 =~$`1esn` Union All With Distinct $@usn5[0.12..][@usn5..],010 Contains 0X0123456789ABCDEF Order By $12[01..][1.e1..] Descending Skip .12[.e12..0.e0][0.e0..$`2esn`]"),
    octest:ct_string("Merge (({`8esn`:$@usn5 Contains 01,`2esn`:123.654 Contains #usn8})) With Distinct *,#usn8 Is Not Null As _usn4 Skip {@usn5:$@usn6[..$usn1],`1esn`:usn2[`3esn`][_usn3]}[..Any(`4esn` In 's_str'[12..'s_str'] Where Null Contains _usn4)][..{`7esn`:True[..'s_str'][..01]}]"),
    octest:ct_string("Merge usn1=((`3esn` :``)<-[`4esn`]->(`7esn` :#usn8)<-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(_usn4 )) Remove ({#usn8:12.0[..$7][..999],@usn5:$`1esn` Is Null})-[_usn4:_usn3|:`4esn` *1000..{#usn8:$999 Ends With $`3esn` Ends With `8esn`}]->(#usn7 :`7esn`{`4esn`:.12 Starts With .12 Starts With `3esn`})<-[_usn3:usn2|#usn8]-({`3esn`:`3esn` =~0.0 =~$``,`3esn`:@usn6 Contains .e1 Contains $`4esn`}).usn2?,Extract(`6esn` In 0X7 =~`` Where 0X7[..12e12]|00).@usn6! Delete $`5esn` Is Null Is Null,True[`4esn`][$`6esn`] Union All Unwind usn2[..$`3esn`] As `6esn` Union All Return Distinct 07[07] Skip $`4esn` Contains 0Xa Limit 00[.e0..9e1] Merge (:`4esn`:#usn8{@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]})"),
    octest:ct_string("Merge `6esn`=((`3esn` {`8esn`:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`1esn`?:`1esn` *01234567..12]->(`8esn` {`6esn`:00 In 12.e12})-[`6esn`? *01234567..12{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]-(@usn5 {usn2:$999[12.0..]})) On Create Set [`6esn` In 0X7 =~``|$#usn7[...e12][..$7]].`1esn` =9e12 =~01 =~$`7esn` On Match Set Single(`6esn` In 0X7 =~`` Where 9e1[0.e0..][#usn8..])._usn3! =0X7 =~`4esn` =~`8esn`,`4esn` =0.12 =~9e0"),
    octest:ct_string("Remove [.0 Is Null Is Null,Null Starts With _usn4 Starts With `6esn`].#usn7?,[#usn7 In 01234567[$`3esn`..] Where $999[12.0..]].@usn5!,[12e12[.12..],`2esn`[$`1esn`..][$_usn3..]].usn2? Detach Delete All(_usn4 In usn1 Contains False Contains `` Where #usn8[$#usn8..])[(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})..],`1esn` Contains Count ( * ) Match usn1=((:#usn8{#usn7:12e12 Ends With 010 Ends With .0})-[#usn8? *0xabc]-(#usn8 :`4esn`:#usn8)),#usn7=(((`4esn` )<-[_usn3?:`3esn`|:`4esn` *0..010]->(_usn3 )<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})))"),
    octest:ct_string("Return Distinct *,$@usn6[..$usn1] As @usn6 Order By `3esn` =~0.0 =~$`` Ascending Skip (:`1esn`{`6esn`:$0[..`8esn`],`1esn`:True Starts With $`8esn` Starts With \"d_str\"})<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[usn1?:`2esn`|usn2 *123456789..999]-(`3esn` :usn2:@usn6) Contains [usn2 In 1000 Contains 0.e0 Where #usn7 Ends With 9e1|010 Is Null Is Null] Contains Filter(@usn6 In @usn5 In $`6esn` Where 12[`7esn`...0][0.12..``]) Limit 0.e0[@usn6][0x0] Union Create `1esn`=((_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8})-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})),((#usn8 {`2esn`:$`5esn` Contains Count(*) Contains #usn7,_usn4:Null Starts With $`7esn` Starts With `2esn`})<-[`6esn`:`4esn`|:`7esn` *..0x0]->(#usn8 :@usn5)-[`6esn`:``|:_usn4 *..01]->(`5esn` :#usn7)) Create (#usn7 :@usn5)<-[@usn5*]->({``:$1000 Is Null Is Null})-[?:@usn6 *..7{#usn8:'s_str'[.12..$#usn7][$999..`2esn`]}]->(`7esn` :`2esn`:`3esn`) Return *,$@usn6[..12e12],`8esn` Ends With 0X0123456789ABCDEF Ends With `1esn` As usn2 Skip 1000[..$`6esn`][..0xabc] Limit $`8esn`[..$``] Union Optional Match `4esn`=(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})-[?:#usn7|:_usn4]->(`` :#usn7$0)-[`2esn` *0X0123456789ABCDEF..{usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3}]->(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]}),(((`` :@usn6:`7esn`{`2esn`:0.12[0.e0..][`4esn`..]})<-[`3esn`?:_usn3|:`4esn`]-(_usn3 :`1esn`)<-[_usn3{_usn3:12.e12 In $0 In Count(*)}]-(`7esn` :@usn5))) Where $_usn3[..Count ( * )][..@usn5] Match `3esn`=(((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})-[:`7esn`|`2esn` *..0X7{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]-(`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})-[`4esn`? *00..]-(:`4esn`:#usn8{@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]}))) Where `7esn`[Null..][@usn5..]"),
    octest:ct_string("Match `8esn`=((usn2 {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})-[`1esn`{_usn4:`3esn` Contains 0Xa}]-(:usn2:@usn6{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8})) With Distinct [@usn5 In .12[#usn7][$`8esn`] Where $@usn5 =~$`` =~$usn2] Is Null,00[7..$123456789] Order By $`1esn`[`2esn`..0.12][$usn1..Count ( * )] Desc,#usn8 Contains .e0 Contains $`8esn` Ascending,@usn5 In $`6esn` Descending Skip [$_usn3[$`4esn`..Null],0x0 Contains $`8esn` Contains `6esn`,\"d_str\" =~`6esn` =~0Xa] Contains [@usn6 Starts With `7esn` Starts With Null] Contains `6esn`(Distinct $`4esn`[usn1..$#usn8][12.0..`3esn`],12.e12['s_str']) Return Distinct #usn7 Starts With 0x0 Starts With Null,{`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]}[Extract(_usn4 In usn1 Contains False Contains `` Where `5esn`[.e1][0Xa])..],[123456789 =~$123456789,0.12 In $7 In 0] Is Null Is Null As @usn5 Limit All(@usn5 In .12[#usn7][$`8esn`] Where $`5esn` Contains $@usn6) Is Null Is Null Union Delete `6esn`(Distinct 12.0[0Xa][00]) In {`7esn`:12e12 Ends With 010 Ends With .0} In Extract(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6|#usn7 Is Not Null Is Not Null),$@usn6[..$#usn7][..12.e12],.e0[`4esn`..`4esn`][0.0..$0] Delete 12.e12 In $1000,{_usn3:0.12 Is Null Is Null,`1esn`:9e12[0.0..12.e12]} Ends With {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]},$999 Ends With $`3esn` Ends With `8esn`"),
    octest:ct_string("Create ((`1esn` :usn2:@usn6)),`3esn`=(usn1 :`6esn`:`7esn`) Merge _usn3=(((:@usn5{#usn7:1e1[@usn5..]})-[:#usn8 *..0X7]->($12)-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]->(:_usn4:usn1{#usn7:$`5esn` Is Null Is Null,usn2:usn1[$`3esn`..$999][True..False]}))) Delete 7 =~9e0 =~'s_str' Union Merge (({`8esn`:$@usn5 Contains 01,`2esn`:123.654 Contains #usn8})) On Create Set `1esn` =0X0123456789ABCDEF[.e0..$`4esn`] On Create Set @usn5(Distinct 12e12[_usn3..][$@usn5..],7 Contains 9e1).`6esn` =$@usn5 In 12e12 In Count(*) Unwind `8esn`[$``] As `3esn` Union All Remove {_usn4:\"d_str\"}._usn3,`8esn`(Distinct 00 In 1e1).usn2! Return Distinct *,`5esn` =~0Xa,[$`8esn` In \"d_str\" In 9e12,9e0 Contains `8esn`,$@usn6 Contains 0 Contains $`2esn`][Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 01 In _usn3 In 12)][Extract(#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|`7esn` Starts With $usn2 Starts With .e0)] As _usn4 Skip $`4esn` Contains 0Xa Limit $_usn3 =~`7esn` =~$_usn4 Unwind 123456789 =~_usn4 =~$0 As usn1;"),
    octest:ct_string("Remove (:_usn4:usn1{``:123456789 Starts With `2esn` Starts With .0,`5esn`:``})-[:`7esn`|`2esn` *..0X7{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]-(`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})<-[usn2?:usn1|`3esn`{`7esn`:0xabc Ends With $#usn7 Ends With #usn8,@usn5:$#usn8}]->(`3esn` :#usn8).usn2 Union All Detach Delete 07[0..`4esn`] Unwind `8esn`[$``] As `3esn` With  Any(usn2 In 1000 Contains 0.e0 Where @usn6[`3esn`..][$7..])[All(#usn7 In 01234567[$`3esn`..] Where Count(*)[.e0.._usn4])..][None(usn2 In 1000 Contains 0.e0 Where True[Count(*)..][1e1..])..] As @usn6,0X0123456789ABCDEF Contains 12.e12 Contains 999 Order By 9e1[0.e0..][#usn8..] Asc,$0 =~`3esn` Asc Limit False Is Null Where 0Xa Is Null Is Null"),
    octest:ct_string("Return 07 Ends With 07 As #usn8,00[``..][$`4esn`..],$usn2 Is Not Null Is Not Null Limit {`4esn`:0X7 =~.0 =~\"d_str\",_usn4:00 Ends With $_usn4 Ends With $`2esn`} Ends With Extract(#usn7 In 01234567[$`3esn`..] Where .12 In $999 In `5esn`) Ends With [$`3esn`[@usn5..$123456789],00,'s_str'[.12..$#usn7][$999..`2esn`]] Detach Delete 07[0..`4esn`] Unwind [@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7|`6esn`[1.e1..$#usn7][.e0..True]][..Extract(#usn8 In $`5esn` Is Null Is Null Where #usn8[$#usn8..]|$@usn6[..$usn1])][..(:`4esn`:#usn8{#usn8:07})-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]-(@usn5 :`3esn`:`1esn`{`3esn`:$`5esn` Is Not Null,`2esn`:9e1[0.e0..][#usn8..]})-[``:`2esn`|usn2{_usn4:0X0123456789ABCDEF Ends With 0X0123456789ABCDEF Ends With 's_str',`3esn`:'s_str' In \"d_str\" In 123456789}]-(:``{`2esn`:9e0[``][123.654],`1esn`:$_usn3[Null]})] As `7esn` Union All Create ((@usn6 {#usn7:False[`2esn`..#usn8]})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]-(`7esn` {_usn3:usn1 Contains $``})-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]-(_usn3 )) Union Unwind _usn3[.0] As _usn3 Create `1esn`=(#usn7 {@usn5:`5esn`[.e1][0Xa],@usn6:Count(*)[`7esn`..$12]})-[? *999..]-(`` :`1esn`),((`5esn` :#usn7)<-[?:usn2|#usn8 *1000..]->(@usn6 :_usn4:usn1{@usn6:Null Is Null Is Null,#usn7:`5esn`[Count ( * )..][\"d_str\"..]}))"),
    octest:ct_string("Unwind .e12 Starts With True As `7esn` Unwind $_usn3 =~`7esn` =~$_usn4 As `5esn` With Distinct *,{`4esn`:$@usn6 Contains 0 Contains $`2esn`}[[@usn5 In 0X7 =~.0 =~\"d_str\"|$`1esn` Ends With _usn4 Ends With `3esn`]..Extract(@usn5 In .12[#usn7][$`8esn`] Where $usn2 Contains 12.e12 Contains 00|9e0 Ends With $`7esn`)] Order By 9e1 Starts With _usn3 Starts With `4esn` Descending,usn2(Distinct _usn3 Contains @usn6 Contains 1.e1)[Extract(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where _usn3 Is Null)..[12e12[0.e0][9e1]]][Single(`4esn` In $`8esn` Starts With 1000 Where $`8esn`[..$``])..Extract(`4esn` In 's_str'[12..'s_str'] Where `` Contains 12 Contains True|$`1esn` Is Null)] Descending Limit 0 Starts With 12e12 Starts With `4esn` Union All Delete 00 Starts With _usn3,(`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]})<-[`1esn`:`8esn`|:usn1 *0xabc{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]->(#usn8 :`2esn`:`3esn`{#usn7:Count(*) In 01 In .0,#usn7:12.0[..$7][..999]})<-[usn1?:`1esn`{#usn7:9e12 Is Not Null Is Not Null,usn2:`3esn` =~0.0 =~$``}]->(:`4esn`:#usn8{@usn6:0 Starts With 12e12 Starts With `4esn`})[Single(`4esn` In 's_str'[12..'s_str'])..#usn8($12 Contains 123.654 Contains `8esn`,0xabc Ends With $#usn7 Ends With #usn8)],count(Distinct 's_str' Starts With 1000 Starts With #usn8,12e12 Starts With $123456789 Starts With 12.0)[[_usn4 In usn1 Contains False Contains `` Where $#usn8]][[$`1esn` Is Null,\"d_str\" =~`6esn` =~0Xa,$usn2[0e0..]]];"),
    octest:ct_string("Merge `4esn`=(((:@usn6:`7esn`{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})<-[ *010$123456789]-(`2esn` {usn1:@usn6[$`7esn`],_usn3:$@usn6[..12e12]})<-[? *..0x0]->(`` :usn1))) On Create Set [@usn5 In $#usn8 Is Null Is Null Where 12.e12[@usn5..123.654]].`1esn`! =999[$usn2..],#usn7+=0X7 In 123456789 In $`5esn` On Create Set #usn7 =$123456789 Is Not Null Is Not Null,[12 =~usn1 =~.e12].usn2? =$_usn3[..$_usn3][.._usn4],`6esn`+=usn1[$`3esn`..$999][True..False];"),
    octest:ct_string("Detach Delete Extract(`6esn` In 0X7 =~``|9e0 In 01234567) Contains Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) Detach Delete 0x0[$`3esn`],07 In $7 In 12 Union All Remove Extract(usn1 In 0x0[..`4esn`] Where $`2esn`[123456789..][00..]).#usn7? Union With  @usn5 Starts With 12e12 Starts With @usn5,$1000 =~$`7esn`,\"d_str\" Starts With $usn1 As `7esn` Order By $0[..`8esn`] Desc,Count(*) Starts With 1e1 Starts With $123456789 Ascending,12e12[$`5esn`][07] Desc Limit Single(#usn8 In $`5esn` Is Null Is Null Where 's_str' Starts With 1000 Starts With #usn8)[{_usn3:$0 Ends With $#usn7 Ends With .12}][[12.0[0Xa][00],.0[01][$12]]] Unwind `2esn`(Distinct 7[..12e12][..$`6esn`]) In Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where `5esn`[.e1][0Xa]) As `4esn`"),
    octest:ct_string("Merge (`4esn` {`2esn`:@usn6[`5esn`..$`3esn`],`7esn`:$`1esn` Is Null})<-[`3esn`{#usn7:12e12 Ends With 010 Ends With .0}]-(`2esn` {`3esn`:$999[12.0..]})-[``?:@usn6{#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}]->(@usn5 :`3esn`:`1esn`{`3esn`:$`5esn` Is Not Null,`2esn`:9e1[0.e0..][#usn8..]}) On Match Set (`2esn` :`6esn`:`7esn`{`6esn`:$#usn8 Ends With 1000 Ends With .0,`7esn`:010 =~`6esn`})-[{@usn5:$123456789 Ends With .e1,#usn8:0x0 =~_usn4}]-(`3esn` {`8esn`:$usn2[12..$`7esn`][$0..$`7esn`]})<-[? *0..010]-(#usn8 :`4esn`:#usn8).usn1! =`7esn`($123456789 Ends With $`6esn`) Starts With {`7esn`:$12[01..][1.e1..],_usn3:$_usn3 =~`7esn` =~$_usn4},@usn6+=$usn2[12..$`7esn`][$0..$`7esn`],Any(_usn4 In usn1 Contains False Contains `` Where _usn4[$`4esn`..]).#usn7 ={@usn6:12.0[``],_usn4:$`3esn` Contains 0X0123456789ABCDEF Contains 00} Ends With Single(`6esn` In 0X7 =~`` Where 0X7[0e0..]) Ends With Extract(@usn5 In $#usn8 Is Null Is Null Where @usn5 Contains $`1esn` Contains 999|12.0[``]) Union All Match ((@usn5 {@usn6:$123456789[0X7..12.e12]})<-[? *0..010]-(#usn8 :`4esn`:#usn8)),`1esn`=(:`8esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}) Match `3esn`=((:#usn8{_usn4:\"d_str\"[Count ( * )],`2esn`:9e0 Ends With $`7esn`})) Union All Delete ({`2esn`:$usn2 Is Not Null})-[`4esn`:`4esn`|:`7esn`{`3esn`:Count(*)[`7esn`..$12],_usn3:$999[$1000]}]-(`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})[{_usn4:.12 =~.12 =~1e1,#usn7:.e1 Starts With 0.0 Starts With `6esn`}],1000[123.654..9e12][1000.._usn3]"),
    octest:ct_string("Merge `1esn`=(#usn7 {@usn5:`5esn`[.e1][0Xa],@usn6:Count(*)[`7esn`..$12]})-[? *999..]-(`` :`1esn`) On Create Set `4esn`+=01234567[.12..7][1000..1.e1],``(`` In `6esn`).@usn6 =`1esn` In 999 In $#usn7,`7esn` =9e12 On Match Set `2esn` =$usn2[False..`7esn`][`7esn`.._usn3],``+=_usn4 Ends With 01 Ends With $`1esn`,``+=01 Ends With .e0 Remove [usn1 In 00 Starts With _usn3].#usn8?,Extract(`4esn` In `6esn`['s_str'..][010..] Where $999 Ends With $`3esn` Ends With `8esn`|0x0 =~$`7esn` =~@usn6).@usn5?,[usn2 In 1000 Contains 0.e0 Where 0X7 =~`4esn` =~`8esn`|$`8esn`[$``..$7][$1000..$`7esn`]].`3esn`! Remove {`2esn`:usn2[`3esn`][_usn3]}.`5esn`?,Extract(`4esn` In `6esn`[1e1..] Where 12[`7esn`...0][0.12..``]|@usn6 Starts With `7esn` Starts With Null).@usn5,Extract(`4esn` In $`8esn` Starts With 1000 Where `5esn` In 12|010 Contains 0X0123456789ABCDEF).`2esn` Union Optional Match `5esn`=((#usn8 :`1esn`{#usn7:1e1[`6esn`..]})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->({usn1:`2esn`[$`1esn`..][$_usn3..]})),`5esn`=(((`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[ *..7]-(:_usn3{@usn6:$`7esn` Is Null Is Null})-[:`7esn`|`2esn` *12..0xabc]->(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}))) Where `7esn` In 999 In @usn6"),
    octest:ct_string("Merge `2esn`=(:usn1{`8esn`:usn1 Contains $``})-[``? *..01]->(`6esn` {`8esn`:.12 =~.12 =~1e1})-[ *010{@usn5:Null Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)}) On Match Set `5esn`(0[0.12..]).`1esn`? =12.e12 In $0 In Count(*),(usn2 :`6esn`:`7esn`{`6esn`:`` Contains 12 Contains True,usn2:$`2esn`[123456789..][00..]})-[`7esn`?{usn1:@usn5 Ends With $`3esn` Ends With 12e12,@usn6:12e12[_usn3..][$@usn5..]}]->(usn2 :`5esn`).#usn8? =[`4esn` In `6esn`[1e1..] Where `3esn` =~0.0 =~$``] =~[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`] Unwind Extract(usn2 In 1000 Contains 0.e0 Where 0X7 =~`4esn` =~`8esn`) Contains [0 Contains 12e12,0xabc Ends With $7 Ends With $`2esn`,0x0 =~_usn4] As `7esn` Union Unwind Any(@usn5 In $#usn8 Is Null Is Null Where .e1 In $@usn6 In 999) In None(usn1 In 0x0[..`4esn`] Where $123456789[..0x0][..`4esn`]) As usn2 Optional Match `1esn`=((usn2 :@usn5{`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})<-[#usn8? *0xabc{`5esn`:0X7[12]}]->(`4esn` {usn2:7 In 0xabc})),_usn4=((`2esn` :``)<-[`1esn`?:`1esn` *01234567..12]->(`8esn` {`6esn`:00 In 12.e12})) Where _usn4 Starts With 0X7 Merge usn1=(`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[?:`2esn`|usn2{@usn6:0.12[0.e0..][`4esn`..]}]->(usn1 :#usn8)<-[ *..0x0{`4esn`:$`7esn`[$usn1..][0.0..],`1esn`:$123456789[..0x0][..`4esn`]}]->(#usn8 :`4esn`:#usn8{#usn7:$`8esn` Starts With 1000}) On Match Set `2esn`+=123.654 In \"d_str\" In $_usn3 Union Match ((:_usn3{usn2:$`5esn`[$123456789][`1esn`]})),((#usn7 :#usn8{`2esn`:12 =~usn1 =~.e12})) Where $0[$#usn8..01234567]"),
    octest:ct_string("With Distinct $#usn8 In .e12 In 9e1 Order By All(_usn4 In usn1 Contains False Contains `` Where #usn8[$#usn8..])[(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})..] Asc,0Xa[0xabc..] Ascending,@usn6[$`3esn`] Ascending Skip 1e1 In $#usn8 In 12e12"),
    octest:ct_string("Detach Delete All(_usn4 In usn1 Contains False Contains `` Where $`4esn`[$`2esn`..])[..Single(usn1 In $123456789 Contains usn2 Where $usn1[0.12..]['s_str'..])][..``(Distinct `1esn`[0e0..])]"),
    octest:ct_string("Remove Extract(@usn6 In @usn5 In $`6esn` Where 123456789 =~_usn4 =~$0)._usn3!,[`4esn` In 's_str'[12..'s_str'] Where 0.12 In 01 In $`3esn`|9e0 =~$`5esn`].`3esn`! Union All Optional Match `1esn`=((:`8esn`)-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]-(:@usn5{_usn4:.12 Starts With 0Xa})<-[`4esn`{#usn8:Null[0e0][12],`2esn`:`8esn` In $@usn5}]-({_usn3:999 In $_usn4 In 0X7,`1esn`:1e1 In $#usn8 In 12e12})) Optional Match `3esn`=(:`3esn`:`1esn`{usn1:`4esn` In $12 In `8esn`})-[?:usn1|`3esn` *999..{_usn4:$999[12.0..],usn1:0[usn2..]}]->(:usn2:@usn6{@usn5:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:.12 Ends With $`4esn` Ends With Count(*)}),`5esn`=(#usn7 {@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]}) Where 0e0 Remove {`7esn`:True[..'s_str'][..01]}.`1esn`!,`2esn`:@usn5,({`1esn`:@usn6})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->(`2esn` :usn2:@usn6)-[``? *..01]->(`6esn` {`8esn`:.12 =~.12 =~1e1}).@usn5?"),
    octest:ct_string("Delete #usn8 Ends With $@usn6 Ends With _usn4,Count(*)[12.e12..],{`8esn`:9e1 In 01 In 999}[usn1(1e1[..#usn8][..'s_str'])..{#usn8:$999 Ends With $`3esn` Ends With `8esn`}] Create (#usn7 :`6esn`:`7esn`)<-[`3esn`?:_usn3|:`4esn`]->(:`1esn`{_usn4:$_usn3[Null]})-[ *..0X7]->(`5esn` :_usn4:usn1),usn2=(`8esn` :#usn8)-[usn2?]-(`1esn` :`8esn`{`7esn`:`5esn`[`1esn`]}) With  $_usn4[$`1esn`] As `5esn`,(:`5esn`{`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]})<-[usn1 *..0x0]->(usn1 :`6esn`:`7esn`)-[?:usn1|`3esn` *999..{_usn4:$999[12.0..],usn1:0[usn2..]}]->(:usn1{_usn3:0xabc[12.e12..`1esn`],`1esn`:12[usn1][True]})[..[07[$999],@usn6[$`7esn`]]][.._usn4(0X7 In $@usn5 In 9e0)] As `6esn`,All(_usn4 In usn1 Contains False Contains `` Where #usn8[$#usn8..])[(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})..] As `5esn` Order By True[0x0][@usn6] Ascending,$`5esn` Contains $@usn6 Desc Skip Single(usn1 In $123456789 Contains usn2 Where Count ( * )[..1e1]) Is Not Null Limit _usn3 In $#usn8 In usn1 Where 's_str'[..0.e0][..`1esn`] Union All With Distinct $999[$1000] As `4esn`,[`4esn` In 's_str'[12..'s_str'] Where 9e12 =~01 =~$`7esn`][#usn7(00 In 12.e12)..Extract(usn1 In 0x0[..`4esn`] Where 1000 Ends With 1000 Ends With $`4esn`|@usn6[$`3esn`])][(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})<-[`8esn`]->(#usn8 )<-[`3esn` *00..{`8esn`:@usn6 Contains .e1 Contains $`4esn`,_usn4:0X7[..12e12]}]->(@usn5 {`1esn`:0[usn2..]})..(usn1 :_usn4:usn1)<-[@usn5?:`1esn`]-(#usn7 :`2esn`:`3esn`)] Limit {`8esn`:@usn5[..True][..0X7],`1esn`:`1esn` Contains Count ( * )}[{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}][Any(usn1 In $123456789 Contains usn2 Where 0.e0 Ends With 12 Ends With $7)] Where $_usn4[12e12][`4esn`] Delete [True[..'s_str'][..01]] In Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 12.0[..$7][..999]) In All(`4esn` In `6esn`['s_str'..][010..] Where @usn6[$`7esn`]),$`5esn` Starts With _usn3 Starts With @usn5 Return None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where _usn3[...e1]) In (:_usn4:usn1{``:123456789 Starts With `2esn` Starts With .0,`5esn`:``})<-[usn2?:usn2|#usn8{`6esn`:$123456789[$`2esn`][True],@usn5:$`3esn` =~$`6esn` =~`8esn`}]-({`5esn`:0e0 =~_usn4})-[_usn4:_usn3|:`4esn` *1000..{#usn8:$999 Ends With $`3esn` Ends With `8esn`}]->(#usn7 :`7esn`{`4esn`:.12 Starts With .12 Starts With `3esn`}) As _usn3"),
    octest:ct_string("Delete .12[`1esn`..],usn2 Starts With @usn6 Union All Create `4esn`=((`` :`1esn`{@usn5:@usn5 Starts With 12e12 Starts With @usn5})-[`6esn`:`8esn`|:usn1$_usn3]->(`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]})) With Distinct *,{`3esn`:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:0e0 =~_usn4}[All(@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7)..{_usn3:`1esn` In 999 In $#usn7,@usn5:\"d_str\" Starts With $usn1}][{#usn8:$999 Ends With $`3esn` Ends With `8esn`}..(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[`1esn`{_usn4:`3esn` Contains 0Xa}]-(#usn7 :`6esn`:`7esn`)] Order By .e1 Starts With $`8esn` Asc Limit $#usn7 In .e1 In 01 Where `5esn`[`1esn`..`1esn`] Union All Remove All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 12.e12 Contains `5esn`).`6esn`? Match (@usn6 {_usn3:1e1[.e1..],`1esn`:$#usn8})<-[#usn8?*{usn2:\"d_str\" Contains `3esn` Contains 00,`3esn`:010 Contains 0X0123456789ABCDEF}]->({`6esn`:$`8esn`[..$``]})-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]-(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa}) Remove Any(#usn8 In $`5esn` Is Null Is Null Where 0.e0 Ends With 12 Ends With $7).`3esn`?,{`4esn`:@usn5 Ends With $`3esn` Ends With 12e12,`8esn`:Null Starts With $`7esn` Starts With `2esn`}.`4esn`!"),
    octest:ct_string("Return Distinct 1e1[..#usn7][..#usn7],0[0.12..] As @usn5 Order By (_usn3 :`6esn`:`7esn`{usn1:$_usn3[9e1][$_usn4],`8esn`:123456789 =~_usn4 =~$0})<-[#usn8? *12..0xabc]-(:`6esn`:`7esn`{`3esn`:`8esn`[$``]})-[:`6esn`{@usn6:$0 =~$0 =~.e0}]-({`1esn`:@usn6}) In _usn3(0x0[0X7..][usn1..]) In None(#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str') Descending,[1.e1 =~$_usn4,.12 Contains $`4esn` Contains $`6esn`] Ends With Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn8 In .e12 In 9e1) Desc Skip Single(`4esn` In `6esn`['s_str'..][010..] Where Count(*)[..`3esn`]) In [$123456789 Contains usn2,010 Is Null Is Null,`7esn` Starts With $usn2 Starts With .e0] In `2esn`($`5esn` Is Not Null,7 In $`3esn` In #usn7) Union Merge `3esn`=(usn1 :`7esn`)<-[? *00..{`6esn`:$@usn6[_usn3..0.e0]}]->(:#usn7{`7esn`:\"d_str\",usn2:True[`4esn`][$`6esn`]}) On Create Set `1esn` =0X0123456789ABCDEF[.e0..$`4esn`] On Match Set _usn4 =@usn5 Contains 01 Contains 12,#usn7+={#usn8:0X0123456789ABCDEF[..usn1]} Ends With (:``{_usn3:0X0123456789ABCDEF In 01234567})<-[``? *..0X7{_usn4:12 Ends With 01 Ends With 1e1}]-(usn2 :@usn6:`7esn`)-[:usn2|#usn8*..]-(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12}) Ends With [1e1 In $#usn8 In 12e12,123.654 Contains #usn8] Return *,{`2esn`:999 In $_usn4 In 0X7}[..{`7esn`:12e12 Ends With 010 Ends With .0}][..Filter(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $123456789[$`2esn`][True])] As `3esn` Limit All(`4esn` In `6esn`['s_str'..][010..] Where $`8esn`[``..][123.654..]) Is Null Is Null Union Merge `3esn`=((@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})<-[{_usn3:12.e12 In $0 In Count(*)}]-(:#usn7{`2esn`:.12 Starts With @usn5 Starts With $#usn8})) On Create Set `4esn` =010 In `7esn`,usn2+=0.e0[@usn6][0x0] Optional Match ((`4esn` :`2esn`:`3esn`{`1esn`:123456789[1000]})<-[?{`8esn`:_usn3 Ends With 0x0 Ends With 01234567,#usn8:$`7esn` Is Null Is Null}]->(:``{#usn8:$`2esn`[..`2esn`]})<-[@usn5:#usn7|:_usn4]->({usn1:usn1[$`3esn`..$999][True..False],`7esn`:_usn3 Ends With 12e12 Ends With .e0})),_usn3=(`6esn` :`7esn`)-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]->(usn1 {#usn7:Count ( * )[@usn6..0x0]}) Where @usn6[`3esn`..][$7..] Optional Match `5esn`=((:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[`6esn`:``|:_usn4 *..01]->(`5esn` {_usn4:0X7 =~``})-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(usn2 :usn1{``:9e12 Ends With 0X0123456789ABCDEF Ends With #usn7})) Where usn1 In 1000 In $`5esn`"),
    octest:ct_string("Unwind Any(@usn6 In @usn5 In $`6esn` Where $@usn5 In 12e12 In Count(*)) Contains [_usn4 In usn1 Contains False Contains `` Where 0.12 In $7 In 0] Contains Any(`4esn` In `6esn`['s_str'..][010..] Where 12.e12 Ends With 01 Ends With .e1) As #usn8"),
    octest:ct_string("Detach Delete `2esn` In Count(*) In 9e0,$usn2[False..`7esn`][`7esn`.._usn3],999[``..][Null..] Create ((`4esn` :`7esn`{`7esn`:@usn6 Contains _usn4 Contains $`4esn`})),(`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})-[? *..0X7{`3esn`:`8esn`[$``]}]->({`2esn`:@usn5 In 0X0123456789ABCDEF,`1esn`:@usn6[`5esn`..$`3esn`]})-[?:usn1|`3esn`{#usn8:1000[..$`6esn`][..0xabc]}]->(usn1 :_usn3{@usn6:True[..'s_str'][..01]}) Remove ({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})-[`5esn`? *010]-({@usn6:0.12 In $`4esn` In `6esn`,``:1e1 Is Null}).`7esn`! Union All Optional Match #usn8=((`8esn` :`7esn`{`8esn`:False In 123456789 In $0})<-[`6esn`:_usn4|:@usn5 *..7{_usn4:0.0 =~0X7 =~#usn7}]->(@usn6 {_usn3:$_usn4[$`1esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})),`1esn`=(((`3esn` {_usn4:12.e12 Ends With 01 Ends With .e1})-[@usn6? *1000..{#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1}]-(:@usn5{@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]})<-[? *0xabc{`7esn`:$`5esn` Contains $@usn6,#usn7:12.e12 Ends With 01 Ends With .e1}]->(`7esn` :usn1{`1esn`:00 Starts With _usn3}))) Where 010 Contains Count(*) Return Distinct *,[@usn6 =~01,$`7esn` In $7,00[``..][$`4esn`..]][All(`4esn` In $`8esn` Starts With 1000 Where 9e1 Is Null Is Null)..(_usn4 {_usn3:$`1esn` Is Null,usn1:$`4esn`[$`2esn`..]})<-[#usn8?:_usn4|:@usn5 *..0x0]-(#usn8 :`1esn`{#usn7:1e1[`6esn`..]})] As @usn6 Order By 010 Starts With `7esn` Starts With 9e1 Ascending,123456789 Is Null Descending,Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With $usn1|.12 Ends With `1esn` Ends With $`1esn`)[[True[..'s_str'][..01],_usn4 Ends With 01 Ends With $`1esn`,.0[$`6esn`..False]]..`7esn`(Distinct 010 Is Null Is Null,$`8esn`[..$``])][({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})<-[? *0..010]-(`4esn` :`5esn`{_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[:#usn7|:_usn4 *1000..{_usn4:07 In `5esn` In 12e12,@usn6:.0 Is Null Is Null}]->(#usn7 $usn2)..All(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null)] Desc Skip {#usn8:$`5esn` In False,usn2:$`7esn` In $7} Is Not Null Is Not Null Match #usn8=((`8esn` :`7esn`{`8esn`:False In 123456789 In $0})<-[`6esn`:_usn4|:@usn5 *..7{_usn4:0.0 =~0X7 =~#usn7}]->(@usn6 {_usn3:$_usn4[$`1esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})),`6esn`=(`6esn` :`5esn`) Where $`2esn`[..`2esn`] Union All Match ((#usn7 :#usn8{`2esn`:12 =~usn1 =~.e12})),((#usn8 :`1esn`{#usn7:1e1[`6esn`..]})<-[`3esn`? *123456789..999]->(_usn4 :_usn4:usn1)) Where 123456789[1000] Return Distinct *,010 =~`6esn` As `4esn` With  1000 Contains $#usn7 Contains `6esn`,12.0 Contains 0.e0 As `6esn`,$12[..7][..07] As #usn8 Order By Single(`6esn` In 0X7 =~`` Where 0.12[Null..]) Contains (@usn5 :`2esn`:`3esn`{`1esn`:$`8esn`[..$usn1][..'s_str']})<-[usn2:@usn6{`7esn`:123456789[`4esn`..][Count ( * )..],`4esn`:010[$`8esn`..][0..]}]-(_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8}) Contains All(@usn6 In @usn5 In $`6esn` Where $usn2 Is Not Null) Descending Skip All(@usn5 In .12[#usn7][$`8esn`] Where 0Xa Is Null Is Null)[[usn1 In 00 Starts With _usn3 Where 010 =~$usn2 =~1e1]] Limit 0xabc Starts With _usn3"),
    octest:ct_string("Create `1esn`=((`8esn` :`7esn`{`8esn`:False In 123456789 In $0})-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]-(usn1 :`4esn`:#usn8{``:0 Is Not Null Is Not Null,`3esn`:usn1 Starts With $#usn7 Starts With `5esn`})) Match @usn6=(((`4esn` :`2esn`:`3esn`{`1esn`:123456789[1000]})-[#usn7?:@usn6 *00..]->(_usn3 :_usn4:usn1{@usn5:$@usn6 In $`5esn` In $usn2,#usn7:$0[0X0123456789ABCDEF..$#usn7]})-[_usn3?:`2esn`|usn2 *010{`6esn`:#usn7 Ends With `4esn` Ends With @usn5}]->(`1esn` :``{`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]}))) Where `7esn`[1e1..07][0x0..Count ( * )] Merge `5esn`=(((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})-[:`7esn`|`2esn` *..0X7{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]-(`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})-[`4esn`? *00..]-(:`4esn`:#usn8{@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]}))) On Create Set `1esn`+=_usn4(Distinct `7esn` Starts With $usn2 Starts With .e0) =~`3esn`() =~#usn8(9e0 Ends With $`7esn`) Union Match (((:`6esn`:`7esn`{usn2:_usn3 Contains @usn6 Contains 1.e1,usn2:$`6esn`[`1esn`..][.e0..]})<-[? *..0x0]->(@usn5 {@usn6:0.0[999..],#usn8:Null Is Null Is Null})-[? *..0X7{`3esn`:`8esn`[$``]}]->({`2esn`:@usn5 In 0X0123456789ABCDEF,`1esn`:@usn6[`5esn`..$`3esn`]}))) Where True[`4esn`][$`6esn`] Unwind 9e12 =~01 =~$`7esn` As usn1 Union All Detach Delete `7esn`[$999][7] Return Distinct 12.0 Contains 0.e0 As `6esn`,Count ( * ) In 010 Order By @usn5 Contains 01 Contains 12 Ascending Skip `2esn`($`4esn` Starts With 1e1) Ends With None(@usn5 In $#usn8 Is Null Is Null Where 0.e0 Ends With 12 Ends With $7) Ends With Filter(usn1 In 00 Starts With _usn3 Where False[.e1..Null]) Limit 0.12 Ends With $usn1 Ends With $@usn5 Unwind 12.e12 Contains $`5esn` As #usn7"),
    octest:ct_string("Return Distinct Single(#usn8 In $`5esn` Is Null Is Null Where $123456789 Ends With $`6esn`) Is Null As `8esn` Order By @usn5 Is Not Null Is Not Null Ascending,00[``..][$`4esn`..] Desc,usn2 Ends With $`5esn` Ends With `2esn` Asc Skip [usn1 In 00 Starts With _usn3 Where False[.e1..Null]|1000[0.0][Null]][Filter(usn2 In 1000 Contains 0.e0 Where $`7esn` Ends With $`2esn` Ends With $usn1)..][Single(usn2 In 1000 Contains 0.e0 Where 0e0 Is Not Null Is Not Null)..] Union Optional Match (`5esn` {_usn4:0X7 =~``}),((#usn8 {_usn3:`6esn` =~01234567 =~0Xa,_usn4:$`5esn` Is Null Is Null}))"),
    octest:ct_string("Unwind True Is Not Null As `` Remove Extract(`4esn` In $`8esn` Starts With 1000 Where `5esn` In 12|010 Contains 0X0123456789ABCDEF).`2esn`,{#usn7:.e12[..0.e0][..$`1esn`],usn1:010 Contains Count(*)}.`2esn`! Create (_usn3 :_usn4:usn1)<-[:``|:_usn4 *01234567..12{`2esn`:$`` Is Null Is Null,``:$`4esn`[usn1..$#usn8][12.0..`3esn`]}]->(:@usn6:`7esn`{_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`}),#usn8=(`2esn` :usn1{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})-[usn1?:`8esn`|:usn1]->(`2esn` {usn2:$999[12.0..]})<-[:`6esn`]->(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}) Union All Unwind _usn4 Is Not Null Is Not Null As `2esn` Union Create _usn4=(usn1 :_usn4:usn1)<-[`5esn` *0..010]-(usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1}) With Distinct *,$_usn4[#usn8..] As `3esn` Order By $usn2[0e0..] Ascending,$0 =~`3esn` Descending Skip [\"d_str\"] Contains _usn3(Distinct $usn1[_usn4..][usn2..]) Where _usn3 =~00 Detach Delete Any(#usn7 In 01234567[$`3esn`..] Where 00 In 1e1)[[usn2 In 1000 Contains 0.e0 Where 12e12 Ends With 010 Ends With .0|0xabc[12.e12..`1esn`]]..][[@usn5 In .12[#usn7][$`8esn`] Where $@usn5 =~$`` =~$usn2]..],12.e12 Ends With 01 Ends With .e1,07[12e12]"),
    octest:ct_string("With  (_usn3 :`6esn`:`7esn`{usn1:$_usn3[9e1][$_usn4],`8esn`:123456789 =~_usn4 =~$0})<-[#usn8? *12..0xabc]-(:`6esn`:`7esn`{`3esn`:`8esn`[$``]})-[:`6esn`{@usn6:$0 =~$0 =~.e0}]-({`1esn`:@usn6}) In _usn3(0x0[0X7..][usn1..]) In None(#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str') As _usn4 Order By [#usn8 Ends With `4esn` Ends With $`4esn`,$`2esn` =~'s_str',$#usn7[...e12][..$7]][#usn7(0x0 =~_usn4,`5esn` =~0Xa)][{#usn8:$999 Ends With $`3esn` Ends With `8esn`}] Descending Skip 07[12][$`6esn`] Where $1000 Contains $`3esn` Remove [12e12 Starts With $123456789 Starts With 12.0].usn1 Merge (((`2esn` :`7esn`)<-[? *..7]->({`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null})<-[:`6esn`]->(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}))) On Create Set @usn6 =`3esn`[..7][..12e12]"),
    octest:ct_string("Unwind Count(*)[`7esn`..$12] As `1esn` Union Optional Match `7esn`=(@usn6 {_usn3:1e1[.e1..],`1esn`:$#usn8})<-[#usn8?*{usn2:\"d_str\" Contains `3esn` Contains 00,`3esn`:010 Contains 0X0123456789ABCDEF}]->({`6esn`:$`8esn`[..$``]})-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]-(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa}) Union With Distinct *,$usn2[..12.0],$`2esn`[``..] As `3esn` Skip _usn3[.0] Match (`1esn` :`1esn`) Unwind $@usn5 Contains $`7esn` Contains #usn8 As ``"),
    octest:ct_string("With Distinct .12[#usn7][$`8esn`],12 Ends With 07 Ends With @usn6 As usn1 Order By $999[..`1esn`] Ascending,Single(`6esn` In 0X7 =~`` Where 0.12[Null..]) Contains (@usn5 :`2esn`:`3esn`{`1esn`:$`8esn`[..$usn1][..'s_str']})<-[usn2:@usn6{`7esn`:123456789[`4esn`..][Count ( * )..],`4esn`:010[$`8esn`..][0..]}]-(_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8}) Contains All(@usn6 In @usn5 In $`6esn` Where $usn2 Is Not Null) Descending,[$`8esn` =~$usn2][Any(`6esn` In 0X7 =~`` Where $0 Is Not Null)..] Asc Create #usn8=((`5esn` {`5esn`:$`5esn`[False]})<-[?:usn2|#usn8 *00..]-(`6esn` :`5esn`{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]})) Match (({#usn7:Count ( * )[@usn6..0x0]})<-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]-(`4esn` {`7esn`:.e0[..999][..0X7]})) Where 0X7[0e0..] Union Create #usn8=((`5esn` {`5esn`:$`5esn`[False]})<-[?:usn2|#usn8 *00..]-(`6esn` :`5esn`{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]})) Remove `8esn`(Distinct 00 In 1e1).usn2!,Single(`4esn` In `6esn`['s_str'..][010..] Where 0e0 Is Not Null Is Not Null).`7esn`! Union Return Distinct Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $usn2[..12.0]) In Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where Count(*)[True]) In Extract(`4esn` In 's_str'[12..'s_str'] Where 0xabc Ends With $#usn7 Ends With #usn8|.e1 Starts With 0.0 Starts With `6esn`) As #usn7,@usn5 Starts With \"d_str\" As `` Match ((`7esn` :`2esn`:`3esn`{@usn6:9e0 Ends With $`7esn`})),`6esn`=((`3esn` {`8esn`:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`1esn`?:`1esn` *01234567..12]->(`8esn` {`6esn`:00 In 12.e12})-[`6esn`? *01234567..12{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]-(@usn5 {usn2:$999[12.0..]}))"),
    octest:ct_string("Merge ((:#usn8)<-[`2esn`?]-(:usn2:@usn6{_usn4:$_usn4[$`8esn`..][07..],#usn7:12.e12[...0][..0x0]})<-[`5esn`? *999..{#usn7:0X7[12]}]->(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]})) On Create Set `4esn` =.e12[.12..][_usn4..] On Create Set #usn7+=$123456789[0.0..] Detach Delete {`3esn`:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:0e0 =~_usn4}[All(@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7)..{_usn3:`1esn` In 999 In $#usn7,@usn5:\"d_str\" Starts With $usn1}][{#usn8:$999 Ends With $`3esn` Ends With `8esn`}..(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[`1esn`{_usn4:`3esn` Contains 0Xa}]-(#usn7 :`6esn`:`7esn`)],({_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]->(`6esn` {`8esn`:`8esn` In $@usn5}) In None(@usn5 In 0X7 =~.0 =~\"d_str\" Where #usn8 Ends With `4esn` Ends With $`4esn`) In Any(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $123456789[..0x0][..`4esn`]) Union Merge usn2=((`4esn` :`5esn`{@usn6:$usn2 =~$#usn8,`8esn`:`6esn` =~$_usn3})-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`7esn` :_usn4:usn1)<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})) On Create Set None(`6esn` In 0X7 =~`` Where 01234567 Ends With 0x0).`4esn`! =0[usn2..],[@usn6[$`3esn`]].`4esn` =01 In _usn3 In 12,`1esn`+=123456789 =~usn1"),
    octest:ct_string("Remove All(#usn8 In $`5esn` Is Null Is Null Where 01234567 Ends With 12.0 Ends With 0X7).`8esn`! Detach Delete [.0[01][$12]][..[@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $`3esn` =~$`7esn` =~False|7[..12e12][..$`6esn`]]],07[07]"),
    octest:ct_string("Merge `6esn`=((@usn6 {`3esn`:0.12 In $7 In 0,_usn3:07[$999]})-[`1esn`:`5esn`|`1esn` *..7{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]}]->(usn2 :@usn6:`7esn`)<-[:@usn5|`8esn` *0Xa{usn1:$1000 Contains $`3esn`}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]})) On Match Set `8esn` =All(`4esn` In `6esn`['s_str'..][010..] Where $`8esn`[``..][123.654..]) Is Null Is Null,Filter(_usn4 In usn1 Contains False Contains `` Where 0.12 In 01 In $`3esn`)._usn3? =\"d_str\"[Count ( * )] Remove [.12 Starts With .12 Starts With `3esn`,Count ( * )[Count ( * )..12e12][usn1..1000],False In `3esn`].#usn7,{usn1:$1000 Contains $`3esn`}.#usn8!,None(`4esn` In $`8esn` Starts With 1000 Where True Starts With $`8esn` Starts With \"d_str\").`4esn`! Union All Remove _usn3(Distinct $1000 Contains $`3esn`,7 Contains $`5esn` Contains $usn1).usn2?,{@usn5:0.e0[@usn6][0x0]}._usn4,_usn3:`4esn`:#usn8 Merge `8esn`=(({@usn6:$123456789 Is Null Is Null,@usn6:`6esn`[1.e1..$#usn7][.e0..True]})<-[`5esn`:usn1|`3esn` *010{`2esn`:`6esn` =~01234567 =~0Xa}]->(_usn4 :``)) Union All Match (#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]})<-[:`6esn` *..0X7{`3esn`:`1esn` Contains Count ( * ),`7esn`:01234567 =~usn1}]-(:@usn5{`8esn`:$`3esn`[@usn5..$123456789],@usn5:\"d_str\" Starts With $usn1})-[?:#usn7|:_usn4]->(`` :#usn7$0) With  *,12.0[``] As @usn6 Order By \"d_str\" =~`3esn` =~0Xa Desc,_usn3[0] Desc,`5esn` Ends With .e1 Ends With $_usn4 Asc Unwind @usn6 Contains _usn4 Contains $`4esn` As `4esn`;"),
    octest:ct_string("Remove {``:7[..`1esn`],_usn4:.e1 Ends With _usn4 Ends With @usn5}.usn2? Detach Delete (`5esn` {usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null})<-[`4esn`{#usn8:Null[0e0][12],`2esn`:`8esn` In $@usn5}]-({_usn3:999 In $_usn4 In 0X7,`1esn`:1e1 In $#usn8 In 12e12}) Contains 0X0123456789ABCDEF Contains Extract(#usn8 In $`5esn` Is Null Is Null Where #usn8[$#usn8..]|$@usn6[..$usn1]) Union All Unwind `1esn`(Distinct 0.0[999..],9e0 Ends With $`7esn`) Ends With (`7esn` {`8esn`:Count ( * ) =~Count(*)})-[`8esn`?:#usn7|:_usn4{usn2:7[$`4esn`..123456789]}]->(#usn8 :usn2:@usn6{`5esn`:00 Ends With $_usn4 Ends With $`2esn`,usn2:#usn7 Starts With 0 Starts With 12})-[_usn3?:`2esn`|usn2 *010{`6esn`:#usn7 Ends With `4esn` Ends With @usn5}]->(`1esn` :``{`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]}) Ends With (#usn7 :`2esn`:`3esn`)<-[`2esn`?*..]->(:#usn8{`5esn`:0 Contains 12e12}) As usn1 Remove Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where usn2[$`1esn`...0]|@usn6 Contains .e1 Contains $`4esn`).`4esn`!,@usn6:usn2:@usn6,None(`4esn` In 's_str'[12..'s_str'] Where $`2esn`[..7][..$usn1]).`2esn`! Union All Create ((`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})-[?:@usn6 *..7{#usn8:'s_str'[.12..$#usn7][$999..`2esn`]}]->(@usn5 {_usn4:010[$@usn6],`6esn`:123456789[1e1..0.0]})<-[`6esn`?:`2esn`|usn2 *01234567..12]->(:`7esn`{#usn7:True =~@usn5 =~$`1esn`})),`6esn`=({`8esn`:$@usn5 Contains 01,`2esn`:123.654 Contains #usn8})-[{`5esn`:.e1[..$``][..0X0123456789ABCDEF]}]->(_usn3 {`5esn`:0.12 Contains .e1})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]}) Remove None(usn1 In 00 Starts With _usn3 Where 123456789[`4esn`..][Count ( * )..]).#usn8!,All(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0X7[0e0..])._usn4"),
    octest:ct_string("Return $_usn3[Null] As usn1,.e1 Starts With 0.0 Starts With `6esn` Order By All(@usn5 In $#usn8 Is Null Is Null Where 's_str'[..0.0][..$`4esn`]) Is Null Is Null Asc,`3esn`(.e0 =~`5esn`)[Single(`6esn` In 0X7 =~`` Where $`3esn` =~Null)][[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $_usn3[$`4esn`..Null]|False[`2esn`..#usn8]]] Asc,00 In 12.e12 Descending Limit $1000[01234567] Merge usn2=(:`8esn`{usn2:7 Contains 9e1})<-[_usn3?:`7esn`|`2esn` *010]-(#usn8 :`4esn`:#usn8)-[`8esn` *..0x0{#usn7:Count ( * )[Count ( * )..12e12][usn1..1000],`4esn`:010 Is Null Is Null}]->(@usn6 ) On Match Set usn1+=Extract(#usn7 In 01234567[$`3esn`..] Where 0X7 In $999 In $``)[(:usn2:@usn6{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8})-[? *999..]-(:`4esn`:#usn8{@usn6:$`4esn`[$`2esn`..]})..],Any(_usn4 In usn1 Contains False Contains `` Where True[..'s_str'][..01]).#usn8! =#usn7 Starts With 0x0 Starts With Null On Match Set @usn6+=0X7 In 123456789 In $`5esn`,({`4esn`:$_usn3[..Count ( * )][..@usn5],#usn8:_usn3 =~00})<-[:_usn3|:`4esn`{_usn4:$`3esn` =~$`6esn` =~`8esn`,`5esn`:0X7[0e0..]}]-(:`6esn`:`7esn`{`3esn`:`8esn`[$``]})-[`4esn`?{`1esn`:$`8esn`[..123456789]}]-(usn1 :`4esn`:#usn8{usn2:$`8esn` In \"d_str\" In 9e12}).`3esn` =0e0 Is Not Null Is Not Null Merge _usn4=((@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})<-[#usn7 *123456789..999]-(:@usn6:`7esn`{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})) On Match Set Extract(usn2 In 1000 Contains 0.e0 Where $1000[01234567]|$`6esn`[Count(*)..0.e0][0.0..Count ( * )]).`8esn`! =$123456789[False.._usn3],`3esn`(Distinct 0X7 In $999 In $``,$0 Is Not Null).`7esn`? =0.e0[123.654],`1esn`+=True Starts With 12.0 Starts With $@usn5 Union All Return $`2esn`[``..] As `3esn`,[123456789 =~$123456789,0.12 In $7 In 0] Is Null Is Null As `3esn`,`7esn`[...e1][..\"d_str\"] Unwind _usn4 Starts With 0X7 As `4esn` Merge `3esn`=((`2esn` :_usn4:usn1{`7esn`:7 In 0xabc})<-[:@usn5|`8esn` *0Xa{usn1:$1000 Contains $`3esn`}]->(`2esn` :``)-[usn2?]-(`2esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})) On Create Set `5esn` =999[.e12][01],Extract(usn1 In 0x0[..`4esn`] Where @usn6[$`3esn`]).#usn8? =`1esn` In 999 In $#usn7,usn1 =12.e12[0e0..7] On Match Set `1esn`+=Null[0e0][12],Filter(usn1 In 0x0[..`4esn`] Where $`` Ends With 12e12).usn1! =Extract(#usn8 In $`5esn` Is Null Is Null Where 's_str' Starts With 1000 Starts With #usn8|07)[None(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 12[..True][..$`4esn`])..usn2(Distinct $1000[01234567],00 In 0.12 In `5esn`)][`8esn`(00[``..][$`4esn`..],123.654[@usn5])..Extract(@usn5 In $#usn8 Is Null Is Null Where @usn5 Contains $`1esn` Contains 999)] Union All Unwind _usn4 Starts With 0X7 As `4esn` Return Distinct *,\"d_str\"[Count ( * )] As `7esn`,0x0[123456789] As @usn6 Skip `1esn`[@usn6..$123456789]"),
    octest:ct_string("Create `4esn`=((:`7esn`{``:$`1esn` Starts With @usn6})),`1esn`=((@usn5 :@usn6:`7esn`{`6esn`:$0[01234567..00][$`2esn`..$@usn6],`3esn`:`6esn` Starts With $@usn6})) Unwind 01234567 Ends With 0x0 As _usn3 Unwind $_usn4[`3esn`][0] As _usn4 Union All With Distinct *,Single(#usn7 In 01234567[$`3esn`..]) Is Null As `3esn`,Any(usn2 In 1000 Contains 0.e0 Where @usn6[`3esn`..][$7..])[All(#usn7 In 01234567[$`3esn`..] Where Count(*)[.e0.._usn4])..][None(usn2 In 1000 Contains 0.e0 Where True[Count(*)..][1e1..])..] Order By ({`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`4esn` {@usn6:True[..'s_str'][..01]}) In Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where 07[12e12]) Desc,0x0 Desc,0.e0 Starts With 12.e12 Starts With .e12 Desc Skip [\"d_str\"] Contains _usn3(Distinct $usn1[_usn4..][usn2..]) Limit usn1($@usn5[0.12..][@usn5..],\"d_str\" Starts With $usn1) Is Null Where 123456789 Is Null Optional Match usn1=((`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})) Where 1000 Contains 0.e0 Merge `5esn`=(usn2 {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})<-[ *0xabc{`1esn`:123.654 In \"d_str\" In $_usn3}]-({`2esn`:$usn2 Is Not Null});"),
    octest:ct_string("Detach Delete 1e1 In $#usn8 In 12e12,_usn3 =~00 Create ({`8esn`:$@usn5 Contains 01,`2esn`:123.654 Contains #usn8})-[{`5esn`:.e1[..$``][..0X0123456789ABCDEF]}]->(_usn3 {`5esn`:0.12 Contains .e1})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]}),(usn2 :`2esn`:`3esn`)-[`7esn`?]-(usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1}) Merge _usn4=((@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})<-[#usn7 *123456789..999]-(:@usn6:`7esn`{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})) On Match Set Extract(usn2 In 1000 Contains 0.e0 Where $1000[01234567]|$`6esn`[Count(*)..0.e0][0.0..Count ( * )]).`8esn`! =$123456789[False.._usn3],`3esn`(Distinct 0X7 In $999 In $``,$0 Is Not Null).`7esn`? =0.e0[123.654],`1esn`+=True Starts With 12.0 Starts With $@usn5 Union Return 's_str'[.12..$#usn7][$999..`2esn`] As `5esn` Order By Count ( * ) In 010 Descending,12e12[_usn3..][$@usn5..] Ascending,usn2 Starts With `6esn` Starts With 12e12 Desc Limit Count ( * )[..usn1][..12.e12] Return Distinct *,[#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str'|@usn6 Starts With `7esn` Starts With Null] Is Not Null Is Not Null,`8esn`[_usn3..$#usn7] Order By 's_str' Starts With 1000 Starts With #usn8 Descending Union Create (`` :@usn6:`7esn`{`2esn`:0.12[0.e0..][`4esn`..]})-[@usn6?:#usn8 *..7{@usn5:@usn5 Starts With 12e12 Starts With @usn5}]->(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})-[usn1?:`2esn`|usn2 *123456789..999]-(usn1 :`7esn`{`1esn`:$@usn6 Contains 07 Contains 0.e0}) Merge (`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`})-[_usn4{@usn6:`1esn`[...e1],`5esn`:`5esn`[`1esn`]}]->(`7esn` :`8esn`{`4esn`:00 Ends With .12 Ends With `4esn`})-[ *07..]->(usn2 :@usn6:`7esn`) On Create Set #usn8:_usn4:usn1,[0 Is Not Null Is Not Null].usn2! =(:`1esn`{@usn5:123456789 Starts With `2esn` Starts With 9e12})-[#usn7? *999..]-(@usn5 :_usn4:usn1{`1esn`:07[1e1],`7esn`:12e12[$`5esn`][07]})-[`6esn`:``|:_usn4 *..01]->(`7esn` :`6esn`:`7esn`{_usn4:07 In `5esn` In 12e12})[Extract(#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|`7esn` Starts With $usn2 Starts With .e0)..Extract(#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str')];"),
    octest:ct_string("Remove `8esn`:`4esn`:#usn8,{`3esn`:12[usn1][True],`2esn`:9e1 Is Null Is Null}.`7esn`? Unwind 0Xa Is Null Is Null As @usn5 Union With Distinct *,`3esn` =~`3esn` =~$`6esn` As `7esn`,Any(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 123456789[$#usn7..]) Contains [#usn8 In $`5esn` Is Null Is Null Where 0e0 =~_usn4|$@usn6 =~usn1] Skip .12[..`6esn`][..\"d_str\"] Limit [@usn5 In 0X7 =~.0 =~\"d_str\" Where #usn7 Starts With 0 Starts With 12][Filter(#usn8 In $`5esn` Is Null Is Null Where $12 Contains 123.654 Contains `8esn`)][[_usn4 In usn1 Contains False Contains `` Where True[..'s_str'][..01]|9e1[0.e0..][#usn8..]]] Where `5esn`[`1esn`] Delete 7[..0X7][..'s_str'],9e0 Ends With $`7esn`,$0 Ends With $#usn7 Ends With .12"),
    octest:ct_string("Merge `7esn`=(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})-[?:#usn7|:_usn4]->(`` :#usn7$0)-[`2esn` *0X0123456789ABCDEF..{usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3}]->(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]}) On Match Set `7esn` =$`6esn` Is Not Null Is Not Null On Match Set ``+=`6esn`[0X7..][0x0..],#usn8 =1.e1 =~$_usn4,{`8esn`:1000 Contains 0.e0,usn1:`6esn`[1e1..]}.`4esn`? =$#usn8[1e1][9e1] Union All Delete True Is Not Null Is Not Null,[@usn5 In $#usn8 Is Null Is Null Where $`2esn` Starts With .e0 Starts With 12.0|$`7esn` Is Null Is Null][``(Distinct 0X7 In $@usn5 In 9e0,12.0[0Xa][00])][`6esn`(Distinct 12.e12 In $0 In Count(*),$`2esn`[$`2esn`..])] With Distinct `2esn` In 7 In usn2,$0 =~$usn1 =~9e1 As `5esn`,@usn5[_usn4..][.e0..] As usn1 Where $0[0X0123456789ABCDEF..$#usn7] Unwind Any(@usn6 In @usn5 In $`6esn` Where False Contains `3esn`) Ends With [1e1[@usn5..],$#usn8 Is Null,$0[$#usn8..01234567]] Ends With Extract(`6esn` In 0X7 =~`` Where 010 =~`6esn`) As usn2 Union Create ((:`5esn`)<-[#usn7{#usn7:False[`2esn`..#usn8]}]->(usn2 :`3esn`:`1esn`)-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(:#usn7{`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]}));"),
    octest:ct_string("Delete Count ( * )[1000],usn2 =~0x0,@usn6 Starts With `3esn`"),
    octest:ct_string("Create ((@usn6 :_usn4:usn1{@usn6:Null Is Null Is Null,#usn7:`5esn`[Count ( * )..][\"d_str\"..]})-[*{`2esn`:$1000[01234567]}]-(`4esn` :`1esn`)),usn2=((`1esn` :usn2:@usn6)-[_usn3?:`2esn`|usn2 *010{`6esn`:#usn7 Ends With `4esn` Ends With @usn5}]->(`1esn` :``{`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]}))"),
    octest:ct_string("Delete usn2(Distinct 0xabc Contains Null Contains 9e12,12[..True][..$`4esn`]) Is Null,.12 Is Not Null Is Not Null,1e1 Starts With #usn8 Starts With 1.e1 Match ((_usn4 :`2esn`:`3esn`{#usn8:123456789[$#usn7..],#usn7:07[12e12]})),(_usn3 :_usn3) Union Return Distinct *,[#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str'|@usn6 Starts With `7esn` Starts With Null] Is Not Null Is Not Null,`8esn`[_usn3..$#usn7] Order By 's_str' Starts With 1000 Starts With #usn8 Descending Remove {`1esn`:0xabc[12.e12..`1esn`]}.`1esn`! Union All Return *,$@usn6 =~$#usn8 =~$#usn7 As `7esn`,#usn7 Ends With `4esn` Ends With @usn5 As `` Order By (`8esn` :usn2:@usn6)<-[#usn7:`3esn`|:`4esn` *00..]->(`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}) =~{@usn6:$_usn3[..Count ( * )][..@usn5],@usn5:12e12[Null]} =~Extract(usn2 In 1000 Contains 0.e0 Where $`7esn` Ends With $`2esn` Ends With $usn1) Ascending,{@usn6:0X0123456789ABCDEF[..usn1]}[..`7esn`($`3esn` =~$`6esn` =~`8esn`)][..(`4esn` {`6esn`:$12[..``][..$7]})<-[#usn7]-(_usn4 {#usn8:@usn5 In $`6esn`,`7esn`:010 =~`6esn`})] Ascending Skip Count ( * )[..usn1][..12.e12]"),
    octest:ct_string("Match (`4esn` :@usn5{``:$`2esn`[$`2esn`..],@usn6:010 =~`6esn`}) Remove `2esn`:`2esn`:`3esn` Union All Return $_usn4[12e12][`4esn`] As `5esn`,@usn6[`5esn`..$`3esn`] As ``,0.0[..12e12][..$0] Skip `4esn`($`8esn`[..$usn1][..'s_str'],010[@usn5..]) Ends With [123.654 Contains .e1 Contains `1esn`] Ends With {`8esn`:0X7[..12e12]} Limit 0.e0[9e1..][0.0..] Merge (({`3esn`:$`3esn` =~$`7esn` =~False,`4esn`:12 Ends With 01234567})<-[@usn5?:``|:_usn4]-(_usn3 :`4esn`:#usn8)) On Match Set `8esn`:`4esn`:#usn8,Extract(`4esn` In $`8esn` Starts With 1000 Where False[`2esn`..#usn8]|_usn3 Is Not Null Is Not Null).`6esn`? =#usn8 Is Not Null,usn1 =Extract(#usn8 In $`5esn` Is Null Is Null Where @usn6 Contains .e1 Contains $`4esn`) In Filter(`4esn` In `6esn`['s_str'..][010..] Where 12e12[Count ( * )..][usn2..]) In [123456789 In $usn2 In `6esn`,Count(*) Ends With 010]"),
    octest:ct_string("Remove {_usn3:$_usn4[$`1esn`]}.@usn6!,`8esn`($_usn4[#usn8..],123456789 Starts With `2esn` Starts With .0).usn1?,Extract(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6|1e1 Is Null).#usn7? Create usn1=((usn2 :`7esn`{@usn5:usn1[$`3esn`..$999][True..False],`8esn`:$`5esn` Is Null Is Null})-[@usn5?:@usn6*..]-(@usn5 {@usn6:0.0[999..],#usn8:Null Is Null Is Null})<-[`6esn`?{`7esn`:@usn6 Contains _usn4 Contains $`4esn`}]-(`1esn` :``)),(:usn1) Union All Delete `8esn`[_usn3..$#usn7],$`6esn` Is Not Null Is Not Null,Extract(@usn6 In @usn5 In $`6esn` Where 9e0 =~$`5esn`|`2esn`[$`1esn`..][$_usn3..]) =~Extract(@usn6 In @usn5 In $`6esn` Where .12[`1esn`..][$`3esn`..]|Count ( * ) =~Count(*)) Union All Create (usn2 :#usn7),#usn8=(((`8esn` :@usn5)<-[@usn5:#usn7|:_usn4]->(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})<-[`4esn`:``|:_usn4{`5esn`:0e0 =~_usn4}]-(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})))"),
    octest:ct_string("Merge `8esn`=()<-[`8esn`:@usn5|`8esn` *123456789..999{`5esn`:0x0 Contains $`8esn` Contains `6esn`,#usn8:010 =~$usn2 =~1e1}]->(#usn8 :`1esn`{#usn7:1e1[`6esn`..]})<-[usn1?:`1esn`{#usn7:9e12 Is Not Null Is Not Null,usn2:`3esn` =~0.0 =~$``}]->(:`1esn`{`8esn`:Count ( * ) =~Count(*)}) Return *,$@usn6[..12e12],`8esn` Ends With 0X0123456789ABCDEF Ends With `1esn` As usn2 Skip 1000[..$`6esn`][..0xabc] Limit $`8esn`[..$``] With Distinct *,`3esn` =~`3esn` =~$`6esn` As `7esn`,Any(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 123456789[$#usn7..]) Contains [#usn8 In $`5esn` Is Null Is Null Where 0e0 =~_usn4|$@usn6 =~usn1] Skip .12[..`6esn`][..\"d_str\"] Limit [@usn5 In 0X7 =~.0 =~\"d_str\" Where #usn7 Starts With 0 Starts With 12][Filter(#usn8 In $`5esn` Is Null Is Null Where $12 Contains 123.654 Contains `8esn`)][[_usn4 In usn1 Contains False Contains `` Where True[..'s_str'][..01]|9e1[0.e0..][#usn8..]]] Where @usn6[$`7esn`]"),
    octest:ct_string("Match _usn4=((:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[`6esn`:``|:_usn4 *..01]->(`5esn` {_usn4:0X7 =~``})-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(usn2 :usn1{``:9e12 Ends With 0X0123456789ABCDEF Ends With #usn7})),(((#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]})-[?*..{`3esn`:Count(*)[12.e12..],`3esn`:usn2 =~0x0}]-(`` :`3esn`:`1esn`{_usn3:'s_str'[..0.0][..$`4esn`],`4esn`:$123456789 Is Not Null Is Not Null})<-[:`6esn` *..0X7{`3esn`:`1esn` Contains Count ( * ),`7esn`:01234567 =~usn1}]-({usn1:010[@usn5..],`7esn`:`2esn` Is Not Null Is Not Null}))) Where 07 In `5esn` In 12e12;"),
    octest:ct_string("Remove _usn4:@usn5 Union Create `4esn`=((({`8esn`:$@usn5 Contains 01,`2esn`:123.654 Contains #usn8})-[usn2?]-(`3esn` {_usn4:12.e12 Ends With 01 Ends With .e1})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`}))),((:_usn3{@usn6:$`7esn` Is Null Is Null})-[``:``|:_usn4 *0X0123456789ABCDEF..{_usn3:$_usn3[..Count ( * )][..@usn5]}]-(#usn8 :@usn6:`7esn`)<-[?:_usn3|:`4esn` *010{`8esn`:$``[_usn4..][`7esn`..]}]-(`2esn` )) Create @usn5=((@usn6 {`3esn`:0.12 In $7 In 0,_usn3:07[$999]})-[`1esn`:`5esn`|`1esn` *..7{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]}]->(usn2 :@usn6:`7esn`)<-[:@usn5|`8esn` *0Xa{usn1:$1000 Contains $`3esn`}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]}));"),
    octest:ct_string("With Distinct All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) Is Not Null Is Not Null,0xabc[$@usn5] As `7esn`,.e0[usn2..] As _usn3 Order By False[..12.e12] Descending Skip [\"d_str\"] Contains _usn3(Distinct $usn1[_usn4..][usn2..]) Limit 7 In @usn5 In $`4esn` Where 12e12 Starts With $123456789 Starts With 12.0 Detach Delete 010 Starts With `7esn` Starts With 9e1 With Distinct *,Any(#usn8 In $`5esn` Is Null Is Null Where 0.12 Contains $`2esn` Contains $_usn4)[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..Extract(`4esn` In `6esn`[1e1..])] Order By .e0 Contains 01234567 Descending,[$`7esn` Ends With `1esn` Ends With True,$999[12.0..]][`7esn`(Distinct $`2esn`[$`2esn`..])..][Any(usn1 In $123456789 Contains usn2 Where 0.e0 Ends With 12 Ends With $7)..] Desc,'s_str' Starts With 1000 Starts With #usn8 Descending Where 123456789 =~_usn4 =~$0 Union All Detach Delete usn1 Contains $`` Union Remove Extract(usn1 In 00 Starts With _usn3 Where $`3esn` =~Null|12.e12[...0][..0x0]).`2esn`?,[`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where `7esn` Starts With $`` Starts With $#usn7|$`3esn` Contains 0X0123456789ABCDEF Contains 00].usn1! Merge (((@usn5 :#usn8{`1esn`:0xabc Ends With $7 Ends With $`2esn`,_usn4:``})-[#usn8? *0xabc{`5esn`:0X7[12]}]->(usn1 {`2esn`:True =~@usn5 =~$`1esn`,`2esn`:`6esn`[1.e1..$#usn7][.e0..True]})-[`6esn`:_usn4|:@usn5 *..7{_usn4:0.0 =~0X7 =~#usn7}]-(usn1 :`3esn`:`1esn`))) On Create Set `7esn` =$`6esn` Is Not Null Is Not Null;"),
    octest:ct_string("Unwind .e1 Starts With $`8esn` As `2esn` Union All Unwind All(@usn6 In @usn5 In $`6esn` Where False Contains `3esn`) =~None(`4esn` In $`8esn` Starts With 1000 Where 01 Ends With .e0) =~None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `7esn` Starts With $usn2 Starts With .e0) As `` Unwind `7esn` Starts With $`` Starts With $#usn7 As _usn3 Union Create `1esn`=(`3esn` {``:.e0[7..$`3esn`]})"),
    octest:ct_string("With  {_usn4:00}[#usn7(00 In 12.e12)][[.12 Ends With `1esn` Ends With $`1esn`,$`5esn`[False]]] As `1esn` Order By 0 Is Not Null Descending Skip 0x0 Where 123456789 Starts With #usn7 Starts With `6esn` Remove `7esn`:`4esn`:#usn8,@usn6:usn2:@usn6 Create (#usn8 {`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]})<-[#usn7{#usn7:False[`2esn`..#usn8]}]->(`5esn` :`2esn`:`3esn`{_usn3:$`2esn`[$123456789..$`1esn`][0Xa..$``],`5esn`:12.e12[@usn5..123.654]})<-[? *0xabc{`7esn`:$`5esn` Contains $@usn6,#usn7:12.e12 Ends With 01 Ends With .e1}]->(`7esn` :usn1{`1esn`:00 Starts With _usn3}),`5esn`=((#usn8 :`4esn`:#usn8)<-[`6esn`?{`7esn`:@usn6 Contains _usn4 Contains $`4esn`}]-(usn1 :`4esn`:#usn8{usn2:$`8esn` In \"d_str\" In 9e12})<-[`6esn`?{`7esn`:.12 Ends With `1esn` Ends With $`1esn`,``:9e0 Starts With `6esn`}]-(_usn4 {#usn8:@usn5 In $`6esn`,`7esn`:010 =~`6esn`})) Union All Create ``=(({`5esn`:0e0 =~_usn4})),((({`1esn`:12[..9e0][..999],usn1:0x0 =~$`7esn` =~@usn6})-[#usn8:`3esn`|:`4esn` *0..010]-(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]})<-[_usn3]->(_usn4 :`3esn`:`1esn`{`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]})));"),
    octest:ct_string("Optional Match (({`5esn`:_usn3 Contains @usn6 Contains 1.e1,`7esn`:$12[01..][1.e1..]})-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})<-[usn1?{#usn7:9e12 Is Not Null Is Not Null,usn2:`3esn` =~0.0 =~$``}]->(`5esn` :`3esn`:`1esn`{`6esn`:$1000[.e0..]})),_usn4=(@usn5 {`1esn`:0[usn2..]})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`5esn` {_usn4:0X7 =~``})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(:`6esn`:`7esn`{`3esn`:`8esn`[$``]}) With Distinct $`2esn`[``..] As `3esn`,({`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`4esn` {@usn6:True[..'s_str'][..01]}) In Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where 07[12e12]) As `4esn`,[@usn6 =~01,$`7esn` In $7,00[``..][$`4esn`..]][All(`4esn` In $`8esn` Starts With 1000 Where 9e1 Is Null Is Null)..(_usn4 {_usn3:$`1esn` Is Null,usn1:$`4esn`[$`2esn`..]})<-[#usn8?:_usn4|:@usn5 *..0x0]-(#usn8 :`1esn`{#usn7:1e1[`6esn`..]})] As @usn6 Order By `7esn`[1000..][$123456789..] Desc,$#usn8 In .e12 In 9e1 Descending,$@usn5 Contains $`7esn` Contains #usn8 Desc Detach Delete $`3esn` Is Not Null Is Not Null,$1000 Ends With 1e1 Ends With 123.654"),
    octest:ct_string("Return Distinct *,$999[$1000] Order By usn1($@usn5[0.12..][@usn5..],\"d_str\" Starts With $usn1) Is Null Ascending,.e12 Contains 9e0 Ascending Remove @usn6(@usn5[..True][..0X7]).`3esn`?,[7 In 0xabc,9e0[True..`1esn`]].`1esn`?,[@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 12e12[.12..]|$`6esn`[$`1esn`][1000]].`4esn`! Union All Detach Delete (`7esn` :_usn4:usn1)<-[:``|:_usn4 *0Xa]->(`7esn` :`2esn`:`3esn`) Starts With ({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})<-[? *0..010]-(`4esn` :`5esn`{_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[:#usn7|:_usn4 *1000..{_usn4:07 In `5esn` In 12e12,@usn6:.0 Is Null Is Null}]->(#usn7 $usn2) Starts With Extract(usn2 In 1000 Contains 0.e0 Where $`6esn`[..0X0123456789ABCDEF]|07[`6esn`..][`5esn`..]) Return Distinct All(`6esn` In 0X7 =~`` Where 0.12[Null..]) Is Null Is Null As ``,$0 Contains `7esn` Contains $`8esn` As `3esn`,$#usn7[True..][$0..] As usn1 Order By {`1esn`:9e1[0.e0..][#usn8..]} Starts With Single(`4esn` In 's_str'[12..'s_str'] Where @usn5 In 0X0123456789ABCDEF) Starts With All(#usn8 In $`5esn` Is Null Is Null Where 0.e0 Ends With 12 Ends With $7) Ascending,#usn8 Ends With $@usn6 Ends With _usn4 Desc Skip [@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7|`6esn`[1.e1..$#usn7][.e0..True]][..Extract(#usn8 In $`5esn` Is Null Is Null Where #usn8[$#usn8..]|$@usn6[..$usn1])][..(:`4esn`:#usn8{#usn8:07})-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]-(@usn5 :`3esn`:`1esn`{`3esn`:$`5esn` Is Not Null,`2esn`:9e1[0.e0..][#usn8..]})-[``:`2esn`|usn2{_usn4:0X0123456789ABCDEF Ends With 0X0123456789ABCDEF Ends With 's_str',`3esn`:'s_str' In \"d_str\" In 123456789}]-(:``{`2esn`:9e0[``][123.654],`1esn`:$_usn3[Null]})] Delete [True[..'s_str'][..01]] In Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 12.0[..$7][..999]) In All(`4esn` In `6esn`['s_str'..][010..] Where @usn6[$`7esn`]),$`5esn` Starts With _usn3 Starts With @usn5"),
    octest:ct_string("With Distinct *,#usn8 Starts With 0x0 Starts With $@usn5,`1esn` In 07 In 0e0 As `1esn` Skip $7[$`8esn`..7][$1000..$`5esn`] Merge ((_usn4 {`8esn`:9e1 In 01 In 999}))"),
    octest:ct_string("Remove Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $_usn3[$`4esn`..Null]).usn2,Filter(@usn5 In $#usn8 Is Null Is Null Where 's_str' Starts With 1000 Starts With #usn8).#usn8? Remove ``(Distinct 0.12 In $`4esn` In `6esn`,12e12[_usn3..][$@usn5..])._usn3!,[@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 010[$@usn6]|12e12[Null]].@usn6 Union All Return *,.e1[$_usn4][1e1] As `7esn` Order By 9e0 Ends With $`7esn` Asc Skip 's_str'[12..'s_str']"),
    octest:ct_string("Remove None(usn1 In 0x0[..`4esn`] Where $1000 Is Null Is Null).`6esn`,Extract(_usn4 In usn1 Contains False Contains `` Where 0X7 In 123.654 In $`2esn`|9e1 Starts With `1esn` Starts With 0Xa)._usn4?,(usn2 :`3esn`:`1esn`)-[ *..7]-(usn1 :`4esn`:#usn8)-[?:`3esn`|:`4esn`]-(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]}).@usn5? Optional Match usn2=(((`7esn` :`7esn`)-[{`2esn`:\"d_str\" =~`3esn` =~0Xa,_usn4:usn1 Is Null Is Null}]->(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]})<-[`2esn`?:`7esn`|`2esn`{`8esn`:00}]-(`5esn` {@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00}))) Where 0X0123456789ABCDEF In 01234567;"),
    octest:ct_string("Remove All(`4esn` In 's_str'[12..'s_str'] Where $`8esn`[..$``]).`7esn`!,usn2(07[$999]).`4esn` Remove [_usn4 In usn1 Contains False Contains `` Where 0.12 Contains $`2esn` Contains $_usn4].@usn5,[$123456789[0.0..],07 In `5esn` In 12e12,$`3esn` Starts With 01234567 Starts With $1000].`3esn`!,Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0.12 In $`4esn` In `6esn`)._usn4 Create #usn8=((`8esn` :`7esn`{`8esn`:False In 123456789 In $0})<-[`6esn`:_usn4|:@usn5 *..7{_usn4:0.0 =~0X7 =~#usn7}]->(@usn6 {_usn3:$_usn4[$`1esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})),`6esn`=(`6esn` :`5esn`) Union All With Distinct 01234567 Ends With 0x0,[`2esn` In `7esn` Starts With $`` Starts With $#usn7][{#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1}..] As #usn8,$1000 Is Not Null Is Not Null Order By None(@usn5 In 0X7 =~.0 =~\"d_str\" Where _usn3[...e1])[[_usn4 In usn1 Contains False Contains `` Where 0.12 In $7 In 0]..][[7[..12e12][..$`6esn`]]..] Asc,12[usn1][True] Desc Limit 010 Contains Count(*) Where 0.12 Ends With $usn1 Ends With $@usn5 Return *,$`1esn`[9e1.._usn4][$999..$`2esn`] As `8esn`,$_usn3 In $#usn8 As #usn7;"),
    octest:ct_string("Unwind 07[12e12] As `4esn` Remove Extract(@usn6 In @usn5 In $`6esn` Where False Contains `3esn`).`5esn`?,(`2esn` {`3esn`:$999[12.0..]})-[:usn2|#usn8 *01234567..12{usn2:$`3esn` In $12 In 's_str'}]-(usn1 :_usn3).`5esn` Union All Match (_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8})-[`7esn`?:`4esn`|:`7esn` *..0X7]-(:#usn7{`7esn`:\"d_str\",usn2:True[`4esn`][$`6esn`]}),_usn4=((`2esn` :``)<-[`1esn`?:`1esn` *01234567..12]->(`8esn` {`6esn`:00 In 12.e12})) Create (((`4esn` {#usn8:`1esn`[0e0..],#usn7:$`6esn`[..0X0123456789ABCDEF]})<-[#usn8?:`3esn`|:`4esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]-({``:01234567 Ends With 0x0,`6esn`:0X7[0e0..]})<-[?:`7esn`|`2esn`]-(:`6esn`:`7esn`{`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]})))"),
    octest:ct_string("Return count($_usn3 =~`7esn` =~$_usn4) Is Not Null Is Not Null As `6esn`,All(@usn6 In @usn5 In $`6esn` Where False Contains `3esn`) =~None(`4esn` In $`8esn` Starts With 1000 Where 01 Ends With .e0) =~None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `7esn` Starts With $usn2 Starts With .e0) As ``,`6esn`['s_str'..][010..] Order By `4esn`[$#usn7] Ascending Skip `7esn` Ends With $usn2 Ends With 999 With  *,0.12 In 01 In $`3esn` As @usn5 Order By Single(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where .12 Starts With @usn5 Starts With $#usn8) =~(@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})<-[_usn4?:`6esn`]-(`2esn` {`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null}) =~(_usn4 :usn1)-[@usn5? *999..]-(usn1 :`4esn`:#usn8)-[usn2?:`2esn`|usn2*..{@usn5:$1000[01234567],@usn5:0x0[$`3esn`..010][$#usn7..00]}]->(`4esn` {#usn8:`1esn`[0e0..],#usn7:$`6esn`[..0X0123456789ABCDEF]}) Desc,$12[01..][1.e1..] Descending,`7esn`[Null..][@usn5..] Asc Limit Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where \"d_str\" Is Null Is Null)[count(Distinct 0.12 Contains $12 Contains `8esn`)..[$`1esn` Is Null Is Null,9e1 In 01 In 999]] Where $@usn6 =~usn1 Remove Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where True Contains @usn6|123456789 Starts With `2esn` Starts With 9e12).usn2?"),
    octest:ct_string("Detach Delete $@usn5[0.12..][@usn5..],07[07] Union All Optional Match _usn3=(({`5esn`:_usn3 Contains @usn6 Contains 1.e1,`7esn`:$12[01..][1.e1..]})-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})<-[usn1?{#usn7:9e12 Is Not Null Is Not Null,usn2:`3esn` =~0.0 =~$``}]->(`5esn` :`3esn`:`1esn`{`6esn`:$1000[.e0..]})),#usn8=(((`3esn` )-[?:#usn7|:_usn4]-(usn2 :#usn8{_usn3:$_usn3[..Count ( * )][..@usn5]})-[*{`2esn`:$1000[01234567]}]-(_usn4 :`4esn`:#usn8{#usn7:1e1[@usn5..]}))) Where 010 Contains 0X0123456789ABCDEF Union Unwind $`4esn` Contains `6esn` Contains #usn7 As @usn6 With  *,Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]) In All(@usn5 In .12[#usn7][$`8esn`] Where \"d_str\" =~`6esn` =~0Xa) In [123.654 Starts With usn1 Starts With @usn5] Skip $`2esn`[..7][..$usn1] Limit None(usn1 In 0x0[..`4esn`] Where .12 Starts With .12 Starts With `3esn`) Contains `3esn`($usn2 Contains 12.e12 Contains 00) Where $`2esn`[$`2esn`..] With Distinct $`2esn` Starts With .e0 Starts With 12.0 Order By ({usn1:`4esn` In $12 In `8esn`})-[`4esn`]-(`1esn` {usn1:True[Count(*)..][1e1..],usn1:9e1 Is Null Is Null})<-[?{`5esn`:0x0 Contains $`8esn` Contains `6esn`,#usn8:010 =~$usn2 =~1e1}]->({`6esn`:$`5esn` Is Null,`2esn`:`7esn` Starts With $usn2 Starts With .e0})[[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 0e0 =~_usn4|0x0 Contains _usn4 Contains 123456789]..[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 7 In $`3esn` In #usn7]][usn1($`1esn` Is Null Is Null,$0[0X0123456789ABCDEF..$#usn7])..[usn1 In 00 Starts With _usn3 Where .12[9e0][$7]|07]] Ascending,0e0 =~Count(*) =~0Xa Descending,{`2esn`:999 In $_usn4 In 0X7}[..{`7esn`:12e12 Ends With 010 Ends With .0}][..Filter(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $123456789[$`2esn`][True])] Asc"),
    octest:ct_string("Unwind _usn3 In $#usn8 In usn1 As _usn4 With Distinct 0 =~12.e12 =~$``,0.12 Contains .e1 As `6esn`,01 Contains $`7esn` Contains 9e0 Order By Count ( * )[..1e1] Asc,_usn3(Distinct 0.12 In 01 In $`3esn`,1.e1[0X0123456789ABCDEF..][$`5esn`..]) Ends With Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) Ends With Filter(usn2 In 1000 Contains 0.e0 Where 12e12 Ends With 010 Ends With .0) Asc,[0X0123456789ABCDEF In 01234567,0x0 Contains _usn4 Contains 123456789] Ascending Skip Extract(#usn8 In $`5esn` Is Null Is Null Where 's_str' Starts With 1000 Starts With #usn8|07)[None(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 12[..True][..$`4esn`])..usn2(Distinct $1000[01234567],00 In 0.12 In `5esn`)][`8esn`(00[``..][$`4esn`..],123.654[@usn5])..Extract(@usn5 In $#usn8 Is Null Is Null Where @usn5 Contains $`1esn` Contains 999)] Limit _usn3(0x0[0X7..][usn1..])[..Any(#usn8 In $`5esn` Is Null Is Null Where 999[$`8esn`])][..{#usn7:False[`2esn`..#usn8]}] Return Distinct *,Count ( * ) In 010 As `1esn` Limit $@usn5 =~07 =~True Union All Remove Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $999[12.0..]|Count(*)[.e0.._usn4]).`8esn`?,Single(#usn8 In $`5esn` Is Null Is Null Where .12[`1esn`..][$`3esn`..]).``!,count(Distinct `6esn` =~01234567 =~0Xa).`8esn`! Unwind `8esn`[$``] As `3esn` With Distinct [`2esn` In `7esn` Starts With $`` Starts With $#usn7][{#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1}..] As `8esn`,$`4esn`[9e1..][0..],$`2esn`[``..] Order By $@usn6 Contains 0 Contains $`2esn` Descending,_usn3[9e1..$`4esn`] Descending Limit 00 In 0.12 In `5esn` Where $`7esn`[$usn1..][0.0..] Union All Create (((`4esn` {#usn8:`1esn`[0e0..],#usn7:$`6esn`[..0X0123456789ABCDEF]})<-[#usn8?:`3esn`|:`4esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]-({``:01234567 Ends With 0x0,`6esn`:0X7[0e0..]})<-[?:`7esn`|`2esn`]-(:`6esn`:`7esn`{`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]}))) Remove {`7esn`:`5esn`[`1esn`]}.#usn7?,{#usn7:$usn2 In 9e0 In $7}.@usn6,(:`4esn`:#usn8{@usn6:$`4esn`[$`2esn`..]})-[`5esn`:#usn8*]->({_usn3:12.e12 In $0 In Count(*)}).usn1!;"),
    octest:ct_string("With  *,$@usn6 =~$#usn8 =~$#usn7 As `7esn`,#usn7 Ends With `4esn` Ends With @usn5 As `` Order By (`8esn` :usn2:@usn6)<-[#usn7:`3esn`|:`4esn` *00..]->(`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}) =~{@usn6:$_usn3[..Count ( * )][..@usn5],@usn5:12e12[Null]} =~Extract(usn2 In 1000 Contains 0.e0 Where $`7esn` Ends With $`2esn` Ends With $usn1) Ascending,{@usn6:0X0123456789ABCDEF[..usn1]}[..`7esn`($`3esn` =~$`6esn` =~`8esn`)][..(`4esn` {`6esn`:$12[..``][..$7]})<-[#usn7]-(_usn4 {#usn8:@usn5 In $`6esn`,`7esn`:010 =~`6esn`})] Ascending Skip Count ( * )[..usn1][..12.e12] Where `6esn` =~$_usn3 Merge ((({usn1:`2esn`[$`1esn`..][$_usn3..]})<-[``? *..0X7{_usn4:12 Ends With 01 Ends With 1e1}]-(usn2 :@usn6:`7esn`)<-[#usn7 *123456789..999]-(:`5esn`{`3esn`:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:0e0 =~_usn4}))) On Create Set `8esn` =`` Return Distinct False Ends With $`8esn`,$`7esn`[$usn1..][0.0..] Order By {`8esn`:$123456789 Is Null Is Null,_usn3:$`4esn` Starts With 1e1}[(#usn7 :`2esn`:`3esn`)<-[`8esn`?]->(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})..All(_usn4 In usn1 Contains False Contains `` Where $`8esn`[$``..$7][$1000..$`7esn`])] Descending,$`7esn` In $7 Ascending Limit [@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 12e12[.12..]|$`6esn`[$`1esn`][1000]][All(usn1 In 0x0[..`4esn`] Where 1000 Ends With 1000 Ends With $`4esn`)] Union All Merge ((#usn8 :`4esn`:#usn8)<-[`6esn`?{`7esn`:@usn6 Contains _usn4 Contains $`4esn`}]-(usn1 :`4esn`:#usn8{usn2:$`8esn` In \"d_str\" In 9e12})<-[`6esn`?{`7esn`:.12 Ends With `1esn` Ends With $`1esn`,``:9e0 Starts With `6esn`}]-(_usn4 {#usn8:@usn5 In $`6esn`,`7esn`:010 =~`6esn`})) On Match Set `5esn`(0[0.12..]).`1esn`? =12.e12 In $0 In Count(*),(usn2 :`6esn`:`7esn`{`6esn`:`` Contains 12 Contains True,usn2:$`2esn`[123456789..][00..]})-[`7esn`?{usn1:@usn5 Ends With $`3esn` Ends With 12e12,@usn6:12e12[_usn3..][$@usn5..]}]->(usn2 :`5esn`).#usn8? =[`4esn` In `6esn`[1e1..] Where `3esn` =~0.0 =~$``] =~[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`] On Create Set `4esn` =.12 Is Not Null Is Not Null,{@usn6:True[..'s_str'][..01]}.`2esn` =12.e12[...0][..0x0],[usn1 In 00 Starts With _usn3 Where $`` Ends With 12e12].`3esn`? =0.12 Starts With {`1esn`:@usn6[..0xabc][..$#usn7]} Starts With {`3esn`:`8esn`[1000..$7][$`7esn`..`2esn`],_usn4:\"d_str\" Is Null Is Null} Return $_usn4[12e12][`4esn`] As `5esn`,@usn6[`5esn`..$`3esn`] As ``,0.0[..12e12][..$0] Order By usn2[$`1esn`...0] Descending,123.654 Is Not Null Is Not Null Desc Limit 0X7 =~`4esn` =~`8esn` Return Distinct {@usn6:`7esn` In 999 In @usn6} Starts With Extract(usn1 In 0x0[..`4esn`] Where 0x0|07 Ends With 07) Starts With Filter(usn1 In 00 Starts With _usn3 Where $`` Ends With 12e12),False Ends With $`8esn`,``[$`3esn`][$`2esn`] As usn1 Order By $`6esn` Is Null Is Null Desc Limit 999 In $_usn4 In 0X7"),
    octest:ct_string("Merge `8esn`=((@usn6 {_usn3:$_usn4[$`1esn`]})-[`5esn`?:_usn4|:@usn5]->({`5esn`:Count(*)[..`3esn`],usn1:01234567 Ends With 0x0})-[usn2 *..0X7{#usn7:$_usn4[`3esn`][0]}]->({#usn7:Count ( * )[@usn6..0x0]})) Return $`4esn` Contains 0Xa,010 In `7esn` Limit False Contains `3esn` Union All Return Distinct `3esn` =~`3esn` =~$`6esn` As `7esn` Limit $`7esn` Is Null Is Null"),
    octest:ct_string("Remove [Null Contains _usn4].`8esn`!,Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where usn2[`3esn`][_usn3]).`7esn`?,{#usn7:False[.e1..Null],`1esn`:9e0 Is Null Is Null}.@usn5!"),
    octest:ct_string("Create _usn3=((({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})-[``?{usn2:@usn5 In 0X0123456789ABCDEF,usn2:9e1 Is Null Is Null}]->(`8esn` :_usn3{``:12.e12['s_str']})-[:usn2|#usn8*..]-(`5esn` :`7esn`))) Optional Match `8esn`=(($12)<-[:``|:_usn4{`8esn`:0 Ends With $7 Ends With _usn3}]-(#usn7 {`6esn`:123456789 Is Null,`1esn`:00 In 12.e12})<-[#usn8?:`6esn` *0..010]-(`` :@usn5)),(:``{`5esn`:.e1 In $@usn6 In 999})-[`5esn`?:`3esn`|:`4esn`{`1esn`:$usn2 Contains 12.e12 Contains 00}]-(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]}) Where 1e1[..#usn8][..'s_str']"),
    octest:ct_string("Return $`4esn` Contains 0Xa,010 In `7esn` Order By _usn4 Starts With $@usn6 Starts With #usn7 Ascending,[`8esn` In 's_str' Starts With 1000 Starts With #usn8] =~[01234567 Ends With 12.0 Ends With 0X7,999[$`6esn`],`` Starts With @usn5] =~(:@usn6:`7esn`{`1esn`:010[@usn5..]})<-[`7esn`?:`5esn`|`1esn`]->(#usn8 :_usn4:usn1) Desc,[_usn4 Starts With $@usn6 Starts With #usn7,$@usn5 Contains 01] =~`4esn`(12 Ends With 01 Ends With 1e1) =~Extract(`6esn` In 0X7 =~`` Where 0x0[..`4esn`]) Descending Create ((:`5esn`)<-[#usn7{#usn7:False[`2esn`..#usn8]}]->(usn2 :`3esn`:`1esn`)-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(:#usn7{`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})),((`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})) Remove [12e12 Starts With $123456789 Starts With 12.0].usn1 Union All Match ``=((@usn6 :_usn4:usn1{@usn6:Null Is Null Is Null,#usn7:`5esn`[Count ( * )..][\"d_str\"..]})-[*{`2esn`:$1000[01234567]}]-(`4esn` :`1esn`)) Merge #usn8=(({`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})<-[`6esn`?:_usn3|:`4esn` *12..0xabc]-(`1esn` :usn1$@usn6)<-[#usn8?:`3esn`|:`4esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]-({_usn3:$`1esn` Starts With @usn6})) Detach Delete 12 Ends With 01 Ends With 1e1,010 =~$usn2 =~1e1,`1esn` In 999 In $#usn7;"),
    octest:ct_string("Create (_usn4 {`8esn`:9e1 In 01 In 999})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`4esn` {`2esn`:@usn6[`5esn`..$`3esn`],`7esn`:$`1esn` Is Null})-[`1esn`{_usn4:`3esn` Contains 0Xa}]-(#usn7 :`6esn`:`7esn`),`8esn`=(`` {`4esn`:9e0[True..`1esn`],@usn6:7 =~9e0 =~'s_str'}) Return 01 In 01 In 12 As #usn8,$`6esn`[$`1esn`][1000],[#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str'|@usn6 Starts With `7esn` Starts With Null] Is Not Null Is Not Null Order By 12.e12 Contains `5esn` Ascending,{#usn8:#usn7 Ends With 9e1} Is Not Null Is Not Null Ascending Limit 0.12 Contains $12 Contains `8esn`"),
    octest:ct_string("With Distinct $`4esn`[12.e12..][0.0..],12[`7esn`...0][0.12..``] As @usn6,{#usn8:$`5esn` In False,usn2:$`7esn` In $7}[..Any(@usn6 In @usn5 In $`6esn` Where 010 =~$usn2 =~1e1)] Skip $`1esn` Ends With $`1esn` Where `3esn` Contains 0Xa Create _usn3=(((#usn7 :#usn8{`2esn`:12 =~usn1 =~.e12})-[`8esn`?:#usn7|:_usn4{usn2:7[$`4esn`..123456789]}]->(#usn8 :usn2:@usn6{`5esn`:00 Ends With $_usn4 Ends With $`2esn`,usn2:#usn7 Starts With 0 Starts With 12})-[``? *12..0xabc]->({@usn6:9e0 Contains `8esn`}))) With Distinct *,$`7esn` Ends With $@usn5 As usn2,$@usn6 Starts With usn2 Starts With usn2 As #usn8 Skip 0.e0[..#usn8][..Null] Limit 00 Starts With _usn3 Where $@usn6 Contains 07 Contains 0.e0 Union Detach Delete 0Xa[0xabc..$#usn8] Union Detach Delete `` In `6esn`,@usn6 Contains .e1 Contains $`4esn`;"),
    octest:ct_string("Merge `2esn`=(:_usn4:usn1) On Match Set `6esn` =9e12 Ends With 0X0123456789ABCDEF Ends With #usn7,`7esn` =9e1[0.e0..][#usn8..],#usn7+=({`7esn`:12e12 Ends With 010 Ends With .0})<-[?:`5esn`|`1esn`{_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12}]-({@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]}) Ends With @usn6(123456789 =~$123456789) Ends With [`1esn` Contains Count ( * ),$@usn6 Contains Count ( * ),False In 123456789 In $0] On Create Set `` =(`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[usn1?:`8esn`|:usn1]->({`6esn`:.e1 Starts With 0.0 Starts With `6esn`,_usn3:$@usn6 Contains 0 Contains $`2esn`})<-[:`2esn`|usn2 *0..010]->(`2esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}) Is Null Is Null,`7esn`+=(`7esn` :_usn4:usn1)<-[:``|:_usn4 *0Xa]->(`7esn` :`2esn`:`3esn`) Starts With ({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})<-[? *0..010]-(`4esn` :`5esn`{_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[:#usn7|:_usn4 *1000..{_usn4:07 In `5esn` In 12e12,@usn6:.0 Is Null Is Null}]->(#usn7 $usn2) Starts With Extract(usn2 In 1000 Contains 0.e0 Where $`6esn`[..0X0123456789ABCDEF]|07[`6esn`..][`5esn`..]),`2esn`:`1esn` Unwind 12[usn1][True] As @usn6 Union All Remove Any(#usn8 In $`5esn` Is Null Is Null Where 0.e0 Ends With 12 Ends With $7).`3esn`?,{`4esn`:@usn5 Ends With $`3esn` Ends With 12e12,`8esn`:Null Starts With $`7esn` Starts With `2esn`}.`4esn`!"),
    octest:ct_string("Match `2esn`=(:_usn4:usn1) Delete 0e0[7],(`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})-[``?:@usn6{#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}]->(@usn5 :`3esn`:`1esn`{`3esn`:$`5esn` Is Not Null,`2esn`:9e1[0.e0..][#usn8..]})[[`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where `8esn` In $@usn5]..{usn2:$`4esn`[12.e12..][0.0..]}] Unwind 0 Starts With `6esn` Starts With 0X0123456789ABCDEF As @usn6 Union All Detach Delete None(usn1 In 00 Starts With _usn3) Contains _usn3(Distinct 0.12 In 01 In $`3esn`,1.e1[0X0123456789ABCDEF..][$`5esn`..]) Contains {_usn4:Count(*)[True]} Merge @usn5=((({`4esn`:@usn5 Ends With $`3esn` Ends With 12e12,`8esn`:Null Starts With $`7esn` Starts With `2esn`})-[`2esn` *0X0123456789ABCDEF..{usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3}]-(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})-[:#usn7|:_usn4 *123456789..999]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4}))) On Create Set `8esn` =0.e0[9e0][0e0],_usn3 =0Xa[0xabc..$#usn8] On Match Set `6esn` =[`4esn` In `6esn`['s_str'..][010..] Where $@usn5 In 12e12 In Count(*)|$1000[01234567]][Any(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7)..{usn1:usn1 Is Null Is Null,usn2:12.0[``]}][(_usn3 {`5esn`:0.12 Contains .e1})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`})..00] Create ((:`5esn`)<-[#usn7{#usn7:False[`2esn`..#usn8]}]->(usn2 :`3esn`:`1esn`)-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(:#usn7{`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]}))"),
    octest:ct_string("Delete $`6esn`[Count(*)..0.e0][0.0..Count ( * )] Unwind 999 Contains `7esn` As `7esn` Match @usn5=(:`8esn`{`7esn`:@usn6 Contains _usn4 Contains $`4esn`})-[`1esn`:usn2|#usn8 *1000..]-(:`5esn`{`3esn`:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:0e0 =~_usn4}) Union Create `5esn`=((@usn6 {#usn7:False[`2esn`..#usn8]})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]-(`7esn` {_usn3:usn1 Contains $``})-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]-(_usn3 )) Match ({`3esn`:$`3esn` =~$`7esn` =~False,`4esn`:12 Ends With 01234567})-[#usn7:`1esn` *07..]->(:`7esn`{``:$`1esn` Starts With @usn6})<-[:#usn7|:_usn4 *0Xa]-(usn1 :_usn3{_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"}) Where 9e12 =~01 =~$`7esn` Union All With Distinct 0X7 In 123456789 In $`5esn` As @usn6,[$1000 =~$`7esn`,.12 Starts With @usn5 Starts With $#usn8,0x0[...e12][..@usn5]] Ends With Single(@usn5 In .12[#usn7][$`8esn`]) As `7esn`,`1esn` Contains Count ( * ) As _usn3 Order By 0X0123456789ABCDEF In 01234567 Descending,$#usn8 In .e12 In 9e1 Descending,{usn1:Count ( * )[..usn1][..12.e12],@usn5:07[$`5esn`..]['s_str'..]} Is Not Null Ascending Where $@usn5 Contains 01 Remove [@usn6 In @usn5 In $`6esn` Where 12.0[0Xa][00]].`2esn`?,Single(usn2 In 1000 Contains 0.e0 Where $`7esn` Ends With $`2esn` Ends With $usn1).@usn6?,Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where #usn8 Contains .e0 Contains $`8esn`).`8esn` Detach Delete .e12 Contains 9e0,$`2esn`[``..],Extract(@usn6 In @usn5 In $`6esn` Where 9e0 =~$`5esn`|`2esn`[$`1esn`..][$_usn3..]) =~Extract(@usn6 In @usn5 In $`6esn` Where .12[`1esn`..][$`3esn`..]|Count ( * ) =~Count(*))"),
    octest:ct_string("Unwind @usn6(Distinct `` Starts With @usn5) =~Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 12.e12[@usn5..123.654]) =~#usn7(Distinct $0 =~$0 =~.e0) As `2esn` Union Unwind Filter(usn2 In 1000 Contains 0.e0 Where $`7esn` Ends With $`2esn` Ends With $usn1)[..(:usn2:@usn6{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8})-[? *999..]-(:`4esn`:#usn8{@usn6:$`4esn`[$`2esn`..]})][..Any(@usn5 In .12[#usn7][$`8esn`] Where 0Xa Is Null Is Null)] As `7esn` Remove #usn7:_usn3,[`6esn` Starts With $usn2 Starts With 0.0,.e0[7..$`3esn`]].#usn8!,All(usn2 In 1000 Contains 0.e0 Where #usn7 Starts With .e12 Starts With $`7esn`).`4esn` Remove {@usn6:True[..'s_str'][..01]}.#usn7!,(_usn4 {#usn7:False[`2esn`..#usn8],#usn8:`5esn`[`1esn`..`1esn`]})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})-[#usn7?:@usn6 *00..]->(_usn3 :_usn4:usn1{@usn5:$@usn6 In $`5esn` In $usn2,#usn7:$0[0X0123456789ABCDEF..$#usn7]}).`3esn`"),
    octest:ct_string("Optional Match `6esn`=(`8esn` )-[ *0..010{#usn7:$@usn6 Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)}) Where 0.e0[@usn6][0x0] Merge (((:_usn4:usn1)-[@usn5?:@usn6*..]-(`2esn` :`5esn`{#usn8:$999 Ends With $`3esn` Ends With `8esn`})-[?:@usn6]-(_usn3 :`4esn`:#usn8{`1esn`:07[1e1],`7esn`:12e12[$`5esn`][07]}))) On Match Set `5esn` =999[.e12][01],Extract(usn1 In 0x0[..`4esn`] Where @usn6[$`3esn`]).#usn8? =`1esn` In 999 In $#usn7,usn1 =12.e12[0e0..7]"),
    octest:ct_string("Merge (((`8esn` :_usn3{`8esn`:$`3esn` In $12 In 's_str'})-[`6esn`? *0Xa{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}]-(:`6esn`:`7esn`{`8esn`:$`3esn`[@usn5..$123456789],@usn5:\"d_str\" Starts With $usn1})-[`1esn`?:`1esn` *01234567..12]-({_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}))) On Match Set [usn1 In 00 Starts With _usn3 Where `6esn`[1e1..]].`5esn`! =Count ( * )[Count ( * )..12e12][usn1..1000],@usn5+=usn1 Contains $`` On Match Set `6esn`+=9e0 Is Not Null,``+=`4esn` Ends With 123456789 Ends With @usn5;"),
    octest:ct_string("Return .e12[.12..][_usn4..] As _usn4 Order By $usn1[1e1.._usn3][$@usn6..$#usn7] Desc Skip Extract(@usn6 In @usn5 In $`6esn` Where $_usn4[`3esn`][0]|_usn3 Is Null Is Null) Is Not Null Limit Extract(@usn6 In @usn5 In $`6esn` Where 123456789 =~_usn4 =~$0) Is Null Delete 07 Ends With 07 Union Merge (@usn5 {`2esn`:01234567 Ends With 12.0 Ends With 0X7})-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(:`3esn`:`1esn`{_usn4:`1esn`[@usn6..$123456789],`4esn`:$usn2[..12.0]})-[`4esn`:`4esn`|:`7esn`{`3esn`:Count(*)[`7esn`..$12],_usn3:$999[$1000]}]-(`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]}) On Create Set `5esn` =999[.e12][01],Extract(usn1 In 0x0[..`4esn`] Where @usn6[$`3esn`]).#usn8? =`1esn` In 999 In $#usn7,usn1 =12.e12[0e0..7] On Create Set usn1+=Single(`6esn` In 0X7 =~`` Where 12.0[..$7][..999]) Starts With {_usn3:0.12 Is Null Is Null,`1esn`:9e12[0.0..12.e12]} Starts With (`8esn` :@usn5)-[`6esn`?:_usn3|:`4esn` *12..0xabc]-(usn2 :#usn8{`3esn`:123.654[@usn5]})<-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(#usn8 :`5esn`{usn2:.e1 Starts With 0.0 Starts With `6esn`,#usn8:9e12 =~01 =~$`7esn`}) Remove None(@usn5 In 0X7 =~.0 =~\"d_str\" Where 9e12[usn2..7][.e1..$`7esn`]).`6esn`?,All(usn1 In 00 Starts With _usn3 Where 1e1[..False]).`4esn`?,Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where usn2[$`1esn`...0]|@usn6 Contains .e1 Contains $`4esn`)._usn3! Merge @usn6=((:``{`5esn`:.e1 In $@usn6 In 999})) On Match Set usn1 =0x0[$`3esn`..010][$#usn7..00] Union With  *,usn1[Count ( * )..$usn1] As usn1,$`2esn` =~'s_str' As @usn5 Where 9e0[$_usn3..0X7][7..$#usn8] Create #usn8=((`8esn` :`7esn`{`8esn`:False In 123456789 In $0})<-[`6esn`:_usn4|:@usn5 *..7{_usn4:0.0 =~0X7 =~#usn7}]->(@usn6 {_usn3:$_usn4[$`1esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})),`6esn`=(`6esn` :`5esn`)"),
    octest:ct_string("Create `1esn`=((@usn5 {@usn6:$123456789[0X7..12.e12]})<-[:`5esn`|`1esn`]-(#usn8 {@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null})) Match ((usn2 {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})-[`1esn`{_usn4:`3esn` Contains 0Xa}]-(:usn2:@usn6{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8})),((`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`3esn`?:_usn3|:`4esn`]-(`4esn` {`6esn`:$12[..``][..$7]}));"),
    octest:ct_string("Create usn2=((:`1esn`{@usn6:$_usn4[$`4esn`..$#usn7][`6esn`..7],`8esn`:'s_str'['s_str'..$usn2][_usn3.._usn3]})-[usn2 *0X0123456789ABCDEF..{usn2:`` Starts With 12}]-(`4esn` {`7esn`:.e0[..999][..0X7]})-[_usn4?:@usn6 *..7]->({usn1:usn1[$`3esn`..$999][True..False],`7esn`:_usn3 Ends With 12e12 Ends With .e0})),usn2=({_usn4:$_usn4[$`8esn`..][07..],#usn7:12.e12[...0][..0x0]})<-[``? *..0X7{_usn4:12 Ends With 01 Ends With 1e1}]-(usn2 :@usn6:`7esn`)-[@usn5?:``|:_usn4]-($12) Remove (`6esn` :`4esn`:#usn8{@usn5:\"d_str\" Is Null Is Null,@usn5:$_usn4[`3esn`][0]})<-[:@usn5|`8esn`*..]-(`2esn` :usn1{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`}).usn2 With  *,$usn2[..12.0],$`2esn`[``..] As `3esn` Skip _usn3[.0] Where 0.0[999..] Union Merge ((({_usn4:010 =~$usn2 =~1e1,`2esn`:0X0123456789ABCDEF Is Not Null})-[`2esn` *0X0123456789ABCDEF..{usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3}]-(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})-[:usn1|`3esn`]-(_usn3 :_usn4:usn1{`2esn`:$`6esn`[$@usn6..]}))) On Match Set `5esn`()._usn4! =[`4esn` In `6esn`['s_str'..][010..] Where $@usn5 In 12e12 In Count(*)|$1000[01234567]][Any(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7)..{usn1:usn1 Is Null Is Null,usn2:12.0[``]}][(_usn3 {`5esn`:0.12 Contains .e1})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`})..00],``:usn1,`6esn`+=Any(@usn6 In @usn5 In $`6esn` Where False Contains `3esn`) Ends With [1e1[@usn5..],$#usn8 Is Null,$0[$#usn8..01234567]] Ends With Extract(`6esn` In 0X7 =~`` Where 010 =~`6esn`) On Create Set #usn8+=Extract(#usn7 In 01234567[$`3esn`..] Where 0xabc[$@usn5])[All(`4esn` In 's_str'[12..'s_str'] Where $_usn4[12e12][`4esn`])][(`6esn` :`5esn`)<-[:``|:_usn4 *0Xa]->(`7esn` :`2esn`:`3esn`)],`2esn` =$_usn4[$`1esn`..][$0..] Optional Match (({usn1:`4esn` In $12 In `8esn`})<-[@usn5:#usn8{`4esn`:$0[0X0123456789ABCDEF..$#usn7]}]-(`4esn` :`5esn`{_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})-[`7esn`{usn1:0 Is Not Null}]->(:`7esn`{`6esn`:123456789 Is Null,`1esn`:00 In 12.e12})) Where 0X0123456789ABCDEF[..usn1] Detach Delete 1e1 In $#usn8 In 12e12,_usn3 =~00"),
    octest:ct_string("With Distinct *,010 Contains Count(*) As `5esn`,'s_str' Ends With .e0 As `1esn` Skip [_usn4 In usn1 Contains False Contains `` Where $usn1[0.12..]['s_str'..]|12[..True][..$`4esn`]] Ends With [`6esn` In 0X7 =~``|$#usn7[...e12][..$7]] Limit Count ( * )[`3esn`..][`2esn`..] Where 's_str'['s_str'..$usn2][_usn3.._usn3]"),
    octest:ct_string("Merge `4esn`=(((#usn8 :_usn3)<-[ *..0X7]-(#usn7 )<-[`5esn`?:usn1|`3esn` *1000..]-(`5esn` {usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null}))) On Match Set @usn5 =$usn2 =~$_usn4 =~`5esn`,[`4esn` In `6esn`[1e1..] Where _usn3 Is Null|$`8esn`[..$usn1][..'s_str']].usn1? =$usn2[..12.0],{_usn4:$_usn4[`3esn`][0],`6esn`:False[`2esn`..#usn8]}.`8esn`? =Count(*)[[@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null]..] Union All Return *,All(`4esn` In `6esn`['s_str'..][010..] Where $`8esn`[``..][123.654..]) Is Null Is Null As `6esn`,[#usn8 In $`5esn` Is Null Is Null Where $123456789 Ends With $`6esn`][Any(`4esn` In $`8esn` Starts With 1000 Where 123.654 Starts With usn1 Starts With @usn5)..] As `8esn` Skip Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 01 In _usn3 In 12|0xabc[$@usn5]) Contains Extract(usn2 In 1000 Contains 0.e0 Where 0.12 In 01 In $`3esn`) Merge @usn6=((`6esn` :`7esn`)-[_usn4?:@usn6 *..7]->(@usn5 :`8esn`)<-[@usn5:`6esn` *0X0123456789ABCDEF..]-({@usn6:0.12 In $`4esn` In `6esn`,``:1e1 Is Null})) With Distinct *,Single(#usn7 In 01234567[$`3esn`..]) Is Null Limit 123456789 Starts With `2esn` Starts With .0 Where $#usn7 In 12.0 In 0X0123456789ABCDEF Union All Unwind Any(@usn5 In $#usn8 Is Null Is Null Where 0.e0 Ends With 12 Ends With $7) Is Not Null Is Not Null As `2esn` Create #usn7=((`1esn` {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})<-[:_usn3|:`4esn`{_usn4:$`3esn` =~$`6esn` =~`8esn`,`5esn`:0X7[0e0..]}]-(:`8esn`)<-[:#usn7|:_usn4 *0Xa]-(usn1 :_usn3{_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"})),`5esn`=(#usn7 {@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]}) Merge usn2=((({`5esn`:Count(*)[..`3esn`],usn1:01234567 Ends With 0x0})<-[`6esn`?{`7esn`:.12 Ends With `1esn` Ends With $`1esn`,``:9e0 Starts With `6esn`}]-(usn1 :_usn3{@usn6:True[..'s_str'][..01]})<-[`2esn`?]-(usn2 :`3esn`:`1esn`))) On Match Set All(@usn5 In 0X7 =~.0 =~\"d_str\" Where `5esn`[.e1][0Xa]).`1esn`! =0.12 Contains $12 Contains `8esn`,#usn8+=0x0[$12..],{``:`6esn`[0X7..][0x0..]}.`8esn`? =`6esn` =~$_usn3 On Create Set `8esn` =``"),
    octest:ct_string("With  Any(`4esn` In `6esn`['s_str'..][010..] Where $12 Is Null Is Null)[Extract(#usn7 In 01234567[$`3esn`..] Where $@usn6 =~usn1)..] As `3esn` Order By 010 Contains Count(*) Desc,1e1 In $999 In $usn2 Ascending,@usn6(Distinct 12.e12[0e0..7],usn1[Count ( * )..$usn1]) Is Null Is Null Descending Skip True Is Not Null Is Not Null Limit None(usn1 In 00 Starts With _usn3) Contains _usn3(Distinct 0.12 In 01 In $`3esn`,1.e1[0X0123456789ABCDEF..][$`5esn`..]) Contains {_usn4:Count(*)[True]} Union Remove {``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12}.`2esn`! Union Delete 0.12 =~9e0,12.0[0Xa][00] With  {_usn4:00}[#usn7(00 In 12.e12)][[.12 Ends With `1esn` Ends With $`1esn`,$`5esn`[False]]] As `1esn` Order By 0 Is Not Null Descending Skip 0x0 Where 123456789 Starts With #usn7 Starts With `6esn` Optional Match `8esn`=((_usn4 :@usn6:`7esn`)-[:usn2|#usn8*..]-(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12}))"),
    octest:ct_string("Merge (`2esn` :_usn4:usn1{`7esn`:7 In 0xabc})<-[?{@usn5:12.e12['s_str'],`1esn`:_usn3 Ends With 12e12 Ends With .e0}]-(`7esn` :`4esn`:#usn8{`2esn`:Count(*)[..`3esn`]})-[? *07..{@usn6:12[..True][..$`4esn`],`4esn`:.0[$`6esn`..False]}]-({`4esn`:@usn5 Ends With $`3esn` Ends With 12e12,`8esn`:Null Starts With $`7esn` Starts With `2esn`}) On Create Set [#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|$`7esn` Is Not Null].@usn6! =999[$`6esn`],#usn8+=$@usn6 In usn2 In 123456789,_usn3 =$`4esn`[12.e12..][0.0..] On Create Set `` =$`6esn` =~Null =~9e12 Union Merge `2esn`=(:`3esn`:`1esn`{usn1:`4esn` In $12 In `8esn`})-[?:usn1|`3esn` *999..{_usn4:$999[12.0..],usn1:0[usn2..]}]->(:usn2:@usn6{@usn5:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:.12 Ends With $`4esn` Ends With Count(*)}) On Create Set [@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where .e0[..999][..0X7]]._usn4 =(`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})<-[{_usn3:12.e12 In $0 In Count(*)}]->({`6esn`:$_usn4[$`8esn`..][07..]}) Ends With Any(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn7 In .e1 In 01) Ends With usn2(Distinct _usn3 Contains @usn6 Contains 1.e1) On Match Set Single(usn1 In 00 Starts With _usn3 Where $`7esn` Ends With 07 Ends With 07).`6esn`? =Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 00 Ends With .12 Ends With `4esn`) Contains {`7esn`:0e0 Is Null Is Null,usn2:`4esn` =~123456789},@usn5 =[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn7 In .e1 In 01][..(usn1 :#usn8)-[:`1esn` *010{`2esn`:$_usn3[9e1][$_usn4],`7esn`:`7esn`[...e1][..\"d_str\"]}]->(`7esn` :#usn8)<-[:#usn7|:_usn4{usn2:`5esn`[Count ( * )..][\"d_str\"..],`7esn`:.e1 In $@usn6 In 999}]-({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})][..Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $usn2[..12.0])],[usn1 In 00 Starts With _usn3 Where 12 Ends With .e12 Ends With $7|_usn3 =~00].#usn7! =Single(usn1 In $123456789 Contains usn2 Where Count ( * )[..1e1]) Is Not Null Unwind 12e12[_usn3..][$@usn5..] As usn2"),
    octest:ct_string("Remove ``:`5esn`;"),
    octest:ct_string("Merge (_usn4 {@usn5:$_usn3[$`4esn`..Null]}) On Create Set @usn5(Distinct 12e12[_usn3..][$@usn5..],7 Contains 9e1).`6esn` =$@usn5 In 12e12 In Count(*) On Match Set _usn3:@usn5,Any(usn1 In $123456789 Contains usn2 Where usn2 Is Not Null).#usn7 =All(`6esn` In 0X7 =~`` Where $1000[01234567]) In usn1(),`` =None(@usn5 In 0X7 =~.0 =~\"d_str\" Where _usn3[...e1])[[_usn4 In usn1 Contains False Contains `` Where 0.12 In $7 In 0]..][[7[..12e12][..$`6esn`]]..] Delete count($_usn3 =~`7esn` =~$_usn4) Is Not Null Is Not Null"),
    octest:ct_string("Merge `4esn`=(:``{`5esn`:.e1 In $@usn6 In 999})-[`5esn`?:`3esn`|:`4esn`{`1esn`:$usn2 Contains 12.e12 Contains 00}]-(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]}) On Create Set _usn4 =[`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $usn1[..$`6esn`][..Null]][{`3esn`:$123456789 Contains usn2}..[$_usn4[`3esn`][0],$usn2 Is Not Null,0.0 =~0X7 =~#usn7]][Any(`4esn` In `6esn`['s_str'..][010..] Where 01 Ends With .e0)..Extract(#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0)],[usn1 In 0x0[..`4esn`] Where 12.0[0Xa][00]|$`6esn` Is Null Is Null].usn1 =Count(*)[True],`6esn`+=7[$`4esn`..123456789] On Create Set `6esn`+=[@usn6 In @usn5 In $`6esn` Where False In $`7esn` In .0|.12 Starts With $usn2] Ends With Extract(@usn6 In @usn5 In $`6esn` Where .12[`1esn`..][$`3esn`..]|Count ( * ) =~Count(*)) Ends With Single(@usn5 In .12[#usn7][$`8esn`] Where `6esn` =~$_usn3) Match `2esn`=((_usn4 {``:$usn2[..12.0]})),`1esn`=(((`3esn` {_usn4:12.e12 Ends With 01 Ends With .e1})-[@usn6? *1000..{#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1}]-(:@usn5{@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]})<-[? *0xabc{`7esn`:$`5esn` Contains $@usn6,#usn7:12.e12 Ends With 01 Ends With .e1}]->(`7esn` :usn1{`1esn`:00 Starts With _usn3}))) Where @usn5[..True][..0X7] Unwind [.0[01][$12]][..[@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $`3esn` =~$`7esn` =~False|7[..12e12][..$`6esn`]]] As `1esn` Union Merge `8esn`=((`2esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})) On Match Set [usn1 In 0x0[..`4esn`] Where $#usn7 In .e1 In 01|`1esn`[@usn6..$123456789]].`8esn`? =Any(`6esn` In 0X7 =~`` Where 0X7[..12e12]),@usn5 =Any(@usn5 In $#usn8 Is Null Is Null Where True[Count(*)..][1e1..]) Is Not Null,_usn3+=$@usn5 =~$`` =~$usn2 On Match Set `2esn`+=.e12 Starts With True Optional Match @usn6=((`2esn` :`8esn`{`2esn`:$`8esn` In \"d_str\" In 9e12})-[`5esn`:`8esn`|:usn1{usn1:12e12[Count ( * )..][usn2..],usn2:$123456789 Is Null Is Null}]->(@usn5 :#usn8{@usn5:$@usn5 Contains 01,`2esn`:@usn6[`3esn`..][$7..]})),_usn3=(`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})<-[`8esn`?:`5esn`|`1esn`]-(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]})<-[`3esn`?*..]->(`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]}) Where $`5esn` Contains Count(*) Contains #usn7 Remove [usn2[$`7esn`..010][00..``],07[12][$`6esn`],Null[01234567][01234567]].`1esn`,`3esn`(Distinct 123456789 =~$123456789).`` Union Create (_usn3 :_usn4:usn1)<-[:``|:_usn4 *01234567..12{`2esn`:$`` Is Null Is Null,``:$`4esn`[usn1..$#usn8][12.0..`3esn`]}]->(:@usn6:`7esn`{_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`}),#usn8=(`2esn` :usn1{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})-[usn1?:`8esn`|:usn1]->(`2esn` {usn2:$999[12.0..]})<-[:`6esn`]->(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null})"),
    octest:ct_string("Detach Delete usn1 Is Not Null Is Not Null,`2esn` Contains $999 Union All Optional Match @usn6=((:usn1{_usn3:0xabc[12.e12..`1esn`],`1esn`:12[usn1][True]})-[?:`4esn`|:`7esn`]->(#usn7 {`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null})),`8esn`=(`8esn` {`6esn`:00 In 12.e12})<-[`5esn`:@usn6]-(:``{_usn3:0X0123456789ABCDEF In 01234567})<-[`7esn`?:@usn5|`8esn`{@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]}]->(`6esn` {@usn6:9e0 Contains `8esn`}) Where @usn6[`3esn`..][$7..] Create ((`6esn` :_usn4:usn1{`6esn`:00 In 12.e12})<-[`7esn`?:`5esn`|`1esn`]->(`6esn` :@usn6:`7esn`{@usn5:True[0x0][@usn6],`5esn`:Null Starts With _usn4 Starts With `6esn`})),(usn1 :`3esn`:`1esn`)-[?:`4esn`|:`7esn` *..0x0]-(:@usn5{@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]}) Match ((`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})),(((@usn6 {#usn7:'s_str' In \"d_str\" In 123456789,usn2:07[12][$`6esn`]})<-[?:@usn6{`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]}]->(:@usn5)<-[#usn8?:`4esn`|:`7esn` *07..]->(`` :#usn7$0))) Where $`8esn` =~$usn2"),
    octest:ct_string("Return Distinct None(`4esn` In 's_str'[12..'s_str'])[Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`)..][Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where $@usn6 Contains Count ( * ))..] Create `2esn`=(:`1esn`)<-[`2esn`?:usn2|#usn8{`6esn`:0X7[.e12..01234567],@usn6:`7esn`[...e1][..\"d_str\"]}]->(`5esn` :`8esn`{#usn8:0.12 Contains $`2esn` Contains $_usn4,`2esn`:$`5esn` Starts With _usn3 Starts With @usn5})<-[`4esn`? *00..]-(`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]}) Union All Return $`6esn` =~$#usn8 As #usn8 Order By (#usn7 :#usn8)-[`6esn`:`4esn`|:`7esn` *..0x0]->({`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})[Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`])][Filter(`4esn` In `6esn`['s_str'..][010..] Where @usn6[$`7esn`])] Descending Limit Null Contains 9e1 Union All Return Distinct *,\"d_str\"[Count ( * )] As `7esn` Skip Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 01 In _usn3 In 12|0xabc[$@usn5]) Contains Extract(usn2 In 1000 Contains 0.e0 Where 0.12 In 01 In $`3esn`) Limit {`1esn`:`4esn` In $12 In `8esn`} Contains None(@usn5 In .12[#usn7][$`8esn`] Where .e12 =~0.0 =~9e0) Contains [@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]] Remove Filter(#usn7 In 01234567[$`3esn`..] Where 0Xa[0xabc..$#usn8]).#usn8? Create ((`3esn` {`8esn`:$``[_usn4..][`7esn`..]}))"),
    octest:ct_string("Create #usn8=((`2esn` :`5esn`{#usn8:$999 Ends With $`3esn` Ends With `8esn`})-[#usn8? *12..0xabc]-(#usn8 :`4esn`:#usn8{#usn7:$`8esn` Starts With 1000})-[usn1? *07..{`5esn`:#usn7 Is Not Null Is Not Null}]-({`1esn`:12[..9e0][..999],usn1:0x0 =~$`7esn` =~@usn6})),_usn4=(:`6esn`:`7esn`{usn2:.e0[..0X0123456789ABCDEF][...e12]}) Remove _usn3(Distinct $123456789 Is Null Is Null).@usn5?,Extract(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null).#usn7! Unwind [`4esn` In `6esn`['s_str'..][010..] Where $@usn5 In 12e12 In Count(*)|$1000[01234567]][Any(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7)..{usn1:usn1 Is Null Is Null,usn2:12.0[``]}][(_usn3 {`5esn`:0.12 Contains .e1})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`})..00] As @usn5 Union All Remove _usn3:#usn8 Union Detach Delete Extract(`4esn` In $`8esn` Starts With 1000 Where 9e1 Is Null Is Null) =~Any(`4esn` In 's_str'[12..'s_str'] Where $#usn8 Is Null) =~[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`|$123456789 Ends With .e1],$7 Contains 0x0 Contains ``,[\"d_str\"] Contains _usn3(Distinct $usn1[_usn4..][usn2..]) Remove [01234567[Null..0.e0][Count(*)..$#usn8],#usn8 Contains .e0 Contains $`8esn`,123456789[1e1..0.0]].`1esn`? Create (:`3esn`:`1esn`{@usn5:$#usn8 In .e12 In 9e1,`7esn`:9e1 Starts With `1esn` Starts With 0Xa}),(`3esn` :usn2:@usn6)-[#usn7:`7esn`|`2esn` *..01{``:0X7 In 's_str' In $`1esn`,#usn8:010 Contains Count(*)}]->({`4esn`:$usn1[1e1.._usn3][$@usn6..$#usn7],`3esn`:9e0[``][123.654]})-[_usn3]-(`` {`4esn`:9e0[True..`1esn`],@usn6:7 =~9e0 =~'s_str'});"),
    octest:ct_string("Merge _usn3=((_usn4 {#usn8:@usn5 In $`6esn`,`7esn`:010 =~`6esn`})-[`5esn`? *00..{usn1:07[`6esn`..][`5esn`..],`2esn`:#usn7 Contains .0 Contains .e1}]->(#usn7 :`7esn`{`4esn`:.12 Starts With .12 Starts With `3esn`})-[{`5esn`:.e1[..$``][..0X0123456789ABCDEF]}]->(_usn3 {`5esn`:0.12 Contains .e1})) On Match Set _usn4 =@usn5 Contains 01 Contains 12,#usn7+={#usn8:0X0123456789ABCDEF[..usn1]} Ends With (:``{_usn3:0X0123456789ABCDEF In 01234567})<-[``? *..0X7{_usn4:12 Ends With 01 Ends With 1e1}]-(usn2 :@usn6:`7esn`)-[:usn2|#usn8*..]-(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12}) Ends With [1e1 In $#usn8 In 12e12,123.654 Contains #usn8] On Create Set None(`4esn` In 's_str'[12..'s_str'] Where @usn5 In 0X0123456789ABCDEF).`2esn`! =$`1esn` Is Null,`5esn`()._usn4! =[`4esn` In `6esn`['s_str'..][010..] Where $@usn5 In 12e12 In Count(*)|$1000[01234567]][Any(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7)..{usn1:usn1 Is Null Is Null,usn2:12.0[``]}][(_usn3 {`5esn`:0.12 Contains .e1})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`})..00],`8esn` =`7esn` Contains .0 Contains 9e12 Union With  07 Ends With 07,{_usn3:12.e12[$1000..],`7esn`:$`2esn` Contains usn1 Contains `2esn`}[..(`2esn` :`8esn`{`2esn`:$`8esn` In \"d_str\" In 9e12})<-[`5esn`?:usn1|`3esn` *1000..]-({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->(`2esn` :usn2:@usn6)][..010] Union All Return Distinct *,0['s_str'][Null] As #usn8,0.0[..12e12][..$0] Order By 010[@usn5..] Descending,{usn2:123456789 Starts With `2esn` Starts With 9e12} Ends With All(usn2 In 1000 Contains 0.e0 Where 01234567[Null..0.e0][Count(*)..$#usn8]) Descending Create ({`5esn`:123456789 Starts With `2esn` Starts With .0})-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]-(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa})<-[`` *12..0xabc]->(`3esn` :_usn4:usn1);"),
    octest:ct_string("Optional Match (_usn4 :`4esn`:#usn8{@usn5:$_usn4[12e12][`4esn`],`4esn`:False In `3esn`})-[`6esn`:``|:_usn4 *..01]->(`5esn` :#usn7) Where $1000[01234567] Unwind Count(*) Is Null As `2esn`"),
    octest:ct_string("Match `1esn`=(((`` :@usn5)-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]->(usn1 {#usn7:Count ( * )[@usn6..0x0]})-[@usn5:`8esn`|:usn1]-(#usn7 :`5esn`))),usn1=(_usn4 :`8esn`{`3esn`:False[.e1..Null],`3esn`:9e0 =~$`5esn`}) With Distinct Extract(`4esn` In `6esn`['s_str'..][010..] Where $12 Is Null Is Null) Ends With `2esn`(`7esn`[Null..][@usn5..],123.654[12.e12..1e1]) Ends With Any(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 010[$@usn6]) As `7esn`,$usn2 In 9e0 In $7 Order By @usn5 Starts With 12e12 Starts With @usn5 Desc Skip $``[_usn4..][`7esn`..]"),
    octest:ct_string("Remove Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0.12 In $`4esn` In `6esn`).@usn6! Return Distinct *,01234567[$@usn6..0X7][$`1esn`..123.654],_usn3(Distinct 0.12 In 01 In $`3esn`,1.e1[0X0123456789ABCDEF..][$`5esn`..]) Ends With Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) Ends With Filter(usn2 In 1000 Contains 0.e0 Where 12e12 Ends With 010 Ends With .0) As #usn8 Skip .e0[..0X0123456789ABCDEF][...e12] Detach Delete 12.e12 Contains $`5esn`,$usn1 In 1000 In $#usn7,12.0 Union All Return Distinct *,`1esn` Contains Count ( * ) As _usn3 Skip $`3esn` =~$999 =~$`3esn` With Distinct [`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`|$123456789 Ends With .e1] Contains [@usn6 In @usn5 In $`6esn` Where $_usn4[$`8esn`..][07..]|$1000 In $`7esn` In $7] Contains (`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})-[``?:@usn6{#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}]->(@usn5 :`3esn`:`1esn`{`3esn`:$`5esn` Is Not Null,`2esn`:9e1[0.e0..][#usn8..]}),$_usn4[`3esn`][0] As `1esn`,`6esn` Starts With $`5esn` As @usn5 Order By .0 Is Null Is Null Ascending,`1esn`(Distinct $@usn5[#usn8..][$`1esn`..],#usn7 Ends With `4esn` Ends With @usn5)[[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $999[12.0..]|usn1[Count ( * )..$usn1]]][{`8esn`:010[@usn5..],#usn8:False Is Not Null Is Not Null}] Asc Limit True Is Not Null Where 0.0 =~0X7 =~#usn7 Union All Return Distinct *,[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`|$123456789 Ends With .e1] Contains [@usn6 In @usn5 In $`6esn` Where $_usn4[$`8esn`..][07..]|$1000 In $`7esn` In $7] Contains (`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})-[``?:@usn6{#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}]->(@usn5 :`3esn`:`1esn`{`3esn`:$`5esn` Is Not Null,`2esn`:9e1[0.e0..][#usn8..]}) Skip ({`5esn`:0.12 Contains .e1})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:@usn5{#usn7:1e1[@usn5..]})<-[?:`6esn` *01234567..12{`7esn`:7 In 0xabc}]-(#usn7 :usn2:@usn6{`1esn`:$usn2 Contains 12.e12 Contains 00}) =~None(usn1 In 00 Starts With _usn3 Where False[.e1..Null]) Return Distinct *,{`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]}[Extract(_usn4 In usn1 Contains False Contains `` Where `5esn`[.e1][0Xa])..] Order By [@usn5 In $#usn8 Is Null Is Null Where 12.e12[@usn5..123.654]|#usn7 Starts With `1esn`][[@usn5 In .12[#usn7][$`8esn`] Where 0.12 In $`4esn` In `6esn`|$`1esn` Starts With @usn6]..][$`1esn`..] Ascending"),
    octest:ct_string("Delete Extract(@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7|Null Starts With $`7esn` Starts With `2esn`) =~{`5esn`:Count(*)[..`3esn`],usn1:01234567 Ends With 0x0},$`1esn` Is Null,9e0 Starts With `6esn` Create `5esn`=((:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[`6esn`:``|:_usn4 *..01]->(`5esn` {_usn4:0X7 =~``})-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(usn2 :usn1{``:9e12 Ends With 0X0123456789ABCDEF Ends With #usn7})),((#usn8 {_usn3:`6esn` =~01234567 =~0Xa,_usn4:$`5esn` Is Null Is Null})-[#usn7:`1esn` *07..]->(#usn8 {`2esn`:$`5esn` Contains Count(*) Contains #usn7,_usn4:Null Starts With $`7esn` Starts With `2esn`})) Union Return Distinct *,$999[$1000] Skip 1e1[@usn5..] Create `1esn`=(#usn7 {@usn5:`5esn`[.e1][0Xa],@usn6:Count(*)[`7esn`..$12]})-[? *999..]-(`` :`1esn`) Optional Match (({_usn4:$_usn4[$`8esn`..][07..],#usn7:12.e12[...0][..0x0]})),#usn8=({_usn3:12.e12 In $0 In Count(*)})<-[:@usn5|`8esn`*..]-(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4}) Where _usn3 Is Not Null Is Not Null"),
    octest:ct_string("With  *,Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]) In All(@usn5 In .12[#usn7][$`8esn`] Where \"d_str\" =~`6esn` =~0Xa) In [123.654 Starts With usn1 Starts With @usn5] Skip $`2esn`[..7][..$usn1] Limit None(usn1 In 0x0[..`4esn`] Where .12 Starts With .12 Starts With `3esn`) Contains `3esn`($usn2 Contains 12.e12 Contains 00) Optional Match #usn7=(@usn5 {usn2:$999[12.0..]})<-[usn1]->(`8esn` :_usn3{`8esn`:$`3esn` In $12 In 's_str'})-[_usn3?:``|:_usn4]->(`5esn` {usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null}) Where $`1esn` Ends With _usn4 Ends With `3esn`"),
    octest:ct_string("With Distinct *,{`3esn`:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:0e0 =~_usn4}[All(@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7)..{_usn3:`1esn` In 999 In $#usn7,@usn5:\"d_str\" Starts With $usn1}][{#usn8:$999 Ends With $`3esn` Ends With `8esn`}..(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[`1esn`{_usn4:`3esn` Contains 0Xa}]-(#usn7 :`6esn`:`7esn`)] Order By .e1 Starts With $`8esn` Asc Limit $#usn7 In .e1 In 01 Where `5esn`[`1esn`..`1esn`] Union All Detach Delete _usn3 Ends With 12e12 Ends With .e0,#usn7(Distinct $_usn4[$`8esn`..][07..])[..(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})-[`6esn`? *..7{`3esn`:123456789[$#usn7..]}]-(#usn8 {@usn5:.e1[..$``][..0X0123456789ABCDEF],_usn3:$usn2 =~$#usn8})-[#usn7:_usn3|:`4esn`]-(:`6esn`:`7esn`{#usn8:`5esn` =~0Xa,usn1:12 =~usn1 =~.e12})][..All(`4esn` In `6esn`[1e1..] Where $`1esn` Is Null)],`4esn` =~123456789 Create `2esn`=(((`2esn` :`7esn`)<-[? *..7]->({`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null})<-[:`6esn`]->(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}))),`6esn`=({`8esn`:$@usn5 Contains 01,`2esn`:123.654 Contains #usn8})-[{`5esn`:.e1[..$``][..0X0123456789ABCDEF]}]->(_usn3 {`5esn`:0.12 Contains .e1})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]})"),
    octest:ct_string("Unwind Any(@usn6 In @usn5 In $`6esn` Where 9e0[$_usn3..0X7][7..$#usn8]) Contains None(usn1 In 00 Starts With _usn3 Where 01234567 Ends With 12.0 Ends With 0X7) Contains Single(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn8 In .e12 In 9e1) As `3esn` Detach Delete `3esn` Contains 0Xa,9e1[0.e0..][#usn8..] Union Return None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where _usn3[...e1]) In (:_usn4:usn1{``:123456789 Starts With `2esn` Starts With .0,`5esn`:``})<-[usn2?:usn2|#usn8{`6esn`:$123456789[$`2esn`][True],@usn5:$`3esn` =~$`6esn` =~`8esn`}]-({`5esn`:0e0 =~_usn4})-[_usn4:_usn3|:`4esn` *1000..{#usn8:$999 Ends With $`3esn` Ends With `8esn`}]->(#usn7 :`7esn`{`4esn`:.12 Starts With .12 Starts With `3esn`}) As _usn3;"),
    octest:ct_string("Optional Match ``=(((:_usn3{`6esn`:.e12[..0.e0][..$`1esn`],`8esn`:7 In 0xabc})<-[`4esn`:``|:_usn4{`5esn`:0e0 =~_usn4}]-(:`7esn`{@usn6:0.0[999..],#usn8:Null Is Null Is Null})-[#usn7:_usn3|:`4esn` *..0x0{usn2:$#usn7 In 12.0 In 0X0123456789ABCDEF,`6esn`:`7esn`[1e1..07][0x0..Count ( * )]}]->(`6esn` {`2esn`:$`2esn`[..`2esn`],usn1:False[0Xa..$@usn5][$`6esn`..12e12]}))) Where 1000 Ends With 1000 Ends With $`4esn` Remove [_usn4 In usn1 Contains False Contains `` Where 0.12 Contains $`2esn` Contains $_usn4].@usn5,[$123456789[0.0..],07 In `5esn` In 12e12,$`3esn` Starts With 01234567 Starts With $1000].`3esn`!,Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0.12 In $`4esn` In `6esn`)._usn4 Unwind @usn6(Distinct `` Starts With @usn5) =~Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 12.e12[@usn5..123.654]) =~#usn7(Distinct $0 =~$0 =~.e0) As `2esn`"),
    octest:ct_string("With Distinct [@usn5 In $#usn8 Is Null Is Null Where 0.e0 Ends With 12 Ends With $7|$999 Ends With $`3esn` Ends With `8esn`] Starts With [$`6esn` Is Null Is Null,0Xa Is Not Null Is Not Null,0X7 In 123.654 In $`2esn`] Starts With [01234567[Null..0.e0][Count(*)..$#usn8]] As `6esn`,{#usn7:0[0.12..]} Ends With Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]) Ends With {@usn5:\"d_str\" Is Null Is Null,@usn5:$_usn4[`3esn`][0]} Order By {_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]} Ends With Extract(`4esn` In $`8esn` Starts With 1000 Where `6esn`['s_str'..][010..]|12.e12[@usn5..123.654]) Ends With [$`5esn` Is Not Null,0e0 Is Null Is Null] Ascending,(#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :usn2:@usn6)-[`1esn`:`8esn`|:usn1 *0xabc{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]-(@usn5 :#usn8{`1esn`:0xabc Ends With $7 Ends With $`2esn`,_usn4:``})[.._usn4(@usn6[`5esn`..$`3esn`],`8esn`[$``])] Ascending,0X0123456789ABCDEF[..usn1] Asc Where Count(*)[..`3esn`] Detach Delete {`8esn`:010[@usn5..],#usn8:False Is Not Null Is Not Null}[[`4esn` In 's_str'[12..'s_str'] Where $`2esn`[..7][..$usn1]]][Count ( * )] Optional Match `5esn`=((#usn8 :`1esn`{#usn7:1e1[`6esn`..]})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->({usn1:`2esn`[$`1esn`..][$_usn3..]})),usn2=({_usn4:$_usn4[$`8esn`..][07..],#usn7:12.e12[...0][..0x0]})<-[``? *..0X7{_usn4:12 Ends With 01 Ends With 1e1}]-(usn2 :@usn6:`7esn`)-[@usn5?:``|:_usn4]-($12) Where $1000 In $`7esn` In $7 Union All Merge `3esn`=(((:_usn4:usn1{usn2:$`5esn` In False})<-[?:@usn5|`8esn` *..0X7]->(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12})-[:``|:_usn4 *01234567..12{`2esn`:$`` Is Null Is Null,``:$`4esn`[usn1..$#usn8][12.0..`3esn`]}]->(#usn7 {@usn5:`5esn`[.e1][0Xa],@usn6:Count(*)[`7esn`..$12]}))) On Create Set [`6esn` In 0X7 =~``|$#usn7[...e12][..$7]].`1esn` =9e12 =~01 =~$`7esn` On Create Set [@usn6 In @usn5 In $`6esn` Where False Contains `3esn`].`6esn` =[#usn7 In 01234567[$`3esn`..] Where `7esn` Starts With $`` Starts With $#usn7|07 In 0 In 's_str'][Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 12.0[..$7][..999])..][[@usn5 In .12[#usn7][$`8esn`] Where $0[7..][Null..]|$@usn5 Contains 01]..],`8esn` =[`6esn` In 0X7 =~`` Where 12.e12['s_str']|00[7..$123456789]][All(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6)..][Extract(`4esn` In $`8esn` Starts With 1000 Where 1.e1[0X0123456789ABCDEF..][$`5esn`..]|9e1[...e0])..],($999)<-[ *00..{@usn5:$`5esn` Is Null Is Null}]->(@usn5 {`1esn`:0[usn2..]})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`1esn` :usn2:@usn6).`4esn` =`3esn` =~0.0 =~$`` Remove [@usn5 In $#usn8 Is Null Is Null Where $#usn8 Is Null|123.654[@usn5]].`6esn`! Remove Filter(@usn5 In $#usn8 Is Null Is Null Where $@usn5 =~$`` =~$usn2).`7esn`,Filter(_usn4 In usn1 Contains False Contains `` Where _usn4[$`4esn`..]).#usn8?,[\"d_str\" =~`3esn` =~0Xa,$123456789[..0.12][..#usn7]].usn2! Union All With Distinct 0x0 Contains _usn4 Contains 123456789 As `7esn`,$_usn3[Null] As `1esn` Order By .e12 Contains 9e0 Ascending,{`7esn`:Count(*) In 01 In .0,`6esn`:$123456789[..0.12][..#usn7]} Ends With (usn1 :_usn3)<-[`5esn`:@usn6]-(:``{_usn3:0X0123456789ABCDEF In 01234567})-[ *..0x0]->(:`7esn`{@usn6:0.0[999..],#usn8:Null Is Null Is Null}) Asc,usn1 Contains False Contains `` Descending Where `2esn` Contains $999"),
    octest:ct_string("Merge usn1=(:`5esn`{`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]})<-[`5esn`:`8esn`|:usn1]->(`5esn` :`6esn`:`7esn`{`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]}) On Create Set _usn3+=$@usn5 =~$`` =~$usn2,`6esn`+=`6esn`[1.e1..$#usn7][.e0..True],(`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`})<-[`` *0xabc]->(`7esn` :#usn7{`6esn`:$`3esn` Contains 0X0123456789ABCDEF Contains 00,`1esn`:1000[123.654..9e12][1000.._usn3]}).``! =[@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7|`6esn`[1.e1..$#usn7][.e0..True]][..Extract(#usn8 In $`5esn` Is Null Is Null Where #usn8[$#usn8..]|$@usn6[..$usn1])][..(:`4esn`:#usn8{#usn8:07})-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]-(@usn5 :`3esn`:`1esn`{`3esn`:$`5esn` Is Not Null,`2esn`:9e1[0.e0..][#usn8..]})-[``:`2esn`|usn2{_usn4:0X0123456789ABCDEF Ends With 0X0123456789ABCDEF Ends With 's_str',`3esn`:'s_str' In \"d_str\" In 123456789}]-(:``{`2esn`:9e0[``][123.654],`1esn`:$_usn3[Null]})] Match `2esn`=(`` :usn2:@usn6)<-[?{@usn5:12.e12['s_str'],`1esn`:_usn3 Ends With 12e12 Ends With .e0}]-(`7esn` :`4esn`:#usn8{`2esn`:Count(*)[..`3esn`]}),(:@usn6:`7esn`{_usn3:False[`2esn`..#usn8]})-[`4esn`:`2esn`|usn2{@usn6:0.12[0.e0..][`4esn`..]}]-(_usn3 :``)-[?:usn2|#usn8{`2esn`:@usn5 In 0X0123456789ABCDEF,`1esn`:@usn6[`5esn`..$`3esn`]}]->({`1esn`:0.0[1000..][.e1..]})"),
    octest:ct_string("Delete 's_str'[.12..$#usn7][$999..`2esn`],All(usn1 In 00 Starts With _usn3 Where 12e12[Null]) Ends With (:`7esn`)<-[@usn5:#usn7|:_usn4]->({usn1:usn1[$`3esn`..$999][True..False],`7esn`:_usn3 Ends With 12e12 Ends With .e0})<-[?:usn2|#usn8{#usn8:$@usn6 Is Null Is Null,_usn4:_usn4 Starts With $@usn6 Starts With #usn7}]-({_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"}) Ends With Extract(`6esn` In 0X7 =~`` Where $`6esn`[..0X0123456789ABCDEF]|usn2[$`1esn`...0]),0.12 =~9e0"),
    octest:ct_string("Detach Delete $@usn6[..$usn1],`` =~12 =~$#usn7,`3esn` Is Not Null Is Not Null Match #usn8=(usn2 :#usn7)-[#usn8 *07..{@usn5:.e1[..$``][..0X0123456789ABCDEF],_usn3:$usn2 =~$#usn8}]-(`4esn` :`1esn`),(@usn5 :@usn6:`7esn`{`6esn`:$0[01234567..00][$`2esn`..$@usn6],`3esn`:`6esn` Starts With $@usn6})<-[ *1000..]->(@usn5 :``{`2esn`:1e1[@usn5..],`3esn`:$`6esn`[`3esn`..0e0]})<-[_usn3?:`2esn`|usn2 *010{`6esn`:#usn7 Ends With `4esn` Ends With @usn5}]->(@usn6 :#usn7{@usn5:Null Is Null Is Null}) Unwind True[0] As _usn3 Union All Return $`4esn`[$`2esn`..] As #usn8,#usn8 In $0,Any(`6esn` In 0X7 =~`` Where 0X7[0e0..]) Contains Single(`4esn` In `6esn`['s_str'..][010..] Where @usn6[`3esn`..][$7..]) As #usn7 Skip $@usn5 =~$`` =~$usn2 Limit `8esn` Ends With 999 Ends With 9e0"),
    octest:ct_string("Remove [1e1 In $#usn8 In 12e12,7 In @usn5 In $`4esn`].`5esn`!,Single(usn1 In 00 Starts With _usn3).@usn5 Union All Remove [usn1 In $123456789 Contains usn2 Where $1000 =~$`7esn`|False In $`7esn` In .0].`5esn`! Union Detach Delete 1000 In 0X0123456789ABCDEF In 01,@usn6(Distinct Null[0e0][12])[..[@usn5 In 0X7 =~.0 =~\"d_str\" Where 0X7[0e0..]]][..`8esn`(010 =~`6esn`)],1e1 Starts With #usn8 Starts With 1.e1 Detach Delete Null Starts With $`7esn` Starts With `2esn` Delete $7 Ends With 12.0 Ends With 0xabc,usn1 =~Null =~`5esn`;"),
    octest:ct_string("Remove None(#usn8 In $`5esn` Is Null Is Null Where 01234567 Ends With 12.0 Ends With 0X7).`2esn`?,[9e0 =~$`5esn`]._usn3!,(_usn4 )<-[#usn7? *00..]->(`4esn` :`1esn`{`8esn`:12 Ends With .e12 Ends With $7,`8esn`:0.0[12...12]})-[@usn5?:`3esn`|:`4esn`{`7esn`:Count(*) In 01 In .0,`6esn`:$123456789[..0.12][..#usn7]}]->(`5esn` :`8esn`).`1esn` Merge (({usn1:`2esn`[$`1esn`..][$_usn3..]})<-[?:@usn6{`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]}]->(:usn1{`8esn`:usn1 Contains $``})) On Create Set usn2:usn1,None(_usn4 In usn1 Contains False Contains `` Where .12 In $999 In `5esn`).usn2 =9e0 In 01234567,`8esn` =$@usn5 Ends With 0X0123456789ABCDEF With Distinct 999[``..][Null..] As `1esn` Order By 00 In 0.12 In `5esn` Ascending Skip 0.e0[9e1..][0.0..] Limit Count ( * )[..1e1] Union All With Distinct All(usn1 In 0x0[..`4esn`] Where .12 Starts With .12 Starts With `3esn`)[[_usn4 In usn1 Contains False Contains `` Where $usn1[0.12..]['s_str'..]|12[..True][..$`4esn`]]..][({`5esn`:0.12 Contains .e1})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:@usn5{#usn7:1e1[@usn5..]})<-[?:`6esn` *01234567..12{`7esn`:7 In 0xabc}]-(#usn7 :usn2:@usn6{`1esn`:$usn2 Contains 12.e12 Contains 00})..] As #usn8,07[0..`4esn`] As `` Order By 0 Ends With $7 Ends With _usn3 Ascending Limit 07 =~`8esn` =~0 Where $999[12.0..] Optional Match ((#usn7 :#usn8{`2esn`:12 =~usn1 =~.e12}))"),
    octest:ct_string("Return *,{`3esn`:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:0e0 =~_usn4}[All(@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7)..{_usn3:`1esn` In 999 In $#usn7,@usn5:\"d_str\" Starts With $usn1}][{#usn8:$999 Ends With $`3esn` Ends With `8esn`}..(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[`1esn`{_usn4:`3esn` Contains 0Xa}]-(#usn7 :`6esn`:`7esn`)] Skip $12 Is Null Is Null Limit usn1[$`3esn`..$999][True..False] Match _usn4=(#usn8 {@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null})-[:`2esn`|usn2 *999..{#usn8:`5esn` =~0Xa,usn1:12 =~usn1 =~.e12}]-(@usn6 ) Unwind 0xabc[$@usn5] As usn2"),
    octest:ct_string("Delete $`1esn` Is Null Is Null,_usn4 Starts With 0X7 Union Delete 00[.e1..],.12 Ends With `1esn` Ends With $`1esn`,1000 Contains $#usn7 Contains `6esn`"),
    octest:ct_string("Unwind 999 In 12 In \"d_str\" As #usn8 With Distinct *,Single(#usn7 In 01234567[$`3esn`..]) Is Null As `2esn` Unwind $0[..07] As usn1 Union Detach Delete Extract(`4esn` In $`8esn` Starts With 1000 Where 9e1 Is Null Is Null) =~Any(`4esn` In 's_str'[12..'s_str'] Where $#usn8 Is Null) =~[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`|$123456789 Ends With .e1],$7 Contains 0x0 Contains ``,[\"d_str\"] Contains _usn3(Distinct $usn1[_usn4..][usn2..]) Remove [01234567[Null..0.e0][Count(*)..$#usn8],#usn8 Contains .e0 Contains $`8esn`,123456789[1e1..0.0]].`1esn`? Create (:`3esn`:`1esn`{@usn5:$#usn8 In .e12 In 9e1,`7esn`:9e1 Starts With `1esn` Starts With 0Xa}),(`3esn` :usn2:@usn6)-[#usn7:`7esn`|`2esn` *..01{``:0X7 In 's_str' In $`1esn`,#usn8:010 Contains Count(*)}]->({`4esn`:$usn1[1e1.._usn3][$@usn6..$#usn7],`3esn`:9e0[``][123.654]})-[_usn3]-(`` {`4esn`:9e0[True..`1esn`],@usn6:7 =~9e0 =~'s_str'}) Union Create ((usn1 :`4esn`:#usn8)<-[`4esn`:`4esn`|:`7esn`{`3esn`:Count(*)[`7esn`..$12],_usn3:$999[$1000]}]->(`3esn` :`4esn`:#usn8{``:\"d_str\" Is Null Is Null})),`6esn`=(`7esn` :`2esn`:`3esn`{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}) Unwind 9e12[@usn6..$``][#usn8..Count ( * )] As _usn4"),
    octest:ct_string("Delete 0.12 Is Null Is Null Return [@usn6 In @usn5 In $`6esn` Where $usn2 Is Not Null|$`6esn`[..0X0123456789ABCDEF]][`5esn`(Distinct 0X7 In $@usn5 In 9e0,0x0)..] Order By 123456789 Starts With #usn7 Starts With `6esn` Descending,7[..0X7][..'s_str'] Ascending,None(`4esn` In 's_str'[12..'s_str'] Where 12.0[0Xa][00]) Is Not Null Desc Skip 0x0 Limit (:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[@usn6?:`1esn`]-(:`5esn`)-[@usn5?:`3esn`|:`4esn`{`7esn`:Count(*) In 01 In .0,`6esn`:$123456789[..0.12][..#usn7]}]->(`5esn` :`8esn`) Starts With Single(_usn4 In usn1 Contains False Contains `` Where $`6esn` Is Null Is Null) Merge `7esn`=((#usn8 :`1esn`{#usn7:1e1[`6esn`..]})<-[`3esn`? *123456789..999]->(_usn4 :_usn4:usn1)) On Create Set `3esn`+=00 Ends With $_usn4 Ends With $`2esn` On Match Set `6esn`:usn1,`7esn`+=07[`6esn`..][`5esn`..] Union Detach Delete `1esn`(Distinct 0.0[999..],9e0 Ends With $`7esn`) Ends With (`7esn` {`8esn`:Count ( * ) =~Count(*)})-[`8esn`?:#usn7|:_usn4{usn2:7[$`4esn`..123456789]}]->(#usn8 :usn2:@usn6{`5esn`:00 Ends With $_usn4 Ends With $`2esn`,usn2:#usn7 Starts With 0 Starts With 12})-[_usn3?:`2esn`|usn2 *010{`6esn`:#usn7 Ends With `4esn` Ends With @usn5}]->(`1esn` :``{`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]}) Ends With (#usn7 :`2esn`:`3esn`)<-[`2esn`?*..]->(:#usn8{`5esn`:0 Contains 12e12}),$`8esn` Starts With 1000,({`1esn`:@usn6})<-[_usn4?:_usn4|:@usn5 *123456789..999{`2esn`:@usn5 In $`6esn`}]->(:`3esn`:`1esn`{`1esn`:0.0[1000..][.e1..]}) Is Null Is Null Detach Delete _usn3 Is Null,01 Contains 123456789"),
    octest:ct_string("Unwind $`4esn`[9e1..][0..] As usn1;"),
    octest:ct_string("Remove (usn2 :`6esn`:`7esn`{`6esn`:`` Contains 12 Contains True,usn2:$`2esn`[123456789..][00..]})-[_usn3 *010]->(:usn1{`8esn`:usn1 Contains $``})._usn4?,usn1:`3esn`:`1esn`,{`2esn`:9e1 In 01 In 999,`5esn`:$@usn6[..$usn1]}.@usn5! Unwind .e12 =~0.0 =~9e0 As `8esn` Union Detach Delete 07 In Count ( * ) In \"d_str\",Null Is Not Null"),
    octest:ct_string("Detach Delete False[..12.e12] Create ({``:.e12[..0.e0][..$`1esn`]})-[_usn3:#usn8]-(usn1 :#usn7) Unwind $123456789 Is Null Is Null As _usn3"),
    octest:ct_string("Detach Delete $`7esn` Is Not Null Detach Delete 0Xa In .e1 In Count(*) Remove #usn7(Distinct $@usn6[..$usn1],9e12 Is Not Null Is Not Null).usn1 Union Delete .e1[usn1..] Remove Any(usn2 In 1000 Contains 0.e0 Where @usn6[`3esn`..][$7..]).`1esn`,#usn7:_usn4:usn1,(#usn7 {`2esn`:$``[_usn4..][`7esn`..],`3esn`:#usn7 Ends With 9e1})<-[`2esn`:usn1|`3esn` *0Xa]->(`2esn` :`1esn`{``:9e1 Starts With _usn3 Starts With `4esn`})._usn3!"),
    octest:ct_string("Return Distinct *,All(`4esn` In `6esn`['s_str'..][010..] Where $`8esn`[``..][123.654..]) Is Null Is Null As `6esn`,[#usn8 In $`5esn` Is Null Is Null Where $123456789 Ends With $`6esn`][Any(`4esn` In $`8esn` Starts With 1000 Where 123.654 Starts With usn1 Starts With @usn5)..] As `8esn` Order By 0X0123456789ABCDEF[.e0..$`4esn`] Descending,Extract(usn2 In 1000 Contains 0.e0) Ends With All(`4esn` In `6esn`['s_str'..][010..] Where $0[01234567..00][$`2esn`..$@usn6]) Ends With Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where $`4esn`[9e1..][0..]) Descending,9e1 Starts With _usn3 Starts With `4esn` Descending Skip {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`} In (:_usn3{`6esn`:.e12[..0.e0][..$`1esn`],`8esn`:7 In 0xabc})-[#usn7:`1esn` *07..]->(:`4esn`:#usn8{_usn4:'s_str' In \"d_str\" In 123456789,`2esn`:0.12 Ends With $usn1 Ends With $@usn5}) In All(@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7) Remove Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `7esn` Ends With $usn2 Ends With 999).@usn5! Union Return *,[#usn8 In $`5esn` Is Null Is Null Where 0.e0 Ends With 12 Ends With $7][..{@usn5:12 =~usn1 =~.e12,`2esn`:0X7 =~`4esn` =~`8esn`}] As #usn7,@usn6 Starts With `7esn` Starts With Null Skip Count ( * )[..usn1][..12.e12] Limit (`7esn` :@usn6:`7esn`)<-[:``|:_usn4{`8esn`:0 Ends With $7 Ends With _usn3}]-(usn1 {#usn7:Count ( * )[@usn6..0x0]})<-[`8esn`]->(#usn8 ) Contains usn2(Distinct $1000[01234567],00 In 0.12 In `5esn`) Contains Any(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where usn2[$`1esn`...0]) Union Unwind $#usn7 As `5esn`"),
    octest:ct_string("Delete $#usn8[0xabc][`3esn`],(:`1esn`{`8esn`:Count ( * ) =~Count(*)})-[`2esn`*..$usn1]->(:@usn5{_usn4:.12 Starts With 0Xa})-[:`3esn`|:`4esn` *999..{`6esn`:$123456789[..0.12][..#usn7],`3esn`:0 Ends With $7 Ends With _usn3}]->(`1esn` {_usn4:12.e12 Ends With 01 Ends With .e1})[Any(@usn6 In @usn5 In $`6esn` Where 9e0[$_usn3..0X7][7..$#usn8])],$usn2[False..`7esn`][`7esn`.._usn3] Remove [`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 7 In $`3esn` In #usn7].@usn5,Extract(usn1 In 0x0[..`4esn`] Where 1000 Ends With 1000 Ends With $`4esn`|@usn6[$`3esn`])._usn3?"),
    octest:ct_string("With  ({`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`4esn` {@usn6:True[..'s_str'][..01]}) In Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where 07[12e12]) As `4esn`,$@usn5 Contains 01 As ``,$usn1[#usn8..][``..] As `2esn` Order By 0e0[`2esn`..010] Ascending,Any(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7)[{#usn8:`5esn` =~0Xa,@usn5:0X7[999][$1000]}..[`` Starts With 12,$`1esn` Starts With $999]][`7esn`(Distinct $usn2[..12.0])..`1esn`(Distinct 1e1[0.0],0.0[1000..][.e1..])] Descending Limit `4esn` =~123456789 Union All Create `7esn`=((({@usn6:0.12 In $`4esn` In `6esn`,``:1e1 Is Null})<-[`7esn`?:`8esn`|:usn1]-(`7esn` :#usn8)-[@usn5?:`3esn`|:`4esn`{`7esn`:Count(*) In 01 In .0,`6esn`:$123456789[..0.12][..#usn7]}]->(`5esn` :`8esn`))),`5esn`=((:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[`6esn`:``|:_usn4 *..01]->(`5esn` {_usn4:0X7 =~``})-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(usn2 :usn1{``:9e12 Ends With 0X0123456789ABCDEF Ends With #usn7})) Union All Detach Delete 1000 Ends With 1000 Ends With $`4esn`,{#usn8:$`5esn` In False,usn2:$`7esn` In $7}[..Any(@usn6 In @usn5 In $`6esn` Where 010 =~$usn2 =~1e1)],{_usn3:0.12 Is Null Is Null,`1esn`:9e12[0.0..12.e12]} Ends With {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]} Optional Match #usn7=(((`5esn` :`6esn`:`7esn`{`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->(`2esn` :usn2:@usn6)-[?:@usn6 *00..{@usn5:$`5esn`[False],`4esn`:usn1[..$_usn4][..``]}]->(:``{`1esn`:`6esn` =~$_usn3}))),(((_usn4 :`2esn`:`3esn`{#usn8:123456789[$#usn7..],#usn7:07[12e12]})-[:#usn7|:_usn4 *123456789..999]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})-[:``|:_usn4 *01234567..12{`2esn`:$`` Is Null Is Null,``:$`4esn`[usn1..$#usn8][12.0..`3esn`]}]-({usn1:0x0[0X7..][usn1..]}))) Detach Delete .e12 Contains 9e0,$`2esn`[``..],Extract(@usn6 In @usn5 In $`6esn` Where 9e0 =~$`5esn`|`2esn`[$`1esn`..][$_usn3..]) =~Extract(@usn6 In @usn5 In $`6esn` Where .12[`1esn`..][$`3esn`..]|Count ( * ) =~Count(*))"),
    octest:ct_string("Return Distinct (_usn3 :`6esn`:`7esn`{usn1:$_usn3[9e1][$_usn4],`8esn`:123456789 =~_usn4 =~$0})<-[#usn8? *12..0xabc]-(:`6esn`:`7esn`{`3esn`:`8esn`[$``]})-[:`6esn`{@usn6:$0 =~$0 =~.e0}]-({`1esn`:@usn6}) In _usn3(0x0[0X7..][usn1..]) In None(#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str') As _usn4 Order By [#usn8 Ends With `4esn` Ends With $`4esn`,$`2esn` =~'s_str',$#usn7[...e12][..$7]][#usn7(0x0 =~_usn4,`5esn` =~0Xa)][{#usn8:$999 Ends With $`3esn` Ends With `8esn`}] Descending Skip 07[12][$`6esn`] Remove ({usn2:00,#usn8:usn2 Ends With $`5esn` Ends With `2esn`})-[#usn8?]-(`2esn` :`5esn`{`4esn`:$usn1[_usn4..][usn2..],`3esn`:999 In $_usn4 In 0X7}).@usn6?,{`3esn`:`4esn`[7..][1000..],usn2:123456789 Starts With `2esn` Starts With 9e12}.`8esn`!,@usn6(Distinct 0X0123456789ABCDEF[.e0..$`4esn`],$0 Ends With $#usn7 Ends With .12).`5esn`! Create ((`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})),#usn7=((#usn7 :`5esn`)<-[:`2esn`|usn2 *07..]-({`7esn`:`6esn` Starts With $@usn6,``:`6esn` =~$_usn3})<-[`1esn`?:`1esn` *01234567..12]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})) Union All Match ``=((@usn6 :_usn4:usn1{@usn6:Null Is Null Is Null,#usn7:`5esn`[Count ( * )..][\"d_str\"..]})-[*{`2esn`:$1000[01234567]}]-(`4esn` :`1esn`)) Merge #usn8=(({`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})<-[`6esn`?:_usn3|:`4esn` *12..0xabc]-(`1esn` :usn1$@usn6)<-[#usn8?:`3esn`|:`4esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]-({_usn3:$`1esn` Starts With @usn6})) Detach Delete 12 Ends With 01 Ends With 1e1,010 =~$usn2 =~1e1,`1esn` In 999 In $#usn7"),
    octest:ct_string("Create (((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})-[:`7esn`|`2esn` *..0X7{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]-(`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})-[`4esn`? *00..]-(:`4esn`:#usn8{@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]}))) Match (usn2 :#usn8{`3esn`:123.654[@usn5]})-[@usn5?:@usn6$_usn3]->(:_usn4:usn1{`1esn`:123456789 Starts With `2esn` Starts With .0,@usn6:12.e12 Contains `5esn`}),((:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[usn1?:`1esn` *0X0123456789ABCDEF..{usn2:$`4esn`[12.e12..][0.0..]}]-(#usn7 :`5esn`)) Where 1e1[..False] Union Merge `5esn`=((#usn8 :`1esn`{#usn7:1e1[`6esn`..]})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->({usn1:`2esn`[$`1esn`..][$_usn3..]})) On Match Set `` =None(`4esn` In 's_str'[12..'s_str'])[Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`)..][Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where $@usn6 Contains Count ( * ))..],#usn7($`8esn`[$``..$7][$1000..$`7esn`],`2esn` In 7 In usn2).`6esn`? =$_usn4['s_str'..],`4esn`+=$`7esn` Ends With $usn2 On Match Set `` =Count(*) Ends With 010,None(usn1 In 0x0[..`4esn`] Where $999[12.0..]).@usn6 =0 Is Not Null Is Not Null,`7esn`+=`4esn`(Distinct .0 Starts With `2esn` Starts With `6esn`) Contains Extract(@usn6 In @usn5 In $`6esn` Where $@usn6[..12e12]|$@usn6 =~usn1) Contains (@usn6 {_usn3:1e1[.e1..],`1esn`:$#usn8})-[`4esn`?:`8esn`|:usn1 *..0x0]->(:`7esn`{``:$`1esn` Starts With @usn6}) Detach Delete {usn2:123456789 Starts With `2esn` Starts With 9e12} Ends With All(usn2 In 1000 Contains 0.e0 Where 01234567[Null..0.e0][Count(*)..$#usn8]),9e0[``][123.654] Unwind 1000 Contains 0.e0 As #usn8"),
    octest:ct_string("Merge `8esn`=(:`8esn`) On Match Set [999[``..][Null..],`5esn` =~0Xa].@usn6? =[`6esn` In 0X7 =~`` Where `` Contains 12 Contains True|@usn5[..True][..0X7]][(:`1esn`{@usn5:123456789 Starts With `2esn` Starts With 9e12})-[#usn7? *999..]-(@usn5 :_usn4:usn1{`1esn`:07[1e1],`7esn`:12e12[$`5esn`][07]})-[`6esn`:``|:_usn4 *..01]->(`7esn` :`6esn`:`7esn`{_usn4:07 In `5esn` In 12e12})..{`4esn`:9e0 Starts With `6esn`}][Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `5esn`[`1esn`..`1esn`])..(`3esn` :usn2:@usn6)<-[`7esn`?:@usn5|`8esn`]-(`1esn` :``)],#usn8+={`8esn`:9e1 In 01 In 999}[usn1(1e1[..#usn8][..'s_str'])..{#usn8:$999 Ends With $`3esn` Ends With `8esn`}],`3esn` =7[..0X7][..'s_str'] Match ``=(((`5esn` :`6esn`:`7esn`{`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->(`2esn` :usn2:@usn6)-[?:@usn6 *00..{@usn5:$`5esn`[False],`4esn`:usn1[..$_usn4][..``]}]->(:``{`1esn`:`6esn` =~$_usn3}))) Where $`6esn` Is Null Is Null Union With  $@usn5[0.12..][@usn5..],010 Contains 0X0123456789ABCDEF Order By $12[01..][1.e1..] Descending Skip .12[.e12..0.e0][0.e0..$`2esn`] Where $_usn4[12e12][`4esn`] Merge `1esn`=(#usn7 {@usn5:`5esn`[.e1][0Xa],@usn6:Count(*)[`7esn`..$12]})-[? *999..]-(`` :`1esn`) On Create Set usn2 =0.0[..12e12][..$0] Merge `2esn`=(_usn4 {`8esn`:9e1 In 01 In 999})<-[:_usn3|:`4esn`{_usn4:$`3esn` =~$`6esn` =~`8esn`,`5esn`:0X7[0e0..]}]-(:`8esn`) On Match Set @usn5+=`1esn`[9e12..$`8esn`][usn2..$``],usn1 =[12.e12 Ends With 01 Ends With .e1,$@usn5[0.12..][@usn5..],$usn1 In 1000 In $#usn7] Is Not Null On Match Set _usn4 =0 Contains 12e12,`1esn`:#usn8,`7esn` =0 Is Not Null"),
    octest:ct_string("With Distinct *,[$`7esn` Ends With `1esn` Ends With True,$999[12.0..]][`7esn`(Distinct $`2esn`[$`2esn`..])..][Any(usn1 In $123456789 Contains usn2 Where 0.e0 Ends With 12 Ends With $7)..] Limit Single(@usn5 In .12[#usn7][$`8esn`] Where `6esn` =~$_usn3) Ends With {`2esn`:.12 Ends With `1esn` Ends With $`1esn`,`5esn`:9e12[@usn6..$``][#usn8..Count ( * )]} Ends With (:_usn3{`2esn`:$`5esn` Is Null,@usn6:#usn7 Starts With `1esn`})<-[``?:@usn6]-(:`2esn`:`3esn`{`6esn`:01 In _usn3 In 12,_usn3:$`3esn` =~$`6esn` =~`8esn`})<-[:_usn4|:@usn5 *..0X7]->(`4esn` {`7esn`:.e0[..999][..0X7]}) Return Distinct *,.e1[usn1..],$1000[.e0..] As `3esn` Skip `5esn`[Count ( * )..][\"d_str\"..] Merge (`7esn` {_usn3:usn1 Contains $``})<-[usn1]->(:#usn7{`7esn`:\"d_str\",usn2:True[`4esn`][$`6esn`]})-[:`1esn` *010{`2esn`:$_usn3[9e1][$_usn4],`7esn`:`7esn`[...e1][..\"d_str\"]}]->({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12}) On Create Set `4esn` =.e12[.12..][_usn4..] On Match Set @usn5+=`` In `6esn`,Filter(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`` Is Null Is Null).`` =12.e12 Is Not Null"),
    octest:ct_string("Unwind $usn1[1e1.._usn3][$@usn6..$#usn7] As usn1 With Distinct Count ( * ) Ends With 1000 Ends With 12 As _usn4,False[..12.e12] Skip {usn2:123456789 Starts With `2esn` Starts With 9e12} Ends With All(usn2 In 1000 Contains 0.e0 Where 01234567[Null..0.e0][Count(*)..$#usn8]) Where 0 Is Null Is Null Delete `2esn`[_usn3..$``],#usn8 Starts With 0x0 Starts With $@usn5"),
    octest:ct_string("Remove {`1esn`:`7esn`[Null..][@usn5..]}.`7esn`! Create (({`5esn`:_usn3 Contains @usn6 Contains 1.e1,`7esn`:$12[01..][1.e1..]})-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})<-[usn1?{#usn7:9e12 Is Not Null Is Not Null,usn2:`3esn` =~0.0 =~$``}]->(`5esn` :`3esn`:`1esn`{`6esn`:$1000[.e0..]})),_usn4=(@usn5 {`1esn`:0[usn2..]})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`5esn` {_usn4:0X7 =~``})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(:`6esn`:`7esn`{`3esn`:`8esn`[$``]}) Remove `4esn`:`3esn`:`1esn`"),
    octest:ct_string("Create ``=(:``{#usn8:$`2esn`[..`2esn`]}),`6esn`=((`3esn` :#usn8)) Remove {`2esn`:$`5esn` Contains Count(*) Contains #usn7,_usn4:Null Starts With $`7esn` Starts With `2esn`}.`6esn`!,Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where True Contains @usn6|123456789 Starts With `2esn` Starts With 9e12).usn2?,Extract(usn1 In 0x0[..`4esn`] Where 12.e12 Contains `5esn`|$123456789 Contains 01 Contains 0.12).``! Union All Optional Match #usn8=((`4esn` :`7esn`{`7esn`:@usn6 Contains _usn4 Contains $`4esn`})<-[_usn3?:`2esn`|usn2 *010{`6esn`:#usn7 Ends With `4esn` Ends With @usn5}]->(#usn7 :`3esn`:`1esn`)<-[?{`4esn`:12e12[$`5esn`][07]}]-(:`1esn`{_usn4:$_usn3[Null]})) Where 12 =~usn1 =~.e12 Union All Merge ((:#usn8)<-[`2esn`?]-(:usn2:@usn6{_usn4:$_usn4[$`8esn`..][07..],#usn7:12.e12[...0][..0x0]})<-[`5esn`? *999..{#usn7:0X7[12]}]->(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]})) On Create Set `4esn` =.e12[.12..][_usn4..] On Create Set #usn7+=$123456789[0.0..] Detach Delete {`3esn`:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:0e0 =~_usn4}[All(@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7)..{_usn3:`1esn` In 999 In $#usn7,@usn5:\"d_str\" Starts With $usn1}][{#usn8:$999 Ends With $`3esn` Ends With `8esn`}..(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[`1esn`{_usn4:`3esn` Contains 0Xa}]-(#usn7 :`6esn`:`7esn`)],({_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]->(`6esn` {`8esn`:`8esn` In $@usn5}) In None(@usn5 In 0X7 =~.0 =~\"d_str\" Where #usn8 Ends With `4esn` Ends With $`4esn`) In Any(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $123456789[..0x0][..`4esn`])"),
    octest:ct_string("Merge `3esn`=((@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})<-[{_usn3:12.e12 In $0 In Count(*)}]-(:#usn7{`2esn`:.12 Starts With @usn5 Starts With $#usn8})) On Create Set `4esn` =010 In `7esn`,usn2+=0.e0[@usn6][0x0] Optional Match ((`4esn` :`2esn`:`3esn`{`1esn`:123456789[1000]})<-[?{`8esn`:_usn3 Ends With 0x0 Ends With 01234567,#usn8:$`7esn` Is Null Is Null}]->(:``{#usn8:$`2esn`[..`2esn`]})<-[@usn5:#usn7|:_usn4]->({usn1:usn1[$`3esn`..$999][True..False],`7esn`:_usn3 Ends With 12e12 Ends With .e0})),_usn3=(`6esn` :`7esn`)-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]->(usn1 {#usn7:Count ( * )[@usn6..0x0]}) Where @usn6[`3esn`..][$7..] Optional Match `5esn`=((:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[`6esn`:``|:_usn4 *..01]->(`5esn` {_usn4:0X7 =~``})-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(usn2 :usn1{``:9e12 Ends With 0X0123456789ABCDEF Ends With #usn7})) Where usn1 In 1000 In $`5esn`"),
    octest:ct_string("With Distinct *,01234567 Is Null Is Null Order By `3esn`(Distinct 0.0[999..])[Any(`6esn` In 0X7 =~`` Where $0 Is Not Null)..[010 =~$usn2 =~1e1,`1esn`[@usn6..$123456789]]] Asc,All(_usn4 In usn1 Contains False Contains `` Where $`4esn`[$`2esn`..])[..Single(usn1 In $123456789 Contains usn2 Where $usn1[0.12..]['s_str'..])][..``(Distinct `1esn`[0e0..])] Ascending,0X7[.e12..01234567] Descending Skip [999[.e12][01],999 In 9e1 In 7,0xabc Contains Null Contains 9e12][All(`6esn` In 0X7 =~`` Where 0.12[Null..])..[`4esn` In $`8esn` Starts With 1000 Where False[`2esn`..#usn8]]][count(010 Contains Count(*))..(:`4esn`:#usn8)-[:#usn8 *..0X7]->({`6esn`:9e1[.12..],`5esn`:0.12 In $`4esn` In `6esn`})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`1esn` :usn2:@usn6)] Optional Match `3esn`=((`2esn` :_usn4:usn1{`7esn`:7 In 0xabc})<-[:@usn5|`8esn` *0Xa{usn1:$1000 Contains $`3esn`}]->(`2esn` :``)-[usn2?]-(`2esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})),((#usn8 :`1esn`{#usn7:1e1[`6esn`..]})<-[`1esn`{`6esn`:$_usn4[`3esn`][0],_usn3:999 Contains Count ( * ) Contains 123.654}]->(`7esn` :`7esn`)) Detach Delete 999 In 12 In \"d_str\",$`5esn` Contains Count(*) Contains #usn7"),
    octest:ct_string("Unwind None(usn1 In 0x0[..`4esn`] Where $`2esn` Contains usn1 Contains `2esn`)[..Extract(`6esn` In 0X7 =~`` Where $usn2 Contains 12.e12 Contains 00|$#usn8 Ends With 1000 Ends With .0)][..[@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where #usn7 Ends With 9e1]] As `8esn` Union Return 0 =~12.e12 =~$``,@usn5 Ends With 1.e1 Ends With 0X0123456789ABCDEF As `8esn` Order By $`7esn` Starts With 07 Ascending Merge (usn1 {`4esn`:$123456789[0.0..],`2esn`:12 Ends With 01234567})<-[usn1? *..0X7]-(usn1 :`4esn`:#usn8)-[ *010{@usn5:Null Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)}) On Match Set [0X7 =~.0 =~\"d_str\",9e1[...e0]].@usn5 =Single(@usn5 In .12[#usn7][$`8esn`] Where `6esn` =~$_usn3) Ends With {`2esn`:.12 Ends With `1esn` Ends With $`1esn`,`5esn`:9e12[@usn6..$``][#usn8..Count ( * )]} Ends With (:_usn3{`2esn`:$`5esn` Is Null,@usn6:#usn7 Starts With `1esn`})<-[``?:@usn6]-(:`2esn`:`3esn`{`6esn`:01 In _usn3 In 12,_usn3:$`3esn` =~$`6esn` =~`8esn`})<-[:_usn4|:@usn5 *..0X7]->(`4esn` {`7esn`:.e0[..999][..0X7]}),{@usn6:usn1 In 1000 In $`5esn`,@usn6:9e0[``][123.654]}.`3esn`! =$999 In $`8esn` In `5esn` On Match Set `6esn` =7[..0X7][..'s_str'],[$`5esn` Contains $@usn6].`1esn` =1e1[@usn5..],Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 07 In 0 In 's_str').@usn5? =True Is Not Null Union All Unwind 123456789 =~Filter(usn2 In 1000 Contains 0.e0 Where 0X7[0e0..]) =~{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999} As `4esn` Return *,{_usn4:$123456789 Is Not Null Is Not Null} As `5esn`,None(usn1 In 0x0[..`4esn`] Where $`2esn` Contains usn1 Contains `2esn`)[..Extract(`6esn` In 0X7 =~`` Where $usn2 Contains 12.e12 Contains 00|$#usn8 Ends With 1000 Ends With .0)][..[@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where #usn7 Ends With 9e1]] As _usn3 Order By $_usn4[$`1esn`] Asc,$7 Ends With `5esn` Descending Limit .e1 Ends With _usn4 Ends With @usn5 Merge (`7esn` {_usn3:usn1 Contains $``})<-[usn1]->(:#usn7{`7esn`:\"d_str\",usn2:True[`4esn`][$`6esn`]})-[:`1esn` *010{`2esn`:$_usn3[9e1][$_usn4],`7esn`:`7esn`[...e1][..\"d_str\"]}]->({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12}) On Create Set `4esn` =.e12[.12..][_usn4..] On Match Set @usn5+=`` In `6esn`,Filter(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`` Is Null Is Null).`` =12.e12 Is Not Null"),
    octest:ct_string("Unwind 1.e1 Is Not Null Is Not Null As `4esn` Delete Single(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where .12 Starts With @usn5 Starts With $#usn8) =~(@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})<-[_usn4?:`6esn`]-(`2esn` {`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null}) =~(_usn4 :usn1)-[@usn5? *999..]-(usn1 :`4esn`:#usn8)-[usn2?:`2esn`|usn2*..{@usn5:$1000[01234567],@usn5:0x0[$`3esn`..010][$#usn7..00]}]->(`4esn` {#usn8:`1esn`[0e0..],#usn7:$`6esn`[..0X0123456789ABCDEF]}),07,`2esn`[$`3esn`..] With  123.654 Is Not Null Is Not Null As `3esn`,$usn1 In 1000 In $#usn7 As `8esn` Order By .12 Starts With $usn2 Asc,[usn1 In 00 Starts With _usn3 Where False[.e1..Null]|1000[0.0][Null]][Filter(usn2 In 1000 Contains 0.e0 Where $`7esn` Ends With $`2esn` Ends With $usn1)..][Single(usn2 In 1000 Contains 0.e0 Where 0e0 Is Not Null Is Not Null)..] Asc,{`8esn`:$123456789 Is Null Is Null,_usn3:$`4esn` Starts With 1e1}[(#usn7 :`2esn`:`3esn`)<-[`8esn`?]->(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})..All(_usn4 In usn1 Contains False Contains `` Where $`8esn`[$``..$7][$1000..$`7esn`])] Descending Skip $@usn5[$#usn8..][9e1..] Limit $123456789[0X7..12.e12] Where 0.12[0.e0..][`4esn`..] Union Optional Match ((_usn4 {`8esn`:9e1 In 01 In 999})),`1esn`=(:_usn4:usn1)-[#usn7?:_usn4|:@usn5{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]->(:`2esn`:`3esn`)<-[``]-(usn1 {#usn7:.e12[..0.e0][..$`1esn`],usn1:010 Contains Count(*)}) Where @usn5 Contains $`1esn` Contains 999 Union All With Distinct 123.654 Is Not Null Is Not Null As `3esn`,00 As `4esn` Order By [usn1 In 00 Starts With _usn3 Where 00][#usn8(Distinct $`2esn`[$123456789..$`1esn`][0Xa..$``],@usn6[`5esn`..$`3esn`])..['s_str'[..0.e0][..`1esn`],`5esn`[.e1][0Xa],123456789 In $usn2 In `6esn`]] Asc,999 Contains `7esn` Desc,Filter(@usn5 In $#usn8 Is Null Is Null Where 9e1 Contains $`3esn` Contains 01234567) =~['s_str'[..0.e0][..`1esn`],`5esn`[.e1][0Xa],123456789 In $usn2 In `6esn`] Ascending Skip 0e0 Is Null Is Null;"),
    octest:ct_string("Create #usn7=((`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`3esn`?:_usn3|:`4esn`]-(`4esn` {`6esn`:$12[..``][..$7]})),@usn5=(((_usn3 :_usn3{_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})-[#usn8:`3esn`|:`4esn` *0..010]-(:usn1{_usn3:'s_str'[..0.0][..$`4esn`],`4esn`:$123456789 Is Not Null Is Not Null})-[usn1? *07..{`5esn`:#usn7 Is Not Null Is Not Null}]-(`2esn` :usn1{`8esn`:$``[_usn4..][`7esn`..]})))"),
    octest:ct_string("Return Distinct ({@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]})-[`6esn`?:`4esn`|:`7esn` *0..010{_usn3:$`1esn` Starts With @usn6}]-(`2esn` {#usn8:12.e12[0e0..7]}),@usn5 Ends With 1.e1 Ends With 0X0123456789ABCDEF As `8esn`,[#usn8 In $`5esn` Is Null Is Null Where 0.e0 Ends With 12 Ends With $7][..{@usn5:12 =~usn1 =~.e12,`2esn`:0X7 =~`4esn` =~`8esn`}] As #usn7 Order By $@usn6[usn2(`3esn`[$`1esn`..])] Asc,12 Ends With 01 Ends With 1e1 Ascending Skip 07[07] Limit 123.654[@usn5] With Distinct Count ( * )[@usn6..0x0],.e0 Is Not Null Is Not Null As `2esn`,usn2 Is Not Null Is Not Null As `2esn` Skip $@usn5 =~$`` =~$usn2 Where `` Starts With 12 Merge ((:usn2:@usn6{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8})<-[#usn8?:`6esn` *0..010]-(`` :@usn5)-[`3esn`{#usn7:12e12 Ends With 010 Ends With .0}]->(`4esn` :`7esn`{`7esn`:@usn6 Contains _usn4 Contains $`4esn`})) On Match Set [#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|$`7esn` Is Not Null].@usn6! =999[$`6esn`],#usn8+=$@usn6 In usn2 In 123456789,_usn3 =$`4esn`[12.e12..][0.0..];"),
    octest:ct_string("Match (`8esn` {`3esn`:12e12 Is Not Null})-[_usn4?:_usn4|:@usn5 *123456789..999{`2esn`:@usn5 In $`6esn`}]->(`1esn` {`4esn`:$`7esn`[$usn1..][0.0..],`1esn`:$123456789[..0x0][..`4esn`]})-[`1esn`:`1esn`{``:_usn3[...e1],`2esn`:.12[`1esn`..][$`3esn`..]}]-(`7esn` :_usn4:usn1) Where 0xabc Ends With $7 Ends With $`2esn` Optional Match ({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(`4esn` :`6esn`:`7esn`{`8esn`:0X7[..12e12]})-[?:@usn6{`8esn`:12 Ends With .e12 Ends With $7,`8esn`:0.0[12...12]}]-(`3esn` :``),(@usn6 :`5esn`{_usn3:010[$`8esn`..][0..],_usn3:`2esn` Is Not Null Is Not Null}) Merge usn1=((:#usn8{#usn7:12e12 Ends With 010 Ends With .0})-[#usn8? *0xabc]-(#usn8 :`4esn`:#usn8)) On Match Set #usn7($123456789 Contains 01 Contains 0.12).usn2! =.e12 =~0.0 =~9e0,All(#usn7 In 01234567[$`3esn`..] Where $@usn6 =~usn1).`4esn` =$999[12.0..],`8esn`+=Filter(_usn4 In usn1 Contains False Contains `` Where 9e0 =~$`5esn`) =~``($`4esn`[usn1..$#usn8][12.0..`3esn`]) =~Single(usn2 In 1000 Contains 0.e0);"),
    octest:ct_string("Unwind ``[Count(*)..][@usn5..] As usn1 Detach Delete {`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null}[..[_usn4 In usn1 Contains False Contains `` Where True[..'s_str'][..01]]] Union All Remove (`2esn` :`6esn`:`7esn`{`6esn`:$#usn8 Ends With 1000 Ends With .0,`7esn`:010 =~`6esn`})-[{@usn5:$123456789 Ends With .e1,#usn8:0x0 =~_usn4}]-(`3esn` {`8esn`:$usn2[12..$`7esn`][$0..$`7esn`]})<-[? *0..010]-(#usn8 :`4esn`:#usn8).`6esn`!,[@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null].`5esn`? Remove Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where .e12[..0.e0][..$`1esn`]).`5esn`!,Any(@usn6 In @usn5 In $`6esn` Where False Contains `3esn`).`5esn`? Remove {`6esn`:9e1 Contains $`3esn` Contains 01234567}.`2esn`"),
    octest:ct_string("Create usn1=((usn2 :`7esn`{@usn5:usn1[$`3esn`..$999][True..False],`8esn`:$`5esn` Is Null Is Null})-[@usn5?:@usn6*..]-(@usn5 {@usn6:0.0[999..],#usn8:Null Is Null Is Null})<-[`6esn`?{`7esn`:@usn6 Contains _usn4 Contains $`4esn`}]-(`1esn` :``)),(:usn1) Detach Delete $`6esn` =~Null =~9e12 Delete Any(usn1 In 00 Starts With _usn3 Where `2esn` Is Not Null Is Not Null) Starts With All(`4esn` In $`8esn` Starts With 1000 Where 1.e1[0X0123456789ABCDEF..][$`5esn`..]) Starts With {`4esn`:$usn2 Contains 12.e12 Contains 00,`5esn`:7[$`4esn`..123456789]},0.12 Is Null Is Null Union Merge `8esn`=((`2esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})) On Match Set Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 01 In _usn3 In 12|0Xa Is Not Null Is Not Null)._usn3? =Single(`6esn` In 0X7 =~`` Where 12.0[..$7][..999]) Starts With {_usn3:0.12 Is Null Is Null,`1esn`:9e12[0.0..12.e12]} Starts With (`8esn` :@usn5)-[`6esn`?:_usn3|:`4esn` *12..0xabc]-(usn2 :#usn8{`3esn`:123.654[@usn5]})<-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(#usn8 :`5esn`{usn2:.e1 Starts With 0.0 Starts With `6esn`,#usn8:9e12 =~01 =~$`7esn`}),#usn7+=$`7esn` =~.e1,Filter(`4esn` In 's_str'[12..'s_str'] Where $123456789 Contains 01 Contains 0.12).#usn8! =.12[`1esn`..] On Create Set #usn8+=12[0X7..@usn6],{``:12e12[$`5esn`][07],_usn3:$`6esn` Is Null Is Null}.usn1 =$`6esn` Is Not Null Is Not Null Optional Match `1esn`=(((`` :@usn5)-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]->(usn1 {#usn7:Count ( * )[@usn6..0x0]})-[@usn5:`8esn`|:usn1]-(#usn7 :`5esn`))),usn1=(_usn4 :`8esn`{`3esn`:False[.e1..Null],`3esn`:9e0 =~$`5esn`}) Where 9e1 Is Null Is Null Merge ((({`8esn`:$@usn5 Contains 01,`2esn`:123.654 Contains #usn8})-[usn2?]-(`3esn` {_usn4:12.e12 Ends With 01 Ends With .e1})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`}))) On Match Set `2esn` =$usn2[False..`7esn`][`7esn`.._usn3],``+=_usn4 Ends With 01 Ends With $`1esn`,``+=01 Ends With .e0 On Match Set `7esn` ={`4esn`:$@usn6 Contains 0 Contains $`2esn`}[[@usn5 In 0X7 =~.0 =~\"d_str\"|$`1esn` Ends With _usn4 Ends With `3esn`]..Extract(@usn5 In .12[#usn7][$`8esn`] Where $usn2 Contains 12.e12 Contains 00|9e0 Ends With $`7esn`)],@usn6 =`5esn` In $999 Union All With  [@usn5 In $#usn8 Is Null Is Null Where $`2esn` Starts With .e0 Starts With 12.0|$`7esn` Is Null Is Null][``(Distinct 0X7 In $@usn5 In 9e0,12.0[0Xa][00])][`6esn`(Distinct 12.e12 In $0 In Count(*),$`2esn`[$`2esn`..])] As `3esn`,`` =~12 =~$#usn7,False Is Not Null Is Not Null As `2esn` Skip 999[$usn2..] Limit 00 In 0.12 In `5esn` Where $7[.12] Merge #usn8=(((`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[ *..7]-(:_usn3{@usn6:$`7esn` Is Null Is Null})-[:`7esn`|`2esn` *12..0xabc]->(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]})))"),
    octest:ct_string("Optional Match ((`4esn` :`2esn`:`3esn`{`1esn`:123456789[1000]})<-[?{`8esn`:_usn3 Ends With 0x0 Ends With 01234567,#usn8:$`7esn` Is Null Is Null}]->(:``{#usn8:$`2esn`[..`2esn`]})<-[@usn5:#usn7|:_usn4]->({usn1:usn1[$`3esn`..$999][True..False],`7esn`:_usn3 Ends With 12e12 Ends With .e0})),_usn3=(`6esn` :`7esn`)-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]->(usn1 {#usn7:Count ( * )[@usn6..0x0]}) Where @usn6[`3esn`..][$7..] Union All Delete Extract(`4esn` In $`8esn` Starts With 1000 Where 9e1 Is Null Is Null) =~Any(`4esn` In 's_str'[12..'s_str'] Where $#usn8 Is Null) =~[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`|$123456789 Ends With .e1] Merge `6esn`=(({`4esn`:$_usn3[..Count ( * )][..@usn5],#usn8:_usn3 =~00})<-[`5esn`?:#usn8{#usn7:0.12 Ends With $usn1 Ends With $@usn5}]->({`1esn`:$@usn5 =~$`` =~$usn2})) Match (_usn4 :#usn8)<-[`6esn`? *..7{`3esn`:123456789[$#usn7..]}]-(:`2esn`:`3esn`{`7esn`:$_usn4[#usn8..]})-[usn1?:_usn3|:`4esn` *123456789..999{`6esn`:01 Ends With .e0,`4esn`:$`7esn` Is Not Null}]->(_usn3 ) Union All Merge ((usn2 :`7esn`{@usn5:usn1[$`3esn`..$999][True..False],`8esn`:$`5esn` Is Null Is Null})-[@usn5?:@usn6*..]-(@usn5 {@usn6:0.0[999..],#usn8:Null Is Null Is Null})<-[`6esn`?{`7esn`:@usn6 Contains _usn4 Contains $`4esn`}]-(`1esn` :``)) On Create Set All(@usn5 In 0X7 =~.0 =~\"d_str\" Where 9e12[usn2..7][.e1..$`7esn`])._usn3? =$`1esn` =~$`1esn` =~#usn7,`2esn`+={`4esn`:$@usn6 Contains 0 Contains $`2esn`}[[@usn5 In 0X7 =~.0 =~\"d_str\"|$`1esn` Ends With _usn4 Ends With `3esn`]..Extract(@usn5 In .12[#usn7][$`8esn`] Where $usn2 Contains 12.e12 Contains 00|9e0 Ends With $`7esn`)] On Create Set None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 7 In $`3esn` In #usn7).`2esn`! =.e1[..$`4esn`][.._usn4];"),
    octest:ct_string("Remove Any(`6esn` In 0X7 =~`` Where $`6esn`[..0X0123456789ABCDEF]).`3esn`,[$`2esn`[..7][..$usn1]]._usn4!,[0X0123456789ABCDEF Is Not Null,\"d_str\"].`4esn`! Return Distinct 1.e1 =~$_usn4 As usn2,[_usn4 Starts With $@usn6 Starts With #usn7,$@usn5 Contains 01] =~`4esn`(12 Ends With 01 Ends With 1e1) =~Extract(`6esn` In 0X7 =~`` Where 0x0[..`4esn`]) As ``,{_usn4:00}[#usn7(00 In 12.e12)][[.12 Ends With `1esn` Ends With $`1esn`,$`5esn`[False]]] Order By $12 Starts With #usn7 Asc,$0[$0..] Descending Merge `8esn`=(:`8esn`) On Match Set usn2+=.e1 Ends With _usn4 Ends With @usn5,@usn5+=_usn3 In .e1 In $12,Extract(`4esn` In `6esn`[1e1..] Where $`7esn` Ends With `1esn` Ends With True).`` =010 In @usn6;"),
    octest:ct_string("Unwind $`1esn` =~$`1esn` =~#usn7 As `4esn` Unwind 010 In @usn5 In `5esn` As #usn7 Merge _usn3=(((:@usn5{#usn7:1e1[@usn5..]})-[:#usn8 *..0X7]->($12)-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]->(:_usn4:usn1{#usn7:$`5esn` Is Null Is Null,usn2:usn1[$`3esn`..$999][True..False]})))"),
    octest:ct_string("Create `8esn`=((({`1esn`:12[..9e0][..999],usn1:0x0 =~$`7esn` =~@usn6})-[#usn8:`3esn`|:`4esn` *0..010]-(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]})<-[_usn3]->(_usn4 :`3esn`:`1esn`{`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]}))) Remove Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`).``? Remove All(@usn6 In @usn5 In $`6esn` Where $@usn5 In 12e12 In Count(*)).#usn8?,[`4esn` In 's_str'[12..'s_str']].#usn7!"),
    octest:ct_string("Create (((_usn3 {usn1:_usn3 Contains @usn6 Contains 1.e1})-[_usn3?:`3esn`|:`4esn` *0..010]->(_usn3 {#usn8:$@usn6 Is Null Is Null,_usn4:_usn4 Starts With $@usn6 Starts With #usn7})<-[_usn3:``|:_usn4 *999..]->(`2esn` :`5esn`{#usn8:$999 Ends With $`3esn` Ends With `8esn`}))) Optional Match @usn5=((:#usn8$usn1)-[`1esn`:`5esn`|`1esn` *..7{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]}]->(usn2 :@usn6:`7esn`)-[_usn4?:#usn8 *..0X7{@usn5:07}]-(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})),((#usn8 :@usn6:`7esn`{``:9e1 Is Not Null Is Not Null})) Union All With  Any(`6esn` In 0X7 =~`` Where 0X7[0e0..]) Contains Single(`4esn` In `6esn`['s_str'..][010..] Where @usn6[`3esn`..][$7..]) As `1esn`,0.e0[..#usn8][..Null] Order By 07 Ends With 07 Asc,12.e12[$`7esn`] Desc Limit {usn1:'s_str'[12..'s_str'],#usn7:07[`6esn`..][`5esn`..]} Return $`5esn` In `2esn` In $12 As `3esn` Order By [@usn5 In .12[#usn7][$`8esn`] Where .e12 =~0.0 =~9e0] Is Null Descending,.e1 Starts With $`8esn` Descending,[@usn6 =~01,$`7esn` In $7,00[``..][$`4esn`..]][All(`4esn` In $`8esn` Starts With 1000 Where 9e1 Is Null Is Null)..(_usn4 {_usn3:$`1esn` Is Null,usn1:$`4esn`[$`2esn`..]})<-[#usn8?:_usn4|:@usn5 *..0x0]-(#usn8 :`1esn`{#usn7:1e1[`6esn`..]})] Asc Skip $@usn5 Unwind Extract(`6esn` In 0X7 =~`` Where 01234567 Ends With 0x0|$_usn4[`3esn`][0]) Is Null Is Null As `` Union All With  $`7esn` Is Null Is Null,0Xa[#usn7] As `4esn` Order By $`5esn` Is Null Is Null Ascending,`` Asc,usn2 Starts With `6esn` Starts With 12e12 Desc Limit 9e1[$@usn6..] Optional Match ((:`6esn`:`7esn`{usn2:.e0[..0X0123456789ABCDEF][...e12]})),`6esn`=((#usn7 {`2esn`:$@usn6[..$usn1],usn2:12 Ends With 01 Ends With 1e1})) Remove `3esn`:#usn7,None(`4esn` In `6esn`[1e1..] Where $`2esn`[..`2esn`]).#usn8?"),
    octest:ct_string("Create (`1esn` :`1esn`) Return Distinct Null Is Null Is Null As `6esn`,$#usn8[1e1][9e1] As @usn5,[@usn5 In .12[#usn7][$`8esn`] Where $_usn4[12e12][`4esn`]][`1esn`(Distinct 1e1[0.0],0.0[1000..][.e1..])..``(False In `3esn`)][[@usn6 =~01,$`7esn` In $7,00[``..][$`4esn`..]]..Filter(@usn6 In @usn5 In $`6esn` Where False[0Xa..$@usn5][$`6esn`..12e12])] Order By `2esn` Contains $999 Asc Skip $@usn6 =~$#usn8 =~$#usn7 Limit 12.0[({#usn8:12.0[..$7][..999],@usn5:$`1esn` Is Null})-[#usn7:`1esn` *07..]->(#usn8 {`2esn`:$`5esn` Contains Count(*) Contains #usn7,_usn4:Null Starts With $`7esn` Starts With `2esn`})-[?{@usn5:12.e12['s_str'],`1esn`:_usn3 Ends With 12e12 Ends With .e0}]-(:`4esn`:#usn8{_usn4:'s_str' In \"d_str\" In 123456789,`2esn`:0.12 Ends With $usn1 Ends With $@usn5})..`4esn`(Distinct $`` Ends With 12e12)] Unwind $usn1[1e1.._usn3][$@usn6..$#usn7] As usn1 Union All Create @usn6=(`` :#usn7)<-[?:`4esn`|:`7esn` *..0X7]-(:`3esn`:`1esn`{`1esn`:0.0[1000..][.e1..]})<-[`5esn`?:`6esn`]->(`6esn` :`6esn`:`7esn`{_usn4:\"d_str\"}),`6esn`=(`8esn` )-[ *0..010{#usn7:$@usn6 Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)}) Union All Unwind All(usn1 In 0x0[..`4esn`] Where 07 In $7 In 12) =~Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 999[$`6esn`]|$`8esn` In \"d_str\" In 9e12) As #usn7 Unwind Single(#usn8 In $`5esn` Is Null Is Null Where $123456789 Ends With $`6esn`) Is Null As `2esn` Optional Match `4esn`=(:``{`5esn`:.e1 In $@usn6 In 999})-[`5esn`?:`3esn`|:`4esn`{`1esn`:$usn2 Contains 12.e12 Contains 00}]-(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]}) Where $usn2[..12.0]"),
    octest:ct_string("Delete {_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]} Ends With Extract(`4esn` In $`8esn` Starts With 1000 Where `6esn`['s_str'..][010..]|12.e12[@usn5..123.654]) Ends With [$`5esn` Is Not Null,0e0 Is Null Is Null] Create _usn4=((:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[`6esn`:``|:_usn4 *..01]->(`5esn` {_usn4:0X7 =~``})-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(usn2 :usn1{``:9e12 Ends With 0X0123456789ABCDEF Ends With #usn7})),(((#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]})-[?*..{`3esn`:Count(*)[12.e12..],`3esn`:usn2 =~0x0}]-(`` :`3esn`:`1esn`{_usn3:'s_str'[..0.0][..$`4esn`],`4esn`:$123456789 Is Not Null Is Not Null})<-[:`6esn` *..0X7{`3esn`:`1esn` Contains Count ( * ),`7esn`:01234567 =~usn1}]-({usn1:010[@usn5..],`7esn`:`2esn` Is Not Null Is Not Null}))) Match ({`3esn`:$`3esn` =~$`7esn` =~False,`4esn`:12 Ends With 01234567})-[#usn7:`1esn` *07..]->(:`7esn`{``:$`1esn` Starts With @usn6})<-[:#usn7|:_usn4 *0Xa]-(usn1 :_usn3{_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"}) Where 9e12 =~01 =~$`7esn`;"),
    octest:ct_string("Create `1esn`=(((usn1 :`4esn`:#usn8)-[`4esn`?:`8esn`|:usn1 *..0x0]->(:@usn6:`7esn`{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})<-[?:`4esn`|:`7esn` *..0X7]-(:`3esn`:`1esn`{`1esn`:0.0[1000..][.e1..]}))),((#usn7 :#usn8{`2esn`:12 =~usn1 =~.e12})-[@usn5?:`3esn`|:`4esn`{`7esn`:Count(*) In 01 In .0,`6esn`:$123456789[..0.12][..#usn7]}]->(`5esn` :`8esn`)<-[`6esn`?:_usn3|:`4esn` *12..0xabc]-(`1esn` :usn1$@usn6)) Remove ({`5esn`:9e1 Starts With _usn3 Starts With `4esn`})<-[@usn5?:``|:_usn4]-({`5esn`:123456789 Starts With `2esn` Starts With .0}).#usn7 Delete $`1esn` Is Null Is Null,_usn4 Starts With 0X7"),
    octest:ct_string("Optional Match ((:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})),_usn4=(({_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"})<-[#usn7]-(_usn4 {#usn8:@usn5 In $`6esn`,`7esn`:010 =~`6esn`})<-[ *00..{@usn5:$`5esn` Is Null Is Null}]->(:_usn4:usn1)) Where _usn4 Ends With 01 Ends With $`1esn` Union All Merge usn2=((`3esn` :`4esn`:#usn8)<-[?:@usn6]-(`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})-[usn2?:`2esn`|usn2*..{@usn5:$1000[01234567],@usn5:0x0[$`3esn`..010][$#usn7..00]}]->(`4esn` {#usn8:`1esn`[0e0..],#usn7:$`6esn`[..0X0123456789ABCDEF]})) On Match Set #usn7 =Any(usn1 In 00 Starts With _usn3 Where `2esn` Is Not Null Is Not Null) Starts With All(`4esn` In $`8esn` Starts With 1000 Where 1.e1[0X0123456789ABCDEF..][$`5esn`..]) Starts With {`4esn`:$usn2 Contains 12.e12 Contains 00,`5esn`:7[$`4esn`..123456789]} On Create Set `1esn` =Null[0.e0..0x0] Optional Match ({`8esn`:$@usn5 Contains 01,`2esn`:123.654 Contains #usn8})-[{`5esn`:.e1[..$``][..0X0123456789ABCDEF]}]->(_usn3 {`5esn`:0.12 Contains .e1})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]}),(usn2 :`2esn`:`3esn`)-[`7esn`?]-(usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1}) Where 0Xa Is Null Is Null Delete 1000 Contains 123456789 Contains 1e1,(`6esn` :`3esn`:`1esn`{_usn3:1e1[.e1..],`1esn`:$#usn8})-[`4esn`:`2esn`|usn2{@usn6:0.12[0.e0..][`4esn`..]}]-(`5esn` :#usn7)-[ *..0X7]->(`5esn` :_usn4:usn1) Starts With None(@usn5 In .12[#usn7][$`8esn`] Where $@usn5 =~$`` =~$usn2) Starts With [.0 =~$#usn8 =~.0,0e0 Is Not Null Is Not Null,_usn3[.0]],0e0 Union Merge _usn3=((#usn7 :``)<-[`8esn`:@usn5|`8esn` *123456789..999{`5esn`:0x0 Contains $`8esn` Contains `6esn`,#usn8:010 =~$usn2 =~1e1}]->(_usn4 {@usn5:$_usn3[$`4esn`..Null]})<-[? *12..0xabc]->(`5esn` :`6esn`:`7esn`{`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]})) On Create Set `6esn` =7[..0X7][..'s_str'],[$`5esn` Contains $@usn6].`1esn` =1e1[@usn5..],Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 07 In 0 In 's_str').@usn5? =True Is Not Null On Create Set usn2 =_usn3 Is Not Null Is Not Null,`4esn` =.e1 Starts With $`8esn`"),
    octest:ct_string("With Distinct 0X7 In $@usn5 In 9e0,$`1esn`[9e1.._usn4][$999..$`2esn`] Skip $`5esn` In `2esn` In .0 Limit .0 Is Null Is Null Return Distinct 01234567[$@usn6..0X7][$`1esn`..123.654] As `6esn`,Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 00 Ends With .12 Ends With `4esn`) Contains {`7esn`:0e0 Is Null Is Null,usn2:`4esn` =~123456789},{`3esn`:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:0e0 =~_usn4}[{`4esn`:$7 Ends With 12.0 Ends With 0xabc,_usn4:0X0123456789ABCDEF[.e0..$`4esn`]}..][Extract(`4esn` In `6esn`['s_str'..][010..] Where $999 Ends With $`3esn` Ends With `8esn`)..] Skip {#usn8:$`5esn` In False,usn2:$`7esn` In $7} Is Not Null Is Not Null Limit 12.0 Contains 9e0 Contains $`7esn` Return *,[@usn6 =~01,$`7esn` In $7,00[``..][$`4esn`..]][All(`4esn` In $`8esn` Starts With 1000 Where 9e1 Is Null Is Null)..(_usn4 {_usn3:$`1esn` Is Null,usn1:$`4esn`[$`2esn`..]})<-[#usn8?:_usn4|:@usn5 *..0x0]-(#usn8 :`1esn`{#usn7:1e1[`6esn`..]})] Order By 0.0 Is Null Is Null Ascending,$usn2[0e0..] Descending,'s_str'[..0.0][..$`4esn`] Ascending Skip $`2esn`[``..] Limit `3esn` =~`3esn` =~$`6esn` Union All Remove Filter(`4esn` In `6esn`[1e1..] Where 12.0[``]).#usn8!,{`8esn`:usn2 Is Null Is Null,#usn8:True =~@usn5 =~$`1esn`}.usn2!"),
    octest:ct_string("Create `6esn`=((_usn4 :@usn6:`7esn`)-[:usn2|#usn8*..]-(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12})),(((`2esn` :`5esn`{#usn8:$999 Ends With $`3esn` Ends With `8esn`})-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]-(@usn5 :`5esn`)<-[_usn3?:`3esn`|:`4esn` *0..010]->(_usn3 ))) Return *,123456789 Starts With #usn7 Starts With `6esn` Order By 's_str' Is Not Null Is Not Null Asc,_usn3 Ends With 0x0 Ends With 01234567 Ascending Skip Filter(usn1 In $123456789 Contains usn2 Where usn2 Is Not Null) Ends With [usn1 In 00 Starts With _usn3 Where 010 =~$usn2 =~1e1] Ends With _usn3(Distinct $123456789 Ends With $`6esn`) Remove {@usn5:7[..12e12][..$`6esn`]}.usn1,[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 12.e12[@usn5..123.654]|9e0 Starts With `6esn`].#usn8?,9e12.usn1"),
    octest:ct_string("Return $usn2[12..$`7esn`][$0..$`7esn`],0x0 Contains _usn4 Contains 123456789 As `7esn`,9e12 Ends With 0X0123456789ABCDEF Ends With #usn7 As `5esn` Order By 01234567 Ends With 12.0 Ends With 0X7 Ascending,12e12 Ends With 010 Ends With .0 Asc Limit count(Distinct 's_str' Starts With 1000 Starts With #usn8,12e12 Starts With $123456789 Starts With 12.0)[[_usn4 In usn1 Contains False Contains `` Where $#usn8]][[$`1esn` Is Null,\"d_str\" =~`6esn` =~0Xa,$usn2[0e0..]]] With  7[$`4esn`..123456789] As `2esn` Limit 1000 Ends With 1000 Ends With $`4esn` Where $usn2[..12.0] Detach Delete $123456789 =~$0 =~$`3esn`,$0 Contains `7esn` Contains $`8esn`,9e0[False] Union All Merge (((`` :@usn6:`7esn`{`2esn`:0.12[0.e0..][`4esn`..]})<-[`3esn`?:_usn3|:`4esn`]-(_usn3 :`1esn`)<-[_usn3{_usn3:12.e12 In $0 In Count(*)}]-(`7esn` :@usn5))) Merge ((`6esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})) Remove Single(`4esn` In $`8esn` Starts With 1000 Where `6esn`['s_str'..][010..]).@usn5,(usn2 :`3esn`:`1esn`)-[ *..7]-(usn1 :`4esn`:#usn8)-[?:`3esn`|:`4esn`]-(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]}).`3esn`,(:`1esn`{_usn4:$_usn3[Null]})-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]-(`2esn` :#usn7)-[:usn2|#usn8 *01234567..12]-(_usn4 {_usn3:$`1esn` Is Null,usn1:$`4esn`[$`2esn`..]})._usn3 Union All Create #usn8=((`8esn` :`7esn`{`8esn`:False In 123456789 In $0})<-[`6esn`:_usn4|:@usn5 *..7{_usn4:0.0 =~0X7 =~#usn7}]->(@usn6 {_usn3:$_usn4[$`1esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})),`6esn`=(`6esn` :`5esn`)"),
    octest:ct_string("With Distinct $`7esn` Is Null Is Null,Any(#usn8 In $`5esn` Is Null Is Null Where 0.12 Contains $`2esn` Contains $_usn4)[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..Extract(`4esn` In `6esn`[1e1..])],`7esn` Contains .0 Contains 9e12 As #usn8 Order By count(Distinct 's_str' Starts With 1000 Starts With #usn8,12e12 Starts With $123456789 Starts With 12.0)[[_usn4 In usn1 Contains False Contains `` Where $#usn8]][[$`1esn` Is Null,\"d_str\" =~`6esn` =~0Xa,$usn2[0e0..]]] Desc Skip 123.654 Starts With usn1 Starts With @usn5 Limit $123456789[$``][010] Union Optional Match `7esn`=(`2esn` )<-[:_usn3|:`4esn`{_usn4:$`3esn` =~$`6esn` =~`8esn`,`5esn`:0X7[0e0..]}]-(:`6esn`:`7esn`{`3esn`:`8esn`[$``]}),`1esn`=((`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]})) Where Null[01234567][01234567]"),
    octest:ct_string("Create `3esn`=((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})),(`5esn` {usn2:`5esn`[.e1][0Xa],@usn5:$usn1 In 1000 In $#usn7}) Optional Match `5esn`=(((@usn6 {#usn7:'s_str' In \"d_str\" In 123456789,usn2:07[12][$`6esn`]})-[#usn7?:@usn6 *00..]->(#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})<-[?:`7esn`|`2esn`{_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"}]->(usn1 :#usn8))),#usn8=(#usn8 :`5esn`{usn2:.e1 Starts With 0.0 Starts With `6esn`,#usn8:9e12 =~01 =~$`7esn`}) Where 0 Contains 12e12 Union Unwind usn1 Starts With $#usn7 Starts With `5esn` As `3esn` Detach Delete 0x0[0X7..][usn1..] Union With Distinct *,$_usn3 =~`7esn` =~$_usn4 As `` Skip Count ( * ) Ends With 1000 Ends With 12 Limit .e1[..$`4esn`][.._usn4] Where $`3esn` =~$`7esn` =~False Unwind .0 Starts With `2esn` Starts With `6esn` As `2esn`"),
    octest:ct_string("Delete $`5esn` Contains $@usn6,123456789 Starts With #usn7 Starts With `6esn`,0.12 With  $@usn5[#usn8..][$`1esn`..] As `7esn`,usn1 Contains False Contains `` As #usn8 Order By 0 =~$`8esn` =~0X7 Desc,False[..12.e12] Descending,07 Ascending Skip Count ( * ) =~Count(*) Unwind True Is Not Null Is Not Null As `8esn`"),
    octest:ct_string("Remove [`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 12.0[..$7][..999]].`5esn`!,[$123456789[$`2esn`][True]].@usn6?,(:@usn6:`7esn`{_usn3:False[`2esn`..#usn8]})<-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(_usn3 :_usn4:usn1{`2esn`:$`6esn`[$@usn6..]})<-[#usn7:`7esn`|`2esn` *..01{``:0X7 In 's_str' In $`1esn`,#usn8:010 Contains Count(*)}]-(`1esn` :`4esn`:#usn8{_usn4:$_usn4[#usn8..]}).`3esn` Union Unwind 0.12 In $`4esn` In `6esn` As `5esn`"),
    octest:ct_string("Return *,[`4esn` In 's_str'[12..'s_str'] Where 9e1 Contains $`3esn` Contains 01234567][[7[..12e12][..$`6esn`]]..{usn1:7 =~9e0 =~'s_str',@usn6:$usn1[..$`6esn`][..Null]}],$999 Ends With $`3esn` Ends With `8esn` Order By .12[..$`6esn`] Descending,@usn6(Distinct Null[0e0][12])[..[@usn5 In 0X7 =~.0 =~\"d_str\" Where 0X7[0e0..]]][..`8esn`(010 =~`6esn`)] Descending Skip Count(*)[True] Limit 0xabc Ends With $7 Ends With $`2esn`;"),
    octest:ct_string("Unwind @usn6 Contains _usn4 Contains $`4esn` As `4esn` Remove None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 01 In _usn3 In 12).#usn8"),
    octest:ct_string("Detach Delete 1000 Ends With 1000 Ends With $`4esn`,{#usn8:$`5esn` In False,usn2:$`7esn` In $7}[..Any(@usn6 In @usn5 In $`6esn` Where 010 =~$usn2 =~1e1)],{_usn3:0.12 Is Null Is Null,`1esn`:9e12[0.0..12.e12]} Ends With {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]} Optional Match #usn7=(((`5esn` :`6esn`:`7esn`{`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->(`2esn` :usn2:@usn6)-[?:@usn6 *00..{@usn5:$`5esn`[False],`4esn`:usn1[..$_usn4][..``]}]->(:``{`1esn`:`6esn` =~$_usn3}))),(((_usn4 :`2esn`:`3esn`{#usn8:123456789[$#usn7..],#usn7:07[12e12]})-[:#usn7|:_usn4 *123456789..999]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})-[:``|:_usn4 *01234567..12{`2esn`:$`` Is Null Is Null,``:$`4esn`[usn1..$#usn8][12.0..`3esn`]}]-({usn1:0x0[0X7..][usn1..]}))) Detach Delete .e12 Contains 9e0,$`2esn`[``..],Extract(@usn6 In @usn5 In $`6esn` Where 9e0 =~$`5esn`|`2esn`[$`1esn`..][$_usn3..]) =~Extract(@usn6 In @usn5 In $`6esn` Where .12[`1esn`..][$`3esn`..]|Count ( * ) =~Count(*)) Union All Return Distinct *,All(usn1 In 0x0[..`4esn`] Where $0[$#usn8..01234567]) In [_usn4 In usn1 Contains False Contains `` Where False In 123456789 In $0|$`7esn` Is Not Null] In [.12 Ends With `1esn` Ends With $`1esn`,$usn2[False..`7esn`][`7esn`.._usn3],\"d_str\" Contains `3esn` Contains 00] Skip $`6esn`[$@usn6..] Limit 00 Starts With _usn3 Union Optional Match ((:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})),`1esn`=((@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})<-[#usn7 *123456789..999]-(:@usn6:`7esn`{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})) Where 0 Ends With $7 Ends With _usn3 Unwind `6esn`[..`5esn`] As #usn8"),
    octest:ct_string("With Distinct $@usn5[0.12..][@usn5..],010 Contains 0X0123456789ABCDEF Order By $12[01..][1.e1..] Descending Skip .12[.e12..0.e0][0.e0..$`2esn`] Union All Delete [`2esn` In `7esn` Starts With $`` Starts With $#usn7][{#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1}..],$`2esn` =~'s_str' Union Detach Delete `` In `6esn`,@usn6 Contains .e1 Contains $`4esn`"),
    octest:ct_string("Merge `8esn`=(:`8esn`) On Match Set usn2+=.e1 Ends With _usn4 Ends With @usn5,@usn5+=_usn3 In .e1 In $12,Extract(`4esn` In `6esn`[1e1..] Where $`7esn` Ends With `1esn` Ends With True).`` =010 In @usn6 Return Distinct Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where usn1 Starts With $#usn7 Starts With `5esn`) Contains @usn5(Distinct 123456789 Starts With `2esn` Starts With .0,123456789 Starts With #usn7 Starts With `6esn`) Contains None(#usn8 In $`5esn` Is Null Is Null Where $#usn8 In .e12 In 9e1),9e1[010..] As `6esn` Order By $1000 Contains $`3esn` Desc,(`7esn` :@usn6:`7esn`)<-[:``|:_usn4{`8esn`:0 Ends With $7 Ends With _usn3}]-(usn1 {#usn7:Count ( * )[@usn6..0x0]})<-[`8esn`]->(#usn8 ) Contains usn2(Distinct $1000[01234567],00 In 0.12 In `5esn`) Contains Any(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where usn2[$`1esn`...0]) Ascending,[$`3esn` Starts With 01234567 Starts With $1000] Starts With `4esn` Starts With [$`2esn`[..7][..$usn1]] Desc Skip $`7esn` =~.e1 Union All Detach Delete 1e1[..#usn7][..#usn7]"),
    octest:ct_string("Remove [07 In `5esn` In 12e12]._usn3? Create ((@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7}))"),
    octest:ct_string("Return *,0.12[Count(*)..],$@usn5 =~$`` =~$usn2 As #usn8 Return *,01234567 Starts With $_usn4 As `1esn` Union Create ((`6esn` {`2esn`:$`2esn`[..`2esn`],usn1:False[0Xa..$@usn5][$`6esn`..12e12]})),_usn4=((#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]})) With Distinct $`2esn` Starts With .e0 Starts With 12.0 Order By ({usn1:`4esn` In $12 In `8esn`})-[`4esn`]-(`1esn` {usn1:True[Count(*)..][1e1..],usn1:9e1 Is Null Is Null})<-[?{`5esn`:0x0 Contains $`8esn` Contains `6esn`,#usn8:010 =~$usn2 =~1e1}]->({`6esn`:$`5esn` Is Null,`2esn`:`7esn` Starts With $usn2 Starts With .e0})[[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 0e0 =~_usn4|0x0 Contains _usn4 Contains 123456789]..[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 7 In $`3esn` In #usn7]][usn1($`1esn` Is Null Is Null,$0[0X0123456789ABCDEF..$#usn7])..[usn1 In 00 Starts With _usn3 Where .12[9e0][$7]|07]] Ascending,0e0 =~Count(*) =~0Xa Descending,{`2esn`:999 In $_usn4 In 0X7}[..{`7esn`:12e12 Ends With 010 Ends With .0}][..Filter(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $123456789[$`2esn`][True])] Asc With Distinct *,$usn1 In 1000 In $#usn7 As `8esn`,$@usn6 =~$#usn8 =~$#usn7 As `2esn` Order By 0Xa[0xabc..$#usn8] Desc Skip `1esn`[`3esn`..][$@usn6..] Where usn2[$`7esn`..010][00..``] Union All Create ``=(:``{#usn8:$`2esn`[..`2esn`]}),@usn5=((:@usn6:`7esn`{@usn6:12.0[``],_usn4:$`3esn` Contains 0X0123456789ABCDEF Contains 00})) Create @usn5=((@usn6 {`3esn`:0.12 In $7 In 0,_usn3:07[$999]})-[`1esn`:`5esn`|`1esn` *..7{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]}]->(usn2 :@usn6:`7esn`)<-[:@usn5|`8esn` *0Xa{usn1:$1000 Contains $`3esn`}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]})) Delete [$`7esn` Ends With `1esn` Ends With True,$999[12.0..]][`7esn`(Distinct $`2esn`[$`2esn`..])..][Any(usn1 In $123456789 Contains usn2 Where 0.e0 Ends With 12 Ends With $7)..],123456789 Starts With `2esn` Starts With 9e12,[Count(*)['s_str'..`1esn`],$_usn3[`2esn`][01234567]] Ends With All(@usn5 In .12[#usn7][$`8esn`] Where 0X7[.e12..01234567]) Ends With Filter(_usn4 In usn1 Contains False Contains `` Where True[..'s_str'][..01])"),
    octest:ct_string("Create ((:`6esn`:`7esn`{usn2:.e0[..0X0123456789ABCDEF][...e12]})),((`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]})) Unwind `4esn` =~$`3esn` =~$123456789 As #usn7 With Distinct [@usn6 In @usn5 In $`6esn` Where $`1esn` Is Null Is Null] Contains Filter(`4esn` In 's_str'[12..'s_str'] Where 123.654 Starts With usn1 Starts With @usn5) Contains [`4esn` In $`8esn` Starts With 1000 Where False In `3esn`] Order By [#usn8 Ends With `4esn` Ends With $`4esn`,$`2esn` =~'s_str',$#usn7[...e12][..$7]][#usn7(0x0 =~_usn4,`5esn` =~0Xa)][{#usn8:$999 Ends With $`3esn` Ends With `8esn`}] Descending,9e12 Asc Skip 0X7[.e12..01234567] Limit $_usn4[0.12..$`6esn`][00..$@usn6];"),
    octest:ct_string("With Distinct 0x0 In `8esn` In 999,``[$`3esn`][$`2esn`],01234567 Ends With 12.0 Ends With 0X7 Order By Count ( * )[..usn1][..12.e12] Asc,$usn2 Is Not Null Is Not Null Descending Skip `3esn`(Distinct $_usn3[Null],12[..True][..$`4esn`]) Is Null Is Null Where 1000 Contains 0.e0 Merge usn1=((:_usn4:usn1{#usn8:$`7esn` Ends With `1esn` Ends With True})-[`7esn`?:usn1|`3esn` *123456789..999{`5esn`:.e1 In $@usn6 In 999}]-(usn2 :#usn8{`3esn`:123.654[@usn5]}))"),
    octest:ct_string("Unwind 0e0[#usn8][$_usn3] As #usn8 Optional Match ((`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`3esn`?:_usn3|:`4esn`]-(`4esn` {`6esn`:$12[..``][..$7]})),((_usn4 {`8esn`:9e1 In 01 In 999})) Union All Return Distinct *,Any(`6esn` In 0X7 =~`` Where $`5esn` In `2esn` In $12)[Extract(`4esn` In 's_str'[12..'s_str'] Where .12[9e0][$7]|$`3esn` Starts With $usn1)..[@usn5 In .12[#usn7][$`8esn`] Where $12 Contains 123.654 Contains `8esn`|@usn5 Ends With 1.e1 Ends With 0X0123456789ABCDEF]][{`6esn`:$12[..``][..$7]}..[usn1 In 1000 In $`5esn`]] With Distinct *,[#usn7 In 01234567[$`3esn`..] Where `7esn` Starts With $`` Starts With $#usn7|07 In 0 In 's_str'][Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 12.0[..$7][..999])..][[@usn5 In .12[#usn7][$`8esn`] Where $0[7..][Null..]|$@usn5 Contains 01]..] As @usn6,0x0[123456789] As _usn3 Order By Extract(@usn5 In 0X7 =~.0 =~\"d_str\" Where $`4esn`[9e1..][0..]|$0 =~$usn1 =~9e1)[{``:\"d_str\",`1esn`:$1000 =~$`7esn`}] Descending Skip $`5esn` In `2esn` In .0 Where 9e12[0.0..12.e12] Return *,False[`2esn`..#usn8] Skip 123456789[1e1..0.0] Limit `` Starts With @usn5 Union Unwind $usn2 Contains 12.e12 Contains 00 As #usn7 Merge _usn4=((@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})<-[#usn7 *123456789..999]-(:@usn6:`7esn`{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})) On Match Set Extract(usn2 In 1000 Contains 0.e0 Where $1000[01234567]|$`6esn`[Count(*)..0.e0][0.0..Count ( * )]).`8esn`! =$123456789[False.._usn3],`3esn`(Distinct 0X7 In $999 In $``,$0 Is Not Null).`7esn`? =0.e0[123.654],`1esn`+=True Starts With 12.0 Starts With $@usn5;"),
    octest:ct_string("Detach Delete {`8esn`:010[@usn5..],#usn8:False Is Not Null Is Not Null}[[`4esn` In 's_str'[12..'s_str'] Where $`2esn`[..7][..$usn1]]][Count ( * )] Unwind $@usn6 Is Null As `` Merge `3esn`=(((:_usn4:usn1{usn2:$`5esn` In False})<-[?:@usn5|`8esn` *..0X7]->(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12})-[:``|:_usn4 *01234567..12{`2esn`:$`` Is Null Is Null,``:$`4esn`[usn1..$#usn8][12.0..`3esn`]}]->(#usn7 {@usn5:`5esn`[.e1][0Xa],@usn6:Count(*)[`7esn`..$12]}))) On Create Set [`6esn` In 0X7 =~``|$#usn7[...e12][..$7]].`1esn` =9e12 =~01 =~$`7esn` On Create Set [@usn6 In @usn5 In $`6esn` Where False Contains `3esn`].`6esn` =[#usn7 In 01234567[$`3esn`..] Where `7esn` Starts With $`` Starts With $#usn7|07 In 0 In 's_str'][Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 12.0[..$7][..999])..][[@usn5 In .12[#usn7][$`8esn`] Where $0[7..][Null..]|$@usn5 Contains 01]..],`8esn` =[`6esn` In 0X7 =~`` Where 12.e12['s_str']|00[7..$123456789]][All(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6)..][Extract(`4esn` In $`8esn` Starts With 1000 Where 1.e1[0X0123456789ABCDEF..][$`5esn`..]|9e1[...e0])..],($999)<-[ *00..{@usn5:$`5esn` Is Null Is Null}]->(@usn5 {`1esn`:0[usn2..]})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`1esn` :usn2:@usn6).`4esn` =`3esn` =~0.0 =~$`` Union All Create `4esn`=((@usn6 {`3esn`:0.12 In $7 In 0,_usn3:07[$999]})-[`1esn`:`5esn`|`1esn` *..7{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]}]->(usn2 :@usn6:`7esn`)<-[:@usn5|`8esn` *0Xa{usn1:$1000 Contains $`3esn`}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]})),(`7esn` :_usn4:usn1)-[_usn4?:#usn8 *..0X7{@usn5:07}]-(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})-[`1esn`{`2esn`:.12 Starts With @usn5 Starts With $#usn8}]->(:usn1{`6esn`:1000 Contains 0.e0,`7esn`:$@usn6[..$#usn7][..12.e12]}) Create @usn5=((@usn6 {`3esn`:0.12 In $7 In 0,_usn3:07[$999]})-[`1esn`:`5esn`|`1esn` *..7{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]}]->(usn2 :@usn6:`7esn`)<-[:@usn5|`8esn` *0Xa{usn1:$1000 Contains $`3esn`}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]})) Remove ``(9e0 Contains `8esn`).`1esn`,[$`1esn` Is Null Is Null,010 Contains 0X0123456789ABCDEF,9e1[0.e0..][#usn8..]].`` Union All Merge `4esn`=((#usn8 {@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null})) On Match Set {`8esn`:`8esn` In $@usn5}.`3esn`! =$@usn5[#usn8..][$`1esn`..],All(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $@usn6 Is Null Is Null).`1esn`! =$12[..``][..$7] On Create Set usn2 =_usn3 Is Not Null Is Not Null,`4esn` =.e1 Starts With $`8esn`"),
    octest:ct_string("With Distinct *,count($_usn3 =~`7esn` =~$_usn4) Is Not Null Is Not Null As `6esn`,{#usn8:$`5esn` In False,usn2:$`7esn` In $7} Starts With Filter(usn2 In 1000 Contains 0.e0 Where `2esn`[$`3esn`..]) Starts With All(`4esn` In `6esn`['s_str'..][010..] Where 9e0 =~$`5esn`) As `` Skip 01234567[$`7esn`][_usn3] Unwind `4esn` =~$`3esn` =~$123456789 As #usn7 Unwind $1000 In $`7esn` In $7 As usn1 Union All Delete 0e0[12][$_usn4];"),
    octest:ct_string("Merge #usn8=((:_usn4:usn1{``:123456789 Starts With `2esn` Starts With .0,`5esn`:``})-[`2esn`? *0..010]->(usn2 :_usn3)-[usn1? *07..{`5esn`:#usn7 Is Not Null Is Not Null}]-(`2esn` :usn1{`8esn`:$``[_usn4..][`7esn`..]})) On Match Set [usn1 In 0x0[..`4esn`] Where $#usn7 In .e1 In 01|`1esn`[@usn6..$123456789]].`8esn`? =Any(`6esn` In 0X7 =~`` Where 0X7[..12e12]),@usn5 =Any(@usn5 In $#usn8 Is Null Is Null Where True[Count(*)..][1e1..]) Is Not Null,_usn3+=$@usn5 =~$`` =~$usn2 On Match Set #usn8 =({`1esn`:@usn6})<-[_usn4?:_usn4|:@usn5 *123456789..999{`2esn`:@usn5 In $`6esn`}]->(:`3esn`:`1esn`{`1esn`:0.0[1000..][.e1..]}) Is Null Is Null,`2esn`+=Single(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where .12 Starts With @usn5 Starts With $#usn8) =~(@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})<-[_usn4?:`6esn`]-(`2esn` {`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null}) =~(_usn4 :usn1)-[@usn5? *999..]-(usn1 :`4esn`:#usn8)-[usn2?:`2esn`|usn2*..{@usn5:$1000[01234567],@usn5:0x0[$`3esn`..010][$#usn7..00]}]->(`4esn` {#usn8:`1esn`[0e0..],#usn7:$`6esn`[..0X0123456789ABCDEF]}),#usn8 =$`7esn` Ends With `1esn` Ends With True Merge _usn3=((_usn4 {#usn8:@usn5 In $`6esn`,`7esn`:010 =~`6esn`})-[`5esn`? *00..{usn1:07[`6esn`..][`5esn`..],`2esn`:#usn7 Contains .0 Contains .e1}]->(#usn7 :`7esn`{`4esn`:.12 Starts With .12 Starts With `3esn`})-[{`5esn`:.e1[..$``][..0X0123456789ABCDEF]}]->(_usn3 {`5esn`:0.12 Contains .e1})) On Match Set _usn4 =@usn5 Contains 01 Contains 12,#usn7+={#usn8:0X0123456789ABCDEF[..usn1]} Ends With (:``{_usn3:0X0123456789ABCDEF In 01234567})<-[``? *..0X7{_usn4:12 Ends With 01 Ends With 1e1}]-(usn2 :@usn6:`7esn`)-[:usn2|#usn8*..]-(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12}) Ends With [1e1 In $#usn8 In 12e12,123.654 Contains #usn8] On Create Set None(`4esn` In 's_str'[12..'s_str'] Where @usn5 In 0X0123456789ABCDEF).`2esn`! =$`1esn` Is Null,`5esn`()._usn4! =[`4esn` In `6esn`['s_str'..][010..] Where $@usn5 In 12e12 In Count(*)|$1000[01234567]][Any(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7)..{usn1:usn1 Is Null Is Null,usn2:12.0[``]}][(_usn3 {`5esn`:0.12 Contains .e1})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`})..00],`8esn` =`7esn` Contains .0 Contains 9e12 With  `` Starts With 12,[@usn5 In .12[#usn7][$`8esn`] Where $_usn4[12e12][`4esn`]][`1esn`(Distinct 1e1[0.0],0.0[1000..][.e1..])..``(False In `3esn`)][[@usn6 =~01,$`7esn` In $7,00[``..][$`4esn`..]]..Filter(@usn6 In @usn5 In $`6esn` Where False[0Xa..$@usn5][$`6esn`..12e12])] As `4esn`,Count(*)[`7esn`..$12] As `` Skip 0X7[..12e12] Where 9e12[..$``][..`6esn`]"),
    octest:ct_string("With Distinct *,Single(#usn7 In 01234567[$`3esn`..]) Is Null As `3esn`,Any(usn2 In 1000 Contains 0.e0 Where @usn6[`3esn`..][$7..])[All(#usn7 In 01234567[$`3esn`..] Where Count(*)[.e0.._usn4])..][None(usn2 In 1000 Contains 0.e0 Where True[Count(*)..][1e1..])..] Order By ({`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`4esn` {@usn6:True[..'s_str'][..01]}) In Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where 07[12e12]) Desc,0x0 Desc,0.e0 Starts With 12.e12 Starts With .e12 Desc Skip [\"d_str\"] Contains _usn3(Distinct $usn1[_usn4..][usn2..]) Limit usn1($@usn5[0.12..][@usn5..],\"d_str\" Starts With $usn1) Is Null Where 123456789 Is Null Optional Match usn1=((`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})) Where 1000 Contains 0.e0 Merge `5esn`=(usn2 {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})<-[ *0xabc{`1esn`:123.654 In \"d_str\" In $_usn3}]-({`2esn`:$usn2 Is Not Null})"),
    octest:ct_string("Return Distinct 9e1[010..],Extract(usn2 In 1000 Contains 0.e0 Where True[Count(*)..][1e1..]|1000[..$`6esn`][..0xabc]) Ends With [07[$999],12e12[Count ( * )..][usn2..]] Merge #usn7=((_usn3 :_usn4:usn1{`2esn`:$`6esn`[$@usn6..]})) On Match Set @usn6+=(usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1})-[#usn8? *0xabc{`5esn`:0X7[12]}]->(usn1 {`2esn`:True =~@usn5 =~$`1esn`,`2esn`:`6esn`[1.e1..$#usn7][.e0..True]})[Any(_usn4 In usn1 Contains False Contains `` Where 0.12 In 01 In $`3esn`)..Single(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $123456789[..0x0][..`4esn`])][All(`6esn` In 0X7 =~`` Where $`3esn` =~Null)..{`8esn`:0xabc Ends With $#usn7 Ends With #usn8,usn2:usn1[$`3esn`..$999][True..False]}] On Match Set (usn1 :#usn7)-[?:usn2|#usn8{`2esn`:@usn5 In 0X0123456789ABCDEF,`1esn`:@usn6[`5esn`..$`3esn`]}]->(`4esn` {`7esn`:.e0[..999][..0X7]}).usn2 =$`3esn`[`2esn`...e0] Union All With Distinct All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) Is Not Null Is Not Null,0xabc[$@usn5] As `7esn`,.e0[usn2..] As _usn3 Order By False[..12.e12] Descending Skip [\"d_str\"] Contains _usn3(Distinct $usn1[_usn4..][usn2..]) Limit 7 In @usn5 In $`4esn` Where 12e12 Starts With $123456789 Starts With 12.0 Detach Delete 010 Starts With `7esn` Starts With 9e1 With Distinct *,Any(#usn8 In $`5esn` Is Null Is Null Where 0.12 Contains $`2esn` Contains $_usn4)[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..Extract(`4esn` In `6esn`[1e1..])] Order By .e0 Contains 01234567 Descending,[$`7esn` Ends With `1esn` Ends With True,$999[12.0..]][`7esn`(Distinct $`2esn`[$`2esn`..])..][Any(usn1 In $123456789 Contains usn2 Where 0.e0 Ends With 12 Ends With $7)..] Desc,'s_str' Starts With 1000 Starts With #usn8 Descending Where 123456789 =~_usn4 =~$0"),
    octest:ct_string("Return Distinct *,Filter(_usn4 In usn1 Contains False Contains `` Where 0.12 Contains $`2esn` Contains $_usn4) Is Null As #usn8,`8esn`(Distinct False Contains `3esn`,9e12 =~01 =~$`7esn`)[[@usn6[`5esn`..$`3esn`],0e0 Is Not Null Is Not Null]..] Order By {`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]}[({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})-[? *999..]-({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`8esn` :`7esn`)][{@usn5:`` In `6esn`,`1esn`:$`2esn`[$`2esn`..]}] Asc,0.12 In $7 In 0 Desc Skip 0Xa In .e1 In Count(*) Limit $`4esn`[$`6esn`] Optional Match _usn4=(((#usn7 :#usn8{`2esn`:12 =~usn1 =~.e12})-[`8esn`?:#usn7|:_usn4{usn2:7[$`4esn`..123456789]}]->(#usn8 :usn2:@usn6{`5esn`:00 Ends With $_usn4 Ends With $`2esn`,usn2:#usn7 Starts With 0 Starts With 12})-[``? *12..0xabc]->({@usn6:9e0 Contains `8esn`}))),@usn6=((`2esn` :`8esn`{`2esn`:$`8esn` In \"d_str\" In 9e12})-[`5esn`:`8esn`|:usn1{usn1:12e12[Count ( * )..][usn2..],usn2:$123456789 Is Null Is Null}]->(@usn5 :#usn8{@usn5:$@usn5 Contains 01,`2esn`:@usn6[`3esn`..][$7..]})) Union Unwind 07[..010][..12.0] As `3esn` Return Any(`6esn` In 0X7 =~`` Where $`5esn` In `2esn` In $12)[Extract(`4esn` In 's_str'[12..'s_str'] Where .12[9e0][$7]|$`3esn` Starts With $usn1)..[@usn5 In .12[#usn7][$`8esn`] Where $12 Contains 123.654 Contains `8esn`|@usn5 Ends With 1.e1 Ends With 0X0123456789ABCDEF]][{`6esn`:$12[..``][..$7]}..[usn1 In 1000 In $`5esn`]] As usn1,@usn5[_usn4..][.e0..] As usn1 Limit $`1esn` Is Null;"),
    octest:ct_string("With Distinct #usn7 Starts With 0x0 Starts With Null,{`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]}[Extract(_usn4 In usn1 Contains False Contains `` Where `5esn`[.e1][0Xa])..],[123456789 =~$123456789,0.12 In $7 In 0] Is Null Is Null As @usn5 Limit All(@usn5 In .12[#usn7][$`8esn`] Where $`5esn` Contains $@usn6) Is Null Is Null Unwind Count(*)[`7esn`..$12] As `6esn` Unwind Any(#usn8 In $`5esn` Is Null Is Null Where 0.12 Contains $`2esn` Contains $_usn4)[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..Extract(`4esn` In `6esn`[1e1..])] As `8esn` Union All With  010 In @usn6 Order By (:`4esn`:#usn8{@usn6:0 Starts With 12e12 Starts With `4esn`})<-[`6esn`?{`7esn`:.12 Ends With `1esn` Ends With $`1esn`,``:9e0 Starts With `6esn`}]->(:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0}) Starts With Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`) Starts With [12.0 In 1000 In _usn4] Ascending Limit `7esn`[1e1..07][0x0..Count ( * )] Union Optional Match `8esn`=()<-[`8esn`:@usn5|`8esn` *123456789..999{`5esn`:0x0 Contains $`8esn` Contains `6esn`,#usn8:010 =~$usn2 =~1e1}]->(#usn8 :`1esn`{#usn7:1e1[`6esn`..]})<-[usn1?:`1esn`{#usn7:9e12 Is Not Null Is Not Null,usn2:`3esn` =~0.0 =~$``}]->(:`1esn`{`8esn`:Count ( * ) =~Count(*)}) Optional Match ((`2esn` :usn2:@usn6)-[usn1?{`7esn`:$`2esn` Starts With .e0 Starts With 12.0}]-(`5esn` {`5esn`:$`5esn`[False]})) Where _usn3 Is Null"),
    octest:ct_string("Merge @usn5=((({`4esn`:@usn5 Ends With $`3esn` Ends With 12e12,`8esn`:Null Starts With $`7esn` Starts With `2esn`})-[`2esn` *0X0123456789ABCDEF..{usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3}]-(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})-[:#usn7|:_usn4 *123456789..999]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4}))) On Create Set `8esn` =0.e0[9e0][0e0],_usn3 =0Xa[0xabc..$#usn8] On Match Set `6esn` =[`4esn` In `6esn`['s_str'..][010..] Where $@usn5 In 12e12 In Count(*)|$1000[01234567]][Any(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7)..{usn1:usn1 Is Null Is Null,usn2:12.0[``]}][(_usn3 {`5esn`:0.12 Contains .e1})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`})..00] Unwind 123456789[`4esn`..][Count ( * )..] As _usn3 Delete 999 Contains `7esn`"),
    octest:ct_string("Optional Match usn2=((#usn8 :`4esn`:#usn8)-[`6esn`? *01234567..12{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]-(@usn5 {usn2:$999[12.0..]})-[`5esn`? *00..{usn1:07[`6esn`..][`5esn`..],`2esn`:#usn7 Contains .0 Contains .e1}]->(`5esn` :usn2:@usn6)) Unwind $`1esn` Is Null Is Null As `8esn` Union All Merge `5esn`=((({usn1:usn1[$`3esn`..$999][True..False],`7esn`:_usn3 Ends With 12e12 Ends With .e0})-[usn2:`8esn`|:usn1*..{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]-(_usn4 {`1esn`:010[@usn5..]})<-[`5esn`{usn2:`6esn`['s_str'..][010..]}]->(:``{_usn3:0X0123456789ABCDEF In 01234567}))) On Create Set `4esn`+=01234567[.12..7][1000..1.e1],``(`` In `6esn`).@usn6 =`1esn` In 999 In $#usn7,`7esn` =9e12 On Create Set {usn2:_usn3 Contains @usn6 Contains 1.e1,usn2:$`6esn`[`1esn`..][.e0..]}.usn2? =9e12 Contains .e0 Contains .e0,_usn3 =`7esn`($123456789 In Count(*) In .e1) Ends With Extract(@usn5 In .12[#usn7][$`8esn`] Where $0[7..][Null..]|Count ( * )) Ends With Any(usn1 In 0x0[..`4esn`] Where False[.e1..Null]),@usn6+=Any(`4esn` In $`8esn` Starts With 1000 Where 0.12 Is Null Is Null) Is Not Null Is Not Null With Distinct All(usn1 In 0x0[..`4esn`] Where .12 Starts With .12 Starts With `3esn`)[[_usn4 In usn1 Contains False Contains `` Where $usn1[0.12..]['s_str'..]|12[..True][..$`4esn`]]..][({`5esn`:0.12 Contains .e1})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:@usn5{#usn7:1e1[@usn5..]})<-[?:`6esn` *01234567..12{`7esn`:7 In 0xabc}]-(#usn7 :usn2:@usn6{`1esn`:$usn2 Contains 12.e12 Contains 00})..] As #usn8,07[0..`4esn`] As `` Order By 0 Ends With $7 Ends With _usn3 Ascending Limit 07 =~`8esn` =~0 Where $999[12.0..] Merge @usn5=(((:`1esn`{#usn7:1e1[`6esn`..]})<-[`6esn`?:_usn3|:`4esn` *12..0xabc]-(`1esn` :usn1$@usn6)<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`5esn` {@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]}))) On Create Set _usn4 =All(@usn5 In .12[#usn7][$`8esn`] Where 0Xa Is Null Is Null)[[usn1 In 00 Starts With _usn3 Where 010 =~$usn2 =~1e1]],#usn7 =_usn3(Distinct 0.12 In 01 In $`3esn`,1.e1[0X0123456789ABCDEF..][$`5esn`..]) Ends With Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) Ends With Filter(usn2 In 1000 Contains 0.e0 Where 12e12 Ends With 010 Ends With .0) On Create Set [@usn6 In @usn5 In $`6esn` Where False Contains `3esn`].`6esn` =[#usn7 In 01234567[$`3esn`..] Where `7esn` Starts With $`` Starts With $#usn7|07 In 0 In 's_str'][Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 12.0[..$7][..999])..][[@usn5 In .12[#usn7][$`8esn`] Where $0[7..][Null..]|$@usn5 Contains 01]..],`8esn` =[`6esn` In 0X7 =~`` Where 12.e12['s_str']|00[7..$123456789]][All(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6)..][Extract(`4esn` In $`8esn` Starts With 1000 Where 1.e1[0X0123456789ABCDEF..][$`5esn`..]|9e1[...e0])..],($999)<-[ *00..{@usn5:$`5esn` Is Null Is Null}]->(@usn5 {`1esn`:0[usn2..]})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`1esn` :usn2:@usn6).`4esn` =`3esn` =~0.0 =~$`` Union All Return `3esn` =~`3esn` =~$`6esn` As `7esn` Limit $`7esn` Is Null Is Null Return *,00[``..][$`4esn`..] As `6esn`,$`6esn`[$`1esn`][1000] Order By `1esn`[@usn6..$123456789] Asc,`1esn`[9e12..$`8esn`][usn2..$``] Ascending,`7esn`[..0X0123456789ABCDEF][..$0] Desc Skip $usn2[0e0..] Limit (:`1esn`{`6esn`:$0[..`8esn`],`1esn`:True Starts With $`8esn` Starts With \"d_str\"})<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[usn1?:`2esn`|usn2 *123456789..999]-(`3esn` :usn2:@usn6) Contains [usn2 In 1000 Contains 0.e0 Where #usn7 Ends With 9e1|010 Is Null Is Null] Contains Filter(@usn6 In @usn5 In $`6esn` Where 12[`7esn`...0][0.12..``]);"),
    octest:ct_string("Merge ((({`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})<-[?:@usn6]-(`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})-[:_usn4|:@usn5]->(`5esn` :#usn7))) On Match Set (`5esn` {@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00})<-[?{#usn7:`6esn`[False..0.0][12e12..$usn2]}]-(`4esn` {`4esn`:#usn7[..$1000][..01]})-[`5esn`?:`3esn`|:`4esn`{`1esn`:$usn2 Contains 12.e12 Contains 00}]-(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]}).`4esn`! =0 Is Not Null,`6esn` =9e12 Ends With 0X0123456789ABCDEF Ends With #usn7,`1esn` =$_usn3[$`4esn`..Null] On Create Set 12.e12.`4esn`? =12e12 Starts With $123456789 Starts With 12.0,(#usn8 :_usn3)-[`8esn`?:`6esn`{#usn7:True =~@usn5 =~$`1esn`,@usn6:False[.e1..Null]}]->(:``{`2esn`:$7,usn1:.12 Contains $`4esn` Contains $`6esn`})-[`6esn`?:@usn6 *999..]->(`2esn` :usn2:@usn6).`3esn`? =All(#usn8 In $`5esn` Is Null Is Null Where #usn8[$#usn8..])[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..(#usn8 {`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]})<-[?:@usn5|`8esn`]-(usn2 :@usn5{`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})<-[?:#usn8{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]->(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})] Delete $`2esn` Ends With `3esn` Ends With $7,0e0[12][$_usn4],`7esn`[Null..][@usn5..] Merge (((usn2 :#usn8{_usn3:$_usn3[..Count ( * )][..@usn5]})-[`1esn`:`1esn`{``:_usn3[...e1],`2esn`:.12[`1esn`..][$`3esn`..]}]-(`7esn` :_usn4:usn1)<-[@usn5:#usn8{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]-(#usn8 :_usn3))) Union Detach Delete 999[$`8esn`],Single(#usn7 In 01234567[$`3esn`..])[(`5esn` :`8esn`{`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null})<-[:@usn5|`8esn`*..]-(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})-[``?{usn2:@usn5 In 0X0123456789ABCDEF,usn2:9e1 Is Null Is Null}]->(`8esn` :_usn3{``:12.e12['s_str']})][[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 12 Ends With 01234567|Count(*) In 01 In .0]],$#usn7 In .e1 In 01 Delete 01 In 01 In 12,`6esn`[0X7..][0x0..] Union All Merge _usn3=((@usn6 :_usn3{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]})-[``?:@usn6{#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}]->(`4esn` :`4esn`:#usn8{`1esn`:$@usn5 In 12e12 In Count(*)})) Create (((@usn6 {#usn7:False[`2esn`..#usn8]})-[? *010]-(`8esn` :@usn5)<-[#usn8?{`5esn`:Null[01234567][01234567]}]->(`6esn` :@usn6:`7esn`{@usn5:True[0x0][@usn6],`5esn`:Null Starts With _usn4 Starts With `6esn`}))),`8esn`=((_usn4 :`3esn`:`1esn`{`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]})) Detach Delete {@usn6:0.12 In $`4esn` In `6esn`,``:1e1 Is Null} Is Not Null Is Not Null,00 In 0.12 In `5esn`,Single(#usn8 In $`5esn` Is Null Is Null Where 1000[0.0][Null]) =~[1.e1 =~$_usn4,.12 Contains $`4esn` Contains $`6esn`] =~None(#usn8 In $`5esn` Is Null Is Null Where 0.0[..12e12][..$0]);"),
    octest:ct_string("Delete [07,$_usn3[..Count ( * )][..@usn5]][All(@usn5 In .12[#usn7][$`8esn`] Where .e12 =~0.0 =~9e0)..{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1}][[010 =~$usn2 =~1e1,`6esn` =~01234567 =~0Xa,07[1e1]]..Filter(usn1 In 0x0[..`4esn`] Where 1e1 In $#usn8 In 12e12)],`6esn` Starts With $usn2 Starts With 0.0 Union Delete 's_str'[12..'s_str'],.e12[usn2][01],[@usn6 In @usn5 In $`6esn` Where $usn2 Is Not Null|$`6esn`[..0X0123456789ABCDEF]][`5esn`(Distinct 0X7 In $@usn5 In 9e0,0x0)..] Merge `6esn`=(#usn7 {@usn5:`5esn`[.e1][0Xa],@usn6:Count(*)[`7esn`..$12]}) On Match Set Filter(usn1 In 0x0[..`4esn`] Where $#usn7 In .e1 In 01).`8esn`! =`6esn`[..`5esn`] Union All With Distinct *,0.12 In $`4esn` In `6esn`,`4esn`(_usn4[$`4esn`..],0x0[...e12][..@usn5])[..{`3esn`:`8esn`[1000..$7][$`7esn`..`2esn`],_usn4:\"d_str\" Is Null Is Null}] As `2esn` Skip 0X7[..12e12] With Distinct *,{`4esn`:$@usn6 Contains 0 Contains $`2esn`}[[@usn5 In 0X7 =~.0 =~\"d_str\"|$`1esn` Ends With _usn4 Ends With `3esn`]..Extract(@usn5 In .12[#usn7][$`8esn`] Where $usn2 Contains 12.e12 Contains 00|9e0 Ends With $`7esn`)] Order By 9e1 Starts With _usn3 Starts With `4esn` Descending,usn2(Distinct _usn3 Contains @usn6 Contains 1.e1)[Extract(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where _usn3 Is Null)..[12e12[0.e0][9e1]]][Single(`4esn` In $`8esn` Starts With 1000 Where $`8esn`[..$``])..Extract(`4esn` In 's_str'[12..'s_str'] Where `` Contains 12 Contains True|$`1esn` Is Null)] Descending Limit 0 Starts With 12e12 Starts With `4esn` Unwind 12.e12 In $1000 As `6esn`"),
    octest:ct_string("Optional Match `2esn`=(:_usn4:usn1)-[#usn7?:_usn4|:@usn5{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]->(:`2esn`:`3esn`)<-[``]-(usn1 {#usn7:.e12[..0.e0][..$`1esn`],usn1:010 Contains Count(*)}),(#usn7 :@usn5)<-[@usn5*]->({``:$1000 Is Null Is Null})-[?:@usn6 *..7{#usn8:'s_str'[.12..$#usn7][$999..`2esn`]}]->(`7esn` :`2esn`:`3esn`) Remove All(`2esn` In `7esn` Starts With $`` Starts With $#usn7).#usn8!,[_usn4 In usn1 Contains False Contains `` Where False In 123456789 In $0].@usn6,(`3esn` :usn2:@usn6{`4esn`:`7esn` Contains .0 Contains 9e12})-[?{`5esn`:0Xa In .e1 In Count(*)}]-({`1esn`:@usn6}).#usn7!"),
    octest:ct_string("With Distinct $999[$1000] As `4esn`,[`4esn` In 's_str'[12..'s_str'] Where 9e12 =~01 =~$`7esn`][#usn7(00 In 12.e12)..Extract(usn1 In 0x0[..`4esn`] Where 1000 Ends With 1000 Ends With $`4esn`|@usn6[$`3esn`])][(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})<-[`8esn`]->(#usn8 )<-[`3esn` *00..{`8esn`:@usn6 Contains .e1 Contains $`4esn`,_usn4:0X7[..12e12]}]->(@usn5 {`1esn`:0[usn2..]})..(usn1 :_usn4:usn1)<-[@usn5?:`1esn`]-(#usn7 :`2esn`:`3esn`)] Limit {`8esn`:@usn5[..True][..0X7],`1esn`:`1esn` Contains Count ( * )}[{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}][Any(usn1 In $123456789 Contains usn2 Where 0.e0 Ends With 12 Ends With $7)] Where $_usn4[12e12][`4esn`] Delete [True[..'s_str'][..01]] In Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 12.0[..$7][..999]) In All(`4esn` In `6esn`['s_str'..][010..] Where @usn6[$`7esn`]),$`5esn` Starts With _usn3 Starts With @usn5 Return None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where _usn3[...e1]) In (:_usn4:usn1{``:123456789 Starts With `2esn` Starts With .0,`5esn`:``})<-[usn2?:usn2|#usn8{`6esn`:$123456789[$`2esn`][True],@usn5:$`3esn` =~$`6esn` =~`8esn`}]-({`5esn`:0e0 =~_usn4})-[_usn4:_usn3|:`4esn` *1000..{#usn8:$999 Ends With $`3esn` Ends With `8esn`}]->(#usn7 :`7esn`{`4esn`:.12 Starts With .12 Starts With `3esn`}) As _usn3"),
    octest:ct_string("Merge ((@usn5 {@usn6:$123456789[0X7..12.e12]})<-[? *0..010]-(#usn8 :`4esn`:#usn8)) On Create Set `4esn` =.e12[.12..][_usn4..] On Match Set {`2esn`:12 =~usn1 =~.e12}.usn2 =False Is Not Null Is Not Null,`3esn` =010 In @usn5 In `5esn`,[usn2 In 1000 Contains 0.e0 Where #usn7 Ends With 9e1|010 Is Null Is Null].@usn5! =$1000 Ends With 1e1 Ends With 123.654"),
    octest:ct_string("Create (_usn4 :@usn6:`7esn`)<-[#usn8?:_usn4|:@usn5 *..0x0]-(`6esn` :#usn7{`5esn`:#usn7 Is Not Null Is Not Null})-[#usn8? *12..0xabc]-(#usn8 :`4esn`:#usn8{#usn7:$`8esn` Starts With 1000}) Union All Return Distinct 1e1[..#usn7][..#usn7],0[0.12..] As @usn5 Order By (_usn3 :`6esn`:`7esn`{usn1:$_usn3[9e1][$_usn4],`8esn`:123456789 =~_usn4 =~$0})<-[#usn8? *12..0xabc]-(:`6esn`:`7esn`{`3esn`:`8esn`[$``]})-[:`6esn`{@usn6:$0 =~$0 =~.e0}]-({`1esn`:@usn6}) In _usn3(0x0[0X7..][usn1..]) In None(#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str') Descending,[1.e1 =~$_usn4,.12 Contains $`4esn` Contains $`6esn`] Ends With Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn8 In .e12 In 9e1) Desc Skip Single(`4esn` In `6esn`['s_str'..][010..] Where Count(*)[..`3esn`]) In [$123456789 Contains usn2,010 Is Null Is Null,`7esn` Starts With $usn2 Starts With .e0] In `2esn`($`5esn` Is Not Null,7 In $`3esn` In #usn7)"),
    octest:ct_string("Match ((:_usn3{usn2:$`5esn`[$123456789][`1esn`]})),((#usn7 :#usn8{`2esn`:12 =~usn1 =~.e12})) Where $0[$#usn8..01234567];"),
    octest:ct_string("Optional Match _usn3=(((#usn7 :#usn8{`2esn`:12 =~usn1 =~.e12})-[`8esn`?:#usn7|:_usn4{usn2:7[$`4esn`..123456789]}]->(#usn8 :usn2:@usn6{`5esn`:00 Ends With $_usn4 Ends With $`2esn`,usn2:#usn7 Starts With 0 Starts With 12})-[``? *12..0xabc]->({@usn6:9e0 Contains `8esn`}))) Where $`4esn`[$`2esn`..] With  *,$`3esn`[`2esn`...e0] As _usn3 Limit Count ( * )[Count ( * )..12e12][usn1..1000] Where 12[0X7..@usn6] Create `2esn`=(((`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[ *..7]-(:_usn3{@usn6:$`7esn` Is Null Is Null})-[:`7esn`|`2esn` *12..0xabc]->(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}))) Union Delete `4esn` Is Null,$``[False..123.654] Merge ((usn2 {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})-[ *010{@usn5:Null Is Null Is Null}]-({@usn5:False In $`7esn` In .0,usn2:Null[1.e1..]})) Union All Create `1esn`=((_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8})-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})) Return Distinct 123.654 Is Not Null Is Not Null As `3esn`,00 As `4esn` Order By [@usn5 In .12[#usn7][$`8esn`] Where .e12 =~0.0 =~9e0] Is Null Descending Skip #usn8 Is Not Null Create ((:`1esn`{@usn6:$_usn4[$`4esn`..$#usn7][`6esn`..7],`8esn`:'s_str'['s_str'..$usn2][_usn3.._usn3]})-[usn1?:`2esn`|usn2 *123456789..999]-(`3esn` :usn2:@usn6))"),
    octest:ct_string("Return `2esn` Contains $999 As #usn7,$123456789[False.._usn3] As `1esn` Order By [@usn6 In @usn5 In $`6esn` Where $999[$1000]|$7[.12]] In {`1esn`:$@usn6 Contains 07 Contains 0.e0} In (`2esn` {usn1:@usn6[$`7esn`],_usn3:$@usn6[..12e12]})-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]->(usn1 {#usn7:Count ( * )[@usn6..0x0]})-[@usn6?:#usn8 *..7{@usn5:@usn5 Starts With 12e12 Starts With @usn5}]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3}) Ascending,00[.e1..] Desc Skip 9e1[.12..] Create (`7esn` {_usn3:usn1 Contains $``})<-[usn1]->(:#usn7{`7esn`:\"d_str\",usn2:True[`4esn`][$`6esn`]})-[:`1esn` *010{`2esn`:$_usn3[9e1][$_usn4],`7esn`:`7esn`[...e1][..\"d_str\"]}]->({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12}),`8esn`=((({`1esn`:12[..9e0][..999],usn1:0x0 =~$`7esn` =~@usn6})-[#usn8:`3esn`|:`4esn` *0..010]-(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]})<-[_usn3]->(_usn4 :`3esn`:`1esn`{`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]}))) Merge ((`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`5esn`?:usn1|`3esn` *1000..]-({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})) On Match Set `7esn`+=.e1[..$`4esn`][.._usn4],`4esn`+=@usn6[$`8esn`][12.e12],@usn5+=1000 Contains $#usn7 Contains `6esn` Union All Return Distinct 07 Ends With 07,{_usn3:12.e12[$1000..],`7esn`:$`2esn` Contains usn1 Contains `2esn`}[..(`2esn` :`8esn`{`2esn`:$`8esn` In \"d_str\" In 9e12})<-[`5esn`?:usn1|`3esn` *1000..]-({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->(`2esn` :usn2:@usn6)][..010] Unwind 0Xa[#usn7] As @usn5"),
    octest:ct_string("Delete [$#usn7[True..][$0..]][..(usn1 :#usn8)-[:`1esn` *010{`2esn`:$_usn3[9e1][$_usn4],`7esn`:`7esn`[...e1][..\"d_str\"]}]->(`7esn` :#usn8)<-[:#usn7|:_usn4{usn2:`5esn`[Count ( * )..][\"d_str\"..],`7esn`:.e1 In $@usn6 In 999}]-({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})][..[@usn5 In $#usn8 Is Null Is Null Where 12.e12[@usn5..123.654]]] Union All Match (({_usn4:$_usn4[$`8esn`..][07..],#usn7:12.e12[...0][..0x0]})),#usn8=({_usn3:12.e12 In $0 In Count(*)})<-[:@usn5|`8esn`*..]-(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4}) Where `8esn`[1000..$7][$`7esn`..`2esn`] Optional Match `1esn`=(:@usn5{usn1:Count(*)[True],@usn6:123456789[$#usn7..]})<-[#usn7]-(`7esn` :`2esn`:`3esn`)-[?:``|:_usn4 *..0X7]->(`4esn` {`6esn`:$12[..``][..$7]}) Unwind {#usn7:0[0.12..]} Ends With Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]) Ends With {@usn5:\"d_str\" Is Null Is Null,@usn5:$_usn4[`3esn`][0]} As `5esn`"),
    octest:ct_string("Detach Delete Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where \"d_str\" Is Null Is Null)[count(Distinct 0.12 Contains $12 Contains `8esn`)..[$`1esn` Is Null Is Null,9e1 In 01 In 999]],[True =~@usn5 =~$`1esn`] Contains Extract(`4esn` In `6esn`['s_str'..][010..] Where 123456789[$#usn7..]|12[`7esn`...0][0.12..``]) Contains Single(`4esn` In 's_str'[12..'s_str']) Unwind Filter(@usn5 In $#usn8 Is Null Is Null Where 9e1 Contains $`3esn` Contains 01234567) =~['s_str'[..0.e0][..`1esn`],`5esn`[.e1][0Xa],123456789 In $usn2 In `6esn`] As `5esn` Merge `8esn`=(`4esn` {`3esn`:0X7[..12e12],`8esn`:False In 123456789 In $0})-[`4esn`?:`1esn`]->(:`2esn`:`3esn`{usn2:$`5esn` In False})<-[#usn7? *00..]->({`4esn`:$usn1[1e1.._usn3][$@usn6..$#usn7],`3esn`:9e0[``][123.654]}) On Match Set `2esn`+=0.0[999..] Union Merge ((({_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999})<-[@usn6?:`6esn`*..]-(_usn3 :usn2:@usn6)-[usn1?:`2esn`|usn2 *123456789..999]-(`3esn` :usn2:@usn6))) On Match Set `6esn` =(`4esn` :`8esn`{_usn4:0 Is Null Is Null})-[`6esn`:`8esn`|:usn1$_usn3]->(`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]}) Ends With Filter(@usn5 In $#usn8 Is Null Is Null Where @usn5 Contains $`1esn` Contains 999) Ends With [`4esn` In `6esn`[1e1..] Where 07[12e12]],{_usn3:usn1 Contains $``}.`1esn`! =_usn3 Is Not Null Is Not Null;"),
    octest:ct_string("Unwind 12.e12 Contains $`5esn` As #usn7 Delete True In 0x0,0X7[12]"),
    octest:ct_string("With Distinct (`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})<-[{_usn3:12.e12 In $0 In Count(*)}]->({`6esn`:$_usn4[$`8esn`..][07..]}) Ends With Any(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn7 In .e1 In 01) Ends With usn2(Distinct _usn3 Contains @usn6 Contains 1.e1) As #usn8 Order By _usn4 Starts With $@usn6 Starts With #usn7 Asc,$#usn7 Desc Where $@usn6 Is Null Is Null"),
    octest:ct_string("With  .e12[.12..][_usn4..] As _usn4,{`7esn`:.e0 Contains #usn7 Contains $#usn8}[(:usn2:@usn6{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8})-[? *999..]-(:`4esn`:#usn8{@usn6:$`4esn`[$`2esn`..]})..None(`6esn` In 0X7 =~`` Where 12.e12['s_str'])][(`5esn` :`7esn`)-[?:`8esn`|:usn1 *..0X7{@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00}]->(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})..({`7esn`:12e12 Ends With 010 Ends With .0})<-[?:`5esn`|`1esn`{_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12}]-({@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]})],$999[$_usn4..][$`5esn`..] Skip 010 In @usn5 In `5esn` Where $@usn6 Is Null Is Null Merge ((:#usn8)<-[`2esn`?]-(:usn2:@usn6{_usn4:$_usn4[$`8esn`..][07..],#usn7:12.e12[...0][..0x0]})<-[`5esn`? *999..{#usn7:0X7[12]}]->(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]})) On Match Set usn2+=[usn1[..@usn5][...e0]] In Extract(`6esn` In 0X7 =~`` Where $1000 Contains $`3esn`|12 Ends With 01234567) In {`3esn`:$`5esn` In `2esn` In .0,``:0e0 Is Null Is Null},`7esn` =Filter(#usn7 In 01234567[$`3esn`..] Where 0Xa[0xabc..$#usn8])[(:usn1{_usn3:0xabc[12.e12..`1esn`],`1esn`:12[usn1][True]})<-[usn2 *..0X7{`6esn`:9e1[.12..],`5esn`:0.12 In $`4esn` In `6esn`}]->(`8esn` {`6esn`:00 In 12.e12})][{_usn3:#usn7 Starts With `1esn`}],`4esn`+={`8esn`:9e1 In 01 In 999}[usn1(1e1[..#usn8][..'s_str'])..{#usn8:$999 Ends With $`3esn` Ends With `8esn`}] On Match Set #usn7($123456789 Contains 01 Contains 0.12).usn2! =.e12 =~0.0 =~9e0,All(#usn7 In 01234567[$`3esn`..] Where $@usn6 =~usn1).`4esn` =$999[12.0..],`8esn`+=Filter(_usn4 In usn1 Contains False Contains `` Where 9e0 =~$`5esn`) =~``($`4esn`[usn1..$#usn8][12.0..`3esn`]) =~Single(usn2 In 1000 Contains 0.e0) Union Delete 0.0[..12e12][..$0],1.e1[.e0..0]"),
    octest:ct_string("Return Distinct *,Any(#usn8 In $`5esn` Is Null Is Null Where 0.12 Contains $`2esn` Contains $_usn4)[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..Extract(`4esn` In `6esn`[1e1..])] Order By .e0 Contains 01234567 Descending,[$`7esn` Ends With `1esn` Ends With True,$999[12.0..]][`7esn`(Distinct $`2esn`[$`2esn`..])..][Any(usn1 In $123456789 Contains usn2 Where 0.e0 Ends With 12 Ends With $7)..] Desc,'s_str' Starts With 1000 Starts With #usn8 Descending Optional Match ((usn1 :`6esn`:`7esn`)),((usn2 :`7esn`{@usn5:usn1[$`3esn`..$999][True..False],`8esn`:$`5esn` Is Null Is Null})-[@usn5?:@usn6*..]-(@usn5 {@usn6:0.0[999..],#usn8:Null Is Null Is Null})<-[`6esn`?{`7esn`:@usn6 Contains _usn4 Contains $`4esn`}]-(`1esn` :``)) Where 07[..010][..12.0]"),
    octest:ct_string("Unwind 123.654 Contains #usn8 As `5esn` Return Extract(`6esn` In 0X7 =~``|9e0 In 01234567) Contains Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) As `5esn`"),
    octest:ct_string("Remove usn2:@usn5,`7esn`(0.12 =~01 =~12,#usn7 Is Not Null Is Not Null).#usn7! Delete .e1 Starts With 0.0 Starts With `6esn` Create ((:`5esn`)<-[#usn7{#usn7:False[`2esn`..#usn8]}]->(usn2 :`3esn`:`1esn`)-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(:#usn7{`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})),((`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})) Union Optional Match usn1=(usn2 {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})<-[:`5esn`|`1esn`{`4esn`:9e0[True..`1esn`],@usn6:7 =~9e0 =~'s_str'}]->(#usn7 {`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null}) With Distinct *,`7esn`[Null..][@usn5..],0X0123456789ABCDEF Contains $usn1 Skip Count(*)[[@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null]..] Limit False Ends With $`8esn` Where 0 Starts With 12e12 Starts With `4esn` Union Optional Match #usn8=(((`3esn` )-[?:#usn7|:_usn4]-(usn2 :#usn8{_usn3:$_usn3[..Count ( * )][..@usn5]})-[*{`2esn`:$1000[01234567]}]-(_usn4 :`4esn`:#usn8{#usn7:1e1[@usn5..]})))"),
    octest:ct_string("Create @usn5=((:#usn8$usn1)-[`1esn`:`5esn`|`1esn` *..7{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]}]->(usn2 :@usn6:`7esn`)-[_usn4?:#usn8 *..0X7{@usn5:07}]-(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})),`1esn`=(`3esn` {``:.e0[7..$`3esn`]}) Create ((_usn4 {`8esn`:9e1 In 01 In 999})),`1esn`=(:_usn4:usn1)-[#usn7?:_usn4|:@usn5{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]->(:`2esn`:`3esn`)<-[``]-(usn1 {#usn7:.e12[..0.e0][..$`1esn`],usn1:010 Contains Count(*)}) Match usn2=(((:`1esn`)-[`7esn`{usn1:0 Is Not Null}]->(:`7esn`{`6esn`:123456789 Is Null,`1esn`:00 In 12.e12})-[:#usn7|:_usn4 *123456789..999]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4}))),(`5esn` {`5esn`:$`5esn`[False]}) Union Merge `7esn`=(`2esn` )<-[:_usn3|:`4esn`{_usn4:$`3esn` =~$`6esn` =~`8esn`,`5esn`:0X7[0e0..]}]-(:`6esn`:`7esn`{`3esn`:`8esn`[$``]}) Detach Delete usn1 Is Not Null Is Not Null,[$`4esn`[9e1..][0..]][Any(`4esn` In $`8esn` Starts With 1000 Where 0.e0[9e1..][0.0..])..Single(#usn8 In $`5esn` Is Null Is Null Where 1000 Ends With 1000 Ends With $`4esn`)],#usn8 Ends With `4esn` Ends With $`4esn` Create usn2=(({`4esn`:#usn7 Starts With 0 Starts With 12,`4esn`:0x0 =~_usn4})-[_usn4?:@usn6 *..7]->(@usn5 :`8esn`)-[@usn5{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8}]->(usn2 :`7esn`{_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`})),_usn4=(@usn5 {`1esn`:0[usn2..]})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`5esn` {_usn4:0X7 =~``})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(:`6esn`:`7esn`{`3esn`:`8esn`[$``]})"),
    octest:ct_string("With Distinct 1.e1 =~$_usn4 As usn2,[_usn4 Starts With $@usn6 Starts With #usn7,$@usn5 Contains 01] =~`4esn`(12 Ends With 01 Ends With 1e1) =~Extract(`6esn` In 0X7 =~`` Where 0x0[..`4esn`]) As ``,{_usn4:00}[#usn7(00 In 12.e12)][[.12 Ends With `1esn` Ends With $`1esn`,$`5esn`[False]]] Order By $12 Starts With #usn7 Asc,$0[$0..] Descending Where _usn3 Ends With 0x0 Ends With 01234567 With  *,0xabc Starts With _usn3 As `3esn`,Null[..12e12][..usn1] As `3esn` Order By 0x0[$`3esn`..010][$#usn7..00] Ascending,010 =~$usn2 =~1e1 Desc,(#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :usn2:@usn6)-[`1esn`:`8esn`|:usn1 *0xabc{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]-(@usn5 :#usn8{`1esn`:0xabc Ends With $7 Ends With $`2esn`,_usn4:``})[.._usn4(@usn6[`5esn`..$`3esn`],`8esn`[$``])] Asc Limit 0x0 Contains $`8esn` Contains `6esn` Where 0xabc Contains Null Contains 9e12 With  `5esn` In 12 As usn2,Count(*) Starts With 1e1 Starts With $123456789 As #usn7,[`4esn` In 's_str'[12..'s_str'] Where 9e1 Contains $`3esn` Contains 01234567][[7[..12e12][..$`6esn`]]..{usn1:7 =~9e0 =~'s_str',@usn6:$usn1[..$`6esn`][..Null]}] As #usn8 Order By 00 In 12.e12 Descending,9e0 Ends With $`7esn` Asc Skip 01234567 Is Null Is Null Limit $123456789 In Count(*) In .e1 Where $123456789 Ends With $`6esn` Union Merge (({`8esn`:$@usn5 Contains 01,`2esn`:123.654 Contains #usn8})) With Distinct *,#usn8 Is Not Null As _usn4 Skip {@usn5:$@usn6[..$usn1],`1esn`:usn2[`3esn`][_usn3]}[..Any(`4esn` In 's_str'[12..'s_str'] Where Null Contains _usn4)][..{`7esn`:True[..'s_str'][..01]}] Union All Create usn2=(`` :#usn7)<-[:@usn6 *0X0123456789ABCDEF..{_usn3:`7esn` Ends With $usn2 Ends With 999}]-(`2esn` :_usn3) With Distinct [$#usn7[True..][$0..]][..(usn1 :#usn8)-[:`1esn` *010{`2esn`:$_usn3[9e1][$_usn4],`7esn`:`7esn`[...e1][..\"d_str\"]}]->(`7esn` :#usn8)<-[:#usn7|:_usn4{usn2:`5esn`[Count ( * )..][\"d_str\"..],`7esn`:.e1 In $@usn6 In 999}]-({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})][..[@usn5 In $#usn8 Is Null Is Null Where 12.e12[@usn5..123.654]]] Order By {#usn7:0[0.12..]} Ends With Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]) Ends With {@usn5:\"d_str\" Is Null Is Null,@usn5:$_usn4[`3esn`][0]} Desc Skip 00 Starts With _usn3 Limit True =~@usn5 =~$`1esn` Remove [`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 0 Is Not Null Is Not Null|$`5esn` In `2esn` In .0].``?,None(@usn5 In .12[#usn7][$`8esn`] Where 0X7[.e12..01234567]).`5esn`!,`8esn`:`6esn`:`7esn`"),
    octest:ct_string("Optional Match #usn8=((:_usn4:usn1{``:123456789 Starts With `2esn` Starts With .0,`5esn`:``})-[`2esn`? *0..010]->(usn2 :_usn3)-[usn1? *07..{`5esn`:#usn7 Is Not Null Is Not Null}]-(`2esn` :usn1{`8esn`:$``[_usn4..][`7esn`..]})) Return Distinct 12.e12 In $0 In Count(*) As `` Return Distinct $`1esn` Starts With $999 As #usn8,Any(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7)[{#usn8:`5esn` =~0Xa,@usn5:0X7[999][$1000]}..[`` Starts With 12,$`1esn` Starts With $999]][`7esn`(Distinct $usn2[..12.0])..`1esn`(Distinct 1e1[0.0],0.0[1000..][.e1..])] Order By 9e1 Is Not Null Is Not Null Asc,$usn2[$123456789..123.654][$`5esn`..'s_str'] Desc Union All Unwind 123456789 =~$123456789 As `4esn` Unwind $`7esn` Is Null Is Null As @usn5;"),
    octest:ct_string("Unwind $1000 Is Not Null Is Not Null As `3esn` Merge (usn1 {#usn7:.e12[..0.e0][..$`1esn`],usn1:010 Contains Count(*)})-[usn2{`6esn`:$@usn6[_usn3..0.e0]}]->({usn1:`4esn` In $12 In `8esn`})<-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`6esn` {`8esn`:`8esn` In $@usn5}) On Match Set Single(`6esn` In 0X7 =~`` Where $usn1[0.12..]['s_str'..]).`8esn` =All(`4esn` In $`8esn` Starts With 1000 Where 0X0123456789ABCDEF[.e0..$`4esn`])[(#usn8 :@usn6:`7esn`{``:9e1 Is Not Null Is Not Null})-[`1esn`{_usn4:`3esn` Contains 0Xa}]->(#usn7 :usn2:@usn6{`1esn`:$usn2 Contains 12.e12 Contains 00})-[`8esn` *..0x0]-(:`2esn`:`3esn`{usn2:$`5esn` In False})..#usn7(Distinct False Contains `3esn`,12e12[_usn3..][$@usn5..])],@usn6:#usn8 Create ((_usn4 :`7esn`)<-[`6esn`:usn1|`3esn`]->(:`3esn`:`1esn`{_usn4:`1esn`[@usn6..$123456789],`4esn`:$usn2[..12.0]})<-[``?:_usn3|:`4esn`]-(:_usn3{`6esn`:.e12[..0.e0][..$`1esn`],`8esn`:7 In 0xabc})) Union All Merge `6esn`=(:`3esn`:`1esn`{_usn4:`1esn`[@usn6..$123456789],`4esn`:$usn2[..12.0]})<-[``?:@usn6]-(`6esn` :`3esn`:`1esn`{`7esn`:7 In 0xabc})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]}) On Create Set usn1 =00 In 0.12 In `5esn`,[@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where .e0[..999][..0X7]]._usn4 =(`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})<-[{_usn3:12.e12 In $0 In Count(*)}]->({`6esn`:$_usn4[$`8esn`..][07..]}) Ends With Any(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn7 In .e1 In 01) Ends With usn2(Distinct _usn3 Contains @usn6 Contains 1.e1) On Match Set [usn1 In 0x0[..`4esn`] Where $#usn7 In .e1 In 01|`1esn`[@usn6..$123456789]].`8esn`? =Any(`6esn` In 0X7 =~`` Where 0X7[..12e12]),@usn5 =Any(@usn5 In $#usn8 Is Null Is Null Where True[Count(*)..][1e1..]) Is Not Null,_usn3+=$@usn5 =~$`` =~$usn2 Remove `6esn`:@usn5,Extract(@usn5 In .12[#usn7][$`8esn`] Where $0[7..][Null..])._usn3!,Extract(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7|@usn6[`5esn`..$`3esn`])._usn4! Union All Optional Match ((`5esn` :#usn7)<-[?:usn2|#usn8 *1000..]->(@usn6 :_usn4:usn1{@usn6:Null Is Null Is Null,#usn7:`5esn`[Count ( * )..][\"d_str\"..]})),`2esn`=((:@usn5{#usn7:1e1[@usn5..]})<-[? *0..010]-({@usn6:$123456789 Is Null Is Null,@usn6:`6esn`[1.e1..$#usn7][.e0..True]})<-[ *0xabc]-(_usn4 {`1esn`:010[@usn5..]})) Where False In 123456789 In $0 Merge usn1=(`3esn` :``) On Match Set All(`6esn` In 0X7 =~`` Where 0X7[..12e12])._usn4 =Null Starts With $`7esn` Starts With `2esn`,`5esn`+=999 Contains Count ( * ) Contains 123.654,usn1+=usn1[$`3esn`..$999][True..False]"),
    octest:ct_string("With  *,00 In 1e1 As `7esn`,0.12 Starts With {`1esn`:@usn6[..0xabc][..$#usn7]} Starts With {`3esn`:`8esn`[1000..$7][$`7esn`..`2esn`],_usn4:\"d_str\" Is Null Is Null} Skip 7 In @usn5 In $`4esn` Limit {`1esn`:`4esn` In $12 In `8esn`} Contains None(@usn5 In .12[#usn7][$`8esn`] Where .e12 =~0.0 =~9e0) Contains [@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]] Return Count ( * ) In 010 Limit Count(*)[True] Create (`4esn` :@usn5{``:$`2esn`[$`2esn`..],@usn6:010 =~`6esn`})"),
    octest:ct_string("Optional Match `8esn`=(`8esn` {`6esn`:00 In 12.e12})<-[`5esn`:@usn6]-(:``{_usn3:0X0123456789ABCDEF In 01234567})<-[`7esn`?:@usn5|`8esn`{@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]}]->(`6esn` {@usn6:9e0 Contains `8esn`}) Where 123456789 Starts With `2esn` Starts With .0;"),
    octest:ct_string("Merge (({_usn3:$`1esn` Starts With @usn6})-[usn1?:`7esn`|`2esn`{`1esn`:0[usn2..]}]->(#usn7 {`6esn`:123456789 Is Null,`1esn`:00 In 12.e12})) On Match Set usn1+=9e0 Contains `1esn` Contains $usn1 On Match Set Single(@usn5 In $#usn8 Is Null Is Null Where 12.e12 In $0 In Count(*)).#usn7! =$#usn7 =~0xabc,#usn7:_usn4:usn1,`5esn`+={`7esn`:Count(*) In 01 In .0}[..{`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]}][..#usn7(Distinct 0.e0[9e0][0e0],999[``..][Null..])] Match _usn4=(#usn8 {@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null})-[:`2esn`|usn2 *999..{#usn8:`5esn` =~0Xa,usn1:12 =~usn1 =~.e12}]-(@usn6 ) Return *,All(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $123456789 Ends With $`6esn`) Is Null As `5esn` Skip 1e1[..False] Limit 12e12[$`5esn`][07] Union All Create (({``:12 Is Null Is Null})<-[usn2:`8esn`|:usn1*..{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]->({#usn7:False[`2esn`..#usn8]})-[`5esn`:#usn8*]->({_usn3:12.e12 In $0 In Count(*)})),#usn7=((`1esn` {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})<-[:_usn3|:`4esn`{_usn4:$`3esn` =~$`6esn` =~`8esn`,`5esn`:0X7[0e0..]}]-(:`8esn`)<-[:#usn7|:_usn4 *0Xa]-(usn1 :_usn3{_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"})) Remove (`2esn` :`6esn`:`7esn`{`6esn`:$#usn8 Ends With 1000 Ends With .0,`7esn`:010 =~`6esn`})-[:`2esn`|usn2 *999..{#usn8:`5esn` =~0Xa,usn1:12 =~usn1 =~.e12}]-(`4esn` :#usn7).@usn5?,All(`4esn` In `6esn`['s_str'..][010..] Where \"d_str\" =~`6esn` =~0Xa).``!,(`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})-[`2esn`*..$usn1]->(:@usn5{_usn4:.12 Starts With 0Xa})<-[`4esn`? *00..]-(`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]}).usn1! With Distinct `2esn` Contains $999 As #usn7,$123456789[False.._usn3] As `1esn` Order By (usn2 :`7esn`{@usn5:usn1[$`3esn`..$999][True..False],`8esn`:$`5esn` Is Null Is Null})-[`5esn`?:_usn4|:@usn5]-(usn1 :`7esn`)<-[`` *12..0xabc]->(:``{_usn3:Count(*)['s_str'..`1esn`],`1esn`:$`6esn`[$`1esn`][1000]}) Ends With [$`8esn` =~$usn2,0X0123456789ABCDEF[..usn1],`` In `6esn`] Descending Skip 0X7[..12e12] Union All Delete 01234567 Ends With 0x0,{@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`} In (:_usn3{`6esn`:.e12[..0.e0][..$`1esn`],`8esn`:7 In 0xabc})-[#usn7:`1esn` *07..]->(:`4esn`:#usn8{_usn4:'s_str' In \"d_str\" In 123456789,`2esn`:0.12 Ends With $usn1 Ends With $@usn5}) In All(@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7),None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 00 Ends With .12 Ends With `4esn`)[`3esn`(Distinct $`1esn` =~$`1esn` =~#usn7,$@usn5 Contains 01)..]"),
    octest:ct_string("Return *,9e12 Ends With 0X0123456789ABCDEF Ends With #usn7 As `8esn` Order By Any(@usn6 In @usn5 In $`6esn` Where False Contains `3esn`) Ends With [1e1[@usn5..],$#usn8 Is Null,$0[$#usn8..01234567]] Ends With Extract(`6esn` In 0X7 =~`` Where 010 =~`6esn`) Descending,12.0 Contains 0.e0 Desc Skip .12[.e12..0.e0][0.e0..$`2esn`] Create ((`` :`1esn`)-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`4esn` {`2esn`:@usn6[`5esn`..$`3esn`],`7esn`:$`1esn` Is Null})),`1esn`=(:@usn5{usn1:Count(*)[True],@usn6:123456789[$#usn7..]})<-[#usn7]-(`7esn` :`2esn`:`3esn`)-[?:``|:_usn4 *..0X7]->(`4esn` {`6esn`:$12[..``][..$7]}) Merge ((`1esn` {_usn4:12.e12 Ends With 01 Ends With .e1})-[_usn4?:`6esn`]->(:`4esn`:#usn8{@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]})-[_usn3?:#usn7|:_usn4 *010]->({`1esn`:@usn6})) Union All Optional Match usn2=((`5esn` :usn2:@usn6{`5esn`:0Xa In .e1 In Count(*)})),_usn4=((#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]}))"),
    octest:ct_string("Optional Match #usn8=((@usn5 {@usn6:$123456789[0X7..12.e12]})<-[:`5esn`|`1esn`]-(#usn8 {@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null})),((#usn7 :_usn3)<-[:_usn4|:@usn5 *..0X7]->(`4esn` {`7esn`:.e0[..999][..0X7]})-[#usn7:_usn3|:`4esn`]-(:#usn7{usn1:$123456789[..0.12][..#usn7]})) Create `8esn`=((:`6esn`:`7esn`{_usn4:12[0X7..@usn6],_usn3:123456789 In $usn2 In `6esn`})<-[#usn7?:_usn3|:`4esn` *00..]->(:`6esn`:`7esn`{_usn3:\"d_str\" Is Null Is Null})<-[@usn6]->(:#usn7{`6esn`:.e12 =~0.0 =~9e0,@usn6:$usn2 =~$_usn4 =~`5esn`})),(((`4esn` )<-[_usn3?:`3esn`|:`4esn` *0..010]->(_usn3 )<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})))"),
    octest:ct_string("Create `2esn`=(_usn4 {`8esn`:9e1 In 01 In 999})<-[:_usn3|:`4esn`{_usn4:$`3esn` =~$`6esn` =~`8esn`,`5esn`:0X7[0e0..]}]-(:`8esn`),`5esn`=(((`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[ *..7]-(:_usn3{@usn6:$`7esn` Is Null Is Null})-[:`7esn`|`2esn` *12..0xabc]->(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}))) Union Merge `5esn`=(({_usn3:12.e12 In $0 In Count(*)})<-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(`2esn` :``)-[:_usn4|:@usn5 *0xabc]-({`6esn`:.e1 Starts With 0.0 Starts With `6esn`,_usn3:$@usn6 Contains 0 Contains $`2esn`})) On Match Set `7esn` ={`4esn`:$@usn6 Contains 0 Contains $`2esn`}[[@usn5 In 0X7 =~.0 =~\"d_str\"|$`1esn` Ends With _usn4 Ends With `3esn`]..Extract(@usn5 In .12[#usn7][$`8esn`] Where $usn2 Contains 12.e12 Contains 00|9e0 Ends With $`7esn`)],@usn6 =`5esn` In $999 On Create Set (@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})-[`2esn`]-({`4esn`:$_usn3[..Count ( * )][..@usn5],#usn8:_usn3 =~00})<-[`6esn`?{`7esn`:.12 Ends With `1esn` Ends With $`1esn`,``:9e0 Starts With `6esn`}]->(:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})._usn3 =123.654 Contains `2esn`,`3esn` =Extract(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null|12.e12 Ends With 01 Ends With .e1) Ends With $0 Ends With All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`),{`6esn`:$_usn4[$`8esn`..][07..]}.@usn6! =`5esn`[.e1][0Xa] Union All With Distinct [@usn5 In $#usn8 Is Null Is Null Where 0.e0 Ends With 12 Ends With $7|$999 Ends With $`3esn` Ends With `8esn`] Starts With [$`6esn` Is Null Is Null,0Xa Is Not Null Is Not Null,0X7 In 123.654 In $`2esn`] Starts With [01234567[Null..0.e0][Count(*)..$#usn8]],All(`6esn` In 0X7 =~`` Where 0.12[Null..]) Is Null Is Null As `` Order By $`3esn` In $12 In 's_str' Asc,[123456789 =~$123456789,0.12 In $7 In 0] Is Null Is Null Asc Skip (:`5esn`{`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]})<-[usn1 *..0x0]->(usn1 :`6esn`:`7esn`)-[?:usn1|`3esn` *999..{_usn4:$999[12.0..],usn1:0[usn2..]}]->(:usn1{_usn3:0xabc[12.e12..`1esn`],`1esn`:12[usn1][True]})[..[07[$999],@usn6[$`7esn`]]][.._usn4(0X7 In $@usn5 In 9e0)] Limit Extract(usn1 In 00 Starts With _usn3 Where 00|0 Is Not Null Is Not Null) Starts With (:``{_usn3:Count(*)['s_str'..`1esn`],`1esn`:$`6esn`[$`1esn`][1000]})-[? *00..{_usn3:07[Count ( * )...e1][0X0123456789ABCDEF..$7],`1esn`:$`2esn` =~'s_str'}]->(_usn4 )<-[`2esn`?]-(usn2 :`3esn`:`1esn`) Starts With {_usn3:'s_str' =~0.e0} Merge @usn5=(({`8esn`:$usn1[0.12..]['s_str'..],`8esn`:`1esn`[0e0..]})-[usn1{`7esn`:``[Count(*)..][@usn5..]}]->(`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`})<-[_usn3?:``|:_usn4 *0xabc{`6esn`:$#usn8 Ends With 1000 Ends With .0,`7esn`:010 =~`6esn`}]-(:usn1{#usn7:12[0X7..@usn6]})) On Create Set `6esn`+=Extract(`4esn` In $`8esn` Starts With 1000 Where False In `3esn`|$`3esn` =~Null),`8esn`+=12 Ends With .e12 Ends With $7,(:``{`1esn`:`6esn` =~$_usn3})-[`5esn`?:_usn4|:@usn5]-(usn2 :#usn8{_usn3:$_usn3[..Count ( * )][..@usn5]}).usn2 =usn1(Distinct) Ends With {`6esn`:$_usn4[`3esn`][0],_usn3:999 Contains Count ( * ) Contains 123.654} Ends With ({`7esn`:12e12 Ends With 010 Ends With .0})<-[?:`5esn`|`1esn`{_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12}]-({@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]}) On Match Set `7esn`+=9e0[``][123.654];"),
    octest:ct_string("Merge `3esn`=((`3esn` :`4esn`:#usn8)<-[#usn8? *0xabc]-(:@usn5{`8esn`:$`3esn`[@usn5..$123456789],@usn5:\"d_str\" Starts With $usn1})<-[?:`8esn`|:usn1 *123456789..999]-(`3esn` :#usn7)) Unwind \"d_str\" =~`3esn` =~0Xa As `1esn` Union All Optional Match `1esn`=(:`8esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}),((#usn8 :@usn6:`7esn`{@usn5:1e1[@usn5..]})) Where $`3esn` =~$`7esn` =~False With Distinct {`4esn`:$usn1[0.12..]['s_str'..]} In None(`4esn` In $`8esn` Starts With 1000 Where 0.12 In 01 In $`3esn`) In usn2(True Contains @usn6) As `2esn`,Single(usn1 In 0x0[..`4esn`] Where 1e1 In $#usn8 In 12e12) Is Not Null Is Not Null As `5esn` Order By .e0 Contains 01234567 Descending Limit All(`4esn` In $`8esn` Starts With 1000 Where 0X0123456789ABCDEF[.e0..$`4esn`])[(#usn8 :@usn6:`7esn`{``:9e1 Is Not Null Is Not Null})-[`1esn`{_usn4:`3esn` Contains 0Xa}]->(#usn7 :usn2:@usn6{`1esn`:$usn2 Contains 12.e12 Contains 00})-[`8esn` *..0x0]-(:`2esn`:`3esn`{usn2:$`5esn` In False})..#usn7(Distinct False Contains `3esn`,12e12[_usn3..][$@usn5..])] Remove count(Distinct 0.e0[9e1..][0.0..],$usn2 =~$#usn8).`5esn`?,{`4esn`:9e12 Is Not Null Is Not Null,`8esn`:$0[..`8esn`]}._usn3,@usn5:usn2:@usn6 Union Remove (`` {`5esn`:0X0123456789ABCDEF[.e0..$`4esn`]})<-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :`4esn`:#usn8).@usn5,({@usn6:0X7 In $999 In $``})-[`7esn`{usn1:0 Is Not Null}]->(:``{`2esn`:$7,usn1:.12 Contains $`4esn` Contains $`6esn`}).@usn6 With  *,{`7esn`:Count(*) In 01 In .0}[..{`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]}][..#usn7(Distinct 0.e0[9e0][0e0],999[``..][Null..])] As `5esn`,#usn7 Ends With `4esn` Ends With @usn5 As `` Where $`7esn` Is Null Is Null"),
    octest:ct_string("Unwind 07[`6esn`..][`5esn`..] As usn1 Union Match (#usn7 :`6esn`:`7esn`)<-[`3esn`?:_usn3|:`4esn`]->(:`1esn`{_usn4:$_usn3[Null]})-[ *..0X7]->(`5esn` :_usn4:usn1) Detach Delete 9e0 Is Not Null,Count(*)[.e0.._usn4],'s_str'['s_str'..$usn2][_usn3.._usn3]"),
    octest:ct_string("Match @usn5=({`5esn`:Count(*)[..`3esn`],usn1:01234567 Ends With 0x0})-[?{@usn5:12.e12['s_str'],`1esn`:_usn3 Ends With 12e12 Ends With .e0}]-(`8esn` :`7esn`)<-[?:usn2|#usn8{#usn8:$@usn6 Is Null Is Null,_usn4:_usn4 Starts With $@usn6 Starts With #usn7}]-({_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"}) Merge `6esn`=(:_usn3{#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}) Optional Match `8esn`=(:`8esn`),`5esn`=(((usn2 :#usn8{_usn3:$_usn3[..Count ( * )][..@usn5]})-[`1esn`:`1esn`{``:_usn3[...e1],`2esn`:.12[`1esn`..][$`3esn`..]}]-(`7esn` :_usn4:usn1)<-[@usn5:#usn8{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]-(#usn8 :_usn3))) Where 0.0[..12e12][..$0]"),
    octest:ct_string("Remove {#usn7:False[`2esn`..#usn8]}.#usn7?,@usn6(Distinct 0.12 In 01 In $`3esn`,'s_str' Starts With 1000 Starts With #usn8).#usn8,(:`1esn`{`8esn`:Count ( * ) =~Count(*)})-[`2esn`*..$usn1]->(:@usn5{_usn4:.12 Starts With 0Xa})-[:`3esn`|:`4esn` *999..{`6esn`:$123456789[..0.12][..#usn7],`3esn`:0 Ends With $7 Ends With _usn3}]->(`1esn` {_usn4:12.e12 Ends With 01 Ends With .e1})._usn4 Union All Detach Delete {`4esn`:$usn1[0.12..]['s_str'..]} In None(`4esn` In $`8esn` Starts With 1000 Where 0.12 In 01 In $`3esn`) In usn2(True Contains @usn6) Create ``=((@usn6 :_usn4:usn1{@usn6:Null Is Null Is Null,#usn7:`5esn`[Count ( * )..][\"d_str\"..]})-[*{`2esn`:$1000[01234567]}]-(`4esn` :`1esn`))"),
    octest:ct_string("Return *,.12[`1esn`..][$`3esn`..] As usn2 Limit usn2 Starts With @usn6 Union Unwind #usn8 In $0 As usn2;"),
    octest:ct_string("With Distinct None(usn1 In 00 Starts With _usn3) Contains _usn3(Distinct 0.12 In 01 In $`3esn`,1.e1[0X0123456789ABCDEF..][$`5esn`..]) Contains {_usn4:Count(*)[True]} Order By 123.654[`5esn`] Descending,$`2esn`[..7][..$usn1] Descending,123456789 Starts With _usn4 Starts With @usn6 Descending Where $`4esn`[$`2esn`..] Create `2esn`=((`5esn` {`5esn`:$`5esn`[False]})<-[?:usn2|#usn8 *00..]-(`6esn` :`5esn`{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]})) Merge ((`1esn` :usn2:@usn6)-[_usn3?:`2esn`|usn2 *010{`6esn`:#usn7 Ends With `4esn` Ends With @usn5}]->(`1esn` :``{`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]})) On Match Set [$usn1 In 1000 In $#usn7,$#usn7 In 12.0 In 0X0123456789ABCDEF,9e0 Is Not Null]._usn3 =All(_usn4 In usn1 Contains False Contains `` Where #usn8[$#usn8..])[(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})..],Extract(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null).`1esn`! =0xabc Starts With _usn3 Union Delete None(usn1 In 00 Starts With _usn3) Contains _usn3(Distinct 0.12 In 01 In $`3esn`,1.e1[0X0123456789ABCDEF..][$`5esn`..]) Contains {_usn4:Count(*)[True]} Union All Detach Delete {usn2:123456789 Starts With `2esn` Starts With 9e12} Ends With All(usn2 In 1000 Contains 0.e0 Where 01234567[Null..0.e0][Count(*)..$#usn8]),9e0[``][123.654];"),
    octest:ct_string("Remove {@usn6:123456789 =~$123456789,`4esn`:usn1 Contains False Contains ``}.`3esn`! Detach Delete usn1 Ends With 010 Delete usn1[1e1][$_usn4],$123456789[..0.12][..#usn7] Union All Remove `8esn`(Distinct 00 In 1e1).usn2!,Single(`4esn` In `6esn`['s_str'..][010..] Where 0e0 Is Not Null Is Not Null).`7esn`! Union All With Distinct 123.654 Is Not Null Is Not Null As `3esn`,00 As `4esn` Order By [usn1 In 00 Starts With _usn3 Where 00][#usn8(Distinct $`2esn`[$123456789..$`1esn`][0Xa..$``],@usn6[`5esn`..$`3esn`])..['s_str'[..0.e0][..`1esn`],`5esn`[.e1][0Xa],123456789 In $usn2 In `6esn`]] Asc,999 Contains `7esn` Desc,Filter(@usn5 In $#usn8 Is Null Is Null Where 9e1 Contains $`3esn` Contains 01234567) =~['s_str'[..0.e0][..`1esn`],`5esn`[.e1][0Xa],123456789 In $usn2 In `6esn`] Ascending Skip 0e0 Is Null Is Null;"),
    octest:ct_string("Return Distinct *,.e0[..0X0123456789ABCDEF][...e12] As `6esn` Order By $123456789[$``][010] Desc,`4esn` =~$`3esn` =~$123456789 Ascending,@usn5 Starts With 12e12 Starts With @usn5 Desc Skip [$12 Is Null Is Null,999 Contains Count ( * ) Contains 123.654][Extract(usn2 In 1000 Contains 0.e0 Where 9e12 =~01 =~$`7esn`)..Any(`4esn` In $`8esn` Starts With 1000 Where 01 Ends With .e0)][[Null Contains _usn4,$`7esn` Is Null Is Null]..({_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[? *..0x0]->(:usn2:@usn6{`6esn`:12[12e12..@usn6],#usn8:`6esn` =~$_usn3})] Limit 7[..12e12][..$`6esn`] Union Remove ({@usn6:9e0 Contains `8esn`})-[usn2 *0X0123456789ABCDEF..{usn2:`` Starts With 12}]-(:#usn7{`6esn`:.e12 =~0.0 =~9e0,@usn6:$usn2 =~$_usn4 =~`5esn`})-[`7esn`:@usn5|`8esn`{usn1:9e12 Is Not Null Is Not Null}]->(usn2 :`6esn`:`7esn`{`6esn`:`` Contains 12 Contains True,usn2:$`2esn`[123456789..][00..]}).``!;"),
    octest:ct_string("With  *,All(`6esn` In 0X7 =~`` Where #usn7 Starts With 0 Starts With 12) Starts With Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where #usn7 Contains .0 Contains .e1) As usn2 Order By All(_usn4 In usn1 Contains False Contains `` Where $`4esn`[$`2esn`..])[..Single(usn1 In $123456789 Contains usn2 Where $usn1[0.12..]['s_str'..])][..``(Distinct `1esn`[0e0..])] Asc,`4esn` =~$`3esn` =~$123456789 Ascending,$123456789[False.._usn3] Desc Skip 7[..0X7][..'s_str'] Where $123456789 Contains 01 Contains 0.12 Unwind 999 Contains `7esn` As `7esn` With Distinct Extract(`6esn` In 0X7 =~``|9e0 In 01234567) Contains Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) As `5esn` Where _usn3 In .e1 In $12 Union All Match #usn8=((`2esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})<-[:@usn6 *0X0123456789ABCDEF..{_usn3:`7esn` Ends With $usn2 Ends With 999}]-(`2esn` :_usn3)),(({``:12 Is Null Is Null})<-[usn2:`8esn`|:usn1*..{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]->({#usn7:False[`2esn`..#usn8]})-[`5esn`:#usn8*]->({_usn3:12.e12 In $0 In Count(*)})) Remove [$`5esn`[False],9e1 Contains $`3esn` Contains 01234567,`5esn`[Count ( * )..][\"d_str\"..]].@usn5!,`3esn`:_usn4:usn1,[usn1 In 00 Starts With _usn3].#usn8? Union All Detach Delete 123.654[@usn5] Merge usn2=((`4esn` :`5esn`{@usn6:$usn2 =~$#usn8,`8esn`:`6esn` =~$_usn3})-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`7esn` :_usn4:usn1)<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})) On Create Set None(`6esn` In 0X7 =~`` Where 01234567 Ends With 0x0).`4esn`! =0[usn2..],[@usn6[$`3esn`]].`4esn` =01 In _usn3 In 12,`1esn`+=123456789 =~usn1 Unwind `7esn`(0.0[1000..][.e1..],$@usn5 Contains 01)[Any(usn1 In 0x0[..`4esn`] Where 0X7[.e12..01234567])][[$@usn6 Contains 07 Contains 0.e0,`5esn` In 12]] As `8esn`;"),
    octest:ct_string("Remove @usn6:`8esn` Create (`2esn` :``)<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(_usn3 :_usn4:usn1),`8esn`=(`4esn` {@usn5:1e1 In $#usn8 In 12e12})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->(`7esn` {`8esn`:$123456789 Contains 01 Contains 0.12})<-[?:usn2|#usn8 *00..]-(`3esn` :`4esn`:#usn8) Unwind 0x0[0.0][$_usn4] As #usn8 Union Detach Delete 0e0 Is Null Is Null,010 Contains 0X0123456789ABCDEF Remove {#usn8:0X0123456789ABCDEF[..usn1]}.`5esn`! With  *,00 In 1e1 As `7esn`,0.12 Starts With {`1esn`:@usn6[..0xabc][..$#usn7]} Starts With {`3esn`:`8esn`[1000..$7][$`7esn`..`2esn`],_usn4:\"d_str\" Is Null Is Null} Skip 7 In @usn5 In $`4esn` Limit {`1esn`:`4esn` In $12 In `8esn`} Contains None(@usn5 In .12[#usn7][$`8esn`] Where .e12 =~0.0 =~9e0) Contains [@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]]"),
    octest:ct_string("Return Distinct #usn8 In $0 As `1esn`,'s_str' In \"d_str\" In 123456789,[0Xa[$``..][01234567..]] Contains `3esn`(Distinct _usn3 In .e1 In $12) Contains (`5esn` :`8esn`{`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null})<-[:@usn5|`8esn`*..]-(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})-[``?{usn2:@usn5 In 0X0123456789ABCDEF,usn2:9e1 Is Null Is Null}]->(`8esn` :_usn3{``:12.e12['s_str']}) As @usn6 Order By Count ( * )[(`7esn` {usn1:$1000 Contains $`3esn`})-[`5esn`?:_usn4|:@usn5]-(`3esn` {`8esn`:$``[_usn4..][`7esn`..]})-[@usn5:`4esn`|:`7esn` *0X0123456789ABCDEF..{`7esn`:.e0[..999][..0X7]}]-(usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1})..Single(usn1 In 0x0[..`4esn`] Where $999[12.0..])][(:`6esn`:`7esn`{@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]})-[?{`2esn`:$`6esn`[$@usn6..]}]-(`4esn` :`6esn`:`7esn`)<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})..Single(`6esn` In 0X7 =~`` Where $usn1[0.12..]['s_str'..])] Ascending,0xabc[$@usn5] Asc,usn1[..$_usn4][..``] Ascending"),
    octest:ct_string("Match `5esn`=(#usn7 {@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]}) Where $`2esn` Contains usn1 Contains `2esn` Unwind 12e12[0.e0][9e1] As usn2 Union Remove None(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7]).usn2!,(:`6esn`:`7esn`{_usn4:12[0X7..@usn6],_usn3:123456789 In $usn2 In `6esn`})-[@usn6?:#usn7|:_usn4 *00..]->(:`6esn`:`7esn`{@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]})<-[? *12..0xabc{@usn5:0xabc[$@usn5]}]-(#usn7 {`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null})._usn4! Merge @usn5=((:#usn8$usn1)-[`1esn`:`5esn`|`1esn` *..7{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]}]->(usn2 :@usn6:`7esn`)-[_usn4?:#usn8 *..0X7{@usn5:07}]-(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})) On Create Set `1esn`+=Null[0e0][12],Filter(usn1 In 0x0[..`4esn`] Where $`` Ends With 12e12).usn1! =Extract(#usn8 In $`5esn` Is Null Is Null Where 's_str' Starts With 1000 Starts With #usn8|07)[None(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 12[..True][..$`4esn`])..usn2(Distinct $1000[01234567],00 In 0.12 In `5esn`)][`8esn`(00[``..][$`4esn`..],123.654[@usn5])..Extract(@usn5 In $#usn8 Is Null Is Null Where @usn5 Contains $`1esn` Contains 999)] On Create Set `6esn`+=$123456789 Ends With .e1 Create (($999))"),
    octest:ct_string("With Distinct `` Is Not Null Is Not Null As @usn6,True[Count(*)..][1e1..] Remove Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `7esn` Starts With $usn2 Starts With .e0).`6esn`! Match `8esn`=((@usn6 {_usn3:$_usn4[$`1esn`]})-[`5esn`?:_usn4|:@usn5]->({`5esn`:Count(*)[..`3esn`],usn1:01234567 Ends With 0x0})-[usn2 *..0X7{#usn7:$_usn4[`3esn`][0]}]->({#usn7:Count ( * )[@usn6..0x0]})) Where 's_str'[12..'s_str'];"),
    octest:ct_string("Return *,Count ( * ) In 010 As `1esn` Limit $@usn5 =~07 =~True Merge _usn3=(@usn5 {@usn6:$123456789[0X7..12.e12]}) On Match Set @usn5 =12.e12['s_str'],@usn6 =$usn2[False..`7esn`][`7esn`.._usn3],({`6esn`:9e1[.12..],`5esn`:0.12 In $`4esn` In `6esn`})<-[usn2?:`4esn`|:`7esn` *0X0123456789ABCDEF..]-({usn1:$1000 Contains $`3esn`})-[_usn4?:@usn6 *..7]->({usn1:usn1[$`3esn`..$999][True..False],`7esn`:_usn3 Ends With 12e12 Ends With .e0}).@usn5? =07[07] Return Distinct *,[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`|$123456789 Ends With .e1] Contains [@usn6 In @usn5 In $`6esn` Where $_usn4[$`8esn`..][07..]|$1000 In $`7esn` In $7] Contains (`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})-[``?:@usn6{#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}]->(@usn5 :`3esn`:`1esn`{`3esn`:$`5esn` Is Not Null,`2esn`:9e1[0.e0..][#usn8..]}) Union All Merge usn1=(`4esn` :#usn7)-[_usn4?:`6esn`]-(`2esn` :`1esn`{``:9e1 Starts With _usn3 Starts With `4esn`})-[_usn4?:@usn6 *..7]->(`` :@usn6:`7esn`{`4esn`:0X0123456789ABCDEF Is Not Null}) Delete [07,$_usn3[..Count ( * )][..@usn5]][All(@usn5 In .12[#usn7][$`8esn`] Where .e12 =~0.0 =~9e0)..{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1}][[010 =~$usn2 =~1e1,`6esn` =~01234567 =~0Xa,07[1e1]]..Filter(usn1 In 0x0[..`4esn`] Where 1e1 In $#usn8 In 12e12)],`6esn` Starts With $usn2 Starts With 0.0 Remove (:`5esn`{`7esn`:$`7esn` Ends With 07 Ends With 07,`5esn`:@usn5 Ends With $`3esn` Ends With 12e12})-[`5esn`?:`2esn`|usn2 *999..]->(`5esn` {`5esn`:$`5esn`[False]}).`8esn`,Any(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where usn2[$`1esn`...0]).`7esn` Union All Merge @usn5=((({`4esn`:@usn5 Ends With $`3esn` Ends With 12e12,`8esn`:Null Starts With $`7esn` Starts With `2esn`})-[`2esn` *0X0123456789ABCDEF..{usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3}]-(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})-[:#usn7|:_usn4 *123456789..999]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4}))) On Match Set usn2 =$`4esn`[$`6esn`] On Create Set `6esn` =Extract(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null|12.e12 Ends With 01 Ends With .e1) Ends With $0 Ends With All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`),{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4}.`2esn`? =.12[`1esn`..],`5esn`+=0 Starts With `6esn` Starts With 0X0123456789ABCDEF Merge (usn1 {#usn7:.e12[..0.e0][..$`1esn`],usn1:010 Contains Count(*)})-[usn2{`6esn`:$@usn6[_usn3..0.e0]}]->({usn1:`4esn` In $12 In `8esn`})<-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`6esn` {`8esn`:`8esn` In $@usn5}) On Match Set Single(`6esn` In 0X7 =~`` Where $usn1[0.12..]['s_str'..]).`8esn` =All(`4esn` In $`8esn` Starts With 1000 Where 0X0123456789ABCDEF[.e0..$`4esn`])[(#usn8 :@usn6:`7esn`{``:9e1 Is Not Null Is Not Null})-[`1esn`{_usn4:`3esn` Contains 0Xa}]->(#usn7 :usn2:@usn6{`1esn`:$usn2 Contains 12.e12 Contains 00})-[`8esn` *..0x0]-(:`2esn`:`3esn`{usn2:$`5esn` In False})..#usn7(Distinct False Contains `3esn`,12e12[_usn3..][$@usn5..])],@usn6:#usn8"),
    octest:ct_string("Optional Match `3esn`=(usn1 :`6esn`:`7esn`),`1esn`=(({`4esn`:$_usn3[..Count ( * )][..@usn5],#usn8:_usn3 =~00})<-[`5esn`?:#usn8{#usn7:0.12 Ends With $usn1 Ends With $@usn5}]->({`1esn`:$@usn5 =~$`` =~$usn2})) Unwind [\"d_str\" Starts With $usn1,.12 Contains $`4esn` Contains $`6esn`,01234567 =~usn1] Is Null Is Null As _usn3 Remove [`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`7esn` Ends With $`2esn` Ends With $usn1|0[0.12..]].@usn5?,{`2esn`:00[01234567][False]}.`1esn`,[_usn4 In usn1 Contains False Contains `` Where 12 Ends With 01234567|_usn4[$`4esn`..]].`2esn`! Union Return Distinct $`5esn`[$123456789][`1esn`],(`6esn` :`4esn`:#usn8{_usn4:12.e12[...0][..0x0]})-[`4esn`?:`8esn`|:usn1 *..0x0]->(:`7esn`{``:$`1esn` Starts With @usn6}) Ends With `6esn`(Distinct $`4esn`[usn1..$#usn8][12.0..`3esn`],12.e12['s_str']) Ends With (`7esn` {`8esn`:Count ( * ) =~Count(*)})-[`8esn`?:#usn7|:_usn4{usn2:7[$`4esn`..123456789]}]->(#usn8 :usn2:@usn6{`5esn`:00 Ends With $_usn4 Ends With $`2esn`,usn2:#usn7 Starts With 0 Starts With 12})-[_usn3?:`2esn`|usn2 *010{`6esn`:#usn7 Ends With `4esn` Ends With @usn5}]->(`1esn` :``{`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]}) As `7esn`,01234567 As `6esn` Detach Delete $@usn5 In 12e12 In Count(*),`` =~12 =~$#usn7,Null Contains _usn4 Union Unwind .e12[usn2][01] As _usn3 Match usn2=((#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})-[`6esn`?:usn1|`3esn`{`2esn`:1e1[@usn5..],`3esn`:$`6esn`[`3esn`..0e0]}]->(:`4esn`:#usn8{usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null})),((usn1 :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(:#usn7{`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})-[?{@usn5:12.e12['s_str'],`1esn`:_usn3 Ends With 12e12 Ends With .e0}]-(`8esn` :`7esn`)) Where $0[01234567..00][$`2esn`..$@usn6] Merge (((`2esn` :`7esn`)<-[? *..7]->({`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null})<-[:`6esn`]->(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}))) On Create Set @usn6 =`3esn`[..7][..12e12]"),
    octest:ct_string("Delete Single(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where .12 Starts With @usn5 Starts With $#usn8) =~(@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})<-[_usn4?:`6esn`]-(`2esn` {`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null}) =~(_usn4 :usn1)-[@usn5? *999..]-(usn1 :`4esn`:#usn8)-[usn2?:`2esn`|usn2*..{@usn5:$1000[01234567],@usn5:0x0[$`3esn`..010][$#usn7..00]}]->(`4esn` {#usn8:`1esn`[0e0..],#usn7:$`6esn`[..0X0123456789ABCDEF]}),$@usn6 In $`5esn` In $usn2 With Distinct `` Is Not Null Is Not Null As @usn6,True[Count(*)..][1e1..] Union All Detach Delete Extract(usn1 In 00 Starts With _usn3 Where 00|0 Is Not Null Is Not Null) Starts With (:``{_usn3:Count(*)['s_str'..`1esn`],`1esn`:$`6esn`[$`1esn`][1000]})-[? *00..{_usn3:07[Count ( * )...e1][0X0123456789ABCDEF..$7],`1esn`:$`2esn` =~'s_str'}]->(_usn4 )<-[`2esn`?]-(usn2 :`3esn`:`1esn`) Starts With {_usn3:'s_str' =~0.e0},12 Ends With .e12 Ends With $7 Optional Match `6esn`=(`8esn` )-[ *0..010{#usn7:$@usn6 Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)}) Where 0.e0[@usn6][0x0] Match (((`4esn` )<-[_usn3?:`3esn`|:`4esn` *0..010]->(_usn3 )<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3}))) Where $usn2 In 9e0 In $7"),
    octest:ct_string("Delete 1.e1[0X0123456789ABCDEF..][$`5esn`..],$0[0X0123456789ABCDEF..$#usn7] With  07 Ends With 07 As #usn8,00[``..][$`4esn`..],$usn2 Is Not Null Is Not Null Limit {`4esn`:0X7 =~.0 =~\"d_str\",_usn4:00 Ends With $_usn4 Ends With $`2esn`} Ends With Extract(#usn7 In 01234567[$`3esn`..] Where .12 In $999 In `5esn`) Ends With [$`3esn`[@usn5..$123456789],00,'s_str'[.12..$#usn7][$999..`2esn`]] Union Return Distinct 1000 Contains $#usn7 Contains `6esn` Order By (`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]})<-[`1esn`:`8esn`|:usn1 *0xabc{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]->(#usn8 :`2esn`:`3esn`{#usn7:Count(*) In 01 In .0,#usn7:12.0[..$7][..999]})<-[usn1?:`1esn`{#usn7:9e12 Is Not Null Is Not Null,usn2:`3esn` =~0.0 =~$``}]->(:`4esn`:#usn8{@usn6:0 Starts With 12e12 Starts With `4esn`})[Single(`4esn` In 's_str'[12..'s_str'])..#usn8($12 Contains 123.654 Contains `8esn`,0xabc Ends With $#usn7 Ends With #usn8)] Desc,usn1($@usn5[0.12..][@usn5..],\"d_str\" Starts With $usn1) Is Null Desc,Count ( * ) Contains 999 Contains $`8esn` Asc Merge `7esn`=((:`2esn`:`3esn`{usn2:9e12[@usn6..$``][#usn8..Count ( * )],`3esn`:$1000 In $`7esn` In $7})<-[`6esn`:_usn4|:@usn5 *..7{_usn4:0.0 =~0X7 =~#usn7}]->(`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})-[`8esn` *..0x0]-(:`2esn`:`3esn`{usn2:$`5esn` In False})) On Create Set 12.e12.`4esn`? =12e12 Starts With $123456789 Starts With 12.0,(#usn8 :_usn3)-[`8esn`?:`6esn`{#usn7:True =~@usn5 =~$`1esn`,@usn6:False[.e1..Null]}]->(:``{`2esn`:$7,usn1:.12 Contains $`4esn` Contains $`6esn`})-[`6esn`?:@usn6 *999..]->(`2esn` :usn2:@usn6).`3esn`? =All(#usn8 In $`5esn` Is Null Is Null Where #usn8[$#usn8..])[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..(#usn8 {`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]})<-[?:@usn5|`8esn`]-(usn2 :@usn5{`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})<-[?:#usn8{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]->(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})] Merge `6esn`=((`3esn` {`8esn`:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`1esn`?:`1esn` *01234567..12]->(`8esn` {`6esn`:00 In 12.e12})-[`6esn`? *01234567..12{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]-(@usn5 {usn2:$999[12.0..]})) On Match Set Any(_usn4 In usn1 Contains False Contains `` Where $`4esn`[$`2esn`..]).usn2 =010 In @usn5 In `5esn` Union With Distinct {`4esn`:$usn1[0.12..]['s_str'..]} In None(`4esn` In $`8esn` Starts With 1000 Where 0.12 In 01 In $`3esn`) In usn2(True Contains @usn6) As `2esn`,Single(usn1 In 0x0[..`4esn`] Where 1e1 In $#usn8 In 12e12) Is Not Null Is Not Null As `5esn` Order By .e0 Contains 01234567 Descending Limit All(`4esn` In $`8esn` Starts With 1000 Where 0X0123456789ABCDEF[.e0..$`4esn`])[(#usn8 :@usn6:`7esn`{``:9e1 Is Not Null Is Not Null})-[`1esn`{_usn4:`3esn` Contains 0Xa}]->(#usn7 :usn2:@usn6{`1esn`:$usn2 Contains 12.e12 Contains 00})-[`8esn` *..0x0]-(:`2esn`:`3esn`{usn2:$`5esn` In False})..#usn7(Distinct False Contains `3esn`,12e12[_usn3..][$@usn5..])] Create ((({`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})<-[?:@usn6]-(`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})-[:_usn4|:@usn5]->(`5esn` :#usn7)));"),
    octest:ct_string("Match `4esn`=((:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12})-[#usn8? *0xabc{`5esn`:0X7[12]}]->(usn1 {`2esn`:True =~@usn5 =~$`1esn`,`2esn`:`6esn`[1.e1..$#usn7][.e0..True]})),`8esn`=((_usn4 :@usn6:`7esn`)-[:usn2|#usn8*..]-(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12})) Where 0X7[999][$1000] Remove (_usn3 :_usn4:usn1)-[`3esn`?:`3esn`|:`4esn` *..01{_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`}]->(usn2 :#usn7)<-[@usn5?:`1esn`]-(#usn7 :`2esn`:`3esn`).usn2,[`6esn` In 0X7 =~`` Where $`6esn`[..0X0123456789ABCDEF]|12 Is Null Is Null].#usn8? Union Optional Match (`5esn` {_usn4:0X7 =~``}),((#usn8 {_usn3:`6esn` =~01234567 =~0Xa,_usn4:$`5esn` Is Null Is Null}));"),
    octest:ct_string("Optional Match @usn6=((`2esn` :`8esn`{`2esn`:$`8esn` In \"d_str\" In 9e12})-[`5esn`:`8esn`|:usn1{usn1:12e12[Count ( * )..][usn2..],usn2:$123456789 Is Null Is Null}]->(@usn5 :#usn8{@usn5:$@usn5 Contains 01,`2esn`:@usn6[`3esn`..][$7..]})),_usn3=(`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})<-[`8esn`?:`5esn`|`1esn`]-(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]})<-[`3esn`?*..]->(`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]}) Where $`5esn` Contains Count(*) Contains #usn7 Union All Remove Extract(#usn8 In $`5esn` Is Null Is Null Where $123456789 Ends With $`6esn`).`3esn`?,{@usn5:0.e0[@usn6][0x0]}._usn4 Optional Match (((`4esn` {#usn8:`1esn`[0e0..],#usn7:$`6esn`[..0X0123456789ABCDEF]})<-[#usn8?:`3esn`|:`4esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]-({``:01234567 Ends With 0x0,`6esn`:0X7[0e0..]})<-[?:`7esn`|`2esn`]-(:`6esn`:`7esn`{`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]}))) Where 12.0[``];"),
    octest:ct_string("With Distinct 01234567[.12..7][1000..1.e1],123456789 Starts With `2esn` Starts With 9e12 As `3esn`,$12[01..][1.e1..] Order By $`1esn` Starts With `8esn` Starts With $0 Descending,Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With $usn1|.12 Ends With `1esn` Ends With $`1esn`)[[True[..'s_str'][..01],_usn4 Ends With 01 Ends With $`1esn`,.0[$`6esn`..False]]..`7esn`(Distinct 010 Is Null Is Null,$`8esn`[..$``])][({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})<-[? *0..010]-(`4esn` :`5esn`{_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[:#usn7|:_usn4 *1000..{_usn4:07 In `5esn` In 12e12,@usn6:.0 Is Null Is Null}]->(#usn7 $usn2)..All(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null)] Desc Unwind $`8esn`[``..][123.654..] As `7esn` Union Match #usn7=((@usn6 {#usn7:False[`2esn`..#usn8]})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]-(`7esn` {_usn3:usn1 Contains $``})-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]-(_usn3 )),_usn4=((`2esn` :``)<-[`1esn`?:`1esn` *01234567..12]->(`8esn` {`6esn`:00 In 12.e12})) Merge `8esn`=(((:#usn7{`7esn`:\"d_str\",usn2:True[`4esn`][$`6esn`]})<-[#usn8?:_usn4|:@usn5 *..0x0]-(#usn8 :`1esn`{#usn7:1e1[`6esn`..]})<-[:#usn7|:_usn4{``:$1000 Is Null Is Null}]->({`6esn`:.e1 Starts With 0.0 Starts With `6esn`,_usn3:$@usn6 Contains 0 Contains $`2esn`}))) Merge _usn4=((@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})<-[#usn7 *123456789..999]-(:@usn6:`7esn`{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})) On Match Set Extract(usn2 In 1000 Contains 0.e0 Where $1000[01234567]|$`6esn`[Count(*)..0.e0][0.0..Count ( * )]).`8esn`! =$123456789[False.._usn3],`3esn`(Distinct 0X7 In $999 In $``,$0 Is Not Null).`7esn`? =0.e0[123.654],`1esn`+=True Starts With 12.0 Starts With $@usn5 Union All Return Distinct *,All(usn1 In 0x0[..`4esn`] Where $0[$#usn8..01234567]) In [_usn4 In usn1 Contains False Contains `` Where False In 123456789 In $0|$`7esn` Is Not Null] In [.12 Ends With `1esn` Ends With $`1esn`,$usn2[False..`7esn`][`7esn`.._usn3],\"d_str\" Contains `3esn` Contains 00] Skip $`6esn`[$@usn6..] Limit 00 Starts With _usn3"),
    octest:ct_string("Return *,9e1['s_str'..1e1] As #usn7,01234567 As `6esn` Skip `2esn` In Count(*) In 9e0 Limit usn2 Is Not Null Union Unwind usn2 Starts With @usn6 As #usn7 With  $`2esn`[..`2esn`] As `5esn` Order By _usn3 =~00 Asc Where #usn7 Ends With `4esn` Ends With @usn5"),
    octest:ct_string("Unwind `2esn` Is Not Null Is Not Null As _usn4 With  \"d_str\" =~`6esn` =~0Xa,.e1[usn1..] As `6esn` Union All With Distinct *,9e12[_usn3] As `8esn` Skip 7 Contains 9e1 Limit `5esn`[`1esn`..`1esn`] Where @usn5 In $`6esn` Optional Match ((@usn5 :@usn6:`7esn`{`6esn`:$0[01234567..00][$`2esn`..$@usn6],`3esn`:`6esn` Starts With $@usn6})),((:`7esn`{`2esn`:`` Starts With @usn5,usn2:$`2esn` Starts With .e0 Starts With 12.0})-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(:`3esn`:`1esn`{_usn4:`1esn`[@usn6..$123456789],`4esn`:$usn2[..12.0]})) Where 123456789 In $usn2 In `6esn`"),
    octest:ct_string("Remove Extract(`6esn` In 0X7 =~`` Where $0[$#usn8..01234567]|0x0 =~$`7esn` =~@usn6).`8esn`!,{`2esn`:$`5esn` Contains Count(*) Contains #usn7,_usn4:Null Starts With $`7esn` Starts With `2esn`}.`1esn` Return *,False[`6esn`][07] Order By 01234567[Null..0.e0][Count(*)..$#usn8] Descending,\"d_str\" =~`6esn` =~0Xa Ascending Skip 0X7 Ends With `3esn` Return $12[`3esn`..0e0][`2esn`..$7] As #usn8,0.12 =~01 =~12 Order By Count ( * )[(`7esn` {usn1:$1000 Contains $`3esn`})-[`5esn`?:_usn4|:@usn5]-(`3esn` {`8esn`:$``[_usn4..][`7esn`..]})-[@usn5:`4esn`|:`7esn` *0X0123456789ABCDEF..{`7esn`:.e0[..999][..0X7]}]-(usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1})..Single(usn1 In 0x0[..`4esn`] Where $999[12.0..])][(:`6esn`:`7esn`{@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]})-[?{`2esn`:$`6esn`[$@usn6..]}]-(`4esn` :`6esn`:`7esn`)<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})..Single(`6esn` In 0X7 =~`` Where $usn1[0.12..]['s_str'..])] Descending,{@usn6:12.0[``],_usn4:$`3esn` Contains 0X0123456789ABCDEF Contains 00} Ends With Single(`6esn` In 0X7 =~`` Where 0X7[0e0..]) Ends With Extract(@usn5 In $#usn8 Is Null Is Null Where @usn5 Contains $`1esn` Contains 999|12.0[``]) Descending Limit (`4esn` :`8esn`{_usn4:0 Is Null Is Null})-[`6esn`:`8esn`|:usn1$_usn3]->(`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]}) Ends With Filter(@usn5 In $#usn8 Is Null Is Null Where @usn5 Contains $`1esn` Contains 999) Ends With [`4esn` In `6esn`[1e1..] Where 07[12e12]] Union Merge ((:`4esn`:#usn8{`7esn`:#usn7 Starts With 0 Starts With 12})-[{`5esn`:.e1[..$``][..0X0123456789ABCDEF]}]->(_usn3 {`5esn`:0.12 Contains .e1})<-[@usn6:`3esn`|:`4esn`*]->(`6esn` :`5esn`)) On Create Set Single(@usn5 In $#usn8 Is Null Is Null Where 12.e12 In $0 In Count(*)).#usn7! =$#usn7 =~0xabc,#usn7:_usn4:usn1,`5esn`+={`7esn`:Count(*) In 01 In .0}[..{`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]}][..#usn7(Distinct 0.e0[9e0][0e0],999[``..][Null..])] On Match Set (_usn4 {#usn7:False[`2esn`..#usn8],#usn8:`5esn`[`1esn`..`1esn`]})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})-[#usn7?:@usn6 *00..]->(_usn3 :_usn4:usn1{@usn5:$@usn6 In $`5esn` In $usn2,#usn7:$0[0X0123456789ABCDEF..$#usn7]}).`3esn` =01234567[$@usn6..0X7][$`1esn`..123.654] Detach Delete Any(@usn6 In @usn5 In $`6esn` Where 9e0[$_usn3..0X7][7..$#usn8]) Contains None(usn1 In 00 Starts With _usn3 Where 01234567 Ends With 12.0 Ends With 0X7) Contains Single(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn8 In .e12 In 9e1),$@usn5 =~07 =~True"),
    octest:ct_string("Merge ((#usn8 :`4esn`:#usn8)<-[`6esn`?{`7esn`:@usn6 Contains _usn4 Contains $`4esn`}]-(usn1 :`4esn`:#usn8{usn2:$`8esn` In \"d_str\" In 9e12})<-[`6esn`?{`7esn`:.12 Ends With `1esn` Ends With $`1esn`,``:9e0 Starts With `6esn`}]-(_usn4 {#usn8:@usn5 In $`6esn`,`7esn`:010 =~`6esn`})) On Match Set `5esn`(0[0.12..]).`1esn`? =12.e12 In $0 In Count(*),(usn2 :`6esn`:`7esn`{`6esn`:`` Contains 12 Contains True,usn2:$`2esn`[123456789..][00..]})-[`7esn`?{usn1:@usn5 Ends With $`3esn` Ends With 12e12,@usn6:12e12[_usn3..][$@usn5..]}]->(usn2 :`5esn`).#usn8? =[`4esn` In `6esn`[1e1..] Where `3esn` =~0.0 =~$``] =~[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`] On Create Set `4esn` =.12 Is Not Null Is Not Null,{@usn6:True[..'s_str'][..01]}.`2esn` =12.e12[...0][..0x0],[usn1 In 00 Starts With _usn3 Where $`` Ends With 12e12].`3esn`? =0.12 Starts With {`1esn`:@usn6[..0xabc][..$#usn7]} Starts With {`3esn`:`8esn`[1000..$7][$`7esn`..`2esn`],_usn4:\"d_str\" Is Null Is Null} Return $_usn4[12e12][`4esn`] As `5esn`,@usn6[`5esn`..$`3esn`] As ``,0.0[..12e12][..$0] Order By usn2[$`1esn`...0] Descending,123.654 Is Not Null Is Not Null Desc Limit 0X7 =~`4esn` =~`8esn` Return Distinct {@usn6:`7esn` In 999 In @usn6} Starts With Extract(usn1 In 0x0[..`4esn`] Where 0x0|07 Ends With 07) Starts With Filter(usn1 In 00 Starts With _usn3 Where $`` Ends With 12e12),False Ends With $`8esn`,``[$`3esn`][$`2esn`] As usn1 Order By $`6esn` Is Null Is Null Desc Limit 999 In $_usn4 In 0X7 Union Return $`5esn` In `2esn` In .0 As `7esn`,None(_usn4 In usn1 Contains False Contains `` Where 12 Ends With 01234567) Ends With None(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $`4esn`[..usn1]) As `` Order By 00 Is Null Is Null Descending Skip $`7esn` Ends With $@usn5 Limit 0X0123456789ABCDEF Contains 12.e12 Contains 999 Optional Match ((_usn4 {`8esn`:9e1 In 01 In 999})),`1esn`=(:_usn4:usn1)-[#usn7?:_usn4|:@usn5{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]->(:`2esn`:`3esn`)<-[``]-(usn1 {#usn7:.e12[..0.e0][..$`1esn`],usn1:010 Contains Count(*)}) Where @usn5 Contains $`1esn` Contains 999"),
    octest:ct_string("Remove Single(usn1 In 00 Starts With _usn3 Where 999 Contains `7esn`).`6esn`? Detach Delete $_usn4[$`1esn`] Unwind `3esn` =~$`5esn` =~12 As `7esn`;"),
    octest:ct_string("Unwind _usn4[0xabc..] As #usn8"),
    octest:ct_string("Remove (_usn4 {#usn7:False[`2esn`..#usn8],#usn8:`5esn`[`1esn`..`1esn`]})<-[#usn8?:`4esn`|:`7esn` *07..]->(`` :#usn7$0).#usn8,[Count(*)[12.e12..]].#usn7,`8esn`:#usn7 With  *,`2esn` Starts With $_usn3 Starts With `2esn` Order By Null[@usn6..][9e1..] Ascending Skip [@usn5 In 0X7 =~.0 =~\"d_str\" Where #usn7 Starts With 0 Starts With 12][Filter(#usn8 In $`5esn` Is Null Is Null Where $12 Contains 123.654 Contains `8esn`)][[_usn4 In usn1 Contains False Contains `` Where True[..'s_str'][..01]|9e1[0.e0..][#usn8..]]] With Distinct 12.e12 Contains $`5esn` As `` Order By $usn1[1e1.._usn3][$@usn6..$#usn7] Desc Limit All(#usn8 In $`5esn` Is Null Is Null Where #usn8[$#usn8..])[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..(#usn8 {`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]})<-[?:@usn5|`8esn`]-(usn2 :@usn5{`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})<-[?:#usn8{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]->(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})] Where False In $`7esn` In .0 Union Optional Match (`5esn` {_usn4:0X7 =~``}),((#usn8 {_usn3:`6esn` =~01234567 =~0Xa,_usn4:$`5esn` Is Null Is Null})) Union All Delete 0X7[12],0x0 In `8esn` In 999,$usn2[..12.0]"),
    octest:ct_string("Unwind 00 Starts With _usn3 As #usn7 Union All Create `3esn`=((`2esn` :_usn4:usn1{`7esn`:7 In 0xabc})<-[:@usn5|`8esn` *0Xa{usn1:$1000 Contains $`3esn`}]->(`2esn` :``)-[usn2?]-(`2esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})),((#usn8 :`1esn`{#usn7:1e1[`6esn`..]})<-[`1esn`{`6esn`:$_usn4[`3esn`][0],_usn3:999 Contains Count ( * ) Contains 123.654}]->(`7esn` :`7esn`)) Return $@usn5[0.12..][@usn5..],010 Contains 0X0123456789ABCDEF Limit 9e0 Starts With `6esn` Merge ((({usn1:`2esn`[$`1esn`..][$_usn3..]})<-[``? *..0X7{_usn4:12 Ends With 01 Ends With 1e1}]-(usn2 :@usn6:`7esn`)<-[#usn7 *123456789..999]-(:`5esn`{`3esn`:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:0e0 =~_usn4}))) On Create Set `8esn` =``"),
    octest:ct_string("Merge usn2=(_usn4 :``{`2esn`:9e1 In 01 In 999,`5esn`:$@usn6[..$usn1]})-[`5esn`?:``|:_usn4]->(:#usn8{#usn7:12e12 Ends With 010 Ends With .0})-[@usn6?:`1esn`]-(:`5esn`) On Match Set [usn1 In 00 Starts With _usn3 Where `6esn`[1e1..]].`5esn`! =Count ( * )[Count ( * )..12e12][usn1..1000],@usn5+=usn1 Contains $`` On Create Set `1esn` =0X0123456789ABCDEF[.e0..$`4esn`] Match #usn8=(((`8esn` :@usn5)<-[@usn5:#usn7|:_usn4]->(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})<-[`4esn`:``|:_usn4{`5esn`:0e0 =~_usn4}]-(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`}))) Where 12e12 Is Not Null With Distinct {usn1:7 =~9e0 =~'s_str',@usn6:$usn1[..$`6esn`][..Null]} =~Single(usn2 In 1000 Contains 0.e0) =~Any(@usn6 In @usn5 In $`6esn` Where $`7esn` Is Not Null) As `3esn`,Filter(usn1 In 00 Starts With _usn3 Where $_usn4[`3esn`][0])[..Extract(`6esn` In 0X7 =~`` Where #usn7 Starts With 0 Starts With 12|0x0 =~_usn4)][..{_usn4:.12 =~.12 =~1e1,#usn7:.e1 Starts With 0.0 Starts With `6esn`}] Order By @usn6(123456789 =~$123456789) In Extract(`4esn` In `6esn`[1e1..]) In {``:True[..'s_str'][..01],usn1:0.12 In $7 In 0} Ascending,$`3esn` =~Null Desc Skip Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 00 Ends With .12 Ends With `4esn`) Contains {`7esn`:0e0 Is Null Is Null,usn2:`4esn` =~123456789} Where `3esn`[$`1esn`..]"),
    octest:ct_string("Detach Delete ({`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`4esn` {@usn6:True[..'s_str'][..01]}) In Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where 07[12e12]),#usn8 Is Not Null Union Merge usn1=(usn2 {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})<-[:`5esn`|`1esn`{`4esn`:9e0[True..`1esn`],@usn6:7 =~9e0 =~'s_str'}]->(#usn7 {`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null}) On Create Set {`6esn`:$`3esn` Contains 0X0123456789ABCDEF Contains 00,`1esn`:1000[123.654..9e12][1000.._usn3]}.`1esn`! =[$`1esn` Is Null Is Null,$12 Contains 123.654 Contains `8esn`] Starts With {`7esn`:Count(*) In 01 In .0,`6esn`:$123456789[..0.12][..#usn7]} Starts With Filter(usn1 In $123456789 Contains usn2 Where 01234567[.12..7][1000..1.e1]) On Create Set `2esn` =$usn2[False..`7esn`][`7esn`.._usn3],``+=_usn4 Ends With 01 Ends With $`1esn`,``+=01 Ends With .e0 Unwind [1.e1 =~$_usn4,.12 Contains $`4esn` Contains $`6esn`] Ends With Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn8 In .e12 In 9e1) As @usn6 Merge @usn5=(:@usn5{usn1:Count(*)[True],@usn6:123456789[$#usn7..]})<-[#usn7]-(`7esn` :`2esn`:`3esn`)-[?:``|:_usn4 *..0X7]->(`4esn` {`6esn`:$12[..``][..$7]}) On Match Set usn1 =_usn3[0],[`4esn` In $`8esn` Starts With 1000 Where False[`2esn`..#usn8]].`1esn`! =Filter(`6esn` In 0X7 =~`` Where $usn2[0e0..])[usn2($#usn8 Is Null Is Null)..Extract(usn1 In 0x0[..`4esn`] Where 123456789 In $usn2 In `6esn`|@usn5[..True][..0X7])][(`` :@usn5{#usn7:0X7[12]})-[@usn6? *07..{_usn4:Count(*)[..`3esn`],`5esn`:01234567[$`3esn`..]}]-(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null})<-[`5esn`:`8esn`|:usn1{usn1:12e12[Count ( * )..][usn2..],usn2:$123456789 Is Null Is Null}]-(`8esn` )..[@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null]]"),
    octest:ct_string("Remove `3esn`:#usn7,None(`4esn` In `6esn`[1e1..] Where $`2esn`[..`2esn`]).#usn8? Union All Unwind #usn8[$#usn8..] As `4esn` Union All Remove All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 12.e12 Contains `5esn`).`6esn`? Match (@usn6 {_usn3:1e1[.e1..],`1esn`:$#usn8})<-[#usn8?*{usn2:\"d_str\" Contains `3esn` Contains 00,`3esn`:010 Contains 0X0123456789ABCDEF}]->({`6esn`:$`8esn`[..$``]})-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]-(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa}) Remove Any(#usn8 In $`5esn` Is Null Is Null Where 0.e0 Ends With 12 Ends With $7).`3esn`?,{`4esn`:@usn5 Ends With $`3esn` Ends With 12e12,`8esn`:Null Starts With $`7esn` Starts With `2esn`}.`4esn`!"),
    octest:ct_string("With Distinct *,.e1 Starts With $`8esn` Where 12.e12[$1000..]"),
    octest:ct_string("Optional Match `1esn`=(:`8esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}),((#usn8 :@usn6:`7esn`{@usn5:1e1[@usn5..]})) Where $`3esn` =~$`7esn` =~False With Distinct {`4esn`:$usn1[0.12..]['s_str'..]} In None(`4esn` In $`8esn` Starts With 1000 Where 0.12 In 01 In $`3esn`) In usn2(True Contains @usn6) As `2esn`,Single(usn1 In 0x0[..`4esn`] Where 1e1 In $#usn8 In 12e12) Is Not Null Is Not Null As `5esn` Order By .e0 Contains 01234567 Descending Limit All(`4esn` In $`8esn` Starts With 1000 Where 0X0123456789ABCDEF[.e0..$`4esn`])[(#usn8 :@usn6:`7esn`{``:9e1 Is Not Null Is Not Null})-[`1esn`{_usn4:`3esn` Contains 0Xa}]->(#usn7 :usn2:@usn6{`1esn`:$usn2 Contains 12.e12 Contains 00})-[`8esn` *..0x0]-(:`2esn`:`3esn`{usn2:$`5esn` In False})..#usn7(Distinct False Contains `3esn`,12e12[_usn3..][$@usn5..])] Remove count(Distinct 0.e0[9e1..][0.0..],$usn2 =~$#usn8).`5esn`?,{`4esn`:9e12 Is Not Null Is Not Null,`8esn`:$0[..`8esn`]}._usn3,@usn5:usn2:@usn6 Union Return 1.e1 =~$_usn4,({`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`4esn` {@usn6:True[..'s_str'][..01]}) In Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where 07[12e12]) As `4esn` Order By $`8esn` In \"d_str\" In 9e12 Desc,`3esn`(.e0 =~`5esn`)[Single(`6esn` In 0X7 =~`` Where $`3esn` =~Null)][[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $_usn3[$`4esn`..Null]|False[`2esn`..#usn8]]] Asc,1e1 In 9e0 In 9e0 Ascending"),
    octest:ct_string("Optional Match #usn8=((({@usn6:0.12 In $`4esn` In `6esn`,``:1e1 Is Null})<-[`7esn`?:`8esn`|:usn1]-(`7esn` :#usn8)-[@usn5?:`3esn`|:`4esn`{`7esn`:Count(*) In 01 In .0,`6esn`:$123456789[..0.12][..#usn7]}]->(`5esn` :`8esn`))) Detach Delete $`6esn`[$@usn6..],`6esn`[0X7..][0x0..],Single(usn1 In 0x0[..`4esn`] Where 1e1 In $#usn8 In 12e12) Is Not Null Is Not Null Remove Filter(usn2 In 1000 Contains 0.e0 Where 12e12[$`5esn`][07])._usn4? Union Return 01234567 Is Null Is Null As `3esn`,0.12 Contains $12 Contains `8esn` As `5esn`,9e0 Starts With `6esn` Skip `3esn` Ends With 010 Limit Any(usn1 In 00 Starts With _usn3 Where `2esn` Is Not Null Is Not Null) Starts With All(`4esn` In $`8esn` Starts With 1000 Where 1.e1[0X0123456789ABCDEF..][$`5esn`..]) Starts With {`4esn`:$usn2 Contains 12.e12 Contains 00,`5esn`:7[$`4esn`..123456789]} Merge (`2esn` :_usn4:usn1{`7esn`:7 In 0xabc})<-[?{@usn5:12.e12['s_str'],`1esn`:_usn3 Ends With 12e12 Ends With .e0}]-(`7esn` :`4esn`:#usn8{`2esn`:Count(*)[..`3esn`]})-[? *07..{@usn6:12[..True][..$`4esn`],`4esn`:.0[$`6esn`..False]}]-({`4esn`:@usn5 Ends With $`3esn` Ends With 12e12,`8esn`:Null Starts With $`7esn` Starts With `2esn`}) On Create Set [#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|$`7esn` Is Not Null].@usn6! =999[$`6esn`],#usn8+=$@usn6 In usn2 In 123456789,_usn3 =$`4esn`[12.e12..][0.0..] On Create Set `` =$`6esn` =~Null =~9e12 Create (((@usn6 {#usn7:'s_str' In \"d_str\" In 123456789,usn2:07[12][$`6esn`]})<-[?:@usn6{`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]}]->(:@usn5)<-[#usn8?:`4esn`|:`7esn` *07..]->(`` :#usn7$0))) Union With Distinct Extract(`4esn` In `6esn`['s_str'..][010..] Where $12 Is Null Is Null) Ends With `2esn`(`7esn`[Null..][@usn5..],123.654[12.e12..1e1]) Ends With Any(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 010[$@usn6]) As `7esn` Skip .e0[..0X0123456789ABCDEF][...e12] Limit $`4esn`[9e1..][0..] Where `1esn` In 999 In $#usn7 Remove [`4esn` In 's_str'[12..'s_str'] Where $`3esn`[@usn5..$123456789]|0.12[Null..]].`8esn`?,All(`4esn` In 's_str'[12..'s_str'] Where $`8esn`[..$``]).`7esn`!,Extract(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null).`1esn`!"),
    octest:ct_string("Unwind Extract(usn2 In 1000 Contains 0.e0 Where 0X7 =~`4esn` =~`8esn`) Contains [0 Contains 12e12,0xabc Ends With $7 Ends With $`2esn`,0x0 =~_usn4] As `7esn` Merge ((:_usn3{@usn6:$`7esn` Is Null Is Null})-[``:``|:_usn4 *0X0123456789ABCDEF..{_usn3:$_usn3[..Count ( * )][..@usn5]}]-(#usn8 :@usn6:`7esn`)<-[?:_usn3|:`4esn` *010{`8esn`:$``[_usn4..][`7esn`..]}]-(`2esn` ))"),
    octest:ct_string("Create (_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8})-[`7esn`?:`4esn`|:`7esn` *..0X7]-(:#usn7{`7esn`:\"d_str\",usn2:True[`4esn`][$`6esn`]}),_usn4=((`2esn` :``)<-[`1esn`?:`1esn` *01234567..12]->(`8esn` {`6esn`:00 In 12.e12})) With  Count(*) In 01 In .0,1000 Contains $#usn7 Contains `6esn` Skip (`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})<-[`7esn`?:@usn5|`8esn`{@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]}]->(`6esn` {@usn6:9e0 Contains `8esn`})<-[ *0xabc{`1esn`:123.654 In \"d_str\" In $_usn3}]-({`6esn`:$`5esn` Is Null,`2esn`:`7esn` Starts With $usn2 Starts With .e0}) =~{#usn8:$@usn5[#usn8..][$`1esn`..]} =~{#usn8:0X0123456789ABCDEF[..usn1]} Limit $_usn3[..Count ( * )][..@usn5] Where $123456789 =~$`5esn` =~07 Match `1esn`=(((`5esn` {@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00})-[ *010{@usn5:Null Is Null Is Null}]-(:`5esn`)<-[`7esn`{`7esn`:\"d_str\",usn2:True[`4esn`][$`6esn`]}]-(#usn7 {@usn5:`5esn`[.e1][0Xa],@usn6:Count(*)[`7esn`..$12]})))"),
    octest:ct_string("Create (:`8esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}) Unwind [@usn5 In $#usn8 Is Null Is Null Where $`2esn` Starts With .e0 Starts With 12.0|$`7esn` Is Null Is Null][``(Distinct 0X7 In $@usn5 In 9e0,12.0[0Xa][00])][`6esn`(Distinct 12.e12 In $0 In Count(*),$`2esn`[$`2esn`..])] As usn1 Merge (`7esn` {_usn3:usn1 Contains $``})<-[usn1]->(:#usn7{`7esn`:\"d_str\",usn2:True[`4esn`][$`6esn`]})-[:`1esn` *010{`2esn`:$_usn3[9e1][$_usn4],`7esn`:`7esn`[...e1][..\"d_str\"]}]->({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12}) Union All Remove (:`1esn`{`6esn`:$0[..`8esn`],`1esn`:True Starts With $`8esn` Starts With \"d_str\"})<-[?:`5esn`|`1esn`{_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12}]-({@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]})<-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]->(`1esn` :`1esn`).`2esn`,[.12 Contains $`4esn` Contains $`6esn`].@usn6 Unwind $123456789 =~12.e12 =~@usn5 As `1esn` Merge ((_usn4 :`2esn`:`3esn`{#usn8:123456789[$#usn7..],#usn7:07[12e12]})) On Create Set `2esn`(Distinct $`2esn`[..7][..$usn1]).`1esn`? ={`4esn`:.12 Starts With 0Xa} Starts With All(usn1 In 00 Starts With _usn3 Where `6esn`[False..0.0][12e12..$usn2]),`5esn` =$usn1[0.12..]['s_str'..],({usn2:00,#usn8:usn2 Ends With $`5esn` Ends With `2esn`})-[#usn8?]-(`2esn` :`5esn`{`4esn`:$usn1[_usn4..][usn2..],`3esn`:999 In $_usn4 In 0X7}).`6esn`? =[999[.e12][01],999 In 9e1 In 7,0xabc Contains Null Contains 9e12][All(`6esn` In 0X7 =~`` Where 0.12[Null..])..[`4esn` In $`8esn` Starts With 1000 Where False[`2esn`..#usn8]]][count(010 Contains Count(*))..(:`4esn`:#usn8)-[:#usn8 *..0X7]->({`6esn`:9e1[.12..],`5esn`:0.12 In $`4esn` In `6esn`})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`1esn` :usn2:@usn6)]"),
    octest:ct_string("Delete 0.0[1000..][.e1..] Remove [0.0 =~0X7 =~#usn7,123456789 =~_usn4 =~$0].`3esn`,[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 0 Is Not Null Is Not Null|$`5esn` In `2esn` In .0].``! Merge (((`5esn` :`6esn`:`7esn`{`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->(`2esn` :usn2:@usn6)-[?:@usn6 *00..{@usn5:$`5esn`[False],`4esn`:usn1[..$_usn4][..``]}]->(:``{`1esn`:`6esn` =~$_usn3}))) On Match Set usn1 =0x0[$`3esn`..010][$#usn7..00] Union All Unwind 0.0[1000..][.e1..] As usn1"),
    octest:ct_string("Merge (#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]})<-[:`6esn` *..0X7{`3esn`:`1esn` Contains Count ( * ),`7esn`:01234567 =~usn1}]-(:@usn5{`8esn`:$`3esn`[@usn5..$123456789],@usn5:\"d_str\" Starts With $usn1})-[?:#usn7|:_usn4]->(`` :#usn7$0) On Match Set usn2:#usn7,usn2 =[usn1[..@usn5][...e0]] In Extract(`6esn` In 0X7 =~`` Where $1000 Contains $`3esn`|12 Ends With 01234567) In {`3esn`:$`5esn` In `2esn` In .0,``:0e0 Is Null Is Null},Extract(@usn6 In @usn5 In $`6esn` Where .12[`1esn`..][$`3esn`..]|@usn6[..0xabc][..$#usn7])._usn3 =[`6esn` In 0X7 =~`` Where 12.e12['s_str']|00[7..$123456789]][All(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6)..][Extract(`4esn` In $`8esn` Starts With 1000 Where 1.e1[0X0123456789ABCDEF..][$`5esn`..]|9e1[...e0])..] Detach Delete @usn5 Contains 01 Contains 12,#usn7 Starts With .e12 Starts With $`7esn`,{_usn3:0 Contains 12e12}[Extract(@usn6 In @usn5 In $`6esn` Where False Contains `3esn`)][Extract(@usn6 In @usn5 In $`6esn` Where usn1 Contains $``)] With Distinct *,`7esn`(0.0[1000..][.e1..],$@usn5 Contains 01)[Any(usn1 In 0x0[..`4esn`] Where 0X7[.e12..01234567])][[$@usn6 Contains 07 Contains 0.e0,`5esn` In 12]] Limit [$#usn8 In .e12 In 9e1][(`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})-[ *00..{`2esn`:$0 Is Not Null}]-(`` :#usn7$0)][Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where `7esn`[1e1..07][0x0..Count ( * )])] Where 12 Ends With .e12 Ends With $7"),
    octest:ct_string("Remove Extract(usn1 In 0x0[..`4esn`] Where $`2esn`[123456789..][00..]).#usn7? Union Create usn1=((#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]})),`4esn`=((usn2 :`7esn`{@usn5:usn1[$`3esn`..$999][True..False],`8esn`:$`5esn` Is Null Is Null})) Optional Match #usn7=((`1esn` {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})<-[:_usn3|:`4esn`{_usn4:$`3esn` =~$`6esn` =~`8esn`,`5esn`:0X7[0e0..]}]-(:`8esn`)<-[:#usn7|:_usn4 *0Xa]-(usn1 :_usn3{_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"})),@usn5=(`4esn` :`1esn`{`8esn`:12 Ends With .e12 Ends With $7,`8esn`:0.0[12...12]})<-[`2esn` *12..0xabc{`6esn`:$123456789[0.0..],@usn5:999[$`6esn`]}]-(`7esn` {`8esn`:0X0123456789ABCDEF In $1000 In $`3esn`})-[usn1{`7esn`:``[Count(*)..][@usn5..]}]->(`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}) Where @usn5[..True][..0X7] With Distinct Extract(#usn7 In 01234567[$`3esn`..] Where 0xabc[$@usn5])[All(`4esn` In 's_str'[12..'s_str'] Where $_usn4[12e12][`4esn`])][(`6esn` :`5esn`)<-[:``|:_usn4 *0Xa]->(`7esn` :`2esn`:`3esn`)] As @usn5,12 Is Null Is Null As #usn7 Limit 0.12 Starts With {`1esn`:@usn6[..0xabc][..$#usn7]} Starts With {`3esn`:`8esn`[1000..$7][$`7esn`..`2esn`],_usn4:\"d_str\" Is Null Is Null} Where 12[..9e0][..999] Union All Return Distinct *,`4esn` Is Null Order By `5esn` In $999 Descending Limit `3esn` =~$`5esn` =~12"),
    octest:ct_string("Return Distinct `7esn`($123456789 Ends With $`6esn`) Starts With {`7esn`:$12[01..][1.e1..],_usn3:$_usn3 =~`7esn` =~$_usn4} As usn1 Order By 12.e12 In .e0 In `7esn` Asc,9e1[.12..] Asc Skip (_usn3 )<-[usn1]->(#usn7 {`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null})-[_usn4?:`6esn`]->(`8esn` :`1esn`) =~Single(#usn7 In 01234567[$`3esn`..] Where 0.12 In $`4esn` In `6esn`) =~Extract(@usn5 In $#usn8 Is Null Is Null Where 12.e12[@usn5..123.654]|$`8esn`[..123456789]) Limit 0.12 In $`4esn` In `6esn` Unwind [0Xa Is Null Is Null] Is Null As `1esn` Detach Delete {`4esn`:$usn1[0.12..]['s_str'..]} In None(`4esn` In $`8esn` Starts With 1000 Where 0.12 In 01 In $`3esn`) In usn2(True Contains @usn6)"),
    octest:ct_string("Match _usn3=(:@usn6:`7esn`{_usn3:False[`2esn`..#usn8]})<-[ *0xabc]-(_usn4 {`1esn`:010[@usn5..]}),_usn3=(`` :@usn6:`7esn`{`2esn`:0.12[0.e0..][`4esn`..]})-[@usn6?:#usn8 *..7{@usn5:@usn5 Starts With 12e12 Starts With @usn5}]->(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})-[usn1?:`2esn`|usn2 *123456789..999]-(usn1 :`7esn`{`1esn`:$@usn6 Contains 07 Contains 0.e0}) Where .e12[$_usn4..][False..] Union All With  Extract(#usn7 In 01234567[$`3esn`..] Where 0xabc[$@usn5])[All(`4esn` In 's_str'[12..'s_str'] Where $_usn4[12e12][`4esn`])][(`6esn` :`5esn`)<-[:``|:_usn4 *0Xa]->(`7esn` :`2esn`:`3esn`)] As @usn5,12 Is Null Is Null As #usn7 Limit 0.12 Starts With {`1esn`:@usn6[..0xabc][..$#usn7]} Starts With {`3esn`:`8esn`[1000..$7][$`7esn`..`2esn`],_usn4:\"d_str\" Is Null Is Null} Create `6esn`=((_usn4 :@usn6:`7esn`)-[:usn2|#usn8*..]-(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12})) Union Create ({`4esn`:#usn7 Starts With 0 Starts With 12,`4esn`:0x0 =~_usn4})-[ *..0x0]->(#usn8 {usn2:7 Contains 9e1}) Create `7esn`=(`` :@usn6:`7esn`{`4esn`:0X0123456789ABCDEF Is Not Null}),(((`7esn` :`7esn`)-[{`2esn`:\"d_str\" =~`3esn` =~0Xa,_usn4:usn1 Is Null Is Null}]->(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]})<-[`2esn`?:`7esn`|`2esn`{`8esn`:00}]-(`5esn` {@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00}))) Remove [`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 12.0[..$7][..999]].`5esn`!,usn1(0X7[.e12..01234567])._usn3;"),
    octest:ct_string("Create @usn6=(((@usn6 :`5esn`{``:.e1 In $@usn6 In 999,`8esn`:_usn3 Is Null Is Null})<-[$#usn8]->(`4esn` {#usn8:`1esn`[0e0..],#usn7:$`6esn`[..0X0123456789ABCDEF]})-[`6esn`? *0Xa{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}]-(:`6esn`:`7esn`{`8esn`:$`3esn`[@usn5..$123456789],@usn5:\"d_str\" Starts With $usn1}))) Remove [0.0 =~0X7 =~#usn7,123456789 =~_usn4 =~$0].`3esn`,[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 0 Is Not Null Is Not Null|$`5esn` In `2esn` In .0].``! Union Unwind `4esn` =~$`3esn` =~$123456789 As #usn7 Create ((`` :`1esn`)-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`4esn` {`2esn`:@usn6[`5esn`..$`3esn`],`7esn`:$`1esn` Is Null})),`1esn`=(:@usn5{usn1:Count(*)[True],@usn6:123456789[$#usn7..]})<-[#usn7]-(`7esn` :`2esn`:`3esn`)-[?:``|:_usn4 *..0X7]->(`4esn` {`6esn`:$12[..``][..$7]})"),
    octest:ct_string("Return Distinct @usn5 Starts With 12e12 Starts With @usn5,$1000 =~$`7esn`,\"d_str\" Starts With $usn1 As `7esn` Order By $0[..`8esn`] Desc,Count(*) Starts With 1e1 Starts With $123456789 Ascending,12e12[$`5esn`][07] Desc Limit Single(#usn8 In $`5esn` Is Null Is Null Where 's_str' Starts With 1000 Starts With #usn8)[{_usn3:$0 Ends With $#usn7 Ends With .12}][[12.0[0Xa][00],.0[01][$12]]];"),
    octest:ct_string("Create #usn8=(((`2esn` :_usn3{`5esn`:12.e12[$1000..],`4esn`:'s_str'[..0.0][..$`4esn`]})<-[_usn3?:``|:_usn4 *0xabc{`6esn`:$#usn8 Ends With 1000 Ends With .0,`7esn`:010 =~`6esn`}]-(:usn1{#usn7:12[0X7..@usn6]})-[usn1?:`1esn` *0X0123456789ABCDEF..{usn2:$`4esn`[12.e12..][0.0..]}]-(:`6esn`:`7esn`{usn2:_usn3 Contains @usn6 Contains 1.e1,usn2:$`6esn`[`1esn`..][.e0..]}))),usn1=((:`1esn`{@usn6:$_usn4[$`4esn`..$#usn7][`6esn`..7],`8esn`:'s_str'['s_str'..$usn2][_usn3.._usn3]})-[usn1?:`2esn`|usn2 *123456789..999]-(`3esn` :usn2:@usn6)) Union Merge `3esn`=((:#usn8{_usn4:\"d_str\"[Count ( * )],`2esn`:9e0 Ends With $`7esn`})) Merge `7esn`=(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})-[?:#usn7|:_usn4]->(`` :#usn7$0)-[`2esn` *0X0123456789ABCDEF..{usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3}]->(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]}) On Create Set ``+={usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null} Is Not Null Is Not Null,@usn5+=usn1[..@usn5][...e0],`2esn`+=All(#usn7 In 01234567[$`3esn`..] Where 12[usn1][True])[..[`4esn` In `6esn`[1e1..] Where $`2esn`[..`2esn`]|_usn3 In .e1 In $12]][..{`2esn`:$usn1[1e1.._usn3][$@usn6..$#usn7]}] Union All Optional Match `3esn`=(usn1 {#usn7:.e12[..0.e0][..$`1esn`],usn1:010 Contains Count(*)})-[usn2{`6esn`:$@usn6[_usn3..0.e0]}]->({usn1:`4esn` In $12 In `8esn`})<-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`6esn` {`8esn`:`8esn` In $@usn5}) Where 0x0[...e12][..@usn5] Detach Delete usn1[1e1][$_usn4],999[$usn2..] Remove (`3esn` :#usn8{#usn8:$_usn4[$`8esn`..][07..]})<-[`2esn` *12..0xabc{`6esn`:$123456789[0.0..],@usn5:999[$`6esn`]}]-({@usn6:9e1 Contains $`3esn` Contains 01234567,@usn6:.e12[.12..][_usn4..]})<-[?:usn2|#usn8 *00..]-(`6esn` :`5esn`{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]}).`6esn`,#usn7:#usn8,{#usn7:0Xa[..$``],`1esn`:usn2 Is Not Null}.usn1?"),
    octest:ct_string("Create (_usn3 :_usn4:usn1)<-[:``|:_usn4 *01234567..12{`2esn`:$`` Is Null Is Null,``:$`4esn`[usn1..$#usn8][12.0..`3esn`]}]->(:@usn6:`7esn`{_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`}) Unwind Extract(#usn7 In 01234567[$`3esn`..] Where 0xabc[$@usn5])[All(`4esn` In 's_str'[12..'s_str'] Where $_usn4[12e12][`4esn`])][(`6esn` :`5esn`)<-[:``|:_usn4 *0Xa]->(`7esn` :`2esn`:`3esn`)] As @usn6 Unwind (@usn6 {_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12})-[*{`2esn`:$1000[01234567]}]-(_usn4 :`4esn`:#usn8{#usn7:1e1[@usn5..]})<-[:`2esn`|usn2 *0..010]->(`` :`1esn`) Is Not Null Is Not Null As `7esn` Union All With Distinct 01234567 Ends With 0x0,[`2esn` In `7esn` Starts With $`` Starts With $#usn7][{#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1}..] As #usn8,$1000 Is Not Null Is Not Null Order By None(@usn5 In 0X7 =~.0 =~\"d_str\" Where _usn3[...e1])[[_usn4 In usn1 Contains False Contains `` Where 0.12 In $7 In 0]..][[7[..12e12][..$`6esn`]]..] Asc,12[usn1][True] Desc Limit 010 Contains Count(*) Where 0.12 Ends With $usn1 Ends With $@usn5 Return *,$`1esn`[9e1.._usn4][$999..$`2esn`] As `8esn`,$_usn3 In $#usn8 As #usn7"),
    octest:ct_string("Detach Delete 07[0..`4esn`],``(Distinct `1esn`[0e0..]) =~(:`1esn`{@usn5:123456789 Starts With `2esn` Starts With 9e12})-[@usn6?:`1esn`]-(:`5esn`)-[`5esn`?:`3esn`|:`4esn`{`1esn`:$usn2 Contains 12.e12 Contains 00}]-(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]}),[$1000 Is Null Is Null] Is Null Union All Unwind 12e12 Starts With $123456789 Starts With 12.0 As usn1 Optional Match `3esn`=(({``:$1000 Is Null Is Null})) Where `1esn`[...e1] Union With Distinct *,7[..12e12][..$`6esn`],01234567[$@usn6..0X7][$`1esn`..123.654] As `6esn` Order By Count(*)[12.e12..] Ascending,$usn1 In 1000 In $#usn7 Descending"),
    octest:ct_string("Detach Delete False Ends With $`8esn`,0x0[123456789] Return usn1[..$_usn4][..``] Order By .e1 Starts With $`8esn` Asc Skip (`6esn` :`6esn`:`7esn`{_usn4:\"d_str\"})<-[_usn4?:#usn8 *..0X7{@usn5:07}]-(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]})[(_usn4 :_usn4:usn1)-[@usn5? *999..]-(usn1 :`4esn`:#usn8)..{#usn7:$@usn6 Is Null Is Null}][@usn6(Distinct _usn3 In .e1 In $12,123.654 Starts With usn1 Starts With @usn5)..[usn2 In 1000 Contains 0.e0 Where $`7esn` Ends With $`2esn` Ends With $usn1]] Detach Delete 0.e0[`6esn`...e0][9e12...e12];"),
    octest:ct_string("Detach Delete Any(#usn7 In 01234567[$`3esn`..] Where 00 In 1e1)[[usn2 In 1000 Contains 0.e0 Where 12e12 Ends With 010 Ends With .0|0xabc[12.e12..`1esn`]]..][[@usn5 In .12[#usn7][$`8esn`] Where $@usn5 =~$`` =~$usn2]..],_usn3(Distinct 0.12 In 01 In $`3esn`,1.e1[0X0123456789ABCDEF..][$`5esn`..]) Ends With Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) Ends With Filter(usn2 In 1000 Contains 0.e0 Where 12e12 Ends With 010 Ends With .0) With Distinct *,$0 =~$0 =~.e0 As `7esn`,$@usn5[#usn8..][$`1esn`..] As `7esn` Order By $usn1[1e1.._usn3][$@usn6..$#usn7] Desc Skip [@usn6 In @usn5 In $`6esn` Where $999[$1000]|$7[.12]] In {`1esn`:$@usn6 Contains 07 Contains 0.e0} In (`2esn` {usn1:@usn6[$`7esn`],_usn3:$@usn6[..12e12]})-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]->(usn1 {#usn7:Count ( * )[@usn6..0x0]})-[@usn6?:#usn8 *..7{@usn5:@usn5 Starts With 12e12 Starts With @usn5}]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3}) Where 9e12[usn2..7][.e1..$`7esn`] Union All Delete Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where \"d_str\" Is Null Is Null)[count(Distinct 0.12 Contains $12 Contains `8esn`)..[$`1esn` Is Null Is Null,9e1 In 01 In 999]],(usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1})-[#usn8? *0xabc{`5esn`:0X7[12]}]->(usn1 {`2esn`:True =~@usn5 =~$`1esn`,`2esn`:`6esn`[1.e1..$#usn7][.e0..True]})[Any(_usn4 In usn1 Contains False Contains `` Where 0.12 In 01 In $`3esn`)..Single(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $123456789[..0x0][..`4esn`])][All(`6esn` In 0X7 =~`` Where $`3esn` =~Null)..{`8esn`:0xabc Ends With $#usn7 Ends With #usn8,usn2:usn1[$`3esn`..$999][True..False]}],usn2(Distinct `7esn` Ends With $usn2 Ends With 999) =~Extract(@usn5 In 0X7 =~.0 =~\"d_str\"|$`5esn` In `2esn` In .0) =~Any(`4esn` In `6esn`['s_str'..][010..] Where 01 Ends With .e0)"),
    octest:ct_string("Remove (usn1 :_usn3{@usn6:True[..'s_str'][..01]})-[? *999..]-(`` :`1esn`).usn2?,Extract(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 123456789[$#usn7..]|123456789 In $usn2 In `6esn`)._usn4?,Filter(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $`6esn` Is Null Is Null)._usn3 Union All Remove {`1esn`:`7esn`[Null..][@usn5..]}.`7esn`! Create (({`5esn`:_usn3 Contains @usn6 Contains 1.e1,`7esn`:$12[01..][1.e1..]})-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})<-[usn1?{#usn7:9e12 Is Not Null Is Not Null,usn2:`3esn` =~0.0 =~$``}]->(`5esn` :`3esn`:`1esn`{`6esn`:$1000[.e0..]})),_usn4=(@usn5 {`1esn`:0[usn2..]})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`5esn` {_usn4:0X7 =~``})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(:`6esn`:`7esn`{`3esn`:`8esn`[$``]}) Remove `4esn`:`3esn`:`1esn`"),
    octest:ct_string("Unwind [$12[01..][1.e1..]][[usn1 In 00 Starts With _usn3 Where 00]..@usn6(Distinct 0X0123456789ABCDEF[.e0..$`4esn`],$0 Ends With $#usn7 Ends With .12)] As `8esn` With  0x0[0X7..][usn1..] As _usn4 Order By `6esn` Starts With $usn2 Starts With 0.0 Ascending,0X7 In $@usn5 In 9e0 Descending Where 00 In 12.0 In 's_str' Union Delete 0.12 =~9e0,12.0[0Xa][00] With  {_usn4:00}[#usn7(00 In 12.e12)][[.12 Ends With `1esn` Ends With $`1esn`,$`5esn`[False]]] As `1esn` Order By 0 Is Not Null Descending Skip 0x0 Where 123456789 Starts With #usn7 Starts With `6esn` Optional Match `8esn`=((_usn4 :@usn6:`7esn`)-[:usn2|#usn8*..]-(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12}))"),
    octest:ct_string("Create (_usn4 :#usn8)-[`1esn`?:`1esn` *01234567..12]-({_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}) Remove Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $999[12.0..]|Count(*)[.e0.._usn4]).`8esn`?,Single(#usn8 In $`5esn` Is Null Is Null Where .12[`1esn`..][$`3esn`..]).``!,count(Distinct `6esn` =~01234567 =~0Xa).`8esn`! Create (@usn6 {_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12})<-[:`5esn`|`1esn`{`4esn`:9e0[True..`1esn`],@usn6:7 =~9e0 =~'s_str'}]->(`6esn` {`2esn`:$`2esn`[..`2esn`],usn1:False[0Xa..$@usn5][$`6esn`..12e12]}),(({_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[:``|:_usn4 *0Xa]-(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})) Union All Create ``=(({`5esn`:0e0 =~_usn4})),((({`1esn`:12[..9e0][..999],usn1:0x0 =~$`7esn` =~@usn6})-[#usn8:`3esn`|:`4esn` *0..010]-(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]})<-[_usn3]->(_usn4 :`3esn`:`1esn`{`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]})));"),
    octest:ct_string("Create @usn6=((:`7esn`{`2esn`:`` Starts With @usn5,usn2:$`2esn` Starts With .e0 Starts With 12.0})-[`6esn`? *00..{`8esn`:$`2esn`[123456789..][00..],`7esn`:123.654 Contains #usn8}]->(:_usn3{@usn6:$`7esn` Is Null Is Null})),((({_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999})<-[@usn6?:`6esn`*..]-(_usn3 :usn2:@usn6)-[usn1?:`2esn`|usn2 *123456789..999]-(`3esn` :usn2:@usn6))) Unwind $@usn5[.e1] As #usn8 Union Delete {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']}[(`1esn` :`8esn`{`7esn`:`5esn`[`1esn`]})<-[`6esn`:`4esn`|:`7esn` *..0x0]->(#usn8 :@usn5)],010 Is Null Is Null"),
    octest:ct_string("Return Distinct 0.12 Contains .e1,Filter(`6esn` In 0X7 =~`` Where $usn2[0e0..])[usn2($#usn8 Is Null Is Null)..Extract(usn1 In 0x0[..`4esn`] Where 123456789 In $usn2 In `6esn`|@usn5[..True][..0X7])][(`` :@usn5{#usn7:0X7[12]})-[@usn6? *07..{_usn4:Count(*)[..`3esn`],`5esn`:01234567[$`3esn`..]}]-(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null})<-[`5esn`:`8esn`|:usn1{usn1:12e12[Count ( * )..][usn2..],usn2:$123456789 Is Null Is Null}]-(`8esn` )..[@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null]] As `3esn`,`` Order By 01234567[.12..7][1000..1.e1] Ascending Union All Delete `2esn`[$`1esn`..][$_usn3..],7 =~9e0 =~'s_str' Merge (`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})-[? *..0X7{`3esn`:`8esn`[$``]}]->({`2esn`:@usn5 In 0X0123456789ABCDEF,`1esn`:@usn6[`5esn`..$`3esn`]})-[?:usn1|`3esn`{#usn8:1000[..$`6esn`][..0xabc]}]->(usn1 :_usn3{@usn6:True[..'s_str'][..01]}) Union With  *,$`3esn`[`2esn`...e0] As _usn3 Limit Count ( * )[Count ( * )..12e12][usn1..1000] Where 12[0X7..@usn6] Remove Extract(@usn5 In 0X7 =~.0 =~\"d_str\"|$`5esn` In `2esn` In .0).`2esn`?,(`4esn` {@usn5:1e1 In $#usn8 In 12e12})-[_usn4?:`5esn`|`1esn`]-(@usn5 {``:12[usn1][True],``:$`5esn` In `2esn` In $12}).`7esn`!,[999[.e12][01]].`2esn`!"),
    octest:ct_string("Match `1esn`=(:@usn5{usn1:Count(*)[True],@usn6:123456789[$#usn7..]})<-[#usn7]-(`7esn` :`2esn`:`3esn`)-[?:``|:_usn4 *..0X7]->(`4esn` {`6esn`:$12[..``][..$7]}),`1esn`=(((`7esn` :`2esn`:`3esn`)<-[@usn5?:#usn8 *999..{`1esn`:$@usn5 =~$`` =~$usn2}]->(`2esn` {`3esn`:$999[12.0..]})-[? *00..{#usn8:12.e12[...0][..0x0],`7esn`:$`4esn`[9e1..][0..]}]-(:usn1{`6esn`:7 Contains 9e1,#usn8:`7esn`[...e1][..\"d_str\"]}))) Where 7 Contains $`5esn` Contains $usn1 Create (`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]})<-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :`4esn`:#usn8) Union Create (:`8esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}) Unwind [@usn5 In $#usn8 Is Null Is Null Where $`2esn` Starts With .e0 Starts With 12.0|$`7esn` Is Null Is Null][``(Distinct 0X7 In $@usn5 In 9e0,12.0[0Xa][00])][`6esn`(Distinct 12.e12 In $0 In Count(*),$`2esn`[$`2esn`..])] As usn1 Merge (`7esn` {_usn3:usn1 Contains $``})<-[usn1]->(:#usn7{`7esn`:\"d_str\",usn2:True[`4esn`][$`6esn`]})-[:`1esn` *010{`2esn`:$_usn3[9e1][$_usn4],`7esn`:`7esn`[...e1][..\"d_str\"]}]->({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})"),
    octest:ct_string("Detach Delete [@usn5 In $#usn8 Is Null Is Null Where 7 In 0xabc|$_usn4[$`1esn`]] Is Null Is Null,9e1 Is Null Is Null,@usn6[`5esn`..$`3esn`] Create #usn7=({`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]->(`3esn` {_usn3:@usn6 Contains _usn4 Contains $`4esn`})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->({_usn3:12.e12 In $0 In Count(*)}) Union All Create ((`3esn` :`8esn`)-[?{@usn5:12.e12['s_str'],`1esn`:_usn3 Ends With 12e12 Ends With .e0}]-(:`4esn`:#usn8{_usn4:'s_str' In \"d_str\" In 123456789,`2esn`:0.12 Ends With $usn1 Ends With $@usn5})-[ *..0X7]->(`5esn` :_usn4:usn1)),(((`` :@usn6:`7esn`{`2esn`:0.12[0.e0..][`4esn`..]})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->(`8esn` :_usn3{`8esn`:$`3esn` In $12 In 's_str'})-[`7esn`{usn1:0 Is Not Null}]->(:`7esn`{`6esn`:123456789 Is Null,`1esn`:00 In 12.e12}))) Detach Delete $@usn5 Ends With 0X0123456789ABCDEF,$123456789[0.0..]"),
    octest:ct_string("Remove `7esn`:`6esn`:`7esn` Return Distinct *,1.e1 Contains @usn6 As usn2 Order By (#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :usn2:@usn6)-[`1esn`:`8esn`|:usn1 *0xabc{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]-(@usn5 :#usn8{`1esn`:0xabc Ends With $7 Ends With $`2esn`,_usn4:``})[.._usn4(@usn6[`5esn`..$`3esn`],`8esn`[$``])] Ascending,Single(#usn8 In $`5esn` Is Null Is Null Where $123456789 Ends With $`6esn`) =~Extract(@usn5 In $#usn8 Is Null Is Null Where 0.e0 Ends With 12 Ends With $7) =~Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where $`4esn`[9e1..][0..]) Asc,0.0[999..] Asc"),
    octest:ct_string("Merge ((`6esn` :`7esn`)-[_usn4?:@usn6 *..7]->(@usn5 :`8esn`)<-[@usn5:`6esn` *0X0123456789ABCDEF..]-({@usn6:0.12 In $`4esn` In `6esn`,``:1e1 Is Null})) On Create Set [$usn1 In 1000 In $#usn7,$#usn7 In 12.0 In 0X0123456789ABCDEF,9e0 Is Not Null]._usn3 =All(_usn4 In usn1 Contains False Contains `` Where #usn8[$#usn8..])[(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})..],Extract(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null).`1esn`! =0xabc Starts With _usn3 On Match Set #usn8 =07[07],@usn5+={`3esn`:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:0e0 =~_usn4}[{`4esn`:$7 Ends With 12.0 Ends With 0xabc,_usn4:0X0123456789ABCDEF[.e0..$`4esn`]}..][Extract(`4esn` In `6esn`['s_str'..][010..] Where $999 Ends With $`3esn` Ends With `8esn`)..] Delete Single(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where .12 Starts With @usn5 Starts With $#usn8) =~(@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})<-[_usn4?:`6esn`]-(`2esn` {`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null}) =~(_usn4 :usn1)-[@usn5? *999..]-(usn1 :`4esn`:#usn8)-[usn2?:`2esn`|usn2*..{@usn5:$1000[01234567],@usn5:0x0[$`3esn`..010][$#usn7..00]}]->(`4esn` {#usn8:`1esn`[0e0..],#usn7:$`6esn`[..0X0123456789ABCDEF]}),07,`2esn`[$`3esn`..]"),
    octest:ct_string("Detach Delete True Starts With 12.0 Starts With $@usn5,@usn5 =~.0 =~$`1esn` Merge (_usn4 :#usn8)<-[`6esn`? *..7{`3esn`:123456789[$#usn7..]}]-(:`2esn`:`3esn`{`7esn`:$_usn4[#usn8..]})-[usn1?:_usn3|:`4esn` *123456789..999{`6esn`:01 Ends With .e0,`4esn`:$`7esn` Is Not Null}]->(_usn3 ) Union With Distinct *,`3esn` =~`3esn` =~$`6esn` As `7esn`,Any(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 123456789[$#usn7..]) Contains [#usn8 In $`5esn` Is Null Is Null Where 0e0 =~_usn4|$@usn6 =~usn1] Skip .12[..`6esn`][..\"d_str\"] Limit [@usn5 In 0X7 =~.0 =~\"d_str\" Where #usn7 Starts With 0 Starts With 12][Filter(#usn8 In $`5esn` Is Null Is Null Where $12 Contains 123.654 Contains `8esn`)][[_usn4 In usn1 Contains False Contains `` Where True[..'s_str'][..01]|9e1[0.e0..][#usn8..]]] Where `5esn`[`1esn`] Delete 7[..0X7][..'s_str'],9e0 Ends With $`7esn`,$0 Ends With $#usn7 Ends With .12 Union With Distinct *,`3esn` =~`3esn` =~$`6esn` As `7esn`,Any(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 123456789[$#usn7..]) Contains [#usn8 In $`5esn` Is Null Is Null Where 0e0 =~_usn4|$@usn6 =~usn1] Skip .12[..`6esn`][..\"d_str\"] Limit [@usn5 In 0X7 =~.0 =~\"d_str\" Where #usn7 Starts With 0 Starts With 12][Filter(#usn8 In $`5esn` Is Null Is Null Where $12 Contains 123.654 Contains `8esn`)][[_usn4 In usn1 Contains False Contains `` Where True[..'s_str'][..01]|9e1[0.e0..][#usn8..]]] Where `5esn`[`1esn`] Delete 7[..0X7][..'s_str'],9e0 Ends With $`7esn`,$0 Ends With $#usn7 Ends With .12"),
    octest:ct_string("Delete $12 Contains 123.654 Contains `8esn`,$`3esn` Is Not Null Is Not Null Detach Delete 12.0[123456789..Null]['s_str'..$usn1],9e1[.12..],{`5esn`:0Xa In .e1 In Count(*)}[$`8esn`][[#usn8 In $`5esn` Is Null Is Null Where 0.e0 Ends With 12 Ends With $7]] Detach Delete Any(`6esn` In 0X7 =~`` Where 0X7[0e0..]) Contains Single(`4esn` In `6esn`['s_str'..][010..] Where @usn6[`3esn`..][$7..])"),
    octest:ct_string("Unwind 00 Is Not Null Is Not Null As `` With Distinct *,`7esn`[Null..][@usn5..],0X0123456789ABCDEF Contains $usn1 Skip Count(*)[[@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null]..] Limit False Ends With $`8esn` Where 0 Starts With 12e12 Starts With `4esn` Optional Match (`` :#usn7)<-[?:`4esn`|:`7esn` *..0X7]-(:`3esn`:`1esn`{`1esn`:0.0[1000..][.e1..]})<-[`5esn`?:`6esn`]->(`6esn` :`6esn`:`7esn`{_usn4:\"d_str\"}),`4esn`=(((`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})-[?{`4esn`:0.e0 Ends With 12 Ends With $7,@usn6:$``[_usn4..][`7esn`..]}]->(#usn7 {@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]})<-[@usn5? *1000..]->(:@usn6:`7esn`{_usn3:False[`2esn`..#usn8]}))) Where 123.654 In \"d_str\" In $_usn3 Union Match usn2=((:_usn4:usn1{`1esn`:123456789 Starts With `2esn` Starts With .0,@usn6:12.e12 Contains `5esn`})),((`4esn` :`2esn`:`3esn`{`1esn`:123456789[1000]})<-[?{`8esn`:_usn3 Ends With 0x0 Ends With 01234567,#usn8:$`7esn` Is Null Is Null}]->(:``{#usn8:$`2esn`[..`2esn`]})<-[@usn5:#usn7|:_usn4]->({usn1:usn1[$`3esn`..$999][True..False],`7esn`:_usn3 Ends With 12e12 Ends With .e0})) Remove {`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}.@usn5?;"),
    octest:ct_string("Unwind Extract(@usn6 In @usn5 In $`6esn` Where $`5esn` Contains $@usn6|$0[7..][Null..])[[`6esn` In 0X7 =~`` Where 9e1[0.e0..][#usn8..]]] As @usn6 Unwind 999 Contains `7esn` As `7esn` Union All Remove usn2:#usn8,Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where \"d_str\" Is Null Is Null).`7esn`? Remove None(usn1 In $123456789 Contains usn2 Where usn2 Is Not Null).`5esn`,(#usn7 :#usn8)-[`6esn`:`4esn`|:`7esn` *..0x0]->({`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1}).@usn6;"),
    octest:ct_string("Delete _usn4[$`4esn`..] Remove [1e1 In $#usn8 In 12e12,7 In @usn5 In $`4esn`].`5esn`!,`7esn`:`1esn`,usn2:usn1 Merge (({`8esn`:$@usn5 Contains 01,`2esn`:123.654 Contains #usn8})<-[{@usn5:$123456789 Ends With .e1,#usn8:0x0 =~_usn4}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})) On Match Set #usn7($123456789 Contains 01 Contains 0.12).usn2! =.e12 =~0.0 =~9e0,All(#usn7 In 01234567[$`3esn`..] Where $@usn6 =~usn1).`4esn` =$999[12.0..],`8esn`+=Filter(_usn4 In usn1 Contains False Contains `` Where 9e0 =~$`5esn`) =~``($`4esn`[usn1..$#usn8][12.0..`3esn`]) =~Single(usn2 In 1000 Contains 0.e0) On Match Set `` =None(`4esn` In 's_str'[12..'s_str'])[Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`)..][Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where $@usn6 Contains Count ( * ))..],#usn7($`8esn`[$``..$7][$1000..$`7esn`],`2esn` In 7 In usn2).`6esn`? =$_usn4['s_str'..],`4esn`+=$`7esn` Ends With $usn2 Union All Remove [usn2 In 1000 Contains 0.e0 Where True[Count(*)..][1e1..]]._usn3,{`7esn`:$`7esn` Ends With 07 Ends With 07,`5esn`:@usn5 Ends With $`3esn` Ends With 12e12}.@usn6,[usn1 In 0x0[..`4esn`] Where $1000 Is Null Is Null|12[usn1][True]].usn2? Match (((`7esn` :``)<-[``?:@usn6]-(`6esn` :`3esn`:`1esn`{`7esn`:7 In 0xabc})-[:usn1|`3esn`*]->(:_usn3{`8esn`:0X0123456789ABCDEF In $1000 In $`3esn`}))) With  `3esn` Contains 0Xa As `6esn`,[_usn4 Starts With $@usn6 Starts With #usn7,$@usn5 Contains 01] =~`4esn`(12 Ends With 01 Ends With 1e1) =~Extract(`6esn` In 0X7 =~`` Where 0x0[..`4esn`]) As ``,[usn1[..@usn5][...e0]][(`1esn` :`8esn`{`7esn`:`5esn`[`1esn`]})<-[`6esn`:`4esn`|:`7esn` *..0x0]->(#usn8 :@usn5)]"),
    octest:ct_string("Create _usn4=((:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[`6esn`:``|:_usn4 *..01]->(`5esn` {_usn4:0X7 =~``})-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(usn2 :usn1{``:9e12 Ends With 0X0123456789ABCDEF Ends With #usn7})),(((#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]})-[?*..{`3esn`:Count(*)[12.e12..],`3esn`:usn2 =~0x0}]-(`` :`3esn`:`1esn`{_usn3:'s_str'[..0.0][..$`4esn`],`4esn`:$123456789 Is Not Null Is Not Null})<-[:`6esn` *..0X7{`3esn`:`1esn` Contains Count ( * ),`7esn`:01234567 =~usn1}]-({usn1:010[@usn5..],`7esn`:`2esn` Is Not Null Is Not Null}))) Match (`5esn` {_usn4:0X7 =~``}),((#usn8 {_usn3:`6esn` =~01234567 =~0Xa,_usn4:$`5esn` Is Null Is Null}))"),
    octest:ct_string("Remove (#usn8 {@usn5:.e1[..$``][..0X0123456789ABCDEF],_usn3:$usn2 =~$#usn8})<-[ *..0x0{`8esn`:010[@usn5..],#usn8:False Is Not Null Is Not Null}]-(`5esn` {`8esn`:0.0[12...12]}).@usn6 Return Distinct *,$123456789 =~$#usn8 =~$#usn8 Order By $@usn6 Contains 07 Contains 0.e0 Asc Skip 0e0[12][$_usn4] Limit 123.654[12.e12..1e1] Union With Distinct `` Is Not Null Is Not Null As @usn6,`5esn`[`1esn`..`1esn`],[$`8esn` In \"d_str\" In 9e12,9e0 Contains `8esn`,$@usn6 Contains 0 Contains $`2esn`][Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 01 In _usn3 In 12)][Extract(#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|`7esn` Starts With $usn2 Starts With .e0)] As _usn4 Order By Count(*) Is Null Descending,[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 12 Ends With 01234567|Count(*) In 01 In .0] Ends With [`4esn` In 's_str'[12..'s_str'] Where 0.12 In 01 In $`3esn`|9e0 =~$`5esn`] Ascending,[0X0123456789ABCDEF In 01234567,0x0 Contains _usn4 Contains 123456789] Asc Skip 1000 Contains 123456789 Contains 1e1 Limit $`6esn`[`3esn`..0e0] With Distinct .e0[`4esn`..`4esn`][0.0..$0] As `7esn` Order By None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where _usn3[...e1]) In (:_usn4:usn1{``:123456789 Starts With `2esn` Starts With .0,`5esn`:``})<-[usn2?:usn2|#usn8{`6esn`:$123456789[$`2esn`][True],@usn5:$`3esn` =~$`6esn` =~`8esn`}]-({`5esn`:0e0 =~_usn4})-[_usn4:_usn3|:`4esn` *1000..{#usn8:$999 Ends With $`3esn` Ends With `8esn`}]->(#usn7 :`7esn`{`4esn`:.12 Starts With .12 Starts With `3esn`}) Descending,01234567[.12..7][1000..1.e1] Ascending Where #usn7[..$1000][..01] Delete [$`5esn` Is Not Null,0e0 Is Null Is Null] Ends With Filter(`4esn` In `6esn`['s_str'..][010..] Where Count(*)[..`3esn`]) Ends With (_usn4 {`8esn`:9e1 In 01 In 999})-[`8esn`?:#usn7|:_usn4]-(#usn8 :_usn3)-[ *0..010{#usn7:$@usn6 Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)}) Union Create (`` :#usn7) Unwind .e1 Starts With 0.0 Starts With `6esn` As `2esn` Detach Delete Null[1.e1..]"),
    octest:ct_string("Match `7esn`=(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})<-[#usn8? *0xabc{`5esn`:0X7[12]}]->(`4esn` {usn2:7 In 0xabc})<-[?:#usn8{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]->({@usn5:False In $`7esn` In .0,usn2:Null[1.e1..]}) Return 9e1[010..] As `6esn` Order By $7 Ends With `5esn` Descending,1e1[\"d_str\"] Ascending Limit $`7esn` Is Null Is Null Return *,01234567 Is Null Is Null Order By {`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null}[..[_usn4 In usn1 Contains False Contains `` Where True[..'s_str'][..01]]] Ascending Skip 010 =~$usn2 =~1e1 Union Return *,({`1esn`:@usn6})<-[_usn4?:_usn4|:@usn5 *123456789..999{`2esn`:@usn5 In $`6esn`}]->(:`3esn`:`1esn`{`1esn`:0.0[1000..][.e1..]}) Is Null Is Null As `3esn` Match ((usn1 :`6esn`:`7esn`)) Unwind $@usn5[.e1] As #usn8"),
    octest:ct_string("Unwind `7esn` Starts With $usn2 Starts With .e0 As usn2"),
    octest:ct_string("With Distinct *,None(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0.12 In $`4esn` In `6esn`) Is Null As @usn6,123456789 =~_usn4 =~$0 As usn1 Where Count(*)[..`3esn`] Union All Remove [`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 7 In $`3esn` In #usn7].@usn5,Extract(usn1 In 0x0[..`4esn`] Where 1000 Ends With 1000 Ends With $`4esn`|@usn6[$`3esn`])._usn3? Return Distinct *,$@usn6[..$usn1] As _usn3 Order By {``:12e12[$`5esn`][07],_usn3:$`6esn` Is Null Is Null} Ends With [0 Is Not Null Is Not Null] Descending,Extract(@usn6 In @usn5 In $`6esn` Where 123456789 =~_usn4 =~$0) Is Null Desc,.12 Ends With `1esn` Ends With $`1esn` Asc Limit `7esn` Starts With $`` Starts With $#usn7 Unwind $@usn6 Starts With usn2 Starts With usn2 As _usn4"),
    octest:ct_string("Return Distinct 7 Is Null As #usn7 Limit 9e12[usn2..7][.e1..$`7esn`] Remove Extract(@usn5 In 0X7 =~.0 =~\"d_str\"|$`5esn` In `2esn` In .0).`2esn`?,(`4esn` {@usn5:1e1 In $#usn8 In 12e12})-[_usn4?:`5esn`|`1esn`]-(@usn5 {``:12[usn1][True],``:$`5esn` In `2esn` In $12}).`7esn`!,[999[.e12][01]].`2esn`! Remove [$`2esn` =~'s_str',12 Ends With 01234567,$1000 Is Null Is Null].`3esn`?,[12.e12[...0][..0x0]]._usn4,(`1esn` :`8esn`)<-[#usn7:`3esn`|:`4esn` *00..]->(`4esn` :`8esn`)-[`4esn`? *0Xa]-(`7esn` :`2esn`:`3esn`{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}).`3esn`? Union Detach Delete 0x0[$`3esn`],07 In $7 In 12 Union All Create `5esn`=({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(`4esn` :`6esn`:`7esn`{`8esn`:0X7[..12e12]})-[?:@usn6{`8esn`:12 Ends With .e12 Ends With $7,`8esn`:0.0[12...12]}]-(`3esn` :``) Detach Delete $usn2 =~$_usn4 =~`5esn` Detach Delete Extract(`4esn` In $`8esn` Starts With 1000 Where 9e1 Is Null Is Null) =~Any(`4esn` In 's_str'[12..'s_str'] Where $#usn8 Is Null) =~[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`|$123456789 Ends With .e1],$7 Contains 0x0 Contains ``,[\"d_str\"] Contains _usn3(Distinct $usn1[_usn4..][usn2..])"),
    octest:ct_string("Match (((`7esn` :``)<-[``?:@usn6]-(`6esn` :`3esn`:`1esn`{`7esn`:7 In 0xabc})-[:usn1|`3esn`*]->(:_usn3{`8esn`:0X0123456789ABCDEF In $1000 In $`3esn`}))) Remove (:`4esn`:#usn8{@usn6:$`4esn`[$`2esn`..]})-[`5esn`:#usn8*]->({_usn3:12.e12 In $0 In Count(*)}).usn1!,None(usn1 In 00 Starts With _usn3 Where 999 Contains `7esn`).`3esn`?,_usn3:usn1 Merge ((:`2esn`:`3esn`{`7esn`:$_usn4[#usn8..]})<-[?:usn2|#usn8 *00..]-(`3esn` :`4esn`:#usn8)) Union All Merge usn1=((`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})) On Create Set `8esn` =0.e0[9e0][0e0],_usn3 =0Xa[0xabc..$#usn8] Return 123456789 =~$123456789 Limit 07 =~`8esn` =~0 Union Unwind 's_str' In \"d_str\" In 123456789 As usn1 Remove {`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}.@usn5?;"),
    octest:ct_string("Remove ({usn2:00,#usn8:usn2 Ends With $`5esn` Ends With `2esn`})-[#usn8?]-(`2esn` :`5esn`{`4esn`:$usn1[_usn4..][usn2..],`3esn`:999 In $_usn4 In 0X7}).@usn6?,{`3esn`:`4esn`[7..][1000..],usn2:123456789 Starts With `2esn` Starts With 9e12}.`8esn`!,@usn6(Distinct 0X0123456789ABCDEF[.e0..$`4esn`],$0 Ends With $#usn7 Ends With .12).`5esn`! Union Delete Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 0 Is Not Null Is Not Null)[..[.e0 Contains #usn7 Contains $#usn8]] Unwind #usn7 Contains .0 Contains .e1 As usn1;"),
    octest:ct_string("Remove Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 12.0[0Xa][00]|$`1esn` Starts With $999).`6esn`,Any(`6esn` In 0X7 =~`` Where $`6esn`[..0X0123456789ABCDEF]).`3esn` Remove count(Distinct 0.e0[9e1..][0.0..],$usn2 =~$#usn8).`5esn`?,{`4esn`:9e12 Is Not Null Is Not Null,`8esn`:$0[..`8esn`]}._usn3,@usn5:usn2:@usn6 Unwind `7esn`[1000..][$123456789..] As #usn7;"),
    octest:ct_string("Optional Match ``=(`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[_usn3?:`7esn`|`2esn` *010]->(#usn8 {`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]})-[?:`4esn`|:`7esn`]->(#usn7 {`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null}) Merge `5esn`=(({`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]})-[#usn8?]-(:_usn3{`6esn`:.e12[..0.e0][..$`1esn`],`8esn`:7 In 0xabc})<-[ *1000..]->(#usn7 {`2esn`:$``[_usn4..][`7esn`..],`3esn`:#usn7 Ends With 9e1}))"),
    octest:ct_string("Optional Match `4esn`=(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})-[?:#usn7|:_usn4]->(`` :#usn7$0)-[`2esn` *0X0123456789ABCDEF..{usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3}]->(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]}),(((`` :@usn6:`7esn`{`2esn`:0.12[0.e0..][`4esn`..]})<-[`3esn`?:_usn3|:`4esn`]-(_usn3 :`1esn`)<-[_usn3{_usn3:12.e12 In $0 In Count(*)}]-(`7esn` :@usn5))) Where $_usn3[..Count ( * )][..@usn5] Match `3esn`=(((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})-[:`7esn`|`2esn` *..0X7{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]-(`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})-[`4esn`? *00..]-(:`4esn`:#usn8{@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]}))) Where `7esn`[Null..][@usn5..]"),
    octest:ct_string("Unwind `3esn`(`7esn` Starts With $usn2 Starts With .e0,$_usn3 =~`7esn` =~$_usn4)[[$`2esn`[123456789..][00..],Count ( * )[@usn6..0x0]]..][Extract(#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0)..] As usn1 Union All Delete `6esn`[False..0.0][12e12..$usn2] Union All Detach Delete $`3esn` Is Not Null Is Not Null,$1000 Ends With 1e1 Ends With 123.654"),
    octest:ct_string("With Distinct *,$7[12.e12..] As #usn7,`4esn`[$#usn7] As `1esn` Skip #usn7[..$1000][..01] Limit {`8esn`:@usn5[..True][..0X7],`1esn`:`1esn` Contains Count ( * )}[{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}][Any(usn1 In $123456789 Contains usn2 Where 0.e0 Ends With 12 Ends With $7)] Where `7esn`[...e1][..\"d_str\"] Union All Merge (({`8esn`:$@usn5 Contains 01,`2esn`:123.654 Contains #usn8})<-[{@usn5:$123456789 Ends With .e1,#usn8:0x0 =~_usn4}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})) On Match Set #usn7($123456789 Contains 01 Contains 0.12).usn2! =.e12 =~0.0 =~9e0,All(#usn7 In 01234567[$`3esn`..] Where $@usn6 =~usn1).`4esn` =$999[12.0..],`8esn`+=Filter(_usn4 In usn1 Contains False Contains `` Where 9e0 =~$`5esn`) =~``($`4esn`[usn1..$#usn8][12.0..`3esn`]) =~Single(usn2 In 1000 Contains 0.e0) On Match Set `` =None(`4esn` In 's_str'[12..'s_str'])[Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`)..][Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where $@usn6 Contains Count ( * ))..],#usn7($`8esn`[$``..$7][$1000..$`7esn`],`2esn` In 7 In usn2).`6esn`? =$_usn4['s_str'..],`4esn`+=$`7esn` Ends With $usn2 Remove [`6esn`[1e1..]].@usn6!,[$_usn3[..Count ( * )][..@usn5]].@usn6! With Distinct None(usn2 In 1000 Contains 0.e0 Where $usn1[..$`6esn`][..Null]) Starts With Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $usn1[..$`6esn`][..Null]|$`1esn` Starts With $999) As #usn7,$12[..7][..07] As #usn8,$`2esn`[``..] As `3esn` Order By 9e1 Is Not Null Is Not Null Asc,[@usn5 In .12[#usn7][$`8esn`] Where .e12 =~0.0 =~9e0] Is Null Descending Union All Delete Extract(@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7|Null Starts With $`7esn` Starts With `2esn`) =~{`5esn`:Count(*)[..`3esn`],usn1:01234567 Ends With 0x0},$`1esn` Is Null,9e0 Starts With `6esn` Create `5esn`=((:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[`6esn`:``|:_usn4 *..01]->(`5esn` {_usn4:0X7 =~``})-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(usn2 :usn1{``:9e12 Ends With 0X0123456789ABCDEF Ends With #usn7})),((#usn8 {_usn3:`6esn` =~01234567 =~0Xa,_usn4:$`5esn` Is Null Is Null})-[#usn7:`1esn` *07..]->(#usn8 {`2esn`:$`5esn` Contains Count(*) Contains #usn7,_usn4:Null Starts With $`7esn` Starts With `2esn`}))"),
    octest:ct_string("With  *,({@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]})-[`6esn`?:`4esn`|:`7esn` *0..010{_usn3:$`1esn` Starts With @usn6}]-(`2esn` {#usn8:12.e12[0e0..7]}) Order By [0 Is Null Is Null][..[_usn3 =~00,9e1 Is Null Is Null]] Descending,Single(`4esn` In `6esn`['s_str'..][010..] Where 12.0 Contains 0.e0)[..Any(`4esn` In 's_str'[12..'s_str'] Where Count(*)[`7esn`..$12])][..Extract(@usn5 In .12[#usn7][$`8esn`] Where 01234567 =~usn1)] Ascending,`8esn` In $@usn5 Asc Limit $#usn8 Is Null Create @usn6=((:usn1{_usn3:0xabc[12.e12..`1esn`],`1esn`:12[usn1][True]})-[?:`4esn`|:`7esn`]->(#usn7 {`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null})),#usn7=(@usn5 {usn2:$999[12.0..]})<-[usn1]->(`8esn` :_usn3{`8esn`:$`3esn` In $12 In 's_str'})-[_usn3?:``|:_usn4]->(`5esn` {usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null}) Remove (_usn3 :_usn4:usn1)-[`3esn`?:`3esn`|:`4esn` *..01{_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`}]->(usn2 :#usn7)<-[@usn5?:`1esn`]-(#usn7 :`2esn`:`3esn`).usn2,[`6esn` In 0X7 =~`` Where $`6esn`[..0X0123456789ABCDEF]|12 Is Null Is Null].#usn8? Union All Remove ({@usn6:0X7 In $999 In $``})-[`7esn`{usn1:0 Is Not Null}]->(:``{`2esn`:$7,usn1:.12 Contains $`4esn` Contains $`6esn`}).@usn6,{`5esn`:$`5esn`[$123456789][`1esn`],#usn7:@usn5 In 0X0123456789ABCDEF}.@usn6! Unwind 0.0 Is Null Is Null As usn1 Union All Remove (_usn3 {usn1:_usn3 Contains @usn6 Contains 1.e1})<-[`` *0xabc]->(`7esn` :`2esn`:`3esn`{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1})<-[_usn3?:`7esn`|`2esn` *010]-(#usn8 :`4esn`:#usn8).@usn5?,{usn1:$123456789[..0.12][..#usn7]}.`4esn`?,Any(`4esn` In 's_str'[12..'s_str'] Where 9e1 Contains $`3esn` Contains 01234567).`8esn`! Unwind usn2[$`7esn`..010][00..``] As _usn3"),
    octest:ct_string("Delete 12 Is Null Is Null,Single(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where .12 Starts With @usn5 Starts With $#usn8) =~(@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})<-[_usn4?:`6esn`]-(`2esn` {`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null}) =~(_usn4 :usn1)-[@usn5? *999..]-(usn1 :`4esn`:#usn8)-[usn2?:`2esn`|usn2*..{@usn5:$1000[01234567],@usn5:0x0[$`3esn`..010][$#usn7..00]}]->(`4esn` {#usn8:`1esn`[0e0..],#usn7:$`6esn`[..0X0123456789ABCDEF]}),0e0[`2esn`..010] Return Count ( * ) Ends With 1000 Ends With 12 As _usn4,False[..12.e12] Order By $@usn6 Contains 07 Contains 0.e0 Asc,$1000 Is Not Null Is Not Null Asc,[$`3esn` Starts With 01234567 Starts With $1000] Starts With `4esn` Starts With [$`2esn`[..7][..$usn1]] Desc Skip usn1 Is Not Null Limit Count ( * ) Contains 999 Contains $`8esn` Unwind `2esn`(Distinct 7[..12e12][..$`6esn`]) In Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where `5esn`[.e1][0Xa]) As `4esn` Union Remove ({`2esn`:$`5esn` Is Null,@usn6:#usn7 Starts With `1esn`})<-[ *..0x0{`8esn`:010[@usn5..],#usn8:False Is Not Null Is Not Null}]-(`5esn` {`8esn`:0.0[12...12]}).``!,Single(usn2 In 1000 Contains 0.e0 Where 0e0 Is Not Null Is Not Null).``!,usn1:`8esn` Create ((:`1esn`{`6esn`:$0[..`8esn`],`1esn`:True Starts With $`8esn` Starts With \"d_str\"})-[#usn8? *12..0xabc]-(#usn8 :`4esn`:#usn8{#usn7:$`8esn` Starts With 1000})) Match `6esn`=(`6esn` :`5esn`),(@usn6 :`5esn`{_usn3:010[$`8esn`..][0..],_usn3:`2esn` Is Not Null Is Not Null}) Where 0x0"),
    octest:ct_string("Create (`5esn` {_usn4:0X7 =~``}),((#usn8 {_usn3:`6esn` =~01234567 =~0Xa,_usn4:$`5esn` Is Null Is Null}))"),
    octest:ct_string("Create `4esn`=((:`7esn`{``:$`1esn` Starts With @usn6})),@usn5=((@usn6 :#usn7{@usn5:Null Is Null Is Null})<-[``?:@usn5|`8esn`]->(:_usn4:usn1{#usn7:$`5esn` Is Null Is Null,usn2:usn1[$`3esn`..$999][True..False]})) Merge `8esn`=((@usn6 {_usn3:$_usn4[$`1esn`]})-[`5esn`?:_usn4|:@usn5]->({`5esn`:Count(*)[..`3esn`],usn1:01234567 Ends With 0x0})-[usn2 *..0X7{#usn7:$_usn4[`3esn`][0]}]->({#usn7:Count ( * )[@usn6..0x0]})) Remove Extract(_usn4 In usn1 Contains False Contains `` Where $12 Contains 123.654 Contains `8esn`|`5esn` In 12).#usn8?,[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`7esn` Ends With $`2esn` Ends With $usn1|0[0.12..]].@usn5? Union All Return 123.654 Is Not Null Is Not Null As `3esn`,00 As `4esn` Order By [usn1 In 00 Starts With _usn3 Where 00][#usn8(Distinct $`2esn`[$123456789..$`1esn`][0Xa..$``],@usn6[`5esn`..$`3esn`])..['s_str'[..0.e0][..`1esn`],`5esn`[.e1][0Xa],123456789 In $usn2 In `6esn`]] Asc,999 Contains `7esn` Desc,Filter(@usn5 In $#usn8 Is Null Is Null Where 9e1 Contains $`3esn` Contains 01234567) =~['s_str'[..0.e0][..`1esn`],`5esn`[.e1][0Xa],123456789 In $usn2 In `6esn`] Ascending Skip 0e0 Is Null Is Null Remove [`2esn`[$`1esn`..][$_usn3..]].`4esn`?,(@usn6 {`3esn`:0.12 In $7 In 0,_usn3:07[$999]})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]-(`7esn` {_usn3:usn1 Contains $``}).`8esn`,[_usn4 In usn1 Contains False Contains `` Where $usn1[0.12..]['s_str'..]].`3esn` Union All Remove [@usn5 In $#usn8 Is Null Is Null Where .e1 In $@usn6 In 999|01234567 Ends With 0x0]._usn4?,[0Xa Is Not Null Is Not Null,`3esn` =~0.0 =~$``,123456789 Starts With 12.0 Starts With .e12]._usn4! Create (`6esn` :`5esn`)<-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]-(`4esn` {`7esn`:.e0[..999][..0X7]})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :usn2:@usn6),_usn3=(($999))"),
    octest:ct_string("Return Count ( * )[Count ( * )..12e12][usn1..1000] Order By $`1esn`[$usn2..][$1000..] Descending Skip Filter(`6esn` In 0X7 =~`` Where $0[$#usn8..01234567])[{`7esn`:Null[0e0][12],#usn8:$12[..``][..$7]}..][Filter(usn1 In 0x0[..`4esn`] Where $usn1[0.12..]['s_str'..])..] Union All Merge _usn3=(@usn5 {@usn6:$123456789[0X7..12.e12]}) On Match Set @usn5 =12.e12['s_str'],@usn6 =$usn2[False..`7esn`][`7esn`.._usn3],({`6esn`:9e1[.12..],`5esn`:0.12 In $`4esn` In `6esn`})<-[usn2?:`4esn`|:`7esn` *0X0123456789ABCDEF..]-({usn1:$1000 Contains $`3esn`})-[_usn4?:@usn6 *..7]->({usn1:usn1[$`3esn`..$999][True..False],`7esn`:_usn3 Ends With 12e12 Ends With .e0}).@usn5? =07[07];"),
    octest:ct_string("Merge (_usn4 :@usn6:`7esn`)<-[#usn8?:_usn4|:@usn5 *..0x0]-(`6esn` :#usn7{`5esn`:#usn7 Is Not Null Is Not Null})-[#usn8? *12..0xabc]-(#usn8 :`4esn`:#usn8{#usn7:$`8esn` Starts With 1000}) Union Remove None(usn1 In 00 Starts With _usn3 Where 123456789[`4esn`..][Count ( * )..]).#usn8!,All(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0X7[0e0..])._usn4 Return Distinct *,(_usn3 :_usn4:usn1)-[`3esn`?:`3esn`|:`4esn` *..01{_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`}]->(usn2 :#usn7)<-[@usn5?:`1esn`]-(#usn7 :`2esn`:`3esn`)[Extract(@usn6 In @usn5 In $`6esn` Where 9e0 =~$`5esn`|`2esn`[$`1esn`..][$_usn3..])..Extract(@usn5 In $#usn8 Is Null Is Null Where @usn5 Contains $`1esn` Contains 999)] As `8esn`,[1.e1 =~$_usn4,.12 Contains $`4esn` Contains $`6esn`] Ends With Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn8 In .e12 In 9e1) As `8esn` Order By @usn5 Starts With 12e12 Starts With @usn5 Desc Skip _usn4(usn1[Count ( * )..$usn1],_usn3 Ends With 12e12 Ends With .e0)[All(usn1 In 0x0[..`4esn`] Where $`2esn`[123456789..][00..])..Filter(@usn6 In @usn5 In $`6esn` Where 12[`7esn`...0][0.12..``])][[@usn6 In @usn5 In $`6esn` Where $``[_usn4..][`7esn`..]|12.e12 In $0 In Count(*)]..(:usn1)-[#usn7?:_usn4|:@usn5{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]->(:`2esn`:`3esn`)] Merge `4esn`=({`8esn`:0X7 In 's_str' In $`1esn`}) On Match Set usn2+=.e1 Ends With _usn4 Ends With @usn5,@usn5+=_usn3 In .e1 In $12,Extract(`4esn` In `6esn`[1e1..] Where $`7esn` Ends With `1esn` Ends With True).`` =010 In @usn6 On Match Set usn1 =Count ( * ) =~All(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7) Union Merge (`4esn` :#usn7)-[_usn4?:`6esn`]-(`2esn` :`1esn`{``:9e1 Starts With _usn3 Starts With `4esn`})-[_usn4?:@usn6 *..7]->(`` :@usn6:`7esn`{`4esn`:0X0123456789ABCDEF Is Not Null}) On Create Set `5esn`+=0 Starts With `6esn` Starts With 0X0123456789ABCDEF,`4esn`+=$`7esn` Ends With $usn2,[usn2 In 1000 Contains 0.e0 Where #usn7 Ends With 9e1|010 Is Null Is Null].@usn5! =$1000 Ends With 1e1 Ends With 123.654;"),
    octest:ct_string("Merge ((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})-[?:usn1|`3esn`{#usn8:1000[..$`6esn`][..0xabc]}]->(:_usn4:usn1{``:123456789 Starts With `2esn` Starts With .0,`5esn`:``})-[``?:usn1|`3esn`]->(:@usn5{#usn7:1e1[@usn5..]})) Detach Delete 07 In Count ( * ) In \"d_str\",Null Is Not Null Return 's_str'[..0.0][..$`4esn`] As `2esn`,#usn7 Contains .0 Contains .e1,({`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`4esn` {@usn6:True[..'s_str'][..01]}) In Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where 07[12e12]) Skip `6esn` Starts With $usn2 Starts With 0.0 Limit 9e1 Contains $`3esn` Contains 01234567"),
    octest:ct_string("Match @usn5=(:`8esn`{`7esn`:@usn6 Contains _usn4 Contains $`4esn`})-[`1esn`:usn2|#usn8 *1000..]-(:`5esn`{`3esn`:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:0e0 =~_usn4}) Remove [`4esn` In $`8esn` Starts With 1000 Where 9e1 Is Null Is Null].`8esn`? Remove Single(#usn8 In $`5esn` Is Null Is Null Where $123456789[0.0..]).#usn7?,Any(usn2 In 1000 Contains 0.e0 Where @usn6[`3esn`..][$7..]).@usn6! Union All Detach Delete 123.654[12.e12..1e1],`6esn`(Distinct 12.0[0Xa][00]) In {`7esn`:12e12 Ends With 010 Ends With .0} In Extract(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6|#usn7 Is Not Null Is Not Null) Unwind `3esn`(`7esn` Starts With $usn2 Starts With .e0,$_usn3 =~`7esn` =~$_usn4)[[$`2esn`[123456789..][00..],Count ( * )[@usn6..0x0]]..][Extract(#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0)..] As usn1 Remove Extract(usn1 In 0x0[..`4esn`] Where $`2esn` Contains usn1 Contains `2esn`).`6esn`?,Extract(@usn6 In @usn5 In $`6esn` Where $`1esn` Is Null Is Null|@usn5 Starts With 12e12 Starts With @usn5).`2esn`?,[Count ( * )[Count ( * )..12e12][usn1..1000],12e12[$`5esn`][07],$_usn3[9e1][$_usn4]]._usn4 Union All Remove `3esn`(Distinct 0X7 In $999 In $``,$0 Is Not Null).`7esn`?,[@usn5 In $#usn8 Is Null Is Null Where .e1 In $@usn6 In 999|010 Is Null Is Null]._usn3! With  *,All(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $123456789 Ends With $`6esn`) Is Null As `5esn` Skip 1e1[..False] Limit 12e12[$`5esn`][07] Remove [01234567[Null..0.e0][Count(*)..$#usn8],Count(*)['s_str'..`1esn`]].`7esn`?,Any(usn1 In 0x0[..`4esn`] Where 0.12 Contains $12 Contains `8esn`).#usn7!"),
    octest:ct_string("With  .e0[usn2..][12..] As `1esn`,12.e12[...0][..0x0],`` Contains 12 Contains True As `6esn` Skip `6esn`[0X7..][0x0..] Limit 9e1 Starts With `1esn` Starts With 0Xa Where $999[$1000] Optional Match `5esn`=(((@usn6 {#usn7:'s_str' In \"d_str\" In 123456789,usn2:07[12][$`6esn`]})-[#usn7?:@usn6 *00..]->(#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})<-[?:`7esn`|`2esn`{_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"}]->(usn1 :#usn8))),#usn8=(#usn8 :`5esn`{usn2:.e1 Starts With 0.0 Starts With `6esn`,#usn8:9e12 =~01 =~$`7esn`}) Where 0 Contains 12e12 Union Delete (:`1esn`{`6esn`:$0[..`8esn`],`1esn`:True Starts With $`8esn` Starts With \"d_str\"})<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[usn1?:`2esn`|usn2 *123456789..999]-(`3esn` :usn2:@usn6) Contains [usn2 In 1000 Contains 0.e0 Where #usn7 Ends With 9e1|010 Is Null Is Null] Contains Filter(@usn6 In @usn5 In $`6esn` Where 12[`7esn`...0][0.12..``]),[usn1 In 00 Starts With _usn3 Where False[.e1..Null]|1000[0.0][Null]][Filter(usn2 In 1000 Contains 0.e0 Where $`7esn` Ends With $`2esn` Ends With $usn1)..][Single(usn2 In 1000 Contains 0.e0 Where 0e0 Is Not Null Is Not Null)..],{_usn4:00}[#usn7(00 In 12.e12)][[.12 Ends With `1esn` Ends With $`1esn`,$`5esn`[False]]] Create #usn8=(:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[:#usn7|:_usn4{_usn3:\"d_str\" =~`3esn` =~0Xa}]-(#usn7 {`3esn`:Count(*)[12.e12..],`3esn`:usn2 =~0x0}) Return Distinct *,[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`|$123456789 Ends With .e1] Contains [@usn6 In @usn5 In $`6esn` Where $_usn4[$`8esn`..][07..]|$1000 In $`7esn` In $7] Contains (`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})-[``?:@usn6{#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}]->(@usn5 :`3esn`:`1esn`{`3esn`:$`5esn` Is Not Null,`2esn`:9e1[0.e0..][#usn8..]}) Skip ({`5esn`:0.12 Contains .e1})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:@usn5{#usn7:1e1[@usn5..]})<-[?:`6esn` *01234567..12{`7esn`:7 In 0xabc}]-(#usn7 :usn2:@usn6{`1esn`:$usn2 Contains 12.e12 Contains 00}) =~None(usn1 In 00 Starts With _usn3 Where False[.e1..Null]) Union All Unwind 00[.e1..] As `6esn` Unwind #usn7[$123456789] As `8esn` Merge `2esn`=((:`2esn`:`3esn`{usn2:9e12[@usn6..$``][#usn8..Count ( * )],`3esn`:$1000 In $`7esn` In $7}))"),
    octest:ct_string("Return *,{#usn7:0[0.12..]} Ends With Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]) Ends With {@usn5:\"d_str\" Is Null Is Null,@usn5:$_usn4[`3esn`][0]} As `8esn`,@usn5 Ends With 1.e1 Ends With 0X0123456789ABCDEF As `8esn` Skip {_usn3:0.12 Is Null Is Null,`1esn`:9e12[0.0..12.e12]} Ends With {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]}"),
    octest:ct_string("Return Distinct *,`1esn` Contains Count ( * ) As _usn3 Skip $`3esn` =~$999 =~$`3esn` With Distinct [`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`|$123456789 Ends With .e1] Contains [@usn6 In @usn5 In $`6esn` Where $_usn4[$`8esn`..][07..]|$1000 In $`7esn` In $7] Contains (`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})-[``?:@usn6{#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}]->(@usn5 :`3esn`:`1esn`{`3esn`:$`5esn` Is Not Null,`2esn`:9e1[0.e0..][#usn8..]}),$_usn4[`3esn`][0] As `1esn`,`6esn` Starts With $`5esn` As @usn5 Order By .0 Is Null Is Null Ascending,`1esn`(Distinct $@usn5[#usn8..][$`1esn`..],#usn7 Ends With `4esn` Ends With @usn5)[[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $999[12.0..]|usn1[Count ( * )..$usn1]]][{`8esn`:010[@usn5..],#usn8:False Is Not Null Is Not Null}] Asc Limit True Is Not Null Where 0.0 =~0X7 =~#usn7"),
    octest:ct_string("With  [#usn8 In $`5esn` Is Null Is Null][Single(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where #usn7[..$1000][..01])..][[@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7|`6esn`[1.e1..$#usn7][.e0..True]]..],(`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[usn1?:`8esn`|:usn1]->({`6esn`:.e1 Starts With 0.0 Starts With `6esn`,_usn3:$@usn6 Contains 0 Contains $`2esn`})<-[:`2esn`|usn2 *0..010]->(`2esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}) Is Null Is Null As #usn7,1e1[..#usn8][..'s_str'] As #usn8 Order By `3esn`[$123456789][$#usn7] Ascending,{@usn6:12.0[``],_usn4:$`3esn` Contains 0X0123456789ABCDEF Contains 00} Ends With Single(`6esn` In 0X7 =~`` Where 0X7[0e0..]) Ends With Extract(@usn5 In $#usn8 Is Null Is Null Where @usn5 Contains $`1esn` Contains 999|12.0[``]) Asc Skip (:`4esn`:#usn8{@usn6:0 Starts With 12e12 Starts With `4esn`})<-[`6esn`?{`7esn`:.12 Ends With `1esn` Ends With $`1esn`,``:9e0 Starts With `6esn`}]->(:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0}) Starts With Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`) Starts With [12.0 In 1000 In _usn4] Limit 00[01234567][False] Return 7[$`4esn`..123456789] As `2esn` Limit 1000 Ends With 1000 Ends With $`4esn` Union With Distinct \"d_str\",0X0123456789ABCDEF Ends With 0X0123456789ABCDEF Ends With 's_str',$@usn5[01] Order By 01234567 Starts With $_usn4 Desc,0.12 Contains .e1 Ascending,0x0 =~_usn4 Descending Skip [usn2 In 1000 Contains 0.e0 Where $`6esn`[..0X0123456789ABCDEF]] Contains None(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $`4esn`[..usn1]) Contains Extract(`6esn` In 0X7 =~`` Where 0x0[..`4esn`]) Detach Delete 12[..0.0][..#usn7] Detach Delete 999[$`8esn`] Union Create ``=(({`8esn`:0X7 In 's_str' In $`1esn`})<-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]->(`1esn` :`1esn`)),`2esn`=(((`2esn` :`7esn`)<-[? *..7]->({`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null})<-[:`6esn`]->(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}))) Create `4esn`=((:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12})-[#usn8? *0xabc{`5esn`:0X7[12]}]->(usn1 {`2esn`:True =~@usn5 =~$`1esn`,`2esn`:`6esn`[1.e1..$#usn7][.e0..True]})),((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})) Return Distinct *,12 Is Null Is Null As #usn7,$1000 Is Not Null Is Not Null Skip (`3esn` :usn2:@usn6{`4esn`:`7esn` Contains .0 Contains 9e12})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:@usn5{#usn7:1e1[@usn5..]})-[`5esn`? *00..{usn1:07[`6esn`..][`5esn`..],`2esn`:#usn7 Contains .0 Contains .e1}]->(`5esn` :usn2:@usn6)[Filter(@usn6 In @usn5 In $`6esn` Where $999[$1000])..][#usn7($`8esn`[``..][123.654..],12.e12 Contains `5esn`)..]"),
    octest:ct_string("With  01234567[$@usn6..0X7][$`1esn`..123.654],00 Ends With $_usn4 Ends With $`2esn` As `5esn` Order By 01[0.0] Ascending,`6esn` Starts With $usn2 Starts With 0.0 Ascending Skip {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']} Ends With [True Contains @usn6,`3esn`[$`1esn`..]] Limit usn1 Is Not Null Is Not Null With Distinct $12 Contains 123.654 Contains `8esn` As _usn4 Limit Filter(@usn6 In @usn5 In $`6esn` Where .12[`1esn`..][$`3esn`..]) Return Distinct (#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :usn2:@usn6)-[`1esn`:`8esn`|:usn1 *0xabc{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]-(@usn5 :#usn8{`1esn`:0xabc Ends With $7 Ends With $`2esn`,_usn4:``})[.._usn4(@usn6[`5esn`..$`3esn`],`8esn`[$``])] Order By [$12[01..][1.e1..]][[usn1 In 00 Starts With _usn3 Where 00]..@usn6(Distinct 0X0123456789ABCDEF[.e0..$`4esn`],$0 Ends With $#usn7 Ends With .12)] Desc,[@usn5 In $#usn8 Is Null Is Null Where 12.e12[@usn5..123.654]|#usn7 Starts With `1esn`][[@usn5 In .12[#usn7][$`8esn`] Where 0.12 In $`4esn` In `6esn`|$`1esn` Starts With @usn6]..][$`1esn`..] Ascending,{#usn8:$`5esn` In False,usn2:$`7esn` In $7} Is Not Null Is Not Null Asc Skip Null[0.e0..0x0];"),
    octest:ct_string("Merge `2esn`=(:_usn4:usn1)-[#usn7?:_usn4|:@usn5{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]->(:`2esn`:`3esn`)<-[``]-(usn1 {#usn7:.e12[..0.e0][..$`1esn`],usn1:010 Contains Count(*)}) On Match Set @usn5 =$`5esn` In False Remove #usn7(Distinct $@usn6[..$usn1],9e12 Is Not Null Is Not Null).usn1 Detach Delete [0.12 Contains $`2esn` Contains $_usn4,01 Ends With .e0] Starts With [usn1 In $123456789 Contains usn2 Where usn1[..@usn5][...e0]] Starts With All(usn1 In 0x0[..`4esn`] Where $`2esn` Contains usn1 Contains `2esn`) Union All Remove {`1esn`:0xabc[12.e12..`1esn`]}.`1esn`!;"),
    octest:ct_string("Merge `3esn`=(({`5esn`:0.12 Contains .e1})-[usn1?:`2esn`|usn2 *123456789..999]-(usn1 :`7esn`{`1esn`:$@usn6 Contains 07 Contains 0.e0})-[:@usn5|`8esn` *123456789..999{usn1:9e12 Is Not Null Is Not Null}]-(#usn7 :`5esn`)) On Match Set @usn5+=`` In `6esn`,Filter(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`` Is Null Is Null).`` =12.e12 Is Not Null On Match Set `` =None(`4esn` In 's_str'[12..'s_str'])[Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`)..][Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where $@usn6 Contains Count ( * ))..],#usn7($`8esn`[$``..$7][$1000..$`7esn`],`2esn` In 7 In usn2).`6esn`? =$_usn4['s_str'..],`4esn`+=$`7esn` Ends With $usn2 Remove {#usn8:123456789[$#usn7..],#usn7:07[12e12]}.usn2,(#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]})<-[`4esn`:``|:_usn4{`5esn`:0e0 =~_usn4}]-(_usn4 {`1esn`:010[@usn5..]})<-[`6esn`?{`7esn`:.12 Ends With `1esn` Ends With $`1esn`,``:9e0 Starts With `6esn`}]-(usn1 :_usn3{@usn6:True[..'s_str'][..01]}).`8esn`! Union Optional Match (({#usn7:Count ( * )[@usn6..0x0]})<-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]-(`4esn` {`7esn`:.e0[..999][..0X7]})) Where @usn6[`5esn`..$`3esn`] Match `1esn`=((`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]})) Match ((_usn4 :`2esn`:`3esn`{#usn8:123456789[$#usn7..],#usn7:07[12e12]})),(_usn3 :_usn3);"),
    octest:ct_string("Return *,0 Is Not Null Is Not Null,[@usn6 In @usn5 In $`6esn` Where False[0Xa..$@usn5][$`6esn`..12e12]][{@usn6:.12 Starts With 0Xa}..(`2esn` {usn1:@usn6[$`7esn`],_usn3:$@usn6[..12e12]})-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]->(usn1 {#usn7:Count ( * )[@usn6..0x0]})-[@usn6?:#usn8 *..7{@usn5:@usn5 Starts With 12e12 Starts With @usn5}]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})] Order By (`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})<-[{_usn3:12.e12 In $0 In Count(*)}]->({`6esn`:$_usn4[$`8esn`..][07..]}) Ends With Any(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn7 In .e1 In 01) Ends With usn2(Distinct _usn3 Contains @usn6 Contains 1.e1) Desc Limit .e12[..0.e0][..$`1esn`] Union Create `3esn`=((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})),(`5esn` {usn2:`5esn`[.e1][0Xa],@usn5:$usn1 In 1000 In $#usn7}) Optional Match `5esn`=(((@usn6 {#usn7:'s_str' In \"d_str\" In 123456789,usn2:07[12][$`6esn`]})-[#usn7?:@usn6 *00..]->(#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})<-[?:`7esn`|`2esn`{_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"}]->(usn1 :#usn8))),#usn8=(#usn8 :`5esn`{usn2:.e1 Starts With 0.0 Starts With `6esn`,#usn8:9e12 =~01 =~$`7esn`}) Where 0 Contains 12e12"),
    octest:ct_string("Unwind \"d_str\"[$`7esn`][$1000] As `5esn` Optional Match `5esn`=(`8esn` :_usn3{`8esn`:$`3esn` In $12 In 's_str'}),`7esn`=(({#usn7:False[`2esn`..#usn8]})-[`4esn`:`4esn`|:`7esn`{`3esn`:Count(*)[`7esn`..$12],_usn3:$999[$1000]}]-(`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})) Create ((:`6esn`:`7esn`{_usn4:12[0X7..@usn6],_usn3:123456789 In $usn2 In `6esn`})<-[#usn7?:_usn3|:`4esn` *00..]->(:`6esn`:`7esn`{_usn3:\"d_str\" Is Null Is Null})<-[@usn6]->(:#usn7{`6esn`:.e12 =~0.0 =~9e0,@usn6:$usn2 =~$_usn4 =~`5esn`}))"),
    octest:ct_string("Merge @usn5=(`3esn` :`8esn`{usn1:`2esn`[$`3esn`..],`6esn`:$12[..``][..$7]})-[@usn5?:``|:_usn4]-(`8esn` :#usn8)<-[?:``|:_usn4]-({`5esn`:00 Ends With $_usn4 Ends With $`2esn`,usn2:#usn7 Starts With 0 Starts With 12}) On Create Set usn2:usn1,None(_usn4 In usn1 Contains False Contains `` Where .12 In $999 In `5esn`).usn2 =9e0 In 01234567,`8esn` =$@usn5 Ends With 0X0123456789ABCDEF On Create Set #usn8:_usn4:usn1,[0 Is Not Null Is Not Null].usn2! =(:`1esn`{@usn5:123456789 Starts With `2esn` Starts With 9e12})-[#usn7? *999..]-(@usn5 :_usn4:usn1{`1esn`:07[1e1],`7esn`:12e12[$`5esn`][07]})-[`6esn`:``|:_usn4 *..01]->(`7esn` :`6esn`:`7esn`{_usn4:07 In `5esn` In 12e12})[Extract(#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|`7esn` Starts With $usn2 Starts With .e0)..Extract(#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str')] With Distinct 12.e12 Contains $`5esn` As `` Order By $usn1[1e1.._usn3][$@usn6..$#usn7] Desc Limit All(#usn8 In $`5esn` Is Null Is Null Where #usn8[$#usn8..])[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..(#usn8 {`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]})<-[?:@usn5|`8esn`]-(usn2 :@usn5{`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})<-[?:#usn8{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]->(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})] Where False In $`7esn` In .0 Union All Remove All(@usn5 In .12[#usn7][$`8esn`] Where 0Xa Is Null Is Null).@usn5,`8esn`:_usn3,#usn7(Distinct 0.e0[9e0][0e0],999[``..][Null..]).`7esn`! Match `3esn`=(((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})-[:`7esn`|`2esn` *..0X7{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]-(`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})-[`4esn`? *00..]-(:`4esn`:#usn8{@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]}))) Where `7esn`[Null..][@usn5..]"),
    octest:ct_string("Optional Match (((`` :@usn6:`7esn`{`2esn`:0.12[0.e0..][`4esn`..]})<-[`3esn`?:_usn3|:`4esn`]-(_usn3 :`1esn`)<-[_usn3{_usn3:12.e12 In $0 In Count(*)}]-(`7esn` :@usn5))) Where $123456789 In Count(*) In .e1 With Distinct *,00 In 1e1 As `7esn`,0.12 Starts With {`1esn`:@usn6[..0xabc][..$#usn7]} Starts With {`3esn`:`8esn`[1000..$7][$`7esn`..`2esn`],_usn4:\"d_str\" Is Null Is Null} Skip 7 In @usn5 In $`4esn` Limit {`1esn`:`4esn` In $12 In `8esn`} Contains None(@usn5 In .12[#usn7][$`8esn`] Where .e12 =~0.0 =~9e0) Contains [@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]] Where `3esn` =~0.0 =~$`` Merge usn1=(`3esn` :``) On Match Set All(`6esn` In 0X7 =~`` Where 0X7[..12e12])._usn4 =Null Starts With $`7esn` Starts With `2esn`,`5esn`+=999 Contains Count ( * ) Contains 123.654,usn1+=usn1[$`3esn`..$999][True..False]"),
    octest:ct_string("Merge `4esn`=({`8esn`:0X7 In 's_str' In $`1esn`}) Match @usn6=(((@usn6 :`5esn`{``:.e1 In $@usn6 In 999,`8esn`:_usn3 Is Null Is Null})<-[$#usn8]->(`4esn` {#usn8:`1esn`[0e0..],#usn7:$`6esn`[..0X0123456789ABCDEF]})-[`6esn`? *0Xa{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}]-(:`6esn`:`7esn`{`8esn`:$`3esn`[@usn5..$123456789],@usn5:\"d_str\" Starts With $usn1}))) Remove {`3esn`:$`5esn` In `2esn` In .0,``:0e0 Is Null Is Null}.`1esn`"),
    octest:ct_string("With Distinct `2esn` Contains $999 As #usn7,$123456789[False.._usn3] As `1esn` Order By (usn2 :`7esn`{@usn5:usn1[$`3esn`..$999][True..False],`8esn`:$`5esn` Is Null Is Null})-[`5esn`?:_usn4|:@usn5]-(usn1 :`7esn`)<-[`` *12..0xabc]->(:``{_usn3:Count(*)['s_str'..`1esn`],`1esn`:$`6esn`[$`1esn`][1000]}) Ends With [$`8esn` =~$usn2,0X0123456789ABCDEF[..usn1],`` In `6esn`] Descending Skip 0X7[..12e12] Merge (:#usn7) Union All Match `1esn`=((@usn5 {@usn6:$123456789[0X7..12.e12]})<-[:`5esn`|`1esn`]-(#usn8 {@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null})),(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}) Where $@usn6[..$usn1] Match `4esn`=((#usn8 {@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null})) Where `` Starts With @usn5"),
    octest:ct_string("Remove Extract(`4esn` In $`8esn` Starts With 1000 Where `5esn` In 12|010 Contains 0X0123456789ABCDEF).`2esn`,{#usn7:.e12[..0.e0][..$`1esn`],usn1:010 Contains Count(*)}.`2esn`! Return *,({`1esn`:@usn6})<-[_usn4?:_usn4|:@usn5 *123456789..999{`2esn`:@usn5 In $`6esn`}]->(:`3esn`:`1esn`{`1esn`:0.0[1000..][.e1..]}) Is Null Is Null As `3esn`"),
    octest:ct_string("With Distinct [@usn5 In .12[#usn7][$`8esn`] Where $@usn5 =~$`` =~$usn2] Is Null,00[7..$123456789] Order By $usn2 Is Not Null Is Not Null Desc Limit `8esn` Ends With 999 Ends With 9e0 Remove {_usn3:$_usn4[$`1esn`]}.@usn6!,`8esn`($_usn4[#usn8..],123456789 Starts With `2esn` Starts With .0).usn1?,Extract(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6|1e1 Is Null).#usn7? Detach Delete [`4esn` In 's_str'[12..'s_str'] Where 9e12 =~01 =~$`7esn`][#usn7(00 In 12.e12)..Extract(usn1 In 0x0[..`4esn`] Where 1000 Ends With 1000 Ends With $`4esn`|@usn6[$`3esn`])][(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})<-[`8esn`]->(#usn8 )<-[`3esn` *00..{`8esn`:@usn6 Contains .e1 Contains $`4esn`,_usn4:0X7[..12e12]}]->(@usn5 {`1esn`:0[usn2..]})..(usn1 :_usn4:usn1)<-[@usn5?:`1esn`]-(#usn7 :`2esn`:`3esn`)] Union All Remove {`1esn`:12 Ends With .e12 Ends With $7,`6esn`:$@usn5 Contains 01}._usn4,None(usn1 In 0x0[..`4esn`] Where 0.12 Contains $12 Contains `8esn`).`8esn`?,Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where #usn7[..$1000][..01]|'s_str' Ends With .e0).`8esn`? Return Any(#usn8 In $`5esn` Is Null Is Null Where 0.12 Contains $`2esn` Contains $_usn4)[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..Extract(`4esn` In `6esn`[1e1..])],123456789 Starts With _usn4 Starts With @usn6 Skip _usn3 Ends With 12e12 Ends With .e0 Return Distinct 123.654 Starts With usn1 Starts With @usn5,`7esn`($123456789 Ends With $`6esn`) Starts With {`7esn`:$12[01..][1.e1..],_usn3:$_usn3 =~`7esn` =~$_usn4} As `8esn`,$`7esn` Ends With `1esn` Ends With True As `5esn` Order By {`3esn`:$999[12.0..]} =~[$#usn8 In .e12 In 9e1] Desc,\"d_str\" =~`6esn` =~0Xa Asc,(#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :usn2:@usn6)-[`1esn`:`8esn`|:usn1 *0xabc{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]-(@usn5 :#usn8{`1esn`:0xabc Ends With $7 Ends With $`2esn`,_usn4:``})[.._usn4(@usn6[`5esn`..$`3esn`],`8esn`[$``])] Descending;"),
    octest:ct_string("Unwind 0[0.12..] As _usn4 Union Remove None(_usn4 In usn1 Contains False Contains `` Where $`8esn`[$``..$7][$1000..$`7esn`])._usn3?,Filter(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where usn1 Starts With $#usn7 Starts With `5esn`).`3esn`? Create #usn8=((`5esn` {`5esn`:$`5esn`[False]})<-[?:usn2|#usn8 *00..]-(`6esn` :`5esn`{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]})) Union Unwind Any(@usn5 In $#usn8 Is Null Is Null Where .e1 In $@usn6 In 999) In None(usn1 In 0x0[..`4esn`] Where $123456789[..0x0][..`4esn`]) As usn2 Optional Match `1esn`=((usn2 :@usn5{`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})<-[#usn8? *0xabc{`5esn`:0X7[12]}]->(`4esn` {usn2:7 In 0xabc})),_usn4=((`2esn` :``)<-[`1esn`?:`1esn` *01234567..12]->(`8esn` {`6esn`:00 In 12.e12})) Where _usn4 Starts With 0X7 Merge usn1=(`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[?:`2esn`|usn2{@usn6:0.12[0.e0..][`4esn`..]}]->(usn1 :#usn8)<-[ *..0x0{`4esn`:$`7esn`[$usn1..][0.0..],`1esn`:$123456789[..0x0][..`4esn`]}]->(#usn8 :`4esn`:#usn8{#usn7:$`8esn` Starts With 1000}) On Match Set `2esn`+=123.654 In \"d_str\" In $_usn3"),
    octest:ct_string("With  *,{`7esn`:Count(*) In 01 In .0}[..{`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]}][..#usn7(Distinct 0.e0[9e0][0e0],999[``..][Null..])] As `5esn`,#usn7 Ends With `4esn` Ends With @usn5 As `` Where $`7esn` Is Null Is Null Union All Match #usn7=(:#usn7{#usn8:0.12 Contains $`2esn` Contains $_usn4,`2esn`:$`5esn` Starts With _usn3 Starts With @usn5})<-[:@usn5|`8esn`*..]-(`2esn` :usn1{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})-[?:usn1|`3esn` *999..{_usn4:$999[12.0..],usn1:0[usn2..]}]->(:usn2:@usn6{@usn5:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:.12 Ends With $`4esn` Ends With Count(*)}) Union Unwind 07[$`5esn`..]['s_str'..] As _usn3 Unwind Null Is Null Is Null As usn1 Unwind 123456789 =~Filter(usn2 In 1000 Contains 0.e0 Where 0X7[0e0..]) =~{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999} As `7esn`;"),
    octest:ct_string("Return Distinct .12[#usn7][$`8esn`],12 Ends With 07 Ends With @usn6 As usn1 Order By $999[..`1esn`] Ascending,Single(`6esn` In 0X7 =~`` Where 0.12[Null..]) Contains (@usn5 :`2esn`:`3esn`{`1esn`:$`8esn`[..$usn1][..'s_str']})<-[usn2:@usn6{`7esn`:123456789[`4esn`..][Count ( * )..],`4esn`:010[$`8esn`..][0..]}]-(_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8}) Contains All(@usn6 In @usn5 In $`6esn` Where $usn2 Is Not Null) Descending,[$`8esn` =~$usn2][Any(`6esn` In 0X7 =~`` Where $0 Is Not Null)..] Asc With Distinct `8esn`[_usn3..$#usn7],({`1esn`:@usn6})<-[_usn4?:_usn4|:@usn5 *123456789..999{`2esn`:@usn5 In $`6esn`}]->(:`3esn`:`1esn`{`1esn`:0.0[1000..][.e1..]}) Is Null Is Null As `3esn` Where $`1esn` Is Null Return Distinct $`1esn` Starts With `8esn` Starts With $0,`` Is Not Null Is Not Null As @usn6,$123456789[$`2esn`][True] As `7esn` Skip {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`} In (:_usn3{`6esn`:.e12[..0.e0][..$`1esn`],`8esn`:7 In 0xabc})-[#usn7:`1esn` *07..]->(:`4esn`:#usn8{_usn4:'s_str' In \"d_str\" In 123456789,`2esn`:0.12 Ends With $usn1 Ends With $@usn5}) In All(@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7) Limit False Ends With $`8esn` Union All With  Extract(#usn7 In 01234567[$`3esn`..] Where 0xabc[$@usn5])[All(`4esn` In 's_str'[12..'s_str'] Where $_usn4[12e12][`4esn`])][(`6esn` :`5esn`)<-[:``|:_usn4 *0Xa]->(`7esn` :`2esn`:`3esn`)] As @usn5,12 Is Null Is Null As #usn7 Limit 0.12 Starts With {`1esn`:@usn6[..0xabc][..$#usn7]} Starts With {`3esn`:`8esn`[1000..$7][$`7esn`..`2esn`],_usn4:\"d_str\" Is Null Is Null} Create `6esn`=((_usn4 :@usn6:`7esn`)-[:usn2|#usn8*..]-(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12})) Union All Delete `6esn`[False..0.0][12e12..$usn2]"),
    octest:ct_string("Optional Match usn2=(({`4esn`:#usn7 Starts With 0 Starts With 12,`4esn`:0x0 =~_usn4})-[_usn4?:@usn6 *..7]->(@usn5 :`8esn`)-[@usn5{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8}]->(usn2 :`7esn`{_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`})),((`1esn` {_usn4:12.e12 Ends With 01 Ends With .e1})-[_usn4?:`6esn`]->(:`4esn`:#usn8{@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]})-[_usn3?:#usn7|:_usn4 *010]->({`1esn`:@usn6})) Where `` In `6esn` Union Optional Match `3esn`=((`2esn` :_usn4:usn1{`7esn`:7 In 0xabc})<-[:@usn5|`8esn` *0Xa{usn1:$1000 Contains $`3esn`}]->(`2esn` :``)-[usn2?]-(`2esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})),((#usn8 :`1esn`{#usn7:1e1[`6esn`..]})<-[`1esn`{`6esn`:$_usn4[`3esn`][0],_usn3:999 Contains Count ( * ) Contains 123.654}]->(`7esn` :`7esn`)) Delete `6esn`(Distinct 12.0[0Xa][00]) In {`7esn`:12e12 Ends With 010 Ends With .0} In Extract(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6|#usn7 Is Not Null Is Not Null),[_usn4 Starts With $@usn6 Starts With #usn7,$@usn5 Contains 01] =~`4esn`(12 Ends With 01 Ends With 1e1) =~Extract(`6esn` In 0X7 =~`` Where 0x0[..`4esn`]),Extract(_usn4 In usn1 Contains False Contains `` Where $`4esn` Starts With 1e1|Count(*)['s_str'..`1esn`]) =~Extract(`4esn` In $`8esn` Starts With 1000|`7esn`[Null..][@usn5..]) =~(:`4esn`:#usn8)<-[?:_usn3|:`4esn` *010{`8esn`:$``[_usn4..][`7esn`..]}]-(`2esn` ) Remove ({``:01234567 Ends With 0x0,`6esn`:0X7[0e0..]})-[:@usn5|`8esn` *0Xa{usn1:$1000 Contains $`3esn`}]->({`4esn`:#usn7 Starts With 0 Starts With 12,`4esn`:0x0 =~_usn4})<-[`8esn`?:``|:_usn4 *..01]-({`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null}).`5esn`!,`8esn`:_usn4:usn1;"),
    octest:ct_string("Remove Extract(`4esn` In $`8esn` Starts With 1000).`2esn` Optional Match #usn7=((`1esn` {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})<-[:_usn3|:`4esn`{_usn4:$`3esn` =~$`6esn` =~`8esn`,`5esn`:0X7[0e0..]}]-(:`8esn`)<-[:#usn7|:_usn4 *0Xa]-(usn1 :_usn3{_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"})),@usn5=(`4esn` :`1esn`{`8esn`:12 Ends With .e12 Ends With $7,`8esn`:0.0[12...12]})<-[`2esn` *12..0xabc{`6esn`:$123456789[0.0..],@usn5:999[$`6esn`]}]-(`7esn` {`8esn`:0X0123456789ABCDEF In $1000 In $`3esn`})-[usn1{`7esn`:``[Count(*)..][@usn5..]}]->(`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}) Where @usn5[..True][..0X7] Optional Match `1esn`=((@usn5 {@usn6:$123456789[0X7..12.e12]})<-[:`5esn`|`1esn`]-(#usn8 {@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null})),(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}) Union All Merge ({`3esn`:$`3esn` =~$`7esn` =~False,`4esn`:12 Ends With 01234567})-[#usn7:`1esn` *07..]->(:`7esn`{``:$`1esn` Starts With @usn6})<-[:#usn7|:_usn4 *0Xa]-(usn1 :_usn3{_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"}) On Match Set [`4esn` In `6esn`[1e1..] Where $`2esn`[..`2esn`]|`` Contains 12 Contains True].`2esn`? =$@usn6[..$#usn7][..12.e12],None(@usn5 In 0X7 =~.0 =~\"d_str\" Where #usn7 Starts With 0 Starts With 12).`8esn`! =12[..9e0][..999] Union All With Distinct {usn1:7 =~9e0 =~'s_str',@usn6:$usn1[..$`6esn`][..Null]} =~Single(usn2 In 1000 Contains 0.e0) =~Any(@usn6 In @usn5 In $`6esn` Where $`7esn` Is Not Null) As `3esn`,Filter(usn1 In 00 Starts With _usn3 Where $_usn4[`3esn`][0])[..Extract(`6esn` In 0X7 =~`` Where #usn7 Starts With 0 Starts With 12|0x0 =~_usn4)][..{_usn4:.12 =~.12 =~1e1,#usn7:.e1 Starts With 0.0 Starts With `6esn`}] Order By @usn6(123456789 =~$123456789) In Extract(`4esn` In `6esn`[1e1..]) In {``:True[..'s_str'][..01],usn1:0.12 In $7 In 0} Ascending,$`3esn` =~Null Desc Skip Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 00 Ends With .12 Ends With `4esn`) Contains {`7esn`:0e0 Is Null Is Null,usn2:`4esn` =~123456789} Where `3esn`[$`1esn`..];"),
    octest:ct_string("Detach Delete Extract(#usn7 In 01234567[$`3esn`..] Where 0xabc[$@usn5])[All(`4esn` In 's_str'[12..'s_str'] Where $_usn4[12e12][`4esn`])][(`6esn` :`5esn`)<-[:``|:_usn4 *0Xa]->(`7esn` :`2esn`:`3esn`)] Remove @usn5:@usn5,Single(`4esn` In `6esn`['s_str'..][010..] Where @usn6[$`7esn`]).@usn5,usn2:@usn6:`7esn` Return @usn5[..True][..0X7] As `7esn`,{usn2:9e12[@usn6..$``][#usn8..Count ( * )],`3esn`:$1000 In $`7esn` In $7} Contains {`5esn`:$7[.12]} Contains Extract(usn1 In 00 Starts With _usn3 Where 07 Contains #usn8 Contains $_usn3|`2esn`[$`1esn`..][$_usn3..]) Order By 0X0123456789ABCDEF[..usn1] Descending Skip `3esn`[$123456789][$#usn7] Union Create ((`7esn` :`2esn`:`3esn`{@usn6:9e0 Ends With $`7esn`})),``=((`3esn` ))"),
    octest:ct_string("Match ``=({`7esn`:`6esn` Starts With $@usn6,``:`6esn` =~$_usn3})-[? *12..0xabc]-(:`6esn`:`7esn`{`6esn`:_usn4 Ends With 01 Ends With $`1esn`,`4esn`:$`8esn` In \"d_str\" In 9e12})<-[ *0xabc]-(_usn4 {`1esn`:010[@usn5..]}),(`` :usn1) Where 0.12 =~01 =~12 Merge (({@usn6:0X0123456789ABCDEF[..usn1]})<-[ *00..{@usn5:$`5esn` Is Null Is Null}]->(:_usn3{#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})-[usn1*]->(:`2esn`:`3esn`{usn2:9e12[@usn6..$``][#usn8..Count ( * )],`3esn`:$1000 In $`7esn` In $7})) On Match Set `4esn` =.e12[.12..][_usn4..] On Match Set All(`6esn` In 0X7 =~`` Where `7esn`[...e1][..\"d_str\"]).`5esn` =None(usn2 In 1000 Contains 0.e0 Where $usn1[..$`6esn`][..Null]) Starts With Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $usn1[..$`6esn`][..Null]|$`1esn` Starts With $999) Remove (@usn6 {_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12})<-[`8esn`?:`5esn`|`1esn`]-(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}).`6esn`,Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where 07[12e12]).usn2!,(_usn3 :_usn4:usn1{`2esn`:$`6esn`[$@usn6..]})<-[#usn7 *123456789..999]-(:@usn6:`7esn`{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})-[?:usn1|`3esn`]->(:`8esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}).`1esn`! Union All Detach Delete _usn3[...e1]"),
    octest:ct_string("Merge @usn6=((`6esn` :`7esn`)-[_usn4?:@usn6 *..7]->(@usn5 :`8esn`)<-[@usn5:`6esn` *0X0123456789ABCDEF..]-({@usn6:0.12 In $`4esn` In `6esn`,``:1e1 Is Null})) On Match Set `4esn` =0x0[0.0][$_usn4] On Match Set #usn8+={`8esn`:9e1 In 01 In 999}[usn1(1e1[..#usn8][..'s_str'])..{#usn8:$999 Ends With $`3esn` Ends With `8esn`}],(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]})-[_usn4?:@usn6 *..7]->({usn1:usn1[$`3esn`..$999][True..False],`7esn`:_usn3 Ends With 12e12 Ends With .e0}).`3esn`! =07 In $7 In 12,[\"d_str\" =~`6esn` =~0Xa].`4esn`! =0.0 =~0X7 =~#usn7 Match `1esn`=(:`8esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}),((#usn8 :@usn6:`7esn`{@usn5:1e1[@usn5..]})) Match (usn2 :#usn8{`3esn`:123.654[@usn5]})-[@usn5?:@usn6$_usn3]->(:_usn4:usn1{`1esn`:123456789 Starts With `2esn` Starts With .0,@usn6:12.e12 Contains `5esn`}),((:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[usn1?:`1esn` *0X0123456789ABCDEF..{usn2:$`4esn`[12.e12..][0.0..]}]-(#usn7 :`5esn`)) Where 1e1[..False] Union All Return 1000 Contains $#usn7 Contains `6esn`,All(@usn5 In $#usn8 Is Null Is Null Where 's_str'[..0.0][..$`4esn`]) Is Null Is Null Order By $123456789 Ends With .e1 Ascending Skip $`3esn` Contains 0X0123456789ABCDEF Contains 00 Limit $_usn3 =~$`3esn` =~0x0 Delete $usn2 In 9e0 In $7,[usn1 In 00 Starts With _usn3 Where 00][#usn8(Distinct $`2esn`[$123456789..$`1esn`][0Xa..$``],@usn6[`5esn`..$`3esn`])..['s_str'[..0.e0][..`1esn`],`5esn`[.e1][0Xa],123456789 In $usn2 In `6esn`]],0xabc[12.e12..`1esn`] Delete 0e0[`2esn`..010],@usn6[`5esn`..$`3esn`],Count ( * )[..usn1][..12.e12]"),
    octest:ct_string("Remove (:`4esn`:#usn8{@usn6:$`4esn`[$`2esn`..]})-[`5esn`:#usn8*]->({_usn3:12.e12 In $0 In Count(*)}).usn1!,None(usn1 In 00 Starts With _usn3 Where 999 Contains `7esn`).`3esn`?,_usn3:usn1 With Distinct $`4esn`[$`2esn`..] As #usn8,#usn8 In $0,Any(`6esn` In 0X7 =~`` Where 0X7[0e0..]) Contains Single(`4esn` In `6esn`['s_str'..][010..] Where @usn6[`3esn`..][$7..]) As #usn7 Skip $@usn5 =~$`` =~$usn2 Limit `8esn` Ends With 999 Ends With 9e0 Union Remove [`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 12.e12[@usn5..123.654]|9e0 Starts With `6esn`].#usn8?;"),
    octest:ct_string("Match _usn4=(#usn8 {@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null})-[:`2esn`|usn2 *999..{#usn8:`5esn` =~0Xa,usn1:12 =~usn1 =~.e12}]-(@usn6 ) Detach Delete 0x0 Is Not Null Is Not Null Union Create @usn5=(`` :@usn6:`7esn`{`2esn`:0.12[0.e0..][`4esn`..]})-[@usn6?:#usn8 *..7{@usn5:@usn5 Starts With 12e12 Starts With @usn5}]->(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})-[usn1?:`2esn`|usn2 *123456789..999]-(usn1 :`7esn`{`1esn`:$@usn6 Contains 07 Contains 0.e0}) Unwind 01234567[.12..7][1000..1.e1] As usn2"),
    octest:ct_string("Create ``=(_usn4 :`4esn`:#usn8{@usn5:$_usn4[12e12][`4esn`],`4esn`:False In `3esn`})-[`6esn`:``|:_usn4 *..01]->(`5esn` :#usn7),((({`1esn`:12[..9e0][..999],usn1:0x0 =~$`7esn` =~@usn6})-[#usn8:`3esn`|:`4esn` *0..010]-(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]})<-[_usn3]->(_usn4 :`3esn`:`1esn`{`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]}))) Unwind Extract(usn2 In 1000 Contains 0.e0) Ends With Single(usn1 In 0x0[..`4esn`] Where 12.e12 Contains `5esn`) Ends With Single(usn1 In 00 Starts With _usn3 Where $0[01234567..00][$`2esn`..$@usn6]) As `1esn` Union Unwind 0.12 Contains $`2esn` Contains $_usn4 As @usn6 Merge `2esn`=(:usn1{`8esn`:usn1 Contains $``})-[``? *..01]->(`6esn` {`8esn`:.12 =~.12 =~1e1})-[ *010{@usn5:Null Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)}) On Match Set `5esn`(0[0.12..]).`1esn`? =12.e12 In $0 In Count(*),(usn2 :`6esn`:`7esn`{`6esn`:`` Contains 12 Contains True,usn2:$`2esn`[123456789..][00..]})-[`7esn`?{usn1:@usn5 Ends With $`3esn` Ends With 12e12,@usn6:12e12[_usn3..][$@usn5..]}]->(usn2 :`5esn`).#usn8? =[`4esn` In `6esn`[1e1..] Where `3esn` =~0.0 =~$``] =~[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`] Union All Create _usn3=((({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})-[``?{usn2:@usn5 In 0X0123456789ABCDEF,usn2:9e1 Is Null Is Null}]->(`8esn` :_usn3{``:12.e12['s_str']})-[:usn2|#usn8*..]-(`5esn` :`7esn`))) Optional Match `8esn`=(($12)<-[:``|:_usn4{`8esn`:0 Ends With $7 Ends With _usn3}]-(#usn7 {`6esn`:123456789 Is Null,`1esn`:00 In 12.e12})<-[#usn8?:`6esn` *0..010]-(`` :@usn5)),(:``{`5esn`:.e1 In $@usn6 In 999})-[`5esn`?:`3esn`|:`4esn`{`1esn`:$usn2 Contains 12.e12 Contains 00}]-(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]}) Where 1e1[..#usn8][..'s_str']"),
    octest:ct_string("Return *,[#usn8 In $`5esn` Is Null Is Null Where 0.e0 Ends With 12 Ends With $7][..{@usn5:12 =~usn1 =~.e12,`2esn`:0X7 =~`4esn` =~`8esn`}] As #usn7,@usn6 Starts With `7esn` Starts With Null Skip Count ( * )[..usn1][..12.e12] Limit (`7esn` :@usn6:`7esn`)<-[:``|:_usn4{`8esn`:0 Ends With $7 Ends With _usn3}]-(usn1 {#usn7:Count ( * )[@usn6..0x0]})<-[`8esn`]->(#usn8 ) Contains usn2(Distinct $1000[01234567],00 In 0.12 In `5esn`) Contains Any(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where usn2[$`1esn`...0]) Union Merge (((`8esn` :@usn5)<-[@usn5:#usn7|:_usn4]->(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})<-[`4esn`:``|:_usn4{`5esn`:0e0 =~_usn4}]-(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`}))) On Match Set (`4esn` :`6esn`:`7esn`)-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`7esn` :_usn4:usn1)-[`1esn`{_usn4:`3esn` Contains 0Xa}]->(`5esn` {@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]}).#usn8 =False In 123456789 In $0,Filter(`4esn` In `6esn`['s_str'..][010..] Where @usn6[$`7esn`])._usn4! =9e1[010..] Unwind 01 In _usn3 In 12 As `3esn` Detach Delete [0.12 Contains $`2esn` Contains $_usn4,01 Ends With .e0] Starts With [usn1 In $123456789 Contains usn2 Where usn1[..@usn5][...e0]] Starts With All(usn1 In 0x0[..`4esn`] Where $`2esn` Contains usn1 Contains `2esn`) Union All With Distinct 0[usn2..],0Xa[#usn7] As `4esn`,9e1 Starts With `1esn` Starts With 0Xa As usn2 Order By [#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str'|@usn6 Starts With `7esn` Starts With Null] Is Not Null Is Not Null Descending,0.12 =~9e0 Desc,7 =~9e0 =~'s_str' Descending Where 12.e12[$1000..] Match `1esn`=(:`8esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}),((#usn8 :@usn6:`7esn`{@usn5:1e1[@usn5..]}));"),
    octest:ct_string("With  Filter(`4esn` In `6esn`['s_str'..][010..] Where 9e0 =~$`5esn`)[[1e1[0.0],0 Contains 12e12,$123456789[..0x0][..`4esn`]]] As `3esn`,False[`2esn`..#usn8],00 Is Null Is Null Order By {`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]}[({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})-[? *999..]-({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`8esn` :`7esn`)][{@usn5:`` In `6esn`,`1esn`:$`2esn`[$`2esn`..]}] Asc,0.12 In $7 In 0 Desc Skip 9e12[0.0..12.e12] Limit $usn1[.e12..`8esn`][True..$@usn5] Return Distinct *,None(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0.12 In $`4esn` In `6esn`) Is Null As @usn6,123456789 =~_usn4 =~$0 As usn1 Delete All(#usn7 In 01234567[$`3esn`..] Where 12[usn1][True])[..[`4esn` In `6esn`[1e1..] Where $`2esn`[..`2esn`]|_usn3 In .e1 In $12]][..{`2esn`:$usn1[1e1.._usn3][$@usn6..$#usn7]}],0.0[12...12]"),
    octest:ct_string("Delete $`2esn` Contains usn1 Contains `2esn`,`4esn`[7..][1000..] Unwind `` As `6esn` Union Create `8esn`=((_usn4 :@usn6:`7esn`)-[:usn2|#usn8*..]-(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12})) Merge usn2=((`5esn` :usn2:@usn6{`5esn`:0Xa In .e1 In Count(*)})) On Create Set `3esn`+=[_usn4[0xabc..]][..Extract(_usn4 In usn1 Contains False Contains `` Where 12[usn1][True])][..(_usn3 {`7esn`:usn1 Contains False Contains ``})<-[? *0..010]-(#usn8 :`4esn`:#usn8)]"),
    octest:ct_string("Optional Match (({usn1:`4esn` In $12 In `8esn`})<-[@usn5:#usn8{`4esn`:$0[0X0123456789ABCDEF..$#usn7]}]-(`4esn` :`5esn`{_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})-[`7esn`{usn1:0 Is Not Null}]->(:`7esn`{`6esn`:123456789 Is Null,`1esn`:00 In 12.e12})) Where 0X0123456789ABCDEF[..usn1] Detach Delete 0x0[0X7..][usn1..] Union All Remove `5esn`:_usn4:usn1,_usn4($`6esn`[$@usn6..],_usn3[.0]).#usn8,[07[$999],@usn6[$`7esn`]].@usn5! Create ((:_usn3{@usn6:$`7esn` Is Null Is Null})-[``:``|:_usn4 *0X0123456789ABCDEF..{_usn3:$_usn3[..Count ( * )][..@usn5]}]-(#usn8 :@usn6:`7esn`)<-[?:_usn3|:`4esn` *010{`8esn`:$``[_usn4..][`7esn`..]}]-(`2esn` )) Merge (({`6esn`:$`5esn` Is Null,`2esn`:`7esn` Starts With $usn2 Starts With .e0})) On Create Set #usn7:``,({#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1})<-[?:@usn5|`8esn` *..0X7]-(:usn1).`4esn` =`6esn` Starts With $`5esn`,[`6esn` In 0X7 =~`` Where 0.12[Null..]]._usn4 =Count ( * )[`3esn`..][`2esn`..] On Match Set `3esn` =010 In @usn5 In `5esn`;"),
    octest:ct_string("With  Single(#usn7 In 01234567[$`3esn`..]) Is Null As `3esn` Order By .e12[usn2][01] Desc,$`7esn` Ends With 07 Ends With 07 Descending Skip 7[..0X7][..'s_str'] Limit {`4esn`:$usn1[0.12..]['s_str'..]} In None(`4esn` In $`8esn` Starts With 1000 Where 0.12 In 01 In $`3esn`) In usn2(True Contains @usn6) Unwind [`8esn` In 's_str' Starts With 1000 Starts With #usn8] =~[01234567 Ends With 12.0 Ends With 0X7,999[$`6esn`],`` Starts With @usn5] =~(:@usn6:`7esn`{`1esn`:010[@usn5..]})<-[`7esn`?:`5esn`|`1esn`]->(#usn8 :_usn4:usn1) As #usn8 Remove Extract(`4esn` In 's_str'[12..'s_str'] Where $#usn8 Is Null).@usn5?,{`5esn`:#usn7[..$1000][..01],`8esn`:True[Count(*)..][1e1..]}.@usn5?,count(Distinct $#usn8,False Is Not Null Is Not Null)._usn3? Union All Detach Delete 123.654[@usn5] Merge usn2=((`4esn` :`5esn`{@usn6:$usn2 =~$#usn8,`8esn`:`6esn` =~$_usn3})-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`7esn` :_usn4:usn1)<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})) On Create Set None(`6esn` In 0X7 =~`` Where 01234567 Ends With 0x0).`4esn`! =0[usn2..],[@usn6[$`3esn`]].`4esn` =01 In _usn3 In 12,`1esn`+=123456789 =~usn1 Unwind `7esn`(0.0[1000..][.e1..],$@usn5 Contains 01)[Any(usn1 In 0x0[..`4esn`] Where 0X7[.e12..01234567])][[$@usn6 Contains 07 Contains 0.e0,`5esn` In 12]] As `8esn` Union All Create #usn7=({`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]->(`3esn` {_usn3:@usn6 Contains _usn4 Contains $`4esn`})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->({_usn3:12.e12 In $0 In Count(*)}) Match `7esn`=(@usn6 {_usn3:1e1[.e1..],`1esn`:$#usn8})<-[#usn8?*{usn2:\"d_str\" Contains `3esn` Contains 00,`3esn`:010 Contains 0X0123456789ABCDEF}]->({`6esn`:$`8esn`[..$``]})-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]-(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa}),@usn6=({_usn3:12.e12 In $0 In Count(*)})<-[:@usn5|`8esn`*..]-(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4}) Where 1e1 In 9e0 In 9e0 With Distinct `7esn`($123456789 Ends With $`6esn`) Starts With {`7esn`:$12[01..][1.e1..],_usn3:$_usn3 =~`7esn` =~$_usn4} As `6esn` Skip 01234567[$`7esn`][_usn3] Limit usn1 Is Not Null Is Not Null;"),
    octest:ct_string("Merge usn2=((`3esn` :`4esn`:#usn8)<-[?:@usn6]-(`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})-[usn2?:`2esn`|usn2*..{@usn5:$1000[01234567],@usn5:0x0[$`3esn`..010][$#usn7..00]}]->(`4esn` {#usn8:`1esn`[0e0..],#usn7:$`6esn`[..0X0123456789ABCDEF]})) On Match Set (@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})-[`2esn`]-({`4esn`:$_usn3[..Count ( * )][..@usn5],#usn8:_usn3 =~00})<-[`6esn`?{`7esn`:.12 Ends With `1esn` Ends With $`1esn`,``:9e0 Starts With `6esn`}]->(:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})._usn3 =123.654 Contains `2esn`,`3esn` =Extract(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null|12.e12 Ends With 01 Ends With .e1) Ends With $0 Ends With All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`),{`6esn`:$_usn4[$`8esn`..][07..]}.@usn6! =`5esn`[.e1][0Xa] Union Create _usn3=(((#usn7 :#usn8{`2esn`:12 =~usn1 =~.e12})-[`8esn`?:#usn7|:_usn4{usn2:7[$`4esn`..123456789]}]->(#usn8 :usn2:@usn6{`5esn`:00 Ends With $_usn4 Ends With $`2esn`,usn2:#usn7 Starts With 0 Starts With 12})-[``? *12..0xabc]->({@usn6:9e0 Contains `8esn`}))),(((`8esn` :@usn5)<-[@usn5:#usn7|:_usn4]->(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})<-[`4esn`:``|:_usn4{`5esn`:0e0 =~_usn4}]-(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`}))) With  *,`3esn`[$`1esn`..] As usn2 Limit @usn6(Distinct Null[0e0][12])[..[@usn5 In 0X7 =~.0 =~\"d_str\" Where 0X7[0e0..]]][..`8esn`(010 =~`6esn`)] Where usn2[`3esn`][_usn3] Union All Unwind usn2[..$`3esn`] As `6esn`"),
    octest:ct_string("Create ((`6esn` :`7esn`)),`4esn`=({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(`4esn` :`6esn`:`7esn`{`8esn`:0X7[..12e12]})-[?:@usn6{`8esn`:12 Ends With .e12 Ends With $7,`8esn`:0.0[12...12]}]-(`3esn` :``) With  Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]) In All(@usn5 In .12[#usn7][$`8esn`] Where \"d_str\" =~`6esn` =~0Xa) In [123.654 Starts With usn1 Starts With @usn5] Order By 12e12[Count ( * )..][usn2..] Ascending,(`8esn` :usn2:@usn6)<-[#usn7:`3esn`|:`4esn` *00..]->(`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}) =~{@usn6:$_usn3[..Count ( * )][..@usn5],@usn5:12e12[Null]} =~Extract(usn2 In 1000 Contains 0.e0 Where $`7esn` Ends With $`2esn` Ends With $usn1) Descending Detach Delete Extract(usn1 In 00 Starts With _usn3 Where 00|0 Is Not Null Is Not Null) Starts With (:``{_usn3:Count(*)['s_str'..`1esn`],`1esn`:$`6esn`[$`1esn`][1000]})-[? *00..{_usn3:07[Count ( * )...e1][0X0123456789ABCDEF..$7],`1esn`:$`2esn` =~'s_str'}]->(_usn4 )<-[`2esn`?]-(usn2 :`3esn`:`1esn`) Starts With {_usn3:'s_str' =~0.e0},12 Ends With .e12 Ends With $7 Union With  `3esn` Contains 0Xa As `6esn`,[_usn4 Starts With $@usn6 Starts With #usn7,$@usn5 Contains 01] =~`4esn`(12 Ends With 01 Ends With 1e1) =~Extract(`6esn` In 0X7 =~`` Where 0x0[..`4esn`]) As ``,[usn1[..@usn5][...e0]][(`1esn` :`8esn`{`7esn`:`5esn`[`1esn`]})<-[`6esn`:`4esn`|:`7esn` *..0x0]->(#usn8 :@usn5)] Union All Detach Delete [$1000 Is Null Is Null] Is Null,Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $usn1[..$`6esn`][..Null]|$`1esn` Starts With $999) =~[`` Starts With 12,$usn2 Is Not Null,123456789[`4esn`..][Count ( * )..]],[@usn6 In @usn5 In $`6esn` Where $999[$1000]|$7[.12]] In {`1esn`:$@usn6 Contains 07 Contains 0.e0} In (`2esn` {usn1:@usn6[$`7esn`],_usn3:$@usn6[..12e12]})-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]->(usn1 {#usn7:Count ( * )[@usn6..0x0]})-[@usn6?:#usn8 *..7{@usn5:@usn5 Starts With 12e12 Starts With @usn5}]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})"),
    octest:ct_string("Unwind 12[0X7..@usn6] As `` Unwind Filter(`6esn` In 0X7 =~`` Where $usn2[0e0..])[{@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null}..] As @usn6 Union Return *,(@usn6 {_usn4:$_usn4[#usn8..]})<-[#usn8?:`6esn` *0..010]-(`` :@usn5)[Extract(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6|#usn7 Is Not Null Is Not Null)..] Skip $`7esn` Ends With 07 Ends With 07 Optional Match _usn3=(($999)),``=(({`8esn`:0X7 In 's_str' In $`1esn`})<-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]->(`1esn` :`1esn`)) Where 9e0[True..`1esn`] Create ((`7esn` :`2esn`:`3esn`{@usn6:9e0 Ends With $`7esn`})),`6esn`=((`3esn` {`8esn`:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`1esn`?:`1esn` *01234567..12]->(`8esn` {`6esn`:00 In 12.e12})-[`6esn`? *01234567..12{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]-(@usn5 {usn2:$999[12.0..]})) Union Detach Delete .e0[usn2..][12..]"),
    octest:ct_string("Optional Match `1esn`=((:`8esn`)-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]-(:@usn5{_usn4:.12 Starts With 0Xa})<-[`4esn`{#usn8:Null[0e0][12],`2esn`:`8esn` In $@usn5}]-({_usn3:999 In $_usn4 In 0X7,`1esn`:1e1 In $#usn8 In 12e12})) Where $_usn3 =~`7esn` =~$_usn4 Delete `7esn`($123456789 In Count(*) In .e1) Ends With Extract(@usn5 In .12[#usn7][$`8esn`] Where $0[7..][Null..]|Count ( * )) Ends With Any(usn1 In 0x0[..`4esn`] Where False[.e1..Null]),usn2 Starts With `6esn` Starts With 12e12"),
    octest:ct_string("Optional Match `1esn`=((:`8esn`)-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]-(:@usn5{_usn4:.12 Starts With 0Xa})<-[`4esn`{#usn8:Null[0e0][12],`2esn`:`8esn` In $@usn5}]-({_usn3:999 In $_usn4 In 0X7,`1esn`:1e1 In $#usn8 In 12e12})) Optional Match `3esn`=(:`3esn`:`1esn`{usn1:`4esn` In $12 In `8esn`})-[?:usn1|`3esn` *999..{_usn4:$999[12.0..],usn1:0[usn2..]}]->(:usn2:@usn6{@usn5:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:.12 Ends With $`4esn` Ends With Count(*)}),`5esn`=(#usn7 {@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]}) Where 0e0 Remove {`7esn`:True[..'s_str'][..01]}.`1esn`!,`2esn`:@usn5,({`1esn`:@usn6})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->(`2esn` :usn2:@usn6)-[``? *..01]->(`6esn` {`8esn`:.12 =~.12 =~1e1}).@usn5?"),
    octest:ct_string("Unwind 0x0 =~_usn4 As `4esn` Unwind `` Is Not Null As `` Union With Distinct *,Any(#usn8 In $`5esn` Is Null Is Null Where 0.12 Contains $`2esn` Contains $_usn4)[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..Extract(`4esn` In `6esn`[1e1..])] Order By .e0 Contains 01234567 Descending,[$`7esn` Ends With `1esn` Ends With True,$999[12.0..]][`7esn`(Distinct $`2esn`[$`2esn`..])..][Any(usn1 In $123456789 Contains usn2 Where 0.e0 Ends With 12 Ends With $7)..] Desc,'s_str' Starts With 1000 Starts With #usn8 Descending Where 123456789 =~_usn4 =~$0 Union All With Distinct *,.e1 Starts With $`8esn`"),
    octest:ct_string("Create `4esn`=((({`8esn`:$@usn5 Contains 01,`2esn`:123.654 Contains #usn8})-[usn2?]-(`3esn` {_usn4:12.e12 Ends With 01 Ends With .e1})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`}))) With Distinct *,\"d_str\" Order By $`3esn` Descending,[0[usn2..],7[12e12..$_usn4][9e1..True],`1esn` Contains Count ( * )][Extract(@usn5 In .12[#usn7][$`8esn`] Where Count ( * ))..][Single(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $123456789[..0x0][..`4esn`])..] Desc,1e1[..#usn8][..'s_str'] Descending Skip @usn5 Is Not Null Is Not Null Union All Merge #usn8=((:_usn4:usn1{``:123456789 Starts With `2esn` Starts With .0,`5esn`:``})-[`2esn`? *0..010]->(usn2 :_usn3)-[usn1? *07..{`5esn`:#usn7 Is Not Null Is Not Null}]-(`2esn` :usn1{`8esn`:$``[_usn4..][`7esn`..]})) With  07[07] Skip $`4esn` Contains 0Xa Limit 00[.e0..9e1] Union All Unwind 07[`6esn`..][`5esn`..] As _usn3"),
    octest:ct_string("With Distinct {usn1:'s_str'[12..'s_str'],#usn7:07[`6esn`..][`5esn`..]} As `1esn` Limit {`7esn`:.e0 Contains #usn7 Contains $#usn8}[(:usn2:@usn6{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8})-[? *999..]-(:`4esn`:#usn8{@usn6:$`4esn`[$`2esn`..]})..None(`6esn` In 0X7 =~`` Where 12.e12['s_str'])][(`5esn` :`7esn`)-[?:`8esn`|:usn1 *..0X7{@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00}]->(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})..({`7esn`:12e12 Ends With 010 Ends With .0})<-[?:`5esn`|`1esn`{_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12}]-({@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]})] Merge #usn8=(({`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})<-[`6esn`?:_usn3|:`4esn` *12..0xabc]-(`1esn` :usn1$@usn6)<-[#usn8?:`3esn`|:`4esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]-({_usn3:$`1esn` Starts With @usn6})) Create usn2=(`4esn` {``:07,`3esn`:12e12[_usn3..][$@usn5..]})<-[`3esn`? *123456789..999]->(_usn4 :_usn4:usn1)-[@usn5? *..7{usn2:12e12[$`5esn`][07],usn2:$0[..`8esn`]}]-(_usn4 :#usn8) Union All Optional Match (((_usn4 :`2esn`:`3esn`{#usn8:123456789[$#usn7..],#usn7:07[12e12]})-[:#usn7|:_usn4 *123456789..999]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})-[:``|:_usn4 *01234567..12{`2esn`:$`` Is Null Is Null,``:$`4esn`[usn1..$#usn8][12.0..`3esn`]}]-({usn1:0x0[0X7..][usn1..]}))),`1esn`=(((usn1 :`4esn`:#usn8)-[`4esn`?:`8esn`|:usn1 *..0x0]->(:@usn6:`7esn`{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})<-[?:`4esn`|:`7esn` *..0X7]-(:`3esn`:`1esn`{`1esn`:0.0[1000..][.e1..]}))) Where _usn3 Is Null Is Null Delete \"d_str\" =~12.e12 =~07,Null[0.e0..0x0] Return *,.e0[..0X0123456789ABCDEF][...e12] As `6esn`,1000 In 0X0123456789ABCDEF In 01 Limit [usn1 In 00 Starts With _usn3 Where 00][#usn8(Distinct $`2esn`[$123456789..$`1esn`][0Xa..$``],@usn6[`5esn`..$`3esn`])..['s_str'[..0.e0][..`1esn`],`5esn`[.e1][0Xa],123456789 In $usn2 In `6esn`]] Union All Return (#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :usn2:@usn6)-[`1esn`:`8esn`|:usn1 *0xabc{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]-(@usn5 :#usn8{`1esn`:0xabc Ends With $7 Ends With $`2esn`,_usn4:``})[.._usn4(@usn6[`5esn`..$`3esn`],`8esn`[$``])] Order By 7 =~9e0 =~'s_str' Descending,0e0 Starts With .e12 Ascending Limit 9e1 In $@usn5 In \"d_str\" With Distinct 1000[123.654..9e12][1000.._usn3],count($_usn3 =~`7esn` =~$_usn4) Is Not Null Is Not Null,$123456789 =~$#usn8 =~$#usn8 Order By $usn2 Is Not Null Is Not Null Ascending,Count ( * )[(`7esn` {usn1:$1000 Contains $`3esn`})-[`5esn`?:_usn4|:@usn5]-(`3esn` {`8esn`:$``[_usn4..][`7esn`..]})-[@usn5:`4esn`|:`7esn` *0X0123456789ABCDEF..{`7esn`:.e0[..999][..0X7]}]-(usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1})..Single(usn1 In 0x0[..`4esn`] Where $999[12.0..])][(:`6esn`:`7esn`{@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]})-[?{`2esn`:$`6esn`[$@usn6..]}]-(`4esn` :`6esn`:`7esn`)<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})..Single(`6esn` In 0X7 =~`` Where $usn1[0.12..]['s_str'..])] Ascending Create `5esn`=((:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[`6esn`:``|:_usn4 *..01]->(`5esn` {_usn4:0X7 =~``})-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(usn2 :usn1{``:9e12 Ends With 0X0123456789ABCDEF Ends With #usn7}))"),
    octest:ct_string("Return Distinct 0Xa Is Not Null Is Not Null As `1esn`,(`5esn` :`7esn`)-[?:`8esn`|:usn1 *..0X7{@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00}]->(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})[..Filter(#usn8 In $`5esn` Is Null Is Null Where 0Xa Is Null Is Null)][..(`7esn` {@usn5:True[0x0][@usn6],`5esn`:Null Starts With _usn4 Starts With `6esn`})-[#usn8? *0xabc{`5esn`:0X7[12]}]->(`7esn` :`2esn`:`3esn`{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1})-[`6esn`:``|:_usn4 *..01]->(`5esn` {_usn4:0X7 =~``})] As usn1 Skip False[`6esn`][07] Limit [usn1 In 0x0[..`4esn`] Where $1000 Is Null Is Null|12[usn1][True]] Starts With (`` :@usn5{#usn7:0X7[12]})-[@usn6? *07..{_usn4:Count(*)[..`3esn`],`5esn`:01234567[$`3esn`..]}]-(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null})<-[`5esn`:`8esn`|:usn1{usn1:12e12[Count ( * )..][usn2..],usn2:$123456789 Is Null Is Null}]-(`8esn` ) Starts With (`5esn` {usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null})<-[ *00..{@usn5:$`5esn` Is Null Is Null}]->(`3esn` :`4esn`:#usn8{``:\"d_str\" Is Null Is Null})<-[@usn5?:``|:_usn4]-(_usn3 :`4esn`:#usn8) Remove {`1esn`:`7esn`[Null..][@usn5..]}.`7esn`!"),
    octest:ct_string("Return Distinct 0X0123456789ABCDEF Ends With 0X0123456789ABCDEF Ends With 's_str' Limit usn2[$`7esn`..010][00..``] With  `5esn` In $999 As `6esn` Order By [_usn4 In usn1 Contains False Contains `` Where True[..'s_str'][..01]][[.0 Starts With `2esn` Starts With `6esn`,9e1[0.e0..][#usn8..]]..][[07[$999],9e0 In 01234567,@usn5 In 0X0123456789ABCDEF]..] Asc,False Ends With $`8esn` Asc Where @usn5 Ends With $`3esn` Ends With 12e12;"),
    octest:ct_string("Create #usn7=(((`` :usn1)<-[#usn8:`3esn`|:`4esn` *0..010]->(`3esn` :usn2:@usn6)-[:`3esn`|:`4esn` *999..{`6esn`:$123456789[..0.12][..#usn7],`3esn`:0 Ends With $7 Ends With _usn3}]->(:`4esn`:#usn8{usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null}))) Delete Extract(@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7|Null Starts With $`7esn` Starts With `2esn`) =~{`5esn`:Count(*)[..`3esn`],usn1:01234567 Ends With 0x0},0x0 Starts With $`7esn` Starts With `2esn` Unwind [01234567 =~usn1,9e0 =~$`5esn`,usn2[$`1esn`...0]][..[.12 In $999 In `5esn`,010 =~`6esn`,#usn7 Contains .0 Contains .e1]] As `8esn` Union All Optional Match ((_usn3 :_usn4:usn1)<-[`5esn`?:#usn8{#usn7:0.12 Ends With $usn1 Ends With $@usn5}]->({`1esn`:$@usn5 =~$`` =~$usn2})),(:`3esn`:`1esn`{@usn5:$#usn8 In .e12 In 9e1,`7esn`:9e1 Starts With `1esn` Starts With 0Xa})-[:usn1|`3esn`]-(_usn3 :_usn4:usn1{`2esn`:$`6esn`[$@usn6..]}) Where 00[01234567][False] Return Distinct *,Any(`6esn` In 0X7 =~`` Where $`5esn` In `2esn` In $12)[Extract(`4esn` In 's_str'[12..'s_str'] Where .12[9e0][$7]|$`3esn` Starts With $usn1)..[@usn5 In .12[#usn7][$`8esn`] Where $12 Contains 123.654 Contains `8esn`|@usn5 Ends With 1.e1 Ends With 0X0123456789ABCDEF]][{`6esn`:$12[..``][..$7]}..[usn1 In 1000 In $`5esn`]];"),
    octest:ct_string("Remove {`4esn`:.12 Starts With 0Xa}.usn1!,[`6esn` In 0X7 =~`` Where 123456789 =~_usn4 =~$0|$#usn8 Ends With 1000 Ends With .0].`7esn`? Remove (:`2esn`:`3esn`{usn2:9e12[@usn6..$``][#usn8..Count ( * )],`3esn`:$1000 In $`7esn` In $7})<-[?:`1esn`]-(_usn4 :@usn6:`7esn`{@usn5:$_usn3[$`4esn`..Null]})._usn3! Union All With Distinct @usn5 Ends With $`3esn` Ends With 12e12 Order By $`3esn` =~$`7esn` =~False Ascending Skip 0X0123456789ABCDEF[.e0..$`4esn`]"),
    octest:ct_string("Optional Match `1esn`=(((`` :@usn5)-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]->(usn1 {#usn7:Count ( * )[@usn6..0x0]})-[@usn5:`8esn`|:usn1]-(#usn7 :`5esn`))),usn1=(_usn4 :`8esn`{`3esn`:False[.e1..Null],`3esn`:9e0 =~$`5esn`}) Where 9e1 Is Null Is Null Union All Unwind _usn4(@usn6[`5esn`..$`3esn`],9e1 Starts With _usn3 Starts With `4esn`)[None(usn2 In 1000 Contains 0.e0 Where #usn7 Starts With .e12 Starts With $`7esn`)..Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $123456789 Ends With .e1)][(`6esn` :`5esn`)-[:@usn5|`8esn` *0Xa{usn1:$1000 Contains $`3esn`}]->({`2esn`:@usn5 In 0X0123456789ABCDEF,`1esn`:@usn6[`5esn`..$`3esn`]})..{#usn7:1e1[`6esn`..]}] As _usn3"),
    octest:ct_string("Merge `1esn`=((@usn5 {@usn6:$123456789[0X7..12.e12]})<-[:`5esn`|`1esn`]-(#usn8 {@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null})) On Create Set `1esn` =0X0123456789ABCDEF[.e0..$`4esn`] Return *,0.12[Count(*)..],$@usn5 =~$`` =~$usn2 As #usn8 Union All With Distinct `` Contains 12 Contains True,(@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})<-[_usn4?:`6esn`]-(`2esn` {`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null}) Is Not Null Is Not Null As @usn5,Any(#usn8 In $`5esn` Is Null Is Null Where 0.12 Contains $`2esn` Contains $_usn4)[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..Extract(`4esn` In `6esn`[1e1..])] Skip Count(*)['s_str'..`1esn`] Limit Any(`6esn` In 0X7 =~`` Where $`5esn` In `2esn` In $12)[Extract(`4esn` In 's_str'[12..'s_str'] Where .12[9e0][$7]|$`3esn` Starts With $usn1)..[@usn5 In .12[#usn7][$`8esn`] Where $12 Contains 123.654 Contains `8esn`|@usn5 Ends With 1.e1 Ends With 0X0123456789ABCDEF]][{`6esn`:$12[..``][..$7]}..[usn1 In 1000 In $`5esn`]] Where $`5esn` In `2esn` In $12 Detach Delete `3esn`(Distinct 123456789 =~$123456789)[..(usn1 :`6esn`:`7esn`)-[`2esn`? *0..010]->(:usn1{`6esn`:7 Contains 9e1,#usn8:`7esn`[...e1][..\"d_str\"]})][..(:`4esn`:#usn8)<-[_usn4:`7esn`|`2esn`]-(`5esn` {`8esn`:0.0[12...12]})<-[#usn7:`3esn`|:`4esn` *00..]-(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})],`6esn`[0X7..][0x0..],Null Contains 9e1 Union Create (_usn3 :_usn4:usn1),((`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})-[?:@usn6 *..7{#usn8:'s_str'[.12..$#usn7][$999..`2esn`]}]->(@usn5 {_usn4:010[$@usn6],`6esn`:123456789[1e1..0.0]})<-[`6esn`?:`2esn`|usn2 *01234567..12]->(:`7esn`{#usn7:True =~@usn5 =~$`1esn`})) With  @usn6 =~01,12.0 In 1000 In _usn4 As _usn3,0 =~12.e12 =~$`` As #usn7 Order By [usn2 In 1000 Contains 0.e0 Where @usn6[`3esn`..][$7..]] In [0xabc[12.e12..`1esn`]] In {@usn6:$_usn3[..Count ( * )][..@usn5],@usn5:12e12[Null]} Asc,[0.0 =~0X7 =~#usn7,123456789 =~_usn4 =~$0] Ends With `7esn`(Distinct 12.0[..$7][..999],0X7[.e12..01234567]) Descending,Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where usn1 Starts With $#usn7 Starts With `5esn`) Contains @usn5(Distinct 123456789 Starts With `2esn` Starts With .0,123456789 Starts With #usn7 Starts With `6esn`) Contains None(#usn8 In $`5esn` Is Null Is Null Where $#usn8 In .e12 In 9e1) Asc Skip 07 In $7 In 12 Where Count ( * ) Create ((@usn6 {#usn7:False[`2esn`..#usn8]})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]-(`7esn` {_usn3:usn1 Contains $``})-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]-(_usn3 ));"),
    octest:ct_string("Optional Match ((({usn1:`2esn`[$`1esn`..][$_usn3..]})<-[``? *..0X7{_usn4:12 Ends With 01 Ends With 1e1}]-(usn2 :@usn6:`7esn`)<-[#usn7 *123456789..999]-(:`5esn`{`3esn`:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:0e0 =~_usn4}))) Where $#usn7 In .e1 In 01 Union Create ((`5esn` {_usn4:0X7 =~``})<-[`2esn`?:usn2|#usn8{`6esn`:0X7[.e12..01234567],@usn6:`7esn`[...e1][..\"d_str\"]}]->(`5esn` :`8esn`{#usn8:0.12 Contains $`2esn` Contains $_usn4,`2esn`:$`5esn` Starts With _usn3 Starts With @usn5})-[`8esn` *..0x0]-(:`2esn`:`3esn`{usn2:$`5esn` In False})),`8esn`=((`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`3esn`?:_usn3|:`4esn`]-(`4esn` {`6esn`:$12[..``][..$7]})) Union All Optional Match ((`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})),(((@usn6 {#usn7:'s_str' In \"d_str\" In 123456789,usn2:07[12][$`6esn`]})<-[?:@usn6{`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]}]->(:@usn5)<-[#usn8?:`4esn`|:`7esn` *07..]->(`` :#usn7$0))) Where 00 In 1e1 Create `3esn`=((@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})<-[{_usn3:12.e12 In $0 In Count(*)}]-(:#usn7{`2esn`:.12 Starts With @usn5 Starts With $#usn8})) Unwind [@usn5 In .12[#usn7][$`8esn`] Where $_usn4[12e12][`4esn`]][`1esn`(Distinct 1e1[0.0],0.0[1000..][.e1..])..``(False In `3esn`)][[@usn6 =~01,$`7esn` In $7,00[``..][$`4esn`..]]..Filter(@usn6 In @usn5 In $`6esn` Where False[0Xa..$@usn5][$`6esn`..12e12])] As @usn6"),
    octest:ct_string("Match `1esn`=(((`5esn` {@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00})-[ *010{@usn5:Null Is Null Is Null}]-(:`5esn`)<-[`7esn`{`7esn`:\"d_str\",usn2:True[`4esn`][$`6esn`]}]-(#usn7 {@usn5:`5esn`[.e1][0Xa],@usn6:Count(*)[`7esn`..$12]}))) Create ((`6esn` {`2esn`:$`2esn`[..`2esn`],usn1:False[0Xa..$@usn5][$`6esn`..12e12]})),_usn4=((#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]})) Remove {`6esn`:9e1 Contains $`3esn` Contains 01234567}.`2esn` Union Remove `1esn`(Distinct `2esn`[$`1esn`..][$_usn3..])._usn4!,Null.`6esn`?,`3esn`(Distinct 01234567 Ends With 0x0).``! Optional Match @usn6=((:usn1{_usn3:0xabc[12.e12..`1esn`],`1esn`:12[usn1][True]})-[?:`4esn`|:`7esn`]->(#usn7 {`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null})),#usn7=(@usn5 {usn2:$999[12.0..]})<-[usn1]->(`8esn` :_usn3{`8esn`:$`3esn` In $12 In 's_str'})-[_usn3?:``|:_usn4]->(`5esn` {usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null}) Remove Any(usn2 In 1000 Contains 0.e0 Where .e12 Contains $12 Contains 12.e12).`2esn`,[$`6esn`[$`1esn`][1000],$``[False],07[12][$`6esn`]].`5esn`!,`7esn`(`3esn`[..7][..12e12],$999 Ends With $`3esn` Ends With `8esn`).usn2? Union Detach Delete _usn3 Ends With 12e12 Ends With .e0,01[0.0],None(_usn4 In usn1 Contains False Contains `` Where 12 Ends With 01234567) Ends With None(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $`4esn`[..usn1]) Detach Delete $_usn4['s_str'..] Detach Delete .e0 Is Not Null Is Not Null,{usn1:7 =~9e0 =~'s_str',@usn6:$usn1[..$`6esn`][..Null]} =~Single(usn2 In 1000 Contains 0.e0) =~Any(@usn6 In @usn5 In $`6esn` Where $`7esn` Is Not Null)"),
    octest:ct_string("Optional Match _usn4=(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa}) Unwind $_usn3 =~$`3esn` =~0x0 As usn2 Unwind None(usn1 In 0x0[..`4esn`] Where .12 Starts With .12 Starts With `3esn`) Contains `3esn`($usn2 Contains 12.e12 Contains 00) As @usn6"),
    octest:ct_string("Return Distinct *,Any(@usn5 In $#usn8 Is Null Is Null Where True[Count(*)..][1e1..]) Is Not Null As `6esn` Remove Any(`6esn` In 0X7 =~`` Where 01234567 Ends With 0x0).usn1?,({``:01234567 Ends With 0x0,`6esn`:0X7[0e0..]})-[:@usn5|`8esn` *0Xa{usn1:$1000 Contains $`3esn`}]->({`4esn`:#usn7 Starts With 0 Starts With 12,`4esn`:0x0 =~_usn4})<-[`8esn`?:``|:_usn4 *..01]-({`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null}).`5esn`! With  *,{`7esn`:Count(*) In 01 In .0}[..{`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]}][..#usn7(Distinct 0.e0[9e0][0e0],999[``..][Null..])] As `5esn`,#usn7 Ends With `4esn` Ends With @usn5 As `` Where $`1esn` =~$`1esn` =~#usn7 Union All Return Distinct *,[@usn6 =~01,$`7esn` In $7,00[``..][$`4esn`..]][All(`4esn` In $`8esn` Starts With 1000 Where 9e1 Is Null Is Null)..(_usn4 {_usn3:$`1esn` Is Null,usn1:$`4esn`[$`2esn`..]})<-[#usn8?:_usn4|:@usn5 *..0x0]-(#usn8 :`1esn`{#usn7:1e1[`6esn`..]})] As @usn6 Order By 010 Starts With `7esn` Starts With 9e1 Ascending,123456789 Is Null Descending,Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With $usn1|.12 Ends With `1esn` Ends With $`1esn`)[[True[..'s_str'][..01],_usn4 Ends With 01 Ends With $`1esn`,.0[$`6esn`..False]]..`7esn`(Distinct 010 Is Null Is Null,$`8esn`[..$``])][({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})<-[? *0..010]-(`4esn` :`5esn`{_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[:#usn7|:_usn4 *1000..{_usn4:07 In `5esn` In 12e12,@usn6:.0 Is Null Is Null}]->(#usn7 $usn2)..All(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null)] Desc Skip {#usn8:$`5esn` In False,usn2:$`7esn` In $7} Is Not Null Is Not Null Remove None(`4esn` In `6esn`[1e1..] Where 12.0[``]).@usn5? With Distinct 's_str'[..0.0][..$`4esn`] As `2esn`,#usn7 Contains .0 Contains .e1,({`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`4esn` {@usn6:True[..'s_str'][..01]}) In Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where 07[12e12]) Skip `6esn` Starts With $usn2 Starts With 0.0 Limit 9e1 Contains $`3esn` Contains 01234567"),
    octest:ct_string("Detach Delete [.0[01][$12]][..[@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $`3esn` =~$`7esn` =~False|7[..12e12][..$`6esn`]]],07[07] Union Return *,07[0..`4esn`] Skip $_usn3[9e1][$_usn4] Optional Match ((`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`3esn`?:_usn3|:`4esn`]-(`4esn` {`6esn`:$12[..``][..$7]})),((_usn4 {`8esn`:9e1 In 01 In 999}))"),
    octest:ct_string("With  0Xa Starts With 0.12 Starts With .0 As usn2,[$`8esn` In \"d_str\" In 9e12,9e0 Contains `8esn`,$@usn6 Contains 0 Contains $`2esn`][Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 01 In _usn3 In 12)][Extract(#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|`7esn` Starts With $usn2 Starts With .e0)] As _usn4,$@usn6 Contains 0 Contains $`2esn` As `` Limit 1e1 In $999 In $usn2 Union Unwind usn2(Distinct 0xabc Contains Null Contains 9e12,12[..True][..$`4esn`]) Is Null As `3esn` Union All Unwind 0.0 =~0X7 =~#usn7 As `6esn` Optional Match usn2=((usn2 :`7esn`{_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`})-[`3esn`{#usn7:12e12 Ends With 010 Ends With .0}]->(usn2 :`5esn`)),((`3esn` :`8esn`)-[?{@usn5:12.e12['s_str'],`1esn`:_usn3 Ends With 12e12 Ends With .e0}]-(:`4esn`:#usn8{_usn4:'s_str' In \"d_str\" In 123456789,`2esn`:0.12 Ends With $usn1 Ends With $@usn5})-[ *..0X7]->(`5esn` :_usn4:usn1)) Create `4esn`=((:`7esn`{``:$`1esn` Starts With @usn6})),@usn5=((@usn6 :#usn7{@usn5:Null Is Null Is Null})<-[``?:@usn5|`8esn`]->(:_usn4:usn1{#usn7:$`5esn` Is Null Is Null,usn2:usn1[$`3esn`..$999][True..False]}))"),
    octest:ct_string("Unwind [usn1 In 00 Starts With _usn3 Where False[.e1..Null]|1000[0.0][Null]][Filter(usn2 In 1000 Contains 0.e0 Where $`7esn` Ends With $`2esn` Ends With $usn1)..][Single(usn2 In 1000 Contains 0.e0 Where 0e0 Is Not Null Is Not Null)..] As `5esn` Remove {`8esn`:Count ( * ) =~Count(*)}.`6esn`,({@usn6:0X0123456789ABCDEF[..usn1]})<-[:``|:_usn4 *0Xa]->(`7esn` :`2esn`:`3esn`)._usn4?,(:`4esn`:#usn8)<-[_usn4:`7esn`|`2esn`]-(`5esn` {`8esn`:0.0[12...12]})<-[#usn7:`3esn`|:`4esn` *00..]-(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]}).`4esn` Union All Remove `7esn`(Distinct 010 Is Null Is Null,$`8esn`[..$``]).@usn5,{#usn7:0Xa Is Not Null Is Not Null,#usn7:.0[$`6esn`..False]}.`4esn`?,[usn1[..@usn5][...e0],$`8esn`[``..][123.654..]].`` Delete ({_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[? *..0x0]->(:usn2:@usn6{`6esn`:12[12e12..@usn6],#usn8:`6esn` =~$_usn3}),$123456789[$``][010] Return All(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $123456789 Ends With $`6esn`) Is Null Skip [0X0123456789ABCDEF Ends With 0X0123456789ABCDEF Ends With 's_str',0X0123456789ABCDEF In $1000 In $`3esn`,$0[..`8esn`]] In `4esn`(Distinct 12.e12 In $0 In Count(*),00 In 1e1) In [`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where _usn3[...e1]|.e0 =~`5esn`] Union All Create @usn6=(({_usn4:Count(*)[..`3esn`],`5esn`:01234567[$`3esn`..]})<-[ *0xabc]-(`6esn` :`3esn`:`1esn`{_usn3:1e1[.e1..],`1esn`:$#usn8})<-[usn1? *..0X7]-(usn1 :`4esn`:#usn8)),#usn8=((`5esn` {`5esn`:$`5esn`[False]})<-[?:usn2|#usn8 *00..]-(`6esn` :`5esn`{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]})) Return Distinct 0['s_str'][Null] As #usn8,`2esn` In 12.e12 In `3esn` As _usn3 Order By $0 =~`3esn` Descending,0Xa[0xabc..$#usn8] Desc Skip usn1[Count ( * )..$usn1];"),
    octest:ct_string("Return *,9e12 Contains $_usn3 As `2esn` Order By 0x0[$`3esn`..010][$#usn7..00] Descending,9e12 Asc,`5esn` In $999 Descending Limit `3esn` =~$`5esn` =~12 Unwind 00 As `8esn` Return Distinct *,Count ( * ) Contains 999 Contains $`8esn` Order By $`7esn` =~.e1 Descending,0e0 Starts With .e12 Ascending Skip 0.e0 Ends With 12 Ends With $7 Union With Distinct 1.e1 =~$_usn4 As usn2,[_usn4 Starts With $@usn6 Starts With #usn7,$@usn5 Contains 01] =~`4esn`(12 Ends With 01 Ends With 1e1) =~Extract(`6esn` In 0X7 =~`` Where 0x0[..`4esn`]) As ``,{_usn4:00}[#usn7(00 In 12.e12)][[.12 Ends With `1esn` Ends With $`1esn`,$`5esn`[False]]] Order By $12 Starts With #usn7 Asc,$0[$0..] Descending Where _usn3 Ends With 0x0 Ends With 01234567 With  *,0xabc Starts With _usn3 As `3esn`,Null[..12e12][..usn1] As `3esn` Order By 0x0[$`3esn`..010][$#usn7..00] Ascending,010 =~$usn2 =~1e1 Desc,(#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :usn2:@usn6)-[`1esn`:`8esn`|:usn1 *0xabc{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]-(@usn5 :#usn8{`1esn`:0xabc Ends With $7 Ends With $`2esn`,_usn4:``})[.._usn4(@usn6[`5esn`..$`3esn`],`8esn`[$``])] Asc Limit 0x0 Contains $`8esn` Contains `6esn` Where 0xabc Contains Null Contains 9e12 With  `5esn` In 12 As usn2,Count(*) Starts With 1e1 Starts With $123456789 As #usn7,[`4esn` In 's_str'[12..'s_str'] Where 9e1 Contains $`3esn` Contains 01234567][[7[..12e12][..$`6esn`]]..{usn1:7 =~9e0 =~'s_str',@usn6:$usn1[..$`6esn`][..Null]}] As #usn8 Order By 00 In 12.e12 Descending,9e0 Ends With $`7esn` Asc Skip 01234567 Is Null Is Null Limit $123456789 In Count(*) In .e1 Where $123456789 Ends With $`6esn`;"),
    octest:ct_string("With  *,7 Is Null As #usn7 Order By $`7esn` =~.e1 Descending,0e0 Starts With .e12 Ascending Where $`2esn`[$`2esn`..] Union All Create ((:usn1{`6esn`:7 Contains 9e1,#usn8:`7esn`[...e1][..\"d_str\"]})<-[`8esn`:@usn5|`8esn` *123456789..999{`5esn`:0x0 Contains $`8esn` Contains `6esn`,#usn8:010 =~$usn2 =~1e1}]->(_usn4 {@usn5:$_usn3[$`4esn`..Null]})<-[`5esn`?:`6esn`]->(`1esn` :#usn7{`4esn`:9e12 Is Not Null Is Not Null,`8esn`:$0[..`8esn`]})) Match (({#usn7:Count ( * )[@usn6..0x0]})<-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]-(`4esn` {`7esn`:.e0[..999][..0X7]})) Where 0X7[0e0..] Union Match (@usn6 {_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12})<-[:`5esn`|`1esn`{`4esn`:9e0[True..`1esn`],@usn6:7 =~9e0 =~'s_str'}]->(`6esn` {`2esn`:$`2esn`[..`2esn`],usn1:False[0Xa..$@usn5][$`6esn`..12e12]}),(({_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[:``|:_usn4 *0Xa]-(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})) Where 0x0 =~_usn4"),
    octest:ct_string("Return *,\"d_str\" =~`6esn` =~0Xa As `4esn` Skip $@usn5 =~07 =~True Create _usn3=(:@usn6:`7esn`{_usn3:False[`2esn`..#usn8]})<-[ *0xabc]-(_usn4 {`1esn`:010[@usn5..]}),`1esn`=(:@usn5{usn1:Count(*)[True],@usn6:123456789[$#usn7..]})<-[#usn7]-(`7esn` :`2esn`:`3esn`)-[?:``|:_usn4 *..0X7]->(`4esn` {`6esn`:$12[..``][..$7]}) Create ((@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(:``{`2esn`:9e0[``][123.654],`1esn`:$_usn3[Null]})-[@usn6?:#usn7|:_usn4 *00..]->(`` :@usn5{#usn7:0X7[12]})) Union Remove `3esn`:#usn7,None(`4esn` In `6esn`[1e1..] Where $`2esn`[..`2esn`]).#usn8?"),
    octest:ct_string("With Distinct $`4esn`[$`2esn`..] As #usn8,#usn8 In $0,Any(`6esn` In 0X7 =~`` Where 0X7[0e0..]) Contains Single(`4esn` In `6esn`['s_str'..][010..] Where @usn6[`3esn`..][$7..]) As #usn7 Skip $@usn5 =~$`` =~$usn2 Limit `8esn` Ends With 999 Ends With 9e0 Unwind _usn3[.0] As _usn3 Return Distinct 999[``..][Null..] As `1esn` Skip usn2(Distinct _usn3 Contains @usn6 Contains 1.e1)[Extract(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where _usn3 Is Null)..[12e12[0.e0][9e1]]][Single(`4esn` In $`8esn` Starts With 1000 Where $`8esn`[..$``])..Extract(`4esn` In 's_str'[12..'s_str'] Where `` Contains 12 Contains True|$`1esn` Is Null)] Limit Filter(usn2 In 1000 Contains 0.e0 Where $`7esn` Ends With $`2esn` Ends With $usn1)[..(:usn2:@usn6{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8})-[? *999..]-(:`4esn`:#usn8{@usn6:$`4esn`[$`2esn`..]})][..Any(@usn5 In .12[#usn7][$`8esn`] Where 0Xa Is Null Is Null)] Union All Return Distinct _usn3(Distinct 0.12 In 01 In $`3esn`,1.e1[0X0123456789ABCDEF..][$`5esn`..]) Ends With Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) Ends With Filter(usn2 In 1000 Contains 0.e0 Where 12e12 Ends With 010 Ends With .0),$`7esn` In 0.e0 In `4esn` As `2esn` Limit Any(@usn5 In $#usn8 Is Null Is Null Where 0.e0 Ends With 12 Ends With $7) Is Not Null Is Not Null Create `2esn`=(`8esn` )-[ *0..010{#usn7:$@usn6 Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)}),`3esn`=(`4esn` {usn2:7 In 0xabc})<-[$#usn8]->(`4esn` {#usn8:`1esn`[0e0..],#usn7:$`6esn`[..0X0123456789ABCDEF]}) With  *,`7esn`[...e1][..\"d_str\"],12e12[0.e0..True][0.12..0.0] As #usn7 Order By 0xabc[12.e12..`1esn`] Ascending,12.e12 In $1000 Ascending,[`6esn` In 0X7 =~`` Where 0.12[Null..]] Is Null Is Null Ascending Limit Extract(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null|12.e12 Ends With 01 Ends With .e1)[00..] Where 0.e0[..#usn8][..Null] Union All Detach Delete {`8esn`:010[@usn5..],#usn8:False Is Not Null Is Not Null}[[`4esn` In 's_str'[12..'s_str'] Where $`2esn`[..7][..$usn1]]][Count ( * )] Unwind $@usn6 Is Null As `` Merge `3esn`=(((:_usn4:usn1{usn2:$`5esn` In False})<-[?:@usn5|`8esn` *..0X7]->(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12})-[:``|:_usn4 *01234567..12{`2esn`:$`` Is Null Is Null,``:$`4esn`[usn1..$#usn8][12.0..`3esn`]}]->(#usn7 {@usn5:`5esn`[.e1][0Xa],@usn6:Count(*)[`7esn`..$12]}))) On Create Set [`6esn` In 0X7 =~``|$#usn7[...e12][..$7]].`1esn` =9e12 =~01 =~$`7esn` On Create Set [@usn6 In @usn5 In $`6esn` Where False Contains `3esn`].`6esn` =[#usn7 In 01234567[$`3esn`..] Where `7esn` Starts With $`` Starts With $#usn7|07 In 0 In 's_str'][Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 12.0[..$7][..999])..][[@usn5 In .12[#usn7][$`8esn`] Where $0[7..][Null..]|$@usn5 Contains 01]..],`8esn` =[`6esn` In 0X7 =~`` Where 12.e12['s_str']|00[7..$123456789]][All(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6)..][Extract(`4esn` In $`8esn` Starts With 1000 Where 1.e1[0X0123456789ABCDEF..][$`5esn`..]|9e1[...e0])..],($999)<-[ *00..{@usn5:$`5esn` Is Null Is Null}]->(@usn5 {`1esn`:0[usn2..]})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`1esn` :usn2:@usn6).`4esn` =`3esn` =~0.0 =~$``"),
    octest:ct_string("Optional Match (`6esn` :@usn6:`7esn`{@usn5:True[0x0][@usn6],`5esn`:Null Starts With _usn4 Starts With `6esn`}),(:`1esn`{@usn6:$_usn4[$`4esn`..$#usn7][`6esn`..7],`8esn`:'s_str'['s_str'..$usn2][_usn3.._usn3]})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`}) Where Null[01234567][01234567] Create usn1=((#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})-[`6esn`?:usn1|`3esn`{`2esn`:1e1[@usn5..],`3esn`:$`6esn`[`3esn`..0e0]}]->(:`4esn`:#usn8{usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null})) Remove usn1:`1esn` Union All Merge ((#usn7 :`5esn`)<-[:`2esn`|usn2 *07..]-({`7esn`:`6esn` Starts With $@usn6,``:`6esn` =~$_usn3})<-[`1esn`?:`1esn` *01234567..12]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})) On Match Set [`4esn` In `6esn`[1e1..] Where $`2esn`[..`2esn`]|`` Contains 12 Contains True].`2esn`? =$@usn6[..$#usn7][..12.e12],None(@usn5 In 0X7 =~.0 =~\"d_str\" Where #usn7 Starts With 0 Starts With 12).`8esn`! =12[..9e0][..999] With  [$`5esn` Is Not Null,0e0 Is Null Is Null] Ends With Filter(`4esn` In `6esn`['s_str'..][010..] Where Count(*)[..`3esn`]) Ends With (_usn4 {`8esn`:9e1 In 01 In 999})-[`8esn`?:#usn7|:_usn4]-(#usn8 :_usn3)-[ *0..010{#usn7:$@usn6 Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)}),[@usn5 In $#usn8 Is Null Is Null Where 7 In 0xabc][[Null[01234567][01234567],07[1e1],Count(*)[12.e12..]]..#usn8($12 Contains 123.654 Contains `8esn`,0xabc Ends With $#usn7 Ends With #usn8)] Skip `1esn`[@usn6..$123456789] With  *,{`3esn`:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:0e0 =~_usn4}[All(@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7)..{_usn3:`1esn` In 999 In $#usn7,@usn5:\"d_str\" Starts With $usn1}][{#usn8:$999 Ends With $`3esn` Ends With `8esn`}..(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[`1esn`{_usn4:`3esn` Contains 0Xa}]-(#usn7 :`6esn`:`7esn`)] Order By .e1 Starts With $`8esn` Asc Limit $#usn7 In .e1 In 01 Union All Return Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]) In All(@usn5 In .12[#usn7][$`8esn`] Where \"d_str\" =~`6esn` =~0Xa) In [123.654 Starts With usn1 Starts With @usn5] Order By 12e12[Count ( * )..][usn2..] Ascending,(`8esn` :usn2:@usn6)<-[#usn7:`3esn`|:`4esn` *00..]->(`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}) =~{@usn6:$_usn3[..Count ( * )][..@usn5],@usn5:12e12[Null]} =~Extract(usn2 In 1000 Contains 0.e0 Where $`7esn` Ends With $`2esn` Ends With $usn1) Descending Detach Delete $999[12.0..] Match usn2=(((`1esn` :``{`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]})<-[?:`5esn`|`1esn` *999..]->(:``)<-[@usn6? *1000..{#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1}]-(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`}))),`2esn`=(({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})-[?:`2esn`|usn2{@usn6:0.12[0.e0..][`4esn`..]}]->(:_usn4:usn1)) Where `4esn` =~123456789"),
    octest:ct_string("Merge `8esn`=((usn2 {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})-[`1esn`{_usn4:`3esn` Contains 0Xa}]-(:usn2:@usn6{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8})) Union Optional Match ((:`6esn`:`7esn`{usn2:.e0[..0X0123456789ABCDEF][...e12]})),((`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]})) Where $`4esn`[12.e12..][0.0..] Union Merge (((`3esn` )-[?:#usn7|:_usn4]-(usn2 :#usn8{_usn3:$_usn3[..Count ( * )][..@usn5]})-[*{`2esn`:$1000[01234567]}]-(_usn4 :`4esn`:#usn8{#usn7:1e1[@usn5..]}))) On Match Set `5esn` =01234567 Starts With $_usn4,#usn7 =\"d_str\" =~`6esn` =~0Xa,{usn2:_usn3 Contains @usn6 Contains 1.e1,usn2:$`6esn`[`1esn`..][.e0..]}.usn2? =9e12 Contains .e0 Contains .e0"),
    octest:ct_string("Delete 0.0[..12e12][..$0],1.e1[.e0..0] Union All Create usn2=(`4esn` {``:07,`3esn`:12e12[_usn3..][$@usn5..]})<-[`3esn`? *123456789..999]->(_usn4 :_usn4:usn1)-[@usn5? *..7{usn2:12e12[$`5esn`][07],usn2:$0[..`8esn`]}]-(_usn4 :#usn8);"),
    octest:ct_string("Delete 7[..`1esn`],`6esn` In 1000 In 01234567 With  *,$0[..`8esn`] As _usn4 Order By $`6esn` Is Not Null Is Not Null Desc Skip 0x0 Contains $`8esn` Contains `6esn` Limit 1e1[@usn5..] Where 1000 Contains 0.e0 Union Remove [@usn6 In @usn5 In $`6esn` Where 010 =~$usn2 =~1e1|00].`3esn`!,[@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 12e12[.12..]|$`6esn`[$`1esn`][1000]].`4esn`! Unwind Any(#usn8 In $`5esn` Is Null Is Null Where 0.12 Contains $`2esn` Contains $_usn4)[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..Extract(`4esn` In `6esn`[1e1..])] As `8esn` Union Create `8esn`=((_usn4 :@usn6:`7esn`)-[:usn2|#usn8*..]-(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12})) Merge usn2=((`5esn` :usn2:@usn6{`5esn`:0Xa In .e1 In Count(*)})) On Create Set `3esn`+=[_usn4[0xabc..]][..Extract(_usn4 In usn1 Contains False Contains `` Where 12[usn1][True])][..(_usn3 {`7esn`:usn1 Contains False Contains ``})<-[? *0..010]-(#usn8 :`4esn`:#usn8)]"),
    octest:ct_string("Match (#usn8 {`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]})<-[#usn7{#usn7:False[`2esn`..#usn8]}]->(`5esn` :`2esn`:`3esn`{_usn3:$`2esn`[$123456789..$`1esn`][0Xa..$``],`5esn`:12.e12[@usn5..123.654]})<-[? *0xabc{`7esn`:$`5esn` Contains $@usn6,#usn7:12.e12 Ends With 01 Ends With .e1}]->(`7esn` :usn1{`1esn`:00 Starts With _usn3}),`5esn`=((#usn8 :`4esn`:#usn8)<-[`6esn`?{`7esn`:@usn6 Contains _usn4 Contains $`4esn`}]-(usn1 :`4esn`:#usn8{usn2:$`8esn` In \"d_str\" In 9e12})<-[`6esn`?{`7esn`:.12 Ends With `1esn` Ends With $`1esn`,``:9e0 Starts With `6esn`}]-(_usn4 {#usn8:@usn5 In $`6esn`,`7esn`:010 =~`6esn`})) Union With Distinct 010 In @usn6 Order By (:`4esn`:#usn8{@usn6:0 Starts With 12e12 Starts With `4esn`})<-[`6esn`?{`7esn`:.12 Ends With `1esn` Ends With $`1esn`,``:9e0 Starts With `6esn`}]->(:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0}) Starts With Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`) Starts With [12.0 In 1000 In _usn4] Ascending Limit `7esn`[1e1..07][0x0..Count ( * )] Union All Delete 's_str' Ends With .e0 Remove Extract(@usn6 In @usn5 In $`6esn` Where .12[`1esn`..][$`3esn`..]|@usn6[..0xabc][..$#usn7])._usn3,Single(usn2 In 1000 Contains 0.e0 Where 0e0 Is Not Null Is Not Null).``!"),
    octest:ct_string("Unwind `8esn`[$``] As `3esn` Remove (:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[`2esn`]-(`6esn` :#usn7)-[_usn4?:`6esn`]-(@usn5 :`8esn`).`7esn`,`7esn`(usn2 Is Null Is Null,`6esn` =~$_usn3).`1esn`! Merge (((`1esn` :`8esn`)-[_usn4:`7esn`|`2esn`]-(`3esn` {`8esn`:$usn2[12..$`7esn`][$0..$`7esn`]})-[_usn4{@usn6:`1esn`[...e1],`5esn`:`5esn`[`1esn`]}]->(:usn2:@usn6{`6esn`:12[12e12..@usn6],#usn8:`6esn` =~$_usn3}))) On Create Set _usn4 =00 In 12.0 In 's_str',Any(usn2 In 1000 Contains 0.e0 Where _usn4[0xabc..]).``? =All(usn1 In 00 Starts With _usn3 Where 12e12[Null]) Ends With (:`7esn`)<-[@usn5:#usn7|:_usn4]->({usn1:usn1[$`3esn`..$999][True..False],`7esn`:_usn3 Ends With 12e12 Ends With .e0})<-[?:usn2|#usn8{#usn8:$@usn6 Is Null Is Null,_usn4:_usn4 Starts With $@usn6 Starts With #usn7}]-({_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"}) Ends With Extract(`6esn` In 0X7 =~`` Where $`6esn`[..0X0123456789ABCDEF]|usn2[$`1esn`...0]),#usn7+=9e0[False] On Match Set [$usn1 In 1000 In $#usn7,$#usn7 In 12.0 In 0X0123456789ABCDEF,9e0 Is Not Null]._usn3 =All(_usn4 In usn1 Contains False Contains `` Where #usn8[$#usn8..])[(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})..],Extract(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null).`1esn`! =0xabc Starts With _usn3 Union With Distinct $`4esn`[12.e12..][0.0..],12[`7esn`...0][0.12..``] As @usn6,{#usn8:$`5esn` In False,usn2:$`7esn` In $7}[..Any(@usn6 In @usn5 In $`6esn` Where 010 =~$usn2 =~1e1)] Skip $`1esn` Ends With $`1esn` Where `3esn` Contains 0Xa Create _usn3=(((#usn7 :#usn8{`2esn`:12 =~usn1 =~.e12})-[`8esn`?:#usn7|:_usn4{usn2:7[$`4esn`..123456789]}]->(#usn8 :usn2:@usn6{`5esn`:00 Ends With $_usn4 Ends With $`2esn`,usn2:#usn7 Starts With 0 Starts With 12})-[``? *12..0xabc]->({@usn6:9e0 Contains `8esn`}))) With Distinct *,$`7esn` Ends With $@usn5 As usn2,$@usn6 Starts With usn2 Starts With usn2 As #usn8 Skip 0.e0[..#usn8][..Null] Limit 00 Starts With _usn3 Where $@usn6 Contains 07 Contains 0.e0 Union All Merge ((`4esn` {`6esn`:$12[..``][..$7]})-[usn1?{usn2:7[$`4esn`..123456789]}]->(`3esn` )<-[`5esn`:`8esn`|:usn1{usn1:12e12[Count ( * )..][usn2..],usn2:$123456789 Is Null Is Null}]-(`8esn` )) On Match Set `6esn`+=7[$`4esn`..123456789],`1esn` =(:`1esn`{`6esn`:$0[..`8esn`],`1esn`:True Starts With $`8esn` Starts With \"d_str\"})<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[usn1?:`2esn`|usn2 *123456789..999]-(`3esn` :usn2:@usn6) Contains [usn2 In 1000 Contains 0.e0 Where #usn7 Ends With 9e1|010 Is Null Is Null] Contains Filter(@usn6 In @usn5 In $`6esn` Where 12[`7esn`...0][0.12..``]),{_usn3:'s_str' =~0.e0}.usn2? =Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) Ends With [`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $usn2[..12.0]|999[``..][Null..]] Ends With Any(`4esn` In `6esn`[1e1..] Where False[`2esn`..#usn8]) On Create Set ({@usn6:9e0 Contains `8esn`})-[usn2 *0X0123456789ABCDEF..{usn2:`` Starts With 12}]-(:#usn7{`6esn`:.e12 =~0.0 =~9e0,@usn6:$usn2 =~$_usn4 =~`5esn`})-[`7esn`:@usn5|`8esn`{usn1:9e12 Is Not Null Is Not Null}]->(usn2 :`6esn`:`7esn`{`6esn`:`` Contains 12 Contains True,usn2:$`2esn`[123456789..][00..]}).``! =Single(#usn7 In 01234567[$`3esn`..])[(`5esn` :`8esn`{`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null})<-[:@usn5|`8esn`*..]-(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})-[``?{usn2:@usn5 In 0X0123456789ABCDEF,usn2:9e1 Is Null Is Null}]->(`8esn` :_usn3{``:12.e12['s_str']})][[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 12 Ends With 01234567|Count(*) In 01 In .0]] Optional Match `1esn`=((:`8esn`)-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]-(:@usn5{_usn4:.12 Starts With 0Xa})<-[`4esn`{#usn8:Null[0e0][12],`2esn`:`8esn` In $@usn5}]-({_usn3:999 In $_usn4 In 0X7,`1esn`:1e1 In $#usn8 In 12e12})) Where $_usn3 =~`7esn` =~$_usn4;"),
    octest:ct_string("Remove Single(#usn8 In $`5esn` Is Null Is Null Where $123456789[0.0..]).#usn7?,Any(usn2 In 1000 Contains 0.e0 Where @usn6[`3esn`..][$7..]).@usn6! Remove Any(@usn5 In .12[#usn7][$`8esn`] Where 12[..9e0][..999]).`5esn`?,Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $123456789 Ends With .e1).`3esn`?,[010[$@usn6],9e0 Is Not Null].`2esn` Union Merge @usn5=(({`8esn`:$usn1[0.12..]['s_str'..],`8esn`:`1esn`[0e0..]})-[usn1{`7esn`:``[Count(*)..][@usn5..]}]->(`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`})<-[_usn3?:``|:_usn4 *0xabc{`6esn`:$#usn8 Ends With 1000 Ends With .0,`7esn`:010 =~`6esn`}]-(:usn1{#usn7:12[0X7..@usn6]})) On Create Set `6esn`+=Extract(`4esn` In $`8esn` Starts With 1000 Where False In `3esn`|$`3esn` =~Null),`8esn`+=12 Ends With .e12 Ends With $7,(:``{`1esn`:`6esn` =~$_usn3})-[`5esn`?:_usn4|:@usn5]-(usn2 :#usn8{_usn3:$_usn3[..Count ( * )][..@usn5]}).usn2 =usn1(Distinct) Ends With {`6esn`:$_usn4[`3esn`][0],_usn3:999 Contains Count ( * ) Contains 123.654} Ends With ({`7esn`:12e12 Ends With 010 Ends With .0})<-[?:`5esn`|`1esn`{_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12}]-({@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]}) On Match Set `7esn`+=9e0[``][123.654] Delete [True[..'s_str'][..01]] In Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 12.0[..$7][..999]) In All(`4esn` In `6esn`['s_str'..][010..] Where @usn6[$`7esn`]),$`3esn` Starts With $usn1"),
    octest:ct_string("Create `8esn`=(`4esn` {`3esn`:0X7[..12e12],`8esn`:False In 123456789 In $0})-[`4esn`?:`1esn`]->(:`2esn`:`3esn`{usn2:$`5esn` In False})<-[#usn7? *00..]->({`4esn`:$usn1[1e1.._usn3][$@usn6..$#usn7],`3esn`:9e0[``][123.654]}),`7esn`=((:`2esn`:`3esn`{usn2:9e12[@usn6..$``][#usn8..Count ( * )],`3esn`:$1000 In $`7esn` In $7})<-[`6esn`:_usn4|:@usn5 *..7{_usn4:0.0 =~0X7 =~#usn7}]->(`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})-[`8esn` *..0x0]-(:`2esn`:`3esn`{usn2:$`5esn` In False})) Return Distinct *,1.e1[Null][12.e12] As ``,Filter(@usn6 In @usn5 In $`6esn` Where .12[`1esn`..][$`3esn`..]) As _usn3 Order By 0.e0[`6esn`...e0][9e12...e12] Descending,_usn3 In .e1 In $12 Asc Skip [$`4esn`[9e1..][0..]][Any(`4esn` In $`8esn` Starts With 1000 Where 0.e0[9e1..][0.0..])..Single(#usn8 In $`5esn` Is Null Is Null Where 1000 Ends With 1000 Ends With $`4esn`)] Limit 123456789 =~_usn4 =~$0 Return Distinct $@usn5 =~$`` =~$usn2 As @usn6,usn1 Is Not Null Is Not Null,01 In 01 In 12 Order By Extract(usn2 In 1000 Contains 0.e0 Where 0X7 =~`4esn` =~`8esn`) Contains [0 Contains 12e12,0xabc Ends With $7 Ends With $`2esn`,0x0 =~_usn4] Ascending,07[1e1] Ascending Limit $`8esn` Starts With 1000 Union Detach Delete `2esn` In Count(*) In 9e0,$usn2[False..`7esn`][`7esn`.._usn3],999[``..][Null..] Create ((`4esn` :`7esn`{`7esn`:@usn6 Contains _usn4 Contains $`4esn`})),(`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})-[? *..0X7{`3esn`:`8esn`[$``]}]->({`2esn`:@usn5 In 0X0123456789ABCDEF,`1esn`:@usn6[`5esn`..$`3esn`]})-[?:usn1|`3esn`{#usn8:1000[..$`6esn`][..0xabc]}]->(usn1 :_usn3{@usn6:True[..'s_str'][..01]}) Remove ({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})-[`5esn`? *010]-({@usn6:0.12 In $`4esn` In `6esn`,``:1e1 Is Null}).`7esn`! Union Unwind None(usn1 In $123456789 Contains usn2 Where Count ( * )[..1e1])[`8esn`(00[``..][$`4esn`..],123.654[@usn5])] As _usn4 Merge (((`8esn` :@usn5)<-[@usn5:#usn7|:_usn4]->(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})<-[`4esn`:``|:_usn4{`5esn`:0e0 =~_usn4}]-(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`}))) On Match Set (`4esn` :`6esn`:`7esn`)-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`7esn` :_usn4:usn1)-[`1esn`{_usn4:`3esn` Contains 0Xa}]->(`5esn` {@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]}).#usn8 =False In 123456789 In $0,Filter(`4esn` In `6esn`['s_str'..][010..] Where @usn6[$`7esn`])._usn4! =9e1[010..]"),
    octest:ct_string("Delete $`4esn` Contains 0Xa,00 In 0.12 In `5esn` Union Optional Match ((:`1esn`{@usn6:$_usn4[$`4esn`..$#usn7][`6esn`..7],`8esn`:'s_str'['s_str'..$usn2][_usn3.._usn3]})-[usn1?:`2esn`|usn2 *123456789..999]-(`3esn` :usn2:@usn6)) Union With Distinct *,9e1['s_str'..1e1] As #usn7,01234567 As `6esn` Skip `2esn` In Count(*) In 9e0 Limit usn2 Is Not Null Where $12 Is Null Is Null With Distinct Null[0.e0..0x0] As `2esn`,$`1esn` Starts With $999 As #usn8 Where Count(*)[`7esn`..$12] Optional Match ``=(#usn8 :usn2:@usn6{`5esn`:00 Ends With $_usn4 Ends With $`2esn`,usn2:#usn7 Starts With 0 Starts With 12}) Where 123456789[$#usn7..]"),
    octest:ct_string("Match (`6esn` $`8esn`)<-[@usn6?:`6esn`*..]-(_usn3 :usn2:@usn6),(`3esn` :`8esn`)"),
    octest:ct_string("Detach Delete 999[$`8esn`],Single(#usn7 In 01234567[$`3esn`..])[(`5esn` :`8esn`{`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null})<-[:@usn5|`8esn`*..]-(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})-[``?{usn2:@usn5 In 0X0123456789ABCDEF,usn2:9e1 Is Null Is Null}]->(`8esn` :_usn3{``:12.e12['s_str']})][[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 12 Ends With 01234567|Count(*) In 01 In .0]],$#usn7 In .e1 In 01 Delete 01 In 01 In 12,`6esn`[0X7..][0x0..]"),
    octest:ct_string("With  *,All(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $123456789 Ends With $`6esn`) Is Null As `5esn` Skip 1e1[..False] Limit 12e12[$`5esn`][07] Optional Match @usn5=(`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})<-[`8esn`?:`5esn`|`1esn`]-(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]})<-[`3esn`?*..]->(`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]}) Union All Create ((`6esn` :_usn4:usn1{`6esn`:00 In 12.e12})<-[`7esn`?:`5esn`|`1esn`]->(`6esn` :@usn6:`7esn`{@usn5:True[0x0][@usn6],`5esn`:Null Starts With _usn4 Starts With `6esn`})),(usn1 :`3esn`:`1esn`)-[?:`4esn`|:`7esn` *..0x0]-(:@usn5{@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]}) Union Remove [@usn5 In .12[#usn7][$`8esn`] Where Count ( * )].`8esn`? With Distinct $12[`3esn`..0e0][`2esn`..$7] As #usn8,0.12 =~01 =~12 Order By $123456789 =~$#usn8 =~$#usn8 Ascending,0X7 In 123456789 In $`5esn` Ascending"),
    octest:ct_string("Merge ((:`1esn`{@usn6:$_usn4[$`4esn`..$#usn7][`6esn`..7],`8esn`:'s_str'['s_str'..$usn2][_usn3.._usn3]})-[usn1?:`2esn`|usn2 *123456789..999]-(`3esn` :usn2:@usn6)) On Create Set None(`4esn` In $`8esn` Starts With 1000 Where 1.e1[0X0123456789ABCDEF..][$`5esn`..]).`3esn` =Single(`4esn` In `6esn`['s_str'..][010..] Where Count(*)[..`3esn`]) In [$123456789 Contains usn2,010 Is Null Is Null,`7esn` Starts With $usn2 Starts With .e0] In `2esn`($`5esn` Is Not Null,7 In $`3esn` In #usn7),None(`4esn` In $`8esn` Starts With 1000 Where 0.12 Is Null Is Null).`2esn`! =[010 =~$usn2 =~1e1,`6esn` =~01234567 =~0Xa,07[1e1]][(:@usn6:`7esn`)<-[?:_usn3|:`4esn` *010{`8esn`:$``[_usn4..][`7esn`..]}]-(@usn6 {_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12})..][Extract(#usn8 In $`5esn` Is Null Is Null Where 1000[0.0][Null])..] On Match Set `7esn`+=`5esn`[`1esn`..`1esn`],{_usn4:usn2 Ends With $`5esn` Ends With `2esn`,#usn7:0.12 In $7 In 0}.@usn5! =_usn3 Contains @usn6 Contains 1.e1,`8esn`+=Filter(usn1 In $123456789 Contains usn2 Where usn2 Is Not Null) Ends With [usn1 In 00 Starts With _usn3 Where 010 =~$usn2 =~1e1] Ends With _usn3(Distinct $123456789 Ends With $`6esn`) Unwind Extract(`6esn` In 0X7 =~`` Where $_usn3[9e1][$_usn4]|@usn6[..0xabc][..$#usn7])[[@usn6 In @usn5 In $`6esn` Where $@usn5 In 12e12 In Count(*)|999[$`6esn`]]..Any(_usn4 In usn1 Contains False Contains `` Where 0X7 In 123.654 In $`2esn`)][{`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`],usn2:@usn6[`3esn`..][$7..]}..`7esn`($123456789 Ends With $`6esn`)] As _usn4 Union All Create (({_usn3:12.e12 In $0 In Count(*)})<-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(`2esn` :``)-[:_usn4|:@usn5 *0xabc]-({`6esn`:.e1 Starts With 0.0 Starts With `6esn`,_usn3:$@usn6 Contains 0 Contains $`2esn`})) Union Unwind 00 In 12.0 In 's_str' As `3esn`"),
    octest:ct_string("Return *,00[``..][$`4esn`..] As `6esn`,$`6esn`[$`1esn`][1000] Order By `1esn`[@usn6..$123456789] Asc,`1esn`[9e12..$`8esn`][usn2..$``] Ascending,`7esn`[..0X0123456789ABCDEF][..$0] Desc Skip $usn2[0e0..] Limit (:`1esn`{`6esn`:$0[..`8esn`],`1esn`:True Starts With $`8esn` Starts With \"d_str\"})<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[usn1?:`2esn`|usn2 *123456789..999]-(`3esn` :usn2:@usn6) Contains [usn2 In 1000 Contains 0.e0 Where #usn7 Ends With 9e1|010 Is Null Is Null] Contains Filter(@usn6 In @usn5 In $`6esn` Where 12[`7esn`...0][0.12..``])"),
    octest:ct_string("Return *,$@usn6[..12e12],`8esn` Ends With 0X0123456789ABCDEF Ends With `1esn` As usn2 Skip 1000[..$`6esn`][..0xabc] Limit $`8esn`[..$``]"),
    octest:ct_string("Optional Match `2esn`=(:`3esn`:`1esn`{usn1:`4esn` In $12 In `8esn`})-[?:usn1|`3esn` *999..{_usn4:$999[12.0..],usn1:0[usn2..]}]->(:usn2:@usn6{@usn5:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:.12 Ends With $`4esn` Ends With Count(*)}),(#usn7 :`6esn`:`7esn`)<-[`3esn`?:_usn3|:`4esn`]->(:`1esn`{_usn4:$_usn3[Null]})-[ *..0X7]->(`5esn` :_usn4:usn1) Where 0.0[999..] Merge `6esn`=(:@usn6:`7esn`{`2esn`:$`3esn` Contains 0X0123456789ABCDEF Contains 00,`5esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})-[:`6esn`{@usn6:$0 =~$0 =~.e0}]-(#usn8 :@usn6:`7esn`{@usn5:1e1[@usn5..]}) Merge ((usn2 {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})-[`1esn`{_usn4:`3esn` Contains 0Xa}]-(:usn2:@usn6{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8}))"),
    octest:ct_string("With Distinct 1000[123.654..9e12][1000.._usn3],count($_usn3 =~`7esn` =~$_usn4) Is Not Null Is Not Null,$123456789 =~$#usn8 =~$#usn8 Order By 0xabc[12.e12..`1esn`] Ascending Skip 9e1 =~.0 =~$`1esn` Limit None(`6esn` In 0X7 =~`` Where $usn2 Contains 12.e12 Contains 00)[[@usn6 Starts With `7esn` Starts With Null]][{`1esn`:07[`6esn`..][`5esn`..],usn1:$usn2[False..`7esn`][`7esn`.._usn3]}] Union Match #usn8=((`8esn` :`7esn`{`8esn`:False In 123456789 In $0})<-[`6esn`:_usn4|:@usn5 *..7{_usn4:0.0 =~0X7 =~#usn7}]->(@usn6 {_usn3:$_usn4[$`1esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})),`6esn`=(`6esn` :`5esn`) Where $`2esn`[..`2esn`] With Distinct 7 Contains 9e1 As `` Order By $`1esn` Starts With `8esn` Starts With $0 Descending,[1.e1 =~$_usn4,.12 Contains $`4esn` Contains $`6esn`] Ends With Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn8 In .e12 In 9e1) Desc,#usn8 Is Not Null Asc Skip 12.e12 Contains `5esn` Where 12e12[0.e0][9e1]"),
    octest:ct_string("With  ({`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`4esn` {@usn6:True[..'s_str'][..01]}) In Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where 07[12e12]) As `4esn`,{#usn7:0[0.12..]} Ends With Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]) Ends With {@usn5:\"d_str\" Is Null Is Null,@usn5:$_usn4[`3esn`][0]} As `8esn` Skip 010 Starts With `7esn` Starts With 9e1 Limit 0Xa Starts With $`4esn` Starts With 1e1 Optional Match (((`4esn` )<-[_usn3?:`3esn`|:`4esn` *0..010]->(_usn3 )<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3}))) With  Extract(#usn7 In 01234567[$`3esn`..] Where 0xabc[$@usn5])[All(`4esn` In 's_str'[12..'s_str'] Where $_usn4[12e12][`4esn`])][(`6esn` :`5esn`)<-[:``|:_usn4 *0Xa]->(`7esn` :`2esn`:`3esn`)] As @usn5,12 Is Null Is Null As #usn7 Limit 0.12 Starts With {`1esn`:@usn6[..0xabc][..$#usn7]} Starts With {`3esn`:`8esn`[1000..$7][$`7esn`..`2esn`],_usn4:\"d_str\" Is Null Is Null} Union All Unwind 123.654[`5esn`] As @usn5 Create usn2=(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})-[?:#usn7|:_usn4]->(`` :#usn7$0)-[`2esn` *0X0123456789ABCDEF..{usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3}]->(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]}),(`8esn` {`3esn`:12e12 Is Not Null})-[_usn4?:_usn4|:@usn5 *123456789..999{`2esn`:@usn5 In $`6esn`}]->(`1esn` {`4esn`:$`7esn`[$usn1..][0.0..],`1esn`:$123456789[..0x0][..`4esn`]})-[`1esn`:`1esn`{``:_usn3[...e1],`2esn`:.12[`1esn`..][$`3esn`..]}]-(`7esn` :_usn4:usn1) Union All Unwind 0Xa[#usn7] As usn1 Remove `3esn`:``,({_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`})-[`2esn`? *0..010]->(usn2 {usn1:0 Is Null Is Null,`8esn`:12.0[..$7][..999]})<-[#usn8:`3esn`|:`4esn` *0..010]->(`3esn` :usn2:@usn6).`4esn`! Merge `3esn`=(:`7esn`) On Match Set _usn4:_usn3,[0xabc Contains $1000].`6esn` =(#usn8 :`5esn`{usn2:.e1 Starts With 0.0 Starts With `6esn`,#usn8:9e12 =~01 =~$`7esn`})<-[`7esn`?:`5esn`|`1esn` *0xabc]->(#usn7 {`6esn`:123456789 Is Null,`1esn`:00 In 12.e12})[Filter(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 0.12 Ends With $usn1 Ends With $@usn5)][`3esn`(Distinct 9e12[_usn3])],{@usn6:0.12[0.e0..][`4esn`..]}.`4esn` =0x0 Contains $`8esn` Contains `6esn`"),
    octest:ct_string("Delete `4esn`(_usn4[$`4esn`..],0x0[...e12][..@usn5])[..{`3esn`:`8esn`[1000..$7][$`7esn`..`2esn`],_usn4:\"d_str\" Is Null Is Null}] Merge `3esn`=((#usn8 {`2esn`:$`5esn` Contains Count(*) Contains #usn7,_usn4:Null Starts With $`7esn` Starts With `2esn`})<-[`6esn`:`4esn`|:`7esn` *..0x0]->(#usn8 :@usn5)-[`6esn`:``|:_usn4 *..01]->(`5esn` :#usn7)) On Create Set `8esn` =Filter(@usn5 In $#usn8 Is Null Is Null Where 9e1 Contains $`3esn` Contains 01234567) =~['s_str'[..0.e0][..`1esn`],`5esn`[.e1][0Xa],123456789 In $usn2 In `6esn`],`8esn`+=Filter(`6esn` In 0X7 =~`` Where $usn2[0e0..])[usn2($#usn8 Is Null Is Null)..Extract(usn1 In 0x0[..`4esn`] Where 123456789 In $usn2 In `6esn`|@usn5[..True][..0X7])][(`` :@usn5{#usn7:0X7[12]})-[@usn6? *07..{_usn4:Count(*)[..`3esn`],`5esn`:01234567[$`3esn`..]}]-(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null})<-[`5esn`:`8esn`|:usn1{usn1:12e12[Count ( * )..][usn2..],usn2:$123456789 Is Null Is Null}]-(`8esn` )..[@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null]] On Create Set `3esn`(Distinct).`` =$`1esn` Is Null Is Null,`3esn` =[$`4esn`[9e1..][0..]][Any(`4esn` In $`8esn` Starts With 1000 Where 0.e0[9e1..][0.0..])..Single(#usn8 In $`5esn` Is Null Is Null Where 1000 Ends With 1000 Ends With $`4esn`)],usn2+={usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null} Is Not Null Is Not Null Unwind $`1esn` =~$`1esn` =~#usn7 As `4esn` Union Match #usn7=((`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`3esn`?:_usn3|:`4esn`]-(`4esn` {`6esn`:$12[..``][..$7]})),@usn5=(((_usn3 :_usn3{_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})-[#usn8:`3esn`|:`4esn` *0..010]-(:usn1{_usn3:'s_str'[..0.0][..$`4esn`],`4esn`:$123456789 Is Not Null Is Not Null})-[usn1? *07..{`5esn`:#usn7 Is Not Null Is Not Null}]-(`2esn` :usn1{`8esn`:$``[_usn4..][`7esn`..]}))) Unwind Any(@usn6 In @usn5 In $`6esn` Where 9e0[$_usn3..0X7][7..$#usn8]) Contains None(usn1 In 00 Starts With _usn3 Where 01234567 Ends With 12.0 Ends With 0X7) Contains Single(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn8 In .e12 In 9e1) As `4esn` Union All Remove Single(usn1 In $123456789 Contains usn2 Where 9e12[0.0..12.e12]).`4esn`!,(_usn4 )<-[#usn7? *00..]->(`4esn` :`1esn`{`8esn`:12 Ends With .e12 Ends With $7,`8esn`:0.0[12...12]})-[@usn5?:`3esn`|:`4esn`{`7esn`:Count(*) In 01 In .0,`6esn`:$123456789[..0.12][..#usn7]}]->(`5esn` :`8esn`).``! With  *,Single(#usn7 In 01234567[$`3esn`..]) Is Null As `3esn`,07[$999] As `` Where 9e0[$_usn3..0X7][7..$#usn8] Remove (:``{#usn8:$`2esn`[..`2esn`]})-[@usn5?:@usn6$_usn3]->(:_usn4:usn1{`1esn`:123456789 Starts With `2esn` Starts With .0,@usn6:12.e12 Contains `5esn`})-[*{`2esn`:$1000[01234567]}]-(_usn4 :`4esn`:#usn8{#usn7:1e1[@usn5..]}).`5esn`,(@usn5 :`2esn`:`3esn`{`1esn`:$`8esn`[..$usn1][..'s_str']})<-[usn2:@usn6{`7esn`:123456789[`4esn`..][Count ( * )..],`4esn`:010[$`8esn`..][0..]}]-(_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8}).`4esn`"),
    octest:ct_string("With Distinct 1000[123.654..9e12][1000.._usn3],count($_usn3 =~`7esn` =~$_usn4) Is Not Null Is Not Null,$123456789 =~$#usn8 =~$#usn8 Order By $usn2 Is Not Null Is Not Null Ascending,Count ( * )[(`7esn` {usn1:$1000 Contains $`3esn`})-[`5esn`?:_usn4|:@usn5]-(`3esn` {`8esn`:$``[_usn4..][`7esn`..]})-[@usn5:`4esn`|:`7esn` *0X0123456789ABCDEF..{`7esn`:.e0[..999][..0X7]}]-(usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1})..Single(usn1 In 0x0[..`4esn`] Where $999[12.0..])][(:`6esn`:`7esn`{@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]})-[?{`2esn`:$`6esn`[$@usn6..]}]-(`4esn` :`6esn`:`7esn`)<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})..Single(`6esn` In 0X7 =~`` Where $usn1[0.12..]['s_str'..])] Ascending Remove (:_usn4:usn1{``:123456789 Starts With `2esn` Starts With .0,`5esn`:``})-[:`7esn`|`2esn` *..0X7{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]-(`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})<-[usn2?:usn1|`3esn`{`7esn`:0xabc Ends With $#usn7 Ends With #usn8,@usn5:$#usn8}]->(`3esn` :#usn8).usn2 Unwind Any(`6esn` In 0X7 =~`` Where 0X7[..12e12]) As usn2 Union All Create `7esn`=(`` :@usn6:`7esn`{`4esn`:0X0123456789ABCDEF Is Not Null}),(((`` :@usn6:`7esn`{`2esn`:0.12[0.e0..][`4esn`..]})<-[`3esn`?:_usn3|:`4esn`]-(_usn3 :`1esn`)<-[_usn3{_usn3:12.e12 In $0 In Count(*)}]-(`7esn` :@usn5))) Unwind 00[.e1..] As `6esn` Union All Create ((`` :`1esn`)-[`1esn`:usn2|#usn8 *1000..]-(`6esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})<-[`4esn`]->({`8esn`:0X7 In 's_str' In $`1esn`})),`4esn`=(((:@usn6:`7esn`{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})<-[ *010$123456789]-(`2esn` {usn1:@usn6[$`7esn`],_usn3:$@usn6[..12e12]})<-[? *..0x0]->(`` :usn1)))"),
    octest:ct_string("Unwind 01234567 Ends With 12.0 Ends With 0X7 As _usn3 Union All Unwind 12.e12[$1000..] As `4esn`"),
    octest:ct_string("Match usn2=(((`1esn` :``{`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]})<-[?:`5esn`|`1esn` *999..]->(:``)<-[@usn6? *1000..{#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1}]-(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`}))),`2esn`=(({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})-[?:`2esn`|usn2{@usn6:0.12[0.e0..][`4esn`..]}]->(:_usn4:usn1)) Where `4esn` =~123456789 Union All Create _usn4=(((#usn7 :#usn8{`2esn`:12 =~usn1 =~.e12})-[`8esn`?:#usn7|:_usn4{usn2:7[$`4esn`..123456789]}]->(#usn8 :usn2:@usn6{`5esn`:00 Ends With $_usn4 Ends With $`2esn`,usn2:#usn7 Starts With 0 Starts With 12})-[``? *12..0xabc]->({@usn6:9e0 Contains `8esn`}))),@usn6=((`2esn` :`8esn`{`2esn`:$`8esn` In \"d_str\" In 9e12})-[`5esn`:`8esn`|:usn1{usn1:12e12[Count ( * )..][usn2..],usn2:$123456789 Is Null Is Null}]->(@usn5 :#usn8{@usn5:$@usn5 Contains 01,`2esn`:@usn6[`3esn`..][$7..]})) Remove {@usn6:123456789 =~$123456789,`4esn`:usn1 Contains False Contains ``}.`3esn`! Optional Match `6esn`=(`7esn` :`2esn`:`3esn`{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}),@usn5=(`3esn` :`8esn`{usn1:`2esn`[$`3esn`..],`6esn`:$12[..``][..$7]})-[@usn5?:``|:_usn4]-(`8esn` :#usn8)<-[?:``|:_usn4]-({`5esn`:00 Ends With $_usn4 Ends With $`2esn`,usn2:#usn7 Starts With 0 Starts With 12}) Where $@usn6 Contains 07 Contains 0.e0 Union All With  123.654 Is Not Null Is Not Null As `3esn`,$usn1 In 1000 In $#usn7 As `8esn` Order By .12 Starts With $usn2 Asc,[usn1 In 00 Starts With _usn3 Where False[.e1..Null]|1000[0.0][Null]][Filter(usn2 In 1000 Contains 0.e0 Where $`7esn` Ends With $`2esn` Ends With $usn1)..][Single(usn2 In 1000 Contains 0.e0 Where 0e0 Is Not Null Is Not Null)..] Asc,{`8esn`:$123456789 Is Null Is Null,_usn3:$`4esn` Starts With 1e1}[(#usn7 :`2esn`:`3esn`)<-[`8esn`?]->(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})..All(_usn4 In usn1 Contains False Contains `` Where $`8esn`[$``..$7][$1000..$`7esn`])] Descending Skip $@usn5[$#usn8..][9e1..] Limit $123456789[0X7..12.e12] Where 0.12[0.e0..][`4esn`..];"),
    octest:ct_string("Unwind 010 =~$usn2 =~1e1 As `1esn` Merge (({`2esn`:.e0 =~`5esn`})-[`8esn`?:`6esn`{#usn7:True =~@usn5 =~$`1esn`,@usn6:False[.e1..Null]}]->(:``{`2esn`:$7,usn1:.12 Contains $`4esn` Contains $`6esn`})-[`4esn`?:`8esn`|:usn1 *..0x0]->(:@usn6:`7esn`{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})) Return *,[#usn8 In $`5esn` Is Null Is Null Where 0.e0 Ends With 12 Ends With $7][..{@usn5:12 =~usn1 =~.e12,`2esn`:0X7 =~`4esn` =~`8esn`}] As #usn7,@usn6 Starts With `7esn` Starts With Null Skip Count ( * )[..usn1][..12.e12] Limit (`7esn` :@usn6:`7esn`)<-[:``|:_usn4{`8esn`:0 Ends With $7 Ends With _usn3}]-(usn1 {#usn7:Count ( * )[@usn6..0x0]})<-[`8esn`]->(#usn8 ) Contains usn2(Distinct $1000[01234567],00 In 0.12 In `5esn`) Contains Any(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where usn2[$`1esn`...0])"),
    octest:ct_string("Delete Any(usn1 In 00 Starts With _usn3 Where `2esn` Is Not Null Is Not Null) Starts With All(`4esn` In $`8esn` Starts With 1000 Where 1.e1[0X0123456789ABCDEF..][$`5esn`..]) Starts With {`4esn`:$usn2 Contains 12.e12 Contains 00,`5esn`:7[$`4esn`..123456789]},0.12 Is Null Is Null Merge ((#usn8 :@usn6:`7esn`{@usn5:1e1[@usn5..]})) On Create Set usn1+=Single(`6esn` In 0X7 =~`` Where 12.0[..$7][..999]) Starts With {_usn3:0.12 Is Null Is Null,`1esn`:9e12[0.0..12.e12]} Starts With (`8esn` :@usn5)-[`6esn`?:_usn3|:`4esn` *12..0xabc]-(usn2 :#usn8{`3esn`:123.654[@usn5]})<-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(#usn8 :`5esn`{usn2:.e1 Starts With 0.0 Starts With `6esn`,#usn8:9e12 =~01 =~$`7esn`}) Merge `4esn`=({`8esn`:0X7 In 's_str' In $`1esn`}) On Match Set usn2+=.e1 Ends With _usn4 Ends With @usn5,@usn5+=_usn3 In .e1 In $12,Extract(`4esn` In `6esn`[1e1..] Where $`7esn` Ends With `1esn` Ends With True).`` =010 In @usn6 On Match Set usn1 =Count ( * ) =~All(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7) Union All With  *,usn2 =~0x0,07 In `5esn` In 12e12 Skip `` Is Not Null Is Not Null Where usn1 Contains $`` Remove None(#usn7 In 01234567[$`3esn`..] Where 12[usn1][True]).#usn7?,[@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $`4esn`[..usn1]].@usn5?,[00[01234567][False]].`1esn`? Union Match ({`5esn`:123456789 Starts With `2esn` Starts With .0})-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]-(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa})<-[`` *12..0xabc]->(`3esn` :_usn4:usn1) Return $`4esn` Contains 0Xa,010 In `7esn` Order By 0x0 In `8esn` In 999 Descending Detach Delete 0X0123456789ABCDEF Contains 12.e12 Contains 999,0X0123456789ABCDEF In $1000 In $`3esn`,'s_str' Is Not Null Is Not Null"),
    octest:ct_string("Merge (((`` :@usn5{`5esn`:0X7 =~.0 =~\"d_str\"})<-[? *..01{`1esn`:`4esn` In $12 In `8esn`}]->(#usn7 {@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]})-[`6esn`? *..7{`3esn`:123456789[$#usn7..]}]-(`3esn` {_usn3:@usn6 Contains _usn4 Contains $`4esn`}))) On Create Set _usn3 =$`5esn`[False],[07[$999],@usn6[$`7esn`]].@usn6 =010 Starts With `7esn` Starts With 9e1,`4esn` =usn2[..$`3esn`] On Create Set usn2 =_usn3 Is Not Null Is Not Null,`4esn` =.e1 Starts With $`8esn` Match `1esn`=(((usn1 :`4esn`:#usn8)-[`4esn`?:`8esn`|:usn1 *..0x0]->(:@usn6:`7esn`{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})<-[?:`4esn`|:`7esn` *..0X7]-(:`3esn`:`1esn`{`1esn`:0.0[1000..][.e1..]}))),((#usn7 :#usn8{`2esn`:12 =~usn1 =~.e12})-[@usn5?:`3esn`|:`4esn`{`7esn`:Count(*) In 01 In .0,`6esn`:$123456789[..0.12][..#usn7]}]->(`5esn` :`8esn`)<-[`6esn`?:_usn3|:`4esn` *12..0xabc]-(`1esn` :usn1$@usn6)) Where #usn8 Contains .e0 Contains $`8esn` Unwind 07[1e1] As `1esn` Union All Return *,$`5esn` Ends With .e12,[`2esn` In `7esn` Starts With $`` Starts With $#usn7][{#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1}..] As @usn6 Order By $`7esn` Ends With $@usn5 Descending,0xabc[12.e12..`1esn`] Ascending Skip All(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where `7esn`[...e1][..\"d_str\"]) Contains (`2esn` {`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null})<-[ *..0x0{`8esn`:010[@usn5..],#usn8:False Is Not Null Is Not Null}]-(`5esn` {`8esn`:0.0[12...12]})-[@usn6?:#usn7|:_usn4 *00..]->(:`6esn`:`7esn`{@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]}) Contains Any(usn1 In 00 Starts With _usn3 Where `8esn`[1000..$7][$`7esn`..`2esn`]) Limit 0X0123456789ABCDEF Ends With 0X0123456789ABCDEF Ends With 's_str' With  {_usn4:00}[#usn7(00 In 12.e12)][[.12 Ends With `1esn` Ends With $`1esn`,$`5esn`[False]]] As `1esn` Order By 0 Is Not Null Descending Skip 0x0 Where 123456789 Starts With #usn7 Starts With `6esn` Union Create (({`5esn`:_usn3 Contains @usn6 Contains 1.e1,`7esn`:$12[01..][1.e1..]})-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})<-[usn1?{#usn7:9e12 Is Not Null Is Not Null,usn2:`3esn` =~0.0 =~$``}]->(`5esn` :`3esn`:`1esn`{`6esn`:$1000[.e0..]})),_usn4=(@usn5 {`1esn`:0[usn2..]})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`5esn` {_usn4:0X7 =~``})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(:`6esn`:`7esn`{`3esn`:`8esn`[$``]}) Return `8esn`[_usn3..$#usn7],({`1esn`:@usn6})<-[_usn4?:_usn4|:@usn5 *123456789..999{`2esn`:@usn5 In $`6esn`}]->(:`3esn`:`1esn`{`1esn`:0.0[1000..][.e1..]}) Is Null Is Null As `3esn` Skip `7esn` Starts With $usn2 Starts With .e0 Limit 00 Is Not Null Is Not Null;"),
    octest:ct_string("Unwind .e0[7..$`3esn`] As usn2 Optional Match #usn7=((`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`3esn`?:_usn3|:`4esn`]-(`4esn` {`6esn`:$12[..``][..$7]})),`4esn`=(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})-[?:#usn7|:_usn4]->(`` :#usn7$0)-[`2esn` *0X0123456789ABCDEF..{usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3}]->(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]}) Where .e0 =~`5esn` Detach Delete $usn1[0.12..]['s_str'..],usn2 Starts With `6esn` Starts With 12e12,True[Count(*)..][1e1..];"),
    octest:ct_string("Merge (({`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})<-[`6esn`?:_usn3|:`4esn` *12..0xabc]-(`1esn` :usn1$@usn6)<-[#usn8?:`3esn`|:`4esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]-({_usn3:$`1esn` Starts With @usn6})) Optional Match usn2=(((#usn8 :@usn6:`7esn`)<-[:@usn5|`8esn`*..]-(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})-[_usn3? *00..]-(`1esn` :`1esn`))) Where $0[7..][Null..] Optional Match _usn4=(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa}) Union Detach Delete None(`4esn` In `6esn`[1e1..] Where $`2esn`[..`2esn`])[Extract(@usn5 In .12[#usn7][$`8esn`] Where #usn8 Contains .e0 Contains $`8esn`|.e0[..999][..0X7])..@usn5(Distinct `` Starts With 12,.12 Starts With 0Xa)],$`6esn` Ends With True Ends With True Match `3esn`=(:`3esn`:`1esn`{usn1:`4esn` In $12 In `8esn`})-[?:usn1|`3esn` *999..{_usn4:$999[12.0..],usn1:0[usn2..]}]->(:usn2:@usn6{@usn5:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:.12 Ends With $`4esn` Ends With Count(*)}),``=(((:`6esn`:`7esn`{usn2:_usn3 Contains @usn6 Contains 1.e1,usn2:$`6esn`[`1esn`..][.e0..]})<-[? *..0x0]->(@usn5 {@usn6:0.0[999..],#usn8:Null Is Null Is Null})-[? *..0X7{`3esn`:`8esn`[$``]}]->({`2esn`:@usn5 In 0X0123456789ABCDEF,`1esn`:@usn6[`5esn`..$`3esn`]}))) Create `1esn`=(:_usn4:usn1)-[#usn7?:_usn4|:@usn5{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]->(:`2esn`:`3esn`)<-[``]-(usn1 {#usn7:.e12[..0.e0][..$`1esn`],usn1:010 Contains Count(*)}),`6esn`=(`8esn` )-[ *0..010{#usn7:$@usn6 Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)}) Union All With Distinct *,9e1['s_str'..1e1] As #usn7,01234567 As `6esn` Skip `2esn` In Count(*) In 9e0 Limit usn2 Is Not Null Delete 's_str'[12..'s_str'],.e12[usn2][01],[@usn6 In @usn5 In $`6esn` Where $usn2 Is Not Null|$`6esn`[..0X0123456789ABCDEF]][`5esn`(Distinct 0X7 In $@usn5 In 9e0,0x0)..] Remove Single(`4esn` In $`8esn` Starts With 1000 Where `6esn`['s_str'..][010..]).@usn5,(usn2 :`3esn`:`1esn`)-[ *..7]-(usn1 :`4esn`:#usn8)-[?:`3esn`|:`4esn`]-(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]}).`3esn`,(:`1esn`{_usn4:$_usn3[Null]})-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]-(`2esn` :#usn7)-[:usn2|#usn8 *01234567..12]-(_usn4 {_usn3:$`1esn` Is Null,usn1:$`4esn`[$`2esn`..]})._usn3"),
    octest:ct_string("Unwind 0X7[..12e12] As `6esn` Create ((:`8esn`{`7esn`:@usn6 Contains _usn4 Contains $`4esn`})<-[`2esn`:@usn5|`8esn`]->(`2esn` :`5esn`{`4esn`:$usn1[_usn4..][usn2..],`3esn`:999 In $_usn4 In 0X7}))"),
    octest:ct_string("Create ``=(((`5esn` :`6esn`:`7esn`{`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->(`2esn` :usn2:@usn6)-[?:@usn6 *00..{@usn5:$`5esn`[False],`4esn`:usn1[..$_usn4][..``]}]->(:``{`1esn`:`6esn` =~$_usn3})))"),
    octest:ct_string("Remove Extract(@usn6 In @usn5 In $`6esn` Where 07[$`5esn`..]['s_str'..]|$123456789 Contains 01 Contains 0.12).#usn7 Remove Single(`4esn` In $`8esn` Starts With 1000 Where $`8esn`[..$``]).`4esn`!,count(Distinct $#usn8,False Is Not Null Is Not Null)._usn3?,Any(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where `7esn` Starts With $`` Starts With $#usn7).`3esn`?"),
    octest:ct_string("Return *,$`3esn` =~Null As usn2 Skip Filter(usn1 In $123456789 Contains usn2 Where usn2 Is Not Null) Ends With [usn1 In 00 Starts With _usn3 Where 010 =~$usn2 =~1e1] Ends With _usn3(Distinct $123456789 Ends With $`6esn`) Limit `3esn`(Distinct _usn4 Ends With 01 Ends With $`1esn`) Starts With [Count(*) In 01 In .0,`` Starts With 12,$_usn4[$`8esn`..][07..]] Starts With Extract(@usn5 In $#usn8 Is Null Is Null Where 12.e12 In $0 In Count(*)) Optional Match ((_usn4 {`8esn`:9e1 In 01 In 999})),`1esn`=(:_usn4:usn1)-[#usn7?:_usn4|:@usn5{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]->(:`2esn`:`3esn`)<-[``]-(usn1 {#usn7:.e12[..0.e0][..$`1esn`],usn1:010 Contains Count(*)}) Where @usn5 Contains $`1esn` Contains 999 Union Optional Match _usn3=(($999)),``=(({`8esn`:0X7 In 's_str' In $`1esn`})<-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]->(`1esn` :`1esn`)) Where 9e0[True..`1esn`]"),
    octest:ct_string("Create ``=(({`8esn`:0X7 In 's_str' In $`1esn`})<-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]->(`1esn` :`1esn`)),`2esn`=(((`2esn` :`7esn`)<-[? *..7]->({`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null})<-[:`6esn`]->(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}))) Create `4esn`=((:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12})-[#usn8? *0xabc{`5esn`:0X7[12]}]->(usn1 {`2esn`:True =~@usn5 =~$`1esn`,`2esn`:`6esn`[1.e1..$#usn7][.e0..True]})),((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})) Return Distinct *,12 Is Null Is Null As #usn7,$1000 Is Not Null Is Not Null Skip (`3esn` :usn2:@usn6{`4esn`:`7esn` Contains .0 Contains 9e12})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:@usn5{#usn7:1e1[@usn5..]})-[`5esn`? *00..{usn1:07[`6esn`..][`5esn`..],`2esn`:#usn7 Contains .0 Contains .e1}]->(`5esn` :usn2:@usn6)[Filter(@usn6 In @usn5 In $`6esn` Where $999[$1000])..][#usn7($`8esn`[``..][123.654..],12.e12 Contains `5esn`)..] Union All Return `7esn`($123456789 Ends With $`6esn`) Starts With {`7esn`:$12[01..][1.e1..],_usn3:$_usn3 =~`7esn` =~$_usn4} As usn1 Order By #usn7 Contains 07 Descending,Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $usn2[..12.0]) In Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where Count(*)[True]) In Extract(`4esn` In 's_str'[12..'s_str'] Where 0xabc Ends With $#usn7 Ends With #usn8|.e1 Starts With 0.0 Starts With `6esn`) Asc,[$12 Is Null Is Null,999 Contains Count ( * ) Contains 123.654][Extract(usn2 In 1000 Contains 0.e0 Where 9e12 =~01 =~$`7esn`)..Any(`4esn` In $`8esn` Starts With 1000 Where 01 Ends With .e0)][[Null Contains _usn4,$`7esn` Is Null Is Null]..({_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[? *..0x0]->(:usn2:@usn6{`6esn`:12[12e12..@usn6],#usn8:`6esn` =~$_usn3})] Desc With  *,$`1esn` Ends With _usn4 Ends With `3esn` As `7esn`,({usn1:`4esn` In $12 In `8esn`})-[`4esn`]-(`1esn` {usn1:True[Count(*)..][1e1..],usn1:9e1 Is Null Is Null})<-[?{`5esn`:0x0 Contains $`8esn` Contains `6esn`,#usn8:010 =~$usn2 =~1e1}]->({`6esn`:$`5esn` Is Null,`2esn`:`7esn` Starts With $usn2 Starts With .e0})[[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 0e0 =~_usn4|0x0 Contains _usn4 Contains 123456789]..[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 7 In $`3esn` In #usn7]][usn1($`1esn` Is Null Is Null,$0[0X0123456789ABCDEF..$#usn7])..[usn1 In 00 Starts With _usn3 Where .12[9e0][$7]|07]] As @usn6 Order By $999 Ends With $`3esn` Ends With `8esn` Asc Skip $0[..07] Where $@usn5 In 12e12 In Count(*)"),
    octest:ct_string("Return $`5esn` Starts With _usn3 Starts With @usn5,9e0 Is Null Is Null,$999[..`1esn`] As `8esn` Order By usn2[$`1esn`...0] Descending,None(`6esn` In 0X7 =~`` Where $usn2 Contains 12.e12 Contains 00)[[@usn6 Starts With `7esn` Starts With Null]][{`1esn`:07[`6esn`..][`5esn`..],usn1:$usn2[False..`7esn`][`7esn`.._usn3]}] Ascending,01234567 Ends With 12.0 Ends With 0X7 Ascending Remove (:`7esn`)<-[? *1000..{_usn4:$`6esn`[$`1esn`][1000],`2esn`:12e12[$`5esn`][07]}]->(:``{`2esn`:9e0[``][123.654],`1esn`:$_usn3[Null]})<-[@usn5? *1000..]->(:@usn6:`7esn`{_usn3:False[`2esn`..#usn8]})._usn4!,(#usn7 {@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]})-[`2esn` *..7]-(_usn3 {usn1:_usn3 Contains @usn6 Contains 1.e1}).`1esn`?,($1000)<-[`4esn`:#usn8]-(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa}).@usn5? Unwind All(`4esn` In `6esn`['s_str'..][010..] Where 9e0 =~$`5esn`)[..(`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`})<-[`` *0xabc]->(`7esn` :#usn7{`6esn`:$`3esn` Contains 0X0123456789ABCDEF Contains 00,`1esn`:1000[123.654..9e12][1000.._usn3]})][..{`3esn`:$1000[.e0..]}] As `2esn`"),
    octest:ct_string("Remove Extract(usn2 In 1000 Contains 0.e0 Where 9e12 =~01 =~$`7esn`).#usn7!,`7esn`(Distinct $usn2 =~$_usn4 =~`5esn`).#usn7?,(`1esn` :usn2:@usn6)<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3}).usn1? Union Create (({`3esn`:$`3esn` =~$`7esn` =~False,`4esn`:12 Ends With 01234567})<-[@usn5?:``|:_usn4]-(_usn3 :`4esn`:#usn8)) Merge usn1=((`3esn` :``)<-[`4esn`]->(`7esn` :#usn8)<-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(_usn4 )) On Match Set (`3esn` :usn2:@usn6)<-[`7esn`?:@usn5|`8esn`]-(`1esn` :``).#usn7! =Count ( * )[`3esn`..][`2esn`..],[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where .e0 In $@usn5 In $0|0.12 Contains .e1].`3esn` =`1esn`[0e0..],_usn3+=(:_usn4:usn1{#usn7:$`5esn` Is Null Is Null,usn2:usn1[$`3esn`..$999][True..False]})-[`1esn`:`5esn`|`1esn` *..7{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]}]->(usn2 :@usn6:`7esn`)-[#usn7?:@usn6 *00..]->(#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})[[#usn7 In 01234567[$`3esn`..] Where usn1 Contains False Contains ``]..] On Match Set usn1 =$`6esn`[..0X0123456789ABCDEF],Filter(@usn6 In @usn5 In $`6esn` Where 12[`7esn`...0][0.12..``]).@usn6 =$123456789 Contains usn2,`` =#usn8[$_usn3..7][``..$`5esn`] Merge _usn4=((_usn4 :`3esn`:`1esn`{`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]})) Union Merge (({usn2:00,#usn8:usn2 Ends With $`5esn` Ends With `2esn`})<-[_usn3?:`2esn`|usn2{`3esn`:0[0.12..]}]->(:``{`1esn`:`6esn` =~$_usn3})) On Match Set #usn7 =`5esn` In $999,@usn6+=`2esn`[$`3esn`..],Any(`6esn` In 0X7 =~`` Where 12.e12['s_str']).`5esn` =usn1[..@usn5][...e0] On Match Set `3esn` =$_usn4[0.12..$`6esn`][00..$@usn6] Create ((_usn4 :`2esn`:`3esn`{#usn8:123456789[$#usn7..],#usn7:07[12e12]})) Unwind 0X0123456789ABCDEF Contains 12.e12 Contains 999 As _usn4"),
    octest:ct_string("Return Distinct Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where usn1 Starts With $#usn7 Starts With `5esn`) Contains @usn5(Distinct 123456789 Starts With `2esn` Starts With .0,123456789 Starts With #usn7 Starts With `6esn`) Contains None(#usn8 In $`5esn` Is Null Is Null Where $#usn8 In .e12 In 9e1),9e1[010..] As `6esn` Order By $1000 Contains $`3esn` Desc,(`7esn` :@usn6:`7esn`)<-[:``|:_usn4{`8esn`:0 Ends With $7 Ends With _usn3}]-(usn1 {#usn7:Count ( * )[@usn6..0x0]})<-[`8esn`]->(#usn8 ) Contains usn2(Distinct $1000[01234567],00 In 0.12 In `5esn`) Contains Any(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where usn2[$`1esn`...0]) Ascending,[$`3esn` Starts With 01234567 Starts With $1000] Starts With `4esn` Starts With [$`2esn`[..7][..$usn1]] Desc Skip $`7esn` =~.e1 Create (_usn4 :@usn6:`7esn`)<-[#usn8?:_usn4|:@usn5 *..0x0]-(`6esn` :#usn7{`5esn`:#usn7 Is Not Null Is Not Null})-[#usn8? *12..0xabc]-(#usn8 :`4esn`:#usn8{#usn7:$`8esn` Starts With 1000}) Return Distinct *,None(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0.12 In $`4esn` In `6esn`) Is Null As @usn6,123456789 =~_usn4 =~$0 As usn1 Union With Distinct `` Is Not Null Is Not Null As @usn6,`5esn`[`1esn`..`1esn`],[$`8esn` In \"d_str\" In 9e12,9e0 Contains `8esn`,$@usn6 Contains 0 Contains $`2esn`][Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 01 In _usn3 In 12)][Extract(#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|`7esn` Starts With $usn2 Starts With .e0)] As _usn4 Order By Count(*) Is Null Descending,[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 12 Ends With 01234567|Count(*) In 01 In .0] Ends With [`4esn` In 's_str'[12..'s_str'] Where 0.12 In 01 In $`3esn`|9e0 =~$`5esn`] Ascending,[0X0123456789ABCDEF In 01234567,0x0 Contains _usn4 Contains 123456789] Asc Skip 1000 Contains 123456789 Contains 1e1 Limit $`6esn`[`3esn`..0e0] With Distinct .e0[`4esn`..`4esn`][0.0..$0] As `7esn` Order By None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where _usn3[...e1]) In (:_usn4:usn1{``:123456789 Starts With `2esn` Starts With .0,`5esn`:``})<-[usn2?:usn2|#usn8{`6esn`:$123456789[$`2esn`][True],@usn5:$`3esn` =~$`6esn` =~`8esn`}]-({`5esn`:0e0 =~_usn4})-[_usn4:_usn3|:`4esn` *1000..{#usn8:$999 Ends With $`3esn` Ends With `8esn`}]->(#usn7 :`7esn`{`4esn`:.12 Starts With .12 Starts With `3esn`}) Descending,01234567[.12..7][1000..1.e1] Ascending Where #usn7[..$1000][..01] Delete [$`5esn` Is Not Null,0e0 Is Null Is Null] Ends With Filter(`4esn` In `6esn`['s_str'..][010..] Where Count(*)[..`3esn`]) Ends With (_usn4 {`8esn`:9e1 In 01 In 999})-[`8esn`?:#usn7|:_usn4]-(#usn8 :_usn3)-[ *0..010{#usn7:$@usn6 Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)});"),
    octest:ct_string("Merge `8esn`=(((:#usn7{`7esn`:\"d_str\",usn2:True[`4esn`][$`6esn`]})<-[#usn8?:_usn4|:@usn5 *..0x0]-(#usn8 :`1esn`{#usn7:1e1[`6esn`..]})<-[:#usn7|:_usn4{``:$1000 Is Null Is Null}]->({`6esn`:.e1 Starts With 0.0 Starts With `6esn`,_usn3:$@usn6 Contains 0 Contains $`2esn`}))) Match _usn3=(`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})<-[`8esn`?:`5esn`|`1esn`]-(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]})<-[`3esn`?*..]->(`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]}),``=(({`5esn`:0e0 =~_usn4})) With Distinct *,$`7esn` Is Null Is Null,[0[usn2..],7[12e12..$_usn4][9e1..True],`1esn` Contains Count ( * )][Extract(@usn5 In .12[#usn7][$`8esn`] Where Count ( * ))..][Single(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $123456789[..0x0][..`4esn`])..] As #usn7 Where 0xabc Ends With $#usn7 Ends With #usn8 Union All Remove [`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where #usn7[..$1000][..01]|999 Contains `7esn`]._usn3!,[$usn1[1e1.._usn3][$@usn6..$#usn7],00[7..$123456789],$`5esn` In `2esn` In $12].`4esn`?"),
    octest:ct_string("Merge _usn4=(:`6esn`:`7esn`{usn2:.e0[..0X0123456789ABCDEF][...e12]}) On Match Set All(`6esn` In 0X7 =~`` Where `7esn`[...e1][..\"d_str\"]).`5esn` =None(usn2 In 1000 Contains 0.e0 Where $usn1[..$`6esn`][..Null]) Starts With Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $usn1[..$`6esn`][..Null]|$`1esn` Starts With $999) On Match Set ``:`2esn`:`3esn`,@usn6 =None(usn1 In $123456789 Contains usn2 Where Count ( * )[..1e1])[`8esn`(00[``..][$`4esn`..],123.654[@usn5])],usn2 =$`3esn`[`2esn`...e0] Return usn2 =~0x0 As `8esn`,All(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $123456789 Ends With $`6esn`) Is Null As `5esn`,_usn3[`3esn`][False] Skip {@usn5:$@usn6[..$usn1],`1esn`:usn2[`3esn`][_usn3]}[..Any(`4esn` In 's_str'[12..'s_str'] Where Null Contains _usn4)][..{`7esn`:True[..'s_str'][..01]}] Limit [$12 Is Null Is Null,999 Contains Count ( * ) Contains 123.654][Extract(usn2 In 1000 Contains 0.e0 Where 9e12 =~01 =~$`7esn`)..Any(`4esn` In $`8esn` Starts With 1000 Where 01 Ends With .e0)][[Null Contains _usn4,$`7esn` Is Null Is Null]..({_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[? *..0x0]->(:usn2:@usn6{`6esn`:12[12e12..@usn6],#usn8:`6esn` =~$_usn3})] Create ((:`6esn`:`7esn`{_usn4:12[0X7..@usn6],_usn3:123456789 In $usn2 In `6esn`})<-[#usn7?:_usn3|:`4esn` *00..]->(:`6esn`:`7esn`{_usn3:\"d_str\" Is Null Is Null})<-[@usn6]->(:#usn7{`6esn`:.e12 =~0.0 =~9e0,@usn6:$usn2 =~$_usn4 =~`5esn`})),((#usn7 {#usn7:01234567[.12..7][1000..1.e1],``:@usn5 Ends With 1.e1 Ends With 0X0123456789ABCDEF})<-[? *1000..{_usn4:$`6esn`[$`1esn`][1000],`2esn`:12e12[$`5esn`][07]}]->(:``{`2esn`:9e0[``][123.654],`1esn`:$_usn3[Null]}))"),
    octest:ct_string("Unwind usn1 Starts With $#usn7 Starts With `5esn` As `3esn` Detach Delete 0x0[0X7..][usn1..] Union All Optional Match ``=(((`5esn` :`6esn`:`7esn`{`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->(`2esn` :usn2:@usn6)-[?:@usn6 *00..{@usn5:$`5esn`[False],`4esn`:usn1[..$_usn4][..``]}]->(:``{`1esn`:`6esn` =~$_usn3}))) Union Create ((usn2 {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})-[`1esn`{_usn4:`3esn` Contains 0Xa}]-(:usn2:@usn6{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8})),((`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`3esn`?:_usn3|:`4esn`]-(`4esn` {`6esn`:$12[..``][..$7]})) Detach Delete 1000 In 0X0123456789ABCDEF In 01,`3esn`()[Filter(usn2 In 1000 Contains 0.e0 Where 0.12 In 01 In $`3esn`)..{@usn6:`6esn`[_usn4..][$`6esn`..]}],Extract(usn1 In 0x0[..`4esn`] Where \"d_str\" Contains `3esn` Contains 00|Count(*) Ends With 010)[All(usn2 In 1000 Contains 0.e0 Where #usn8 Ends With `4esn` Ends With $`4esn`)..@usn6(Distinct _usn3 In .e1 In $12,123.654 Starts With usn1 Starts With @usn5)][All(usn2 In 1000 Contains 0.e0 Where 0.0[1000..][.e1..])..{`7esn`:`2esn`[$`1esn`..][$_usn3..]}] Create `5esn`=((:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[`6esn`:``|:_usn4 *..01]->(`5esn` {_usn4:0X7 =~``})-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(usn2 :usn1{``:9e12 Ends With 0X0123456789ABCDEF Ends With #usn7}))"),
    octest:ct_string("Unwind [`4esn` In $`8esn` Starts With 1000 Where `5esn` In 12][..Single(`6esn` In 0X7 =~`` Where .0 Starts With `2esn` Starts With `6esn`)][..[@usn5 In $#usn8 Is Null Is Null]] As `1esn` Optional Match ((:_usn3{usn2:$`5esn`[$123456789][`1esn`]})),((#usn7 :#usn8{`2esn`:12 =~usn1 =~.e12})) Where 01234567[Null..0.e0][Count(*)..$#usn8] Union With Distinct usn2 Is Not Null Is Not Null As `2esn`,False[`6esn`][07],0Xa[0xabc..] As usn2 Order By 9e1[0.e0..][#usn8..] Asc Skip #usn7 Is Not Null Is Not Null Detach Delete 1000[0.0][Null],$_usn4 Contains $_usn4 Contains 1.e1,Single(`6esn` In 0X7 =~`` Where 12.0[..$7][..999]) Starts With {_usn3:0.12 Is Null Is Null,`1esn`:9e12[0.0..12.e12]} Starts With (`8esn` :@usn5)-[`6esn`?:_usn3|:`4esn` *12..0xabc]-(usn2 :#usn8{`3esn`:123.654[@usn5]})<-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(#usn8 :`5esn`{usn2:.e1 Starts With 0.0 Starts With `6esn`,#usn8:9e12 =~01 =~$`7esn`}) Merge #usn8=((`2esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})<-[:@usn6 *0X0123456789ABCDEF..{_usn3:`7esn` Ends With $usn2 Ends With 999}]-(`2esn` :_usn3)) Union All Merge ((#usn8 {`2esn`:$`5esn` Contains Count(*) Contains #usn7,_usn4:Null Starts With $`7esn` Starts With `2esn`})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(:`6esn`:`7esn`{`3esn`:`8esn`[$``]})<-[ *00..{`3esn`:12 Ends With 01234567,`4esn`:00[``..][$`4esn`..]}]->(`2esn` :``)) On Match Set #usn7+=[#usn8 In $`5esn` Is Null Is Null Where $123456789 Ends With $`6esn`][Any(`4esn` In $`8esn` Starts With 1000 Where 123.654 Starts With usn1 Starts With @usn5)..],_usn3 =None(usn1 In 00 Starts With _usn3) Contains _usn3(Distinct 0.12 In 01 In $`3esn`,1.e1[0X0123456789ABCDEF..][$`5esn`..]) Contains {_usn4:Count(*)[True]} On Match Set `1esn`+=.e0[..0X0123456789ABCDEF][...e12] Delete _usn3 Ends With #usn7,`3esn` Ends With 010 Unwind 12.e12[...0][..0x0] As usn2"),
    octest:ct_string("With Distinct *,@usn6[`5esn`..$`3esn`] As ``,`7esn` In 's_str' In 0.12 As _usn3 Skip True Is Not Null Is Not Null Union All Merge ((({`1esn`:12[..9e0][..999],usn1:0x0 =~$`7esn` =~@usn6})-[#usn8:`3esn`|:`4esn` *0..010]-(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]})<-[_usn3]->(_usn4 :`3esn`:`1esn`{`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]}))) Merge `3esn`=((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})) On Match Set `6esn` =$@usn5[Count ( * )] Union All Unwind 1.e1 Contains @usn6 As _usn3;"),
    octest:ct_string("Remove usn2(Distinct).@usn6"),
    octest:ct_string("Create @usn5=((@usn6 {`3esn`:0.12 In $7 In 0,_usn3:07[$999]})-[`1esn`:`5esn`|`1esn` *..7{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]}]->(usn2 :@usn6:`7esn`)<-[:@usn5|`8esn` *0Xa{usn1:$1000 Contains $`3esn`}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]})) Remove [_usn4 In usn1 Contains False Contains `` Where 0.12 Contains $`2esn` Contains $_usn4].@usn5,[$123456789[0.0..],07 In `5esn` In 12e12,$`3esn` Starts With 01234567 Starts With $1000].`3esn`!,Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0.12 In $`4esn` In `6esn`)._usn4 With Distinct 9e12 Ends With 0X0123456789ABCDEF Ends With #usn7 As `8esn`,1000[123.654..9e12][1000.._usn3] As `6esn`,Extract(usn1 In 00 Starts With _usn3 Where 00|0 Is Not Null Is Not Null) Starts With (:``{_usn3:Count(*)['s_str'..`1esn`],`1esn`:$`6esn`[$`1esn`][1000]})-[? *00..{_usn3:07[Count ( * )...e1][0X0123456789ABCDEF..$7],`1esn`:$`2esn` =~'s_str'}]->(_usn4 )<-[`2esn`?]-(usn2 :`3esn`:`1esn`) Starts With {_usn3:'s_str' =~0.e0} As `4esn` Where 7[..12e12][..$`6esn`] Union All Remove Single(#usn8 In $`5esn` Is Null Is Null Where .12[`1esn`..][$`3esn`..]).``!,Extract(usn1 In 0x0[..`4esn`] Where $#usn7 In .e1 In 01).#usn8?,Single(#usn8 In $`5esn` Is Null Is Null Where `3esn`[..7][..12e12]).`5esn`?"),
    octest:ct_string("Remove All(`2esn` In `7esn` Starts With $`` Starts With $#usn7).#usn8!,[_usn4 In usn1 Contains False Contains `` Where False In 123456789 In $0].@usn6,(`3esn` :usn2:@usn6{`4esn`:`7esn` Contains .0 Contains 9e12})-[?{`5esn`:0Xa In .e1 In Count(*)}]-({`1esn`:@usn6}).#usn7! Return *,(@usn6 {_usn4:$_usn4[#usn8..]})<-[#usn8?:`6esn` *0..010]-(`` :@usn5)[Extract(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6|#usn7 Is Not Null Is Not Null)..] Skip $`7esn` Ends With 07 Ends With 07 Union With  [usn1 In 0x0[..`4esn`] Where $1000 Is Null Is Null|12[usn1][True]] Starts With (`` :@usn5{#usn7:0X7[12]})-[@usn6? *07..{_usn4:Count(*)[..`3esn`],`5esn`:01234567[$`3esn`..]}]-(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null})<-[`5esn`:`8esn`|:usn1{usn1:12e12[Count ( * )..][usn2..],usn2:$123456789 Is Null Is Null}]-(`8esn` ) Starts With (`5esn` {usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null})<-[ *00..{@usn5:$`5esn` Is Null Is Null}]->(`3esn` :`4esn`:#usn8{``:\"d_str\" Is Null Is Null})<-[@usn5?:``|:_usn4]-(_usn3 :`4esn`:#usn8) As `1esn`,`5esn` In $999 As `6esn`,({`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`4esn` {@usn6:True[..'s_str'][..01]}) In Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where 07[12e12]) Order By #usn7 Starts With 0 Starts With 12 Asc Skip `` Starts With @usn5 Limit All(@usn5 In .12[#usn7][$`8esn`] Where $`5esn` Contains $@usn6) Is Null Is Null Where 12[..True][..$`4esn`]"),
    octest:ct_string("Return Distinct *,Extract(`4esn` In `6esn`['s_str'..][010..] Where 07 In $7 In 12|$#usn8)[{`6esn`:12[usn1][True],`3esn`:$@usn6[..$usn1]}..][{`8esn`:00}..] As @usn5,$`2esn`[``..] As @usn6 Skip [usn1 In 0x0[..`4esn`] Where $1000 Is Null Is Null|12[usn1][True]] Starts With (`` :@usn5{#usn7:0X7[12]})-[@usn6? *07..{_usn4:Count(*)[..`3esn`],`5esn`:01234567[$`3esn`..]}]-(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null})<-[`5esn`:`8esn`|:usn1{usn1:12e12[Count ( * )..][usn2..],usn2:$123456789 Is Null Is Null}]-(`8esn` ) Starts With (`5esn` {usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null})<-[ *00..{@usn5:$`5esn` Is Null Is Null}]->(`3esn` :`4esn`:#usn8{``:\"d_str\" Is Null Is Null})<-[@usn5?:``|:_usn4]-(_usn3 :`4esn`:#usn8) Optional Match #usn8=((`4esn` :`7esn`{`7esn`:@usn6 Contains _usn4 Contains $`4esn`})<-[_usn3?:`2esn`|usn2 *010{`6esn`:#usn7 Ends With `4esn` Ends With @usn5}]->(#usn7 :`3esn`:`1esn`)<-[?{`4esn`:12e12[$`5esn`][07]}]-(:`1esn`{_usn4:$_usn3[Null]})) Where 12 =~usn1 =~.e12"),
    octest:ct_string("Unwind $`3esn` In $12 In 's_str' As `` Unwind .e12[usn2][01] As _usn3 Union All Unwind 1.e1[Null][12.e12] As `7esn` Unwind Single(`6esn` In 0X7 =~`` Where 12.0[..$7][..999]) Starts With {_usn3:0.12 Is Null Is Null,`1esn`:9e12[0.0..12.e12]} Starts With (`8esn` :@usn5)-[`6esn`?:_usn3|:`4esn` *12..0xabc]-(usn2 :#usn8{`3esn`:123.654[@usn5]})<-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(#usn8 :`5esn`{usn2:.e1 Starts With 0.0 Starts With `6esn`,#usn8:9e12 =~01 =~$`7esn`}) As `4esn` Create `3esn`=((@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})<-[{_usn3:12.e12 In $0 In Count(*)}]-(:#usn7{`2esn`:.12 Starts With @usn5 Starts With $#usn8})) Union All Create (`7esn` {usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3})<-[{@usn5:$123456789 Ends With .e1,#usn8:0x0 =~_usn4}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})-[#usn8?]->(:`4esn`:#usn8{_usn4:'s_str' In \"d_str\" In 123456789,`2esn`:0.12 Ends With $usn1 Ends With $@usn5})"),
    octest:ct_string("Unwind 0Xa[0xabc..] As @usn5 Detach Delete [`4esn` In 's_str'[12..'s_str'] Where 9e12 =~01 =~$`7esn`][#usn7(00 In 12.e12)..Extract(usn1 In 0x0[..`4esn`] Where 1000 Ends With 1000 Ends With $`4esn`|@usn6[$`3esn`])][(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})<-[`8esn`]->(#usn8 )<-[`3esn` *00..{`8esn`:@usn6 Contains .e1 Contains $`4esn`,_usn4:0X7[..12e12]}]->(@usn5 {`1esn`:0[usn2..]})..(usn1 :_usn4:usn1)<-[@usn5?:`1esn`]-(#usn7 :`2esn`:`3esn`)],$`4esn` Ends With 0Xa,[123456789 =~$123456789,0.12 In $7 In 0] Is Null Is Null With Distinct *,{#usn7:0[0.12..]} Ends With Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]) Ends With {@usn5:\"d_str\" Is Null Is Null,@usn5:$_usn4[`3esn`][0]} As `8esn`,@usn5 Ends With 1.e1 Ends With 0X0123456789ABCDEF As `8esn` Skip {_usn3:0.12 Is Null Is Null,`1esn`:9e12[0.0..12.e12]} Ends With {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]} Where .12 =~.12 =~1e1 Union With  12e12[.12..] As #usn8,`4esn` Is Null,Filter(`6esn` In 0X7 =~`` Where $usn2[0e0..])[{@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null}..] Skip $0[..07] Limit 999 Contains `7esn` Where 12e12[0.e0][9e1] Detach Delete `1esn`(Distinct 0.0[999..],9e0 Ends With $`7esn`) Ends With (`7esn` {`8esn`:Count ( * ) =~Count(*)})-[`8esn`?:#usn7|:_usn4{usn2:7[$`4esn`..123456789]}]->(#usn8 :usn2:@usn6{`5esn`:00 Ends With $_usn4 Ends With $`2esn`,usn2:#usn7 Starts With 0 Starts With 12})-[_usn3?:`2esn`|usn2 *010{`6esn`:#usn7 Ends With `4esn` Ends With @usn5}]->(`1esn` :``{`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]}) Ends With (#usn7 :`2esn`:`3esn`)<-[`2esn`?*..]->(:#usn8{`5esn`:0 Contains 12e12}),$`8esn` Starts With 1000,({`1esn`:@usn6})<-[_usn4?:_usn4|:@usn5 *123456789..999{`2esn`:@usn5 In $`6esn`}]->(:`3esn`:`1esn`{`1esn`:0.0[1000..][.e1..]}) Is Null Is Null Union Optional Match usn1=(((:_usn4:usn1)-[@usn5?:@usn6*..]-(`2esn` :`5esn`{#usn8:$999 Ends With $`3esn` Ends With `8esn`})-[?:@usn6]-(_usn3 :`4esn`:#usn8{`1esn`:07[1e1],`7esn`:12e12[$`5esn`][07]}))),(((`7esn` :`2esn`:`3esn`)<-[@usn5?:#usn8 *999..{`1esn`:$@usn5 =~$`` =~$usn2}]->(`2esn` {`3esn`:$999[12.0..]})-[? *00..{#usn8:12.e12[...0][..0x0],`7esn`:$`4esn`[9e1..][0..]}]-(:usn1{`6esn`:7 Contains 9e1,#usn8:`7esn`[...e1][..\"d_str\"]}))) Where $usn1 In 1000 In $#usn7 Optional Match (@usn5 :usn2:@usn6{`7esn`:1000 Contains 0.e0}) Where `7esn` Contains .0 Contains 9e12 Match `4esn`=(((`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})-[?{`4esn`:0.e0 Ends With 12 Ends With $7,@usn6:$``[_usn4..][`7esn`..]}]->(#usn7 {@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]})<-[@usn5? *1000..]->(:@usn6:`7esn`{_usn3:False[`2esn`..#usn8]}))),((:#usn7{`2esn`:.12 Starts With @usn5 Starts With $#usn8}));"),
    octest:ct_string("Delete `6esn`(Distinct 12.0[0Xa][00]) In {`7esn`:12e12 Ends With 010 Ends With .0} In Extract(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6|#usn7 Is Not Null Is Not Null),$@usn6[..$#usn7][..12.e12],.e0[`4esn`..`4esn`][0.0..$0] Delete 12.e12 In $1000,{_usn3:0.12 Is Null Is Null,`1esn`:9e12[0.0..12.e12]} Ends With {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]},$999 Ends With $`3esn` Ends With `8esn` Union Return Distinct *,Any(@usn5 In $#usn8 Is Null Is Null Where True[Count(*)..][1e1..]) Is Not Null As `6esn` Remove Any(`6esn` In 0X7 =~`` Where 01234567 Ends With 0x0).usn1?,({``:01234567 Ends With 0x0,`6esn`:0X7[0e0..]})-[:@usn5|`8esn` *0Xa{usn1:$1000 Contains $`3esn`}]->({`4esn`:#usn7 Starts With 0 Starts With 12,`4esn`:0x0 =~_usn4})<-[`8esn`?:``|:_usn4 *..01]-({`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null}).`5esn`! With  *,{`7esn`:Count(*) In 01 In .0}[..{`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]}][..#usn7(Distinct 0.e0[9e0][0e0],999[``..][Null..])] As `5esn`,#usn7 Ends With `4esn` Ends With @usn5 As `` Where $`1esn` =~$`1esn` =~#usn7 Union All Return .e12[.12..][_usn4..] As _usn4 Order By $usn1[1e1.._usn3][$@usn6..$#usn7] Desc Skip Extract(@usn6 In @usn5 In $`6esn` Where $_usn4[`3esn`][0]|_usn3 Is Null Is Null) Is Not Null Limit Extract(@usn6 In @usn5 In $`6esn` Where 123456789 =~_usn4 =~$0) Is Null Delete 07 Ends With 07"),
    octest:ct_string("Merge ((usn1 :`6esn`:`7esn`)) Merge _usn4=(((:`3esn`:`1esn`{usn2:`5esn`[Count ( * )..][\"d_str\"..],`7esn`:.e1 In $@usn6 In 999})<-[`8esn`:@usn5|`8esn` *123456789..999{`5esn`:0x0 Contains $`8esn` Contains `6esn`,#usn8:010 =~$usn2 =~1e1}]->(_usn4 {@usn5:$_usn3[$`4esn`..Null]})<-[`3esn`?*..]->(`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]}))) Unwind 999 Contains `7esn` As `7esn` Union All Optional Match ((usn2 {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})-[ *010{@usn5:Null Is Null Is Null}]-({@usn5:False In $`7esn` In .0,usn2:Null[1.e1..]})),_usn4=(((:`3esn`:`1esn`{usn2:`5esn`[Count ( * )..][\"d_str\"..],`7esn`:.e1 In $@usn6 In 999})<-[`8esn`:@usn5|`8esn` *123456789..999{`5esn`:0x0 Contains $`8esn` Contains `6esn`,#usn8:010 =~$usn2 =~1e1}]->(_usn4 {@usn5:$_usn3[$`4esn`..Null]})<-[`3esn`?*..]->(`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]}))) Where 00 Union Return $`4esn` Contains 0Xa,010 In `7esn` Order By 0x0 In `8esn` In 999 Descending"),
    octest:ct_string("Match ``=((@usn6 :_usn4:usn1{@usn6:Null Is Null Is Null,#usn7:`5esn`[Count ( * )..][\"d_str\"..]})-[*{`2esn`:$1000[01234567]}]-(`4esn` :`1esn`)) Where 's_str'[12..'s_str'] Unwind Single(`6esn` In 0X7 =~`` Where 12.0[..$7][..999]) Starts With {_usn3:0.12 Is Null Is Null,`1esn`:9e12[0.0..12.e12]} Starts With (`8esn` :@usn5)-[`6esn`?:_usn3|:`4esn` *12..0xabc]-(usn2 :#usn8{`3esn`:123.654[@usn5]})<-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(#usn8 :`5esn`{usn2:.e1 Starts With 0.0 Starts With `6esn`,#usn8:9e12 =~01 =~$`7esn`}) As `4esn` Union Match `8esn`=(`4esn` {`3esn`:0X7[..12e12],`8esn`:False In 123456789 In $0})-[`4esn`?:`1esn`]->(:`2esn`:`3esn`{usn2:$`5esn` In False})<-[#usn7? *00..]->({`4esn`:$usn1[1e1.._usn3][$@usn6..$#usn7],`3esn`:9e0[``][123.654]}),`8esn`=(({_usn3:$0 Ends With $#usn7 Ends With .12})-[:``|:_usn4 *01234567..12{`2esn`:$`` Is Null Is Null,``:$`4esn`[usn1..$#usn8][12.0..`3esn`]}]->(#usn7 {@usn5:`5esn`[.e1][0Xa],@usn6:Count(*)[`7esn`..$12]})-[?:``|:_usn4 *..0X7]->({`2esn`:@usn5 In 0X0123456789ABCDEF,`1esn`:@usn6[`5esn`..$`3esn`]})) Where $1000 Contains $`3esn` Create ((`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})-[?:@usn6 *..7{#usn8:'s_str'[.12..$#usn7][$999..`2esn`]}]->(@usn5 {_usn4:010[$@usn6],`6esn`:123456789[1e1..0.0]})<-[`6esn`?:`2esn`|usn2 *01234567..12]->(:`7esn`{#usn7:True =~@usn5 =~$`1esn`})),`6esn`=({`8esn`:$@usn5 Contains 01,`2esn`:123.654 Contains #usn8})-[{`5esn`:.e1[..$``][..0X0123456789ABCDEF]}]->(_usn3 {`5esn`:0.12 Contains .e1})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]}) Remove Filter(usn2 In 1000 Contains 0.e0 Where 12e12[$`5esn`][07])._usn4? Union Delete 0e0[`2esn`..010],@usn6[`5esn`..$`3esn`],Count ( * )[..usn1][..12.e12] Remove [#usn8 In $`5esn` Is Null Is Null Where 0e0 =~_usn4|$@usn6 =~usn1].usn1,None(@usn5 In .12[#usn7][$`8esn`] Where 123456789 Is Null).`1esn`?;"),
    octest:ct_string("Merge @usn6=((:``{`5esn`:.e1 In $@usn6 In 999})) On Match Set None(`4esn` In 's_str'[12..'s_str'] Where @usn5 In 0X0123456789ABCDEF).`2esn`! =$`1esn` Is Null,`5esn`()._usn4! =[`4esn` In `6esn`['s_str'..][010..] Where $@usn5 In 12e12 In Count(*)|$1000[01234567]][Any(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7)..{usn1:usn1 Is Null Is Null,usn2:12.0[``]}][(_usn3 {`5esn`:0.12 Contains .e1})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`})..00],`8esn` =`7esn` Contains .0 Contains 9e12 On Create Set _usn3+=True In All(`6esn` In 0X7 =~`` Where #usn7 Starts With 0 Starts With 12),#usn7+=`` Is Not Null,`5esn` =0.0[Extract(`4esn` In 's_str'[12..'s_str'] Where `` Contains 12 Contains True|$`1esn` Is Null)..Extract(#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str'|_usn3 Ends With 12e12 Ends With .e0)][None(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where `8esn` In $@usn5)..{@usn6:.12 Starts With 0Xa}] Union All Unwind 1.e1[Null][12.e12] As `7esn` Unwind Single(`6esn` In 0X7 =~`` Where 12.0[..$7][..999]) Starts With {_usn3:0.12 Is Null Is Null,`1esn`:9e12[0.0..12.e12]} Starts With (`8esn` :@usn5)-[`6esn`?:_usn3|:`4esn` *12..0xabc]-(usn2 :#usn8{`3esn`:123.654[@usn5]})<-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(#usn8 :`5esn`{usn2:.e1 Starts With 0.0 Starts With `6esn`,#usn8:9e12 =~01 =~$`7esn`}) As `4esn` Create `3esn`=((@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})<-[{_usn3:12.e12 In $0 In Count(*)}]-(:#usn7{`2esn`:.12 Starts With @usn5 Starts With $#usn8})) Union All With Distinct *,[#usn8 In $`5esn` Is Null Is Null Where 0.e0 Ends With 12 Ends With $7][..{@usn5:12 =~usn1 =~.e12,`2esn`:0X7 =~`4esn` =~`8esn`}] As #usn7,@usn6 Starts With `7esn` Starts With Null Order By Extract(@usn5 In 0X7 =~.0 =~\"d_str\" Where $`4esn`[9e1..][0..]|$0 =~$usn1 =~9e1)[{``:\"d_str\",`1esn`:$1000 =~$`7esn`}] Descending"),
    octest:ct_string("Unwind Null Is Null Is Null As `4esn` Detach Delete 0X7[..12e12],$`5esn` Is Not Null,00 Ends With .12 Ends With `4esn` Union All Match ((({`5esn`:Count(*)[..`3esn`],usn1:01234567 Ends With 0x0})<-[`6esn`?{`7esn`:.12 Ends With `1esn` Ends With $`1esn`,``:9e0 Starts With `6esn`}]-(usn1 :_usn3{@usn6:True[..'s_str'][..01]})<-[`2esn`?]-(usn2 :`3esn`:`1esn`))) Where 12.0[..$7][..999] Union All Remove {#usn7:False[`2esn`..#usn8]}.#usn7?,@usn6(Distinct 0.12 In 01 In $`3esn`,'s_str' Starts With 1000 Starts With #usn8).#usn8,(:`1esn`{`8esn`:Count ( * ) =~Count(*)})-[`2esn`*..$usn1]->(:@usn5{_usn4:.12 Starts With 0Xa})-[:`3esn`|:`4esn` *999..{`6esn`:$123456789[..0.12][..#usn7],`3esn`:0 Ends With $7 Ends With _usn3}]->(`1esn` {_usn4:12.e12 Ends With 01 Ends With .e1})._usn4"),
    octest:ct_string("Detach Delete usn1[1e1][$_usn4],999[$usn2..] Delete 's_str' In \"d_str\" In 123456789,9e12[..$``][..`6esn`],9e0[``][123.654] With  @usn5 Starts With 12e12 Starts With @usn5,$1000 =~$`7esn`,\"d_str\" Starts With $usn1 As `7esn` Order By $0[..`8esn`] Desc,Count(*) Starts With 1e1 Starts With $123456789 Ascending,12e12[$`5esn`][07] Desc Limit Single(#usn8 In $`5esn` Is Null Is Null Where 's_str' Starts With 1000 Starts With #usn8)[{_usn3:$0 Ends With $#usn7 Ends With .12}][[12.0[0Xa][00],.0[01][$12]]] Union Remove ({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})-[? *999..]-({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`8esn` :`7esn`).#usn7!"),
    octest:ct_string("Delete {usn2:9e12[@usn6..$``][#usn8..Count ( * )],`3esn`:$1000 In $`7esn` In $7} Contains {`5esn`:$7[.12]} Contains Extract(usn1 In 00 Starts With _usn3 Where 07 Contains #usn8 Contains $_usn3|`2esn`[$`1esn`..][$_usn3..]) Union Return Distinct #usn8 In $0 As `1esn`,'s_str' In \"d_str\" In 123456789,[0Xa[$``..][01234567..]] Contains `3esn`(Distinct _usn3 In .e1 In $12) Contains (`5esn` :`8esn`{`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null})<-[:@usn5|`8esn`*..]-(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})-[``?{usn2:@usn5 In 0X0123456789ABCDEF,usn2:9e1 Is Null Is Null}]->(`8esn` :_usn3{``:12.e12['s_str']}) As @usn6 Order By Count ( * )[(`7esn` {usn1:$1000 Contains $`3esn`})-[`5esn`?:_usn4|:@usn5]-(`3esn` {`8esn`:$``[_usn4..][`7esn`..]})-[@usn5:`4esn`|:`7esn` *0X0123456789ABCDEF..{`7esn`:.e0[..999][..0X7]}]-(usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1})..Single(usn1 In 0x0[..`4esn`] Where $999[12.0..])][(:`6esn`:`7esn`{@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]})-[?{`2esn`:$`6esn`[$@usn6..]}]-(`4esn` :`6esn`:`7esn`)<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})..Single(`6esn` In 0X7 =~`` Where $usn1[0.12..]['s_str'..])] Ascending,0xabc[$@usn5] Asc,usn1[..$_usn4][..``] Ascending Union All Merge `1esn`=((({`6esn`:$`8esn`[..$``]})-[`2esn`]-(@usn6 {#usn7:'s_str' In \"d_str\" In 123456789,usn2:07[12][$`6esn`]})-[`2esn` *0X0123456789ABCDEF..{usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3}]->(usn1 :`4esn`:#usn8{usn2:$`8esn` In \"d_str\" In 9e12}))) On Match Set #usn7 =(@usn6 {_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12})-[*{`2esn`:$1000[01234567]}]-(_usn4 :`4esn`:#usn8{#usn7:1e1[@usn5..]})<-[:`2esn`|usn2 *0..010]->(`` :`1esn`) Is Not Null Is Not Null,`1esn` =`` =~12 =~$#usn7,[123456789[$#usn7..],_usn4[0xabc..],$`3esn` Starts With 01234567 Starts With $1000].`1esn`! =0X0123456789ABCDEF Starts With `2esn` Starts With $999 Remove Any(#usn7 In 01234567[$`3esn`..] Where 0Xa[0xabc..$#usn8])._usn4! Optional Match (((`` :@usn6:`7esn`{`2esn`:0.12[0.e0..][`4esn`..]})<-[`3esn`?:_usn3|:`4esn`]-(_usn3 :`1esn`)<-[_usn3{_usn3:12.e12 In $0 In Count(*)}]-(`7esn` :@usn5)))"),
    octest:ct_string("Remove [$`5esn` Is Null].`5esn`!,`3esn`:`6esn`:`7esn` Union All Merge #usn8=(((`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[ *..7]-(:_usn3{@usn6:$`7esn` Is Null Is Null})-[:`7esn`|`2esn` *12..0xabc]->(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}))) On Match Set @usn5 =1e1[..#usn8][..'s_str'],`` =`4esn` Is Null,usn2+='s_str'[.12..$#usn7][$999..`2esn`] On Match Set `4esn` =010 In `7esn`,usn2+=0.e0[@usn6][0x0] Unwind 0e0[12][$_usn4] As usn2 Create (`` :@usn6:`7esn`{`2esn`:0.12[0.e0..][`4esn`..]})-[@usn6?:#usn8 *..7{@usn5:@usn5 Starts With 12e12 Starts With @usn5}]->(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})-[usn1?:`2esn`|usn2 *123456789..999]-(usn1 :`7esn`{`1esn`:$@usn6 Contains 07 Contains 0.e0}) Union All Return .e12[.12..][_usn4..] As _usn4 Order By $usn1[1e1.._usn3][$@usn6..$#usn7] Desc Skip Extract(@usn6 In @usn5 In $`6esn` Where $_usn4[`3esn`][0]|_usn3 Is Null Is Null) Is Not Null Limit Extract(@usn6 In @usn5 In $`6esn` Where 123456789 =~_usn4 =~$0) Is Null Delete 07 Ends With 07;"),
    octest:ct_string("With Distinct *,Any(@usn5 In $#usn8 Is Null Is Null Where True[Count(*)..][1e1..]) Is Not Null As `6esn` Where $@usn6 Contains 0 Contains $`2esn` Remove ({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})-[`5esn`? *010]-({@usn6:0.12 In $`4esn` In `6esn`,``:1e1 Is Null}).`7esn`! Delete 0X0123456789ABCDEF Contains $usn1 Union Delete {#usn8:0X0123456789ABCDEF[..usn1]} Ends With (:``{_usn3:0X0123456789ABCDEF In 01234567})<-[``? *..0X7{_usn4:12 Ends With 01 Ends With 1e1}]-(usn2 :@usn6:`7esn`)-[:usn2|#usn8*..]-(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12}) Ends With [1e1 In $#usn8 In 12e12,123.654 Contains #usn8] Return Distinct *,9e12 Ends With 0X0123456789ABCDEF Ends With #usn7 As `5esn`,$12[`3esn`..0e0][`2esn`..$7] As #usn8 Order By $`2esn` Starts With .e0 Starts With 12.0 Descending,{`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]}[({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})-[? *999..]-({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`8esn` :`7esn`)][{@usn5:`` In `6esn`,`1esn`:$`2esn`[$`2esn`..]}] Asc,999 Is Null Is Null Desc Limit $7 Ends With `5esn`;"),
    octest:ct_string("Remove [`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 12.e12[@usn5..123.654]|9e0 Starts With `6esn`].#usn8? Union All Unwind @usn5 =~.0 =~$`1esn` As `` Merge usn2=(({`4esn`:#usn7 Starts With 0 Starts With 12,`4esn`:0x0 =~_usn4})-[_usn4?:@usn6 *..7]->(@usn5 :`8esn`)-[@usn5{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8}]->(usn2 :`7esn`{_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`})) On Create Set _usn4+=(`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})-[``?:@usn6{#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}]->(@usn5 :`3esn`:`1esn`{`3esn`:$`5esn` Is Not Null,`2esn`:9e1[0.e0..][#usn8..]})[[`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where `8esn` In $@usn5]..{usn2:$`4esn`[12.e12..][0.0..]}],`6esn`+=$`2esn` Contains usn1 Contains `2esn`"),
    octest:ct_string("With Distinct `` Is Not Null Is Not Null As @usn6,`5esn`[`1esn`..`1esn`],[$`8esn` In \"d_str\" In 9e12,9e0 Contains `8esn`,$@usn6 Contains 0 Contains $`2esn`][Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 01 In _usn3 In 12)][Extract(#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|`7esn` Starts With $usn2 Starts With .e0)] As _usn4 Order By Count(*) Is Null Descending,[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 12 Ends With 01234567|Count(*) In 01 In .0] Ends With [`4esn` In 's_str'[12..'s_str'] Where 0.12 In 01 In $`3esn`|9e0 =~$`5esn`] Ascending,[0X0123456789ABCDEF In 01234567,0x0 Contains _usn4 Contains 123456789] Asc Skip 1000 Contains 123456789 Contains 1e1 Limit $`6esn`[`3esn`..0e0] With Distinct .e0[`4esn`..`4esn`][0.0..$0] As `7esn` Order By None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where _usn3[...e1]) In (:_usn4:usn1{``:123456789 Starts With `2esn` Starts With .0,`5esn`:``})<-[usn2?:usn2|#usn8{`6esn`:$123456789[$`2esn`][True],@usn5:$`3esn` =~$`6esn` =~`8esn`}]-({`5esn`:0e0 =~_usn4})-[_usn4:_usn3|:`4esn` *1000..{#usn8:$999 Ends With $`3esn` Ends With `8esn`}]->(#usn7 :`7esn`{`4esn`:.12 Starts With .12 Starts With `3esn`}) Descending,01234567[.12..7][1000..1.e1] Ascending Where #usn7[..$1000][..01] Delete [$`5esn` Is Not Null,0e0 Is Null Is Null] Ends With Filter(`4esn` In `6esn`['s_str'..][010..] Where Count(*)[..`3esn`]) Ends With (_usn4 {`8esn`:9e1 In 01 In 999})-[`8esn`?:#usn7|:_usn4]-(#usn8 :_usn3)-[ *0..010{#usn7:$@usn6 Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)}) Union Delete $`4esn`[12.0..`5esn`],$`6esn` Ends With True Ends With True"),
    octest:ct_string("Merge @usn5=((#usn7 {#usn7:01234567[.12..7][1000..1.e1],``:@usn5 Ends With 1.e1 Ends With 0X0123456789ABCDEF})<-[? *1000..{_usn4:$`6esn`[$`1esn`][1000],`2esn`:12e12[$`5esn`][07]}]->(:``{`2esn`:9e0[``][123.654],`1esn`:$_usn3[Null]})) On Create Set @usn5(Distinct 12e12[_usn3..][$@usn5..],7 Contains 9e1).`6esn` =$@usn5 In 12e12 In Count(*) Match `1esn`=((@usn5 {@usn6:$123456789[0X7..12.e12]})<-[:`5esn`|`1esn`]-(#usn8 {@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null})),(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}) Remove ({@usn6:0X0123456789ABCDEF[..usn1]})<-[`4esn`:#usn8]-(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa})-[{`2esn`:\"d_str\" =~`3esn` =~0Xa,_usn4:usn1 Is Null Is Null}]->(#usn8 :`7esn`).`6esn`? Union Detach Delete 1000 In 0X0123456789ABCDEF In 01,@usn6(Distinct Null[0e0][12])[..[@usn5 In 0X7 =~.0 =~\"d_str\" Where 0X7[0e0..]]][..`8esn`(010 =~`6esn`)],1e1 Starts With #usn8 Starts With 1.e1 Detach Delete Null Starts With $`7esn` Starts With `2esn` Delete $7 Ends With 12.0 Ends With 0xabc,usn1 =~Null =~`5esn` Union Optional Match ((#usn8 {_usn3:`6esn` =~01234567 =~0Xa,_usn4:$`5esn` Is Null Is Null})-[#usn7:`1esn` *07..]->(#usn8 {`2esn`:$`5esn` Contains Count(*) Contains #usn7,_usn4:Null Starts With $`7esn` Starts With `2esn`})),_usn4=(`7esn` {usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3})<-[{@usn5:$123456789 Ends With .e1,#usn8:0x0 =~_usn4}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})-[#usn8?]->(:`4esn`:#usn8{_usn4:'s_str' In \"d_str\" In 123456789,`2esn`:0.12 Ends With $usn1 Ends With $@usn5}) Where Count(*)[12.e12..] Optional Match `6esn`=((#usn7 :#usn8{`2esn`:12 =~usn1 =~.e12})),((@usn5 :_usn4:usn1{`1esn`:07[1e1],`7esn`:12e12[$`5esn`][07]})) Where 's_str' Ends With .e0"),
    octest:ct_string("Unwind 12.e12[$1000..] As `4esn` Union Match (usn2 :#usn8{`3esn`:123.654[@usn5]})-[@usn5?:@usn6$_usn3]->(:_usn4:usn1{`1esn`:123456789 Starts With `2esn` Starts With .0,@usn6:12.e12 Contains `5esn`}) Where 0.12[Null..] Optional Match #usn8=((@usn5 {@usn6:$123456789[0X7..12.e12]})<-[:`5esn`|`1esn`]-(#usn8 {@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null})),((#usn7 :_usn3)<-[:_usn4|:@usn5 *..0X7]->(`4esn` {`7esn`:.e0[..999][..0X7]})-[#usn7:_usn3|:`4esn`]-(:#usn7{usn1:$123456789[..0.12][..#usn7]})) Merge ((_usn4 {`8esn`:9e1 In 01 In 999})) Union All With  12e12[Null] As usn2,$`4esn`[0][0e0] As _usn3,12e12 Starts With $123456789 Starts With 12.0 Order By Count(*)[.e0.._usn4] Asc Skip (`7esn` :@usn6:`7esn`)<-[:``|:_usn4{`8esn`:0 Ends With $7 Ends With _usn3}]-(usn1 {#usn7:Count ( * )[@usn6..0x0]})<-[`8esn`]->(#usn8 ) Contains usn2(Distinct $1000[01234567],00 In 0.12 In `5esn`) Contains Any(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where usn2[$`1esn`...0]) Where $`7esn` Ends With `1esn` Ends With True Merge `4esn`=({`8esn`:0X7 In 's_str' In $`1esn`})"),
    octest:ct_string("Delete 999 Contains `7esn`;"),
    octest:ct_string("Merge ((({`1esn`:12[..9e0][..999],usn1:0x0 =~$`7esn` =~@usn6})-[#usn8:`3esn`|:`4esn` *0..010]-(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]})<-[_usn3]->(_usn4 :`3esn`:`1esn`{`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]}))) Merge `3esn`=((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})) On Match Set `6esn` =$@usn5[Count ( * )] Union All Create ((`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1}))"),
    octest:ct_string("Return Distinct Extract(@usn6 In @usn5 In $`6esn` Where 9e0 =~$`5esn`|`2esn`[$`1esn`..][$_usn3..]) =~Extract(@usn6 In @usn5 In $`6esn` Where .12[`1esn`..][$`3esn`..]|Count ( * ) =~Count(*)) As _usn4 Merge `3esn`=(:`3esn`:`1esn`{usn1:`4esn` In $12 In `8esn`})-[?:usn1|`3esn` *999..{_usn4:$999[12.0..],usn1:0[usn2..]}]->(:usn2:@usn6{@usn5:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:.12 Ends With $`4esn` Ends With Count(*)}) On Create Set _usn3+=True In All(`6esn` In 0X7 =~`` Where #usn7 Starts With 0 Starts With 12),#usn7+=`` Is Not Null,`5esn` =0.0[Extract(`4esn` In 's_str'[12..'s_str'] Where `` Contains 12 Contains True|$`1esn` Is Null)..Extract(#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str'|_usn3 Ends With 12e12 Ends With .e0)][None(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where `8esn` In $@usn5)..{@usn6:.12 Starts With 0Xa}] Optional Match (@usn5 {usn2:$999[12.0..]})<-[usn1]->(`8esn` :_usn3{`8esn`:$`3esn` In $12 In 's_str'})-[_usn3?:``|:_usn4]->(`5esn` {usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null}) Union Create _usn3=(((#usn7 :#usn8{`2esn`:12 =~usn1 =~.e12})-[`8esn`?:#usn7|:_usn4{usn2:7[$`4esn`..123456789]}]->(#usn8 :usn2:@usn6{`5esn`:00 Ends With $_usn4 Ends With $`2esn`,usn2:#usn7 Starts With 0 Starts With 12})-[``? *12..0xabc]->({@usn6:9e0 Contains `8esn`}))) Merge usn1=((`3esn` :``)<-[`4esn`]->(`7esn` :#usn8)<-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(_usn4 )) On Match Set (`3esn` :usn2:@usn6)<-[`7esn`?:@usn5|`8esn`]-(`1esn` :``).#usn7! =Count ( * )[`3esn`..][`2esn`..],[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where .e0 In $@usn5 In $0|0.12 Contains .e1].`3esn` =`1esn`[0e0..],_usn3+=(:_usn4:usn1{#usn7:$`5esn` Is Null Is Null,usn2:usn1[$`3esn`..$999][True..False]})-[`1esn`:`5esn`|`1esn` *..7{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]}]->(usn2 :@usn6:`7esn`)-[#usn7?:@usn6 *00..]->(#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})[[#usn7 In 01234567[$`3esn`..] Where usn1 Contains False Contains ``]..] On Match Set usn1 =$`6esn`[..0X0123456789ABCDEF],Filter(@usn6 In @usn5 In $`6esn` Where 12[`7esn`...0][0.12..``]).@usn6 =$123456789 Contains usn2,`` =#usn8[$_usn3..7][``..$`5esn`] Union Create `4esn`=(((`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})-[?{`4esn`:0.e0 Ends With 12 Ends With $7,@usn6:$``[_usn4..][`7esn`..]}]->(#usn7 {@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]})<-[@usn5? *1000..]->(:@usn6:`7esn`{_usn3:False[`2esn`..#usn8]}))),((:#usn7{`2esn`:.12 Starts With @usn5 Starts With $#usn8})) Unwind Extract(`6esn` In 0X7 =~``|9e0 In 01234567) Contains Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) As usn2 Delete `2esn` Starts With $_usn3 Starts With `2esn`,9e1 =~.0 =~$`1esn`"),
    octest:ct_string("Create ((#usn8 :`1esn`{#usn7:1e1[`6esn`..]})<-[`1esn`{`6esn`:$_usn4[`3esn`][0],_usn3:999 Contains Count ( * ) Contains 123.654}]->(`7esn` :`7esn`)),#usn8=((`2esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})<-[:@usn6 *0X0123456789ABCDEF..{_usn3:`7esn` Ends With $usn2 Ends With 999}]-(`2esn` :_usn3)) Unwind 0X0123456789ABCDEF[..usn1] As _usn3"),
    octest:ct_string("Optional Match ``=((({`8esn`:$@usn5 Contains 01,`2esn`:123.654 Contains #usn8})-[usn2?]-(`3esn` {_usn4:12.e12 Ends With 01 Ends With .e1})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`}))),(:usn2:@usn6)-[ *07..]->(`5esn` :`2esn`:`3esn`{_usn3:$`2esn`[$123456789..$`1esn`][0Xa..$``],`5esn`:12.e12[@usn5..123.654]}) Where 0.12 In $7 In 0 Remove `3esn`:`7esn`,(:_usn4:usn1)-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]-(`1esn` :`1esn`).``?,usn2:#usn8;"),
    octest:ct_string("Merge (_usn3 :@usn5)<-[:@usn5|`8esn`*..]-(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4}) On Create Set `5esn` =Any(usn2 In 1000 Contains 0.e0 Where @usn6[`3esn`..][$7..])[All(#usn7 In 01234567[$`3esn`..] Where Count(*)[.e0.._usn4])..][None(usn2 In 1000 Contains 0.e0 Where True[Count(*)..][1e1..])..],@usn6 =Filter(_usn4 In usn1 Contains False Contains `` Where 0.12 Contains $`2esn` Contains $_usn4) Is Null On Create Set Extract(#usn7 In 01234567[$`3esn`..] Where 0X7 In $999 In $``|9e1[...e0]).`7esn`! =0X7 In 's_str' In $`1esn`,{`3esn`:#usn7 Ends With `4esn` Ends With @usn5}.#usn8 =[usn1[..$_usn4][..``],0X7[.e12..01234567]] In `3esn`(@usn5[..True][..0X7],$`3esn` =~$`7esn` =~False) Detach Delete $`6esn` =~Null =~9e12 Delete Single(usn1 In 0x0[..`4esn`] Where 1e1 In $#usn8 In 12e12) Is Not Null Is Not Null;"),
    octest:ct_string("Detach Delete $usn2[False..`7esn`][`7esn`.._usn3],$12[..7][..07],Single(usn1 In $123456789 Contains usn2 Where Count ( * )[..1e1]) Is Not Null With Distinct $`1esn` Starts With $999 As #usn8,False In $`7esn` In .0 Order By .e12[usn2][01] Desc,0 Ends With $7 Ends With _usn3 Ascending,Extract(@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7|Null Starts With $`7esn` Starts With `2esn`) =~{`5esn`:Count(*)[..`3esn`],usn1:01234567 Ends With 0x0} Descending Skip [1.e1 =~$_usn4,.12 Contains $`4esn` Contains $`6esn`] Ends With Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn8 In .e12 In 9e1) Limit \"d_str\" Where Count(*) In 01 In .0 Union Merge _usn4=(`1esn` {usn1:True[Count(*)..][1e1..],usn1:9e1 Is Null Is Null})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]->(`6esn` {`8esn`:`8esn` In $@usn5}) On Create Set _usn3 =(usn2 :`7esn`{@usn5:usn1[$`3esn`..$999][True..False],`8esn`:$`5esn` Is Null Is Null})-[`5esn`?:_usn4|:@usn5]-(usn1 :`7esn`)<-[`` *12..0xabc]->(:``{_usn3:Count(*)['s_str'..`1esn`],`1esn`:$`6esn`[$`1esn`][1000]}) Is Null Is Null,`1esn` =7 Contains $`5esn` Contains $usn1,usn2 =\"d_str\" =~`3esn` =~0x0 On Match Set @usn6+=(usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1})-[#usn8? *0xabc{`5esn`:0X7[12]}]->(usn1 {`2esn`:True =~@usn5 =~$`1esn`,`2esn`:`6esn`[1.e1..$#usn7][.e0..True]})[Any(_usn4 In usn1 Contains False Contains `` Where 0.12 In 01 In $`3esn`)..Single(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $123456789[..0x0][..`4esn`])][All(`6esn` In 0X7 =~`` Where $`3esn` =~Null)..{`8esn`:0xabc Ends With $#usn7 Ends With #usn8,usn2:usn1[$`3esn`..$999][True..False]}] Match `8esn`=((`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`3esn`?:_usn3|:`4esn`]-(`4esn` {`6esn`:$12[..``][..$7]}))"),
    octest:ct_string("Unwind usn1 Contains $`` As `7esn` Unwind $`6esn` =~1e1 As _usn4"),
    octest:ct_string("Match (@usn5 :usn2:@usn6{`7esn`:1000 Contains 0.e0}) Optional Match ((#usn7 :#usn8{`2esn`:12 =~usn1 =~.e12})-[@usn5?:`3esn`|:`4esn`{`7esn`:Count(*) In 01 In .0,`6esn`:$123456789[..0.12][..#usn7]}]->(`5esn` :`8esn`)<-[`6esn`?:_usn3|:`4esn` *12..0xabc]-(`1esn` :usn1$@usn6)) Where 0.12 Contains $`2esn` Contains $_usn4 Union All Detach Delete $12[..``][..$7] Delete 01234567[$`3esn`..],(:`5esn`{@usn6:0Xa Is Not Null Is Not Null,usn2:@usn6 =~01})<-[`2esn`?*..]->(:#usn8{`5esn`:0 Contains 12e12})<-[?:usn2|#usn8 *00..]-(`6esn` :`5esn`{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]}) Is Null Union With  *,#usn8 Starts With 0x0 Starts With $@usn5,`1esn` In 07 In 0e0 As `1esn` Skip $7[$`8esn`..7][$1000..$`5esn`] Where `7esn` Starts With $`` Starts With $#usn7"),
    octest:ct_string("Unwind 9e0[False] As #usn8 With Distinct *,0.12 In $`4esn` In `6esn`,`4esn`(_usn4[$`4esn`..],0x0[...e12][..@usn5])[..{`3esn`:`8esn`[1000..$7][$`7esn`..`2esn`],_usn4:\"d_str\" Is Null Is Null}] As `2esn` Skip 0X7[..12e12] Unwind `2esn`(Distinct 7[..12e12][..$`6esn`]) In Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where `5esn`[.e1][0Xa]) As _usn3 Union All With  All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) Is Not Null Is Not Null,0xabc[$@usn5] As `7esn`,.e0[usn2..] As _usn3 Skip 0x0 In `8esn` In 999 Where 07[0..`4esn`] Merge ((`5esn` {`5esn`:$`5esn`[False]})<-[?:usn2|#usn8 *00..]-(`6esn` :`5esn`{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]})) Detach Delete .e0[`4esn`..`4esn`][0.0..$0] Union Unwind $`7esn` Ends With 07 Ends With 07 As `3esn` Create ((:`1esn`{`6esn`:$0[..`8esn`],`1esn`:True Starts With $`8esn` Starts With \"d_str\"})-[#usn8? *12..0xabc]-(#usn8 :`4esn`:#usn8{#usn7:$`8esn` Starts With 1000})),({`5esn`:123456789 Starts With `2esn` Starts With .0})-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]-(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa})<-[`` *12..0xabc]->(`3esn` :_usn4:usn1) Match _usn3=((@usn5 {@usn6:0.0[999..],#usn8:Null Is Null Is Null})<-[:`2esn`|usn2 *0..010]->(`2esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})<-[`1esn`:`8esn`|:usn1 *0xabc{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]->(#usn8 :`2esn`:`3esn`{#usn7:Count(*) In 01 In .0,#usn7:12.0[..$7][..999]}))"),
    octest:ct_string("Remove @usn6(Distinct $123456789[..0x0][..`4esn`],07[$999]).@usn6 Create ((usn2 :`7esn`{@usn5:usn1[$`3esn`..$999][True..False],`8esn`:$`5esn` Is Null Is Null})-[@usn5?:@usn6*..]-(@usn5 {@usn6:0.0[999..],#usn8:Null Is Null Is Null})<-[`6esn`?{`7esn`:@usn6 Contains _usn4 Contains $`4esn`}]-(`1esn` :``)),_usn3=({usn1:$1000 Contains $`3esn`})<-[?:`1esn`{`1esn`:123456789[1000]}]->(:usn1{_usn3:'s_str'[..0.0][..$`4esn`],`4esn`:$123456789 Is Not Null Is Not Null})-[@usn6?:#usn7|:_usn4 *00..]->(:`6esn`:`7esn`{@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]}) Detach Delete Extract(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null|12.e12 Ends With 01 Ends With .e1)[00..],({@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]})-[`6esn`?:`4esn`|:`7esn` *0..010{_usn3:$`1esn` Starts With @usn6}]-(`2esn` {#usn8:12.e12[0e0..7]}) In None(@usn5 In 0X7 =~.0 =~\"d_str\" Where 9e0[$_usn3..0X7][7..$#usn8]) In _usn3(Distinct 010[@usn5..]),Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With $usn1|.12 Ends With `1esn` Ends With $`1esn`)[[True[..'s_str'][..01],_usn4 Ends With 01 Ends With $`1esn`,.0[$`6esn`..False]]..`7esn`(Distinct 010 Is Null Is Null,$`8esn`[..$``])][({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})<-[? *0..010]-(`4esn` :`5esn`{_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[:#usn7|:_usn4 *1000..{_usn4:07 In `5esn` In 12e12,@usn6:.0 Is Null Is Null}]->(#usn7 $usn2)..All(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null)];"),
    octest:ct_string("Merge `1esn`=(((:_usn3{@usn6:$`7esn` Is Null Is Null})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :usn2:@usn6)<-[`3esn`? *999..{`6esn`:.e12 =~0.0 =~9e0,@usn6:$usn2 =~$_usn4 =~`5esn`}]->(:@usn6:`7esn`{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`}))) On Match Set _usn3+=01 In 01 In 12,#usn7 =$@usn5,`1esn`:`5esn` Detach Delete $@usn6[_usn3..0.e0] With  [#usn8 In $`5esn` Is Null Is Null][Single(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where #usn7[..$1000][..01])..][[@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7|`6esn`[1.e1..$#usn7][.e0..True]]..],(`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[usn1?:`8esn`|:usn1]->({`6esn`:.e1 Starts With 0.0 Starts With `6esn`,_usn3:$@usn6 Contains 0 Contains $`2esn`})<-[:`2esn`|usn2 *0..010]->(`2esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}) Is Null Is Null As #usn7,1e1[..#usn8][..'s_str'] As #usn8 Order By `3esn`[$123456789][$#usn7] Ascending,{@usn6:12.0[``],_usn4:$`3esn` Contains 0X0123456789ABCDEF Contains 00} Ends With Single(`6esn` In 0X7 =~`` Where 0X7[0e0..]) Ends With Extract(@usn5 In $#usn8 Is Null Is Null Where @usn5 Contains $`1esn` Contains 999|12.0[``]) Asc Skip (:`4esn`:#usn8{@usn6:0 Starts With 12e12 Starts With `4esn`})<-[`6esn`?{`7esn`:.12 Ends With `1esn` Ends With $`1esn`,``:9e0 Starts With `6esn`}]->(:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0}) Starts With Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`) Starts With [12.0 In 1000 In _usn4] Limit 00[01234567][False] Union Detach Delete 01 In _usn3 In 12,`1esn`[`3esn`..][$@usn6..]"),
    octest:ct_string("Detach Delete $#usn7[...e12][..$7],({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})<-[#usn8?:_usn4|:@usn5 *..0x0]-(#usn8 :`1esn`{#usn7:1e1[`6esn`..]}) =~`5esn`(Distinct 0X7 In $@usn5 In 9e0,0x0) Union All Merge usn2=(({`4esn`:#usn7 Starts With 0 Starts With 12,`4esn`:0x0 =~_usn4})-[_usn4?:@usn6 *..7]->(@usn5 :`8esn`)-[@usn5{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8}]->(usn2 :`7esn`{_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`})) On Create Set Any(@usn6 In @usn5 In $`6esn` Where $`5esn` Contains $@usn6).`6esn`? =010[$`8esn`..][0..],`5esn`+=`5esn` In 12,`2esn` =Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`])[..[True =~@usn5 =~$`1esn`]][..Any(#usn8 In $`5esn` Is Null Is Null Where $123456789 Ends With $`6esn`)] On Create Set (#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`})<-[@usn5 *0X0123456789ABCDEF..]-(`5esn` {@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00})<-[``? *..0X7{_usn4:12 Ends With 01 Ends With 1e1}]-(:usn1{`6esn`:1000 Contains 0.e0,`7esn`:$@usn6[..$#usn7][..12.e12]}).`7esn`? =$usn2 =~$_usn4 =~`5esn`,#usn8+=Null[1.e1..],`4esn` =(`3esn` :usn2:@usn6{`4esn`:`7esn` Contains .0 Contains 9e12})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:@usn5{#usn7:1e1[@usn5..]})-[`5esn`? *00..{usn1:07[`6esn`..][`5esn`..],`2esn`:#usn7 Contains .0 Contains .e1}]->(`5esn` :usn2:@usn6)[Filter(@usn6 In @usn5 In $`6esn` Where $999[$1000])..][#usn7($`8esn`[``..][123.654..],12.e12 Contains `5esn`)..] Create ((`3esn` {`8esn`:$``[_usn4..][`7esn`..]})) Union Unwind `1esn`(Distinct Count(*)[..`3esn`]) Starts With $0 As `3esn`"),
    octest:ct_string("Return Distinct *,\"d_str\"[Count ( * )] As `7esn`,0x0[123456789] As @usn6 Skip `1esn`[@usn6..$123456789] Remove Any(`4esn` In $`8esn` Starts With 1000 Where 0X0123456789ABCDEF[.e0..$`4esn`]).`6esn`?,[$0 Ends With $#usn7 Ends With .12,$7,@usn5 Ends With $`3esn` Ends With 12e12].`1esn`? Union Optional Match _usn3=(#usn8 {usn2:7 Contains 9e1})-[`4esn`?:`8esn`|:usn1 *..0x0]->(:@usn6:`7esn`{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`}) Where \"d_str\""),
    octest:ct_string("Match @usn6=((:`7esn`{`2esn`:`` Starts With @usn5,usn2:$`2esn` Starts With .e0 Starts With 12.0})-[`6esn`? *00..{`8esn`:$`2esn`[123456789..][00..],`7esn`:123.654 Contains #usn8}]->(:_usn3{@usn6:$`7esn` Is Null Is Null})),((({_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999})<-[@usn6?:`6esn`*..]-(_usn3 :usn2:@usn6)-[usn1?:`2esn`|usn2 *123456789..999]-(`3esn` :usn2:@usn6))) Where #usn7 Ends With 9e1 Optional Match #usn7=(:#usn7{#usn8:0.12 Contains $`2esn` Contains $_usn4,`2esn`:$`5esn` Starts With _usn3 Starts With @usn5})<-[:@usn5|`8esn`*..]-(`2esn` :usn1{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})-[?:usn1|`3esn` *999..{_usn4:$999[12.0..],usn1:0[usn2..]}]->(:usn2:@usn6{@usn5:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:.12 Ends With $`4esn` Ends With Count(*)}) Match (((@usn6 {#usn7:False[`2esn`..#usn8]})-[? *010]-(`8esn` :@usn5)<-[#usn8?{`5esn`:Null[01234567][01234567]}]->(`6esn` :@usn6:`7esn`{@usn5:True[0x0][@usn6],`5esn`:Null Starts With _usn4 Starts With `6esn`}))),`8esn`=((_usn4 :`3esn`:`1esn`{`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]})) Where Count ( * ) =~Count(*)"),
    octest:ct_string("Detach Delete Extract(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null|12.e12 Ends With 01 Ends With .e1)[00..],({@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]})-[`6esn`?:`4esn`|:`7esn` *0..010{_usn3:$`1esn` Starts With @usn6}]-(`2esn` {#usn8:12.e12[0e0..7]}) In None(@usn5 In 0X7 =~.0 =~\"d_str\" Where 9e0[$_usn3..0X7][7..$#usn8]) In _usn3(Distinct 010[@usn5..]),Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With $usn1|.12 Ends With `1esn` Ends With $`1esn`)[[True[..'s_str'][..01],_usn4 Ends With 01 Ends With $`1esn`,.0[$`6esn`..False]]..`7esn`(Distinct 010 Is Null Is Null,$`8esn`[..$``])][({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})<-[? *0..010]-(`4esn` :`5esn`{_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[:#usn7|:_usn4 *1000..{_usn4:07 In `5esn` In 12e12,@usn6:.0 Is Null Is Null}]->(#usn7 $usn2)..All(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null)]"),
    octest:ct_string("Create @usn5=(({`8esn`:$usn1[0.12..]['s_str'..],`8esn`:`1esn`[0e0..]})-[usn1{`7esn`:``[Count(*)..][@usn5..]}]->(`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`})<-[_usn3?:``|:_usn4 *0xabc{`6esn`:$#usn8 Ends With 1000 Ends With .0,`7esn`:010 =~`6esn`}]-(:usn1{#usn7:12[0X7..@usn6]})),_usn4=(@usn6 {#usn7:False[`2esn`..#usn8]})<-[`6esn`? *00..{`8esn`:$`2esn`[123456789..][00..],`7esn`:123.654 Contains #usn8}]-(`4esn` {@usn6:True[..'s_str'][..01]}) Match ((@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})) Where $`1esn` Starts With $999 Union All Merge #usn7=((#usn7 :`5esn`)<-[:`2esn`|usn2 *07..]-({`7esn`:`6esn` Starts With $@usn6,``:`6esn` =~$_usn3})<-[`1esn`?:`1esn` *01234567..12]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})) Delete ``[$`3esn`][$`2esn`],12 Ends With 01 Ends With 1e1,.12 Starts With 0Xa Union Create (_usn3 :_usn4:usn1),((`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})-[?:@usn6 *..7{#usn8:'s_str'[.12..$#usn7][$999..`2esn`]}]->(@usn5 {_usn4:010[$@usn6],`6esn`:123456789[1e1..0.0]})<-[`6esn`?:`2esn`|usn2 *01234567..12]->(:`7esn`{#usn7:True =~@usn5 =~$`1esn`})) With  @usn6 =~01,12.0 In 1000 In _usn4 As _usn3,0 =~12.e12 =~$`` As #usn7 Order By [usn2 In 1000 Contains 0.e0 Where @usn6[`3esn`..][$7..]] In [0xabc[12.e12..`1esn`]] In {@usn6:$_usn3[..Count ( * )][..@usn5],@usn5:12e12[Null]} Asc,[0.0 =~0X7 =~#usn7,123456789 =~_usn4 =~$0] Ends With `7esn`(Distinct 12.0[..$7][..999],0X7[.e12..01234567]) Descending,Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where usn1 Starts With $#usn7 Starts With `5esn`) Contains @usn5(Distinct 123456789 Starts With `2esn` Starts With .0,123456789 Starts With #usn7 Starts With `6esn`) Contains None(#usn8 In $`5esn` Is Null Is Null Where $#usn8 In .e12 In 9e1) Asc Skip 07 In $7 In 12 Where Count ( * ) Create ((@usn6 {#usn7:False[`2esn`..#usn8]})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]-(`7esn` {_usn3:usn1 Contains $``})-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]-(_usn3 ))"),
    octest:ct_string("Merge @usn5=((@usn6 {`3esn`:0.12 In $7 In 0,_usn3:07[$999]})-[`1esn`:`5esn`|`1esn` *..7{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]}]->(usn2 :@usn6:`7esn`)<-[:@usn5|`8esn` *0Xa{usn1:$1000 Contains $`3esn`}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]})) On Match Set [@usn5 In 0X7 =~.0 =~\"d_str\" Where 12.e12 Ends With 01 Ends With .e1|00 Starts With _usn3].`2esn`? =None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 00 Ends With .12 Ends With `4esn`)[`3esn`(Distinct $`1esn` =~$`1esn` =~#usn7,$@usn5 Contains 01)..] On Match Set _usn4:#usn8 Merge `3esn`=((@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})<-[{_usn3:12.e12 In $0 In Count(*)}]-(:#usn7{`2esn`:.12 Starts With @usn5 Starts With $#usn8})) On Create Set `4esn` =010 In `7esn`,usn2+=0.e0[@usn6][0x0]"),
    octest:ct_string("Merge `2esn`=((usn2 :`7esn`{@usn5:usn1[$`3esn`..$999][True..False],`8esn`:$`5esn` Is Null Is Null})) On Match Set `4esn`+=999 In 9e1 In 7,{`6esn`:$_usn4[$`8esn`..][07..]}.@usn6! =`3esn`[$`1esn`..],Filter(usn2 In 1000 Contains 0.e0 Where 010 =~$usn2 =~1e1)._usn3! =$0 =~$usn1 =~9e1 With  Any(`4esn` In `6esn`['s_str'..][010..] Where $12 Is Null Is Null)[Extract(#usn7 In 01234567[$`3esn`..] Where $@usn6 =~usn1)..] As `3esn` Order By 010 Contains Count(*) Desc,1e1 In $999 In $usn2 Ascending,@usn6(Distinct 12.e12[0e0..7],usn1[Count ( * )..$usn1]) Is Null Is Null Descending Skip True Is Not Null Is Not Null Limit None(usn1 In 00 Starts With _usn3) Contains _usn3(Distinct 0.12 In 01 In $`3esn`,1.e1[0X0123456789ABCDEF..][$`5esn`..]) Contains {_usn4:Count(*)[True]} Unwind 12 =~usn1 =~.e12 As `7esn` Union All Merge _usn3=((#usn8 :`1esn`{#usn7:1e1[`6esn`..]})<-[`3esn`? *123456789..999]->(_usn4 :_usn4:usn1)) Union All Unwind \"d_str\" =~`3esn` =~0Xa As `1esn`"),
    octest:ct_string("With Distinct 0xabc[$@usn5] As usn2,(:`1esn`{@usn5:123456789 Starts With `2esn` Starts With 9e12})-[#usn7? *999..]-(@usn5 :_usn4:usn1{`1esn`:07[1e1],`7esn`:12e12[$`5esn`][07]})-[`6esn`:``|:_usn4 *..01]->(`7esn` :`6esn`:`7esn`{_usn4:07 In `5esn` In 12e12})[Extract(#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|`7esn` Starts With $usn2 Starts With .e0)..Extract(#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str')] Order By $12[01..][1.e1..] Ascending,0x0 =~_usn4 Desc Detach Delete $@usn5 In 12e12 In Count(*),`` =~12 =~$#usn7,Null Contains _usn4 Merge `5esn`=(({_usn3:$0 Ends With $#usn7 Ends With .12})) Union Unwind usn1 Contains False Contains `` As #usn8 Return Distinct _usn3(Distinct 0.12 In 01 In $`3esn`,1.e1[0X0123456789ABCDEF..][$`5esn`..]) Ends With Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) Ends With Filter(usn2 In 1000 Contains 0.e0 Where 12e12 Ends With 010 Ends With .0),$`7esn` In 0.e0 In `4esn` As `2esn` Limit Any(@usn5 In $#usn8 Is Null Is Null Where 0.e0 Ends With 12 Ends With $7) Is Not Null Is Not Null Remove Extract(`4esn` In `6esn`['s_str'..][010..] Where 12 =~usn1 =~.e12|$`2esn`[..`2esn`]).`8esn`!"),
    octest:ct_string("Create (#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]})<-[:`6esn` *..0X7{`3esn`:`1esn` Contains Count ( * ),`7esn`:01234567 =~usn1}]-(:@usn5{`8esn`:$`3esn`[@usn5..$123456789],@usn5:\"d_str\" Starts With $usn1})-[?:#usn7|:_usn4]->(`` :#usn7$0),((:``{`2esn`:9e0[``][123.654],`1esn`:$_usn3[Null]})) Unwind [@usn6 In @usn5 In $`6esn` Where $999[$1000]|$7[.12]] In {`1esn`:$@usn6 Contains 07 Contains 0.e0} In (`2esn` {usn1:@usn6[$`7esn`],_usn3:$@usn6[..12e12]})-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]->(usn1 {#usn7:Count ( * )[@usn6..0x0]})-[@usn6?:#usn8 *..7{@usn5:@usn5 Starts With 12e12 Starts With @usn5}]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3}) As `2esn` Union All Unwind $`5esn`[False] As `6esn` Return *,$0[7..][Null..] As `7esn`,`3esn`()[Filter(usn2 In 1000 Contains 0.e0 Where 0.12 In 01 In $`3esn`)..{@usn6:`6esn`[_usn4..][$`6esn`..]}] Order By (#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :usn2:@usn6)-[`1esn`:`8esn`|:usn1 *0xabc{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]-(@usn5 :#usn8{`1esn`:0xabc Ends With $7 Ends With $`2esn`,_usn4:``})[.._usn4(@usn6[`5esn`..$`3esn`],`8esn`[$``])] Asc,.e1[..$``][..0X0123456789ABCDEF] Ascending Skip 01[..$``][..$`7esn`] Merge `3esn`=(({`5esn`:0.12 Contains .e1})-[usn1?:`2esn`|usn2 *123456789..999]-(usn1 :`7esn`{`1esn`:$@usn6 Contains 07 Contains 0.e0})-[:@usn5|`8esn` *123456789..999{usn1:9e12 Is Not Null Is Not Null}]-(#usn7 :`5esn`)) On Match Set @usn5+=`` In `6esn`,Filter(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`` Is Null Is Null).`` =12.e12 Is Not Null On Match Set `` =None(`4esn` In 's_str'[12..'s_str'])[Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`)..][Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where $@usn6 Contains Count ( * ))..],#usn7($`8esn`[$``..$7][$1000..$`7esn`],`2esn` In 7 In usn2).`6esn`? =$_usn4['s_str'..],`4esn`+=$`7esn` Ends With $usn2 Union Detach Delete $999[..`1esn`],$usn2[$123456789..123.654][$`5esn`..'s_str'] Return 00 Ends With $_usn4 Ends With $`2esn` As `5esn` Order By $`8esn` In \"d_str\" In 9e12 Desc,`3esn`(.e0 =~`5esn`)[Single(`6esn` In 0X7 =~`` Where $`3esn` =~Null)][[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $_usn3[$`4esn`..Null]|False[`2esn`..#usn8]]] Asc,1e1 In 9e0 In 9e0 Ascending"),
    octest:ct_string("With  *,({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})<-[#usn8?:_usn4|:@usn5 *..0x0]-(#usn8 :`1esn`{#usn7:1e1[`6esn`..]}) =~`5esn`(Distinct 0X7 In $@usn5 In 9e0,0x0),\"d_str\" =~`6esn` =~0Xa As `4esn` Detach Delete 0.0[.e12][7],usn1($@usn5[0.12..][@usn5..],\"d_str\" Starts With $usn1) Is Null,#usn8[$_usn3..7][``..$`5esn`];"),
    octest:ct_string("Unwind [@usn5 In 0X7 =~.0 =~\"d_str\" Where #usn7 Starts With 0 Starts With 12][Filter(#usn8 In $`5esn` Is Null Is Null Where $12 Contains 123.654 Contains `8esn`)][[_usn4 In usn1 Contains False Contains `` Where True[..'s_str'][..01]|9e1[0.e0..][#usn8..]]] As `2esn` Merge `8esn`=(:`8esn`) On Match Set [999[``..][Null..],`5esn` =~0Xa].@usn6? =[`6esn` In 0X7 =~`` Where `` Contains 12 Contains True|@usn5[..True][..0X7]][(:`1esn`{@usn5:123456789 Starts With `2esn` Starts With 9e12})-[#usn7? *999..]-(@usn5 :_usn4:usn1{`1esn`:07[1e1],`7esn`:12e12[$`5esn`][07]})-[`6esn`:``|:_usn4 *..01]->(`7esn` :`6esn`:`7esn`{_usn4:07 In `5esn` In 12e12})..{`4esn`:9e0 Starts With `6esn`}][Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `5esn`[`1esn`..`1esn`])..(`3esn` :usn2:@usn6)<-[`7esn`?:@usn5|`8esn`]-(`1esn` :``)],#usn8+={`8esn`:9e1 In 01 In 999}[usn1(1e1[..#usn8][..'s_str'])..{#usn8:$999 Ends With $`3esn` Ends With `8esn`}],`3esn` =7[..0X7][..'s_str'] Merge (#usn8 {`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]})<-[#usn7{#usn7:False[`2esn`..#usn8]}]->(`5esn` :`2esn`:`3esn`{_usn3:$`2esn`[$123456789..$`1esn`][0Xa..$``],`5esn`:12.e12[@usn5..123.654]})<-[? *0xabc{`7esn`:$`5esn` Contains $@usn6,#usn7:12.e12 Ends With 01 Ends With .e1}]->(`7esn` :usn1{`1esn`:00 Starts With _usn3}) On Match Set {`6esn`:$_usn4[$`8esn`..][07..]}.@usn6! =`3esn`[$`1esn`..],Any(usn1 In 0x0[..`4esn`] Where \"d_str\" Contains `3esn` Contains 00)._usn4! =`3esn`[..7][..12e12] On Match Set @usn5 =$usn2 =~$_usn4 =~`5esn`,[`4esn` In `6esn`[1e1..] Where _usn3 Is Null|$`8esn`[..$usn1][..'s_str']].usn1? =$usn2[..12.0],{_usn4:$_usn4[`3esn`][0],`6esn`:False[`2esn`..#usn8]}.`8esn`? =Count(*)[[@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null]..]"),
    octest:ct_string("Return $`1esn` Starts With `8esn` Starts With $0,`` Is Not Null Is Not Null As @usn6,$123456789[$`2esn`][True] As `7esn` Skip {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`} In (:_usn3{`6esn`:.e12[..0.e0][..$`1esn`],`8esn`:7 In 0xabc})-[#usn7:`1esn` *07..]->(:`4esn`:#usn8{_usn4:'s_str' In \"d_str\" In 123456789,`2esn`:0.12 Ends With $usn1 Ends With $@usn5}) In All(@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7) Limit False Ends With $`8esn` Return *,{@usn6:0Xa Is Null Is Null,`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]} =~_usn4(usn2[`3esn`][_usn3]) As `7esn`,0[usn2..] Order By Filter(@usn6 In @usn5 In $`6esn` Where .12[`1esn`..][$`3esn`..]) Is Null Descending,#usn8 In $0 Descending,_usn3 Ends With 0x0 Ends With 01234567 Ascending Skip 1e1[..False]"),
    octest:ct_string("Create @usn5=((:#usn8$usn1)-[`1esn`:`5esn`|`1esn` *..7{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]}]->(usn2 :@usn6:`7esn`)-[_usn4?:#usn8 *..0X7{@usn5:07}]-(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})),((#usn8 :@usn6:`7esn`{``:9e1 Is Not Null Is Not Null})) Unwind .e12 =~0.0 =~9e0 As `8esn` Delete \"d_str\" =~12.e12 =~07,Null[0.e0..0x0] Union Return 010 In @usn6 Order By False Starts With Count ( * ) Ascending,Count ( * )[..1e1] Asc Skip Extract(usn2 In 1000 Contains 0.e0 Where `7esn` Contains .0 Contains 9e12|_usn3 Is Null)[Single(_usn4 In usn1 Contains False Contains `` Where True[..'s_str'][..01])] Union Unwind usn2 Starts With @usn6 As #usn7 With  $`2esn`[..`2esn`] As `5esn` Order By _usn3 =~00 Asc Where #usn7 Ends With `4esn` Ends With @usn5"),
    octest:ct_string("Detach Delete $`3esn` Contains 0X0123456789ABCDEF Contains 00,Extract(usn2 In 1000 Contains 0.e0 Where True[Count(*)..][1e1..]|1000[..$`6esn`][..0xabc]) Ends With [07[$999],12e12[Count ( * )..][usn2..]] Unwind 0X7[0e0..] As `5esn` Union Create ((usn2 {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})-[`1esn`{_usn4:`3esn` Contains 0Xa}]-(:usn2:@usn6{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8})),((`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`3esn`?:_usn3|:`4esn`]-(`4esn` {`6esn`:$12[..``][..$7]})) Detach Delete 1000 In 0X0123456789ABCDEF In 01,`3esn`()[Filter(usn2 In 1000 Contains 0.e0 Where 0.12 In 01 In $`3esn`)..{@usn6:`6esn`[_usn4..][$`6esn`..]}],Extract(usn1 In 0x0[..`4esn`] Where \"d_str\" Contains `3esn` Contains 00|Count(*) Ends With 010)[All(usn2 In 1000 Contains 0.e0 Where #usn8 Ends With `4esn` Ends With $`4esn`)..@usn6(Distinct _usn3 In .e1 In $12,123.654 Starts With usn1 Starts With @usn5)][All(usn2 In 1000 Contains 0.e0 Where 0.0[1000..][.e1..])..{`7esn`:`2esn`[$`1esn`..][$_usn3..]}] Create `5esn`=((:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[`6esn`:``|:_usn4 *..01]->(`5esn` {_usn4:0X7 =~``})-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(usn2 :usn1{``:9e12 Ends With 0X0123456789ABCDEF Ends With #usn7}));"),
    octest:ct_string("Detach Delete 9e1 Starts With 9e1 Starts With 010,010 Contains 0X0123456789ABCDEF,(`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]})<-[`1esn`:`8esn`|:usn1 *0xabc{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]->(#usn8 :`2esn`:`3esn`{#usn7:Count(*) In 01 In .0,#usn7:12.0[..$7][..999]})<-[usn1?:`1esn`{#usn7:9e12 Is Not Null Is Not Null,usn2:`3esn` =~0.0 =~$``}]->(:`4esn`:#usn8{@usn6:0 Starts With 12e12 Starts With `4esn`})[Single(`4esn` In 's_str'[12..'s_str'])..#usn8($12 Contains 123.654 Contains `8esn`,0xabc Ends With $#usn7 Ends With #usn8)] Delete [12.e12 Ends With 01 Ends With .e1,$@usn5[0.12..][@usn5..],$usn1 In 1000 In $#usn7] Is Not Null,9e1[...e0],`6esn` Starts With $`5esn` Unwind All(`4esn` In $`8esn` Starts With 1000) Is Not Null As _usn4 Union Merge _usn3=((_usn4 {#usn8:@usn5 In $`6esn`,`7esn`:010 =~`6esn`})-[`5esn`? *00..{usn1:07[`6esn`..][`5esn`..],`2esn`:#usn7 Contains .0 Contains .e1}]->(#usn7 :`7esn`{`4esn`:.12 Starts With .12 Starts With `3esn`})-[{`5esn`:.e1[..$``][..0X0123456789ABCDEF]}]->(_usn3 {`5esn`:0.12 Contains .e1})) Optional Match #usn7=(`4esn` :`1esn`{`8esn`:12 Ends With .e12 Ends With $7,`8esn`:0.0[12...12]})<-[`2esn` *12..0xabc{`6esn`:$123456789[0.0..],@usn5:999[$`6esn`]}]-(`7esn` {`8esn`:0X0123456789ABCDEF In $1000 In $`3esn`})-[usn1{`7esn`:``[Count(*)..][@usn5..]}]->(`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}) Match `1esn`=((`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]}))"),
    octest:ct_string("Optional Match ((:_usn3{usn2:$`5esn`[$123456789][`1esn`]})),((#usn7 :#usn8{`2esn`:12 =~usn1 =~.e12})) Where 01234567[Null..0.e0][Count(*)..$#usn8]"),
    octest:ct_string("Create (((`` :@usn6:`7esn`{`2esn`:0.12[0.e0..][`4esn`..]})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->(`8esn` :_usn3{`8esn`:$`3esn` In $12 In 's_str'})-[`7esn`{usn1:0 Is Not Null}]->(:`7esn`{`6esn`:123456789 Is Null,`1esn`:00 In 12.e12}))),`4esn`=((`2esn` :`6esn`:`7esn`{`6esn`:$#usn8 Ends With 1000 Ends With .0,`7esn`:010 =~`6esn`})) Return $`6esn` =~$#usn8 As #usn8 Order By (#usn7 :#usn8)-[`6esn`:`4esn`|:`7esn` *..0x0]->({`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})[Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`])][Filter(`4esn` In `6esn`['s_str'..][010..] Where @usn6[$`7esn`])] Descending Limit Null Contains 9e1 Union All Return Count ( * )[Count ( * )..12e12][usn1..1000] Order By $`1esn`[$usn2..][$1000..] Descending Skip Filter(`6esn` In 0X7 =~`` Where $0[$#usn8..01234567])[{`7esn`:Null[0e0][12],#usn8:$12[..``][..$7]}..][Filter(usn1 In 0x0[..`4esn`] Where $usn1[0.12..]['s_str'..])..] Union With  $`6esn` Is Null Is Null As `4esn` Order By [_usn4 In usn1 Contains False Contains `` Where True[..'s_str'][..01]][[.0 Starts With `2esn` Starts With `6esn`,9e1[0.e0..][#usn8..]]..][[07[$999],9e0 In 01234567,@usn5 In 0X0123456789ABCDEF]..] Asc,0 Is Not Null Descending,1e1[..#usn8][..'s_str'] Descending Where 9e12 Is Not Null Is Not Null;"),
    octest:ct_string("Match ((({`1esn`:12[..9e0][..999],usn1:0x0 =~$`7esn` =~@usn6})-[#usn8:`3esn`|:`4esn` *0..010]-(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]})<-[_usn3]->(_usn4 :`3esn`:`1esn`{`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]}))),usn1=((#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]})) Where 1000 Ends With 1000 Ends With $`4esn` Remove None(usn1 In 0x0[..`4esn`] Where $1000 Is Null Is Null).`6esn`,Extract(_usn4 In usn1 Contains False Contains `` Where 0X7 In 123.654 In $`2esn`|9e1 Starts With `1esn` Starts With 0Xa)._usn4?,(usn2 :`3esn`:`1esn`)-[ *..7]-(usn1 :`4esn`:#usn8)-[?:`3esn`|:`4esn`]-(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]}).@usn5? Create ((`4esn` :`7esn`{`7esn`:@usn6 Contains _usn4 Contains $`4esn`})),(`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})-[? *..0X7{`3esn`:`8esn`[$``]}]->({`2esn`:@usn5 In 0X0123456789ABCDEF,`1esn`:@usn6[`5esn`..$`3esn`]})-[?:usn1|`3esn`{#usn8:1000[..$`6esn`][..0xabc]}]->(usn1 :_usn3{@usn6:True[..'s_str'][..01]}) Union Create ((:`6esn`:`7esn`{_usn4:12[0X7..@usn6],_usn3:123456789 In $usn2 In `6esn`})<-[#usn7?:_usn3|:`4esn` *00..]->(:`6esn`:`7esn`{_usn3:\"d_str\" Is Null Is Null})<-[@usn6]->(:#usn7{`6esn`:.e12 =~0.0 =~9e0,@usn6:$usn2 =~$_usn4 =~`5esn`})),((#usn7 {#usn7:01234567[.12..7][1000..1.e1],``:@usn5 Ends With 1.e1 Ends With 0X0123456789ABCDEF})<-[? *1000..{_usn4:$`6esn`[$`1esn`][1000],`2esn`:12e12[$`5esn`][07]}]->(:``{`2esn`:9e0[``][123.654],`1esn`:$_usn3[Null]})) With  `` In `5esn` In $usn2 As ``,`3esn` =~`3esn` =~$`6esn` As `7esn`,$`6esn` Is Null Is Null Order By #usn8 Starts With 0x0 Starts With $@usn5 Descending,$`7esn` Ends With $usn2 Asc,9e12[0.0..12.e12] Ascending Limit 0x0[..$`6esn`][..$#usn8] Return Null Is Null Is Null,`2esn` In 12.e12 In `3esn` As `1esn`,Single(usn1 In 0x0[..`4esn`] Where 1e1 In $#usn8 In 12e12) Is Not Null Is Not Null As `5esn` Limit $_usn4[0.12..$`6esn`][00..$@usn6] Union Remove #usn7:#usn7 Detach Delete $usn1[0.12..]['s_str'..],usn2 Starts With `6esn` Starts With 12e12,True[Count(*)..][1e1..] Delete Count ( * )[1000],usn2 =~0x0,@usn6 Starts With `3esn`"),
    octest:ct_string("Merge #usn7=((`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`3esn`?:_usn3|:`4esn`]-(`4esn` {`6esn`:$12[..``][..$7]})) On Create Set usn2 =0.0[..12e12][..$0] Merge (_usn4 {@usn5:$_usn3[$`4esn`..Null]}) On Create Set @usn5(Distinct 12e12[_usn3..][$@usn5..],7 Contains 9e1).`6esn` =$@usn5 In 12e12 In Count(*) On Match Set _usn3:@usn5,Any(usn1 In $123456789 Contains usn2 Where usn2 Is Not Null).#usn7 =All(`6esn` In 0X7 =~`` Where $1000[01234567]) In usn1(),`` =None(@usn5 In 0X7 =~.0 =~\"d_str\" Where _usn3[...e1])[[_usn4 In usn1 Contains False Contains `` Where 0.12 In $7 In 0]..][[7[..12e12][..$`6esn`]]..] Detach Delete $`1esn` Ends With $`1esn` Union Optional Match (_usn4 :`4esn`:#usn8{@usn5:$_usn4[12e12][`4esn`],`4esn`:False In `3esn`})-[`6esn`:``|:_usn4 *..01]->(`5esn` :#usn7) Where $1000[01234567] Unwind Count(*) Is Null As `2esn`;"),
    octest:ct_string("With  $`8esn` In \"d_str\" In 9e12 Order By 0X0123456789ABCDEF Is Null Is Null Descending Skip Any(@usn5 In $#usn8 Is Null Is Null Where .e1 In $@usn6 In 999) In None(usn1 In 0x0[..`4esn`] Where $123456789[..0x0][..`4esn`]) Return Distinct *,$`1esn`[9e1.._usn4][$999..$`2esn`] As `8esn` Order By None(`4esn` In 's_str'[12..'s_str'] Where $`3esn`[@usn5..$123456789])[(`` {`8esn`:0X7 In $@usn5 In 9e0,_usn3:@usn6[$`3esn`]})-[usn1{#usn7:7 Contains 9e1,`5esn`:$`` Ends With 12e12}]->(:#usn7{`7esn`:\"d_str\",usn2:True[`4esn`][$`6esn`]})..0e0][{`1esn`:$@usn6 Contains 07 Contains 0.e0}..{`3esn`:0.12 In $7 In 0,_usn3:07[$999]}] Asc,12e12[.12..] Descending Skip [\"d_str\" Starts With $usn1,.12 Contains $`4esn` Contains $`6esn`,01234567 =~usn1] Is Null Is Null Union Optional Match usn2=((#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})-[`6esn`?:usn1|`3esn`{`2esn`:1e1[@usn5..],`3esn`:$`6esn`[`3esn`..0e0]}]->(:`4esn`:#usn8{usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null})),((usn1 :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(:#usn7{`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})-[?{@usn5:12.e12['s_str'],`1esn`:_usn3 Ends With 12e12 Ends With .e0}]-(`8esn` :`7esn`)) Union Return Distinct *,\"d_str\" =~`6esn` =~0Xa As `4esn` Order By (`8esn` :usn2:@usn6)<-[#usn7:`3esn`|:`4esn` *00..]->(`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}) =~{@usn6:$_usn3[..Count ( * )][..@usn5],@usn5:12e12[Null]} =~Extract(usn2 In 1000 Contains 0.e0 Where $`7esn` Ends With $`2esn` Ends With $usn1) Descending,$`2esn` Ends With `3esn` Ends With $7 Desc Skip `` Is Not Null Is Not Null Remove [usn2 In 1000 Contains 0.e0 Where 0.12 In 01 In $`3esn`|`3esn` =~0.0 =~$``].#usn7?,(:usn1{`1esn`:`6esn` Starts With $usn2 Starts With 0.0})<-[#usn7:`3esn`|:`4esn` *00..]->({`6esn`:9e1[.12..],`5esn`:0.12 In $`4esn` In `6esn`})-[`6esn`:`4esn`|:`7esn` *..0x0]->(:usn1{`6esn`:1000 Contains 0.e0,`7esn`:$@usn6[..$#usn7][..12.e12]}).usn2 Remove Extract(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 0.12 Ends With $usn1 Ends With $@usn5|0X0123456789ABCDEF[.e0..$`4esn`]).`7esn`?"),
    octest:ct_string("Create `3esn`=((#usn8 {`2esn`:$`5esn` Contains Count(*) Contains #usn7,_usn4:Null Starts With $`7esn` Starts With `2esn`})<-[`6esn`:`4esn`|:`7esn` *..0x0]->(#usn8 :@usn5)-[`6esn`:``|:_usn4 *..01]->(`5esn` :#usn7)) Optional Match usn1=(usn2 {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})<-[:`5esn`|`1esn`{`4esn`:9e0[True..`1esn`],@usn6:7 =~9e0 =~'s_str'}]->(#usn7 {`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null}) Match ((:`5esn`{`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]})<-[`6esn`?{`7esn`:.12 Ends With `1esn` Ends With $`1esn`,``:9e0 Starts With `6esn`}]-(usn1 :_usn3{@usn6:True[..'s_str'][..01]})) Union All Unwind 12.e12[$1000..] As `4esn`"),
    octest:ct_string("With Distinct Extract(`4esn` In `6esn`['s_str'..][010..] Where $12 Is Null Is Null) Ends With `2esn`(`7esn`[Null..][@usn5..],123.654[12.e12..1e1]) Ends With Any(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 010[$@usn6]) As `7esn`,$usn2 In 9e0 In $7 Order By @usn5 Starts With 12e12 Starts With @usn5 Desc Skip $``[_usn4..][`7esn`..] Optional Match ``=((_usn4 )-[#usn7:_usn3|:`4esn` *..0x0{usn2:$#usn7 In 12.0 In 0X0123456789ABCDEF,`6esn`:`7esn`[1e1..07][0x0..Count ( * )]}]->(`6esn` {`2esn`:$`2esn`[..`2esn`],usn1:False[0Xa..$@usn5][$`6esn`..12e12]})) Union Unwind 9e12 As `7esn` Unwind 12.e12 Contains $`5esn` As #usn7 Remove {`6esn`:$`8esn`[``..][123.654..],``:999[$`6esn`]}.``,[0X7[..12e12],$`6esn`[$`1esn`][1000]].usn2?"),
    octest:ct_string("Optional Match `1esn`=((@usn5 {@usn6:$123456789[0X7..12.e12]})<-[:`5esn`|`1esn`]-(#usn8 {@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null})) Merge usn2=((`3esn` :`4esn`:#usn8)<-[?:@usn6]-(`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})-[usn2?:`2esn`|usn2*..{@usn5:$1000[01234567],@usn5:0x0[$`3esn`..010][$#usn7..00]}]->(`4esn` {#usn8:`1esn`[0e0..],#usn7:$`6esn`[..0X0123456789ABCDEF]})) On Match Set (@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})-[`2esn`]-({`4esn`:$_usn3[..Count ( * )][..@usn5],#usn8:_usn3 =~00})<-[`6esn`?{`7esn`:.12 Ends With `1esn` Ends With $`1esn`,``:9e0 Starts With `6esn`}]->(:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})._usn3 =123.654 Contains `2esn`,`3esn` =Extract(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null|12.e12 Ends With 01 Ends With .e1) Ends With $0 Ends With All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`),{`6esn`:$_usn4[$`8esn`..][07..]}.@usn6! =`5esn`[.e1][0Xa] Union Create `5esn`=((:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[`6esn`:``|:_usn4 *..01]->(`5esn` {_usn4:0X7 =~``})-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(usn2 :usn1{``:9e12 Ends With 0X0123456789ABCDEF Ends With #usn7})) With Distinct 0xabc[$@usn5] As usn2,(:`1esn`{@usn5:123456789 Starts With `2esn` Starts With 9e12})-[#usn7? *999..]-(@usn5 :_usn4:usn1{`1esn`:07[1e1],`7esn`:12e12[$`5esn`][07]})-[`6esn`:``|:_usn4 *..01]->(`7esn` :`6esn`:`7esn`{_usn4:07 In `5esn` In 12e12})[Extract(#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|`7esn` Starts With $usn2 Starts With .e0)..Extract(#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str')] Order By $12[01..][1.e1..] Ascending,0x0 =~_usn4 Desc Create ((`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})-[?:@usn6 *..7{#usn8:'s_str'[.12..$#usn7][$999..`2esn`]}]->(@usn5 {_usn4:010[$@usn6],`6esn`:123456789[1e1..0.0]})<-[`6esn`?:`2esn`|usn2 *01234567..12]->(:`7esn`{#usn7:True =~@usn5 =~$`1esn`})),`6esn`=({`8esn`:$@usn5 Contains 01,`2esn`:123.654 Contains #usn8})-[{`5esn`:.e1[..$``][..0X0123456789ABCDEF]}]->(_usn3 {`5esn`:0.12 Contains .e1})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]}) Union Detach Delete Single(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $123456789 Ends With $`6esn`)[Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn7 In .e1 In 01)..][{`1esn`:@usn6[`5esn`..$`3esn`],_usn3:$999 Ends With $`3esn` Ends With `8esn`}..],All(_usn4 In usn1 Contains False Contains `` Where #usn8[$#usn8..])[(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})..] Match (`6esn` :`5esn`)<-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]-(`4esn` {`7esn`:.e0[..999][..0X7]})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :usn2:@usn6),_usn3=(($999)) Where 0X7 =~`` Return 0X7 In $@usn5 In 9e0,$`1esn`[9e1.._usn4][$999..$`2esn`] Skip $`5esn` In `2esn` In .0 Limit .0 Is Null Is Null"),
    octest:ct_string("Create ((({`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})<-[?:@usn6]-(`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})-[:_usn4|:@usn5]->(`5esn` :#usn7))) Union All With  *,$0[..`8esn`] As _usn4 Order By 0 Starts With `6esn` Starts With 0X0123456789ABCDEF Descending,12.e12 In .e0 In `7esn` Descending Limit `8esn` Ends With 0X0123456789ABCDEF Ends With `1esn` Unwind $_usn4[$`5esn`..`1esn`][@usn6..01] As _usn3 Union All Unwind 123456789 =~Filter(usn2 In 1000 Contains 0.e0 Where 0X7[0e0..]) =~{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999} As `7esn` Merge `4esn`=((#usn8 {usn2:7 Contains 9e1})-[`6esn`? *00..{`8esn`:$`2esn`[123456789..][00..],`7esn`:123.654 Contains #usn8}]->(:_usn3{@usn6:$`7esn` Is Null Is Null})) On Create Set usn2:usn1,None(_usn4 In usn1 Contains False Contains `` Where .12 In $999 In `5esn`).usn2 =9e0 In 01234567,`8esn` =$@usn5 Ends With 0X0123456789ABCDEF;"),
    octest:ct_string("Unwind Any(@usn5 In $#usn8 Is Null Is Null Where .e1 In $@usn6 In 999) In None(usn1 In 0x0[..`4esn`] Where $123456789[..0x0][..`4esn`]) As usn2 Optional Match `1esn`=((usn2 :@usn5{`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})<-[#usn8? *0xabc{`5esn`:0X7[12]}]->(`4esn` {usn2:7 In 0xabc})),_usn4=((`2esn` :``)<-[`1esn`?:`1esn` *01234567..12]->(`8esn` {`6esn`:00 In 12.e12})) Where _usn4 Starts With 0X7 Merge usn1=(`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[?:`2esn`|usn2{@usn6:0.12[0.e0..][`4esn`..]}]->(usn1 :#usn8)<-[ *..0x0{`4esn`:$`7esn`[$usn1..][0.0..],`1esn`:$123456789[..0x0][..`4esn`]}]->(#usn8 :`4esn`:#usn8{#usn7:$`8esn` Starts With 1000}) On Match Set `2esn`+=123.654 In \"d_str\" In $_usn3 Union All Unwind {#usn8:0X0123456789ABCDEF[..usn1]} Ends With (:``{_usn3:0X0123456789ABCDEF In 01234567})<-[``? *..0X7{_usn4:12 Ends With 01 Ends With 1e1}]-(usn2 :@usn6:`7esn`)-[:usn2|#usn8*..]-(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12}) Ends With [1e1 In $#usn8 In 12e12,123.654 Contains #usn8] As _usn3 Return 0.12[Count(*)..] Order By [@usn5 In .12[#usn7][$`8esn`] Where .e12 =~0.0 =~9e0] Is Null Ascending,`2esn` Is Not Null Is Not Null Ascending,12.0 In 1000 In _usn4 Desc Skip 9e12[$1000][$@usn6] Limit $@usn6 Contains Count ( * ) Unwind 010 In @usn6 As usn2"),
    octest:ct_string("Remove Filter(usn1 In 00 Starts With _usn3 Where 123456789[`4esn`..][Count ( * )..])._usn3,`8esn`:`3esn`:`1esn`,[usn1 In 00 Starts With _usn3 Where False[.e1..Null]].`4esn`? Return $_usn4[12e12][`4esn`] As `5esn`,@usn6[`5esn`..$`3esn`] As ``,0.0[..12e12][..$0] Order By usn2[$`1esn`...0] Descending,123.654 Is Not Null Is Not Null Desc Limit 0X7 =~`4esn` =~`8esn` Delete 9e0 =~$`5esn`,@usn5 =~.0 =~$`1esn`,Extract(usn1 In 00 Starts With _usn3 Where 00|0 Is Not Null Is Not Null) Starts With (:``{_usn3:Count(*)['s_str'..`1esn`],`1esn`:$`6esn`[$`1esn`][1000]})-[? *00..{_usn3:07[Count ( * )...e1][0X0123456789ABCDEF..$7],`1esn`:$`2esn` =~'s_str'}]->(_usn4 )<-[`2esn`?]-(usn2 :`3esn`:`1esn`) Starts With {_usn3:'s_str' =~0.e0};"),
    octest:ct_string("Match `4esn`=(({``:$1000 Is Null Is Null})-[ *00..{`2esn`:$0 Is Not Null}]-(:`4esn`:#usn8{_usn4:'s_str' In \"d_str\" In 123456789,`2esn`:0.12 Ends With $usn1 Ends With $@usn5})<-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(`5esn` :`6esn`:`7esn`{`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]})),`6esn`=({`8esn`:$@usn5 Contains 01,`2esn`:123.654 Contains #usn8})-[{`5esn`:.e1[..$``][..0X0123456789ABCDEF]}]->(_usn3 {`5esn`:0.12 Contains .e1})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]}) Detach Delete [#usn8 In $`5esn` Is Null Is Null Where 0.0[..12e12][..$0]][{`2esn`:.e1 In $@usn6 In 999,usn2:@usn5 Ends With $`3esn` Ends With 12e12}..]"),
    octest:ct_string("Unwind usn2(Distinct 0xabc Contains Null Contains 9e12,12[..True][..$`4esn`]) Is Null As `3esn`;"),
    octest:ct_string("Merge `5esn`=(((`5esn` :`6esn`:`7esn`{`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->(`2esn` :usn2:@usn6)-[?:@usn6 *00..{@usn5:$`5esn`[False],`4esn`:usn1[..$_usn4][..``]}]->(:``{`1esn`:`6esn` =~$_usn3}))) On Match Set _usn3+=07 In Count ( * ) In \"d_str\" Union All Unwind 010 In @usn6 As usn2 Union Merge `5esn`=(`8esn` :_usn3{`8esn`:$`3esn` In $12 In 's_str'}) Merge (#usn7 :`6esn`:`7esn`)<-[`3esn`?:_usn3|:`4esn`]->(:`1esn`{_usn4:$_usn3[Null]})-[ *..0X7]->(`5esn` :_usn4:usn1) On Match Set `1esn`+=Single(`4esn` In `6esn`['s_str'..][010..] Where 12.0 Contains 0.e0)[..Any(`4esn` In 's_str'[12..'s_str'] Where Count(*)[`7esn`..$12])][..Extract(@usn5 In .12[#usn7][$`8esn`] Where 01234567 =~usn1)],({`5esn`:Count(*)[..`3esn`],usn1:01234567 Ends With 0x0})<-[`7esn` *..0x0]->(`5esn` {`5esn`:$`5esn`[False]})-[?:usn2|#usn8{`2esn`:@usn5 In 0X0123456789ABCDEF,`1esn`:@usn6[`5esn`..$`3esn`]}]->(`4esn` {`7esn`:.e0[..999][..0X7]}).usn2 =`8esn`[$#usn7],`1esn`+=$1000[01234567];"),
    octest:ct_string("Merge (((usn2 :#usn8{_usn3:$_usn3[..Count ( * )][..@usn5]})-[`1esn`:`1esn`{``:_usn3[...e1],`2esn`:.12[`1esn`..][$`3esn`..]}]-(`7esn` :_usn4:usn1)<-[@usn5:#usn8{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]-(#usn8 :_usn3))) With Distinct None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where _usn3[...e1]) In (:_usn4:usn1{``:123456789 Starts With `2esn` Starts With .0,`5esn`:``})<-[usn2?:usn2|#usn8{`6esn`:$123456789[$`2esn`][True],@usn5:$`3esn` =~$`6esn` =~`8esn`}]-({`5esn`:0e0 =~_usn4})-[_usn4:_usn3|:`4esn` *1000..{#usn8:$999 Ends With $`3esn` Ends With `8esn`}]->(#usn7 :`7esn`{`4esn`:.12 Starts With .12 Starts With `3esn`}) As _usn3 Skip `2esn` Is Not Null Is Not Null Limit None(usn1 In 0x0[..`4esn`] Where $`2esn` Contains usn1 Contains `2esn`)[..Extract(`6esn` In 0X7 =~`` Where $usn2 Contains 12.e12 Contains 00|$#usn8 Ends With 1000 Ends With .0)][..[@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where #usn7 Ends With 9e1]] Union All Unwind $usn1[1e1.._usn3][$@usn6..$#usn7] As usn1 With Distinct Count ( * ) Ends With 1000 Ends With 12 As _usn4,False[..12.e12] Skip {usn2:123456789 Starts With `2esn` Starts With 9e12} Ends With All(usn2 In 1000 Contains 0.e0 Where 01234567[Null..0.e0][Count(*)..$#usn8]) Where 0 Is Null Is Null Delete `2esn`[_usn3..$``],#usn8 Starts With 0x0 Starts With $@usn5"),
    octest:ct_string("Unwind $usn2[False..`7esn`][`7esn`.._usn3] As _usn4 Union All Unwind 9e12 As `5esn`"),
    octest:ct_string("Create (({#usn8:12.0[..$7][..999],@usn5:$`1esn` Is Null})<-[``?:`1esn` *0xabc{`5esn`:$``[_usn4..][`7esn`..]}]->(#usn7 :@usn6:`7esn`{_usn3:\"d_str\" =~`3esn` =~0Xa})) Unwind [@usn6 In @usn5 In $`6esn` Where $usn2 Is Not Null|$`6esn`[..0X0123456789ABCDEF]][`5esn`(Distinct 0X7 In $@usn5 In 9e0,0x0)..] As `3esn` Union All Create `8esn`=(`4esn` {`3esn`:0X7[..12e12],`8esn`:False In 123456789 In $0})-[`4esn`?:`1esn`]->(:`2esn`:`3esn`{usn2:$`5esn` In False})<-[#usn7? *00..]->({`4esn`:$usn1[1e1.._usn3][$@usn6..$#usn7],`3esn`:9e0[``][123.654]}),`7esn`=((:`2esn`:`3esn`{usn2:9e12[@usn6..$``][#usn8..Count ( * )],`3esn`:$1000 In $`7esn` In $7})<-[`6esn`:_usn4|:@usn5 *..7{_usn4:0.0 =~0X7 =~#usn7}]->(`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})-[`8esn` *..0x0]-(:`2esn`:`3esn`{usn2:$`5esn` In False})) Return Distinct *,1.e1[Null][12.e12] As ``,Filter(@usn6 In @usn5 In $`6esn` Where .12[`1esn`..][$`3esn`..]) As _usn3 Order By 0.e0[`6esn`...e0][9e12...e12] Descending,_usn3 In .e1 In $12 Asc Skip [$`4esn`[9e1..][0..]][Any(`4esn` In $`8esn` Starts With 1000 Where 0.e0[9e1..][0.0..])..Single(#usn8 In $`5esn` Is Null Is Null Where 1000 Ends With 1000 Ends With $`4esn`)] Limit 123456789 =~_usn4 =~$0 Return Distinct $@usn5 =~$`` =~$usn2 As @usn6,usn1 Is Not Null Is Not Null,01 In 01 In 12 Order By Extract(usn2 In 1000 Contains 0.e0 Where 0X7 =~`4esn` =~`8esn`) Contains [0 Contains 12e12,0xabc Ends With $7 Ends With $`2esn`,0x0 =~_usn4] Ascending,07[1e1] Ascending Limit $`8esn` Starts With 1000;"),
    octest:ct_string("With Distinct Extract(#usn7 In 01234567[$`3esn`..] Where 0xabc[$@usn5])[All(`4esn` In 's_str'[12..'s_str'] Where $_usn4[12e12][`4esn`])][(`6esn` :`5esn`)<-[:``|:_usn4 *0Xa]->(`7esn` :`2esn`:`3esn`)] As @usn5,12 Is Null Is Null As #usn7 Limit 0.12 Starts With {`1esn`:@usn6[..0xabc][..$#usn7]} Starts With {`3esn`:`8esn`[1000..$7][$`7esn`..`2esn`],_usn4:\"d_str\" Is Null Is Null} Where 12[..9e0][..999]"),
    octest:ct_string("Create ((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})-[?:usn1|`3esn`{#usn8:1000[..$`6esn`][..0xabc]}]->(:_usn4:usn1{``:123456789 Starts With `2esn` Starts With .0,`5esn`:``})-[``?:usn1|`3esn`]->(:@usn5{#usn7:1e1[@usn5..]})) Unwind Null Is Null Is Null As usn1 Union With Distinct [@usn5 In .12[#usn7][$`8esn`] Where $@usn5 =~$`` =~$usn2] Is Null,00[7..$123456789] Order By $usn2 Is Not Null Is Not Null Desc Limit `8esn` Ends With 999 Ends With 9e0 Remove {_usn3:$_usn4[$`1esn`]}.@usn6!,`8esn`($_usn4[#usn8..],123456789 Starts With `2esn` Starts With .0).usn1?,Extract(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6|1e1 Is Null).#usn7? Detach Delete [`4esn` In 's_str'[12..'s_str'] Where 9e12 =~01 =~$`7esn`][#usn7(00 In 12.e12)..Extract(usn1 In 0x0[..`4esn`] Where 1000 Ends With 1000 Ends With $`4esn`|@usn6[$`3esn`])][(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})<-[`8esn`]->(#usn8 )<-[`3esn` *00..{`8esn`:@usn6 Contains .e1 Contains $`4esn`,_usn4:0X7[..12e12]}]->(@usn5 {`1esn`:0[usn2..]})..(usn1 :_usn4:usn1)<-[@usn5?:`1esn`]-(#usn7 :`2esn`:`3esn`)] Union Unwind [usn1 In 00 Starts With _usn3 Where False[.e1..Null]|1000[0.0][Null]][Filter(usn2 In 1000 Contains 0.e0 Where $`7esn` Ends With $`2esn` Ends With $usn1)..][Single(usn2 In 1000 Contains 0.e0 Where 0e0 Is Not Null Is Not Null)..] As `5esn` Remove {`8esn`:Count ( * ) =~Count(*)}.`6esn`,({@usn6:0X0123456789ABCDEF[..usn1]})<-[:``|:_usn4 *0Xa]->(`7esn` :`2esn`:`3esn`)._usn4?,(:`4esn`:#usn8)<-[_usn4:`7esn`|`2esn`]-(`5esn` {`8esn`:0.0[12...12]})<-[#usn7:`3esn`|:`4esn` *00..]-(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]}).`4esn`"),
    octest:ct_string("Remove #usn7(Distinct 0 Starts With 12e12 Starts With `4esn`,.0 Starts With `2esn` Starts With `6esn`).``!,[0x0[..`4esn`],$7].#usn7! Unwind .e12[usn2][01] As _usn3"),
    octest:ct_string("Create usn1=((`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})),(({#usn8:12.0[..$7][..999],@usn5:$`1esn` Is Null})<-[``?:`1esn` *0xabc{`5esn`:$``[_usn4..][`7esn`..]}]->(#usn7 :@usn6:`7esn`{_usn3:\"d_str\" =~`3esn` =~0Xa})) Return Distinct 1e1[..#usn8][..'s_str'] As #usn8,7 Is Null Skip {usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null} Is Not Null Is Not Null Merge `6esn`=(:`3esn`:`1esn`{_usn4:`1esn`[@usn6..$123456789],`4esn`:$usn2[..12.0]})<-[``?:@usn6]-(`6esn` :`3esn`:`1esn`{`7esn`:7 In 0xabc})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]}) On Create Set usn1 =00 In 0.12 In `5esn`,[@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where .e0[..999][..0X7]]._usn4 =(`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})<-[{_usn3:12.e12 In $0 In Count(*)}]->({`6esn`:$_usn4[$`8esn`..][07..]}) Ends With Any(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn7 In .e1 In 01) Ends With usn2(Distinct _usn3 Contains @usn6 Contains 1.e1) On Match Set [usn1 In 0x0[..`4esn`] Where $#usn7 In .e1 In 01|`1esn`[@usn6..$123456789]].`8esn`? =Any(`6esn` In 0X7 =~`` Where 0X7[..12e12]),@usn5 =Any(@usn5 In $#usn8 Is Null Is Null Where True[Count(*)..][1e1..]) Is Not Null,_usn3+=$@usn5 =~$`` =~$usn2 Union All Unwind $`4esn`[9e1..][0..] As _usn3 Remove All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `5esn`[`1esn`..`1esn`]).`5esn` Remove (`` {`5esn`:0X0123456789ABCDEF[.e0..$`4esn`]})<-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :`4esn`:#usn8).@usn5,({@usn6:0X7 In $999 In $``})-[`7esn`{usn1:0 Is Not Null}]->(:``{`2esn`:$7,usn1:.12 Contains $`4esn` Contains $`6esn`}).@usn6 Union Return $_usn4[12e12][`4esn`] As `5esn`,@usn6[`5esn`..$`3esn`] As ``,0.0[..12e12][..$0] Order By usn2[$`1esn`...0] Descending,123.654 Is Not Null Is Not Null Desc Limit 0X7 =~`4esn` =~`8esn` Match (#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]})<-[:`6esn` *..0X7{`3esn`:`1esn` Contains Count ( * ),`7esn`:01234567 =~usn1}]-(:@usn5{`8esn`:$`3esn`[@usn5..$123456789],@usn5:\"d_str\" Starts With $usn1})-[?:#usn7|:_usn4]->(`` :#usn7$0) Create `4esn`=(:`5esn`{`7esn`:$`7esn` Ends With 07 Ends With 07,`5esn`:@usn5 Ends With $`3esn` Ends With 12e12})<-[`1esn`?:`1esn` *01234567..12]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})<-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(_usn4 ),(:#usn7)"),
    octest:ct_string("Merge ((_usn4 {`8esn`:9e1 In 01 In 999})) With Distinct .e12[.12..][_usn4..] As _usn4,{`7esn`:.e0 Contains #usn7 Contains $#usn8}[(:usn2:@usn6{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8})-[? *999..]-(:`4esn`:#usn8{@usn6:$`4esn`[$`2esn`..]})..None(`6esn` In 0X7 =~`` Where 12.e12['s_str'])][(`5esn` :`7esn`)-[?:`8esn`|:usn1 *..0X7{@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00}]->(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})..({`7esn`:12e12 Ends With 010 Ends With .0})<-[?:`5esn`|`1esn`{_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12}]-({@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]})],$999[$_usn4..][$`5esn`..] Union Merge `1esn`=((`8esn` :`7esn`{`8esn`:False In 123456789 In $0})-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]-(usn1 :`4esn`:#usn8{``:0 Is Not Null Is Not Null,`3esn`:usn1 Starts With $#usn7 Starts With `5esn`})) On Match Set #usn8($`2esn` Contains usn1 Contains `2esn`).`3esn`? =0xabc[..$`1esn`][..01] On Create Set @usn6+=[usn1[..$_usn4][..``],0X7[.e12..01234567]] In `3esn`(@usn5[..True][..0X7],$`3esn` =~$`7esn` =~False) Return Distinct `7esn`($123456789 Ends With $`6esn`) Starts With {`7esn`:$12[01..][1.e1..],_usn3:$_usn3 =~`7esn` =~$_usn4} As usn1 Order By 12.e12 In .e0 In `7esn` Asc,9e1[.12..] Asc Skip (_usn3 )<-[usn1]->(#usn7 {`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null})-[_usn4?:`6esn`]->(`8esn` :`1esn`) =~Single(#usn7 In 01234567[$`3esn`..] Where 0.12 In $`4esn` In `6esn`) =~Extract(@usn5 In $#usn8 Is Null Is Null Where 12.e12[@usn5..123.654]|$`8esn`[..123456789]) Limit 0.12 In $`4esn` In `6esn`"),
    octest:ct_string("With  `6esn`['s_str'..][010..],$`4esn` Contains 0Xa Where 0X0123456789ABCDEF In $1000 In $`3esn` Merge `3esn`=((:#usn8{_usn4:\"d_str\"[Count ( * )],`2esn`:9e0 Ends With $`7esn`})) Union All Delete [_usn4 In usn1 Contains False Contains `` Where $usn1[0.12..]['s_str'..]|12[..True][..$`4esn`]] Ends With [`6esn` In 0X7 =~``|$#usn7[...e12][..$7]],Single(#usn8 In $`5esn` Is Null Is Null Where 's_str' Starts With 1000 Starts With #usn8)[{_usn3:$0 Ends With $#usn7 Ends With .12}][[12.0[0Xa][00],.0[01][$12]]] Unwind `2esn`(Distinct 7[..12e12][..$`6esn`]) In Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where `5esn`[.e1][0Xa]) As `4esn`;"),
    octest:ct_string("With  *,`` =~12 =~$#usn7 Order By 0X7 In 's_str' In $`1esn` Descending,@usn5 In 0X0123456789ABCDEF Asc,$`4esn` In $12 In _usn3 Ascending Skip [usn2 In 1000 Contains 0.e0 Where @usn6[`3esn`..][$7..]] In [0xabc[12.e12..`1esn`]] In {@usn6:$_usn3[..Count ( * )][..@usn5],@usn5:12e12[Null]} Where 0.12 In $`4esn` In `6esn` With  ({`1esn`:@usn6})<-[_usn4?:_usn4|:@usn5 *123456789..999{`2esn`:@usn5 In $`6esn`}]->(:`3esn`:`1esn`{`1esn`:0.0[1000..][.e1..]}) Is Null Is Null As `3esn` Skip count(Distinct 's_str' Starts With 1000 Starts With #usn8,12e12 Starts With $123456789 Starts With 12.0)[[_usn4 In usn1 Contains False Contains `` Where $#usn8]][[$`1esn` Is Null,\"d_str\" =~`6esn` =~0Xa,$usn2[0e0..]]]"),
    octest:ct_string("Unwind $`1esn` Ends With _usn4 Ends With `3esn` As `8esn` Merge (`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[?:`2esn`|usn2{@usn6:0.12[0.e0..][`4esn`..]}]->(usn1 :#usn8)<-[ *..0x0{`4esn`:$`7esn`[$usn1..][0.0..],`1esn`:$123456789[..0x0][..`4esn`]}]->(#usn8 :`4esn`:#usn8{#usn7:$`8esn` Starts With 1000}) On Create Set `6esn` =$@usn5[Count ( * )] On Create Set Single(usn1 In 00 Starts With _usn3 Where $`7esn` Ends With 07 Ends With 07).`6esn`? =Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 00 Ends With .12 Ends With `4esn`) Contains {`7esn`:0e0 Is Null Is Null,usn2:`4esn` =~123456789},@usn5 =[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn7 In .e1 In 01][..(usn1 :#usn8)-[:`1esn` *010{`2esn`:$_usn3[9e1][$_usn4],`7esn`:`7esn`[...e1][..\"d_str\"]}]->(`7esn` :#usn8)<-[:#usn7|:_usn4{usn2:`5esn`[Count ( * )..][\"d_str\"..],`7esn`:.e1 In $@usn6 In 999}]-({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})][..Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $usn2[..12.0])],[usn1 In 00 Starts With _usn3 Where 12 Ends With .e12 Ends With $7|_usn3 =~00].#usn7! =Single(usn1 In $123456789 Contains usn2 Where Count ( * )[..1e1]) Is Not Null Union All Return Distinct 9e0 Starts With `6esn`,9e1['s_str'..1e1] As #usn7 Limit `1esn` Contains Count ( * ) Unwind $`1esn` =~$`1esn` =~#usn7 As `4esn` Merge `4esn`=(`3esn` {_usn3:@usn6 Contains _usn4 Contains $`4esn`})<-[`7esn` *..0x0]-(@usn5 :usn1)<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3}) Union All Match ((@usn5 :@usn6:`7esn`{`6esn`:$0[01234567..00][$`2esn`..$@usn6],`3esn`:`6esn` Starts With $@usn6})),((:`7esn`{`2esn`:`` Starts With @usn5,usn2:$`2esn` Starts With .e0 Starts With 12.0})-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(:`3esn`:`1esn`{_usn4:`1esn`[@usn6..$123456789],`4esn`:$usn2[..12.0]})) Where @usn6 Contains .e1 Contains $`4esn`;"),
    octest:ct_string("Match #usn8=((`2esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})<-[:@usn6 *0X0123456789ABCDEF..{_usn3:`7esn` Ends With $usn2 Ends With 999}]-(`2esn` :_usn3)),(({``:12 Is Null Is Null})<-[usn2:`8esn`|:usn1*..{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]->({#usn7:False[`2esn`..#usn8]})-[`5esn`:#usn8*]->({_usn3:12.e12 In $0 In Count(*)})) Remove [$`5esn`[False],9e1 Contains $`3esn` Contains 01234567,`5esn`[Count ( * )..][\"d_str\"..]].@usn5!,`3esn`:_usn4:usn1,[usn1 In 00 Starts With _usn3].#usn8?"),
    octest:ct_string("Unwind `` As _usn4 Detach Delete .e1 Starts With $`8esn`,`6esn` Is Not Null Merge `3esn`=((:#usn8{_usn4:\"d_str\"[Count ( * )],`2esn`:9e0 Ends With $`7esn`}))"),
    octest:ct_string("Remove ({`5esn`:0.12 Contains .e1})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:@usn5{#usn7:1e1[@usn5..]})<-[?:`6esn` *01234567..12{`7esn`:7 In 0xabc}]-(#usn7 :usn2:@usn6{`1esn`:$usn2 Contains 12.e12 Contains 00}).@usn6?,Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`1esn` Starts With $999).``?,All(`4esn` In 's_str'[12..'s_str']).`3esn`? With Distinct *,9e1['s_str'..1e1] As #usn7,01234567 As `6esn` Skip `2esn` In Count(*) In 9e0 Limit usn2 Is Not Null Where $12 Is Null Is Null"),
    octest:ct_string("Detach Delete #usn7 Contains 07"),
    octest:ct_string("Return `8esn`[1000..$7][$`7esn`..`2esn`],0X7 =~``,123456789 =~_usn4 =~$0 As usn1 Detach Delete 0Xa Starts With $`4esn` Starts With 1e1 With Distinct .e0[`4esn`..`4esn`][0.0..$0] As `7esn` Order By None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where _usn3[...e1]) In (:_usn4:usn1{``:123456789 Starts With `2esn` Starts With .0,`5esn`:``})<-[usn2?:usn2|#usn8{`6esn`:$123456789[$`2esn`][True],@usn5:$`3esn` =~$`6esn` =~`8esn`}]-({`5esn`:0e0 =~_usn4})-[_usn4:_usn3|:`4esn` *1000..{#usn8:$999 Ends With $`3esn` Ends With `8esn`}]->(#usn7 :`7esn`{`4esn`:.12 Starts With .12 Starts With `3esn`}) Descending,01234567[.12..7][1000..1.e1] Ascending Where #usn7[..$1000][..01];"),
    octest:ct_string("Unwind 0x0[0.0][$_usn4] As #usn8 Unwind 123.654[`5esn`] As @usn5 Union Remove [010 =~$usn2 =~1e1,`1esn`[@usn6..$123456789]].`8esn`!,Filter(`6esn` In 0X7 =~`` Where $#usn7[...e12][..$7])._usn3,Filter(@usn5 In .12[#usn7][$`8esn`]).`3esn` Match (#usn7 {@usn5:`5esn`[.e1][0Xa],@usn6:Count(*)[`7esn`..$12]}),((:`7esn`{`2esn`:`` Starts With @usn5,usn2:$`2esn` Starts With .e0 Starts With 12.0})) Where $`6esn`[`1esn`..][.e0..]"),
    octest:ct_string("Match #usn8=((`8esn` :`7esn`{`8esn`:False In 123456789 In $0})<-[`6esn`:_usn4|:@usn5 *..7{_usn4:0.0 =~0X7 =~#usn7}]->(@usn6 {_usn3:$_usn4[$`1esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})),`1esn`=(((`3esn` {_usn4:12.e12 Ends With 01 Ends With .e1})-[@usn6? *1000..{#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1}]-(:@usn5{@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]})<-[? *0xabc{`7esn`:$`5esn` Contains $@usn6,#usn7:12.e12 Ends With 01 Ends With .e1}]->(`7esn` :usn1{`1esn`:00 Starts With _usn3}))) Create `4esn`=(({_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`})) Union Match `5esn`=(#usn7 {@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]}) Where $`2esn` Contains usn1 Contains `2esn` Unwind 12e12[0.e0][9e1] As usn2"),
    octest:ct_string("Detach Delete 0X7 In 's_str' In $`1esn` Unwind {@usn5:$`3esn`} Starts With .12 As `8esn` Union All Match `3esn`=(#usn8 :`1esn`{#usn7:1e1[`6esn`..]})<-[:_usn3|:`4esn`{_usn4:$`3esn` =~$`6esn` =~`8esn`,`5esn`:0X7[0e0..]}]-(#usn8 :`5esn`{usn2:.e1 Starts With 0.0 Starts With `6esn`,#usn8:9e12 =~01 =~$`7esn`}),usn2=((#usn8 :`4esn`:#usn8)-[`6esn`? *01234567..12{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]-(@usn5 {usn2:$999[12.0..]})-[`5esn`? *00..{usn1:07[`6esn`..][`5esn`..],`2esn`:#usn7 Contains .0 Contains .e1}]->(`5esn` :usn2:@usn6)) Where $`8esn` =~$usn2 Merge _usn3=(({`5esn`:_usn3 Contains @usn6 Contains 1.e1,`7esn`:$12[01..][1.e1..]})-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})<-[usn1?{#usn7:9e12 Is Not Null Is Not Null,usn2:`3esn` =~0.0 =~$``}]->(`5esn` :`3esn`:`1esn`{`6esn`:$1000[.e0..]})) On Create Set `4esn`(Distinct .0 Starts With `2esn` Starts With `6esn`).`7esn`! =Filter(`4esn` In `6esn`['s_str'..][010..] Where 9e0 =~$`5esn`)[[1e1[0.0],0 Contains 12e12,$123456789[..0x0][..`4esn`]]],`8esn` =[@usn5 In $#usn8 Is Null Is Null Where $`2esn` Starts With .e0 Starts With 12.0|$`7esn` Is Null Is Null][``(Distinct 0X7 In $@usn5 In 9e0,12.0[0Xa][00])][`6esn`(Distinct 12.e12 In $0 In Count(*),$`2esn`[$`2esn`..])] Merge ((`6esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}));"),
    octest:ct_string("Merge `8esn`=(({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})-[`8esn`?:#usn7|:_usn4{usn2:7[$`4esn`..123456789]}]->({`4esn`:#usn7 Starts With 0 Starts With 12,`4esn`:0x0 =~_usn4})) Merge (((`3esn` :`8esn`)-[`5esn`{usn2:`6esn`['s_str'..][010..]}]->(_usn3 :usn2:@usn6)-[:`7esn`|`2esn` *..0X7{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]->(`5esn` {usn2:`5esn`[.e1][0Xa],@usn5:$usn1 In 1000 In $#usn7}))) On Create Set #usn8:_usn4:usn1,[0 Is Not Null Is Not Null].usn2! =(:`1esn`{@usn5:123456789 Starts With `2esn` Starts With 9e12})-[#usn7? *999..]-(@usn5 :_usn4:usn1{`1esn`:07[1e1],`7esn`:12e12[$`5esn`][07]})-[`6esn`:``|:_usn4 *..01]->(`7esn` :`6esn`:`7esn`{_usn4:07 In `5esn` In 12e12})[Extract(#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|`7esn` Starts With $usn2 Starts With .e0)..Extract(#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str')] On Create Set #usn8+=12[0X7..@usn6],{``:12e12[$`5esn`][07],_usn3:$`6esn` Is Null Is Null}.usn1 =$`6esn` Is Not Null Is Not Null"),
    octest:ct_string("Merge (({`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]})-[#usn8?]-(:_usn3{`6esn`:.e12[..0.e0][..$`1esn`],`8esn`:7 In 0xabc})<-[ *1000..]->(#usn7 {`2esn`:$``[_usn4..][`7esn`..],`3esn`:#usn7 Ends With 9e1})) On Match Set _usn4 =@usn5 Contains 01 Contains 12,#usn7+={#usn8:0X0123456789ABCDEF[..usn1]} Ends With (:``{_usn3:0X0123456789ABCDEF In 01234567})<-[``? *..0X7{_usn4:12 Ends With 01 Ends With 1e1}]-(usn2 :@usn6:`7esn`)-[:usn2|#usn8*..]-(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12}) Ends With [1e1 In $#usn8 In 12e12,123.654 Contains #usn8] On Create Set ``(999[``..][Null..]).`8esn` =0.0[999..],`4esn`+=$`5esn` Starts With _usn3 Starts With @usn5,@usn6+=False Is Null Match `5esn`=({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(`4esn` :`6esn`:`7esn`{`8esn`:0X7[..12e12]})-[?:@usn6{`8esn`:12 Ends With .e12 Ends With $7,`8esn`:0.0[12...12]}]-(`3esn` :``) Union Create `3esn`=(_usn4 :``{`2esn`:9e1 In 01 In 999,`5esn`:$@usn6[..$usn1]})-[`5esn`?:``|:_usn4]->(:#usn8{#usn7:12e12 Ends With 010 Ends With .0})-[@usn6?:`1esn`]-(:`5esn`),``=(({`5esn`:0e0 =~_usn4})) Union Return $@usn6[07..`7esn`][_usn4..$`4esn`] Create @usn5=({`5esn`:Count(*)[..`3esn`],usn1:01234567 Ends With 0x0})-[?{@usn5:12.e12['s_str'],`1esn`:_usn3 Ends With 12e12 Ends With .e0}]-(`8esn` :`7esn`)<-[?:usn2|#usn8{#usn8:$@usn6 Is Null Is Null,_usn4:_usn4 Starts With $@usn6 Starts With #usn7}]-({_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"})"),
    octest:ct_string("Optional Match (_usn3 :_usn4:usn1)<-[:``|:_usn4 *01234567..12{`2esn`:$`` Is Null Is Null,``:$`4esn`[usn1..$#usn8][12.0..`3esn`]}]->(:@usn6:`7esn`{_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`}),#usn8=(`2esn` :usn1{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})-[usn1?:`8esn`|:usn1]->(`2esn` {usn2:$999[12.0..]})<-[:`6esn`]->(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}) Where $`5esn` Contains $@usn6 Unwind $123456789[$`2esn`][True] As usn2 With Distinct *,`7esn`[Null..][@usn5..],0X0123456789ABCDEF Contains $usn1 Skip Count(*)[[@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null]..] Limit False Ends With $`8esn` Where 0 Starts With 12e12 Starts With `4esn` Union All Unwind $_usn4[0.12..$`6esn`][00..$@usn6] As `` Merge `2esn`=((:`2esn`:`3esn`{usn2:9e12[@usn6..$``][#usn8..Count ( * )],`3esn`:$1000 In $`7esn` In $7})) Union All Unwind 9e12 As `5esn`"),
    octest:ct_string("Optional Match _usn4=((:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[`6esn`:``|:_usn4 *..01]->(`5esn` {_usn4:0X7 =~``})-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(usn2 :usn1{``:9e12 Ends With 0X0123456789ABCDEF Ends With #usn7})),(((#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]})-[?*..{`3esn`:Count(*)[12.e12..],`3esn`:usn2 =~0x0}]-(`` :`3esn`:`1esn`{_usn3:'s_str'[..0.0][..$`4esn`],`4esn`:$123456789 Is Not Null Is Not Null})<-[:`6esn` *..0X7{`3esn`:`1esn` Contains Count ( * ),`7esn`:01234567 =~usn1}]-({usn1:010[@usn5..],`7esn`:`2esn` Is Not Null Is Not Null}))) Where $`` Ends With 12e12 With Distinct *,0X7 In 123456789 In $`5esn` Skip 0xabc Contains 0e0 Contains \"d_str\" Limit $@usn6 Is Null Is Null With  *,0.0 Is Null Is Null As `8esn` Order By $1000 Is Null Is Null Descending,1000 In 0X0123456789ABCDEF In 01 Asc Union All Merge `8esn`=(({@usn6:$123456789 Is Null Is Null,@usn6:`6esn`[1.e1..$#usn7][.e0..True]})<-[`5esn`:usn1|`3esn` *010{`2esn`:`6esn` =~01234567 =~0Xa}]->(_usn4 :``)) Union With Distinct $12[`3esn`..0e0][`2esn`..$7] As #usn8,0.12 =~01 =~12 Order By $123456789 =~$#usn8 =~$#usn8 Ascending,0X7 In 123456789 In $`5esn` Ascending"),
    octest:ct_string("Match `5esn`=((:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[`6esn`:``|:_usn4 *..01]->(`5esn` {_usn4:0X7 =~``})-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(usn2 :usn1{``:9e12 Ends With 0X0123456789ABCDEF Ends With #usn7})) Where `6esn` =~$_usn3 Union Return Distinct $#usn8[1e1][9e1] As @usn5,$`3esn`[`2esn`...e0] As _usn3,.e1 Starts With $`8esn` Skip 0x0 =~$`7esn` =~@usn6 Limit [$_usn3[$`4esn`..Null],0x0 Contains $`8esn` Contains `6esn`,\"d_str\" =~`6esn` =~0Xa] Contains [@usn6 Starts With `7esn` Starts With Null] Contains `6esn`(Distinct $`4esn`[usn1..$#usn8][12.0..`3esn`],12.e12['s_str']) Union Detach Delete usn2[$`7esn`..010][00..``],$123456789 Ends With $`6esn`,0.12 Contains $`2esn` Contains $_usn4"),
    octest:ct_string("Match (usn2 :#usn7),#usn8=(((`8esn` :@usn5)<-[@usn5:#usn7|:_usn4]->(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})<-[`4esn`:``|:_usn4{`5esn`:0e0 =~_usn4}]-(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`}))) Unwind `1esn`(Distinct Count(*)[..`3esn`]) Starts With $0 As `3esn` Union Unwind 123456789 Starts With #usn7 Starts With `6esn` As `7esn` Return Distinct Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $usn2[..12.0]) In Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where Count(*)[True]) In Extract(`4esn` In 's_str'[12..'s_str'] Where 0xabc Ends With $#usn7 Ends With #usn8|.e1 Starts With 0.0 Starts With `6esn`) As #usn7,@usn5 Starts With \"d_str\" As `` Union All Delete \"d_str\" =~12.e12 =~07,Null[0.e0..0x0] With Distinct 123.654 Is Not Null Is Not Null As `3esn`,00 As `4esn` Limit $12[..``][..$7] Match _usn4=(@usn6 {#usn7:False[`2esn`..#usn8]})<-[`6esn`? *00..{`8esn`:$`2esn`[123456789..][00..],`7esn`:123.654 Contains #usn8}]-(`4esn` {@usn6:True[..'s_str'][..01]}),`6esn`=(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})<-[#usn8? *0xabc{`5esn`:0X7[12]}]->(`4esn` {usn2:7 In 0xabc})<-[?:#usn8{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]->({@usn5:False In $`7esn` In .0,usn2:Null[1.e1..]}) Where usn2[$`1esn`...0]"),
    octest:ct_string("Delete 1.e1 Is Not Null Is Not Null,$1000 In $`7esn` In $7"),
    octest:ct_string("Return Distinct *,Count ( * ) In 010 As `1esn` Limit $@usn5 =~07 =~True Union All Unwind 1000 Contains 123456789 Contains 1e1 As `` Return Distinct $@usn5[0.12..][@usn5..],010 Contains 0X0123456789ABCDEF Limit 9e0 Starts With `6esn` Delete [$`5esn` Is Not Null,0e0 Is Null Is Null] Ends With Filter(`4esn` In `6esn`['s_str'..][010..] Where Count(*)[..`3esn`]) Ends With (_usn4 {`8esn`:9e1 In 01 In 999})-[`8esn`?:#usn7|:_usn4]-(#usn8 :_usn3)-[ *0..010{#usn7:$@usn6 Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)}) Union With Distinct *,$0 =~$0 =~.e0 As `7esn`,$@usn5[#usn8..][$`1esn`..] As `7esn` Order By $usn1[1e1.._usn3][$@usn6..$#usn7] Desc Skip [@usn6 In @usn5 In $`6esn` Where $999[$1000]|$7[.12]] In {`1esn`:$@usn6 Contains 07 Contains 0.e0} In (`2esn` {usn1:@usn6[$`7esn`],_usn3:$@usn6[..12e12]})-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]->(usn1 {#usn7:Count ( * )[@usn6..0x0]})-[@usn6?:#usn8 *..7{@usn5:@usn5 Starts With 12e12 Starts With @usn5}]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3}) Where 9e12[usn2..7][.e1..$`7esn`] Return 12e12[Null] As usn2,$`4esn`[0][0e0] As _usn3,12e12 Starts With $123456789 Starts With 12.0 Order By Count(*)[.e0.._usn4] Asc Skip (`7esn` :@usn6:`7esn`)<-[:``|:_usn4{`8esn`:0 Ends With $7 Ends With _usn3}]-(usn1 {#usn7:Count ( * )[@usn6..0x0]})<-[`8esn`]->(#usn8 ) Contains usn2(Distinct $1000[01234567],00 In 0.12 In `5esn`) Contains Any(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where usn2[$`1esn`...0]) Remove {`2esn`:$`2esn`[..`2esn`],usn1:False[0Xa..$@usn5][$`6esn`..12e12]}.`3esn`?,[07[12e12],`1esn`[...e1]].#usn7!"),
    octest:ct_string("Return Distinct {@usn6:0.12 In $`4esn` In `6esn`,``:1e1 Is Null} Is Not Null Is Not Null,$0 =~$0 =~.e0 As `7esn` Order By Any(`6esn` In 0X7 =~`` Where 0X7[..12e12]) Asc,{@usn5:$`3esn`} Starts With .12 Asc Skip Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]) In All(@usn5 In .12[#usn7][$`8esn`] Where \"d_str\" =~`6esn` =~0Xa) In [123.654 Starts With usn1 Starts With @usn5] Union Unwind $usn2[False..`7esn`][`7esn`.._usn3] As _usn4"),
    octest:ct_string("Detach Delete {@usn6:0Xa Is Null Is Null,`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]} =~_usn4(usn2[`3esn`][_usn3]),`6esn`(Distinct 12.0[0Xa][00]) In {`7esn`:12e12 Ends With 010 Ends With .0} In Extract(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6|#usn7 Is Not Null Is Not Null),Any(@usn6 In @usn5 In $`6esn` Where 9e0[$_usn3..0X7][7..$#usn8]) Contains None(usn1 In 00 Starts With _usn3 Where 01234567 Ends With 12.0 Ends With 0X7) Contains Single(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn8 In .e12 In 9e1) Merge @usn6=({`3esn`:$`3esn` =~$`7esn` =~False,`4esn`:12 Ends With 01234567}) On Match Set (:usn1{`1esn`:`6esn` Starts With $usn2 Starts With 0.0})<-[@usn6?:@usn5|`8esn` *..01{_usn4:07 Ends With 07,`8esn`:`6esn`[1.e1..$#usn7][.e0..True]}]-(usn2 :`3esn`:`1esn`).`8esn` =.0,_usn4+=`3esn`[$999..],#usn7($0[$#usn8..01234567],#usn8[$#usn8..]).#usn8! ={#usn8:$`5esn` In False,usn2:$`7esn` In $7} Starts With Filter(usn2 In 1000 Contains 0.e0 Where `2esn`[$`3esn`..]) Starts With All(`4esn` In `6esn`['s_str'..][010..] Where 9e0 =~$`5esn`) On Create Set `6esn`+={`2esn`:999 In $_usn4 In 0X7}[..{`7esn`:12e12 Ends With 010 Ends With .0}][..Filter(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $123456789[$`2esn`][True])],#usn8:`1esn`,[usn1 In 0x0[..`4esn`] Where True =~@usn5 =~$`1esn`|0.0[999..]].`4esn`! =$123456789 Contains 01 Contains 0.12 Detach Delete $999[12.0..]"),
    octest:ct_string("Create (`4esn` :`2esn`:`3esn`{`1esn`:123456789[1000]})-[`1esn`:usn2|#usn8 *1000..]-(:`5esn`{`3esn`:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:0e0 =~_usn4})-[`1esn`:`5esn`|`1esn` *..7{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]}]->(usn2 :@usn6:`7esn`),`4esn`=({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(`4esn` :`6esn`:`7esn`{`8esn`:0X7[..12e12]})-[?:@usn6{`8esn`:12 Ends With .e12 Ends With $7,`8esn`:0.0[12...12]}]-(`3esn` :``) Delete (`6esn` {@usn6:9e0 Contains `8esn`})<-[`5esn`:usn1|`3esn` *010{`2esn`:`6esn` =~01234567 =~0Xa}]-(usn2 {`7esn`:0e0 Is Null Is Null,usn2:`4esn` =~123456789})<-[ *00..{`3esn`:12 Ends With 01234567,`4esn`:00[``..][$`4esn`..]}]->(`2esn` :``)[[999[``..][Null..],usn1 In 1000 In $`5esn`,`5esn`[.e1][0Xa]]] Create ((_usn4 {`8esn`:9e1 In 01 In 999})) Union With Distinct *,@usn5 Starts With \"d_str\" As ``,`5esn` In 12 Order By Count(*)[.e0.._usn4] Asc,$123456789[False.._usn3] Desc,`1esn`[`3esn`..][$@usn6..] Descending Skip 999 In 9e1 In 7 Limit [@usn5 In 0X0123456789ABCDEF,False[0Xa..$@usn5][$`6esn`..12e12]] =~({@usn6:0X0123456789ABCDEF[..usn1]})<-[`4esn`:#usn8]-(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa})-[{`2esn`:\"d_str\" =~`3esn` =~0Xa,_usn4:usn1 Is Null Is Null}]->(#usn8 :`7esn`) =~123456789 Where $#usn8 Is Null Is Null;"),
    octest:ct_string("Unwind $`1esn` Is Null As `6esn` Union Optional Match `5esn`=((#usn8 :`1esn`{#usn7:1e1[`6esn`..]})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->({usn1:`2esn`[$`1esn`..][$_usn3..]})),`5esn`=(((`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[ *..7]-(:_usn3{@usn6:$`7esn` Is Null Is Null})-[:`7esn`|`2esn` *12..0xabc]->(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}))) Where `7esn` In 999 In @usn6 Union All With  01234567[$@usn6..0X7][$`1esn`..123.654],00 Ends With $_usn4 Ends With $`2esn` As `5esn` Skip `8esn` Ends With 0X0123456789ABCDEF Ends With `1esn`"),
    octest:ct_string("Merge `1esn`=((`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`5esn`?:usn1|`3esn` *1000..]-({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})) Merge `7esn`=(((#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`})<-[:`3esn`|:`4esn` *999..{`6esn`:$123456789[..0.12][..#usn7],`3esn`:0 Ends With $7 Ends With _usn3}]->(`` :@usn5)-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->(`7esn` {`8esn`:$123456789 Contains 01 Contains 0.12}))) Return [`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`|$123456789 Ends With .e1] Contains [@usn6 In @usn5 In $`6esn` Where $_usn4[$`8esn`..][07..]|$1000 In $`7esn` In $7] Contains (`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})-[``?:@usn6{#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}]->(@usn5 :`3esn`:`1esn`{`3esn`:$`5esn` Is Not Null,`2esn`:9e1[0.e0..][#usn8..]}),$_usn4[`3esn`][0] As `1esn`,`6esn` Starts With $`5esn` As @usn5 Order By .0 Is Null Is Null Ascending,`1esn`(Distinct $@usn5[#usn8..][$`1esn`..],#usn7 Ends With `4esn` Ends With @usn5)[[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $999[12.0..]|usn1[Count ( * )..$usn1]]][{`8esn`:010[@usn5..],#usn8:False Is Not Null Is Not Null}] Asc Limit True Is Not Null Union Return *,$999[$1000] Skip 1e1[@usn5..] Merge (({`6esn`:$`5esn` Is Null,`2esn`:`7esn` Starts With $usn2 Starts With .e0})) Remove {@usn6:True[..'s_str'][..01]}.#usn7!,(_usn4 {#usn7:False[`2esn`..#usn8],#usn8:`5esn`[`1esn`..`1esn`]})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})-[#usn7?:@usn6 *00..]->(_usn3 :_usn4:usn1{@usn5:$@usn6 In $`5esn` In $usn2,#usn7:$0[0X0123456789ABCDEF..$#usn7]}).`3esn`"),
    octest:ct_string("Remove usn2($`8esn`[..$``],.12 Starts With .12 Starts With `3esn`).`8esn`!,[`4esn` In `6esn`['s_str'..][010..] Where Null[0e0][12]].`2esn`,#usn8:`7esn` Remove None(usn1 In 0x0[..`4esn`] Where False[.e1..Null]).``,[.e0[..999][..0X7]].`5esn`?"),
    octest:ct_string("With Distinct *,Single(#usn7 In 01234567[$`3esn`..]) Is Null As `2esn`"),
    octest:ct_string("Remove [`4esn` In 's_str'[12..'s_str'] Where $`3esn`[@usn5..$123456789]|0.12[Null..]].`8esn`?,All(`4esn` In 's_str'[12..'s_str'] Where $`8esn`[..$``]).`7esn`!,Extract(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null).`1esn`! Detach Delete 00[7..$123456789],`` Starts With 12,{`4esn`:.12 Starts With 0Xa} Starts With All(usn1 In 00 Starts With _usn3 Where `6esn`[False..0.0][12e12..$usn2]) Union All Merge `1esn`=(#usn8 :@usn6:`7esn`{@usn5:1e1[@usn5..]})-[`1esn`?:`1esn` *01234567..12]-(usn1 :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[_usn4?:@usn6 *..7]->(`` :@usn6:`7esn`{`4esn`:0X0123456789ABCDEF Is Not Null}) On Match Set _usn3 =$`5esn`[False],[07[$999],@usn6[$`7esn`]].@usn6 =010 Starts With `7esn` Starts With 9e1,`4esn` =usn2[..$`3esn`] On Create Set `7esn`+=9e0[``][123.654],`8esn`(#usn7 Contains $7,$_usn3 =~`7esn` =~$_usn4).#usn8 =[`6esn` In 0X7 =~`` Where 12.e12['s_str']|00[7..$123456789]][All(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6)..][Extract(`4esn` In $`8esn` Starts With 1000 Where 1.e1[0X0123456789ABCDEF..][$`5esn`..]|9e1[...e0])..] Match (((`7esn` :`2esn`:`3esn`)<-[@usn5?:#usn8 *999..{`1esn`:$@usn5 =~$`` =~$usn2}]->(`2esn` {`3esn`:$999[12.0..]})-[? *00..{#usn8:12.e12[...0][..0x0],`7esn`:$`4esn`[9e1..][0..]}]-(:usn1{`6esn`:7 Contains 9e1,#usn8:`7esn`[...e1][..\"d_str\"]}))),(@usn6 {`4esn`:$`2esn`[..`2esn`]})<-[`4esn`? *00..]-(`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]})-[ *..7]-(:_usn3{@usn6:$`7esn` Is Null Is Null}) Where `7esn` Starts With $`` Starts With $#usn7 With  ({`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`4esn` {@usn6:True[..'s_str'][..01]}) In Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where 07[12e12]) As `4esn`,{#usn7:0[0.12..]} Ends With Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]) Ends With {@usn5:\"d_str\" Is Null Is Null,@usn5:$_usn4[`3esn`][0]} As `8esn` Skip 010 Starts With `7esn` Starts With 9e1 Limit 0Xa Starts With $`4esn` Starts With 1e1"),
    octest:ct_string("Delete [1e1[0.0],0.12 Contains $`2esn` Contains $_usn4],All(usn1 In 0x0[..`4esn`] Where 1000 Ends With 1000 Ends With $`4esn`) Ends With `4esn`(`4esn`[7..][1000..]) Ends With Filter(_usn4 In usn1 Contains False Contains `` Where $`4esn` Starts With 1e1)"),
    octest:ct_string("Unwind $`7esn` Ends With 07 Ends With 07 As `3esn` Create ((:`1esn`{`6esn`:$0[..`8esn`],`1esn`:True Starts With $`8esn` Starts With \"d_str\"})-[#usn8? *12..0xabc]-(#usn8 :`4esn`:#usn8{#usn7:$`8esn` Starts With 1000})),({`5esn`:123456789 Starts With `2esn` Starts With .0})-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]-(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa})<-[`` *12..0xabc]->(`3esn` :_usn4:usn1) Match _usn3=((@usn5 {@usn6:0.0[999..],#usn8:Null Is Null Is Null})<-[:`2esn`|usn2 *0..010]->(`2esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})<-[`1esn`:`8esn`|:usn1 *0xabc{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]->(#usn8 :`2esn`:`3esn`{#usn7:Count(*) In 01 In .0,#usn7:12.0[..$7][..999]}))"),
    octest:ct_string("Remove ({`2esn`:$`5esn` Is Null,@usn6:#usn7 Starts With `1esn`})<-[ *..0x0{`8esn`:010[@usn5..],#usn8:False Is Not Null Is Not Null}]-(`5esn` {`8esn`:0.0[12...12]})._usn3,All(`4esn` In `6esn`[1e1..] Where 07[12e12]).`3esn`!,[0Xa[$``..][01234567..]].@usn5 Unwind $_usn4[$`1esn`] As `2esn` Unwind 7 In @usn5 In $`4esn` As `5esn` Union Unwind #usn8[$#usn8..] As #usn8 Merge (((`1esn` :`8esn`)-[_usn4:`7esn`|`2esn`]-(`3esn` {`8esn`:$usn2[12..$`7esn`][$0..$`7esn`]})-[_usn4{@usn6:`1esn`[...e1],`5esn`:`5esn`[`1esn`]}]->(:usn2:@usn6{`6esn`:12[12e12..@usn6],#usn8:`6esn` =~$_usn3}))) Create ((_usn4 {`8esn`:9e1 In 01 In 999})) Union All Unwind $7[.12] As @usn6 Detach Delete ({usn1:`4esn` In $12 In `8esn`})-[`4esn`]-(`1esn` {usn1:True[Count(*)..][1e1..],usn1:9e1 Is Null Is Null})<-[?{`5esn`:0x0 Contains $`8esn` Contains `6esn`,#usn8:010 =~$usn2 =~1e1}]->({`6esn`:$`5esn` Is Null,`2esn`:`7esn` Starts With $usn2 Starts With .e0})[[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 0e0 =~_usn4|0x0 Contains _usn4 Contains 123456789]..[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 7 In $`3esn` In #usn7]][usn1($`1esn` Is Null Is Null,$0[0X0123456789ABCDEF..$#usn7])..[usn1 In 00 Starts With _usn3 Where .12[9e0][$7]|07]] Match usn1=(`4esn` :#usn7)-[_usn4?:`6esn`]-(`2esn` :`1esn`{``:9e1 Starts With _usn3 Starts With `4esn`})-[_usn4?:@usn6 *..7]->(`` :@usn6:`7esn`{`4esn`:0X0123456789ABCDEF Is Not Null}) Where $`5esn` In `2esn` In .0"),
    octest:ct_string("Unwind 999 Is Not Null Is Not Null As `8esn` Merge (((`8esn` :@usn5)<-[@usn5:#usn7|:_usn4]->(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})<-[`4esn`:``|:_usn4{`5esn`:0e0 =~_usn4}]-(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`}))) On Match Set (`4esn` :`6esn`:`7esn`)-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`7esn` :_usn4:usn1)-[`1esn`{_usn4:`3esn` Contains 0Xa}]->(`5esn` {@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]}).#usn8 =False In 123456789 In $0,Filter(`4esn` In `6esn`['s_str'..][010..] Where @usn6[$`7esn`])._usn4! =9e1[010..] Optional Match ``=({`7esn`:`6esn` Starts With $@usn6,``:`6esn` =~$_usn3})-[? *12..0xabc]-(:`6esn`:`7esn`{`6esn`:_usn4 Ends With 01 Ends With $`1esn`,`4esn`:$`8esn` In \"d_str\" In 9e12})<-[ *0xabc]-(_usn4 {`1esn`:010[@usn5..]}),#usn7=(:#usn7{#usn8:0.12 Contains $`2esn` Contains $_usn4,`2esn`:$`5esn` Starts With _usn3 Starts With @usn5})<-[:@usn5|`8esn`*..]-(`2esn` :usn1{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})-[?:usn1|`3esn` *999..{_usn4:$999[12.0..],usn1:0[usn2..]}]->(:usn2:@usn6{@usn5:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:.12 Ends With $`4esn` Ends With Count(*)}) Union Unwind [`4esn` In `6esn`['s_str'..][010..] Where $@usn5 In 12e12 In Count(*)|$1000[01234567]][Any(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7)..{usn1:usn1 Is Null Is Null,usn2:12.0[``]}][(_usn3 {`5esn`:0.12 Contains .e1})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`})..00] As @usn5 Return *,[010 =~$usn2 =~1e1,`6esn` =~01234567 =~0Xa,07[1e1]][(:@usn6:`7esn`)<-[?:_usn3|:`4esn` *010{`8esn`:$``[_usn4..][`7esn`..]}]-(@usn6 {_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12})..][Extract(#usn8 In $`5esn` Is Null Is Null Where 1000[0.0][Null])..] As `8esn`,`5esn` =~0Xa As usn1 Order By 0X0123456789ABCDEF Is Null Is Null Descending,Count ( * ) In 010 Descending,`5esn` In $999 Descending Limit .e0 Contains #usn7 Contains $#usn8"),
    octest:ct_string("Create _usn3=((@usn6 :_usn3{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]})-[``?:@usn6{#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}]->(`4esn` :`4esn`:#usn8{`1esn`:$@usn5 In 12e12 In Count(*)})) Return None(`4esn` In 's_str'[12..'s_str'])[Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`)..][Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where $@usn6 Contains Count ( * ))..] Union Remove Extract(@usn5 In .12[#usn7][$`8esn`] Where `7esn` Ends With $usn2 Ends With 999|12 =~usn1 =~.e12).`6esn`! Union Create _usn3=(({`5esn`:_usn3 Contains @usn6 Contains 1.e1,`7esn`:$12[01..][1.e1..]})-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})<-[usn1?{#usn7:9e12 Is Not Null Is Not Null,usn2:`3esn` =~0.0 =~$``}]->(`5esn` :`3esn`:`1esn`{`6esn`:$1000[.e0..]})) With  @usn6(123456789 =~$123456789) In Extract(`4esn` In `6esn`[1e1..]) In {``:True[..'s_str'][..01],usn1:0.12 In $7 In 0} Limit .12 Is Not Null Is Not Null"),
    octest:ct_string("With Distinct *,0Xa[0xabc..] As usn2,`6esn`(00 In 1e1) Starts With Extract(#usn7 In 01234567[$`3esn`..] Where .12 In $999 In `5esn`) Starts With Extract(#usn8 In $`5esn` Is Null Is Null Where $usn2 Is Not Null) Limit $`7esn` Ends With $`2esn` Ends With $usn1 Create (({`6esn`:$`5esn` Is Null,`2esn`:`7esn` Starts With $usn2 Starts With .e0})),(({@usn6:0X0123456789ABCDEF[..usn1]})<-[ *00..{@usn5:$`5esn` Is Null Is Null}]->(:_usn3{#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})-[usn1*]->(:`2esn`:`3esn`{usn2:9e12[@usn6..$``][#usn8..Count ( * )],`3esn`:$1000 In $`7esn` In $7}))"),
    octest:ct_string("Return Distinct 0x0 Contains _usn4 Contains 123456789 As `7esn`,07 Is Null Is Null As #usn8,``[$`3esn`][$`2esn`] As `5esn` Skip All(`6esn` In 0X7 =~`` Where #usn7 Starts With 0 Starts With 12) Starts With Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where #usn7 Contains .0 Contains .e1) Limit 01234567[$@usn6..0X7][$`1esn`..123.654] Union Remove (`1esn` )<-[@usn5? *1000..]->(:@usn6:`7esn`{_usn3:False[`2esn`..#usn8]})<-[@usn5?:`1esn`]-(_usn3 :`4esn`:#usn8{`1esn`:07[1e1],`7esn`:12e12[$`5esn`][07]})._usn4?,Any(@usn5 In $#usn8 Is Null Is Null Where False Contains `3esn`).`5esn`?,Extract(@usn5 In 0X7 =~.0 =~\"d_str\"|$`5esn` In `2esn` In .0).`2esn`? Remove (#usn8 :`5esn`{usn2:.e1 Starts With 0.0 Starts With `6esn`,#usn8:9e12 =~01 =~$`7esn`})<-[`7esn`?:`5esn`|`1esn` *0xabc]->(#usn7 {`6esn`:123456789 Is Null,`1esn`:00 In 12.e12}).`8esn`?"),
    octest:ct_string("Detach Delete [`4esn` In 's_str'[12..'s_str'] Where 9e12 =~01 =~$`7esn`][#usn7(00 In 12.e12)..Extract(usn1 In 0x0[..`4esn`] Where 1000 Ends With 1000 Ends With $`4esn`|@usn6[$`3esn`])][(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})<-[`8esn`]->(#usn8 )<-[`3esn` *00..{`8esn`:@usn6 Contains .e1 Contains $`4esn`,_usn4:0X7[..12e12]}]->(@usn5 {`1esn`:0[usn2..]})..(usn1 :_usn4:usn1)<-[@usn5?:`1esn`]-(#usn7 :`2esn`:`3esn`)],010 In @usn5 In `5esn`,1e1 In $999 In $usn2 Return 01234567 Is Null Is Null As `3esn`,0.12 Contains $12 Contains `8esn` As `5esn`,9e0 Starts With `6esn` Skip `3esn` Ends With 010 Limit Any(usn1 In 00 Starts With _usn3 Where `2esn` Is Not Null Is Not Null) Starts With All(`4esn` In $`8esn` Starts With 1000 Where 1.e1[0X0123456789ABCDEF..][$`5esn`..]) Starts With {`4esn`:$usn2 Contains 12.e12 Contains 00,`5esn`:7[$`4esn`..123456789]} Union Detach Delete 00[7..$123456789],`` Starts With 12,{`4esn`:.12 Starts With 0Xa} Starts With All(usn1 In 00 Starts With _usn3 Where `6esn`[False..0.0][12e12..$usn2]) Remove Extract(`4esn` In $`8esn` Starts With 1000 Where 0.12 In 01 In $`3esn`).usn1!,_usn4(Distinct `7esn` Starts With $usn2 Starts With .e0).`5esn`,``:#usn7 Return $@usn5[0.12..][@usn5..],010 Contains 0X0123456789ABCDEF Limit 9e0 Starts With `6esn` Union All With  *,`` =~12 =~$#usn7 As _usn4,[$`5esn` Is Not Null,0e0 Is Null Is Null] Ends With Filter(`4esn` In `6esn`['s_str'..][010..] Where Count(*)[..`3esn`]) Ends With (_usn4 {`8esn`:9e1 In 01 In 999})-[`8esn`?:#usn7|:_usn4]-(#usn8 :_usn3)-[ *0..010{#usn7:$@usn6 Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)}) Skip `3esn`[..7][..12e12] Limit (:`1esn`{`8esn`:Count ( * ) =~Count(*)})-[`2esn`*..$usn1]->(:@usn5{_usn4:.12 Starts With 0Xa})-[:`3esn`|:`4esn` *999..{`6esn`:$123456789[..0.12][..#usn7],`3esn`:0 Ends With $7 Ends With _usn3}]->(`1esn` {_usn4:12.e12 Ends With 01 Ends With .e1})[Any(@usn6 In @usn5 In $`6esn` Where 9e0[$_usn3..0X7][7..$#usn8])] With  *,`3esn`[$`1esn`..] As usn2 Limit @usn6(Distinct Null[0e0][12])[..[@usn5 In 0X7 =~.0 =~\"d_str\" Where 0X7[0e0..]]][..`8esn`(010 =~`6esn`)] Where usn2[`3esn`][_usn3] Return $`4esn`[12.e12..][0.0..],12[`7esn`...0][0.12..``] As @usn6,{#usn8:$`5esn` In False,usn2:$`7esn` In $7}[..Any(@usn6 In @usn5 In $`6esn` Where 010 =~$usn2 =~1e1)] Skip $`1esn` Ends With $`1esn`"),
    octest:ct_string("Merge @usn5=(((@usn6 {#usn7:'s_str' In \"d_str\" In 123456789,usn2:07[12][$`6esn`]})-[#usn7?:@usn6 *00..]->(#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})<-[?:`7esn`|`2esn`{_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"}]->(usn1 :#usn8))) On Match Set `5esn` =[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn7 In .e1 In 01][``($`4esn`[usn1..$#usn8][12.0..`3esn`])..[`6esn` In 0X7 =~``|$#usn7[...e12][..$7]]][(:``{@usn5:$@usn6 Contains Count ( * ),`2esn`:$0 Is Not Null})-[_usn3?:`5esn`|`1esn` *0X0123456789ABCDEF..]->(`1esn` :#usn7{_usn3:999[.e12][01],`6esn`:9e12 Is Not Null Is Not Null})<-[`5esn`?:usn1|`3esn` *1000..]-(`5esn` {usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null})..Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 12.0[..$7][..999])],[`6esn` In 0X7 =~`` Where `7esn`[...e1][..\"d_str\"]|0X0123456789ABCDEF In $1000 In $`3esn`].`5esn`? =12 Ends With 01 Ends With 1e1,[#usn7 Starts With .e12 Starts With $`7esn`].`3esn` =0X0123456789ABCDEF Contains $usn1 On Create Set #usn7 =`5esn` In $999,@usn6+=`2esn`[$`3esn`..],Any(`6esn` In 0X7 =~`` Where 12.e12['s_str']).`5esn` =usn1[..@usn5][...e0] Union All With Distinct $`4esn`[12.e12..][0.0..] As `2esn`,$0[..`8esn`] As _usn4,$`1esn` Starts With $999 Skip $#usn8[1e1][9e1] Limit Count(*) Ends With 010 Remove [usn1 In 00 Starts With _usn3 Where 010 =~$usn2 =~1e1|9e1 Starts With `1esn` Starts With 0Xa].usn2?,Count ( * ).@usn5? Remove `5esn`:usn1,(`3esn` :_usn4:usn1)-[:`3esn`|:`4esn` *999..{`6esn`:$123456789[..0.12][..#usn7],`3esn`:0 Ends With $7 Ends With _usn3}]->(:`4esn`:#usn8{usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null})<-[`` *0xabc]->(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}).`1esn`! Union Unwind 0e0[#usn8][$_usn3] As #usn8 Optional Match ((`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`3esn`?:_usn3|:`4esn`]-(`4esn` {`6esn`:$12[..``][..$7]})),((_usn4 {`8esn`:9e1 In 01 In 999}))"),
    octest:ct_string("Create ((`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})),(((@usn6 {#usn7:'s_str' In \"d_str\" In 123456789,usn2:07[12][$`6esn`]})<-[?:@usn6{`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]}]->(:@usn5)<-[#usn8?:`4esn`|:`7esn` *07..]->(`` :#usn7$0))) Create ((({usn1:`2esn`[$`1esn`..][$_usn3..]})<-[``? *..0X7{_usn4:12 Ends With 01 Ends With 1e1}]-(usn2 :@usn6:`7esn`)<-[#usn7 *123456789..999]-(:`5esn`{`3esn`:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:0e0 =~_usn4})))"),
    octest:ct_string("Return *,07[0..`4esn`],Filter(@usn6 In @usn5 In $`6esn` Where .12[`1esn`..][$`3esn`..]) Order By `4esn` =~$`3esn` =~$123456789 Ascending,{`2esn`:999 In $_usn4 In 0X7}[..{`7esn`:12e12 Ends With 010 Ends With .0}][..Filter(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $123456789[$`2esn`][True])] Asc,$`4esn`[..usn1] Ascending Skip $`3esn` Limit [@usn5 In 0X7 =~.0 =~\"d_str\"|#usn7 Starts With `1esn`][Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where `7esn`[...e1][..\"d_str\"])..][`2esn`(Distinct 12e12[Null],0xabc[12.e12..`1esn`])..] Create usn2=(((#usn8 :@usn6:`7esn`)<-[:@usn5|`8esn`*..]-(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})-[_usn3? *00..]-(`1esn` :`1esn`))) Unwind 01 In _usn3 In 12 As `3esn`;"),
    octest:ct_string("Merge (:`3esn`:`1esn`{@usn5:$#usn8 In .e12 In 9e1,`7esn`:9e1 Starts With `1esn` Starts With 0Xa})-[:usn1|`3esn`]-(_usn3 :_usn4:usn1{`2esn`:$`6esn`[$@usn6..]}) Detach Delete 0 Is Not Null,[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`|$123456789 Ends With .e1] Contains [@usn6 In @usn5 In $`6esn` Where $_usn4[$`8esn`..][07..]|$1000 In $`7esn` In $7] Contains (`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})-[``?:@usn6{#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}]->(@usn5 :`3esn`:`1esn`{`3esn`:$`5esn` Is Not Null,`2esn`:9e1[0.e0..][#usn8..]}),{`8esn`:$_usn3[$`4esn`..Null],@usn6:$`2esn` Starts With .e0 Starts With 12.0} Starts With {usn1:`4esn` In $12 In `8esn`} Starts With [usn2 In 1000 Contains 0.e0 Where 9e12 =~01 =~$`7esn`|9e0 Starts With `6esn`] Union Merge (((`` :@usn6:`7esn`{`2esn`:0.12[0.e0..][`4esn`..]})<-[`3esn`?:_usn3|:`4esn`]-(_usn3 :`1esn`)<-[_usn3{_usn3:12.e12 In $0 In Count(*)}]-(`7esn` :@usn5))) On Create Set ``(999[``..][Null..]).`8esn` =0.0[999..],`4esn`+=$`5esn` Starts With _usn3 Starts With @usn5,@usn6+=False Is Null"),
    octest:ct_string("Return 9e1[010..] As `6esn` Order By $7 Ends With `5esn` Descending,1e1[\"d_str\"] Ascending Limit $`7esn` Is Null Is Null Unwind #usn7 Starts With 0x0 Starts With Null As `6esn` Union All Detach Delete _usn3 Ends With 12e12 Ends With .e0 Union All Match (@usn6 {_usn3:1e1[.e1..],`1esn`:$#usn8})<-[#usn8?*{usn2:\"d_str\" Contains `3esn` Contains 00,`3esn`:010 Contains 0X0123456789ABCDEF}]->({`6esn`:$`8esn`[..$``]})-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]-(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa}) With Distinct $#usn8 In .e12 In 9e1 Order By All(_usn4 In usn1 Contains False Contains `` Where #usn8[$#usn8..])[(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})..] Asc,0Xa[0xabc..] Ascending,@usn6[$`3esn`] Ascending Skip 1e1 In $#usn8 In 12e12 Unwind 0X7 In $999 In $`` As ``"),
    octest:ct_string("Match #usn7=({`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]->(`3esn` {_usn3:@usn6 Contains _usn4 Contains $`4esn`})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->({_usn3:12.e12 In $0 In Count(*)}) Union Unwind 1000[123.654..9e12][1000.._usn3] As _usn3;"),
    octest:ct_string("Merge `1esn`=((`8esn` :`7esn`{`8esn`:False In 123456789 In $0})-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]-(usn1 :`4esn`:#usn8{``:0 Is Not Null Is Not Null,`3esn`:usn1 Starts With $#usn7 Starts With `5esn`})) On Match Set #usn8($`2esn` Contains usn1 Contains `2esn`).`3esn`? =0xabc[..$`1esn`][..01] On Create Set @usn6+=[usn1[..$_usn4][..``],0X7[.e12..01234567]] In `3esn`(@usn5[..True][..0X7],$`3esn` =~$`7esn` =~False) Return Distinct `7esn`($123456789 Ends With $`6esn`) Starts With {`7esn`:$12[01..][1.e1..],_usn3:$_usn3 =~`7esn` =~$_usn4} As usn1 Order By 12.e12 In .e0 In `7esn` Asc,9e1[.12..] Asc Skip (_usn3 )<-[usn1]->(#usn7 {`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null})-[_usn4?:`6esn`]->(`8esn` :`1esn`) =~Single(#usn7 In 01234567[$`3esn`..] Where 0.12 In $`4esn` In `6esn`) =~Extract(@usn5 In $#usn8 Is Null Is Null Where 12.e12[@usn5..123.654]|$`8esn`[..123456789]) Limit 0.12 In $`4esn` In `6esn`"),
    octest:ct_string("Unwind True[0] As _usn3 Remove `4esn`:``,{#usn7:0[0.12..]}.usn2! Union All Delete Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where \"d_str\" Is Null Is Null)[count(Distinct 0.12 Contains $12 Contains `8esn`)..[$`1esn` Is Null Is Null,9e1 In 01 In 999]],(usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1})-[#usn8? *0xabc{`5esn`:0X7[12]}]->(usn1 {`2esn`:True =~@usn5 =~$`1esn`,`2esn`:`6esn`[1.e1..$#usn7][.e0..True]})[Any(_usn4 In usn1 Contains False Contains `` Where 0.12 In 01 In $`3esn`)..Single(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $123456789[..0x0][..`4esn`])][All(`6esn` In 0X7 =~`` Where $`3esn` =~Null)..{`8esn`:0xabc Ends With $#usn7 Ends With #usn8,usn2:usn1[$`3esn`..$999][True..False]}],usn2(Distinct `7esn` Ends With $usn2 Ends With 999) =~Extract(@usn5 In 0X7 =~.0 =~\"d_str\"|$`5esn` In `2esn` In .0) =~Any(`4esn` In `6esn`['s_str'..][010..] Where 01 Ends With .e0)"),
    octest:ct_string("Merge ((({`5esn`:Count(*)[..`3esn`],usn1:01234567 Ends With 0x0})<-[`6esn`?{`7esn`:.12 Ends With `1esn` Ends With $`1esn`,``:9e0 Starts With `6esn`}]-(usn1 :_usn3{@usn6:True[..'s_str'][..01]})<-[`2esn`?]-(usn2 :`3esn`:`1esn`))) On Match Set `4esn` =.12 Is Not Null Is Not Null,{@usn6:True[..'s_str'][..01]}.`2esn` =12.e12[...0][..0x0],[usn1 In 00 Starts With _usn3 Where $`` Ends With 12e12].`3esn`? =0.12 Starts With {`1esn`:@usn6[..0xabc][..$#usn7]} Starts With {`3esn`:`8esn`[1000..$7][$`7esn`..`2esn`],_usn4:\"d_str\" Is Null Is Null}"),
    octest:ct_string("Remove None(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 01234567[$`3esn`..]).#usn7,[@usn5 In $#usn8 Is Null Is Null Where $`3esn` Contains 0X0123456789ABCDEF Contains 00].`8esn`!,[`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where `7esn`[1e1..07][0x0..Count ( * )]|$`7esn` Is Null Is Null].`6esn` Union All With  *,@usn5 Starts With 12e12 Starts With @usn5 Limit `2esn` In 12.e12 In `3esn`"),
    octest:ct_string("Match `5esn`=(((`` :usn1)<-[#usn8:`3esn`|:`4esn` *0..010]->(`3esn` :usn2:@usn6)-[:`3esn`|:`4esn` *999..{`6esn`:$123456789[..0.12][..#usn7],`3esn`:0 Ends With $7 Ends With _usn3}]->(:`4esn`:#usn8{usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null}))),((_usn3 :_usn4:usn1)<-[`5esn`?:#usn8{#usn7:0.12 Ends With $usn1 Ends With $@usn5}]->({`1esn`:$@usn5 =~$`` =~$usn2})) Where $_usn3[Null] Union Optional Match (`8esn` {`3esn`:12e12 Is Not Null})-[_usn4?:_usn4|:@usn5 *123456789..999{`2esn`:@usn5 In $`6esn`}]->(`1esn` {`4esn`:$`7esn`[$usn1..][0.0..],`1esn`:$123456789[..0x0][..`4esn`]})-[`1esn`:`1esn`{``:_usn3[...e1],`2esn`:.12[`1esn`..][$`3esn`..]}]-(`7esn` :_usn4:usn1) Where $`8esn` =~$usn2;"),
    octest:ct_string("Merge _usn4=(usn1 :_usn4:usn1)<-[`5esn` *0..010]-(usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1}) Union Merge usn2=(:`8esn`{usn2:7 Contains 9e1})<-[_usn3?:`7esn`|`2esn` *010]-(#usn8 :`4esn`:#usn8)-[`8esn` *..0x0{#usn7:Count ( * )[Count ( * )..12e12][usn1..1000],`4esn`:010 Is Null Is Null}]->(@usn6 ) Unwind 0x0 =~_usn4 As `5esn` Union Return 123456789 =~_usn4 =~$0 Order By 0xabc Starts With _usn3 Desc,(`8esn` :usn2:@usn6)<-[#usn7:`3esn`|:`4esn` *00..]->(`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}) =~{@usn6:$_usn3[..Count ( * )][..@usn5],@usn5:12e12[Null]} =~Extract(usn2 In 1000 Contains 0.e0 Where $`7esn` Ends With $`2esn` Ends With $usn1) Ascending,Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 01 In _usn3 In 12|0xabc[$@usn5]) Contains Extract(usn2 In 1000 Contains 0.e0 Where 0.12 In 01 In $`3esn`) Desc Skip Extract(#usn7 In 01234567[$`3esn`..] Where 0xabc[$@usn5])[All(`4esn` In 's_str'[12..'s_str'] Where $_usn4[12e12][`4esn`])][(`6esn` :`5esn`)<-[:``|:_usn4 *0Xa]->(`7esn` :`2esn`:`3esn`)] Limit [@usn5 In .12[#usn7][$`8esn`] Where $@usn5 =~$`` =~$usn2] Is Null Return Distinct *,.e1[usn1..],$1000[.e0..] As `3esn` Skip `5esn`[Count ( * )..][\"d_str\"..]"),
    octest:ct_string("Unwind [@usn6 In @usn5 In $`6esn` Where $`1esn` Is Null Is Null] Contains Filter(`4esn` In 's_str'[12..'s_str'] Where 123.654 Starts With usn1 Starts With @usn5) Contains [`4esn` In $`8esn` Starts With 1000 Where False In `3esn`] As #usn7 Match ((`` :`1esn`)-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`4esn` {`2esn`:@usn6[`5esn`..$`3esn`],`7esn`:$`1esn` Is Null})) Where $`8esn`[$``..$7][$1000..$`7esn`]"),
    octest:ct_string("Unwind 12e12 Starts With $123456789 Starts With 12.0 As usn1 Optional Match `3esn`=(({``:$1000 Is Null Is Null})) Where `1esn`[...e1] Union All Unwind 1e1[@usn5..] As _usn4"),
    octest:ct_string("Match (@usn5 :usn2:@usn6{`7esn`:1000 Contains 0.e0}),(((`2esn` :`5esn`{#usn8:$999 Ends With $`3esn` Ends With `8esn`})-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]-(@usn5 :`5esn`)<-[_usn3?:`3esn`|:`4esn` *0..010]->(_usn3 ))) Union All Return Distinct All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) Is Not Null Is Not Null,0xabc[$@usn5] As `7esn`,.e0[usn2..] As _usn3 Skip 0x0 In `8esn` In 999 Merge #usn8=(:@usn5{usn1:Count(*)[True],@usn6:123456789[$#usn7..]})<-[#usn7]-(`7esn` :`2esn`:`3esn`)-[?:``|:_usn4 *..0X7]->(`4esn` {`6esn`:$12[..``][..$7]}) On Match Set `2esn`+=123.654 In \"d_str\" In $_usn3"),
    octest:ct_string("Unwind 1.e1[Null][12.e12] As `7esn` Unwind Single(`6esn` In 0X7 =~`` Where 12.0[..$7][..999]) Starts With {_usn3:0.12 Is Null Is Null,`1esn`:9e12[0.0..12.e12]} Starts With (`8esn` :@usn5)-[`6esn`?:_usn3|:`4esn` *12..0xabc]-(usn2 :#usn8{`3esn`:123.654[@usn5]})<-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(#usn8 :`5esn`{usn2:.e1 Starts With 0.0 Starts With `6esn`,#usn8:9e12 =~01 =~$`7esn`}) As `4esn` Create `3esn`=((@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})<-[{_usn3:12.e12 In $0 In Count(*)}]-(:#usn7{`2esn`:.12 Starts With @usn5 Starts With $#usn8}))"),
    octest:ct_string("Remove [usn2 In 1000 Contains 0.e0 Where $_usn3[Null]|1000[..$`6esn`][..0xabc]].`` Merge (((:_usn4:usn1)-[@usn5?:@usn6*..]-(`2esn` :`5esn`{#usn8:$999 Ends With $`3esn` Ends With `8esn`})-[?:@usn6]-(_usn3 :`4esn`:#usn8{`1esn`:07[1e1],`7esn`:12e12[$`5esn`][07]}))) On Match Set `5esn` =999[.e12][01],Extract(usn1 In 0x0[..`4esn`] Where @usn6[$`3esn`]).#usn8? =`1esn` In 999 In $#usn7,usn1 =12.e12[0e0..7] Merge `8esn`=((`2esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})) On Match Set Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 01 In _usn3 In 12|0Xa Is Not Null Is Not Null)._usn3? =Single(`6esn` In 0X7 =~`` Where 12.0[..$7][..999]) Starts With {_usn3:0.12 Is Null Is Null,`1esn`:9e12[0.0..12.e12]} Starts With (`8esn` :@usn5)-[`6esn`?:_usn3|:`4esn` *12..0xabc]-(usn2 :#usn8{`3esn`:123.654[@usn5]})<-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(#usn8 :`5esn`{usn2:.e1 Starts With 0.0 Starts With `6esn`,#usn8:9e12 =~01 =~$`7esn`}),#usn7+=$`7esn` =~.e1,Filter(`4esn` In 's_str'[12..'s_str'] Where $123456789 Contains 01 Contains 0.12).#usn8! =.12[`1esn`..] On Create Set #usn8+=12[0X7..@usn6],{``:12e12[$`5esn`][07],_usn3:$`6esn` Is Null Is Null}.usn1 =$`6esn` Is Not Null Is Not Null Union Delete usn2(Distinct 0xabc Contains Null Contains 9e12,12[..True][..$`4esn`]) Is Null,.12 Is Not Null Is Not Null,1e1 Starts With #usn8 Starts With 1.e1 Match ((_usn4 :`2esn`:`3esn`{#usn8:123456789[$#usn7..],#usn7:07[12e12]})),(_usn3 :_usn3)"),
    octest:ct_string("Unwind {#usn8:0X0123456789ABCDEF[..usn1]} Ends With (:``{_usn3:0X0123456789ABCDEF In 01234567})<-[``? *..0X7{_usn4:12 Ends With 01 Ends With 1e1}]-(usn2 :@usn6:`7esn`)-[:usn2|#usn8*..]-(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12}) Ends With [1e1 In $#usn8 In 12e12,123.654 Contains #usn8] As _usn3 Return 0.12[Count(*)..] Order By [@usn5 In .12[#usn7][$`8esn`] Where .e12 =~0.0 =~9e0] Is Null Ascending,`2esn` Is Not Null Is Not Null Ascending,12.0 In 1000 In _usn4 Desc Skip 9e12[$1000][$@usn6] Limit $@usn6 Contains Count ( * ) Unwind 010 In @usn6 As usn2 Union Detach Delete [1e1[0.0],0.12 Contains $`2esn` Contains $_usn4],Filter(_usn4 In usn1 Contains False Contains `` Where 0.12 Contains $`2esn` Contains $_usn4)[..`3esn`(Distinct $`1esn` =~$`1esn` =~#usn7,$@usn5 Contains 01)][..{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}],{`3esn`:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:0e0 =~_usn4}[{`4esn`:$7 Ends With 12.0 Ends With 0xabc,_usn4:0X0123456789ABCDEF[.e0..$`4esn`]}..][Extract(`4esn` In `6esn`['s_str'..][010..] Where $999 Ends With $`3esn` Ends With `8esn`)..] Return Distinct *,\"d_str\"[Count ( * )] As `7esn`,0x0[123456789] As @usn6 Skip `1esn`[@usn6..$123456789]"),
    octest:ct_string("Return Distinct *,None(@usn5 In 0X7 =~.0 =~\"d_str\" Where _usn3[...e1])[[_usn4 In usn1 Contains False Contains `` Where 0.12 In $7 In 0]..][[7[..12e12][..$`6esn`]]..],[usn1[..@usn5][...e0]][(`1esn` :`8esn`{`7esn`:`5esn`[`1esn`]})<-[`6esn`:`4esn`|:`7esn` *..0x0]->(#usn8 :@usn5)] Skip `8esn`[$#usn7] Create (({#usn7:Count ( * )[@usn6..0x0]})<-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]-(`4esn` {`7esn`:.e0[..999][..0X7]})) Remove All(usn2 In 1000 Contains 0.e0 Where 9e12 =~01 =~$`7esn`).@usn6 Union All Detach Delete 0x0 Contains $`8esn` Contains `6esn` Merge _usn4=(usn1 :_usn4:usn1)<-[`5esn` *0..010]-(usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1}) On Create Set `4esn` =$@usn6 Contains 07 Contains 0.e0 On Match Set [0X7 =~.0 =~\"d_str\",9e1[...e0]].@usn5 =Single(@usn5 In .12[#usn7][$`8esn`] Where `6esn` =~$_usn3) Ends With {`2esn`:.12 Ends With `1esn` Ends With $`1esn`,`5esn`:9e12[@usn6..$``][#usn8..Count ( * )]} Ends With (:_usn3{`2esn`:$`5esn` Is Null,@usn6:#usn7 Starts With `1esn`})<-[``?:@usn6]-(:`2esn`:`3esn`{`6esn`:01 In _usn3 In 12,_usn3:$`3esn` =~$`6esn` =~`8esn`})<-[:_usn4|:@usn5 *..0X7]->(`4esn` {`7esn`:.e0[..999][..0X7]}),{@usn6:usn1 In 1000 In $`5esn`,@usn6:9e0[``][123.654]}.`3esn`! =$999 In $`8esn` In `5esn` Union All Return [@usn5 In 0X7 =~.0 =~\"d_str\"|#usn7 Starts With `1esn`][Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where `7esn`[...e1][..\"d_str\"])..][`2esn`(Distinct 12e12[Null],0xabc[12.e12..`1esn`])..],`2esn`(Distinct 7[..12e12][..$`6esn`]) In Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where `5esn`[.e1][0Xa]) As `6esn` Order By None(`6esn` In 0X7 =~`` Where $usn2 Contains 12.e12 Contains 00)[[@usn6 Starts With `7esn` Starts With Null]][{`1esn`:07[`6esn`..][`5esn`..],usn1:$usn2[False..`7esn`][`7esn`.._usn3]}] Ascending,[010 =~$usn2 =~1e1,`6esn` =~01234567 =~0Xa,07[1e1]][(:@usn6:`7esn`)<-[?:_usn3|:`4esn` *010{`8esn`:$``[_usn4..][`7esn`..]}]-(@usn6 {_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12})..][Extract(#usn8 In $`5esn` Is Null Is Null Where 1000[0.0][Null])..] Ascending Unwind #usn8 Is Not Null As usn2"),
    octest:ct_string("Remove Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where True Contains @usn6|123456789 Starts With `2esn` Starts With 9e12).usn2? Create ((({usn1:`2esn`[$`1esn`..][$_usn3..]})<-[``? *..0X7{_usn4:12 Ends With 01 Ends With 1e1}]-(usn2 :@usn6:`7esn`)<-[#usn7 *123456789..999]-(:`5esn`{`3esn`:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:0e0 =~_usn4}))) Merge ``=(`7esn` :`7esn`)-[_usn4?:@usn6 *..7]->({usn1:usn1[$`3esn`..$999][True..False],`7esn`:_usn3 Ends With 12e12 Ends With .e0}) Union All Unwind Any(`4esn` In `6esn`['s_str'..][010..] Where \"d_str\" =~`6esn` =~0Xa)[[$`6esn` Is Null Is Null,0Xa Is Not Null Is Not Null,0X7 In 123.654 In $`2esn`]][[usn2 In 1000 Contains 0.e0 Where $_usn3[Null]|$0 =~$usn1 =~9e1]] As #usn8 Return *,usn2 =~0x0,07 In `5esn` In 12e12 Skip Null Contains 9e1 Limit [@usn6 In @usn5 In $`6esn` Where $`1esn` Is Null Is Null] Contains Filter(`4esn` In 's_str'[12..'s_str'] Where 123.654 Starts With usn1 Starts With @usn5) Contains [`4esn` In $`8esn` Starts With 1000 Where False In `3esn`] Unwind None(usn1 In 0x0[..`4esn`] Where $`2esn` Contains usn1 Contains `2esn`)[..Extract(`6esn` In 0X7 =~`` Where $usn2 Contains 12.e12 Contains 00|$#usn8 Ends With 1000 Ends With .0)][..[@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where #usn7 Ends With 9e1]] As @usn5"),
    octest:ct_string("Unwind False Ends With $`8esn` As `3esn` Create `1esn`=((`8esn` :`7esn`{`8esn`:False In 123456789 In $0})-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]-(usn1 :`4esn`:#usn8{``:0 Is Not Null Is Not Null,`3esn`:usn1 Starts With $#usn7 Starts With `5esn`})) Union Unwind `2esn`(Distinct 7[..12e12][..$`6esn`]) In Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where `5esn`[.e1][0Xa]) As `4esn` Return Distinct *,01234567 Is Null Is Null Order By 0e0 =~Count(*) =~0Xa Descending Skip [$1000 Is Null Is Null] Is Null Limit Extract(@usn6 In @usn5 In $`6esn` Where $`5esn` Contains $@usn6|$0[7..][Null..])[[`6esn` In 0X7 =~`` Where 9e1[0.e0..][#usn8..]]]"),
    octest:ct_string("With  *,usn2 =~0x0,07 In `5esn` In 12e12 Skip `` Is Not Null Is Not Null Where usn1 Contains $`` Remove None(#usn7 In 01234567[$`3esn`..] Where 12[usn1][True]).#usn7?,[@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $`4esn`[..usn1]].@usn5?,[00[01234567][False]].`1esn`? Union Create (`2esn` :``)<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(_usn3 :_usn4:usn1),`8esn`=(`4esn` {@usn5:1e1 In $#usn8 In 12e12})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->(`7esn` {`8esn`:$123456789 Contains 01 Contains 0.12})<-[?:usn2|#usn8 *00..]-(`3esn` :`4esn`:#usn8) Remove (_usn3 :_usn4:usn1)-[`3esn`?:`3esn`|:`4esn` *..01{_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`}]->(usn2 :#usn7)<-[@usn5?:`1esn`]-(#usn7 :`2esn`:`3esn`).usn2,[`6esn` In 0X7 =~`` Where $`6esn`[..0X0123456789ABCDEF]|12 Is Null Is Null].#usn8? Detach Delete 0X0123456789ABCDEF Contains 12.e12 Contains 999,0X0123456789ABCDEF In $1000 In $`3esn`,'s_str' Is Not Null Is Not Null Union All Create `8esn`=(((:#usn7{`7esn`:\"d_str\",usn2:True[`4esn`][$`6esn`]})<-[#usn8?:_usn4|:@usn5 *..0x0]-(#usn8 :`1esn`{#usn7:1e1[`6esn`..]})<-[:#usn7|:_usn4{``:$1000 Is Null Is Null}]->({`6esn`:.e1 Starts With 0.0 Starts With `6esn`,_usn3:$@usn6 Contains 0 Contains $`2esn`}))) Remove [`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`6esn`[$@usn6..]|010 =~$usn2 =~1e1].@usn6?"),
    octest:ct_string("With Distinct *,$@usn6[..$usn1] As _usn3 Order By [`8esn` In 's_str' Starts With 1000 Starts With #usn8] =~[01234567 Ends With 12.0 Ends With 0X7,999[$`6esn`],`` Starts With @usn5] =~(:@usn6:`7esn`{`1esn`:010[@usn5..]})<-[`7esn`?:`5esn`|`1esn`]->(#usn8 :_usn4:usn1) Desc Where 0.12 Contains $12 Contains `8esn` Create @usn5=(({`8esn`:$usn1[0.12..]['s_str'..],`8esn`:`1esn`[0e0..]})-[usn1{`7esn`:``[Count(*)..][@usn5..]}]->(`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`})<-[_usn3?:``|:_usn4 *0xabc{`6esn`:$#usn8 Ends With 1000 Ends With .0,`7esn`:010 =~`6esn`}]-(:usn1{#usn7:12[0X7..@usn6]})),_usn4=(@usn6 {#usn7:False[`2esn`..#usn8]})<-[`6esn`? *00..{`8esn`:$`2esn`[123456789..][00..],`7esn`:123.654 Contains #usn8}]-(`4esn` {@usn6:True[..'s_str'][..01]}) Remove (:`6esn`:`7esn`{#usn8:`5esn` =~0Xa,usn1:12 =~usn1 =~.e12})-[ *00..{`2esn`:$0 Is Not Null}]-(`` :#usn7$0).``,[#usn7 In 01234567[$`3esn`..] Where 0Xa[0xabc..$#usn8]]._usn4!,[.12 Contains $`4esn` Contains $`6esn`].`6esn`? Union All Create (((`7esn` :`2esn`:`3esn`)<-[@usn5?:#usn8 *999..{`1esn`:$@usn5 =~$`` =~$usn2}]->(`2esn` {`3esn`:$999[12.0..]})-[? *00..{#usn8:12.e12[...0][..0x0],`7esn`:$`4esn`[9e1..][0..]}]-(:usn1{`6esn`:7 Contains 9e1,#usn8:`7esn`[...e1][..\"d_str\"]}))),(@usn6 {`4esn`:$`2esn`[..`2esn`]})<-[`4esn`? *00..]-(`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]})-[ *..7]-(:_usn3{@usn6:$`7esn` Is Null Is Null})"),
    octest:ct_string("Match `3esn`=(((#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]})-[?*..{`3esn`:Count(*)[12.e12..],`3esn`:usn2 =~0x0}]-(`` :`3esn`:`1esn`{_usn3:'s_str'[..0.0][..$`4esn`],`4esn`:$123456789 Is Not Null Is Not Null})<-[:`6esn` *..0X7{`3esn`:`1esn` Contains Count ( * ),`7esn`:01234567 =~usn1}]-({usn1:010[@usn5..],`7esn`:`2esn` Is Not Null Is Not Null}))) Unwind 12e12[Count ( * )..][usn2..] As `3esn`"),
    octest:ct_string("Remove (`` )<-[?{@usn5:12.e12['s_str'],`1esn`:_usn3 Ends With 12e12 Ends With .e0}]-(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]})<-[ *00..{@usn5:$`5esn` Is Null Is Null}]->(:_usn4:usn1).`8esn`?,{usn2:0 Contains 12e12,#usn8:$`1esn` Starts With $999}.#usn8? Union All Remove All(`4esn` In 's_str'[12..'s_str'] Where $`8esn`[..$``]).`7esn`! Create `2esn`=(_usn4 {`8esn`:9e1 In 01 In 999})<-[:_usn3|:`4esn`{_usn4:$`3esn` =~$`6esn` =~`8esn`,`5esn`:0X7[0e0..]}]-(:`8esn`),`5esn`=(((`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[ *..7]-(:_usn3{@usn6:$`7esn` Is Null Is Null})-[:`7esn`|`2esn` *12..0xabc]->(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}))) Merge `8esn`=(({_usn3:$0 Ends With $#usn7 Ends With .12})-[:``|:_usn4 *01234567..12{`2esn`:$`` Is Null Is Null,``:$`4esn`[usn1..$#usn8][12.0..`3esn`]}]->(#usn7 {@usn5:`5esn`[.e1][0Xa],@usn6:Count(*)[`7esn`..$12]})-[?:``|:_usn4 *..0X7]->({`2esn`:@usn5 In 0X0123456789ABCDEF,`1esn`:@usn6[`5esn`..$`3esn`]})) Union All Remove [usn2 In 1000 Contains 0.e0 Where 0X7 =~`4esn` =~`8esn`|$`8esn`[$``..$7][$1000..$`7esn`]].`3esn`!,@usn6:#usn8,(@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})-[`2esn`]-({`4esn`:$_usn3[..Count ( * )][..@usn5],#usn8:_usn3 =~00})<-[`6esn`?{`7esn`:.12 Ends With `1esn` Ends With $`1esn`,``:9e0 Starts With `6esn`}]->(:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})._usn3 Remove [@usn5 In 0X7 =~.0 =~\"d_str\" Where $`8esn` Starts With 1000|@usn6 Contains .e1 Contains $`4esn`].`8esn`!"),
    octest:ct_string("Return Distinct 12e12[0.e0..True][0.12..0.0] As #usn7,07[..010][..12.0] As `2esn` Order By `3esn`(Distinct $_usn3[Null],12[..True][..$`4esn`]) Is Null Is Null Descending,Any(@usn5 In $#usn8 Is Null Is Null Where .e1 In $@usn6 In 999) In None(usn1 In 0x0[..`4esn`] Where $123456789[..0x0][..`4esn`]) Ascending Skip Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 01234567[.12..7][1000..1.e1]|$`5esn` In False) Contains {@usn5:Null[0e0][12],_usn4:0 Contains 12e12} Contains [usn1 In 0x0[..`4esn`] Where \"d_str\" Contains `3esn` Contains 00|@usn6[`3esn`..][$7..]] Remove Single(`4esn` In `6esn`['s_str'..][010..] Where 12 =~usn1 =~.e12).`4esn`,`3esn`:`` Union All Detach Delete Extract(`4esn` In $`8esn` Starts With 1000 Where False In `3esn`|$`3esn` =~Null),12 Is Null Is Null With  $`5esn`[$123456789][`1esn`] As `8esn`,[@usn6 In @usn5 In $`6esn` Where $usn2 Is Not Null|$`6esn`[..0X0123456789ABCDEF]][`5esn`(Distinct 0X7 In $@usn5 In 9e0,0x0)..] As #usn7 Order By None(usn1 In 0x0[..`4esn`] Where $`2esn` Contains usn1 Contains `2esn`)[..Extract(`6esn` In 0X7 =~`` Where $usn2 Contains 12.e12 Contains 00|$#usn8 Ends With 1000 Ends With .0)][..[@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where #usn7 Ends With 9e1]] Ascending,Count(*) In 01 In .0 Asc,Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`6esn`[$@usn6..]) In {`7esn`:12e12 Ends With 010 Ends With .0} In None(#usn8 In $`5esn` Is Null Is Null Where 123456789 In $usn2 In `6esn`) Asc Where 0.e0[9e0][0e0]"),
    octest:ct_string("Remove All(_usn4 In usn1 Contains False Contains `` Where 0.12 In $7 In 0).@usn5 Union All Unwind [\"d_str\" Starts With $usn1,.12 Contains $`4esn` Contains $`6esn`,01234567 =~usn1] Is Null Is Null As _usn3 Remove Extract(@usn5 In 0X7 =~.0 =~\"d_str\" Where 07[12e12]|`3esn` Contains 0Xa).usn1? Delete .12[..`6esn`][..\"d_str\"],$`6esn`[`3esn`..0e0],$_usn4[12e12][`4esn`] Union All Unwind [`4esn` In `6esn`[1e1..] Where `3esn` =~0.0 =~$``] =~[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`] As #usn8"),
    octest:ct_string("Return Distinct .e0 Contains 01234567 Order By $#usn8[0xabc][`3esn`] Desc,[0 Is Null Is Null][..[_usn3 =~00,9e1 Is Null Is Null]] Descending Skip Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 01 In _usn3 In 12|0xabc[$@usn5]) Contains Extract(usn2 In 1000 Contains 0.e0 Where 0.12 In 01 In $`3esn`) Union All Match ((:`3esn`:`1esn`{usn2:`5esn`[Count ( * )..][\"d_str\"..],`7esn`:.e1 In $@usn6 In 999})<-[? *1000..{_usn4:$`6esn`[$`1esn`][1000],`2esn`:12e12[$`5esn`][07]}]->()),(((@usn6 {#usn7:False[`2esn`..#usn8]})-[? *010]-(`8esn` :@usn5)<-[#usn8?{`5esn`:Null[01234567][01234567]}]->(`6esn` :@usn6:`7esn`{@usn5:True[0x0][@usn6],`5esn`:Null Starts With _usn4 Starts With `6esn`}))) Where 0xabc[$@usn5] Remove #usn7(Distinct $@usn6[..$usn1],9e12 Is Not Null Is Not Null).usn1 Union Remove `7esn`:`4esn`:#usn8,@usn6:usn2:@usn6 Create `3esn`=((`2esn` :_usn4:usn1{`7esn`:7 In 0xabc})<-[:@usn5|`8esn` *0Xa{usn1:$1000 Contains $`3esn`}]->(`2esn` :``)-[usn2?]-(`2esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})),((#usn8 :`1esn`{#usn7:1e1[`6esn`..]})<-[`1esn`{`6esn`:$_usn4[`3esn`][0],_usn3:999 Contains Count ( * ) Contains 123.654}]->(`7esn` :`7esn`));"),
    octest:ct_string("Create ((`` :`1esn`)-[`1esn`:usn2|#usn8 *1000..]-(`6esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})<-[`4esn`]->({`8esn`:0X7 In 's_str' In $`1esn`})) Detach Delete {`8esn`:9e1 In 01 In 999}[usn1(1e1[..#usn8][..'s_str'])..{#usn8:$999 Ends With $`3esn` Ends With `8esn`}] Union All Return Distinct *,[`4esn` In `6esn`['s_str'..][010..] Where $@usn5 In 12e12 In Count(*)|$1000[01234567]][Any(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7)..{usn1:usn1 Is Null Is Null,usn2:12.0[``]}][(_usn3 {`5esn`:0.12 Contains .e1})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`})..00] As `7esn` Order By 00 Is Null Is Null Descending,$usn2 Starts With $`6esn` Starts With 0xabc Ascending,123456789 Starts With #usn7 Starts With `6esn` Asc Skip Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`|999[$`6esn`]) =~Single(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn`) Limit 0x0 Contains _usn4 Contains 123456789 Unwind Filter(_usn4 In usn1 Contains False Contains `` Where 0.12 Contains $`2esn` Contains $_usn4)[..`3esn`(Distinct $`1esn` =~$`1esn` =~#usn7,$@usn5 Contains 01)][..{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}] As #usn7 Remove ({`2esn`:$`5esn` Is Null,@usn6:#usn7 Starts With `1esn`})<-[ *..0x0{`8esn`:010[@usn5..],#usn8:False Is Not Null Is Not Null}]-(`5esn` {`8esn`:0.0[12...12]}).``!,Single(usn2 In 1000 Contains 0.e0 Where 0e0 Is Not Null Is Not Null).``!,usn1:`8esn` Union Remove [usn1 In 00 Starts With _usn3 Where 010 =~$usn2 =~1e1|9e1 Starts With `1esn` Starts With 0Xa].usn2?,Count ( * ).@usn5?"),
    octest:ct_string("Optional Match @usn6=((:usn1{_usn3:0xabc[12.e12..`1esn`],`1esn`:12[usn1][True]})-[?:`4esn`|:`7esn`]->(#usn7 {`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null})),`8esn`=(`8esn` {`6esn`:00 In 12.e12})<-[`5esn`:@usn6]-(:``{_usn3:0X0123456789ABCDEF In 01234567})<-[`7esn`?:@usn5|`8esn`{@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]}]->(`6esn` {@usn6:9e0 Contains `8esn`}) Where @usn6[`3esn`..][$7..] Create ((`6esn` :_usn4:usn1{`6esn`:00 In 12.e12})<-[`7esn`?:`5esn`|`1esn`]->(`6esn` :@usn6:`7esn`{@usn5:True[0x0][@usn6],`5esn`:Null Starts With _usn4 Starts With `6esn`})),(usn1 :`3esn`:`1esn`)-[?:`4esn`|:`7esn` *..0x0]-(:@usn5{@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]}) Match ((`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})),(((@usn6 {#usn7:'s_str' In \"d_str\" In 123456789,usn2:07[12][$`6esn`]})<-[?:@usn6{`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]}]->(:@usn5)<-[#usn8?:`4esn`|:`7esn` *07..]->(`` :#usn7$0))) Where $`8esn` =~$usn2 Union All Remove _usn4:`3esn`:`1esn`,[$123456789[0.0..],07 In `5esn` In 12e12,$`3esn` Starts With 01234567 Starts With $1000].`3esn`! Return Distinct $`4esn` Contains `6esn` Contains #usn7,0.e0[..#usn8][..Null],$1000 Is Not Null Is Not Null Skip 's_str' =~0.e0 Limit `2esn` In 12.e12 In `3esn` Union Return Distinct [@usn6 In @usn5 In $`6esn` Where $usn2 Is Not Null|$`6esn`[..0X0123456789ABCDEF]][`5esn`(Distinct 0X7 In $@usn5 In 9e0,0x0)..] Order By 123456789 Starts With #usn7 Starts With `6esn` Descending,7[..0X7][..'s_str'] Ascending,None(`4esn` In 's_str'[12..'s_str'] Where 12.0[0Xa][00]) Is Not Null Desc Skip 0x0 Limit (:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[@usn6?:`1esn`]-(:`5esn`)-[@usn5?:`3esn`|:`4esn`{`7esn`:Count(*) In 01 In .0,`6esn`:$123456789[..0.12][..#usn7]}]->(`5esn` :`8esn`) Starts With Single(_usn4 In usn1 Contains False Contains `` Where $`6esn` Is Null Is Null) Match ((`7esn` :`2esn`:`3esn`{@usn6:9e0 Ends With $`7esn`})),``=((`3esn` )) Where $`1esn` Is Null Is Null"),
    octest:ct_string("Unwind [0Xa Is Null Is Null] Is Null As `1esn` With Distinct $`2esn`[``..] As `3esn`,({`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`4esn` {@usn6:True[..'s_str'][..01]}) In Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where 07[12e12]) As `4esn`,[@usn6 =~01,$`7esn` In $7,00[``..][$`4esn`..]][All(`4esn` In $`8esn` Starts With 1000 Where 9e1 Is Null Is Null)..(_usn4 {_usn3:$`1esn` Is Null,usn1:$`4esn`[$`2esn`..]})<-[#usn8?:_usn4|:@usn5 *..0x0]-(#usn8 :`1esn`{#usn7:1e1[`6esn`..]})] As @usn6 Order By `7esn`[1000..][$123456789..] Desc,$#usn8 In .e12 In 9e1 Descending,$@usn5 Contains $`7esn` Contains #usn8 Desc"),
    octest:ct_string("Remove [usn2 In 1000 Contains 0.e0 Where 0X7 =~`4esn` =~`8esn`|$`8esn`[$``..$7][$1000..$`7esn`]].`3esn`!,@usn6:#usn8,(@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})-[`2esn`]-({`4esn`:$_usn3[..Count ( * )][..@usn5],#usn8:_usn3 =~00})<-[`6esn`?{`7esn`:.12 Ends With `1esn` Ends With $`1esn`,``:9e0 Starts With `6esn`}]->(:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})._usn3 Remove [@usn5 In 0X7 =~.0 =~\"d_str\" Where $`8esn` Starts With 1000|@usn6 Contains .e1 Contains $`4esn`].`8esn`! Union Match ((`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]})<-[:`2esn`|usn2 *0..010]->(`` :`1esn`)<-[ *0X0123456789ABCDEF..{#usn8:`5esn` =~0Xa,usn1:12 =~usn1 =~.e12}]->(_usn3 :_usn3)),(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}) Create ((:`4esn`:#usn8{`7esn`:#usn7 Starts With 0 Starts With 12})-[{`5esn`:.e1[..$``][..0X0123456789ABCDEF]}]->(_usn3 {`5esn`:0.12 Contains .e1})<-[@usn6:`3esn`|:`4esn`*]->(`6esn` :`5esn`)),(({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})-[?:`2esn`|usn2{@usn6:0.12[0.e0..][`4esn`..]}]->(:_usn4:usn1)) Union With  All(usn1 In 0x0[..`4esn`] Where .12 Starts With .12 Starts With `3esn`)[[_usn4 In usn1 Contains False Contains `` Where $usn1[0.12..]['s_str'..]|12[..True][..$`4esn`]]..][({`5esn`:0.12 Contains .e1})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:@usn5{#usn7:1e1[@usn5..]})<-[?:`6esn` *01234567..12{`7esn`:7 In 0xabc}]-(#usn7 :usn2:@usn6{`1esn`:$usn2 Contains 12.e12 Contains 00})..] As #usn8,'s_str' In \"d_str\" In 123456789,None(`4esn` In 's_str'[12..'s_str'] Where 12.0[0Xa][00]) Is Not Null Order By 07[1e1] Ascending Limit .e0[usn2..][12..] Where 12 Ends With 01 Ends With 1e1;"),
    octest:ct_string("Delete count(0.12 Ends With $usn1 Ends With $@usn5,@usn5 In $`6esn`) Is Not Null,$`8esn`[$``..$7][$1000..$`7esn`] Remove Filter(`6esn` In 0X7 =~`` Where $0[$#usn8..01234567]).`5esn`?,{#usn7:False[`2esn`..#usn8]}.#usn7?,usn1($`1esn` =~$`1esn` =~#usn7).`1esn`?;"),
    octest:ct_string("Detach Delete Null Is Null Is Null,$`2esn` =~'s_str',`3esn` =~$`5esn` =~12 Union With  0x0[...e12][..@usn5] As @usn5 Limit `1esn`(Distinct Count(*)[..`3esn`]) Starts With $0 Where $12 Contains 123.654 Contains `8esn` Union All Remove Extract(@usn5 In 0X7 =~.0 =~\"d_str\" Where 07[12e12]|`3esn` Contains 0Xa).usn1?"),
    octest:ct_string("With  *,[#usn8 In $`5esn` Is Null Is Null Where 0.0[..12e12][..$0]][{`2esn`:.e1 In $@usn6 In 999,usn2:@usn5 Ends With $`3esn` Ends With 12e12}..] As @usn5 Order By #usn7 Contains $7 Descending,$`8esn`[$``..$7][$1000..$`7esn`] Ascending,`1esn`(Distinct $@usn5[#usn8..][$`1esn`..],#usn7 Ends With `4esn` Ends With @usn5)[[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $999[12.0..]|usn1[Count ( * )..$usn1]]][{`8esn`:010[@usn5..],#usn8:False Is Not Null Is Not Null}] Descending Skip $#usn7 =~0xabc Limit ({`2esn`:$usn2 Is Not Null})-[`4esn`:`4esn`|:`7esn`{`3esn`:Count(*)[`7esn`..$12],_usn3:$999[$1000]}]-(`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})[{_usn4:.12 =~.12 =~1e1,#usn7:.e1 Starts With 0.0 Starts With `6esn`}] Merge (((@usn5 :#usn8{`1esn`:0xabc Ends With $7 Ends With $`2esn`,_usn4:``})-[#usn8? *0xabc{`5esn`:0X7[12]}]->(usn1 {`2esn`:True =~@usn5 =~$`1esn`,`2esn`:`6esn`[1.e1..$#usn7][.e0..True]})-[`6esn`:_usn4|:@usn5 *..7{_usn4:0.0 =~0X7 =~#usn7}]-(usn1 :`3esn`:`1esn`))) On Create Set `7esn` =$`6esn` Is Not Null Is Not Null Union All Unwind Filter(_usn4 In usn1 Contains False Contains `` Where 0.12 Contains $`2esn` Contains $_usn4)[..`3esn`(Distinct $`1esn` =~$`1esn` =~#usn7,$@usn5 Contains 01)][..{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}] As `1esn` Detach Delete _usn3 Is Null,01 Contains 123456789"),
    octest:ct_string("Optional Match `7esn`=(@usn6 {_usn3:1e1[.e1..],`1esn`:$#usn8})<-[#usn8?*{usn2:\"d_str\" Contains `3esn` Contains 00,`3esn`:010 Contains 0X0123456789ABCDEF}]->({`6esn`:$`8esn`[..$``]})-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]-(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa}) Union All Optional Match ``=((({`8esn`:$@usn5 Contains 01,`2esn`:123.654 Contains #usn8})-[usn2?]-(`3esn` {_usn4:12.e12 Ends With 01 Ends With .e1})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`}))),(:usn2:@usn6)-[ *07..]->(`5esn` :`2esn`:`3esn`{_usn3:$`2esn`[$123456789..$`1esn`][0Xa..$``],`5esn`:12.e12[@usn5..123.654]}) Where 0.12 In $7 In 0 Remove `3esn`:`7esn`,(:_usn4:usn1)-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]-(`1esn` :`1esn`).``?,usn2:#usn8"),
    octest:ct_string("Merge `4esn`=(`6esn` :#usn8)-[`4esn`? *00..]-(:`4esn`:#usn8{@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]})-[:`4esn`|:`7esn`{`1esn`:123.654 In \"d_str\" In $_usn3}]-(`1esn` :`4esn`:#usn8{_usn4:$_usn4[#usn8..]}) Union Optional Match usn2=(((@usn6 {#usn7:False[`2esn`..#usn8]})-[? *010]-(`8esn` :@usn5)<-[#usn8?{`5esn`:Null[01234567][01234567]}]->(`6esn` :@usn6:`7esn`{@usn5:True[0x0][@usn6],`5esn`:Null Starts With _usn4 Starts With `6esn`}))),#usn7=(((`4esn` )<-[_usn3?:`3esn`|:`4esn` *0..010]->(_usn3 )<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3}))) Where $_usn4[`3esn`][0] Create (((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})-[:`7esn`|`2esn` *..0X7{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]-(`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})-[`4esn`? *00..]-(:`4esn`:#usn8{@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]})));"),
    octest:ct_string("Merge ``=((@usn6 :_usn4:usn1{@usn6:Null Is Null Is Null,#usn7:`5esn`[Count ( * )..][\"d_str\"..]})-[*{`2esn`:$1000[01234567]}]-(`4esn` :`1esn`)) Union All Optional Match `4esn`=(({_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`})) Union Unwind 0.12 Contains $`2esn` Contains $_usn4 As @usn6 Merge `2esn`=(:usn1{`8esn`:usn1 Contains $``})-[``? *..01]->(`6esn` {`8esn`:.12 =~.12 =~1e1})-[ *010{@usn5:Null Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)}) On Match Set `5esn`(0[0.12..]).`1esn`? =12.e12 In $0 In Count(*),(usn2 :`6esn`:`7esn`{`6esn`:`` Contains 12 Contains True,usn2:$`2esn`[123456789..][00..]})-[`7esn`?{usn1:@usn5 Ends With $`3esn` Ends With 12e12,@usn6:12e12[_usn3..][$@usn5..]}]->(usn2 :`5esn`).#usn8? =[`4esn` In `6esn`[1e1..] Where `3esn` =~0.0 =~$``] =~[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`];"),
    octest:ct_string("Remove (`1esn` )<-[@usn5? *1000..]->(:@usn6:`7esn`{_usn3:False[`2esn`..#usn8]})<-[@usn5?:`1esn`]-(_usn3 :`4esn`:#usn8{`1esn`:07[1e1],`7esn`:12e12[$`5esn`][07]})._usn4?,Any(@usn5 In $#usn8 Is Null Is Null Where False Contains `3esn`).`5esn`?,Extract(@usn5 In 0X7 =~.0 =~\"d_str\"|$`5esn` In `2esn` In .0).`2esn`? Remove (#usn8 :`5esn`{usn2:.e1 Starts With 0.0 Starts With `6esn`,#usn8:9e12 =~01 =~$`7esn`})<-[`7esn`?:`5esn`|`1esn` *0xabc]->(#usn7 {`6esn`:123456789 Is Null,`1esn`:00 In 12.e12}).`8esn`? Union Detach Delete $_usn4['s_str'..] Unwind 1.e1 Is Not Null Is Not Null As `4esn` Union All Return *,{#usn7:0[0.12..]} Ends With Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]) Ends With {@usn5:\"d_str\" Is Null Is Null,@usn5:$_usn4[`3esn`][0]} As `8esn`,@usn5 Ends With 1.e1 Ends With 0X0123456789ABCDEF As `8esn` Skip {_usn3:0.12 Is Null Is Null,`1esn`:9e12[0.0..12.e12]} Ends With {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]}"),
    octest:ct_string("Unwind `4esn`[7..][1000..] As usn2 Create ((:_usn3{@usn6:$`7esn` Is Null Is Null})-[``:``|:_usn4 *0X0123456789ABCDEF..{_usn3:$_usn3[..Count ( * )][..@usn5]}]-(#usn8 :@usn6:`7esn`)<-[?:_usn3|:`4esn` *010{`8esn`:$``[_usn4..][`7esn`..]}]-(`2esn` )) Unwind $`2esn`[$123456789..$`1esn`][0Xa..$``] As `7esn` Union All Create `8esn`=(`8esn` {`6esn`:00 In 12.e12})<-[`5esn`:@usn6]-(:``{_usn3:0X0123456789ABCDEF In 01234567})<-[`7esn`?:@usn5|`8esn`{@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]}]->(`6esn` {@usn6:9e0 Contains `8esn`})"),
    octest:ct_string("Detach Delete $@usn5 In 12e12 In Count(*),`` =~12 =~$#usn7,Null Contains _usn4 Union Create ((usn2 {usn1:123.654 Contains #usn8,`8esn`:0x0 Starts With $`7esn` Starts With `2esn`})-[? *999..]-(:`4esn`:#usn8{@usn6:$`4esn`[$`2esn`..]})) With  *,0X0123456789ABCDEF Ends With 0X0123456789ABCDEF Ends With 's_str' Order By [`8esn` In 's_str' Starts With 1000 Starts With #usn8] =~[01234567 Ends With 12.0 Ends With 0X7,999[$`6esn`],`` Starts With @usn5] =~(:@usn6:`7esn`{`1esn`:010[@usn5..]})<-[`7esn`?:`5esn`|`1esn`]->(#usn8 :_usn4:usn1) Descending,$123456789 Ends With .e0 Ascending,({@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]})-[`6esn`?:`4esn`|:`7esn` *0..010{_usn3:$`1esn` Starts With @usn6}]-(`2esn` {#usn8:12.e12[0e0..7]}) Desc Skip 0X0123456789ABCDEF[.e0..$`4esn`] Where 9e12[0.0..12.e12] Create ((usn1 :`6esn`:`7esn`)),((usn2 :`7esn`{@usn5:usn1[$`3esn`..$999][True..False],`8esn`:$`5esn` Is Null Is Null})-[@usn5?:@usn6*..]-(@usn5 {@usn6:0.0[999..],#usn8:Null Is Null Is Null})<-[`6esn`?{`7esn`:@usn6 Contains _usn4 Contains $`4esn`}]-(`1esn` :``)) Union Unwind $`1esn` Ends With _usn4 Ends With `3esn` As `8esn` Merge (`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[?:`2esn`|usn2{@usn6:0.12[0.e0..][`4esn`..]}]->(usn1 :#usn8)<-[ *..0x0{`4esn`:$`7esn`[$usn1..][0.0..],`1esn`:$123456789[..0x0][..`4esn`]}]->(#usn8 :`4esn`:#usn8{#usn7:$`8esn` Starts With 1000}) On Create Set `6esn` =$@usn5[Count ( * )] On Create Set Single(usn1 In 00 Starts With _usn3 Where $`7esn` Ends With 07 Ends With 07).`6esn`? =Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 00 Ends With .12 Ends With `4esn`) Contains {`7esn`:0e0 Is Null Is Null,usn2:`4esn` =~123456789},@usn5 =[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn7 In .e1 In 01][..(usn1 :#usn8)-[:`1esn` *010{`2esn`:$_usn3[9e1][$_usn4],`7esn`:`7esn`[...e1][..\"d_str\"]}]->(`7esn` :#usn8)<-[:#usn7|:_usn4{usn2:`5esn`[Count ( * )..][\"d_str\"..],`7esn`:.e1 In $@usn6 In 999}]-({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})][..Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $usn2[..12.0])],[usn1 In 00 Starts With _usn3 Where 12 Ends With .e12 Ends With $7|_usn3 =~00].#usn7! =Single(usn1 In $123456789 Contains usn2 Where Count ( * )[..1e1]) Is Not Null"),
    octest:ct_string("Return $`3esn`[@usn5..$123456789] As _usn4,`5esn`[`1esn`..`1esn`] As #usn7,$0 =~$0 =~.e0 As `7esn` Skip 0e0 Starts With .e12 Delete ``[$`3esn`][$`2esn`],12 Ends With 01 Ends With 1e1,.12 Starts With 0Xa Union Return *,$@usn6[..12e12],`8esn` Ends With 0X0123456789ABCDEF Ends With `1esn` As usn2 Skip 1000[..$`6esn`][..0xabc] Limit $`8esn`[..$``] Union Create (_usn4 :@usn6:`7esn`)<-[#usn8?:_usn4|:@usn5 *..0x0]-(`6esn` :#usn7{`5esn`:#usn7 Is Not Null Is Not Null})-[#usn8? *12..0xabc]-(#usn8 :`4esn`:#usn8{#usn7:$`8esn` Starts With 1000})"),
    octest:ct_string("Delete $`2esn`[123456789..][00..],$`4esn`[9e1..][0..],$`2esn` Ends With `3esn` Ends With $7 Unwind [`4esn` In 's_str'[12..'s_str'] Where 9e12 =~01 =~$`7esn`][#usn7(00 In 12.e12)..Extract(usn1 In 0x0[..`4esn`] Where 1000 Ends With 1000 Ends With $`4esn`|@usn6[$`3esn`])][(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})<-[`8esn`]->(#usn8 )<-[`3esn` *00..{`8esn`:@usn6 Contains .e1 Contains $`4esn`,_usn4:0X7[..12e12]}]->(@usn5 {`1esn`:0[usn2..]})..(usn1 :_usn4:usn1)<-[@usn5?:`1esn`]-(#usn7 :`2esn`:`3esn`)] As _usn3 Union All With Distinct $12 Contains 123.654 Contains `8esn` As _usn4 Limit Filter(@usn6 In @usn5 In $`6esn` Where .12[`1esn`..][$`3esn`..]) Unwind $@usn5[Count ( * )] As _usn3 Unwind 999 Contains `7esn` As @usn5"),
    octest:ct_string("Remove #usn7:_usn3,[`6esn` Starts With $usn2 Starts With 0.0,.e0[7..$`3esn`]].#usn8!,All(usn2 In 1000 Contains 0.e0 Where #usn7 Starts With .e12 Starts With $`7esn`).`4esn` Create _usn3=(($999)),``=(({`8esn`:0X7 In 's_str' In $`1esn`})<-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]->(`1esn` :`1esn`)) Detach Delete {`3esn`:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:0e0 =~_usn4}[All(@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7)..{_usn3:`1esn` In 999 In $#usn7,@usn5:\"d_str\" Starts With $usn1}][{#usn8:$999 Ends With $`3esn` Ends With `8esn`}..(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[`1esn`{_usn4:`3esn` Contains 0Xa}]-(#usn7 :`6esn`:`7esn`)],({_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]->(`6esn` {`8esn`:`8esn` In $@usn5}) In None(@usn5 In 0X7 =~.0 =~\"d_str\" Where #usn8 Ends With `4esn` Ends With $`4esn`) In Any(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $123456789[..0x0][..`4esn`])"),
    octest:ct_string("Remove None(usn1 In 00 Starts With _usn3 Where 123456789[`4esn`..][Count ( * )..]).#usn8!,All(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0X7[0e0..])._usn4 Return Distinct *,(_usn3 :_usn4:usn1)-[`3esn`?:`3esn`|:`4esn` *..01{_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`}]->(usn2 :#usn7)<-[@usn5?:`1esn`]-(#usn7 :`2esn`:`3esn`)[Extract(@usn6 In @usn5 In $`6esn` Where 9e0 =~$`5esn`|`2esn`[$`1esn`..][$_usn3..])..Extract(@usn5 In $#usn8 Is Null Is Null Where @usn5 Contains $`1esn` Contains 999)] As `8esn`,[1.e1 =~$_usn4,.12 Contains $`4esn` Contains $`6esn`] Ends With Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn8 In .e12 In 9e1) As `8esn` Order By @usn5 Starts With 12e12 Starts With @usn5 Desc Skip _usn4(usn1[Count ( * )..$usn1],_usn3 Ends With 12e12 Ends With .e0)[All(usn1 In 0x0[..`4esn`] Where $`2esn`[123456789..][00..])..Filter(@usn6 In @usn5 In $`6esn` Where 12[`7esn`...0][0.12..``])][[@usn6 In @usn5 In $`6esn` Where $``[_usn4..][`7esn`..]|12.e12 In $0 In Count(*)]..(:usn1)-[#usn7?:_usn4|:@usn5{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]->(:`2esn`:`3esn`)] Merge `4esn`=({`8esn`:0X7 In 's_str' In $`1esn`}) On Match Set usn2+=.e1 Ends With _usn4 Ends With @usn5,@usn5+=_usn3 In .e1 In $12,Extract(`4esn` In `6esn`[1e1..] Where $`7esn` Ends With `1esn` Ends With True).`` =010 In @usn6 On Match Set usn1 =Count ( * ) =~All(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7)"),
    octest:ct_string("Remove [`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 0 Is Not Null Is Not Null|$`5esn` In `2esn` In .0].``?,None(@usn5 In .12[#usn7][$`8esn`] Where 0X7[.e12..01234567]).`5esn`!,`8esn`:`6esn`:`7esn` With  0Xa Starts With 0.12 Starts With .0 As usn2,[$`8esn` In \"d_str\" In 9e12,9e0 Contains `8esn`,$@usn6 Contains 0 Contains $`2esn`][Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 01 In _usn3 In 12)][Extract(#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|`7esn` Starts With $usn2 Starts With .e0)] As _usn4,$@usn6 Contains 0 Contains $`2esn` As `` Limit 1e1 In $999 In $usn2 Detach Delete Any(#usn7 In 01234567[$`3esn`..] Where 00 In 1e1)[[usn2 In 1000 Contains 0.e0 Where 12e12 Ends With 010 Ends With .0|0xabc[12.e12..`1esn`]]..][[@usn5 In .12[#usn7][$`8esn`] Where $@usn5 =~$`` =~$usn2]..],0.0[.e12][7],{`4esn`:0X7 =~.0 =~\"d_str\",_usn4:00 Ends With $_usn4 Ends With $`2esn`} Ends With Extract(#usn7 In 01234567[$`3esn`..] Where .12 In $999 In `5esn`) Ends With [$`3esn`[@usn5..$123456789],00,'s_str'[.12..$#usn7][$999..`2esn`]] Union All Delete Count ( * )[.0..][$999..],_usn3[...e1],Single(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where .12 Starts With @usn5 Starts With $#usn8) =~(@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})<-[_usn4?:`6esn`]-(`2esn` {`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null}) =~(_usn4 :usn1)-[@usn5? *999..]-(usn1 :`4esn`:#usn8)-[usn2?:`2esn`|usn2*..{@usn5:$1000[01234567],@usn5:0x0[$`3esn`..010][$#usn7..00]}]->(`4esn` {#usn8:`1esn`[0e0..],#usn7:$`6esn`[..0X0123456789ABCDEF]}) Return Distinct 0X0123456789ABCDEF Ends With 0X0123456789ABCDEF Ends With 's_str' Limit usn2[$`7esn`..010][00..``] With  @usn6(123456789 =~$123456789) In Extract(`4esn` In `6esn`[1e1..]) In {``:True[..'s_str'][..01],usn1:0.12 In $7 In 0} Limit .12 Is Not Null Is Not Null Union All Match (#usn7 {@usn5:`5esn`[.e1][0Xa],@usn6:Count(*)[`7esn`..$12]}),((:`7esn`{`2esn`:`` Starts With @usn5,usn2:$`2esn` Starts With .e0 Starts With 12.0})) Where $`6esn`[`1esn`..][.e0..]"),
    octest:ct_string("Detach Delete `6esn` =~01234567 =~0Xa,0.0 Is Null Is Null,{#usn7:0[0.12..]} Ends With Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]) Ends With {@usn5:\"d_str\" Is Null Is Null,@usn5:$_usn4[`3esn`][0]} Optional Match _usn4=((:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[`6esn`:``|:_usn4 *..01]->(`5esn` {_usn4:0X7 =~``})-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(usn2 :usn1{``:9e12 Ends With 0X0123456789ABCDEF Ends With #usn7})),(((#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]})-[?*..{`3esn`:Count(*)[12.e12..],`3esn`:usn2 =~0x0}]-(`` :`3esn`:`1esn`{_usn3:'s_str'[..0.0][..$`4esn`],`4esn`:$123456789 Is Not Null Is Not Null})<-[:`6esn` *..0X7{`3esn`:`1esn` Contains Count ( * ),`7esn`:01234567 =~usn1}]-({usn1:010[@usn5..],`7esn`:`2esn` Is Not Null Is Not Null}))) Where $`` Ends With 12e12 Unwind Count(*)[`7esn`..$12] As `1esn` Union All Create (((`7esn` :`2esn`:`3esn`)<-[@usn5?:#usn8 *999..{`1esn`:$@usn5 =~$`` =~$usn2}]->(`2esn` {`3esn`:$999[12.0..]})-[? *00..{#usn8:12.e12[...0][..0x0],`7esn`:$`4esn`[9e1..][0..]}]-(:usn1{`6esn`:7 Contains 9e1,#usn8:`7esn`[...e1][..\"d_str\"]}))),(@usn6 {`4esn`:$`2esn`[..`2esn`]})<-[`4esn`? *00..]-(`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]})-[ *..7]-(:_usn3{@usn6:$`7esn` Is Null Is Null});"),
    octest:ct_string("Return *,$`1esn`[9e1.._usn4][$999..$`2esn`] As `8esn`,$_usn3 In $#usn8 As #usn7"),
    octest:ct_string("Remove Extract(@usn6 In @usn5 In $`6esn` Where False Contains `3esn`).`5esn`?,(`2esn` {`3esn`:$999[12.0..]})-[:usn2|#usn8 *01234567..12{usn2:$`3esn` In $12 In 's_str'}]-(usn1 :_usn3).`5esn` Unwind $#usn8 As _usn3 Unwind usn1 In 1000 In $`5esn` As #usn8"),
    octest:ct_string("Unwind $123456789 In Count(*) In .e1 As usn1 Union All Delete [@usn6 In @usn5 In $`6esn` Where False[0Xa..$@usn5][$`6esn`..12e12]][{@usn6:.12 Starts With 0Xa}..(`2esn` {usn1:@usn6[$`7esn`],_usn3:$@usn6[..12e12]})-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]->(usn1 {#usn7:Count ( * )[@usn6..0x0]})-[@usn6?:#usn8 *..7{@usn5:@usn5 Starts With 12e12 Starts With @usn5}]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})],usn1[1e1][$_usn4] Remove {_usn4:00 In 0.12 In `5esn`,@usn5:0X7 =~.0 =~\"d_str\"}.`6esn`? Optional Match `1esn`=((@usn5 {@usn6:$123456789[0X7..12.e12]})<-[:`5esn`|`1esn`]-(#usn8 {@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null})) Union Return *,usn1[Count ( * )..$usn1] As usn1,$`2esn` =~'s_str' As @usn5;"),
    octest:ct_string("Return *,{`4esn`:$usn1[0.12..]['s_str'..]} In None(`4esn` In $`8esn` Starts With 1000 Where 0.12 In 01 In $`3esn`) In usn2(True Contains @usn6) As `2esn` Order By (#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :usn2:@usn6)-[`1esn`:`8esn`|:usn1 *0xabc{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]-(@usn5 :#usn8{`1esn`:0xabc Ends With $7 Ends With $`2esn`,_usn4:``})[.._usn4(@usn6[`5esn`..$`3esn`],`8esn`[$``])] Asc,.e1[..$``][..0X0123456789ABCDEF] Ascending Limit Extract(`4esn` In `6esn`[1e1..] Where 123456789 =~_usn4 =~$0) Contains (`3esn` :usn2:@usn6{`4esn`:`7esn` Contains .0 Contains 9e12})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:@usn5{#usn7:1e1[@usn5..]})-[`5esn`? *00..{usn1:07[`6esn`..][`5esn`..],`2esn`:#usn7 Contains .0 Contains .e1}]->(`5esn` :usn2:@usn6) Contains ({#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1})-[#usn7?:_usn4|:@usn5{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]->(:`2esn`:`3esn`)<-[`7esn`?:#usn8]->(@usn5 :usn2:@usn6{`7esn`:1000 Contains 0.e0}) Return *,.e1[$_usn4][1e1] As `7esn` Order By 9e0 Ends With $`7esn` Asc Skip 's_str'[12..'s_str']"),
    octest:ct_string("Return $`4esn` Contains 0Xa,010 In `7esn` Limit False Contains `3esn` With  Filter(`4esn` In `6esn`['s_str'..][010..] Where 9e0 =~$`5esn`)[[1e1[0.0],0 Contains 12e12,$123456789[..0x0][..`4esn`]]] As `3esn`,False[`2esn`..#usn8],00 Is Null Is Null Order By {`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]}[({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})-[? *999..]-({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`8esn` :`7esn`)][{@usn5:`` In `6esn`,`1esn`:$`2esn`[$`2esn`..]}] Asc,0.12 In $7 In 0 Desc Skip 9e12[0.0..12.e12] Limit $usn1[.e12..`8esn`][True..$@usn5] Create (usn2 :#usn8{`3esn`:123.654[@usn5]})-[@usn5?:@usn6$_usn3]->(:_usn4:usn1{`1esn`:123456789 Starts With `2esn` Starts With .0,@usn6:12.e12 Contains `5esn`}) Union All Optional Match ``=(#usn8 :usn2:@usn6{`5esn`:00 Ends With $_usn4 Ends With $`2esn`,usn2:#usn7 Starts With 0 Starts With 12}) Where 123456789[$#usn7..] Remove (:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[`2esn`]-(`6esn` :#usn7)-[_usn4?:`6esn`]-(@usn5 :`8esn`).`7esn`,`7esn`(usn2 Is Null Is Null,`6esn` =~$_usn3).`1esn`! Union All Unwind 999 Contains `7esn` As `7esn`"),
    octest:ct_string("Remove [usn2 In 1000 Contains 0.e0 Where True[Count(*)..][1e1..]]._usn3,{`7esn`:$`7esn` Ends With 07 Ends With 07,`5esn`:@usn5 Ends With $`3esn` Ends With 12e12}.@usn6,[usn1 In 0x0[..`4esn`] Where $1000 Is Null Is Null|12[usn1][True]].usn2? Match (((`7esn` :``)<-[``?:@usn6]-(`6esn` :`3esn`:`1esn`{`7esn`:7 In 0xabc})-[:usn1|`3esn`*]->(:_usn3{`8esn`:0X0123456789ABCDEF In $1000 In $`3esn`}))) With  `3esn` Contains 0Xa As `6esn`,[_usn4 Starts With $@usn6 Starts With #usn7,$@usn5 Contains 01] =~`4esn`(12 Ends With 01 Ends With 1e1) =~Extract(`6esn` In 0X7 =~`` Where 0x0[..`4esn`]) As ``,[usn1[..@usn5][...e0]][(`1esn` :`8esn`{`7esn`:`5esn`[`1esn`]})<-[`6esn`:`4esn`|:`7esn` *..0x0]->(#usn8 :@usn5)]"),
    octest:ct_string("With  $_usn4[$`1esn`] As `5esn`,(:`5esn`{`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]})<-[usn1 *..0x0]->(usn1 :`6esn`:`7esn`)-[?:usn1|`3esn` *999..{_usn4:$999[12.0..],usn1:0[usn2..]}]->(:usn1{_usn3:0xabc[12.e12..`1esn`],`1esn`:12[usn1][True]})[..[07[$999],@usn6[$`7esn`]]][.._usn4(0X7 In $@usn5 In 9e0)] As `6esn`,All(_usn4 In usn1 Contains False Contains `` Where #usn8[$#usn8..])[(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})..] As `5esn` Order By True[0x0][@usn6] Ascending,$`5esn` Contains $@usn6 Desc Skip Single(usn1 In $123456789 Contains usn2 Where Count ( * )[..1e1]) Is Not Null Limit _usn3 In $#usn8 In usn1 Where 's_str'[..0.e0][..`1esn`] With  *,.e0[..0X0123456789ABCDEF][...e12] As `6esn` Order By usn2[`3esn`][_usn3] Asc Skip 7[$`4esn`..123456789] Union Return Distinct \"d_str\",0X0123456789ABCDEF Ends With 0X0123456789ABCDEF Ends With 's_str',$@usn5[01] Order By 01234567 Starts With $_usn4 Desc,0.12 Contains .e1 Ascending,0x0 =~_usn4 Descending Skip [usn2 In 1000 Contains 0.e0 Where $`6esn`[..0X0123456789ABCDEF]] Contains None(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $`4esn`[..usn1]) Contains Extract(`6esn` In 0X7 =~`` Where 0x0[..`4esn`])"),
    octest:ct_string("Unwind (_usn3 )<-[usn1]->(#usn7 {`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null})-[_usn4?:`6esn`]->(`8esn` :`1esn`) =~Single(#usn7 In 01234567[$`3esn`..] Where 0.12 In $`4esn` In `6esn`) =~Extract(@usn5 In $#usn8 Is Null Is Null Where 12.e12[@usn5..123.654]|$`8esn`[..123456789]) As `2esn` Union Create @usn6=((:``{`5esn`:.e1 In $@usn6 In 999})),`4esn`=((`6esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})) Detach Delete 0X0123456789ABCDEF Contains 12.e12 Contains 999,0X0123456789ABCDEF In $1000 In $`3esn`,'s_str' Is Not Null Is Not Null Union Merge ((_usn4 {`8esn`:9e1 In 01 In 999})) With Distinct .e12[.12..][_usn4..] As _usn4,{`7esn`:.e0 Contains #usn7 Contains $#usn8}[(:usn2:@usn6{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8})-[? *999..]-(:`4esn`:#usn8{@usn6:$`4esn`[$`2esn`..]})..None(`6esn` In 0X7 =~`` Where 12.e12['s_str'])][(`5esn` :`7esn`)-[?:`8esn`|:usn1 *..0X7{@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00}]->(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})..({`7esn`:12e12 Ends With 010 Ends With .0})<-[?:`5esn`|`1esn`{_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12}]-({@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]})],$999[$_usn4..][$`5esn`..]"),
    octest:ct_string("Create ((_usn4 :`7esn`)<-[`6esn`:usn1|`3esn`]->(:`3esn`:`1esn`{_usn4:`1esn`[@usn6..$123456789],`4esn`:$usn2[..12.0]})<-[``?:_usn3|:`4esn`]-(:_usn3{`6esn`:.e12[..0.e0][..$`1esn`],`8esn`:7 In 0xabc})) Union Optional Match (`6esn` :@usn6:`7esn`{@usn5:True[0x0][@usn6],`5esn`:Null Starts With _usn4 Starts With `6esn`}),(:`1esn`{@usn6:$_usn4[$`4esn`..$#usn7][`6esn`..7],`8esn`:'s_str'['s_str'..$usn2][_usn3.._usn3]})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`}) Where Null[01234567][01234567] Create usn1=((#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})-[`6esn`?:usn1|`3esn`{`2esn`:1e1[@usn5..],`3esn`:$`6esn`[`3esn`..0e0]}]->(:`4esn`:#usn8{usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null})) Remove usn1:`1esn` Union With Distinct *,$usn2[12..$`7esn`][$0..$`7esn`],[0Xa[$``..][01234567..]] Contains `3esn`(Distinct _usn3 In .e1 In $12) Contains (`5esn` :`8esn`{`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null})<-[:@usn5|`8esn`*..]-(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})-[``?{usn2:@usn5 In 0X0123456789ABCDEF,usn2:9e1 Is Null Is Null}]->(`8esn` :_usn3{``:12.e12['s_str']}) As @usn6 Skip 9e1 Starts With 9e1 Starts With 010 Limit `3esn`(Distinct 0.0[999..])[Any(`6esn` In 0X7 =~`` Where $0 Is Not Null)..[010 =~$usn2 =~1e1,`1esn`[@usn6..$123456789]]] Merge ((({`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})<-[?:@usn6]-(`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})-[:_usn4|:@usn5]->(`5esn` :#usn7))) On Match Set (`5esn` {@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00})<-[?{#usn7:`6esn`[False..0.0][12e12..$usn2]}]-(`4esn` {`4esn`:#usn7[..$1000][..01]})-[`5esn`?:`3esn`|:`4esn`{`1esn`:$usn2 Contains 12.e12 Contains 00}]-(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]}).`4esn`! =0 Is Not Null,`6esn` =9e12 Ends With 0X0123456789ABCDEF Ends With #usn7,`1esn` =$_usn3[$`4esn`..Null] On Create Set 12.e12.`4esn`? =12e12 Starts With $123456789 Starts With 12.0,(#usn8 :_usn3)-[`8esn`?:`6esn`{#usn7:True =~@usn5 =~$`1esn`,@usn6:False[.e1..Null]}]->(:``{`2esn`:$7,usn1:.12 Contains $`4esn` Contains $`6esn`})-[`6esn`?:@usn6 *999..]->(`2esn` :usn2:@usn6).`3esn`? =All(#usn8 In $`5esn` Is Null Is Null Where #usn8[$#usn8..])[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..(#usn8 {`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]})<-[?:@usn5|`8esn`]-(usn2 :@usn5{`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})<-[?:#usn8{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]->(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})] Merge (`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`})-[_usn4{@usn6:`1esn`[...e1],`5esn`:`5esn`[`1esn`]}]->(`7esn` :`8esn`{`4esn`:00 Ends With .12 Ends With `4esn`})-[ *07..]->(usn2 :@usn6:`7esn`) On Create Set #usn8:_usn4:usn1,[0 Is Not Null Is Not Null].usn2! =(:`1esn`{@usn5:123456789 Starts With `2esn` Starts With 9e12})-[#usn7? *999..]-(@usn5 :_usn4:usn1{`1esn`:07[1e1],`7esn`:12e12[$`5esn`][07]})-[`6esn`:``|:_usn4 *..01]->(`7esn` :`6esn`:`7esn`{_usn4:07 In `5esn` In 12e12})[Extract(#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|`7esn` Starts With $usn2 Starts With .e0)..Extract(#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str')]"),
    octest:ct_string("Create _usn3=((({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})-[``?{usn2:@usn5 In 0X0123456789ABCDEF,usn2:9e1 Is Null Is Null}]->(`8esn` :_usn3{``:12.e12['s_str']})-[:usn2|#usn8*..]-(`5esn` :`7esn`))),(_usn4 :`7esn`)<-[_usn3]->(_usn4 :`3esn`:`1esn`{`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]}) Return *,.12[`1esn`..][$`3esn`..] As usn2 Limit usn2 Starts With @usn6 With  0.12[Count(*)..] Order By .0 Is Null Is Null Ascending,`1esn`(Distinct $@usn5[#usn8..][$`1esn`..],#usn7 Ends With `4esn` Ends With @usn5)[[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $999[12.0..]|usn1[Count ( * )..$usn1]]][{`8esn`:010[@usn5..],#usn8:False Is Not Null Is Not Null}] Asc Skip 0 Contains 12e12"),
    octest:ct_string("Remove (_usn3 :_usn4:usn1)-[`3esn`?:`3esn`|:`4esn` *..01{_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`}]->(usn2 :#usn7)<-[@usn5?:`1esn`]-(#usn7 :`2esn`:`3esn`).usn2,Extract(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 123456789[$#usn7..]|.e12 Contains $12 Contains 12.e12).usn1?,{_usn3:'s_str' =~0.e0}.usn2? Delete [usn1[..$_usn4][..``],0X7[.e12..01234567]] In `3esn`(@usn5[..True][..0X7],$`3esn` =~$`7esn` =~False) Union All Return *,All(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $123456789 Ends With $`6esn`) Is Null As `5esn` Skip 1e1[..False] Limit 12e12[$`5esn`][07] Detach Delete .e1[$_usn4][1e1] Union All With Distinct 0 =~12.e12 =~$``,0.12 Contains .e1 As `6esn`,01 Contains $`7esn` Contains 9e0 Order By Count ( * )[..1e1] Asc,_usn3(Distinct 0.12 In 01 In $`3esn`,1.e1[0X0123456789ABCDEF..][$`5esn`..]) Ends With Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) Ends With Filter(usn2 In 1000 Contains 0.e0 Where 12e12 Ends With 010 Ends With .0) Asc,[0X0123456789ABCDEF In 01234567,0x0 Contains _usn4 Contains 123456789] Ascending Skip Extract(#usn8 In $`5esn` Is Null Is Null Where 's_str' Starts With 1000 Starts With #usn8|07)[None(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 12[..True][..$`4esn`])..usn2(Distinct $1000[01234567],00 In 0.12 In `5esn`)][`8esn`(00[``..][$`4esn`..],123.654[@usn5])..Extract(@usn5 In $#usn8 Is Null Is Null Where @usn5 Contains $`1esn` Contains 999)] Limit _usn3(0x0[0X7..][usn1..])[..Any(#usn8 In $`5esn` Is Null Is Null Where 999[$`8esn`])][..{#usn7:False[`2esn`..#usn8]}] Create `8esn`=((_usn4 :`3esn`:`1esn`{`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]}))"),
    octest:ct_string("With  *,123.654[`5esn`] Skip `2esn`(`2esn`[$`3esn`..],$`4esn`[12.0..`5esn`])[..Extract(usn1 In 00 Starts With _usn3 Where `6esn`[1e1..]|_usn3 In .e1 In $12)][..Extract(#usn7 In 01234567[$`3esn`..]|0.0[999..])] Limit $_usn3[..$_usn3][.._usn4] Where False Is Not Null Is Not Null"),
    octest:ct_string("Remove None(usn1 In 0x0[..`4esn`] Where False[.e1..Null]).``,[.e0[..999][..0X7]].`5esn`? Unwind Extract(`4esn` In `6esn`['s_str'..][010..] Where $`8esn`[``..][123.654..]) Contains Extract(#usn8 In $`5esn` Is Null Is Null Where @usn6 Contains .e1 Contains $`4esn`) Contains Any(`4esn` In `6esn`['s_str'..][010..] Where 12.e12 Ends With 01 Ends With .e1) As usn2 Union All Unwind (@usn6 :``{@usn5:@usn5 Starts With 12e12 Starts With @usn5})<-[ *00..{@usn5:$`5esn` Is Null Is Null}]->(:_usn4:usn1)-[_usn4:_usn3|:`4esn` *1000..{#usn8:$999 Ends With $`3esn` Ends With `8esn`}]->(#usn7 :`7esn`{`4esn`:.12 Starts With .12 Starts With `3esn`}) In Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 01 In _usn3 In 12|0xabc[$@usn5]) In (usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1})-[#usn8? *0xabc{`5esn`:0X7[12]}]->(usn1 {`2esn`:True =~@usn5 =~$`1esn`,`2esn`:`6esn`[1.e1..$#usn7][.e0..True]}) As `1esn` Match `1esn`=(:@usn5{usn1:Count(*)[True],@usn6:123456789[$#usn7..]})<-[#usn7]-(`7esn` :`2esn`:`3esn`)-[?:``|:_usn4 *..0X7]->(`4esn` {`6esn`:$12[..``][..$7]}),`1esn`=(((`7esn` :`2esn`:`3esn`)<-[@usn5?:#usn8 *999..{`1esn`:$@usn5 =~$`` =~$usn2}]->(`2esn` {`3esn`:$999[12.0..]})-[? *00..{#usn8:12.e12[...0][..0x0],`7esn`:$`4esn`[9e1..][0..]}]-(:usn1{`6esn`:7 Contains 9e1,#usn8:`7esn`[...e1][..\"d_str\"]}))) Remove None(#usn7 In 01234567[$`3esn`..] Where 12[usn1][True]).#usn7?,[@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $`4esn`[..usn1]].@usn5?,[00[01234567][False]].`1esn`?;"),
    octest:ct_string("Create ((`6esn` :_usn4:usn1{`6esn`:00 In 12.e12})<-[`7esn`?:`5esn`|`1esn`]->(`6esn` :@usn6:`7esn`{@usn5:True[0x0][@usn6],`5esn`:Null Starts With _usn4 Starts With `6esn`})),(usn1 :`3esn`:`1esn`)-[?:`4esn`|:`7esn` *..0x0]-(:@usn5{@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]}) Union All Delete `2esn`[$`3esn`..],{@usn5:$@usn6[..$usn1],`1esn`:usn2[`3esn`][_usn3]}[..Any(`4esn` In 's_str'[12..'s_str'] Where Null Contains _usn4)][..{`7esn`:True[..'s_str'][..01]}],0.0[Extract(`4esn` In 's_str'[12..'s_str'] Where `` Contains 12 Contains True|$`1esn` Is Null)..Extract(#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str'|_usn3 Ends With 12e12 Ends With .e0)][None(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where `8esn` In $@usn5)..{@usn6:.12 Starts With 0Xa}] Unwind `3esn` =~$`5esn` =~12 As `7esn` Union Return $`4esn` Contains 0Xa,010 In `7esn` Limit False Contains `3esn` With  Filter(`4esn` In `6esn`['s_str'..][010..] Where 9e0 =~$`5esn`)[[1e1[0.0],0 Contains 12e12,$123456789[..0x0][..`4esn`]]] As `3esn`,False[`2esn`..#usn8],00 Is Null Is Null Order By {`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]}[({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})-[? *999..]-({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`8esn` :`7esn`)][{@usn5:`` In `6esn`,`1esn`:$`2esn`[$`2esn`..]}] Asc,0.12 In $7 In 0 Desc Skip 9e12[0.0..12.e12] Limit $usn1[.e12..`8esn`][True..$@usn5] Create (usn2 :#usn8{`3esn`:123.654[@usn5]})-[@usn5?:@usn6$_usn3]->(:_usn4:usn1{`1esn`:123456789 Starts With `2esn` Starts With .0,@usn6:12.e12 Contains `5esn`})"),
    octest:ct_string("Create (((@usn6 {#usn7:'s_str' In \"d_str\" In 123456789,usn2:07[12][$`6esn`]})<-[?:@usn6{`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]}]->(:@usn5)<-[#usn8?:`4esn`|:`7esn` *07..]->(`` :#usn7$0))),#usn7=(`1esn` :_usn4:usn1) Union Return Distinct ({@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]})-[`6esn`?:`4esn`|:`7esn` *0..010{_usn3:$`1esn` Starts With @usn6}]-(`2esn` {#usn8:12.e12[0e0..7]}),@usn5 Ends With 1.e1 Ends With 0X0123456789ABCDEF As `8esn`,[#usn8 In $`5esn` Is Null Is Null Where 0.e0 Ends With 12 Ends With $7][..{@usn5:12 =~usn1 =~.e12,`2esn`:0X7 =~`4esn` =~`8esn`}] As #usn7 Order By $@usn6[usn2(`3esn`[$`1esn`..])] Asc,12 Ends With 01 Ends With 1e1 Ascending Skip 07[07] Limit 123.654[@usn5] With Distinct Count ( * )[@usn6..0x0],.e0 Is Not Null Is Not Null As `2esn`,usn2 Is Not Null Is Not Null As `2esn` Skip $@usn5 =~$`` =~$usn2 Where `` Starts With 12 Merge ((:usn2:@usn6{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8})<-[#usn8?:`6esn` *0..010]-(`` :@usn5)-[`3esn`{#usn7:12e12 Ends With 010 Ends With .0}]->(`4esn` :`7esn`{`7esn`:@usn6 Contains _usn4 Contains $`4esn`})) On Match Set [#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|$`7esn` Is Not Null].@usn6! =999[$`6esn`],#usn8+=$@usn6 In usn2 In 123456789,_usn3 =$`4esn`[12.e12..][0.0..]"),
    octest:ct_string("Merge _usn3=((_usn4 {#usn8:@usn5 In $`6esn`,`7esn`:010 =~`6esn`})-[`5esn`? *00..{usn1:07[`6esn`..][`5esn`..],`2esn`:#usn7 Contains .0 Contains .e1}]->(#usn7 :`7esn`{`4esn`:.12 Starts With .12 Starts With `3esn`})-[{`5esn`:.e1[..$``][..0X0123456789ABCDEF]}]->(_usn3 {`5esn`:0.12 Contains .e1})) Optional Match #usn7=(`4esn` :`1esn`{`8esn`:12 Ends With .e12 Ends With $7,`8esn`:0.0[12...12]})<-[`2esn` *12..0xabc{`6esn`:$123456789[0.0..],@usn5:999[$`6esn`]}]-(`7esn` {`8esn`:0X0123456789ABCDEF In $1000 In $`3esn`})-[usn1{`7esn`:``[Count(*)..][@usn5..]}]->(`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}) Match `1esn`=((`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]})) Union Merge ((@usn5 :_usn4:usn1{`1esn`:07[1e1],`7esn`:12e12[$`5esn`][07]})) On Match Set `6esn`+=7[$`4esn`..123456789],`1esn` =(:`1esn`{`6esn`:$0[..`8esn`],`1esn`:True Starts With $`8esn` Starts With \"d_str\"})<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[usn1?:`2esn`|usn2 *123456789..999]-(`3esn` :usn2:@usn6) Contains [usn2 In 1000 Contains 0.e0 Where #usn7 Ends With 9e1|010 Is Null Is Null] Contains Filter(@usn6 In @usn5 In $`6esn` Where 12[`7esn`...0][0.12..``]),{_usn3:'s_str' =~0.e0}.usn2? =Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) Ends With [`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $usn2[..12.0]|999[``..][Null..]] Ends With Any(`4esn` In `6esn`[1e1..] Where False[`2esn`..#usn8])"),
    octest:ct_string("With  *,$usn1 In 1000 In $#usn7 As `8esn`,$@usn6 =~$#usn8 =~$#usn7 As `2esn` Order By 0Xa[0xabc..$#usn8] Desc Skip `1esn`[`3esn`..][$@usn6..] Delete `6esn` Starts With $`5esn`,$`8esn`[..123456789],`` =~12 =~$#usn7 Merge usn1=((`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})) On Create Set `2esn`+=123.654 In \"d_str\" In $_usn3 Union Remove ({`3esn`:1e1 Is Null})-[?:usn2|#usn8{`2esn`:@usn5 In 0X0123456789ABCDEF,`1esn`:@usn6[`5esn`..$`3esn`]}]->(`4esn` {`7esn`:.e0[..999][..0X7]})<-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(`5esn` :`6esn`:`7esn`{`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]}).`4esn`?,None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`6esn`[$@usn6..]).`` Remove [1e1 In $#usn8 In 12e12,7 In @usn5 In $`4esn`].`5esn`!,`7esn`:`1esn`,usn2:usn1 Optional Match #usn8=((({@usn6:0.12 In $`4esn` In `6esn`,``:1e1 Is Null})<-[`7esn`?:`8esn`|:usn1]-(`7esn` :#usn8)-[@usn5?:`3esn`|:`4esn`{`7esn`:Count(*) In 01 In .0,`6esn`:$123456789[..0.12][..#usn7]}]->(`5esn` :`8esn`)));"),
    octest:ct_string("Return Distinct 7[$`4esn`..123456789] As `2esn` Limit 1000 Ends With 1000 Ends With $`4esn` Union All Create #usn8=(:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[:#usn7|:_usn4{_usn3:\"d_str\" =~`3esn` =~0Xa}]-(#usn7 {`3esn`:Count(*)[12.e12..],`3esn`:usn2 =~0x0}) Union Remove None(#usn7 In 01234567[$`3esn`..] Where 12[usn1][True]).#usn7?,[@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $`4esn`[..usn1]].@usn5?,[00[01234567][False]].`1esn`?"),
    octest:ct_string("Merge (`7esn` {usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3})<-[{@usn5:$123456789 Ends With .e1,#usn8:0x0 =~_usn4}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})-[#usn8?]->(:`4esn`:#usn8{_usn4:'s_str' In \"d_str\" In 123456789,`2esn`:0.12 Ends With $usn1 Ends With $@usn5}) On Create Set Filter(usn1 In 0x0[..`4esn`] Where $#usn7 In .e1 In 01).`8esn`! =`6esn`[..`5esn`] On Create Set `1esn`+=`2esn`[$`3esn`..],`2esn` =$usn2[..12.0],usn1+=usn1[$`3esn`..$999][True..False] Unwind Count(*)[[@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null]..] As _usn3 Union All Create ((`5esn` {_usn4:0X7 =~``})<-[`2esn`?:usn2|#usn8{`6esn`:0X7[.e12..01234567],@usn6:`7esn`[...e1][..\"d_str\"]}]->(`5esn` :`8esn`{#usn8:0.12 Contains $`2esn` Contains $_usn4,`2esn`:$`5esn` Starts With _usn3 Starts With @usn5})-[`8esn` *..0x0]-(:`2esn`:`3esn`{usn2:$`5esn` In False}))"),
    octest:ct_string("Unwind $@usn5[0.12..][@usn5..] As `2esn` Remove [#usn8 In $`5esn` Is Null Is Null Where 0e0 =~_usn4|$@usn6 =~usn1].usn1,None(@usn5 In .12[#usn7][$`8esn`] Where 123456789 Is Null).`1esn`? Union All Return Distinct *,.e1 Starts With $`8esn` Skip 0xabc[12.e12..`1esn`] Limit 0.e0[@usn6][0x0] Union All With Distinct *,Extract(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null|12.e12 Ends With 01 Ends With .e1) Ends With $0 Ends With All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`) As _usn3 Skip 010 Starts With `7esn` Starts With 9e1 Limit 07[12][$`6esn`] Where $_usn4[$`8esn`..][07..] Unwind 9e0[False] As #usn8 Detach Delete .e0 Is Not Null Is Not Null,{usn1:7 =~9e0 =~'s_str',@usn6:$usn1[..$`6esn`][..Null]} =~Single(usn2 In 1000 Contains 0.e0) =~Any(@usn6 In @usn5 In $`6esn` Where $`7esn` Is Not Null)"),
    octest:ct_string("Match `2esn`=(`` :usn2:@usn6)<-[?{@usn5:12.e12['s_str'],`1esn`:_usn3 Ends With 12e12 Ends With .e0}]-(`7esn` :`4esn`:#usn8{`2esn`:Count(*)[..`3esn`]}),(:@usn6:`7esn`{_usn3:False[`2esn`..#usn8]})-[`4esn`:`2esn`|usn2{@usn6:0.12[0.e0..][`4esn`..]}]-(_usn3 :``)-[?:usn2|#usn8{`2esn`:@usn5 In 0X0123456789ABCDEF,`1esn`:@usn6[`5esn`..$`3esn`]}]->({`1esn`:0.0[1000..][.e1..]}) Union Detach Delete $`1esn` Ends With $`1esn`,12e12[$`5esn`][07] Return *,.e0[..0X0123456789ABCDEF][...e12] As `6esn` Order By $123456789[$``][010] Desc,`4esn` =~$`3esn` =~$123456789 Ascending,@usn5 Starts With 12e12 Starts With @usn5 Desc Skip [$12 Is Null Is Null,999 Contains Count ( * ) Contains 123.654][Extract(usn2 In 1000 Contains 0.e0 Where 9e12 =~01 =~$`7esn`)..Any(`4esn` In $`8esn` Starts With 1000 Where 01 Ends With .e0)][[Null Contains _usn4,$`7esn` Is Null Is Null]..({_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[? *..0x0]->(:usn2:@usn6{`6esn`:12[12e12..@usn6],#usn8:`6esn` =~$_usn3})] Limit 7[..12e12][..$`6esn`] Optional Match ((:usn1)-[:@usn5|`8esn` *123456789..999{usn1:9e12 Is Not Null Is Not Null}]-(#usn7 :`5esn`)),`3esn`=(({``:$1000 Is Null Is Null})) Where 010 Is Null Is Null Union All Unwind $7[.12] As @usn6 Detach Delete ({usn1:`4esn` In $12 In `8esn`})-[`4esn`]-(`1esn` {usn1:True[Count(*)..][1e1..],usn1:9e1 Is Null Is Null})<-[?{`5esn`:0x0 Contains $`8esn` Contains `6esn`,#usn8:010 =~$usn2 =~1e1}]->({`6esn`:$`5esn` Is Null,`2esn`:`7esn` Starts With $usn2 Starts With .e0})[[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 0e0 =~_usn4|0x0 Contains _usn4 Contains 123456789]..[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 7 In $`3esn` In #usn7]][usn1($`1esn` Is Null Is Null,$0[0X0123456789ABCDEF..$#usn7])..[usn1 In 00 Starts With _usn3 Where .12[9e0][$7]|07]] Match usn1=(`4esn` :#usn7)-[_usn4?:`6esn`]-(`2esn` :`1esn`{``:9e1 Starts With _usn3 Starts With `4esn`})-[_usn4?:@usn6 *..7]->(`` :@usn6:`7esn`{`4esn`:0X0123456789ABCDEF Is Not Null}) Where $`5esn` In `2esn` In .0"),
    octest:ct_string("With  123.654 Is Not Null Is Not Null As `3esn`,01[Null..][`1esn`..] Where Null[..12e12][..usn1] Optional Match `3esn`=(usn1 :`6esn`:`7esn`),`1esn`=(({`4esn`:$_usn3[..Count ( * )][..@usn5],#usn8:_usn3 =~00})<-[`5esn`?:#usn8{#usn7:0.12 Ends With $usn1 Ends With $@usn5}]->({`1esn`:$@usn5 =~$`` =~$usn2})) Union With Distinct *,\"d_str\"[Count ( * )] As `7esn`,0x0[123456789] As @usn6 Order By 0.0 Is Null Is Null Ascending,$usn2[0e0..] Descending,'s_str'[..0.0][..$`4esn`] Ascending Union All With  *,0 Is Not Null Order By 07[`6esn`..][`5esn`..] Desc,_usn3[`3esn`][False] Ascending,Extract(usn2 In 1000 Contains 0.e0) Ends With Single(usn1 In 0x0[..`4esn`] Where 12.e12 Contains `5esn`) Ends With Single(usn1 In 00 Starts With _usn3 Where $0[01234567..00][$`2esn`..$@usn6]) Desc Where $#usn7 In .e1 In 01 Remove [0x0 =~$`7esn` =~@usn6,$#usn8 Is Null Is Null,0 Is Not Null Is Not Null].#usn8?,(`5esn` {@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]})<-[_usn3 *0Xa$_usn3]-(`6esn` :`4esn`:#usn8{_usn4:12.e12[...0][..0x0]})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->(`8esn` :_usn3{`8esn`:$`3esn` In $12 In 's_str'}).usn2?,[$`5esn` Starts With _usn3 Starts With @usn5,$@usn6 =~usn1,0.0[12...12]].#usn7!"),
    octest:ct_string("Merge ((:usn2:@usn6{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8})<-[#usn8?:`6esn` *0..010]-(`` :@usn5)-[`3esn`{#usn7:12e12 Ends With 010 Ends With .0}]->(`4esn` :`7esn`{`7esn`:@usn6 Contains _usn4 Contains $`4esn`})) Create (`6esn` :`5esn`)<-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]-(`4esn` {`7esn`:.e0[..999][..0X7]})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :usn2:@usn6),_usn3=(($999)) Union Create #usn8=((`4esn` :`7esn`{`7esn`:@usn6 Contains _usn4 Contains $`4esn`})<-[_usn3?:`2esn`|usn2 *010{`6esn`:#usn7 Ends With `4esn` Ends With @usn5}]->(#usn7 :`3esn`:`1esn`)<-[?{`4esn`:12e12[$`5esn`][07]}]-(:`1esn`{_usn4:$_usn3[Null]})) Remove {`3esn`:`1esn` Contains Count ( * ),`7esn`:01234567 =~usn1}.#usn8? Create (((@usn6 {#usn7:False[`2esn`..#usn8]})-[? *010]-(`8esn` :@usn5)<-[#usn8?{`5esn`:Null[01234567][01234567]}]->(`6esn` :@usn6:`7esn`{@usn5:True[0x0][@usn6],`5esn`:Null Starts With _usn4 Starts With `6esn`}))),`8esn`=((_usn4 :`3esn`:`1esn`{`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]})) Union All Unwind 07[12e12] As `4esn` Remove Extract(@usn6 In @usn5 In $`6esn` Where False Contains `3esn`).`5esn`?,(`2esn` {`3esn`:$999[12.0..]})-[:usn2|#usn8 *01234567..12{usn2:$`3esn` In $12 In 's_str'}]-(usn1 :_usn3).`5esn`;"),
    octest:ct_string("With  `5esn` In 12 As usn2,Count(*) Starts With 1e1 Starts With $123456789 As #usn7,[`4esn` In 's_str'[12..'s_str'] Where 9e1 Contains $`3esn` Contains 01234567][[7[..12e12][..$`6esn`]]..{usn1:7 =~9e0 =~'s_str',@usn6:$usn1[..$`6esn`][..Null]}] As #usn8 Order By 00 In 12.e12 Descending,9e0 Ends With $`7esn` Asc Skip 01234567 Is Null Is Null Limit $123456789 In Count(*) In .e1 Where $123456789 Ends With $`6esn` Merge usn2=((`4esn` :`5esn`{@usn6:$usn2 =~$#usn8,`8esn`:`6esn` =~$_usn3})-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`7esn` :_usn4:usn1)<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})) Union All Unwind Any(`4esn` In `6esn`['s_str'..][010..] Where \"d_str\" =~`6esn` =~0Xa)[[$`6esn` Is Null Is Null,0Xa Is Not Null Is Not Null,0X7 In 123.654 In $`2esn`]][[usn2 In 1000 Contains 0.e0 Where $_usn3[Null]|$0 =~$usn1 =~9e1]] As #usn8 Return *,usn2 =~0x0,07 In `5esn` In 12e12 Skip Null Contains 9e1 Limit [@usn6 In @usn5 In $`6esn` Where $`1esn` Is Null Is Null] Contains Filter(`4esn` In 's_str'[12..'s_str'] Where 123.654 Starts With usn1 Starts With @usn5) Contains [`4esn` In $`8esn` Starts With 1000 Where False In `3esn`] Unwind None(usn1 In 0x0[..`4esn`] Where $`2esn` Contains usn1 Contains `2esn`)[..Extract(`6esn` In 0X7 =~`` Where $usn2 Contains 12.e12 Contains 00|$#usn8 Ends With 1000 Ends With .0)][..[@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where #usn7 Ends With 9e1]] As @usn5 Union With  $`` Ends With 12e12 As `6esn`,(`4esn` :`8esn`{_usn4:0 Is Null Is Null})-[`6esn`:`8esn`|:usn1$_usn3]->(`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]}) Ends With Filter(@usn5 In $#usn8 Is Null Is Null Where @usn5 Contains $`1esn` Contains 999) Ends With [`4esn` In `6esn`[1e1..] Where 07[12e12]],$999[$1000] Where .12 =~.12 =~1e1;"),
    octest:ct_string("Return Distinct @usn5[_usn4..][.e0..] As usn1,$@usn6[..$#usn7][..12.e12] Order By $_usn4[`3esn`][0] Descending,.12 Starts With 0Xa Asc Union All Create _usn3=((#usn8 :`1esn`{#usn7:1e1[`6esn`..]})<-[`3esn`? *123456789..999]->(_usn4 :_usn4:usn1)),(((`3esn` :`8esn`)-[`5esn`{usn2:`6esn`['s_str'..][010..]}]->(_usn3 :usn2:@usn6)-[:`7esn`|`2esn` *..0X7{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]->(`5esn` {usn2:`5esn`[.e1][0Xa],@usn5:$usn1 In 1000 In $#usn7}))) Merge ((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})<-[`6esn`?{`7esn`:.12 Ends With `1esn` Ends With $`1esn`,``:9e0 Starts With `6esn`}]->(:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})) On Create Set [$`6esn` Is Null Is Null,Count ( * )[@usn6..0x0],0.0[1000..][.e1..]]._usn3! =.0 Starts With `2esn` Starts With `6esn`,({``:\"d_str\",`1esn`:$1000 =~$`7esn`})-[usn1?:_usn3|:`4esn` *123456789..999{`6esn`:01 Ends With .e0,`4esn`:$`7esn` Is Not Null}]->(_usn3 ).`4esn` =usn2 Is Not Null Match (#usn7 :@usn5)-[`4esn`:_usn3|:`4esn`{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:usn1{`8esn`:usn1 Contains $``}),``=({`7esn`:`6esn` Starts With $@usn6,``:`6esn` =~$_usn3})-[? *12..0xabc]-(:`6esn`:`7esn`{`6esn`:_usn4 Ends With 01 Ends With $`1esn`,`4esn`:$`8esn` In \"d_str\" In 9e12})<-[ *0xabc]-(_usn4 {`1esn`:010[@usn5..]});"),
    octest:ct_string("Unwind 0X7[..12e12] As _usn3 Create ``=(((`5esn` :`6esn`:`7esn`{`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->(`2esn` :usn2:@usn6)-[?:@usn6 *00..{@usn5:$`5esn`[False],`4esn`:usn1[..$_usn4][..``]}]->(:``{`1esn`:`6esn` =~$_usn3})));"),
    octest:ct_string("With  .e0[usn2..][12..] As `1esn`,12.e12[...0][..0x0],`` Contains 12 Contains True As `6esn` Skip `6esn`[0X7..][0x0..] Limit 9e1 Starts With `1esn` Starts With 0Xa Remove Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 12.0[0Xa][00]|$`1esn` Starts With $999).`6esn`,Any(`6esn` In 0X7 =~`` Where $`6esn`[..0X0123456789ABCDEF]).`3esn` Union Delete 01234567[$`3esn`..],(:`5esn`{@usn6:0Xa Is Not Null Is Not Null,usn2:@usn6 =~01})<-[`2esn`?*..]->(:#usn8{`5esn`:0 Contains 12e12})<-[?:usn2|#usn8 *00..]-(`6esn` :`5esn`{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]}) Is Null With Distinct Filter(@usn5 In $#usn8 Is Null Is Null Where 9e1 Contains $`3esn` Contains 01234567) =~['s_str'[..0.e0][..`1esn`],`5esn`[.e1][0Xa],123456789 In $usn2 In `6esn`] As #usn7,\"d_str\" =~`6esn` =~0Xa As `4esn` Order By 00 In 12.e12 Descending,9e0 Ends With $`7esn` Asc Limit $7[.12] Where 01234567[$`3esn`..];"),
    octest:ct_string("Delete 00 Ends With $_usn4 Ends With $`2esn`,.12[`1esn`..][$`3esn`..] Merge ((usn2 {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})-[ *010{@usn5:Null Is Null Is Null}]-({@usn5:False In $`7esn` In .0,usn2:Null[1.e1..]})) Merge ((@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(:``{`2esn`:9e0[``][123.654],`1esn`:$_usn3[Null]})-[@usn6?:#usn7|:_usn4 *00..]->(`` :@usn5{#usn7:0X7[12]})) On Match Set (@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})<-[`6esn`:`4esn`|:`7esn` *1000..{`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null}]->(:#usn7)<-[`5esn`:`8esn`|:usn1]->(`5esn` :`6esn`:`7esn`{`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]}).#usn7? =1000 Contains 123456789 Contains 1e1 On Match Set usn1+=`4esn` Is Null Union Match `1esn`=(((`5esn` {@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00})-[ *010{@usn5:Null Is Null Is Null}]-(:`5esn`)<-[`7esn`{`7esn`:\"d_str\",usn2:True[`4esn`][$`6esn`]}]-(#usn7 {@usn5:`5esn`[.e1][0Xa],@usn6:Count(*)[`7esn`..$12]}))) Create ((`6esn` {`2esn`:$`2esn`[..`2esn`],usn1:False[0Xa..$@usn5][$`6esn`..12e12]})),_usn4=((#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]})) Remove {`6esn`:9e1 Contains $`3esn` Contains 01234567}.`2esn` Union Merge (_usn4 :@usn6:`7esn`)<-[#usn8?:_usn4|:@usn5 *..0x0]-(`6esn` :#usn7{`5esn`:#usn7 Is Not Null Is Not Null})-[#usn8? *12..0xabc]-(#usn8 :`4esn`:#usn8{#usn7:$`8esn` Starts With 1000});"),
    octest:ct_string("With  *,`7esn`[...e1][..\"d_str\"],12e12[0.e0..True][0.12..0.0] As #usn7 Order By 0xabc[12.e12..`1esn`] Ascending,12.e12 In $1000 Ascending,[`6esn` In 0X7 =~`` Where 0.12[Null..]] Is Null Is Null Ascending Limit Extract(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null|12.e12 Ends With 01 Ends With .e1)[00..] Where 0.e0[..#usn8][..Null] Remove #usn8(Distinct $999 Ends With $`3esn` Ends With `8esn`,@usn5[_usn4..][.e0..]).`8esn`?,@usn5:#usn8 Unwind _usn4[$`4esn`][0X7] As #usn7;"),
    octest:ct_string("Match `3esn`=(((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})-[:`7esn`|`2esn` *..0X7{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]-(`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})-[`4esn`? *00..]-(:`4esn`:#usn8{@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]}))) Where `7esn`[Null..][@usn5..] Union Delete $`2esn`[123456789..][00..],$`4esn`[9e1..][0..],$`2esn` Ends With `3esn` Ends With $7 Unwind [`4esn` In 's_str'[12..'s_str'] Where 9e12 =~01 =~$`7esn`][#usn7(00 In 12.e12)..Extract(usn1 In 0x0[..`4esn`] Where 1000 Ends With 1000 Ends With $`4esn`|@usn6[$`3esn`])][(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})<-[`8esn`]->(#usn8 )<-[`3esn` *00..{`8esn`:@usn6 Contains .e1 Contains $`4esn`,_usn4:0X7[..12e12]}]->(@usn5 {`1esn`:0[usn2..]})..(usn1 :_usn4:usn1)<-[@usn5?:`1esn`]-(#usn7 :`2esn`:`3esn`)] As _usn3 Union Match `5esn`=({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(`4esn` :`6esn`:`7esn`{`8esn`:0X7[..12e12]})-[?:@usn6{`8esn`:12 Ends With .e12 Ends With $7,`8esn`:0.0[12...12]}]-(`3esn` :``) Optional Match @usn5=((@usn6 {`3esn`:0.12 In $7 In 0,_usn3:07[$999]})-[`1esn`:`5esn`|`1esn` *..7{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]}]->(usn2 :@usn6:`7esn`)<-[:@usn5|`8esn` *0Xa{usn1:$1000 Contains $`3esn`}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]})) Where 07[12e12];"),
    octest:ct_string("Match @usn5=(((:`1esn`{#usn7:1e1[`6esn`..]})<-[`6esn`?:_usn3|:`4esn` *12..0xabc]-(`1esn` :usn1$@usn6)<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`5esn` {@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]}))) Where $0[01234567..00][$`2esn`..$@usn6] With  All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) Is Not Null Is Not Null,0xabc[$@usn5] As `7esn`,.e0[usn2..] As _usn3 Skip 0x0 In `8esn` In 999 Where 07[0..`4esn`];"),
    octest:ct_string("Remove None(`4esn` In 's_str'[12..'s_str'] Where $`2esn`[..7][..$usn1]).`2esn`!,{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12}.`6esn`?,usn2:#usn8 Union All Unwind $_usn4[0.12..$`6esn`][00..$@usn6] As `` Merge `2esn`=((:`2esn`:`3esn`{usn2:9e12[@usn6..$``][#usn8..Count ( * )],`3esn`:$1000 In $`7esn` In $7})) Union All Return Distinct *,[`4esn` In `6esn`['s_str'..][010..] Where $@usn5 In 12e12 In Count(*)|$1000[01234567]][Any(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7)..{usn1:usn1 Is Null Is Null,usn2:12.0[``]}][(_usn3 {`5esn`:0.12 Contains .e1})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`})..00] As `7esn` Skip _usn4(Distinct `7esn` Starts With $usn2 Starts With .e0) =~`3esn`() =~#usn8(9e0 Ends With $`7esn`) Match (`` :`7esn`)<-[`8esn`:@usn5|`8esn` *123456789..999{`5esn`:0x0 Contains $`8esn` Contains `6esn`,#usn8:010 =~$usn2 =~1e1}]->(_usn4 {@usn5:$_usn3[$`4esn`..Null]}) Where $`4esn`[12.0..`5esn`] Create `1esn`=(((usn1 :`4esn`:#usn8)-[`4esn`?:`8esn`|:usn1 *..0x0]->(:@usn6:`7esn`{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})<-[?:`4esn`|:`7esn` *..0X7]-(:`3esn`:`1esn`{`1esn`:0.0[1000..][.e1..]}))),((#usn7 :#usn8{`2esn`:12 =~usn1 =~.e12})-[@usn5?:`3esn`|:`4esn`{`7esn`:Count(*) In 01 In .0,`6esn`:$123456789[..0.12][..#usn7]}]->(`5esn` :`8esn`)<-[`6esn`?:_usn3|:`4esn` *12..0xabc]-(`1esn` :usn1$@usn6));"),
    octest:ct_string("Unwind All(`4esn` In $`8esn` Starts With 1000 Where 0X0123456789ABCDEF[.e0..$`4esn`])[(#usn8 :@usn6:`7esn`{``:9e1 Is Not Null Is Not Null})-[`1esn`{_usn4:`3esn` Contains 0Xa}]->(#usn7 :usn2:@usn6{`1esn`:$usn2 Contains 12.e12 Contains 00})-[`8esn` *..0x0]-(:`2esn`:`3esn`{usn2:$`5esn` In False})..#usn7(Distinct False Contains `3esn`,12e12[_usn3..][$@usn5..])] As #usn8 Merge ((#usn8 :@usn6:`7esn`{@usn5:1e1[@usn5..]})) On Match Set usn1+=_usn4[$`4esn`][0X7] On Create Set `4esn` =010 In `7esn`,usn2+=0.e0[@usn6][0x0] Unwind 0X7[..12e12] As _usn3;"),
    octest:ct_string("Create (#usn7 :`6esn`:`7esn`)<-[`3esn`?:_usn3|:`4esn`]->(:`1esn`{_usn4:$_usn3[Null]})-[ *..0X7]->(`5esn` :_usn4:usn1),usn2=(`8esn` :#usn8)-[usn2?]-(`1esn` :`8esn`{`7esn`:`5esn`[`1esn`]}) Union All Match `1esn`=((`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`5esn`?:usn1|`3esn` *1000..]-({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})) Where $123456789 Is Not Null Is Not Null Merge _usn4=(`1esn` {usn1:True[Count(*)..][1e1..],usn1:9e1 Is Null Is Null})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]->(`6esn` {`8esn`:`8esn` In $@usn5}) On Create Set _usn3 =(usn2 :`7esn`{@usn5:usn1[$`3esn`..$999][True..False],`8esn`:$`5esn` Is Null Is Null})-[`5esn`?:_usn4|:@usn5]-(usn1 :`7esn`)<-[`` *12..0xabc]->(:``{_usn3:Count(*)['s_str'..`1esn`],`1esn`:$`6esn`[$`1esn`][1000]}) Is Null Is Null,`1esn` =7 Contains $`5esn` Contains $usn1,usn2 =\"d_str\" =~`3esn` =~0x0 On Match Set @usn6+=(usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1})-[#usn8? *0xabc{`5esn`:0X7[12]}]->(usn1 {`2esn`:True =~@usn5 =~$`1esn`,`2esn`:`6esn`[1.e1..$#usn7][.e0..True]})[Any(_usn4 In usn1 Contains False Contains `` Where 0.12 In 01 In $`3esn`)..Single(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $123456789[..0x0][..`4esn`])][All(`6esn` In 0X7 =~`` Where $`3esn` =~Null)..{`8esn`:0xabc Ends With $#usn7 Ends With #usn8,usn2:usn1[$`3esn`..$999][True..False]}];"),
    octest:ct_string("Unwind $usn2 Is Not Null Is Not Null As `8esn` Delete [_usn4 In usn1 Contains False Contains `` Where $usn1[0.12..]['s_str'..]|12[..True][..$`4esn`]] Ends With [`6esn` In 0X7 =~``|$#usn7[...e12][..$7]],Single(#usn8 In $`5esn` Is Null Is Null Where 's_str' Starts With 1000 Starts With #usn8)[{_usn3:$0 Ends With $#usn7 Ends With .12}][[12.0[0Xa][00],.0[01][$12]]] Union All Create (((`` :@usn6:`7esn`{`2esn`:0.12[0.e0..][`4esn`..]})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->(`8esn` :_usn3{`8esn`:$`3esn` In $12 In 's_str'})-[`7esn`{usn1:0 Is Not Null}]->(:`7esn`{`6esn`:123456789 Is Null,`1esn`:00 In 12.e12}))),`4esn`=((`2esn` :`6esn`:`7esn`{`6esn`:$#usn8 Ends With 1000 Ends With .0,`7esn`:010 =~`6esn`})) Return $`6esn` =~$#usn8 As #usn8 Order By (#usn7 :#usn8)-[`6esn`:`4esn`|:`7esn` *..0x0]->({`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})[Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`])][Filter(`4esn` In `6esn`['s_str'..][010..] Where @usn6[$`7esn`])] Descending Limit Null Contains 9e1 Union Optional Match @usn6=((:``{`5esn`:.e1 In $@usn6 In 999})),`4esn`=((`6esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})) With  `6esn`['s_str'..][010..],$`4esn` Contains 0Xa Where 0X0123456789ABCDEF In $1000 In $`3esn` With  `` Starts With 12,[@usn5 In .12[#usn7][$`8esn`] Where $_usn4[12e12][`4esn`]][`1esn`(Distinct 1e1[0.0],0.0[1000..][.e1..])..``(False In `3esn`)][[@usn6 =~01,$`7esn` In $7,00[``..][$`4esn`..]]..Filter(@usn6 In @usn5 In $`6esn` Where False[0Xa..$@usn5][$`6esn`..12e12])] As `4esn`,Count(*)[`7esn`..$12] As `` Skip 0X7[..12e12] Where 9e12[..$``][..`6esn`];"),
    octest:ct_string("Merge ((usn2 :`7esn`{@usn5:usn1[$`3esn`..$999][True..False],`8esn`:$`5esn` Is Null Is Null})-[@usn5?:@usn6*..]-(@usn5 {@usn6:0.0[999..],#usn8:Null Is Null Is Null})<-[`6esn`?{`7esn`:@usn6 Contains _usn4 Contains $`4esn`}]-(`1esn` :``)) On Create Set All(@usn5 In 0X7 =~.0 =~\"d_str\" Where 9e12[usn2..7][.e1..$`7esn`])._usn3? =$`1esn` =~$`1esn` =~#usn7,`2esn`+={`4esn`:$@usn6 Contains 0 Contains $`2esn`}[[@usn5 In 0X7 =~.0 =~\"d_str\"|$`1esn` Ends With _usn4 Ends With `3esn`]..Extract(@usn5 In .12[#usn7][$`8esn`] Where $usn2 Contains 12.e12 Contains 00|9e0 Ends With $`7esn`)] On Create Set None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 7 In $`3esn` In #usn7).`2esn`! =.e1[..$`4esn`][.._usn4] Union All Delete 9e0[$_usn3..0X7][7..$#usn8],Extract(`4esn` In 's_str'[12..'s_str'] Where 00 Starts With _usn3|$`1esn` Is Null Is Null) Is Null Is Null,0.12 Is Null Is Null Detach Delete 010 Starts With `7esn` Starts With 9e1 Union All Delete $``[_usn4..][`7esn`..],{`1esn`:9e1[0.e0..][#usn8..]} Starts With Single(`4esn` In 's_str'[12..'s_str'] Where @usn5 In 0X0123456789ABCDEF) Starts With All(#usn8 In $`5esn` Is Null Is Null Where 0.e0 Ends With 12 Ends With $7),All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) Is Not Null Is Not Null Unwind All(`6esn` In 0X7 =~`` Where #usn7 Starts With 0 Starts With 12) Starts With Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where #usn7 Contains .0 Contains .e1) As ``;"),
    octest:ct_string("Unwind 1e1[@usn5..] As _usn4 Union Optional Match @usn5=((:#usn8$usn1)-[`1esn`:`5esn`|`1esn` *..7{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]}]->(usn2 :@usn6:`7esn`)-[_usn4?:#usn8 *..0X7{@usn5:07}]-(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})),((#usn8 :@usn6:`7esn`{``:9e1 Is Not Null Is Not Null})) Unwind Count(*) Is Null As `2esn` Create (@usn6 {_usn3:1e1[.e1..],`1esn`:$#usn8})<-[#usn8?*{usn2:\"d_str\" Contains `3esn` Contains 00,`3esn`:010 Contains 0X0123456789ABCDEF}]->({`6esn`:$`8esn`[..$``]})-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]-(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa}) Union Return 's_str'[.12..$#usn7][$999..`2esn`] As `5esn` Order By Count ( * ) In 010 Descending,12e12[_usn3..][$@usn5..] Ascending,usn2 Starts With `6esn` Starts With 12e12 Desc Limit Count ( * )[..usn1][..12.e12] Return Distinct *,[#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str'|@usn6 Starts With `7esn` Starts With Null] Is Not Null Is Not Null,`8esn`[_usn3..$#usn7] Order By 's_str' Starts With 1000 Starts With #usn8 Descending;"),
    octest:ct_string("Create (`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]})<-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :`4esn`:#usn8) Unwind Count(*)[[@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null]..] As _usn3 Create ``=({`7esn`:`6esn` Starts With $@usn6,``:`6esn` =~$_usn3})-[? *12..0xabc]-(:`6esn`:`7esn`{`6esn`:_usn4 Ends With 01 Ends With $`1esn`,`4esn`:$`8esn` In \"d_str\" In 9e12})<-[ *0xabc]-(_usn4 {`1esn`:010[@usn5..]}),(`` :usn1) Union Remove None(_usn4 In usn1 Contains False Contains `` Where $`8esn`[$``..$7][$1000..$`7esn`])._usn3?,Filter(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where usn1 Starts With $#usn7 Starts With `5esn`).`3esn`? Create #usn8=((`5esn` {`5esn`:$`5esn`[False]})<-[?:usn2|#usn8 *00..]-(`6esn` :`5esn`{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]}));"),
    octest:ct_string("Remove Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`).``? Unwind $_usn4[`3esn`][0] As `7esn` Optional Match ((`5esn` :#usn7)<-[?:usn2|#usn8 *1000..]->(@usn6 :_usn4:usn1{@usn6:Null Is Null Is Null,#usn7:`5esn`[Count ( * )..][\"d_str\"..]})),`2esn`=((:@usn5{#usn7:1e1[@usn5..]})<-[? *0..010]-({@usn6:$123456789 Is Null Is Null,@usn6:`6esn`[1.e1..$#usn7][.e0..True]})<-[ *0xabc]-(_usn4 {`1esn`:010[@usn5..]})) Where False In 123456789 In $0;"),
    octest:ct_string("Remove Single(#usn8 In $`5esn` Is Null Is Null Where 0e0 =~_usn4).@usn6,[@usn6 In @usn5 In $`6esn` Where 12.0[0Xa][00]|0Xa Is Not Null Is Not Null].`4esn`! Union All Return Distinct *,01234567 Starts With $_usn4 As `1esn`,Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 00 Ends With .12 Ends With `4esn`) Contains {`7esn`:0e0 Is Null Is Null,usn2:`4esn` =~123456789} Order By [@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7|`6esn`[1.e1..$#usn7][.e0..True]][..Extract(#usn8 In $`5esn` Is Null Is Null Where #usn8[$#usn8..]|$@usn6[..$usn1])][..(:`4esn`:#usn8{#usn8:07})-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]-(@usn5 :`3esn`:`1esn`{`3esn`:$`5esn` Is Not Null,`2esn`:9e1[0.e0..][#usn8..]})-[``:`2esn`|usn2{_usn4:0X0123456789ABCDEF Ends With 0X0123456789ABCDEF Ends With 's_str',`3esn`:'s_str' In \"d_str\" In 123456789}]-(:``{`2esn`:9e0[``][123.654],`1esn`:$_usn3[Null]})] Ascending,0.0[Extract(`4esn` In 's_str'[12..'s_str'] Where `` Contains 12 Contains True|$`1esn` Is Null)..Extract(#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str'|_usn3 Ends With 12e12 Ends With .e0)][None(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where `8esn` In $@usn5)..{@usn6:.12 Starts With 0Xa}] Asc Limit 0x0 Is Not Null Is Not Null Create (`` :@usn6:`7esn`{`2esn`:0.12[0.e0..][`4esn`..]})-[@usn6?:#usn8 *..7{@usn5:@usn5 Starts With 12e12 Starts With @usn5}]->(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})-[usn1?:`2esn`|usn2 *123456789..999]-(usn1 :`7esn`{`1esn`:$@usn6 Contains 07 Contains 0.e0}) Return Distinct *,[`4esn` In `6esn`['s_str'..][010..] Where $@usn5 In 12e12 In Count(*)|$1000[01234567]][Any(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7)..{usn1:usn1 Is Null Is Null,usn2:12.0[``]}][(_usn3 {`5esn`:0.12 Contains .e1})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`})..00] As `7esn` Order By 00 Is Null Is Null Descending,$usn2 Starts With $`6esn` Starts With 0xabc Ascending,123456789 Starts With #usn7 Starts With `6esn` Asc Skip Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`|999[$`6esn`]) =~Single(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn`) Limit 0x0 Contains _usn4 Contains 123456789;"),
    octest:ct_string("Match `8esn`=((@usn6 {_usn3:$_usn4[$`1esn`]})-[`5esn`?:_usn4|:@usn5]->({`5esn`:Count(*)[..`3esn`],usn1:01234567 Ends With 0x0})-[usn2 *..0X7{#usn7:$_usn4[`3esn`][0]}]->({#usn7:Count ( * )[@usn6..0x0]})) Where 's_str'[12..'s_str'] Match _usn4=(@usn6 {#usn7:False[`2esn`..#usn8]})<-[`6esn`? *00..{`8esn`:$`2esn`[123456789..][00..],`7esn`:123.654 Contains #usn8}]-(`4esn` {@usn6:True[..'s_str'][..01]}),`6esn`=(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})<-[#usn8? *0xabc{`5esn`:0X7[12]}]->(`4esn` {usn2:7 In 0xabc})<-[?:#usn8{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]->({@usn5:False In $`7esn` In .0,usn2:Null[1.e1..]}) Where usn2[$`1esn`...0] Unwind $`1esn`[$usn2..][$1000..] As `3esn`;"),
    octest:ct_string("Match (#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]})<-[:`6esn` *..0X7{`3esn`:`1esn` Contains Count ( * ),`7esn`:01234567 =~usn1}]-(:@usn5{`8esn`:$`3esn`[@usn5..$123456789],@usn5:\"d_str\" Starts With $usn1})-[?:#usn7|:_usn4]->(`` :#usn7$0) With  *,12.0[``] As @usn6 Order By \"d_str\" =~`3esn` =~0Xa Desc,_usn3[0] Desc,`5esn` Ends With .e1 Ends With $_usn4 Asc Unwind @usn6 Contains _usn4 Contains $`4esn` As `4esn`;"),
    octest:ct_string("With Distinct ({`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`4esn` {@usn6:True[..'s_str'][..01]}) In Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where 07[12e12]) As `4esn`,{#usn7:0[0.12..]} Ends With Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]) Ends With {@usn5:\"d_str\" Is Null Is Null,@usn5:$_usn4[`3esn`][0]} As `8esn` Skip 010 Starts With `7esn` Starts With 9e1 Limit 0Xa Starts With $`4esn` Starts With 1e1 Unwind 1e1 In 9e0 In 9e0 As _usn4 Union Remove (@usn6 {_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12})<-[`8esn`?:`5esn`|`1esn`]-(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}).`6esn`,Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where 07[12e12]).usn2!,(_usn3 :_usn4:usn1{`2esn`:$`6esn`[$@usn6..]})<-[#usn7 *123456789..999]-(:@usn6:`7esn`{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})-[?:usn1|`3esn`]->(:`8esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}).`1esn`! Unwind Any(@usn6 In @usn5 In $`6esn` Where 9e0[$_usn3..0X7][7..$#usn8]) Contains None(usn1 In 00 Starts With _usn3 Where 01234567 Ends With 12.0 Ends With 0X7) Contains Single(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn8 In .e12 In 9e1) As `4esn` Unwind {`4esn`:0X7 =~.0 =~\"d_str\",_usn4:00 Ends With $_usn4 Ends With $`2esn`} Ends With Extract(#usn7 In 01234567[$`3esn`..] Where .12 In $999 In `5esn`) Ends With [$`3esn`[@usn5..$123456789],00,'s_str'[.12..$#usn7][$999..`2esn`]] As usn1;"),
    octest:ct_string("Unwind ({@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]})-[`6esn`?:`4esn`|:`7esn` *0..010{_usn3:$`1esn` Starts With @usn6}]-(`2esn` {#usn8:12.e12[0e0..7]}) As @usn6 Match `5esn`=(#usn7 {@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]}) Where $``[False] Create usn2=((:`1esn`{@usn6:$_usn4[$`4esn`..$#usn7][`6esn`..7],`8esn`:'s_str'['s_str'..$usn2][_usn3.._usn3]})-[usn2 *0X0123456789ABCDEF..{usn2:`` Starts With 12}]-(`4esn` {`7esn`:.e0[..999][..0X7]})-[_usn4?:@usn6 *..7]->({usn1:usn1[$`3esn`..$999][True..False],`7esn`:_usn3 Ends With 12e12 Ends With .e0})),usn2=({_usn4:$_usn4[$`8esn`..][07..],#usn7:12.e12[...0][..0x0]})<-[``? *..0X7{_usn4:12 Ends With 01 Ends With 1e1}]-(usn2 :@usn6:`7esn`)-[@usn5?:``|:_usn4]-($12);"),
    octest:ct_string("Create ``=((_usn4 )-[#usn7:_usn3|:`4esn` *..0x0{usn2:$#usn7 In 12.0 In 0X0123456789ABCDEF,`6esn`:`7esn`[1e1..07][0x0..Count ( * )]}]->(`6esn` {`2esn`:$`2esn`[..`2esn`],usn1:False[0Xa..$@usn5][$`6esn`..12e12]})) Unwind `3esn` =~$`5esn` =~12 As `7esn` Union All Detach Delete 12.e12[0e0..7],{_usn3:0X7 =~`4esn` =~`8esn`,`2esn`:$`3esn` Starts With $usn1} Is Not Null,`3esn`(`7esn` Starts With $usn2 Starts With .e0,$_usn3 =~`7esn` =~$_usn4)[[$`2esn`[123456789..][00..],Count ( * )[@usn6..0x0]]..][Extract(#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0)..] Union All Remove All(`4esn` In `6esn`[1e1..] Where _usn3 Is Null).@usn5!,usn2($`` Is Null Is Null).`6esn` Remove _usn4($`6esn`[$@usn6..],_usn3[.0]).#usn8,{usn2:@usn5 In 0X0123456789ABCDEF,usn2:9e1 Is Null Is Null}._usn4,(`6esn` $`8esn`)-[?:usn1|`3esn` *999..{_usn4:$999[12.0..],usn1:0[usn2..]}]->(:usn1{_usn3:0xabc[12.e12..`1esn`],`1esn`:12[usn1][True]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(`4esn` :`6esn`:`7esn`{`8esn`:0X7[..12e12]}).`4esn`! Return Distinct {`5esn`:123.654[@usn5]} Is Not Null Is Not Null,[@usn6 =~01,$`7esn` In $7,00[``..][$`4esn`..]][All(`4esn` In $`8esn` Starts With 1000 Where 9e1 Is Null Is Null)..(_usn4 {_usn3:$`1esn` Is Null,usn1:$`4esn`[$`2esn`..]})<-[#usn8?:_usn4|:@usn5 *..0x0]-(#usn8 :`1esn`{#usn7:1e1[`6esn`..]})] Skip (#usn8 :`5esn`{usn2:.e1 Starts With 0.0 Starts With `6esn`,#usn8:9e12 =~01 =~$`7esn`})<-[`7esn`?:`5esn`|`1esn` *0xabc]->(#usn7 {`6esn`:123456789 Is Null,`1esn`:00 In 12.e12})[Filter(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 0.12 Ends With $usn1 Ends With $@usn5)][`3esn`(Distinct 9e12[_usn3])] Limit Extract(`4esn` In `6esn`[1e1..] Where 123456789 =~_usn4 =~$0) Contains (`3esn` :usn2:@usn6{`4esn`:`7esn` Contains .0 Contains 9e12})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:@usn5{#usn7:1e1[@usn5..]})-[`5esn`? *00..{usn1:07[`6esn`..][`5esn`..],`2esn`:#usn7 Contains .0 Contains .e1}]->(`5esn` :usn2:@usn6) Contains ({#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1})-[#usn7?:_usn4|:@usn5{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]->(:`2esn`:`3esn`)<-[`7esn`?:#usn8]->(@usn5 :usn2:@usn6{`7esn`:1000 Contains 0.e0});"),
    octest:ct_string("Detach Delete Count(*)[_usn3..Count ( * )],0X7 In $@usn5 In 9e0,01234567 Is Null Is Null Detach Delete 010 Starts With `7esn` Starts With 9e1 Union All Match `3esn`=(((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})-[:`7esn`|`2esn` *..0X7{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]-(`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})-[`4esn`? *00..]-(:`4esn`:#usn8{@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]}))) Where `7esn`[Null..][@usn5..];"),
    octest:ct_string("Create ((#usn8 {_usn3:`6esn` =~01234567 =~0Xa,_usn4:$`5esn` Is Null Is Null})-[#usn7:`1esn` *07..]->(#usn8 {`2esn`:$`5esn` Contains Count(*) Contains #usn7,_usn4:Null Starts With $`7esn` Starts With `2esn`})),_usn4=(`7esn` {usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3})<-[{@usn5:$123456789 Ends With .e1,#usn8:0x0 =~_usn4}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})-[#usn8?]->(:`4esn`:#usn8{_usn4:'s_str' In \"d_str\" In 123456789,`2esn`:0.12 Ends With $usn1 Ends With $@usn5}) Return Extract(`6esn` In 0X7 =~``|9e0 In 01234567) Contains Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) As `5esn` Merge (`8esn` )-[ *0..010{#usn7:$@usn6 Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)}) On Create Set [`4esn` In $`8esn` Starts With 1000 Where 9e1 Is Null Is Null|9e12 =~01 =~$`7esn`].#usn7! =`2esn`[$`3esn`..],`1esn`(Distinct 07[0..`4esn`]).`4esn`? =Filter(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $123456789[..0x0][..`4esn`]) Contains All(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 01234567[.12..7][1000..1.e1]);"),
    octest:ct_string("Delete #usn8 Ends With 1e1 Remove ({_usn4:010 =~$usn2 =~1e1,`2esn`:0X0123456789ABCDEF Is Not Null})<-[`6esn`? *00..{`8esn`:$`2esn`[123456789..][00..],`7esn`:123.654 Contains #usn8}]-(`8esn` :`1esn`)<-[`6esn`?{`7esn`:.12 Ends With `1esn` Ends With $`1esn`,``:9e0 Starts With `6esn`}]->(#usn7 :@usn5)._usn4?,None(#usn8 In $`5esn` Is Null Is Null Where 01234567 Ends With 12.0 Ends With 0X7).@usn5! With Distinct *,9e12[_usn3] As `8esn`,$`1esn`[9e1.._usn4][$999..$`2esn`] As `8esn` Order By `6esn` Starts With $`5esn` Desc,$`7esn` Ends With 07 Ends With 07 Desc Where 's_str'['s_str'..$usn2][_usn3.._usn3] Union Unwind Extract(`6esn` In 0X7 =~`` Where $_usn3[9e1][$_usn4]|@usn6[..0xabc][..$#usn7])[[@usn6 In @usn5 In $`6esn` Where $@usn5 In 12e12 In Count(*)|999[$`6esn`]]..Any(_usn4 In usn1 Contains False Contains `` Where 0X7 In 123.654 In $`2esn`)][{`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`],usn2:@usn6[`3esn`..][$7..]}..`7esn`($123456789 Ends With $`6esn`)] As _usn4 Merge `8esn`=(({_usn3:$0 Ends With $#usn7 Ends With .12})-[:``|:_usn4 *01234567..12{`2esn`:$`` Is Null Is Null,``:$`4esn`[usn1..$#usn8][12.0..`3esn`]}]->(#usn7 {@usn5:`5esn`[.e1][0Xa],@usn6:Count(*)[`7esn`..$12]})-[?:``|:_usn4 *..0X7]->({`2esn`:@usn5 In 0X0123456789ABCDEF,`1esn`:@usn6[`5esn`..$`3esn`]}));"),
    octest:ct_string("Unwind 123.654[@usn5] As _usn3 Detach Delete 1000 Ends With 1000 Ends With $`4esn`,{#usn8:$`5esn` In False,usn2:$`7esn` In $7}[..Any(@usn6 In @usn5 In $`6esn` Where 010 =~$usn2 =~1e1)],{_usn3:0.12 Is Null Is Null,`1esn`:9e12[0.0..12.e12]} Ends With {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]} Union With Distinct `2esn` Starts With $_usn3 Starts With `2esn` Skip [@usn6 In @usn5 In $`6esn` Where False[0Xa..$@usn5][$`6esn`..12e12]][{@usn6:.12 Starts With 0Xa}..(`2esn` {usn1:@usn6[$`7esn`],_usn3:$@usn6[..12e12]})-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]->(usn1 {#usn7:Count ( * )[@usn6..0x0]})-[@usn6?:#usn8 *..7{@usn5:@usn5 Starts With 12e12 Starts With @usn5}]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})] Limit {`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]} Is Null Is Null Match @usn5=(:`8esn`{`7esn`:@usn6 Contains _usn4 Contains $`4esn`})-[`1esn`:usn2|#usn8 *1000..]-(:`5esn`{`3esn`:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:0e0 =~_usn4}) Remove Any(usn1 In 0x0[..`4esn`] Where $0[$#usn8..01234567])._usn3!,Filter(@usn6 In @usn5 In $`6esn` Where 9e0[$_usn3..0X7][7..$#usn8]).`3esn`!,#usn7(Distinct).`1esn` Union With Distinct @usn6 Starts With `7esn` Starts With Null,$usn1[#usn8..][``..] As `2esn`,`3esn`[$`1esn`..] As usn2 Order By _usn3[0] Asc,``[$`3esn`][$`2esn`] Ascending,{@usn5:0.e0[@usn6][0x0]} Ends With All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 7 In $`3esn` In #usn7) Ascending Skip (@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})<-[_usn4?:`6esn`]-(`2esn` {`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null}) Is Not Null Is Not Null Limit [@usn6 In @usn5 In $`6esn` Where $usn2 Is Not Null|$`6esn`[..0X0123456789ABCDEF]][`5esn`(Distinct 0X7 In $@usn5 In 9e0,0x0)..] Where `1esn` Contains Count ( * ) Return Extract(`6esn` In 0X7 =~``|9e0 In 01234567) Contains Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) As `5esn` Return Distinct *,.e1 Starts With $`8esn` Skip 0xabc[12.e12..`1esn`] Limit 0.e0[@usn6][0x0];"),
    octest:ct_string("Remove [0.0 =~0X7 =~#usn7,123456789 =~_usn4 =~$0].`3esn`,[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 0 Is Not Null Is Not Null|$`5esn` In `2esn` In .0].``! Merge `1esn`=(((`2esn` :_usn3{`5esn`:12.e12[$1000..],`4esn`:'s_str'[..0.0][..$`4esn`]})<-[_usn3?:``|:_usn4 *0xabc{`6esn`:$#usn8 Ends With 1000 Ends With .0,`7esn`:010 =~`6esn`}]-(:usn1{#usn7:12[0X7..@usn6]})-[usn1?:`1esn` *0X0123456789ABCDEF..{usn2:$`4esn`[12.e12..][0.0..]}]-(:`6esn`:`7esn`{usn2:_usn3 Contains @usn6 Contains 1.e1,usn2:$`6esn`[`1esn`..][.e0..]}))) On Match Set [#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|$`7esn` Is Not Null].@usn6! =999[$`6esn`],#usn8+=$@usn6 In usn2 In 123456789,_usn3 =$`4esn`[12.e12..][0.0..] With  's_str'[12..'s_str'] Limit #usn7 Starts With 0x0 Starts With Null Where 1e1[`6esn`..] Union All Unwind 00 Starts With _usn3 As #usn7 Union Remove (usn2 :`6esn`:`7esn`{`6esn`:`` Contains 12 Contains True,usn2:$`2esn`[123456789..][00..]})-[_usn3 *010]->(:usn1{`8esn`:usn1 Contains $``})._usn4?,usn1:`3esn`:`1esn`,{`2esn`:9e1 In 01 In 999,`5esn`:$@usn6[..$usn1]}.@usn5! Unwind .e12 =~0.0 =~9e0 As `8esn`;"),
    octest:ct_string("Merge `3esn`=(({`5esn`:0.12 Contains .e1})-[usn1?:`2esn`|usn2 *123456789..999]-(usn1 :`7esn`{`1esn`:$@usn6 Contains 07 Contains 0.e0})-[:@usn5|`8esn` *123456789..999{usn1:9e12 Is Not Null Is Not Null}]-(#usn7 :`5esn`)) Union All Detach Delete $`7esn` In 0.e0 In `4esn` Delete Filter(usn2 In 1000 Contains 0.e0 Where $`7esn` Ends With $`2esn` Ends With $usn1)[..(:usn2:@usn6{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8})-[? *999..]-(:`4esn`:#usn8{@usn6:$`4esn`[$`2esn`..]})][..Any(@usn5 In .12[#usn7][$`8esn`] Where 0Xa Is Null Is Null)],123.654 Starts With usn1 Starts With @usn5;"),
    octest:ct_string("Remove [0x0[$`3esn`..010][$#usn7..00],$_usn4[#usn8..],#usn7 Starts With `1esn`]._usn4?,count(Distinct 0.e0[9e1..][0.0..],$usn2 =~$#usn8).`5esn`?,`2esn`:`` Union All Return Distinct {`5esn`:123.654[@usn5]} Is Not Null Is Not Null,[@usn6 =~01,$`7esn` In $7,00[``..][$`4esn`..]][All(`4esn` In $`8esn` Starts With 1000 Where 9e1 Is Null Is Null)..(_usn4 {_usn3:$`1esn` Is Null,usn1:$`4esn`[$`2esn`..]})<-[#usn8?:_usn4|:@usn5 *..0x0]-(#usn8 :`1esn`{#usn7:1e1[`6esn`..]})] Skip (#usn8 :`5esn`{usn2:.e1 Starts With 0.0 Starts With `6esn`,#usn8:9e12 =~01 =~$`7esn`})<-[`7esn`?:`5esn`|`1esn` *0xabc]->(#usn7 {`6esn`:123456789 Is Null,`1esn`:00 In 12.e12})[Filter(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 0.12 Ends With $usn1 Ends With $@usn5)][`3esn`(Distinct 9e12[_usn3])] Limit Extract(`4esn` In `6esn`[1e1..] Where 123456789 =~_usn4 =~$0) Contains (`3esn` :usn2:@usn6{`4esn`:`7esn` Contains .0 Contains 9e12})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:@usn5{#usn7:1e1[@usn5..]})-[`5esn`? *00..{usn1:07[`6esn`..][`5esn`..],`2esn`:#usn7 Contains .0 Contains .e1}]->(`5esn` :usn2:@usn6) Contains ({#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1})-[#usn7?:_usn4|:@usn5{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]->(:`2esn`:`3esn`)<-[`7esn`?:#usn8]->(@usn5 :usn2:@usn6{`7esn`:1000 Contains 0.e0}) Delete $_usn4[$`1esn`],[01234567 =~usn1,9e0 =~$`5esn`,usn2[$`1esn`...0]][..[.12 In $999 In `5esn`,010 =~`6esn`,#usn7 Contains .0 Contains .e1]];"),
    octest:ct_string("Merge #usn7=((_usn3 :_usn4:usn1{`2esn`:$`6esn`[$@usn6..]})) On Create Set usn2+=[usn1[..@usn5][...e0]] In Extract(`6esn` In 0X7 =~`` Where $1000 Contains $`3esn`|12 Ends With 01234567) In {`3esn`:$`5esn` In `2esn` In .0,``:0e0 Is Null Is Null} On Create Set `5esn`+=0 Starts With `6esn` Starts With 0X0123456789ABCDEF,`4esn`+=$`7esn` Ends With $usn2,[usn2 In 1000 Contains 0.e0 Where #usn7 Ends With 9e1|010 Is Null Is Null].@usn5! =$1000 Ends With 1e1 Ends With 123.654 Union All Merge usn1=((`8esn` :`7esn`{`8esn`:False In 123456789 In $0})-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]-(usn1 :`4esn`:#usn8{``:0 Is Not Null Is Not Null,`3esn`:usn1 Starts With $#usn7 Starts With `5esn`})) On Match Set [@usn6 In @usn5 In $`6esn` Where False Contains `3esn`].`6esn` =[#usn7 In 01234567[$`3esn`..] Where `7esn` Starts With $`` Starts With $#usn7|07 In 0 In 's_str'][Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 12.0[..$7][..999])..][[@usn5 In .12[#usn7][$`8esn`] Where $0[7..][Null..]|$@usn5 Contains 01]..],`8esn` =[`6esn` In 0X7 =~`` Where 12.e12['s_str']|00[7..$123456789]][All(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6)..][Extract(`4esn` In $`8esn` Starts With 1000 Where 1.e1[0X0123456789ABCDEF..][$`5esn`..]|9e1[...e0])..],($999)<-[ *00..{@usn5:$`5esn` Is Null Is Null}]->(@usn5 {`1esn`:0[usn2..]})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`1esn` :usn2:@usn6).`4esn` =`3esn` =~0.0 =~$`` On Match Set _usn4+=`1esn`[`3esn`..][$@usn6..],Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 12.e12 Ends With 01 Ends With .e1|@usn6[$`7esn`]).`2esn`! =[usn1 In $123456789 Contains usn2 Where $1000 =~$`7esn`|False In $`7esn` In .0] Union All Unwind [$#usn7[True..][$0..]][..(usn1 :#usn8)-[:`1esn` *010{`2esn`:$_usn3[9e1][$_usn4],`7esn`:`7esn`[...e1][..\"d_str\"]}]->(`7esn` :#usn8)<-[:#usn7|:_usn4{usn2:`5esn`[Count ( * )..][\"d_str\"..],`7esn`:.e1 In $@usn6 In 999}]-({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})][..[@usn5 In $#usn8 Is Null Is Null Where 12.e12[@usn5..123.654]]] As @usn6;"),
    octest:ct_string("Remove Any(`4esn` In $`8esn` Starts With 1000 Where 0X0123456789ABCDEF[.e0..$`4esn`]).`6esn`?,[$0 Ends With $#usn7 Ends With .12,$7,@usn5 Ends With $`3esn` Ends With 12e12].`1esn`? Union Return Distinct *,None(usn2 In 1000 Contains 0.e0 Where $`6esn`[Count(*)..0.e0][0.0..Count ( * )])[(:usn2:@usn6{@usn6:$`4esn`[$`2esn`..]})<-[#usn8? *12..0xabc]-(:`6esn`:`7esn`{`3esn`:`8esn`[$``]})][Any(@usn6 In @usn5 In $`6esn` Where 12.0[0Xa][00])] As @usn5,$usn1[1e1.._usn3][$@usn6..$#usn7] As `5esn` Skip Count(*)[12.e12..] Unwind Any(@usn5 In $#usn8 Is Null Is Null Where 0.e0 Ends With 12 Ends With $7) Is Not Null Is Not Null As `2esn` Union All Match `8esn`=(((:#usn7{`7esn`:\"d_str\",usn2:True[`4esn`][$`6esn`]})<-[#usn8?:_usn4|:@usn5 *..0x0]-(#usn8 :`1esn`{#usn7:1e1[`6esn`..]})<-[:#usn7|:_usn4{``:$1000 Is Null Is Null}]->({`6esn`:.e1 Starts With 0.0 Starts With `6esn`,_usn3:$@usn6 Contains 0 Contains $`2esn`}))) Where 0Xa[..$``];"),
    octest:ct_string("Unwind $@usn5[.e1] As #usn8;"),
    octest:ct_string("Delete $`2esn` Ends With `3esn` Ends With $7,0e0[12][$_usn4],`7esn`[Null..][@usn5..] With  @usn5[..True][..0X7] As #usn8,[#usn7 In 01234567[$`3esn`..] Where `7esn` Starts With $`` Starts With $#usn7|07 In 0 In 's_str'][Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 12.0[..$7][..999])..][[@usn5 In .12[#usn7][$`8esn`] Where $0[7..][Null..]|$@usn5 Contains 01]..] Skip ({`7esn`:12e12 Ends With 010 Ends With .0})<-[?:`5esn`|`1esn`{_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12}]-({@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]})[None(usn2 In 1000 Contains 0.e0 Where @usn6[`3esn`..][$7..])..] Create (#usn7 $usn2)<-[?:_usn3|:`4esn` *010{`8esn`:$``[_usn4..][`7esn`..]}]-(`2esn` );"),
    octest:ct_string("Unwind ``(Distinct `1esn`[0e0..]) =~(:`1esn`{@usn5:123456789 Starts With `2esn` Starts With 9e12})-[@usn6?:`1esn`]-(:`5esn`)-[`5esn`?:`3esn`|:`4esn`{`1esn`:$usn2 Contains 12.e12 Contains 00}]-(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]}) As _usn4 Union Match `4esn`=(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa}),`7esn`=(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})-[?:#usn7|:_usn4]->(`` :#usn7$0)-[`2esn` *0X0123456789ABCDEF..{usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3}]->(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]}) Where $`4esn`[9e1..][0..] Remove ``(Distinct 1e1 Is Null,$`6esn`[Count(*)..0.e0][0.0..Count ( * )]).`7esn`!,Extract(`4esn` In $`8esn` Starts With 1000 Where False[`2esn`..#usn8]|_usn3 Is Not Null Is Not Null).@usn6,[1e1 In $#usn8 In 12e12,9e1 Contains $`3esn` Contains 01234567].@usn6! Detach Delete 07[0..`4esn`],``(Distinct `1esn`[0e0..]) =~(:`1esn`{@usn5:123456789 Starts With `2esn` Starts With 9e12})-[@usn6?:`1esn`]-(:`5esn`)-[`5esn`?:`3esn`|:`4esn`{`1esn`:$usn2 Contains 12.e12 Contains 00}]-(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]}),[$1000 Is Null Is Null] Is Null;"),
    octest:ct_string("Remove Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $@usn6 Is Null Is Null).`4esn`,All(@usn5 In $#usn8 Is Null Is Null).usn1! Union Merge (`7esn` :_usn4:usn1)-[_usn4?:#usn8 *..0X7{@usn5:07}]-(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})-[`1esn`{`2esn`:.12 Starts With @usn5 Starts With $#usn8}]->(:usn1{`6esn`:1000 Contains 0.e0,`7esn`:$@usn6[..$#usn7][..12.e12]}) Unwind `7esn`[1000..][$123456789..] As #usn7 Remove @usn6(_usn4[0xabc..],$usn1[_usn4..][usn2..]).`4esn`?;"),
    octest:ct_string("Merge ((@usn6 :#usn7{@usn5:Null Is Null Is Null})) On Create Set `8esn` =Filter(@usn5 In $#usn8 Is Null Is Null Where 9e1 Contains $`3esn` Contains 01234567) =~['s_str'[..0.e0][..`1esn`],`5esn`[.e1][0Xa],123456789 In $usn2 In `6esn`],`8esn`+=Filter(`6esn` In 0X7 =~`` Where $usn2[0e0..])[usn2($#usn8 Is Null Is Null)..Extract(usn1 In 0x0[..`4esn`] Where 123456789 In $usn2 In `6esn`|@usn5[..True][..0X7])][(`` :@usn5{#usn7:0X7[12]})-[@usn6? *07..{_usn4:Count(*)[..`3esn`],`5esn`:01234567[$`3esn`..]}]-(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null})<-[`5esn`:`8esn`|:usn1{usn1:12e12[Count ( * )..][usn2..],usn2:$123456789 Is Null Is Null}]-(`8esn` )..[@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null]] Return Distinct *,9e12[_usn3] As `8esn`,$`1esn`[9e1.._usn4][$999..$`2esn`] As `8esn` Order By `6esn` Starts With $`5esn` Desc,$`7esn` Ends With 07 Ends With 07 Desc;"),
    octest:ct_string("Match @usn6=(((@usn6 :`5esn`{``:.e1 In $@usn6 In 999,`8esn`:_usn3 Is Null Is Null})<-[$#usn8]->(`4esn` {#usn8:`1esn`[0e0..],#usn7:$`6esn`[..0X0123456789ABCDEF]})-[`6esn`? *0Xa{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}]-(:`6esn`:`7esn`{`8esn`:$`3esn`[@usn5..$123456789],@usn5:\"d_str\" Starts With $usn1}))) Union All Merge (({`3esn`:$`3esn` =~$`7esn` =~False,`4esn`:12 Ends With 01234567})<-[@usn5?:``|:_usn4]-(_usn3 :`4esn`:#usn8)) On Match Set `8esn`:`4esn`:#usn8,Extract(`4esn` In $`8esn` Starts With 1000 Where False[`2esn`..#usn8]|_usn3 Is Not Null Is Not Null).`6esn`? =#usn8 Is Not Null,usn1 =Extract(#usn8 In $`5esn` Is Null Is Null Where @usn6 Contains .e1 Contains $`4esn`) In Filter(`4esn` In `6esn`['s_str'..][010..] Where 12e12[Count ( * )..][usn2..]) In [123456789 In $usn2 In `6esn`,Count(*) Ends With 010] Detach Delete `7esn` Starts With $`` Starts With $#usn7;"),
    octest:ct_string("Return Distinct *,Extract(`6esn` In 0X7 =~`` Where $`5esn` In `2esn` In $12) Starts With (@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})<-[`8esn`]->(#usn8 )<-[`3esn` *00..{`8esn`:@usn6 Contains .e1 Contains $`4esn`,_usn4:0X7[..12e12]}]->(@usn5 {`1esn`:0[usn2..]}),$`1esn` Ends With _usn4 Ends With `3esn` Skip [$1000 Is Null Is Null] Is Null Limit $1000 In $`7esn` In $7 Return *,9e1['s_str'..1e1] As #usn7,01234567 As `6esn` Skip `2esn` In Count(*) In 9e0 Limit usn2 Is Not Null Unwind Count ( * )[..usn1][..12.e12] As #usn8 Union Return Distinct #usn8 In $0 As `1esn`,'s_str' In \"d_str\" In 123456789,[0Xa[$``..][01234567..]] Contains `3esn`(Distinct _usn3 In .e1 In $12) Contains (`5esn` :`8esn`{`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null})<-[:@usn5|`8esn`*..]-(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})-[``?{usn2:@usn5 In 0X0123456789ABCDEF,usn2:9e1 Is Null Is Null}]->(`8esn` :_usn3{``:12.e12['s_str']}) As @usn6 Order By Count ( * )[(`7esn` {usn1:$1000 Contains $`3esn`})-[`5esn`?:_usn4|:@usn5]-(`3esn` {`8esn`:$``[_usn4..][`7esn`..]})-[@usn5:`4esn`|:`7esn` *0X0123456789ABCDEF..{`7esn`:.e0[..999][..0X7]}]-(usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1})..Single(usn1 In 0x0[..`4esn`] Where $999[12.0..])][(:`6esn`:`7esn`{@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]})-[?{`2esn`:$`6esn`[$@usn6..]}]-(`4esn` :`6esn`:`7esn`)<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})..Single(`6esn` In 0X7 =~`` Where $usn1[0.12..]['s_str'..])] Ascending,0xabc[$@usn5] Asc,usn1[..$_usn4][..``] Ascending;"),
    octest:ct_string("Delete 0e0,7[..12e12][..$`6esn`] Detach Delete Extract(usn1 In 00 Starts With _usn3 Where 00|0 Is Not Null Is Not Null) Starts With (:``{_usn3:Count(*)['s_str'..`1esn`],`1esn`:$`6esn`[$`1esn`][1000]})-[? *00..{_usn3:07[Count ( * )...e1][0X0123456789ABCDEF..$7],`1esn`:$`2esn` =~'s_str'}]->(_usn4 )<-[`2esn`?]-(usn2 :`3esn`:`1esn`) Starts With {_usn3:'s_str' =~0.e0},12 Ends With .e12 Ends With $7;"),
    octest:ct_string("Unwind .e12 =~0.0 =~9e0 As `8esn` With Distinct 01[Null..][`1esn`..] As `2esn`,$usn1 Contains Extract(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where .e0[..999][..0X7]) Contains [@usn6[`3esn`..][$7..]] Order By 0X7 =~.0 =~\"d_str\" Desc,.12 =~.12 =~1e1 Asc,$#usn8 In .e12 In 9e1 Desc Skip $`3esn` =~$999 =~$`3esn` Limit {`8esn`:9e1 In 01 In 999}[usn1(1e1[..#usn8][..'s_str'])..{#usn8:$999 Ends With $`3esn` Ends With `8esn`}] Where Count ( * )[Count ( * )..12e12][usn1..1000] Detach Delete [@usn5 In $#usn8 Is Null Is Null Where 7 In 0xabc][[Null[01234567][01234567],07[1e1],Count(*)[12.e12..]]..#usn8($12 Contains 123.654 Contains `8esn`,0xabc Ends With $#usn7 Ends With #usn8)],0.12,Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 01234567[.12..7][1000..1.e1]|$`5esn` In False) Contains {@usn5:Null[0e0][12],_usn4:0 Contains 12e12} Contains [usn1 In 0x0[..`4esn`] Where \"d_str\" Contains `3esn` Contains 00|@usn6[`3esn`..][$7..]] Union All With  *,Any(usn2 In 1000 Contains 0.e0 Where @usn6[`3esn`..][$7..])[All(#usn7 In 01234567[$`3esn`..] Where Count(*)[.e0.._usn4])..][None(usn2 In 1000 Contains 0.e0 Where True[Count(*)..][1e1..])..] As @usn6 Order By {`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]}[({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})-[? *999..]-({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`8esn` :`7esn`)][{@usn5:`` In `6esn`,`1esn`:$`2esn`[$`2esn`..]}] Asc,0.12 In $7 In 0 Desc Limit 123.654 Contains #usn8 With Distinct *,12 Is Null Is Null As #usn7,$`7esn` Ends With $0 Ends With .e12 As `` Order By $0[01234567..00][$`2esn`..$@usn6] Desc,12.e12['s_str'] Desc,123456789 Starts With #usn7 Starts With `6esn` Asc Limit 999 In 9e1 In 7;"),
    octest:ct_string("Return Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]) In All(@usn5 In .12[#usn7][$`8esn`] Where \"d_str\" =~`6esn` =~0Xa) In [123.654 Starts With usn1 Starts With @usn5] Order By 12e12[Count ( * )..][usn2..] Ascending,(`8esn` :usn2:@usn6)<-[#usn7:`3esn`|:`4esn` *00..]->(`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}) =~{@usn6:$_usn3[..Count ( * )][..@usn5],@usn5:12e12[Null]} =~Extract(usn2 In 1000 Contains 0.e0 Where $`7esn` Ends With $`2esn` Ends With $usn1) Descending Detach Delete $999[12.0..] Match usn2=(((`1esn` :``{`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]})<-[?:`5esn`|`1esn` *999..]->(:``)<-[@usn6? *1000..{#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1}]-(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`}))),`2esn`=(({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})-[?:`2esn`|usn2{@usn6:0.12[0.e0..][`4esn`..]}]->(:_usn4:usn1)) Where `4esn` =~123456789 Union Optional Match ((:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})),`1esn`=((@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})<-[#usn7 *123456789..999]-(:@usn6:`7esn`{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})) Where 0 Ends With $7 Ends With _usn3 Unwind `6esn`[..`5esn`] As #usn8 Union Detach Delete 01234567[$`7esn`][_usn3],0.12 =~9e0,$`8esn` =~1000 =~12e12;"),
    octest:ct_string("Optional Match `8esn`=((({`1esn`:12[..9e0][..999],usn1:0x0 =~$`7esn` =~@usn6})-[#usn8:`3esn`|:`4esn` *0..010]-(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]})<-[_usn3]->(_usn4 :`3esn`:`1esn`{`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]}))) Where 0X0123456789ABCDEF[..usn1] Remove {usn1:0e0 Is Not Null Is Not Null}.@usn5,None(#usn7 In 01234567[$`3esn`..] Where 12[usn1][True]).#usn7? Detach Delete Count(*)[_usn3..Count ( * )],0X7 In $@usn5 In 9e0,01234567 Is Null Is Null;"),
    octest:ct_string("Unwind 0xabc[$@usn5] As usn2 Optional Match ((:`6esn`:`7esn`{usn2:.e0[..0X0123456789ABCDEF][...e12]})),((`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]})) Where $`4esn`[12.e12..][0.0..] Union Merge usn1=((:#usn8{#usn7:12e12 Ends With 010 Ends With .0})-[#usn8? *0xabc]-(#usn8 :`4esn`:#usn8)) On Match Set #usn7($123456789 Contains 01 Contains 0.12).usn2! =.e12 =~0.0 =~9e0,All(#usn7 In 01234567[$`3esn`..] Where $@usn6 =~usn1).`4esn` =$999[12.0..],`8esn`+=Filter(_usn4 In usn1 Contains False Contains `` Where 9e0 =~$`5esn`) =~``($`4esn`[usn1..$#usn8][12.0..`3esn`]) =~Single(usn2 In 1000 Contains 0.e0);"),
    octest:ct_string("Unwind #usn8 Is Not Null As usn2 Match #usn8=(usn1 :`4esn`:#usn8) Where 00[``..][$`4esn`..] Create `5esn`=((#usn8 :`1esn`{#usn7:1e1[`6esn`..]})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->({usn1:`2esn`[$`1esn`..][$_usn3..]})),`5esn`=(((`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[ *..7]-(:_usn3{@usn6:$`7esn` Is Null Is Null})-[:`7esn`|`2esn` *12..0xabc]->(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}))) Union Remove None(`4esn` In 's_str'[12..'s_str'] Where $`2esn`[..7][..$usn1]).`2esn`!,{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12}.`6esn`?,usn2:#usn8 Union Return Distinct (_usn3 :`6esn`:`7esn`{usn1:$_usn3[9e1][$_usn4],`8esn`:123456789 =~_usn4 =~$0})<-[#usn8? *12..0xabc]-(:`6esn`:`7esn`{`3esn`:`8esn`[$``]})-[:`6esn`{@usn6:$0 =~$0 =~.e0}]-({`1esn`:@usn6}) In _usn3(0x0[0X7..][usn1..]) In None(#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str') As _usn4 Order By [#usn8 Ends With `4esn` Ends With $`4esn`,$`2esn` =~'s_str',$#usn7[...e12][..$7]][#usn7(0x0 =~_usn4,`5esn` =~0Xa)][{#usn8:$999 Ends With $`3esn` Ends With `8esn`}] Descending Skip 07[12][$`6esn`] Remove ({usn2:00,#usn8:usn2 Ends With $`5esn` Ends With `2esn`})-[#usn8?]-(`2esn` :`5esn`{`4esn`:$usn1[_usn4..][usn2..],`3esn`:999 In $_usn4 In 0X7}).@usn6?,{`3esn`:`4esn`[7..][1000..],usn2:123456789 Starts With `2esn` Starts With 9e12}.`8esn`!,@usn6(Distinct 0X0123456789ABCDEF[.e0..$`4esn`],$0 Ends With $#usn7 Ends With .12).`5esn`! Create ((`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})),#usn7=((#usn7 :`5esn`)<-[:`2esn`|usn2 *07..]-({`7esn`:`6esn` Starts With $@usn6,``:`6esn` =~$_usn3})<-[`1esn`?:`1esn` *01234567..12]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4}));"),
    octest:ct_string("Create ((:`1esn`{@usn6:$_usn4[$`4esn`..$#usn7][`6esn`..7],`8esn`:'s_str'['s_str'..$usn2][_usn3.._usn3]})-[usn1?:`2esn`|usn2 *123456789..999]-(`3esn` :usn2:@usn6)) Unwind `5esn` In 12 As `2esn` Match `1esn`=((`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`5esn`?:usn1|`3esn` *1000..]-({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})) Where $123456789 Is Not Null Is Not Null Union With Distinct 1.e1 Contains @usn6 As usn2 Order By [@usn6 In @usn5 In $`6esn` Where False In $`7esn` In .0|.12 Starts With $usn2] Ends With Extract(@usn6 In @usn5 In $`6esn` Where .12[`1esn`..][$`3esn`..]|Count ( * ) =~Count(*)) Ends With Single(@usn5 In .12[#usn7][$`8esn`] Where `6esn` =~$_usn3) Desc,Single(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where .12 Starts With @usn5 Starts With $#usn8) =~(@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})<-[_usn4?:`6esn`]-(`2esn` {`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null}) =~(_usn4 :usn1)-[@usn5? *999..]-(usn1 :`4esn`:#usn8)-[usn2?:`2esn`|usn2*..{@usn5:$1000[01234567],@usn5:0x0[$`3esn`..010][$#usn7..00]}]->(`4esn` {#usn8:`1esn`[0e0..],#usn7:$`6esn`[..0X0123456789ABCDEF]}) Desc Limit [`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 7 In $`3esn` In #usn7] Starts With [@usn6 In @usn5 In $`6esn` Where $``[_usn4..][`7esn`..]|12.e12 In $0 In Count(*)] Starts With Extract(`4esn` In $`8esn` Starts With 1000 Where `6esn`['s_str'..][010..]|12.e12[@usn5..123.654]) Where $`5esn` In `2esn` In .0;"),
    octest:ct_string("Merge @usn5=(`3esn` :`8esn`{usn1:`2esn`[$`3esn`..],`6esn`:$12[..``][..$7]})-[@usn5?:``|:_usn4]-(`8esn` :#usn8)<-[?:``|:_usn4]-({`5esn`:00 Ends With $_usn4 Ends With $`2esn`,usn2:#usn7 Starts With 0 Starts With 12}) On Create Set _usn3 ={`1esn`:`4esn` In $12 In `8esn`} Contains None(@usn5 In .12[#usn7][$`8esn`] Where .e12 =~0.0 =~9e0) Contains [@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]] Merge ((@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(:``{`2esn`:9e0[``][123.654],`1esn`:$_usn3[Null]})-[@usn6?:#usn7|:_usn4 *00..]->(`` :@usn5{#usn7:0X7[12]})) On Match Set (@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})<-[`6esn`:`4esn`|:`7esn` *1000..{`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null}]->(:#usn7)<-[`5esn`:`8esn`|:usn1]->(`5esn` :`6esn`:`7esn`{`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]}).#usn7? =1000 Contains 123456789 Contains 1e1 On Match Set usn1+=`4esn` Is Null Union Remove Extract(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6|1e1 Is Null).`7esn`!,Filter(usn1 In 0x0[..`4esn`] Where $0[$#usn8..01234567]).`6esn`! Union All Unwind \"d_str\" =~`3esn` =~0Xa As `1esn`;"),
    octest:ct_string("Remove {usn1:0e0 Is Not Null Is Not Null,@usn6:0X7[12]}.usn2,`8esn`(Distinct 0X0123456789ABCDEF[..usn1]).usn1!,{`8esn`:0xabc Ends With $#usn7 Ends With #usn8,usn2:usn1[$`3esn`..$999][True..False]}.#usn8 Return Distinct 0Xa Is Not Null Is Not Null As `1esn`,(`5esn` :`7esn`)-[?:`8esn`|:usn1 *..0X7{@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00}]->(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})[..Filter(#usn8 In $`5esn` Is Null Is Null Where 0Xa Is Null Is Null)][..(`7esn` {@usn5:True[0x0][@usn6],`5esn`:Null Starts With _usn4 Starts With `6esn`})-[#usn8? *0xabc{`5esn`:0X7[12]}]->(`7esn` :`2esn`:`3esn`{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1})-[`6esn`:``|:_usn4 *..01]->(`5esn` {_usn4:0X7 =~``})] As usn1 Skip False[`6esn`][07] Limit [usn1 In 0x0[..`4esn`] Where $1000 Is Null Is Null|12[usn1][True]] Starts With (`` :@usn5{#usn7:0X7[12]})-[@usn6? *07..{_usn4:Count(*)[..`3esn`],`5esn`:01234567[$`3esn`..]}]-(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null})<-[`5esn`:`8esn`|:usn1{usn1:12e12[Count ( * )..][usn2..],usn2:$123456789 Is Null Is Null}]-(`8esn` ) Starts With (`5esn` {usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null})<-[ *00..{@usn5:$`5esn` Is Null Is Null}]->(`3esn` :`4esn`:#usn8{``:\"d_str\" Is Null Is Null})<-[@usn5?:``|:_usn4]-(_usn3 :`4esn`:#usn8) Union All Unwind .e12 Starts With True As `7esn` Unwind $_usn3 =~`7esn` =~$_usn4 As `5esn` With Distinct *,{`4esn`:$@usn6 Contains 0 Contains $`2esn`}[[@usn5 In 0X7 =~.0 =~\"d_str\"|$`1esn` Ends With _usn4 Ends With `3esn`]..Extract(@usn5 In .12[#usn7][$`8esn`] Where $usn2 Contains 12.e12 Contains 00|9e0 Ends With $`7esn`)] Order By 9e1 Starts With _usn3 Starts With `4esn` Descending,usn2(Distinct _usn3 Contains @usn6 Contains 1.e1)[Extract(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where _usn3 Is Null)..[12e12[0.e0][9e1]]][Single(`4esn` In $`8esn` Starts With 1000 Where $`8esn`[..$``])..Extract(`4esn` In 's_str'[12..'s_str'] Where `` Contains 12 Contains True|$`1esn` Is Null)] Descending Limit 0 Starts With 12e12 Starts With `4esn` Union Unwind $`8esn` Starts With 1000 As `7esn`;"),
    octest:ct_string("Return *,`4esn`[$#usn7] As `1esn`,@usn6(123456789 =~$123456789) In Extract(`4esn` In `6esn`[1e1..]) In {``:True[..'s_str'][..01],usn1:0.12 In $7 In 0} Order By Count ( * )[`3esn`..][`2esn`..] Ascending,$`7esn` Ends With `1esn` Ends With True Desc With  *,12e12 Is Not Null As usn1 Order By [0.0 =~0X7 =~#usn7,123456789 =~_usn4 =~$0] Ends With `7esn`(Distinct 12.0[..$7][..999],0X7[.e12..01234567]) Asc Skip $`6esn` =~1e1 Limit .12 Is Not Null Is Not Null Where @usn5 Contains $`1esn` Contains 999 With  $1000 Starts With .0 Starts With 0.0 As `5esn`,`5esn`[`1esn`..`1esn`] As `4esn`,#usn8 In $0 As `4esn` Order By `1esn`(Distinct $@usn5[#usn8..][$`1esn`..],#usn7 Ends With `4esn` Ends With @usn5)[[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $999[12.0..]|usn1[Count ( * )..$usn1]]][{`8esn`:010[@usn5..],#usn8:False Is Not Null Is Not Null}] Descending,(`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]})<-[`1esn`:`8esn`|:usn1 *0xabc{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]->(#usn8 :`2esn`:`3esn`{#usn7:Count(*) In 01 In .0,#usn7:12.0[..$7][..999]})<-[usn1?:`1esn`{#usn7:9e12 Is Not Null Is Not Null,usn2:`3esn` =~0.0 =~$``}]->(:`4esn`:#usn8{@usn6:0 Starts With 12e12 Starts With `4esn`})[Single(`4esn` In 's_str'[12..'s_str'])..#usn8($12 Contains 123.654 Contains `8esn`,0xabc Ends With $#usn7 Ends With #usn8)] Desc Skip 00 In 0.12 In `5esn` Where 's_str' In \"d_str\" In 123456789;"),
    octest:ct_string("Create usn2=((`5esn` :`7esn`)),_usn4=(((:`3esn`:`1esn`{usn2:`5esn`[Count ( * )..][\"d_str\"..],`7esn`:.e1 In $@usn6 In 999})<-[`8esn`:@usn5|`8esn` *123456789..999{`5esn`:0x0 Contains $`8esn` Contains `6esn`,#usn8:010 =~$usn2 =~1e1}]->(_usn4 {@usn5:$_usn3[$`4esn`..Null]})<-[`3esn`?*..]->(`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]}))) Union Remove [#usn7 Starts With .e12 Starts With $`7esn`].``! Merge `7esn`=(@usn6 {_usn3:1e1[.e1..],`1esn`:$#usn8})<-[#usn8?*{usn2:\"d_str\" Contains `3esn` Contains 00,`3esn`:010 Contains 0X0123456789ABCDEF}]->({`6esn`:$`8esn`[..$``]})-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]-(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa}) On Create Set usn2:@usn6:`7esn` On Create Set @usn5+=123456789 In $usn2 In `6esn` Remove [@usn5 In 0X7 =~.0 =~\"d_str\" Where .e0 In $@usn5 In $0|0 Is Not Null Is Not Null].@usn5?,{usn1:_usn3 Contains @usn6 Contains 1.e1}.#usn7!,usn1:@usn5 Union Delete 12e12[.12..],`1esn` In 999 In $#usn7 Create (((`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]})-[_usn4?:`5esn`|`1esn`]-(@usn5 {``:12[usn1][True],``:$`5esn` In `2esn` In $12})<-[`` *0xabc]->(`7esn` :`2esn`:`3esn`{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}))),`6esn`=(:`3esn`:`1esn`{_usn4:`1esn`[@usn6..$123456789],`4esn`:$usn2[..12.0]})<-[``?:@usn6]-(`6esn` :`3esn`:`1esn`{`7esn`:7 In 0xabc})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]}) Remove [0.0 =~0X7 =~#usn7,123456789 =~_usn4 =~$0].`3esn`,[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 0 Is Not Null Is Not Null|$`5esn` In `2esn` In .0].``!;"),
    octest:ct_string("Detach Delete `7esn` In 's_str' In 0.12,9e0[False] Merge `1esn`=((({`6esn`:$`8esn`[..$``]})-[`2esn`]-(@usn6 {#usn7:'s_str' In \"d_str\" In 123456789,usn2:07[12][$`6esn`]})-[`2esn` *0X0123456789ABCDEF..{usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3}]->(usn1 :`4esn`:#usn8{usn2:$`8esn` In \"d_str\" In 9e12}))) On Match Set @usn5+=Extract(usn1 In 00 Starts With _usn3 Where `2esn` Is Not Null Is Not Null) Starts With [01234567 Ends With 12.0 Ends With 0X7,999[$`6esn`],`` Starts With @usn5] Starts With (`1esn` {`4esn`:$`7esn`[$usn1..][0.0..],`1esn`:$123456789[..0x0][..`4esn`]})<-[:`6esn`]->(@usn5 :@usn6:`7esn`{`6esn`:$0[01234567..00][$`2esn`..$@usn6],`3esn`:`6esn` Starts With $@usn6})<-[@usn6?:@usn5|`8esn` *..01{_usn4:07 Ends With 07,`8esn`:`6esn`[1.e1..$#usn7][.e0..True]}]-(usn2 :`3esn`:`1esn`) On Match Set Single(`6esn` In 0X7 =~`` Where 9e1[0.e0..][#usn8..])._usn3! =0X7 =~`4esn` =~`8esn`,`4esn` =0.12 =~9e0 Union All Optional Match `5esn`=({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(`4esn` :`6esn`:`7esn`{`8esn`:0X7[..12e12]})-[?:@usn6{`8esn`:12 Ends With .e12 Ends With $7,`8esn`:0.0[12...12]}]-(`3esn` :``),`4esn`=(:`6esn`:`7esn`{usn2:_usn3 Contains @usn6 Contains 1.e1,usn2:$`6esn`[`1esn`..][.e0..]})-[:`1esn` *010{`2esn`:$_usn3[9e1][$_usn4],`7esn`:`7esn`[...e1][..\"d_str\"]}]->(`7esn` :#usn8) Where 07[12][$`6esn`] Unwind ({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})<-[#usn8?:_usn4|:@usn5 *..0x0]-(#usn8 :`1esn`{#usn7:1e1[`6esn`..]}) =~`5esn`(Distinct 0X7 In $@usn5 In 9e0,0x0) As `3esn` Union With Distinct *,`6esn`[@usn6..01][.0...e12],12.e12[$1000..] Order By None(`4esn` In 's_str'[12..'s_str'] Where 12.0[0Xa][00]) Is Not Null Desc,[$#usn7[True..][$0..]][..(usn1 :#usn8)-[:`1esn` *010{`2esn`:$_usn3[9e1][$_usn4],`7esn`:`7esn`[...e1][..\"d_str\"]}]->(`7esn` :#usn8)<-[:#usn7|:_usn4{usn2:`5esn`[Count ( * )..][\"d_str\"..],`7esn`:.e1 In $@usn6 In 999}]-({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})][..[@usn5 In $#usn8 Is Null Is Null Where 12.e12[@usn5..123.654]]] Desc Limit `7esn` Starts With $usn2 Starts With .e0;"),
    octest:ct_string("Unwind `4esn`(_usn4[$`4esn`..],0x0[...e12][..@usn5])[..{`3esn`:`8esn`[1000..$7][$`7esn`..`2esn`],_usn4:\"d_str\" Is Null Is Null}] As _usn4 Union With Distinct ``(Distinct `1esn`[0e0..]) =~(:`1esn`{@usn5:123456789 Starts With `2esn` Starts With 9e12})-[@usn6?:`1esn`]-(:`5esn`)-[`5esn`?:`3esn`|:`4esn`{`1esn`:$usn2 Contains 12.e12 Contains 00}]-(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]}),07[07] Order By Count(*)[..`3esn`] Desc Limit [#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str'|@usn6 Starts With `7esn` Starts With Null] Is Not Null Is Not Null Union All Remove [usn1 In $123456789 Contains usn2 Where $1000 =~$`7esn`|False In $`7esn` In .0].`5esn`!;"),
    octest:ct_string("Return Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where usn1 Starts With $#usn7 Starts With `5esn`) Contains @usn5(Distinct 123456789 Starts With `2esn` Starts With .0,123456789 Starts With #usn7 Starts With `6esn`) Contains None(#usn8 In $`5esn` Is Null Is Null Where $#usn8 In .e12 In 9e1),9e1[010..] As `6esn` Order By $`2esn`[$usn2..][123456789..] Ascending,{@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`} In (:_usn3{`6esn`:.e12[..0.e0][..$`1esn`],`8esn`:7 In 0xabc})-[#usn7:`1esn` *07..]->(:`4esn`:#usn8{_usn4:'s_str' In \"d_str\" In 123456789,`2esn`:0.12 Ends With $usn1 Ends With $@usn5}) In All(@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7) Asc Limit 9e1 Starts With `1esn` Starts With 0Xa Match usn2=(_usn3 :_usn3),usn1=((:_usn4:usn1{#usn8:$`7esn` Ends With `1esn` Ends With True})-[`7esn`?:usn1|`3esn` *123456789..999{`5esn`:.e1 In $@usn6 In 999}]-(usn2 :#usn8{`3esn`:123.654[@usn5]})) Where 0 Is Not Null Is Not Null Create #usn8=((#usn8 {`2esn`:$`5esn` Contains Count(*) Contains #usn7,_usn4:Null Starts With $`7esn` Starts With `2esn`})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(:`6esn`:`7esn`{`3esn`:`8esn`[$``]})<-[ *00..{`3esn`:12 Ends With 01234567,`4esn`:00[``..][$`4esn`..]}]->(`2esn` :``)) Union With Distinct 12.e12 Contains $`5esn` As `` Order By $usn1[1e1.._usn3][$@usn6..$#usn7] Desc Limit All(#usn8 In $`5esn` Is Null Is Null Where #usn8[$#usn8..])[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..(#usn8 {`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]})<-[?:@usn5|`8esn`]-(usn2 :@usn5{`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})<-[?:#usn8{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]->(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})] Where .e0 =~`5esn` Delete `4esn`(_usn4[$`4esn`..],0x0[...e12][..@usn5])[..{`3esn`:`8esn`[1000..$7][$`7esn`..`2esn`],_usn4:\"d_str\" Is Null Is Null}];"),
    octest:ct_string("With Distinct *,Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With $usn1|.12 Ends With `1esn` Ends With $`1esn`)[[True[..'s_str'][..01],_usn4 Ends With 01 Ends With $`1esn`,.0[$`6esn`..False]]..`7esn`(Distinct 010 Is Null Is Null,$`8esn`[..$``])][({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})<-[? *0..010]-(`4esn` :`5esn`{_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[:#usn7|:_usn4 *1000..{_usn4:07 In `5esn` In 12e12,@usn6:.0 Is Null Is Null}]->(#usn7 $usn2)..All(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null)] As `8esn`,123456789 Starts With `2esn` Starts With 9e12 As `3esn` Skip Any(@usn5 In $#usn8 Is Null Is Null Where .e1 In $@usn6 In 999) In None(usn1 In 0x0[..`4esn`] Where $123456789[..0x0][..`4esn`]) Limit `6esn` Starts With $@usn6 Where 12[0X7..@usn6];"),
    octest:ct_string("Match (({``:12 Is Null Is Null})<-[usn2:`8esn`|:usn1*..{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]->({#usn7:False[`2esn`..#usn8]})-[`5esn`:#usn8*]->({_usn3:12.e12 In $0 In Count(*)})),#usn7=((`1esn` {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})<-[:_usn3|:`4esn`{_usn4:$`3esn` =~$`6esn` =~`8esn`,`5esn`:0X7[0e0..]}]-(:`8esn`)<-[:#usn7|:_usn4 *0Xa]-(usn1 :_usn3{_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"})) Where 07[12][$`6esn`] Delete `6esn`[False..0.0][12e12..$usn2] Remove [.0 Is Null Is Null,Null Starts With _usn4 Starts With `6esn`].#usn7?,[#usn7 In 01234567[$`3esn`..] Where $999[12.0..]].@usn5!,[12e12[.12..],`2esn`[$`1esn`..][$_usn3..]].usn2? Union All Merge `8esn`=(`8esn` {`6esn`:00 In 12.e12})<-[`5esn`:@usn6]-(:``{_usn3:0X0123456789ABCDEF In 01234567})<-[`7esn`?:@usn5|`8esn`{@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]}]->(`6esn` {@usn6:9e0 Contains `8esn`}) Optional Match _usn4=(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa}) Optional Match usn2=({_usn4:$_usn4[$`8esn`..][07..],#usn7:12.e12[...0][..0x0]})<-[``? *..0X7{_usn4:12 Ends With 01 Ends With 1e1}]-(usn2 :@usn6:`7esn`)-[@usn5?:``|:_usn4]-($12),((_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8})<-[?:usn2|#usn8 *00..]-(`3esn` :`4esn`:#usn8)) Where 07 Ends With 07 Union All Optional Match ((:`8esn`{`7esn`:@usn6 Contains _usn4 Contains $`4esn`})<-[`2esn`:@usn5|`8esn`]->(`2esn` :`5esn`{`4esn`:$usn1[_usn4..][usn2..],`3esn`:999 In $_usn4 In 0X7})),((({usn1:`2esn`[$`1esn`..][$_usn3..]})<-[``? *..0X7{_usn4:12 Ends With 01 Ends With 1e1}]-(usn2 :@usn6:`7esn`)<-[#usn7 *123456789..999]-(:`5esn`{`3esn`:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:0e0 =~_usn4}))) Unwind `7esn` Ends With $usn2 Ends With 999 As usn1 Create `4esn`=((:`7esn`{``:$`1esn` Starts With @usn6})),`1esn`=((@usn5 :@usn6:`7esn`{`6esn`:$0[01234567..00][$`2esn`..$@usn6],`3esn`:`6esn` Starts With $@usn6}));"),
    octest:ct_string("Return Distinct *,[`4esn` In `6esn`['s_str'..][010..] Where $@usn5 In 12e12 In Count(*)|$1000[01234567]][Any(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7)..{usn1:usn1 Is Null Is Null,usn2:12.0[``]}][(_usn3 {`5esn`:0.12 Contains .e1})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`})..00] As `7esn` Skip _usn4(Distinct `7esn` Starts With $usn2 Starts With .e0) =~`3esn`() =~#usn8(9e0 Ends With $`7esn`) Match (`` :`7esn`)<-[`8esn`:@usn5|`8esn` *123456789..999{`5esn`:0x0 Contains $`8esn` Contains `6esn`,#usn8:010 =~$usn2 =~1e1}]->(_usn4 {@usn5:$_usn3[$`4esn`..Null]}) Where $`4esn`[12.0..`5esn`] Create `1esn`=(((usn1 :`4esn`:#usn8)-[`4esn`?:`8esn`|:usn1 *..0x0]->(:@usn6:`7esn`{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})<-[?:`4esn`|:`7esn` *..0X7]-(:`3esn`:`1esn`{`1esn`:0.0[1000..][.e1..]}))),((#usn7 :#usn8{`2esn`:12 =~usn1 =~.e12})-[@usn5?:`3esn`|:`4esn`{`7esn`:Count(*) In 01 In .0,`6esn`:$123456789[..0.12][..#usn7]}]->(`5esn` :`8esn`)<-[`6esn`?:_usn3|:`4esn` *12..0xabc]-(`1esn` :usn1$@usn6)) Union Optional Match (`` :#usn7) With  $`2esn`[``..] As `3esn`,[123456789 =~$123456789,0.12 In $7 In 0] Is Null Is Null As `3esn`,`7esn`[...e1][..\"d_str\"] Order By [0.0 =~0X7 =~#usn7,123456789 =~_usn4 =~$0] Ends With `7esn`(Distinct 12.0[..$7][..999],0X7[.e12..01234567]) Asc Limit $#usn8 Is Null Where $123456789 In Count(*) In .e1 Unwind 123456789 =~_usn4 =~$0 As @usn5 Union All Detach Delete {@usn6:0Xa Is Null Is Null,`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]} =~_usn4(usn2[`3esn`][_usn3]),`6esn`(Distinct 12.0[0Xa][00]) In {`7esn`:12e12 Ends With 010 Ends With .0} In Extract(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6|#usn7 Is Not Null Is Not Null),Any(@usn6 In @usn5 In $`6esn` Where 9e0[$_usn3..0X7][7..$#usn8]) Contains None(usn1 In 00 Starts With _usn3 Where 01234567 Ends With 12.0 Ends With 0X7) Contains Single(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn8 In .e12 In 9e1) Merge @usn6=({`3esn`:$`3esn` =~$`7esn` =~False,`4esn`:12 Ends With 01234567}) On Match Set (:usn1{`1esn`:`6esn` Starts With $usn2 Starts With 0.0})<-[@usn6?:@usn5|`8esn` *..01{_usn4:07 Ends With 07,`8esn`:`6esn`[1.e1..$#usn7][.e0..True]}]-(usn2 :`3esn`:`1esn`).`8esn` =.0,_usn4+=`3esn`[$999..],#usn7($0[$#usn8..01234567],#usn8[$#usn8..]).#usn8! ={#usn8:$`5esn` In False,usn2:$`7esn` In $7} Starts With Filter(usn2 In 1000 Contains 0.e0 Where `2esn`[$`3esn`..]) Starts With All(`4esn` In `6esn`['s_str'..][010..] Where 9e0 =~$`5esn`) On Create Set `6esn`+={`2esn`:999 In $_usn4 In 0X7}[..{`7esn`:12e12 Ends With 010 Ends With .0}][..Filter(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $123456789[$`2esn`][True])],#usn8:`1esn`,[usn1 In 0x0[..`4esn`] Where True =~@usn5 =~$`1esn`|0.0[999..]].`4esn`! =$123456789 Contains 01 Contains 0.12 Detach Delete $999[12.0..];"),
    octest:ct_string("Return Distinct `3esn` Contains 0Xa As `6esn`,[_usn4 Starts With $@usn6 Starts With #usn7,$@usn5 Contains 01] =~`4esn`(12 Ends With 01 Ends With 1e1) =~Extract(`6esn` In 0X7 =~`` Where 0x0[..`4esn`]) As ``,[usn1[..@usn5][...e0]][(`1esn` :`8esn`{`7esn`:`5esn`[`1esn`]})<-[`6esn`:`4esn`|:`7esn` *..0x0]->(#usn8 :@usn5)] Return None(usn1 In 00 Starts With _usn3) Contains _usn3(Distinct 0.12 In 01 In $`3esn`,1.e1[0X0123456789ABCDEF..][$`5esn`..]) Contains {_usn4:Count(*)[True]} Order By usn2(Distinct 0xabc Contains Null Contains 9e12,12[..True][..$`4esn`]) Is Null Ascending,9e1 Starts With 9e1 Starts With 010 Asc Create #usn8=((:`8esn`)-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]-(:@usn5{_usn4:.12 Starts With 0Xa})<-[`4esn`{#usn8:Null[0e0][12],`2esn`:`8esn` In $@usn5}]-({_usn3:999 In $_usn4 In 0X7,`1esn`:1e1 In $#usn8 In 12e12})) Union Remove [usn2 In 1000 Contains 0.e0 Where 0.12 In 01 In $`3esn`|`3esn` =~0.0 =~$``].#usn7?,(:usn1{`1esn`:`6esn` Starts With $usn2 Starts With 0.0})<-[#usn7:`3esn`|:`4esn` *00..]->({`6esn`:9e1[.12..],`5esn`:0.12 In $`4esn` In `6esn`})-[`6esn`:`4esn`|:`7esn` *..0x0]->(:usn1{`6esn`:1000 Contains 0.e0,`7esn`:$@usn6[..$#usn7][..12.e12]}).usn2 Remove Any(`4esn` In $`8esn` Starts With 1000 Where 01 Ends With .e0).`8esn`?,All(`4esn` In `6esn`[1e1..] Where 07[12e12]).`3esn`!;"),
    octest:ct_string("Match #usn8=(((`8esn` :@usn5)<-[@usn5:#usn7|:_usn4]->(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})<-[`4esn`:``|:_usn4{`5esn`:0e0 =~_usn4}]-(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`}))) Where 12e12 Is Not Null With  0Xa[0xabc..] As usn1,`5esn` In 12 As usn2,[#usn8 In $`5esn` Is Null Is Null Where $123456789 Ends With $`6esn`][Any(`4esn` In $`8esn` Starts With 1000 Where 123.654 Starts With usn1 Starts With @usn5)..] As `8esn` Skip #usn7 Contains 07 Limit $999[$1000] Union Merge @usn5=(((_usn3 :_usn3{_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})-[#usn8:`3esn`|:`4esn` *0..010]-(:usn1{_usn3:'s_str'[..0.0][..$`4esn`],`4esn`:$123456789 Is Not Null Is Not Null})-[usn1? *07..{`5esn`:#usn7 Is Not Null Is Not Null}]-(`2esn` :usn1{`8esn`:$``[_usn4..][`7esn`..]}))) On Match Set `3esn`(False In `3esn`).`5esn`! =Count ( * )[Count ( * )..12e12][usn1..1000],#usn7 =(#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :usn2:@usn6)-[`1esn`:`8esn`|:usn1 *0xabc{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]-(@usn5 :#usn8{`1esn`:0xabc Ends With $7 Ends With $`2esn`,_usn4:``})[.._usn4(@usn6[`5esn`..$`3esn`],`8esn`[$``])],#usn7+=00[01234567][False] On Match Set @usn5 =1e1[..#usn8][..'s_str'],`8esn` =usn2[`3esn`][_usn3] Optional Match ((:`6esn`:`7esn`{usn2:.e0[..0X0123456789ABCDEF][...e12]})),((`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]})) Where $`4esn`[12.e12..][0.0..];"),
    octest:ct_string("Optional Match _usn3=(($999)),``=(({`8esn`:0X7 In 's_str' In $`1esn`})<-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]->(`1esn` :`1esn`)) Where 9e0[True..`1esn`] Union Remove [#usn7 In 01234567[$`3esn`..] Where .12 Starts With @usn5 Starts With $#usn8|$`6esn`[$`1esn`][1000]].@usn6?,usn2($#usn8 Is Null Is Null)._usn4;"),
    octest:ct_string("Create (((@usn6 {#usn7:'s_str' In \"d_str\" In 123456789,usn2:07[12][$`6esn`]})<-[?:@usn6{`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]}]->(:@usn5)<-[#usn8?:`4esn`|:`7esn` *07..]->(`` :#usn7$0)));"),
    octest:ct_string("Optional Match ``=((`6esn` :`4esn`:#usn8{_usn4:12.e12[...0][..0x0]})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(usn1 :_usn3)),(((`2esn` :`5esn`{#usn8:$999 Ends With $`3esn` Ends With `8esn`})-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]-(@usn5 :`5esn`)<-[_usn3?:`3esn`|:`4esn` *0..010]->(_usn3 ))) Unwind 12[0X7..@usn6] As `` With Distinct *,9e12[_usn3] As `8esn`,$`1esn`[9e1.._usn4][$999..$`2esn`] As `8esn` Order By `6esn` Starts With $`5esn` Desc,$`7esn` Ends With 07 Ends With 07 Desc Where 's_str'['s_str'..$usn2][_usn3.._usn3] Union All Remove All(@usn5 In .12[#usn7][$`8esn`] Where 0Xa Is Null Is Null).@usn5,`8esn`:_usn3,#usn7(Distinct 0.e0[9e0][0e0],999[``..][Null..]).`7esn`! Match `3esn`=(((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})-[:`7esn`|`2esn` *..0X7{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]-(`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})-[`4esn`? *00..]-(:`4esn`:#usn8{@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]}))) Where `7esn`[Null..][@usn5..] Union All Remove [0.0 =~0X7 =~#usn7,123456789 =~_usn4 =~$0].`3esn`,[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 0 Is Not Null Is Not Null|$`5esn` In `2esn` In .0].``! Merge `1esn`=(((`2esn` :_usn3{`5esn`:12.e12[$1000..],`4esn`:'s_str'[..0.0][..$`4esn`]})<-[_usn3?:``|:_usn4 *0xabc{`6esn`:$#usn8 Ends With 1000 Ends With .0,`7esn`:010 =~`6esn`}]-(:usn1{#usn7:12[0X7..@usn6]})-[usn1?:`1esn` *0X0123456789ABCDEF..{usn2:$`4esn`[12.e12..][0.0..]}]-(:`6esn`:`7esn`{usn2:_usn3 Contains @usn6 Contains 1.e1,usn2:$`6esn`[`1esn`..][.e0..]}))) On Match Set [#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|$`7esn` Is Not Null].@usn6! =999[$`6esn`],#usn8+=$@usn6 In usn2 In 123456789,_usn3 =$`4esn`[12.e12..][0.0..] With  's_str'[12..'s_str'] Limit #usn7 Starts With 0x0 Starts With Null Where 1e1[`6esn`..];"),
    octest:ct_string("With Distinct 12.0 Contains 9e0 Contains $`7esn` As `6esn`,$`4esn` Contains `6esn` Contains #usn7 Order By `5esn`[`1esn`..`1esn`] Ascending,$1000[01234567] Ascending Skip Null Contains 9e1 Where 7 =~9e0 =~'s_str' Optional Match usn2=((`1esn` :usn2:@usn6)-[_usn3?:`2esn`|usn2 *010{`6esn`:#usn7 Ends With `4esn` Ends With @usn5}]->(`1esn` :``{`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]})) Optional Match `1esn`=((@usn5 {@usn6:$123456789[0X7..12.e12]})<-[:`5esn`|`1esn`]-(#usn8 {@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null})),(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}) Union Detach Delete [`4esn` In 's_str'[12..'s_str'] Where 9e12 =~01 =~$`7esn`][#usn7(00 In 12.e12)..Extract(usn1 In 0x0[..`4esn`] Where 1000 Ends With 1000 Ends With $`4esn`|@usn6[$`3esn`])][(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})<-[`8esn`]->(#usn8 )<-[`3esn` *00..{`8esn`:@usn6 Contains .e1 Contains $`4esn`,_usn4:0X7[..12e12]}]->(@usn5 {`1esn`:0[usn2..]})..(usn1 :_usn4:usn1)<-[@usn5?:`1esn`]-(#usn7 :`2esn`:`3esn`)] Optional Match ((_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8})<-[?:usn2|#usn8 *00..]-(`3esn` :`4esn`:#usn8)),((_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8})-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]}));"),
    octest:ct_string("Merge `2esn`=(((`2esn` :`7esn`)<-[? *..7]->({`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null})<-[:`6esn`]->(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}))) On Match Set `8esn`+=$`7esn` =~.e1,`1esn` =`6esn`[_usn4..][$`6esn`..],``+=0xabc Contains $1000 Union All With Distinct 1000[123.654..9e12][1000.._usn3],Extract(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null|12.e12 Ends With 01 Ends With .e1) Ends With $0 Ends With All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`) As _usn4,``[$`3esn`][01234567] Order By {`4esn`:$_usn3[..Count ( * )][..@usn5],#usn8:_usn3 =~00} Starts With Filter(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 01 In _usn3 In 12) Desc,9e0 Ends With $`7esn` Ascending,`1esn`(Distinct Count(*)[..`3esn`]) Starts With $0 Ascending Limit .12[`1esn`..][$`3esn`..] Where $0[01234567..00][$`2esn`..$@usn6] Delete $123456789[$`2esn`][True],_usn4 Ends With 01 Ends With $`1esn` With Distinct `8esn`(Distinct False Contains `3esn`,9e12 =~01 =~$`7esn`)[[@usn6[`5esn`..$`3esn`],0e0 Is Not Null Is Not Null]..] Order By usn2[$`1esn`...0] Descending,None(`6esn` In 0X7 =~`` Where $usn2 Contains 12.e12 Contains 00)[[@usn6 Starts With `7esn` Starts With Null]][{`1esn`:07[`6esn`..][`5esn`..],usn1:$usn2[False..`7esn`][`7esn`.._usn3]}] Ascending,01234567 Ends With 12.0 Ends With 0X7 Ascending Skip 12e12[1000..][0x0..];"),
    octest:ct_string("Detach Delete 00[7..$123456789],`` Starts With 12,{`4esn`:.12 Starts With 0Xa} Starts With All(usn1 In 00 Starts With _usn3 Where `6esn`[False..0.0][12e12..$usn2]) Remove Extract(`4esn` In $`8esn` Starts With 1000 Where 0.12 In 01 In $`3esn`).usn1!,_usn4(Distinct `7esn` Starts With $usn2 Starts With .e0).`5esn`,``:#usn7 Return $@usn5[0.12..][@usn5..],010 Contains 0X0123456789ABCDEF Limit 9e0 Starts With `6esn` Union Return Distinct $`5esn`[$123456789][`1esn`],(`6esn` :`4esn`:#usn8{_usn4:12.e12[...0][..0x0]})-[`4esn`?:`8esn`|:usn1 *..0x0]->(:`7esn`{``:$`1esn` Starts With @usn6}) Ends With `6esn`(Distinct $`4esn`[usn1..$#usn8][12.0..`3esn`],12.e12['s_str']) Ends With (`7esn` {`8esn`:Count ( * ) =~Count(*)})-[`8esn`?:#usn7|:_usn4{usn2:7[$`4esn`..123456789]}]->(#usn8 :usn2:@usn6{`5esn`:00 Ends With $_usn4 Ends With $`2esn`,usn2:#usn7 Starts With 0 Starts With 12})-[_usn3?:`2esn`|usn2 *010{`6esn`:#usn7 Ends With `4esn` Ends With @usn5}]->(`1esn` :``{`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]}) As `7esn`,01234567 As `6esn` Detach Delete $@usn5 In 12e12 In Count(*),`` =~12 =~$#usn7,Null Contains _usn4 Union All Match `1esn`=(:@usn5{usn1:Count(*)[True],@usn6:123456789[$#usn7..]})<-[#usn7]-(`7esn` :`2esn`:`3esn`)-[?:``|:_usn4 *..0X7]->(`4esn` {`6esn`:$12[..``][..$7]}),`1esn`=(((`7esn` :`2esn`:`3esn`)<-[@usn5?:#usn8 *999..{`1esn`:$@usn5 =~$`` =~$usn2}]->(`2esn` {`3esn`:$999[12.0..]})-[? *00..{#usn8:12.e12[...0][..0x0],`7esn`:$`4esn`[9e1..][0..]}]-(:usn1{`6esn`:7 Contains 9e1,#usn8:`7esn`[...e1][..\"d_str\"]}))) Create ((`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})),#usn7=((#usn7 :`5esn`)<-[:`2esn`|usn2 *07..]-({`7esn`:`6esn` Starts With $@usn6,``:`6esn` =~$_usn3})<-[`1esn`?:`1esn` *01234567..12]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})) Match `8esn`=((@usn6 {_usn3:$_usn4[$`1esn`]})-[`5esn`?:_usn4|:@usn5]->({`5esn`:Count(*)[..`3esn`],usn1:01234567 Ends With 0x0})-[usn2 *..0X7{#usn7:$_usn4[`3esn`][0]}]->({#usn7:Count ( * )[@usn6..0x0]})) Where 's_str'[12..'s_str'];"),
    octest:ct_string("With  .12[#usn7][$`8esn`],12 Ends With 07 Ends With @usn6 As usn1 Order By $999[..`1esn`] Ascending,Single(`6esn` In 0X7 =~`` Where 0.12[Null..]) Contains (@usn5 :`2esn`:`3esn`{`1esn`:$`8esn`[..$usn1][..'s_str']})<-[usn2:@usn6{`7esn`:123456789[`4esn`..][Count ( * )..],`4esn`:010[$`8esn`..][0..]}]-(_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8}) Contains All(@usn6 In @usn5 In $`6esn` Where $usn2 Is Not Null) Descending,[$`8esn` =~$usn2][Any(`6esn` In 0X7 =~`` Where $0 Is Not Null)..] Asc Where 12e12[Null] Match ((_usn4 :`2esn`:`3esn`{#usn8:123456789[$#usn7..],#usn7:07[12e12]})) Where $123456789[..0.12][..#usn7] Union All Merge ((({`1esn`:12[..9e0][..999],usn1:0x0 =~$`7esn` =~@usn6})-[#usn8:`3esn`|:`4esn` *0..010]-(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]})<-[_usn3]->(_usn4 :`3esn`:`1esn`{`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]}))) Merge `3esn`=((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})) On Match Set `6esn` =$@usn5[Count ( * )];"),
    octest:ct_string("Return Distinct $`1esn` Starts With $999 As #usn8,Any(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7)[{#usn8:`5esn` =~0Xa,@usn5:0X7[999][$1000]}..[`` Starts With 12,$`1esn` Starts With $999]][`7esn`(Distinct $usn2[..12.0])..`1esn`(Distinct 1e1[0.0],0.0[1000..][.e1..])] Order By 9e1 Is Not Null Is Not Null Asc,$usn2[$123456789..123.654][$`5esn`..'s_str'] Desc Union Remove (`2esn` :`6esn`:`7esn`{`6esn`:$#usn8 Ends With 1000 Ends With .0,`7esn`:010 =~`6esn`})-[:`2esn`|usn2 *999..{#usn8:`5esn` =~0Xa,usn1:12 =~usn1 =~.e12}]-(`4esn` :#usn7).@usn5?,All(`4esn` In `6esn`['s_str'..][010..] Where \"d_str\" =~`6esn` =~0Xa).``!,(`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})-[`2esn`*..$usn1]->(:@usn5{_usn4:.12 Starts With 0Xa})<-[`4esn`? *00..]-(`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]}).usn1!;"),
    octest:ct_string("Remove [_usn3 Ends With 0x0 Ends With 01234567,9e0[$_usn3..0X7][7..$#usn8]].`6esn` Delete 999 Contains `7esn` Return Distinct *,12 Is Null Is Null As #usn7,$`7esn` Ends With $0 Ends With .e12 As `` Order By $0[01234567..00][$`2esn`..$@usn6] Desc,12.e12['s_str'] Desc,123456789 Starts With #usn7 Starts With `6esn` Asc Limit 999 In 9e1 In 7;"),
    octest:ct_string("Unwind $usn2[$123456789..123.654][$`5esn`..'s_str'] As #usn8 Union With Distinct 's_str'[.12..$#usn7][$999..`2esn`] As `5esn` Limit $_usn3[..Count ( * )][..@usn5] Where @usn5 Ends With $`3esn` Ends With 12e12 With  *,.e12 Starts With True As _usn4,$1000 In $`7esn` In $7 Skip [$1000 =~$`7esn`,.12 Starts With @usn5 Starts With $#usn8,0x0[...e12][..@usn5]] Ends With Single(@usn5 In .12[#usn7][$`8esn`]) Limit Extract(@usn5 In 0X7 =~.0 =~\"d_str\" Where $`4esn`[9e1..][0..]|$0 =~$usn1 =~9e1)[{``:\"d_str\",`1esn`:$1000 =~$`7esn`}] Union Merge `3esn`=((`2esn` :_usn4:usn1{`7esn`:7 In 0xabc})<-[:@usn5|`8esn` *0Xa{usn1:$1000 Contains $`3esn`}]->(`2esn` :``)-[usn2?]-(`2esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})) On Create Set `5esn` =999[.e12][01],Extract(usn1 In 0x0[..`4esn`] Where @usn6[$`3esn`]).#usn8? =`1esn` In 999 In $#usn7,usn1 =12.e12[0e0..7] On Match Set `1esn`+=Null[0e0][12],Filter(usn1 In 0x0[..`4esn`] Where $`` Ends With 12e12).usn1! =Extract(#usn8 In $`5esn` Is Null Is Null Where 's_str' Starts With 1000 Starts With #usn8|07)[None(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 12[..True][..$`4esn`])..usn2(Distinct $1000[01234567],00 In 0.12 In `5esn`)][`8esn`(00[``..][$`4esn`..],123.654[@usn5])..Extract(@usn5 In $#usn8 Is Null Is Null Where @usn5 Contains $`1esn` Contains 999)] Merge ({`3esn`:$`3esn` =~$`7esn` =~False,`4esn`:12 Ends With 01234567})-[#usn7:`1esn` *07..]->(:`7esn`{``:$`1esn` Starts With @usn6})<-[:#usn7|:_usn4 *0Xa]-(usn1 :_usn3{_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"}) On Match Set [`4esn` In `6esn`[1e1..] Where $`2esn`[..`2esn`]|`` Contains 12 Contains True].`2esn`? =$@usn6[..$#usn7][..12.e12],None(@usn5 In 0X7 =~.0 =~\"d_str\" Where #usn7 Starts With 0 Starts With 12).`8esn`! =12[..9e0][..999] Match `1esn`=(_usn3 :`4esn`:#usn8{`1esn`:07[1e1],`7esn`:12e12[$`5esn`][07]})<-[? *1000..{_usn4:$`6esn`[$`1esn`][1000],`2esn`:12e12[$`5esn`][07]}]->(:``{`2esn`:$7,usn1:.12 Contains $`4esn` Contains $`6esn`});"),
    octest:ct_string("Remove ({``:01234567 Ends With 0x0,`6esn`:0X7[0e0..]})-[:@usn5|`8esn` *0Xa{usn1:$1000 Contains $`3esn`}]->({`4esn`:#usn7 Starts With 0 Starts With 12,`4esn`:0x0 =~_usn4})<-[`8esn`?:``|:_usn4 *..01]-({`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null}).`5esn`!,`8esn`:_usn4:usn1 Merge ((({usn1:`2esn`[$`1esn`..][$_usn3..]})<-[``? *..0X7{_usn4:12 Ends With 01 Ends With 1e1}]-(usn2 :@usn6:`7esn`)<-[#usn7 *123456789..999]-(:`5esn`{`3esn`:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:0e0 =~_usn4}))) On Create Set `8esn` =``;"),
    octest:ct_string("Unwind [$12[01..][1.e1..]][[usn1 In 00 Starts With _usn3 Where 00]..@usn6(Distinct 0X0123456789ABCDEF[.e0..$`4esn`],$0 Ends With $#usn7 Ends With .12)] As `3esn` Union All Create #usn8=(((`8esn` :@usn5)<-[@usn5:#usn7|:_usn4]->(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})<-[`4esn`:``|:_usn4{`5esn`:0e0 =~_usn4}]-(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`}))) Unwind 07[..$_usn3] As #usn7 Unwind `3esn`(Distinct _usn4 Ends With 01 Ends With $`1esn`) Starts With [Count(*) In 01 In .0,`` Starts With 12,$_usn4[$`8esn`..][07..]] Starts With Extract(@usn5 In $#usn8 Is Null Is Null Where 12.e12 In $0 In Count(*)) As _usn3;"),
    octest:ct_string("With Distinct *,07[0..`4esn`],Filter(@usn6 In @usn5 In $`6esn` Where .12[`1esn`..][$`3esn`..]) Limit Any(#usn8 In $`5esn` Is Null Is Null Where 0.12 Contains $`2esn` Contains $_usn4)[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..Extract(`4esn` In `6esn`[1e1..])] Where @usn5[..True][..0X7] Union All Remove (:`5esn`{`7esn`:$`7esn` Ends With 07 Ends With 07,`5esn`:@usn5 Ends With $`3esn` Ends With 12e12})-[`5esn`?:`2esn`|usn2 *999..]->(`5esn` {`5esn`:$`5esn`[False]}).`8esn`,Any(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where usn2[$`1esn`...0]).`7esn` Remove {`8esn`:0X7 In 's_str' In $`1esn`}.usn1!;"),
    octest:ct_string("Merge _usn3=((#usn7 :``)<-[`8esn`:@usn5|`8esn` *123456789..999{`5esn`:0x0 Contains $`8esn` Contains `6esn`,#usn8:010 =~$usn2 =~1e1}]->(_usn4 {@usn5:$_usn3[$`4esn`..Null]})<-[? *12..0xabc]->(`5esn` :`6esn`:`7esn`{`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]})) On Create Set `6esn` =7[..0X7][..'s_str'],[$`5esn` Contains $@usn6].`1esn` =1e1[@usn5..],Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 07 In 0 In 's_str').@usn5? =True Is Not Null On Create Set usn2 =_usn3 Is Not Null Is Not Null,`4esn` =.e1 Starts With $`8esn`;"),
    octest:ct_string("Return {#usn8:0X0123456789ABCDEF[..usn1]} Ends With (:``{_usn3:0X0123456789ABCDEF In 01234567})<-[``? *..0X7{_usn4:12 Ends With 01 Ends With 1e1}]-(usn2 :@usn6:`7esn`)-[:usn2|#usn8*..]-(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12}) Ends With [1e1 In $#usn8 In 12e12,123.654 Contains #usn8] As #usn7,[@usn5 In $#usn8 Is Null Is Null Where 7 In 0xabc][[Null[01234567][01234567],07[1e1],Count(*)[12.e12..]]..#usn8($12 Contains 123.654 Contains `8esn`,0xabc Ends With $#usn7 Ends With #usn8)],False In `3esn` Order By 0x0[$`3esn`..010][$#usn7..00] Ascending,$@usn6 Contains 0 Contains $`2esn` Asc,0xabc Contains Null Contains 9e12 Asc Skip $`7esn` =~.e1 Limit (:`2esn`:`3esn`)-[{``:9e0 Is Not Null}]->({`2esn`:$`5esn` Is Null,@usn6:#usn7 Starts With `1esn`}) Merge (@usn6 )<-[? *12..0xabc]->(`5esn` :`6esn`:`7esn`{`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]})<-[``? *12..0xabc]-(`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1}) On Create Set `6esn`+={`2esn`:999 In $_usn4 In 0X7}[..{`7esn`:12e12 Ends With 010 Ends With .0}][..Filter(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $123456789[$`2esn`][True])],#usn8:`1esn`,[usn1 In 0x0[..`4esn`] Where True =~@usn5 =~$`1esn`|0.0[999..]].`4esn`! =$123456789 Contains 01 Contains 0.12 On Match Set #usn8+={`8esn`:9e1 In 01 In 999}[usn1(1e1[..#usn8][..'s_str'])..{#usn8:$999 Ends With $`3esn` Ends With `8esn`}],(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]})-[_usn4?:@usn6 *..7]->({usn1:usn1[$`3esn`..$999][True..False],`7esn`:_usn3 Ends With 12e12 Ends With .e0}).`3esn`! =07 In $7 In 12,[\"d_str\" =~`6esn` =~0Xa].`4esn`! =0.0 =~0X7 =~#usn7 Union With Distinct Extract(`4esn` In `6esn`['s_str'..][010..] Where $12 Is Null Is Null) Ends With `2esn`(`7esn`[Null..][@usn5..],123.654[12.e12..1e1]) Ends With Any(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 010[$@usn6]) As `7esn` Skip .e0[..0X0123456789ABCDEF][...e12] Limit $`4esn`[9e1..][0..] Where `1esn` In 999 In $#usn7 Remove [`4esn` In 's_str'[12..'s_str'] Where $`3esn`[@usn5..$123456789]|0.12[Null..]].`8esn`?,All(`4esn` In 's_str'[12..'s_str'] Where $`8esn`[..$``]).`7esn`!,Extract(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null).`1esn`!;"),
    octest:ct_string("Optional Match _usn4=(((#usn7 :#usn8{`2esn`:12 =~usn1 =~.e12})-[`8esn`?:#usn7|:_usn4{usn2:7[$`4esn`..123456789]}]->(#usn8 :usn2:@usn6{`5esn`:00 Ends With $_usn4 Ends With $`2esn`,usn2:#usn7 Starts With 0 Starts With 12})-[``? *12..0xabc]->({@usn6:9e0 Contains `8esn`}))),@usn6=((`2esn` :`8esn`{`2esn`:$`8esn` In \"d_str\" In 9e12})-[`5esn`:`8esn`|:usn1{usn1:12e12[Count ( * )..][usn2..],usn2:$123456789 Is Null Is Null}]->(@usn5 :#usn8{@usn5:$@usn5 Contains 01,`2esn`:@usn6[`3esn`..][$7..]})) Remove Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn8 In .e12 In 9e1).usn1!,[$123456789 Is Null Is Null,9e12[@usn6..$``][#usn8..Count ( * )]].`1esn`!,{#usn8:$#usn7[True..][$0..],`8esn`:123456789 Starts With `2esn` Starts With .0}.#usn8! Return *,1.e1[Null][12.e12] As ``,Filter(@usn6 In @usn5 In $`6esn` Where .12[`1esn`..][$`3esn`..]) As _usn3 Order By 0.e0[`6esn`...e0][9e12...e12] Descending,_usn3 In .e1 In $12 Asc Skip [$`4esn`[9e1..][0..]][Any(`4esn` In $`8esn` Starts With 1000 Where 0.e0[9e1..][0.0..])..Single(#usn8 In $`5esn` Is Null Is Null Where 1000 Ends With 1000 Ends With $`4esn`)] Limit 123456789 =~_usn4 =~$0 Union Create ((@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(:``{`2esn`:9e0[``][123.654],`1esn`:$_usn3[Null]})-[@usn6?:#usn7|:_usn4 *00..]->(`` :@usn5{#usn7:0X7[12]})) Return Distinct $@usn6 =~$#usn8 =~$#usn7 As `7esn`,12e12[0.e0..True][0.12..0.0] As #usn8 Order By @usn5 =~.0 =~$`1esn` Ascending With  *,[`4esn` In `6esn`['s_str'..][010..] Where $@usn5 In 12e12 In Count(*)|$1000[01234567]][Any(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7)..{usn1:usn1 Is Null Is Null,usn2:12.0[``]}][(_usn3 {`5esn`:0.12 Contains .e1})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`})..00] As `7esn` Order By 00 Is Null Is Null Descending,$usn2 Starts With $`6esn` Starts With 0xabc Ascending,123456789 Starts With #usn7 Starts With `6esn` Asc Skip Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`|999[$`6esn`]) =~Single(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn`) Limit 0x0 Contains _usn4 Contains 123456789 Union All Unwind Single(#usn8 In $`5esn` Is Null Is Null Where $123456789 Ends With $`6esn`) Is Null As `2esn` Return *,`4esn` Is Null Order By `5esn` In $999 Descending Limit `3esn` =~$`5esn` =~12;"),
    octest:ct_string("Unwind 9e1[$@usn6..] As usn2 With  (#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :usn2:@usn6)-[`1esn`:`8esn`|:usn1 *0xabc{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]-(@usn5 :#usn8{`1esn`:0xabc Ends With $7 Ends With $`2esn`,_usn4:``})[.._usn4(@usn6[`5esn`..$`3esn`],`8esn`[$``])] Order By [$12[01..][1.e1..]][[usn1 In 00 Starts With _usn3 Where 00]..@usn6(Distinct 0X0123456789ABCDEF[.e0..$`4esn`],$0 Ends With $#usn7 Ends With .12)] Desc,[@usn5 In $#usn8 Is Null Is Null Where 12.e12[@usn5..123.654]|#usn7 Starts With `1esn`][[@usn5 In .12[#usn7][$`8esn`] Where 0.12 In $`4esn` In `6esn`|$`1esn` Starts With @usn6]..][$`1esn`..] Ascending,{#usn8:$`5esn` In False,usn2:$`7esn` In $7} Is Not Null Is Not Null Asc Skip Null[0.e0..0x0];"),
    octest:ct_string("Optional Match usn1=((`4esn` :`5esn`{@usn6:$usn2 =~$#usn8,`8esn`:`6esn` =~$_usn3})-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`7esn` :_usn4:usn1)<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})),@usn5=(((@usn6 {#usn7:'s_str' In \"d_str\" In 123456789,usn2:07[12][$`6esn`]})-[#usn7?:@usn6 *00..]->(#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})<-[?:`7esn`|`2esn`{_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"}]->(usn1 :#usn8))) Where 7 Contains $`5esn` Contains $usn1 Unwind Extract(`6esn` In 0X7 =~`` Where 01234567 Ends With 0x0|$_usn4[`3esn`][0]) Is Null Is Null As ``;"),
    octest:ct_string("Remove Single(usn1 In 00 Starts With _usn3 Where 07 Contains #usn8 Contains $_usn3).`6esn`,Extract(`6esn` In 0X7 =~`` Where $`6esn`[..0X0123456789ABCDEF])._usn3? With  Single(usn1 In 0x0[..`4esn`] Where 1e1 In $#usn8 In 12e12) Is Not Null Is Not Null As `5esn`,`7esn` Contains .0 Contains 9e12 As usn2 Skip .12 Is Null Limit Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]) In All(@usn5 In .12[#usn7][$`8esn`] Where \"d_str\" =~`6esn` =~0Xa) In [123.654 Starts With usn1 Starts With @usn5] Where True =~@usn5 =~$`1esn` Create (usn2 {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})<-[:`5esn`|`1esn`{`4esn`:9e0[True..`1esn`],@usn6:7 =~9e0 =~'s_str'}]->(#usn7 {`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null}) Union All Remove Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0.12 In $`4esn` In `6esn`).@usn6! Return Distinct *,01234567[$@usn6..0X7][$`1esn`..123.654],_usn3(Distinct 0.12 In 01 In $`3esn`,1.e1[0X0123456789ABCDEF..][$`5esn`..]) Ends With Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) Ends With Filter(usn2 In 1000 Contains 0.e0 Where 12e12 Ends With 010 Ends With .0) As #usn8 Skip .e0[..0X0123456789ABCDEF][...e12] Detach Delete 12.e12 Contains $`5esn`,$usn1 In 1000 In $#usn7,12.0;"),
    octest:ct_string("Create (`8esn` :_usn3{`8esn`:$`3esn` In $12 In 's_str'}) Unwind 0 Is Null Is Null As @usn5;"),
    octest:ct_string("Merge `3esn`=(((:_usn4:usn1{usn2:$`5esn` In False})<-[?:@usn5|`8esn` *..0X7]->(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12})-[:``|:_usn4 *01234567..12{`2esn`:$`` Is Null Is Null,``:$`4esn`[usn1..$#usn8][12.0..`3esn`]}]->(#usn7 {@usn5:`5esn`[.e1][0Xa],@usn6:Count(*)[`7esn`..$12]}))) On Create Set [`6esn` In 0X7 =~``|$#usn7[...e12][..$7]].`1esn` =9e12 =~01 =~$`7esn` On Create Set [@usn6 In @usn5 In $`6esn` Where False Contains `3esn`].`6esn` =[#usn7 In 01234567[$`3esn`..] Where `7esn` Starts With $`` Starts With $#usn7|07 In 0 In 's_str'][Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 12.0[..$7][..999])..][[@usn5 In .12[#usn7][$`8esn`] Where $0[7..][Null..]|$@usn5 Contains 01]..],`8esn` =[`6esn` In 0X7 =~`` Where 12.e12['s_str']|00[7..$123456789]][All(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6)..][Extract(`4esn` In $`8esn` Starts With 1000 Where 1.e1[0X0123456789ABCDEF..][$`5esn`..]|9e1[...e0])..],($999)<-[ *00..{@usn5:$`5esn` Is Null Is Null}]->(@usn5 {`1esn`:0[usn2..]})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`1esn` :usn2:@usn6).`4esn` =`3esn` =~0.0 =~$`` Remove [@usn5 In $#usn8 Is Null Is Null Where $#usn8 Is Null|123.654[@usn5]].`6esn`! Remove Filter(@usn5 In $#usn8 Is Null Is Null Where $@usn5 =~$`` =~$usn2).`7esn`,Filter(_usn4 In usn1 Contains False Contains `` Where _usn4[$`4esn`..]).#usn8?,[\"d_str\" =~`3esn` =~0Xa,$123456789[..0.12][..#usn7]].usn2! Union All Optional Match (`` :#usn7)<-[?:`4esn`|:`7esn` *..0X7]-(:`3esn`:`1esn`{`1esn`:0.0[1000..][.e1..]})<-[`5esn`?:`6esn`]->(`6esn` :`6esn`:`7esn`{_usn4:\"d_str\"}),`4esn`=(((`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})-[?{`4esn`:0.e0 Ends With 12 Ends With $7,@usn6:$``[_usn4..][`7esn`..]}]->(#usn7 {@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]})<-[@usn5? *1000..]->(:@usn6:`7esn`{_usn3:False[`2esn`..#usn8]}))) Remove Any(`6esn` In 0X7 =~`` Where 01234567 Ends With 0x0).usn1?,({``:01234567 Ends With 0x0,`6esn`:0X7[0e0..]})-[:@usn5|`8esn` *0Xa{usn1:$1000 Contains $`3esn`}]->({`4esn`:#usn7 Starts With 0 Starts With 12,`4esn`:0x0 =~_usn4})<-[`8esn`?:``|:_usn4 *..01]-({`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null}).`5esn`! Optional Match (((usn2 :#usn8{_usn3:$_usn3[..Count ( * )][..@usn5]})-[`1esn`:`1esn`{``:_usn3[...e1],`2esn`:.12[`1esn`..][$`3esn`..]}]-(`7esn` :_usn4:usn1)<-[@usn5:#usn8{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]-(#usn8 :_usn3))),((:`8esn`{`7esn`:@usn6 Contains _usn4 Contains $`4esn`})<-[`2esn`:@usn5|`8esn`]->(`2esn` :`5esn`{`4esn`:$usn1[_usn4..][usn2..],`3esn`:999 In $_usn4 In 0X7})) Where .e1 Starts With 0.0 Starts With `6esn` Union With Distinct 07[07] Skip 123.654 Contains `2esn` Limit `8esn` In $@usn5 Where 07[$`5esn`..]['s_str'..] Create ((`5esn` {_usn4:0X7 =~``})<-[`2esn`?:usn2|#usn8{`6esn`:0X7[.e12..01234567],@usn6:`7esn`[...e1][..\"d_str\"]}]->(`5esn` :`8esn`{#usn8:0.12 Contains $`2esn` Contains $_usn4,`2esn`:$`5esn` Starts With _usn3 Starts With @usn5})-[`8esn` *..0x0]-(:`2esn`:`3esn`{usn2:$`5esn` In False})),`8esn`=((`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`3esn`?:_usn3|:`4esn`]-(`4esn` {`6esn`:$12[..``][..$7]})) Unwind 0.0[999..] As usn1;"),
    octest:ct_string("Optional Match ``=((_usn4 )-[#usn7:_usn3|:`4esn` *..0x0{usn2:$#usn7 In 12.0 In 0X0123456789ABCDEF,`6esn`:`7esn`[1e1..07][0x0..Count ( * )]}]->(`6esn` {`2esn`:$`2esn`[..`2esn`],usn1:False[0Xa..$@usn5][$`6esn`..12e12]})) Where 123456789 =~_usn4 =~$0 Union Unwind 1000 Contains 0.e0 As #usn8;"),
    octest:ct_string("Remove All(@usn5 In $#usn8 Is Null Is Null Where 7 In 0xabc).#usn7?,({_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`})-[`2esn`? *0..010]->(usn2 {usn1:0 Is Null Is Null,`8esn`:12.0[..$7][..999]})<-[#usn8:`3esn`|:`4esn` *0..010]->(`3esn` :usn2:@usn6).`4esn`! Merge `4esn`=(_usn4 :#usn8)-[`1esn`?:`1esn` *01234567..12]-({_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}) On Create Set ``+={usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null} Is Not Null Is Not Null,@usn5+=usn1[..@usn5][...e0],`2esn`+=All(#usn7 In 01234567[$`3esn`..] Where 12[usn1][True])[..[`4esn` In `6esn`[1e1..] Where $`2esn`[..`2esn`]|_usn3 In .e1 In $12]][..{`2esn`:$usn1[1e1.._usn3][$@usn6..$#usn7]}] On Create Set _usn4 =All(@usn5 In .12[#usn7][$`8esn`] Where 0Xa Is Null Is Null)[[usn1 In 00 Starts With _usn3 Where 010 =~$usn2 =~1e1]],#usn7 =_usn3(Distinct 0.12 In 01 In $`3esn`,1.e1[0X0123456789ABCDEF..][$`5esn`..]) Ends With Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) Ends With Filter(usn2 In 1000 Contains 0.e0 Where 12e12 Ends With 010 Ends With .0) Return Distinct All(usn1 In 0x0[..`4esn`] Where .12 Starts With .12 Starts With `3esn`)[[_usn4 In usn1 Contains False Contains `` Where $usn1[0.12..]['s_str'..]|12[..True][..$`4esn`]]..][({`5esn`:0.12 Contains .e1})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:@usn5{#usn7:1e1[@usn5..]})<-[?:`6esn` *01234567..12{`7esn`:7 In 0xabc}]-(#usn7 :usn2:@usn6{`1esn`:$usn2 Contains 12.e12 Contains 00})..] As #usn8,'s_str' In \"d_str\" In 123456789,None(`4esn` In 's_str'[12..'s_str'] Where 12.0[0Xa][00]) Is Not Null Union All With  *,07[0..`4esn`] Order By 12.e12[$`7esn`] Desc,Single(@usn5 In .12[#usn7][$`8esn`] Where `6esn` =~$_usn3) Ends With {`2esn`:.12 Ends With `1esn` Ends With $`1esn`,`5esn`:9e12[@usn6..$``][#usn8..Count ( * )]} Ends With (:_usn3{`2esn`:$`5esn` Is Null,@usn6:#usn7 Starts With `1esn`})<-[``?:@usn6]-(:`2esn`:`3esn`{`6esn`:01 In _usn3 In 12,_usn3:$`3esn` =~$`6esn` =~`8esn`})<-[:_usn4|:@usn5 *..0X7]->(`4esn` {`7esn`:.e0[..999][..0X7]}) Descending Where @usn6 Starts With `7esn` Starts With Null Remove [$`2esn` =~'s_str',12 Ends With 01234567,$1000 Is Null Is Null].`3esn`?,[12.e12[...0][..0x0]]._usn4,(`1esn` :`8esn`)<-[#usn7:`3esn`|:`4esn` *00..]->(`4esn` :`8esn`)-[`4esn`? *0Xa]-(`7esn` :`2esn`:`3esn`{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}).`3esn`? With Distinct $@usn6 Starts With usn2 Starts With usn2,@usn6[$`7esn`],$`4esn`[9e1..][0..] Limit [$`1esn` Is Null Is Null,$12 Contains 123.654 Contains `8esn`] Starts With {`7esn`:Count(*) In 01 In .0,`6esn`:$123456789[..0.12][..#usn7]} Starts With Filter(usn1 In $123456789 Contains usn2 Where 01234567[.12..7][1000..1.e1]) Where `` Starts With @usn5 Union All Delete Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`|999[$`6esn`]) =~Single(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn`);"),
    octest:ct_string("Create (({``:12 Is Null Is Null})<-[usn2:`8esn`|:usn1*..{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]->({#usn7:False[`2esn`..#usn8]})-[`5esn`:#usn8*]->({_usn3:12.e12 In $0 In Count(*)})),#usn7=((`1esn` {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})<-[:_usn3|:`4esn`{_usn4:$`3esn` =~$`6esn` =~`8esn`,`5esn`:0X7[0e0..]}]-(:`8esn`)<-[:#usn7|:_usn4 *0Xa]-(usn1 :_usn3{_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"})) Remove (`2esn` :`6esn`:`7esn`{`6esn`:$#usn8 Ends With 1000 Ends With .0,`7esn`:010 =~`6esn`})-[:`2esn`|usn2 *999..{#usn8:`5esn` =~0Xa,usn1:12 =~usn1 =~.e12}]-(`4esn` :#usn7).@usn5?,All(`4esn` In `6esn`['s_str'..][010..] Where \"d_str\" =~`6esn` =~0Xa).``!,(`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})-[`2esn`*..$usn1]->(:@usn5{_usn4:.12 Starts With 0Xa})<-[`4esn`? *00..]-(`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]}).usn1! With Distinct `2esn` Contains $999 As #usn7,$123456789[False.._usn3] As `1esn` Order By (usn2 :`7esn`{@usn5:usn1[$`3esn`..$999][True..False],`8esn`:$`5esn` Is Null Is Null})-[`5esn`?:_usn4|:@usn5]-(usn1 :`7esn`)<-[`` *12..0xabc]->(:``{_usn3:Count(*)['s_str'..`1esn`],`1esn`:$`6esn`[$`1esn`][1000]}) Ends With [$`8esn` =~$usn2,0X0123456789ABCDEF[..usn1],`` In `6esn`] Descending Skip 0X7[..12e12] Union All With Distinct 010 Starts With `7esn` Starts With 9e1,False[.e1..Null] As `2esn` Order By {`7esn`:Count(*) In 01 In .0,`6esn`:$123456789[..0.12][..#usn7]} Ends With (usn1 :_usn3)<-[`5esn`:@usn6]-(:``{_usn3:0X0123456789ABCDEF In 01234567})-[ *..0x0]->(:`7esn`{@usn6:0.0[999..],#usn8:Null Is Null Is Null}) Asc Skip [@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7|`6esn`[1.e1..$#usn7][.e0..True]][..Extract(#usn8 In $`5esn` Is Null Is Null Where #usn8[$#usn8..]|$@usn6[..$usn1])][..(:`4esn`:#usn8{#usn8:07})-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]-(@usn5 :`3esn`:`1esn`{`3esn`:$`5esn` Is Not Null,`2esn`:9e1[0.e0..][#usn8..]})-[``:`2esn`|usn2{_usn4:0X0123456789ABCDEF Ends With 0X0123456789ABCDEF Ends With 's_str',`3esn`:'s_str' In \"d_str\" In 123456789}]-(:``{`2esn`:9e0[``][123.654],`1esn`:$_usn3[Null]})] Where .e12[..0.e0][..$`1esn`] Union Unwind 07[..010][..12.0] As `3esn` Return Any(`6esn` In 0X7 =~`` Where $`5esn` In `2esn` In $12)[Extract(`4esn` In 's_str'[12..'s_str'] Where .12[9e0][$7]|$`3esn` Starts With $usn1)..[@usn5 In .12[#usn7][$`8esn`] Where $12 Contains 123.654 Contains `8esn`|@usn5 Ends With 1.e1 Ends With 0X0123456789ABCDEF]][{`6esn`:$12[..``][..$7]}..[usn1 In 1000 In $`5esn`]] As usn1,@usn5[_usn4..][.e0..] As usn1 Limit $`1esn` Is Null;"),
    octest:ct_string("Unwind 0.0[1000..][.e1..] As usn1;"),
    octest:ct_string("Return *,(@usn6 {_usn4:$_usn4[#usn8..]})<-[#usn8?:`6esn` *0..010]-(`` :@usn5)[Extract(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6|#usn7 Is Not Null Is Not Null)..] Skip $`7esn` Ends With 07 Ends With 07 Optional Match _usn3=(($999)),``=(({`8esn`:0X7 In 's_str' In $`1esn`})<-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]->(`1esn` :`1esn`)) Where 9e0[True..`1esn`] Create ((`7esn` :`2esn`:`3esn`{@usn6:9e0 Ends With $`7esn`})),`6esn`=((`3esn` {`8esn`:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`1esn`?:`1esn` *01234567..12]->(`8esn` {`6esn`:00 In 12.e12})-[`6esn`? *01234567..12{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]-(@usn5 {usn2:$999[12.0..]})) Union Unwind 0X0123456789ABCDEF Contains 12.e12 Contains 999 As _usn4 With  *,#usn7 Starts With .e12 Starts With $`7esn` As usn2,{`4esn`:$usn1[0.12..]['s_str'..]} In None(`4esn` In $`8esn` Starts With 1000 Where 0.12 In 01 In $`3esn`) In usn2(True Contains @usn6) As @usn5 Limit Extract(`4esn` In 's_str'[12..'s_str'] Where 00 Starts With _usn3|$`1esn` Is Null Is Null) Is Null Is Null Union Return *,0.12[Count(*)..],$@usn5 =~$`` =~$usn2 As #usn8 Order By Single(#usn8 In $`5esn` Is Null Is Null Where $123456789 Ends With $`6esn`) Is Null Desc Skip Single(`4esn` In 's_str'[12..'s_str'] Where .12[9e0][$7])[None(`4esn` In 's_str'[12..'s_str'] Where $`3esn`[@usn5..$123456789])..@usn6(Distinct True =~@usn5 =~$`1esn`,.12 Starts With $usn2)];"),
    octest:ct_string("Unwind `6esn`[..`5esn`] As #usn8 With  *,$`1esn` Ends With _usn4 Ends With `3esn` As `7esn`,({usn1:`4esn` In $12 In `8esn`})-[`4esn`]-(`1esn` {usn1:True[Count(*)..][1e1..],usn1:9e1 Is Null Is Null})<-[?{`5esn`:0x0 Contains $`8esn` Contains `6esn`,#usn8:010 =~$usn2 =~1e1}]->({`6esn`:$`5esn` Is Null,`2esn`:`7esn` Starts With $usn2 Starts With .e0})[[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 0e0 =~_usn4|0x0 Contains _usn4 Contains 123456789]..[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 7 In $`3esn` In #usn7]][usn1($`1esn` Is Null Is Null,$0[0X0123456789ABCDEF..$#usn7])..[usn1 In 00 Starts With _usn3 Where .12[9e0][$7]|07]] As @usn6 Order By $999 Ends With $`3esn` Ends With `8esn` Asc Skip $0[..07] Where $@usn5 In 12e12 In Count(*) Union Unwind $@usn5[Count ( * )] As #usn7 Detach Delete 999 In 12 In \"d_str\",$`5esn` Contains Count(*) Contains #usn7 Union All Create (`8esn` :`1esn`);"),
    octest:ct_string("Optional Match ``=({`7esn`:`6esn` Starts With $@usn6,``:`6esn` =~$_usn3})-[? *12..0xabc]-(:`6esn`:`7esn`{`6esn`:_usn4 Ends With 01 Ends With $`1esn`,`4esn`:$`8esn` In \"d_str\" In 9e12})<-[ *0xabc]-(_usn4 {`1esn`:010[@usn5..]}),#usn7=(:#usn7{#usn8:0.12 Contains $`2esn` Contains $_usn4,`2esn`:$`5esn` Starts With _usn3 Starts With @usn5})<-[:@usn5|`8esn`*..]-(`2esn` :usn1{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})-[?:usn1|`3esn` *999..{_usn4:$999[12.0..],usn1:0[usn2..]}]->(:usn2:@usn6{@usn5:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:.12 Ends With $`4esn` Ends With Count(*)}) Detach Delete $@usn6[..$usn1],`` =~12 =~$#usn7,`3esn` Is Not Null Is Not Null Union Unwind $@usn6 In usn2 In 123456789 As @usn6 Remove [.12 Starts With 0Xa].`4esn`! Unwind 9e0[$_usn3..0X7][7..$#usn8] As @usn6 Union Return *,1.e1[Null][12.e12] As ``,Extract(usn1 In 0x0[..`4esn`] Where \"d_str\" Contains `3esn` Contains 00|Count(*) Ends With 010)[All(usn2 In 1000 Contains 0.e0 Where #usn8 Ends With `4esn` Ends With $`4esn`)..@usn6(Distinct _usn3 In .e1 In $12,123.654 Starts With usn1 Starts With @usn5)][All(usn2 In 1000 Contains 0.e0 Where 0.0[1000..][.e1..])..{`7esn`:`2esn`[$`1esn`..][$_usn3..]}] Limit 7[..12e12][..$`6esn`] Unwind 07[..010][..12.0] As `2esn`;"),
    octest:ct_string("With  010[@usn5..],0x0 =~_usn4 As `8esn` Limit `8esn` Ends With 0X0123456789ABCDEF Ends With `1esn` Where 010[$@usn6] Merge `1esn`=(((`2esn` :_usn3{`5esn`:12.e12[$1000..],`4esn`:'s_str'[..0.0][..$`4esn`]})<-[_usn3?:``|:_usn4 *0xabc{`6esn`:$#usn8 Ends With 1000 Ends With .0,`7esn`:010 =~`6esn`}]-(:usn1{#usn7:12[0X7..@usn6]})-[usn1?:`1esn` *0X0123456789ABCDEF..{usn2:$`4esn`[12.e12..][0.0..]}]-(:`6esn`:`7esn`{usn2:_usn3 Contains @usn6 Contains 1.e1,usn2:$`6esn`[`1esn`..][.e0..]}))) On Match Set [#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|$`7esn` Is Not Null].@usn6! =999[$`6esn`],#usn8+=$@usn6 In usn2 In 123456789,_usn3 =$`4esn`[12.e12..][0.0..] Optional Match ((@usn6 :#usn7{@usn5:Null Is Null Is Null})),_usn4=(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa}) Where 0x0 Starts With $`7esn` Starts With `2esn` Union All Detach Delete usn2 Ends With $`5esn` Ends With `2esn`,$123456789 Is Null Is Null,Extract(@usn6 In @usn5 In $`6esn` Where 123456789 =~_usn4 =~$0) Is Null Unwind 0x0[$`3esn`] As _usn4 Union All Merge (#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]})<-[:`6esn` *..0X7{`3esn`:`1esn` Contains Count ( * ),`7esn`:01234567 =~usn1}]-(:@usn5{`8esn`:$`3esn`[@usn5..$123456789],@usn5:\"d_str\" Starts With $usn1})-[?:#usn7|:_usn4]->(`` :#usn7$0);"),
    octest:ct_string("Delete 0x0[0.0][$_usn4] Unwind 0xabc[$@usn5] As usn2 Union Return Distinct *,$@usn6[..$usn1] As _usn3 Order By {``:12e12[$`5esn`][07],_usn3:$`6esn` Is Null Is Null} Ends With [0 Is Not Null Is Not Null] Descending,Extract(@usn6 In @usn5 In $`6esn` Where 123456789 =~_usn4 =~$0) Is Null Desc,.12 Ends With `1esn` Ends With $`1esn` Asc Limit `7esn` Starts With $`` Starts With $#usn7 Create (`8esn` :`1esn`) Merge `7esn`=(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})-[?:#usn7|:_usn4]->(`` :#usn7$0)-[`2esn` *0X0123456789ABCDEF..{usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3}]->(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]}) On Match Set #usn7+=$@usn5[01],usn1 =Extract(usn1 In 00 Starts With _usn3 Where `2esn` Is Not Null Is Not Null) Starts With [01234567 Ends With 12.0 Ends With 0X7,999[$`6esn`],`` Starts With @usn5] Starts With (`1esn` {`4esn`:$`7esn`[$usn1..][0.0..],`1esn`:$123456789[..0x0][..`4esn`]})<-[:`6esn`]->(@usn5 :@usn6:`7esn`{`6esn`:$0[01234567..00][$`2esn`..$@usn6],`3esn`:`6esn` Starts With $@usn6})<-[@usn6?:@usn5|`8esn` *..01{_usn4:07 Ends With 07,`8esn`:`6esn`[1.e1..$#usn7][.e0..True]}]-(usn2 :`3esn`:`1esn`),#usn7+=0X0123456789ABCDEF[.e0..$`4esn`] On Match Set [`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With $usn1|`6esn` Starts With $usn2 Starts With 0.0].#usn8? =`2esn` Starts With $_usn3 Starts With `2esn`,`8esn`+=$`7esn` =~.e1;"),
    octest:ct_string("Merge `1esn`=(#usn7 {@usn5:`5esn`[.e1][0Xa],@usn6:Count(*)[`7esn`..$12]})-[? *999..]-(`` :`1esn`) On Create Set usn2 =0.0[..12e12][..$0] Unwind 123.654[@usn5] As _usn3 Optional Match `7esn`=((({@usn6:0.12 In $`4esn` In `6esn`,``:1e1 Is Null})<-[`7esn`?:`8esn`|:usn1]-(`7esn` :#usn8)-[@usn5?:`3esn`|:`4esn`{`7esn`:Count(*) In 01 In .0,`6esn`:$123456789[..0.12][..#usn7]}]->(`5esn` :`8esn`))),`5esn`=((:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[`6esn`:``|:_usn4 *..01]->(`5esn` {_usn4:0X7 =~``})-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(usn2 :usn1{``:9e12 Ends With 0X0123456789ABCDEF Ends With #usn7})) Where $`8esn`[..$usn1][..'s_str'] Union Return Distinct None(`4esn` In 's_str'[12..'s_str'])[Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`)..][Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where $@usn6 Contains Count ( * ))..] Create `2esn`=(:`1esn`)<-[`2esn`?:usn2|#usn8{`6esn`:0X7[.e12..01234567],@usn6:`7esn`[...e1][..\"d_str\"]}]->(`5esn` :`8esn`{#usn8:0.12 Contains $`2esn` Contains $_usn4,`2esn`:$`5esn` Starts With _usn3 Starts With @usn5})<-[`4esn`? *00..]-(`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]});"),
    octest:ct_string("Create `2esn`=(:_usn4:usn1)-[#usn7?:_usn4|:@usn5{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]->(:`2esn`:`3esn`)<-[``]-(usn1 {#usn7:.e12[..0.e0][..$`1esn`],usn1:010 Contains Count(*)}),(#usn7 :@usn5)<-[@usn5*]->({``:$1000 Is Null Is Null})-[?:@usn6 *..7{#usn8:'s_str'[.12..$#usn7][$999..`2esn`]}]->(`7esn` :`2esn`:`3esn`) Merge `4esn`=({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(`4esn` :`6esn`:`7esn`{`8esn`:0X7[..12e12]})-[?:@usn6{`8esn`:12 Ends With .e12 Ends With $7,`8esn`:0.0[12...12]}]-(`3esn` :``) Union All Remove [Null Contains _usn4].`8esn`!,Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where usn2[`3esn`][_usn3]).`7esn`?,{#usn7:False[.e1..Null],`1esn`:9e0 Is Null Is Null}.@usn5!;"),
    octest:ct_string("Create `6esn`=((_usn4 :@usn6:`7esn`)-[:usn2|#usn8*..]-(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12})) Return Distinct .12[#usn7][$`8esn`],12 Ends With 07 Ends With @usn6 As usn1 Order By $999[..`1esn`] Ascending,Single(`6esn` In 0X7 =~`` Where 0.12[Null..]) Contains (@usn5 :`2esn`:`3esn`{`1esn`:$`8esn`[..$usn1][..'s_str']})<-[usn2:@usn6{`7esn`:123456789[`4esn`..][Count ( * )..],`4esn`:010[$`8esn`..][0..]}]-(_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8}) Contains All(@usn6 In @usn5 In $`6esn` Where $usn2 Is Not Null) Descending,[$`8esn` =~$usn2][Any(`6esn` In 0X7 =~`` Where $0 Is Not Null)..] Asc Remove ({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})-[`5esn`? *010]-({@usn6:0.12 In $`4esn` In `6esn`,``:1e1 Is Null}).`7esn`! Union All Remove ``:#usn7 Union All Remove ({`5esn`:0.12 Contains .e1})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:@usn5{#usn7:1e1[@usn5..]})<-[?:`6esn` *01234567..12{`7esn`:7 In 0xabc}]-(#usn7 :usn2:@usn6{`1esn`:$usn2 Contains 12.e12 Contains 00}).@usn6?;"),
    octest:ct_string("Delete `6esn`[False..0.0][12e12..$usn2];"),
    octest:ct_string("Match usn2=((:_usn4:usn1{`1esn`:123456789 Starts With `2esn` Starts With .0,@usn6:12.e12 Contains `5esn`})),((`4esn` :`2esn`:`3esn`{`1esn`:123456789[1000]})<-[?{`8esn`:_usn3 Ends With 0x0 Ends With 01234567,#usn8:$`7esn` Is Null Is Null}]->(:``{#usn8:$`2esn`[..`2esn`]})<-[@usn5:#usn7|:_usn4]->({usn1:usn1[$`3esn`..$999][True..False],`7esn`:_usn3 Ends With 12e12 Ends With .e0})) Remove {`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}.@usn5? Union All Remove Single(usn2 In 1000 Contains 0.e0 Where #usn7 Ends With 9e1).`7esn`?,Extract(`4esn` In 's_str'[12..'s_str'] Where Null Contains _usn4).`4esn`! Create `4esn`=(:`5esn`{`7esn`:$`7esn` Ends With 07 Ends With 07,`5esn`:@usn5 Ends With $`3esn` Ends With 12e12})<-[`1esn`?:`1esn` *01234567..12]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})<-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(_usn4 ),(:#usn7) With Distinct *,07[0..`4esn`] Order By Single(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $123456789 Ends With $`6esn`)[Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn7 In .e1 In 01)..][{`1esn`:@usn6[`5esn`..$`3esn`],_usn3:$999 Ends With $`3esn` Ends With `8esn`}..] Asc,$999[12.0..] Asc,All(`4esn` In $`8esn` Starts With 1000 Where 0X0123456789ABCDEF[.e0..$`4esn`])[(#usn8 :@usn6:`7esn`{``:9e1 Is Not Null Is Not Null})-[`1esn`{_usn4:`3esn` Contains 0Xa}]->(#usn7 :usn2:@usn6{`1esn`:$usn2 Contains 12.e12 Contains 00})-[`8esn` *..0x0]-(:`2esn`:`3esn`{usn2:$`5esn` In False})..#usn7(Distinct False Contains `3esn`,12e12[_usn3..][$@usn5..])] Asc Skip $1000 In $`7esn` In $7 Union Detach Delete $`7esn` In $7 Unwind 0x0[$`3esn`] As _usn4;"),
    octest:ct_string("Remove [usn1 In 00 Starts With _usn3 Where 010 =~$usn2 =~1e1|9e1 Starts With `1esn` Starts With 0Xa].usn2?,Count ( * ).@usn5? Union All Delete $123456789[$`2esn`][True],_usn4 Ends With 01 Ends With $`1esn` Unwind usn2[$`7esn`..010][00..``] As `5esn` Unwind $`6esn` =~1e1 As @usn6;"),
    octest:ct_string("Merge @usn6=({`3esn`:$`3esn` =~$`7esn` =~False,`4esn`:12 Ends With 01234567})-[#usn7:`1esn` *07..]->(:`7esn`{``:$`1esn` Starts With @usn6})<-[:#usn7|:_usn4 *0Xa]-(usn1 :_usn3{_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"}) On Match Set `7esn`+=9e0[``][123.654] Union With  Filter(`4esn` In `6esn`['s_str'..][010..] Where 9e0 =~$`5esn`)[[1e1[0.0],0 Contains 12e12,$123456789[..0x0][..`4esn`]]] As `3esn`,False[`2esn`..#usn8],00 Is Null Is Null Order By {`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]}[({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})-[? *999..]-({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`8esn` :`7esn`)][{@usn5:`` In `6esn`,`1esn`:$`2esn`[$`2esn`..]}] Asc,0.12 In $7 In 0 Desc Skip 9e12[0.0..12.e12] Limit $usn1[.e12..`8esn`][True..$@usn5] Return Distinct *,None(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0.12 In $`4esn` In `6esn`) Is Null As @usn6,123456789 =~_usn4 =~$0 As usn1 Delete All(#usn7 In 01234567[$`3esn`..] Where 12[usn1][True])[..[`4esn` In `6esn`[1e1..] Where $`2esn`[..`2esn`]|_usn3 In .e1 In $12]][..{`2esn`:$usn1[1e1.._usn3][$@usn6..$#usn7]}],0.0[12...12];"),
    octest:ct_string("Delete Extract(`6esn` In 0X7 =~``|9e0 In 01234567) Contains Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]),None(`4esn` In 's_str'[12..'s_str'] Where $`3esn`[@usn5..$123456789])[(`` {`8esn`:0X7 In $@usn5 In 9e0,_usn3:@usn6[$`3esn`]})-[usn1{#usn7:7 Contains 9e1,`5esn`:$`` Ends With 12e12}]->(:#usn7{`7esn`:\"d_str\",usn2:True[`4esn`][$`6esn`]})..0e0][{`1esn`:$@usn6 Contains 07 Contains 0.e0}..{`3esn`:0.12 In $7 In 0,_usn3:07[$999]}] Detach Delete $@usn5[#usn8..][$`1esn`..],Count ( * ) =~All(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7),#usn8 In $0;"),
    octest:ct_string("With Distinct *,{`4esn`:$@usn6 Contains 0 Contains $`2esn`}[[@usn5 In 0X7 =~.0 =~\"d_str\"|$`1esn` Ends With _usn4 Ends With `3esn`]..Extract(@usn5 In .12[#usn7][$`8esn`] Where $usn2 Contains 12.e12 Contains 00|9e0 Ends With $`7esn`)] Limit [@usn5 In 0X0123456789ABCDEF,False[0Xa..$@usn5][$`6esn`..12e12]] =~({@usn6:0X0123456789ABCDEF[..usn1]})<-[`4esn`:#usn8]-(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa})-[{`2esn`:\"d_str\" =~`3esn` =~0Xa,_usn4:usn1 Is Null Is Null}]->(#usn8 :`7esn`) =~123456789 Remove `7esn`(Distinct 010 Is Null Is Null,$`8esn`[..$``]).@usn5,{#usn7:0Xa Is Not Null Is Not Null,#usn7:.0[$`6esn`..False]}.`4esn`?,[usn1[..@usn5][...e0],$`8esn`[``..][123.654..]].`` Match `2esn`=({``:.e12[..0.e0][..$`1esn`]})-[_usn3:#usn8]-(usn1 :#usn7) Union All Return Distinct *,({@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]})-[`6esn`?:`4esn`|:`7esn` *0..010{_usn3:$`1esn` Starts With @usn6}]-(`2esn` {#usn8:12.e12[0e0..7]}) Order By [0 Is Null Is Null][..[_usn3 =~00,9e1 Is Null Is Null]] Descending,Single(`4esn` In `6esn`['s_str'..][010..] Where 12.0 Contains 0.e0)[..Any(`4esn` In 's_str'[12..'s_str'] Where Count(*)[`7esn`..$12])][..Extract(@usn5 In .12[#usn7][$`8esn`] Where 01234567 =~usn1)] Ascending,`8esn` In $@usn5 Asc Limit $#usn8 Is Null Match #usn8=(((`8esn` :@usn5)<-[@usn5:#usn7|:_usn4]->(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})<-[`4esn`:``|:_usn4{`5esn`:0e0 =~_usn4}]-(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`}))) Union Return Distinct (_usn3 :`6esn`:`7esn`{usn1:$_usn3[9e1][$_usn4],`8esn`:123456789 =~_usn4 =~$0})<-[#usn8? *12..0xabc]-(:`6esn`:`7esn`{`3esn`:`8esn`[$``]})-[:`6esn`{@usn6:$0 =~$0 =~.e0}]-({`1esn`:@usn6}) In _usn3(0x0[0X7..][usn1..]) In None(#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str') As _usn4 Order By [#usn8 Ends With `4esn` Ends With $`4esn`,$`2esn` =~'s_str',$#usn7[...e12][..$7]][#usn7(0x0 =~_usn4,`5esn` =~0Xa)][{#usn8:$999 Ends With $`3esn` Ends With `8esn`}] Descending Skip 07[12][$`6esn`] Remove ({usn2:00,#usn8:usn2 Ends With $`5esn` Ends With `2esn`})-[#usn8?]-(`2esn` :`5esn`{`4esn`:$usn1[_usn4..][usn2..],`3esn`:999 In $_usn4 In 0X7}).@usn6?,{`3esn`:`4esn`[7..][1000..],usn2:123456789 Starts With `2esn` Starts With 9e12}.`8esn`!,@usn6(Distinct 0X0123456789ABCDEF[.e0..$`4esn`],$0 Ends With $#usn7 Ends With .12).`5esn`! Create ((`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})),#usn7=((#usn7 :`5esn`)<-[:`2esn`|usn2 *07..]-({`7esn`:`6esn` Starts With $@usn6,``:`6esn` =~$_usn3})<-[`1esn`?:`1esn` *01234567..12]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4}));"),
    octest:ct_string("Remove [#usn7 In 01234567[$`3esn`..] Where .12 Starts With @usn5 Starts With $#usn8|$`6esn`[$`1esn`][1000]].@usn6?,usn2($#usn8 Is Null Is Null)._usn4 Union All With  *,123.654 Is Not Null Is Not Null Order By $123456789[$``][010] Desc,#usn8 Is Not Null Asc,$@usn5 Ends With 0X0123456789ABCDEF Desc Skip @usn6 Contains _usn4 Contains $`4esn` Where usn1[..@usn5][...e0];"),
    octest:ct_string("Remove {``:9e1 Starts With _usn3 Starts With `4esn`}.`8esn`? Unwind False[.e1..Null] As `5esn` Create (:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[:#usn7|:_usn4{_usn3:\"d_str\" =~`3esn` =~0Xa}]-(#usn7 {`3esn`:Count(*)[12.e12..],`3esn`:usn2 =~0x0});"),
    octest:ct_string("Remove `7esn`:`4esn`:#usn8,@usn6:usn2:@usn6 Create `3esn`=((`2esn` :_usn4:usn1{`7esn`:7 In 0xabc})<-[:@usn5|`8esn` *0Xa{usn1:$1000 Contains $`3esn`}]->(`2esn` :``)-[usn2?]-(`2esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})),((#usn8 :`1esn`{#usn7:1e1[`6esn`..]})<-[`1esn`{`6esn`:$_usn4[`3esn`][0],_usn3:999 Contains Count ( * ) Contains 123.654}]->(`7esn` :`7esn`));"),
    octest:ct_string("Merge ((:`3esn`:`1esn`{`1esn`:0.0[1000..][.e1..]})) On Create Set `3esn`+=$_usn3 =~$`3esn` =~0x0,Extract(`4esn` In 's_str'[12..'s_str'] Where `` Contains 12 Contains True|999[``..][Null..]).`8esn`? =Extract(usn2 In 1000 Contains 0.e0 Where `7esn` Contains .0 Contains 9e12|_usn3 Is Null)[Single(_usn4 In usn1 Contains False Contains `` Where True[..'s_str'][..01])],`1esn`+=0.12 Contains .e1 Merge ((({`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})<-[?:@usn6]-(`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})-[:_usn4|:@usn5]->(`5esn` :#usn7))) On Match Set (`5esn` {@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00})<-[?{#usn7:`6esn`[False..0.0][12e12..$usn2]}]-(`4esn` {`4esn`:#usn7[..$1000][..01]})-[`5esn`?:`3esn`|:`4esn`{`1esn`:$usn2 Contains 12.e12 Contains 00}]-(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]}).`4esn`! =0 Is Not Null,`6esn` =9e12 Ends With 0X0123456789ABCDEF Ends With #usn7,`1esn` =$_usn3[$`4esn`..Null] On Create Set 12.e12.`4esn`? =12e12 Starts With $123456789 Starts With 12.0,(#usn8 :_usn3)-[`8esn`?:`6esn`{#usn7:True =~@usn5 =~$`1esn`,@usn6:False[.e1..Null]}]->(:``{`2esn`:$7,usn1:.12 Contains $`4esn` Contains $`6esn`})-[`6esn`?:@usn6 *999..]->(`2esn` :usn2:@usn6).`3esn`? =All(#usn8 In $`5esn` Is Null Is Null Where #usn8[$#usn8..])[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..(#usn8 {`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]})<-[?:@usn5|`8esn`]-(usn2 :@usn5{`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})<-[?:#usn8{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]->(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})] Delete 's_str' In \"d_str\" In 123456789,9e12[..$``][..`6esn`],9e0[``][123.654] Union All Unwind (`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})-[:usn1|`3esn`*]->(:_usn3{`8esn`:0X0123456789ABCDEF In $1000 In $`3esn`})-[`3esn`{#usn7:12e12 Ends With 010 Ends With .0}]->(usn1 :#usn8) Is Not Null As `8esn` Union All Optional Match _usn3=(({`5esn`:_usn3 Contains @usn6 Contains 1.e1,`7esn`:$12[01..][1.e1..]})-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})<-[usn1?{#usn7:9e12 Is Not Null Is Not Null,usn2:`3esn` =~0.0 =~$``}]->(`5esn` :`3esn`:`1esn`{`6esn`:$1000[.e0..]})),#usn8=(((`3esn` )-[?:#usn7|:_usn4]-(usn2 :#usn8{_usn3:$_usn3[..Count ( * )][..@usn5]})-[*{`2esn`:$1000[01234567]}]-(_usn4 :`4esn`:#usn8{#usn7:1e1[@usn5..]})));"),
    octest:ct_string("Merge `2esn`=(_usn4 {`8esn`:9e1 In 01 In 999})<-[:_usn3|:`4esn`{_usn4:$`3esn` =~$`6esn` =~`8esn`,`5esn`:0X7[0e0..]}]-(:`8esn`) On Match Set @usn5+=`1esn`[9e12..$`8esn`][usn2..$``],usn1 =[12.e12 Ends With 01 Ends With .e1,$@usn5[0.12..][@usn5..],$usn1 In 1000 In $#usn7] Is Not Null On Match Set _usn4 =0 Contains 12e12,`1esn`:#usn8,`7esn` =0 Is Not Null Unwind .12 Contains $`4esn` Contains $`6esn` As _usn4 Optional Match `2esn`=(`` :usn2:@usn6)<-[?{@usn5:12.e12['s_str'],`1esn`:_usn3 Ends With 12e12 Ends With .e0}]-(`7esn` :`4esn`:#usn8{`2esn`:Count(*)[..`3esn`]}),(:@usn6:`7esn`{_usn3:False[`2esn`..#usn8]})-[`4esn`:`2esn`|usn2{@usn6:0.12[0.e0..][`4esn`..]}]-(_usn3 :``)-[?:usn2|#usn8{`2esn`:@usn5 In 0X0123456789ABCDEF,`1esn`:@usn6[`5esn`..$`3esn`]}]->({`1esn`:0.0[1000..][.e1..]}) Where $`7esn` Ends With $`2esn` Ends With $usn1;"),
    octest:ct_string("Create usn1=((_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8})-[`7esn`?]-(@usn6 :_usn3{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]})),#usn7=(_usn4 {_usn3:$`1esn` Is Null,usn1:$`4esn`[$`2esn`..]})<-[@usn5?:_usn3|:`4esn` *..0x0]->(#usn8 {usn2:7 Contains 9e1}) Union Return Distinct *,0.0 Is Null Is Null As `8esn` Order By $1000 Is Null Is Null Descending,1000 In 0X0123456789ABCDEF In 01 Asc Return *,({@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]})-[`6esn`?:`4esn`|:`7esn` *0..010{_usn3:$`1esn` Starts With @usn6}]-(`2esn` {#usn8:12.e12[0e0..7]}) Order By [0 Is Null Is Null][..[_usn3 =~00,9e1 Is Null Is Null]] Descending,Single(`4esn` In `6esn`['s_str'..][010..] Where 12.0 Contains 0.e0)[..Any(`4esn` In 's_str'[12..'s_str'] Where Count(*)[`7esn`..$12])][..Extract(@usn5 In .12[#usn7][$`8esn`] Where 01234567 =~usn1)] Ascending,`8esn` In $@usn5 Asc Limit $#usn8 Is Null Union Merge `7esn`=((#usn8 :`1esn`{#usn7:1e1[`6esn`..]})<-[`3esn`? *123456789..999]->(_usn4 :_usn4:usn1)) On Create Set `3esn`+=00 Ends With $_usn4 Ends With $`2esn` On Match Set `6esn`:usn1,`7esn`+=07[`6esn`..][`5esn`..] With Distinct *,.e1 Starts With $`8esn` Where 12.e12[$1000..] Remove [usn2 In 1000 Contains 0.e0 Where True[Count(*)..][1e1..]]._usn3,{`7esn`:$`7esn` Ends With 07 Ends With 07,`5esn`:@usn5 Ends With $`3esn` Ends With 12e12}.@usn6,[usn1 In 0x0[..`4esn`] Where $1000 Is Null Is Null|12[usn1][True]].usn2?;"),
    octest:ct_string("With Distinct $@usn6 Starts With usn2 Starts With usn2,None(usn1 In 0x0[..`4esn`] Where $`2esn` Contains usn1 Contains `2esn`)[..Extract(`6esn` In 0X7 =~`` Where $usn2 Contains 12.e12 Contains 00|$#usn8 Ends With 1000 Ends With .0)][..[@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where #usn7 Ends With 9e1]],$`7esn` Ends With $usn2 As `5esn` Order By $12[01..][1.e1..] Descending,0e0 Starts With .e12 Ascending Where 12 Ends With .e12 Ends With $7 Create @usn6=(((@usn6 :`5esn`{``:.e1 In $@usn6 In 999,`8esn`:_usn3 Is Null Is Null})<-[$#usn8]->(`4esn` {#usn8:`1esn`[0e0..],#usn7:$`6esn`[..0X0123456789ABCDEF]})-[`6esn`? *0Xa{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}]-(:`6esn`:`7esn`{`8esn`:$`3esn`[@usn5..$123456789],@usn5:\"d_str\" Starts With $usn1}))) With Distinct 1000[123.654..9e12][1000.._usn3],Extract(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null|12.e12 Ends With 01 Ends With .e1) Ends With $0 Ends With All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`) As _usn4,``[$`3esn`][01234567] Order By {`4esn`:$_usn3[..Count ( * )][..@usn5],#usn8:_usn3 =~00} Starts With Filter(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 01 In _usn3 In 12) Desc,9e0 Ends With $`7esn` Ascending,`1esn`(Distinct Count(*)[..`3esn`]) Starts With $0 Ascending Limit .12[`1esn`..][$`3esn`..] Where $0[01234567..00][$`2esn`..$@usn6] Union Optional Match (((usn2 :#usn8{_usn3:$_usn3[..Count ( * )][..@usn5]})-[`1esn`:`1esn`{``:_usn3[...e1],`2esn`:.12[`1esn`..][$`3esn`..]}]-(`7esn` :_usn4:usn1)<-[@usn5:#usn8{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]-(#usn8 :_usn3))),((:`8esn`{`7esn`:@usn6 Contains _usn4 Contains $`4esn`})<-[`2esn`:@usn5|`8esn`]->(`2esn` :`5esn`{`4esn`:$usn1[_usn4..][usn2..],`3esn`:999 In $_usn4 In 0X7})) Where .e1 Starts With 0.0 Starts With `6esn` Union Detach Delete $`7esn` In $7 Unwind 0x0[$`3esn`] As _usn4;"),
    octest:ct_string("Match `8esn`=((_usn4 :`3esn`:`1esn`{`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]})) Create `1esn`=((`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`5esn`?:usn1|`3esn` *1000..]-({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})) Optional Match usn2=((#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})-[`6esn`?:usn1|`3esn`{`2esn`:1e1[@usn5..],`3esn`:$`6esn`[`3esn`..0e0]}]->(:`4esn`:#usn8{usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null})),((usn1 :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(:#usn7{`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})-[?{@usn5:12.e12['s_str'],`1esn`:_usn3 Ends With 12e12 Ends With .e0}]-(`8esn` :`7esn`)) Where `3esn`[..7][..12e12];"),
    octest:ct_string("Remove `6esn`:@usn5,Extract(@usn5 In .12[#usn7][$`8esn`] Where $0[7..][Null..])._usn3!,Extract(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7|@usn6[`5esn`..$`3esn`])._usn4! Return *,00 Ends With .12 Ends With `4esn`,9e0[``][123.654] Order By `2esn` Contains $999 Asc Skip $_usn4[$`1esn`] Limit 0xabc Contains 0e0 Contains \"d_str\" Union Return Distinct 123.654 Starts With usn1 Starts With @usn5,`7esn`($123456789 Ends With $`6esn`) Starts With {`7esn`:$12[01..][1.e1..],_usn3:$_usn3 =~`7esn` =~$_usn4} As `8esn`,$`7esn` Ends With `1esn` Ends With True As `5esn` Order By {`3esn`:$999[12.0..]} =~[$#usn8 In .e12 In 9e1] Desc,\"d_str\" =~`6esn` =~0Xa Asc,(#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :usn2:@usn6)-[`1esn`:`8esn`|:usn1 *0xabc{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]-(@usn5 :#usn8{`1esn`:0xabc Ends With $7 Ends With $`2esn`,_usn4:``})[.._usn4(@usn6[`5esn`..$`3esn`],`8esn`[$``])] Descending Return *,9e12[_usn3] As `8esn`,$`1esn`[9e1.._usn4][$999..$`2esn`] As `8esn` Order By `6esn` Starts With $`5esn` Desc,$`7esn` Ends With 07 Ends With 07 Desc With Distinct $#usn8 In .e12 In 9e1 Order By All(_usn4 In usn1 Contains False Contains `` Where #usn8[$#usn8..])[(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})..] Asc,0Xa[0xabc..] Ascending,@usn6[$`3esn`] Ascending Skip 1e1 In $#usn8 In 12e12;"),
    octest:ct_string("Return *,$@usn6[..$usn1] As _usn3 Skip $@usn6 Is Null Limit `3esn` =~$`5esn` =~12 Return Distinct 1.e1 =~$_usn4 As usn2,[_usn4 Starts With $@usn6 Starts With #usn7,$@usn5 Contains 01] =~`4esn`(12 Ends With 01 Ends With 1e1) =~Extract(`6esn` In 0X7 =~`` Where 0x0[..`4esn`]) As ``,{_usn4:00}[#usn7(00 In 12.e12)][[.12 Ends With `1esn` Ends With $`1esn`,$`5esn`[False]]] Order By $12 Starts With #usn7 Asc,$0[$0..] Descending Union Match `3esn`=((:#usn8{_usn4:\"d_str\"[Count ( * )],`2esn`:9e0 Ends With $`7esn`})) Remove All(`4esn` In 's_str'[12..'s_str'] Where $`8esn`[..$``]).`7esn`!,usn2(07[$999]).`4esn` Merge (({@usn6:0X0123456789ABCDEF[..usn1]})<-[ *00..{@usn5:$`5esn` Is Null Is Null}]->(:_usn3{#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})-[usn1*]->(:`2esn`:`3esn`{usn2:9e12[@usn6..$``][#usn8..Count ( * )],`3esn`:$1000 In $`7esn` In $7})) On Match Set `4esn` =.e12[.12..][_usn4..] On Match Set All(`6esn` In 0X7 =~`` Where `7esn`[...e1][..\"d_str\"]).`5esn` =None(usn2 In 1000 Contains 0.e0 Where $usn1[..$`6esn`][..Null]) Starts With Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $usn1[..$`6esn`][..Null]|$`1esn` Starts With $999) Union Create @usn6=((`2esn` :`8esn`{`2esn`:$`8esn` In \"d_str\" In 9e12})-[`5esn`:`8esn`|:usn1{usn1:12e12[Count ( * )..][usn2..],usn2:$123456789 Is Null Is Null}]->(@usn5 :#usn8{@usn5:$@usn5 Contains 01,`2esn`:@usn6[`3esn`..][$7..]})) Optional Match _usn4=(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa}) Where @usn6[..0xabc][..$#usn7];"),
    octest:ct_string("Delete Single(usn1 In 0x0[..`4esn`] Where 1e1 In $#usn8 In 12e12) Is Not Null Is Not Null Union All Return Distinct *,`4esn` Is Null Order By `5esn` In $999 Descending Limit `3esn` =~$`5esn` =~12 Union Return Distinct *,usn2 =~0x0,07 In `5esn` In 12e12 Skip Null Contains 9e1 Limit [@usn6 In @usn5 In $`6esn` Where $`1esn` Is Null Is Null] Contains Filter(`4esn` In 's_str'[12..'s_str'] Where 123.654 Starts With usn1 Starts With @usn5) Contains [`4esn` In $`8esn` Starts With 1000 Where False In `3esn`] Match `3esn`=(((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})-[:`7esn`|`2esn` *..0X7{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]-(`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})-[`4esn`? *00..]-(:`4esn`:#usn8{@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]}))) Where `7esn`[Null..][@usn5..];"),
    octest:ct_string("Delete [_usn4 In usn1 Contains False Contains `` Where $usn1[0.12..]['s_str'..]|12[..True][..$`4esn`]] Ends With [`6esn` In 0X7 =~``|$#usn7[...e12][..$7]],Single(#usn8 In $`5esn` Is Null Is Null Where 's_str' Starts With 1000 Starts With #usn8)[{_usn3:$0 Ends With $#usn7 Ends With .12}][[12.0[0Xa][00],.0[01][$12]]] Unwind `2esn`(Distinct 7[..12e12][..$`6esn`]) In Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where `5esn`[.e1][0Xa]) As `4esn` Union Match _usn3=(`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})<-[`8esn`?:`5esn`|`1esn`]-(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]})<-[`3esn`?*..]->(`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]}),``=(({`5esn`:0e0 =~_usn4})) With  *,.e12 Starts With True As _usn4,$1000 In $`7esn` In $7 Skip [$1000 =~$`7esn`,.12 Starts With @usn5 Starts With $#usn8,0x0[...e12][..@usn5]] Ends With Single(@usn5 In .12[#usn7][$`8esn`]) Limit Extract(@usn5 In 0X7 =~.0 =~\"d_str\" Where $`4esn`[9e1..][0..]|$0 =~$usn1 =~9e1)[{``:\"d_str\",`1esn`:$1000 =~$`7esn`}] Detach Delete 0X7 In 123456789 In $`5esn`;"),
    octest:ct_string("Merge `6esn`=(:_usn3{#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}) With Distinct $`4esn`[$`2esn`..] As #usn8,#usn8 In $0,Any(`6esn` In 0X7 =~`` Where 0X7[0e0..]) Contains Single(`4esn` In `6esn`['s_str'..][010..] Where @usn6[`3esn`..][$7..]) As #usn7 Skip $@usn5 =~$`` =~$usn2 Limit `8esn` Ends With 999 Ends With 9e0 Merge `5esn`=(usn2 {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})<-[ *0xabc{`1esn`:123.654 In \"d_str\" In $_usn3}]-({`2esn`:$usn2 Is Not Null});"),
    octest:ct_string("Delete Any(`6esn` In 0X7 =~`` Where 0X7[0e0..]) Contains Single(`4esn` In `6esn`['s_str'..][010..] Where @usn6[`3esn`..][$7..]),7 Is Null Create ((usn2 {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})-[`1esn`{_usn4:`3esn` Contains 0Xa}]-(:usn2:@usn6{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8})),((`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`3esn`?:_usn3|:`4esn`]-(`4esn` {`6esn`:$12[..``][..$7]})) With Distinct Null[0.e0..0x0] As `2esn`,$`1esn` Starts With $999 As #usn8 Where Count(*)[`7esn`..$12] Union All Merge @usn6=(({_usn3:$0 Ends With $#usn7 Ends With .12})-[@usn6?:#usn7|:_usn4 *00..]->(:`6esn`:`7esn`{@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]})) On Match Set [`6esn` In 0X7 =~`` Where $`3esn` =~Null|1.e1[0X0123456789ABCDEF..][$`5esn`..]]._usn3? =Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where \"d_str\" Is Null Is Null)[count(Distinct 0.12 Contains $12 Contains `8esn`)..[$`1esn` Is Null Is Null,9e1 In 01 In 999]],`1esn`+=None(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 12e12[.12..]) Ends With None(_usn4 In usn1 Contains False Contains `` Where 12 Ends With 01234567) Ends With @usn6($123456789[0.0..]),(_usn4 {#usn7:False[`2esn`..#usn8],#usn8:`5esn`[`1esn`..`1esn`]})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})-[#usn7?:@usn6 *00..]->(_usn3 :_usn4:usn1{@usn5:$@usn6 In $`5esn` In $usn2,#usn7:$0[0X0123456789ABCDEF..$#usn7]}).`3esn` =01234567[$@usn6..0X7][$`1esn`..123.654] Union All Remove `1esn`:`6esn`:`7esn`,`4esn`(@usn6[..0xabc][..$#usn7],0X7[12]).`5esn`!;"),
    octest:ct_string("Create `4esn`=((@usn6 {`3esn`:0.12 In $7 In 0,_usn3:07[$999]})-[`1esn`:`5esn`|`1esn` *..7{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]}]->(usn2 :@usn6:`7esn`)<-[:@usn5|`8esn` *0Xa{usn1:$1000 Contains $`3esn`}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]})),(`7esn` :_usn4:usn1)-[_usn4?:#usn8 *..0X7{@usn5:07}]-(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})-[`1esn`{`2esn`:.12 Starts With @usn5 Starts With $#usn8}]->(:usn1{`6esn`:1000 Contains 0.e0,`7esn`:$@usn6[..$#usn7][..12.e12]}) Create @usn5=((@usn6 {`3esn`:0.12 In $7 In 0,_usn3:07[$999]})-[`1esn`:`5esn`|`1esn` *..7{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]}]->(usn2 :@usn6:`7esn`)<-[:@usn5|`8esn` *0Xa{usn1:$1000 Contains $`3esn`}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]})) Remove ``(9e0 Contains `8esn`).`1esn`,[$`1esn` Is Null Is Null,010 Contains 0X0123456789ABCDEF,9e1[0.e0..][#usn8..]].`` Union Create ((@usn6 :#usn7{@usn5:Null Is Null Is Null})) Remove None(usn1 In 0x0[..`4esn`] Where False[.e1..Null]).``,[.e0[..999][..0X7]].`5esn`? With Distinct 12e12[.12..] As #usn8,`4esn` Is Null,Filter(`6esn` In 0X7 =~`` Where $usn2[0e0..])[{@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null}..] Skip $0[..07] Limit 999 Contains `7esn` Where $`2esn` Starts With .e0 Starts With 12.0 Union Delete `6esn`(Distinct 12.0[0Xa][00]) In {`7esn`:12e12 Ends With 010 Ends With .0} In Extract(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6|#usn7 Is Not Null Is Not Null),[_usn4 Starts With $@usn6 Starts With #usn7,$@usn5 Contains 01] =~`4esn`(12 Ends With 01 Ends With 1e1) =~Extract(`6esn` In 0X7 =~`` Where 0x0[..`4esn`]),Extract(_usn4 In usn1 Contains False Contains `` Where $`4esn` Starts With 1e1|Count(*)['s_str'..`1esn`]) =~Extract(`4esn` In $`8esn` Starts With 1000|`7esn`[Null..][@usn5..]) =~(:`4esn`:#usn8)<-[?:_usn3|:`4esn` *010{`8esn`:$``[_usn4..][`7esn`..]}]-(`2esn` ) Create @usn5=((#usn7 {#usn7:01234567[.12..7][1000..1.e1],``:@usn5 Ends With 1.e1 Ends With 0X0123456789ABCDEF})<-[? *1000..{_usn4:$`6esn`[$`1esn`][1000],`2esn`:12e12[$`5esn`][07]}]->(:``{`2esn`:9e0[``][123.654],`1esn`:$_usn3[Null]})) Delete 12e12[1000..][0x0..];"),
    octest:ct_string("With Distinct *,0.12 In $`4esn` In `6esn`,`4esn`(_usn4[$`4esn`..],0x0[...e12][..@usn5])[..{`3esn`:`8esn`[1000..$7][$`7esn`..`2esn`],_usn4:\"d_str\" Is Null Is Null}] As `2esn` Order By Null[@usn6..][9e1..] Ascending Skip 07 Ends With 07 Limit All(_usn4 In usn1 Contains False Contains `` Where $`4esn`[$`2esn`..])[..Single(usn1 In $123456789 Contains usn2 Where $usn1[0.12..]['s_str'..])][..``(Distinct `1esn`[0e0..])] Where 's_str'[..0.e0][..`1esn`] Detach Delete $999[12.0..] Remove (:`1esn`{`6esn`:$0[..`8esn`],`1esn`:True Starts With $`8esn` Starts With \"d_str\"})<-[?:`5esn`|`1esn`{_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12}]-({@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]})<-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]->(`1esn` :`1esn`).`2esn`,[.12 Contains $`4esn` Contains $`6esn`].@usn6;"),
    octest:ct_string("Remove None(@usn5 In $#usn8 Is Null Is Null Where 9e1 Contains $`3esn` Contains 01234567).`8esn` Union Merge usn2=(:`8esn`{usn2:7 Contains 9e1})<-[_usn3?:`7esn`|`2esn` *010]-(#usn8 :`4esn`:#usn8)-[`8esn` *..0x0{#usn7:Count ( * )[Count ( * )..12e12][usn1..1000],`4esn`:010 Is Null Is Null}]->(@usn6 ) Unwind 0x0 =~_usn4 As `5esn`;"),
    octest:ct_string("Remove [$0[01234567..00][$`2esn`..$@usn6],@usn6 =~01,`4esn` In $12 In `8esn`].usn1,[@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $`4esn`[9e1..][0..]|9e12 Is Not Null Is Not Null].#usn8?,None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `7esn` Ends With $usn2 Ends With 999)._usn4! Union All Delete 0X0123456789ABCDEF Contains $usn1 Merge (({`3esn`:$`3esn` =~$`7esn` =~False,`4esn`:12 Ends With 01234567})<-[@usn5?:``|:_usn4]-(_usn3 :`4esn`:#usn8)) On Match Set `8esn`:`4esn`:#usn8,Extract(`4esn` In $`8esn` Starts With 1000 Where False[`2esn`..#usn8]|_usn3 Is Not Null Is Not Null).`6esn`? =#usn8 Is Not Null,usn1 =Extract(#usn8 In $`5esn` Is Null Is Null Where @usn6 Contains .e1 Contains $`4esn`) In Filter(`4esn` In `6esn`['s_str'..][010..] Where 12e12[Count ( * )..][usn2..]) In [123456789 In $usn2 In `6esn`,Count(*) Ends With 010];"),
    octest:ct_string("Detach Delete [Count ( * )[Count ( * )..12e12][usn1..1000]][None(`4esn` In `6esn`['s_str'..][010..] Where $`8esn`[``..][123.654..])..][(#usn7 {`2esn`:$``[_usn4..][`7esn`..],`3esn`:#usn7 Ends With 9e1})<-[`2esn`:usn1|`3esn` *0Xa]->(`2esn` :`1esn`{``:9e1 Starts With _usn3 Starts With `4esn`})..],0Xa[..$``],_usn3 Contains @usn6 Contains 1.e1;"),
    octest:ct_string("Merge (`7esn` {usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3})<-[{@usn5:$123456789 Ends With .e1,#usn8:0x0 =~_usn4}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})-[#usn8?]->(:`4esn`:#usn8{_usn4:'s_str' In \"d_str\" In 123456789,`2esn`:0.12 Ends With $usn1 Ends With $@usn5}) On Match Set `2esn`(Distinct $`2esn`[..7][..$usn1]).`1esn`? ={`4esn`:.12 Starts With 0Xa} Starts With All(usn1 In 00 Starts With _usn3 Where `6esn`[False..0.0][12e12..$usn2]),`5esn` =$usn1[0.12..]['s_str'..],({usn2:00,#usn8:usn2 Ends With $`5esn` Ends With `2esn`})-[#usn8?]-(`2esn` :`5esn`{`4esn`:$usn1[_usn4..][usn2..],`3esn`:999 In $_usn4 In 0X7}).`6esn`? =[999[.e12][01],999 In 9e1 In 7,0xabc Contains Null Contains 9e12][All(`6esn` In 0X7 =~`` Where 0.12[Null..])..[`4esn` In $`8esn` Starts With 1000 Where False[`2esn`..#usn8]]][count(010 Contains Count(*))..(:`4esn`:#usn8)-[:#usn8 *..0X7]->({`6esn`:9e1[.12..],`5esn`:0.12 In $`4esn` In `6esn`})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`1esn` :usn2:@usn6)];"),
    octest:ct_string("Merge #usn8=(@usn5 :`3esn`:`1esn`{`3esn`:$`5esn` Is Not Null,`2esn`:9e1[0.e0..][#usn8..]})<-[``]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[ *00..{`2esn`:$0 Is Not Null}]-(:`4esn`:#usn8{_usn4:'s_str' In \"d_str\" In 123456789,`2esn`:0.12 Ends With $usn1 Ends With $@usn5}) On Match Set `1esn`+=Null[0e0][12],Filter(usn1 In 0x0[..`4esn`] Where $`` Ends With 12e12).usn1! =Extract(#usn8 In $`5esn` Is Null Is Null Where 's_str' Starts With 1000 Starts With #usn8|07)[None(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 12[..True][..$`4esn`])..usn2(Distinct $1000[01234567],00 In 0.12 In `5esn`)][`8esn`(00[``..][$`4esn`..],123.654[@usn5])..Extract(@usn5 In $#usn8 Is Null Is Null Where @usn5 Contains $`1esn` Contains 999)] With Distinct 's_str'[..0.0][..$`4esn`] As `2esn`,#usn7 Contains .0 Contains .e1,({`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`4esn` {@usn6:True[..'s_str'][..01]}) In Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where 07[12e12]) Skip `6esn` Starts With $usn2 Starts With 0.0 Limit 9e1 Contains $`3esn` Contains 01234567 Union Detach Delete _usn3[...12][..01234567],010 In `7esn`,{`4esn`:$_usn3[..Count ( * )][..@usn5],#usn8:_usn3 =~00} Starts With Filter(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 01 In _usn3 In 12);"),
    octest:ct_string("Unwind 01 In _usn3 In 12 As `4esn` Create @usn5=(`` :@usn6:`7esn`{`2esn`:0.12[0.e0..][`4esn`..]})-[@usn6?:#usn8 *..7{@usn5:@usn5 Starts With 12e12 Starts With @usn5}]->(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})-[usn1?:`2esn`|usn2 *123456789..999]-(usn1 :`7esn`{`1esn`:$@usn6 Contains 07 Contains 0.e0}) Unwind #usn8[$#usn8..] As `4esn`;"),
    octest:ct_string("Unwind `3esn` =~$`5esn` =~12 As `7esn` Remove [.12 Starts With 0Xa].`4esn`! Union All Detach Delete $7 Ends With 12.0 Ends With 0xabc,`` Is Not Null Create #usn7=((#usn7 {`2esn`:$@usn6[..$usn1],usn2:12 Ends With 01 Ends With 1e1})),`2esn`=(:_usn4:usn1)-[#usn7?:_usn4|:@usn5{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]->(:`2esn`:`3esn`)<-[``]-(usn1 {#usn7:.e12[..0.e0][..$`1esn`],usn1:010 Contains Count(*)}) With  {@usn5:0.e0[@usn6][0x0]} Ends With All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 7 In $`3esn` In #usn7) As #usn7,$`3esn`[`2esn`...e0],0.12[Count(*)..] Order By _usn3[0] Ascending Limit `1esn`(Distinct Count(*)[..`3esn`]) Starts With $0;"),
    octest:ct_string("With Distinct *,Extract(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null|12.e12 Ends With 01 Ends With .e1) Ends With $0 Ends With All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`) As _usn3 Order By False[..12.e12] Descending,{`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]}[({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})-[? *999..]-({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`8esn` :`7esn`)][{@usn5:`` In `6esn`,`1esn`:$`2esn`[$`2esn`..]}] Asc Limit 12.e12[@usn5..123.654] Union All Unwind 0Xa[0xabc..] As @usn5 Detach Delete [`4esn` In 's_str'[12..'s_str'] Where 9e12 =~01 =~$`7esn`][#usn7(00 In 12.e12)..Extract(usn1 In 0x0[..`4esn`] Where 1000 Ends With 1000 Ends With $`4esn`|@usn6[$`3esn`])][(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})<-[`8esn`]->(#usn8 )<-[`3esn` *00..{`8esn`:@usn6 Contains .e1 Contains $`4esn`,_usn4:0X7[..12e12]}]->(@usn5 {`1esn`:0[usn2..]})..(usn1 :_usn4:usn1)<-[@usn5?:`1esn`]-(#usn7 :`2esn`:`3esn`)],$`4esn` Ends With 0Xa,[123456789 =~$123456789,0.12 In $7 In 0] Is Null Is Null With Distinct *,{#usn7:0[0.12..]} Ends With Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]) Ends With {@usn5:\"d_str\" Is Null Is Null,@usn5:$_usn4[`3esn`][0]} As `8esn`,@usn5 Ends With 1.e1 Ends With 0X0123456789ABCDEF As `8esn` Skip {_usn3:0.12 Is Null Is Null,`1esn`:9e12[0.0..12.e12]} Ends With {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]} Where .12 =~.12 =~1e1 Union Unwind 0Xa[0xabc..] As @usn6;"),
    octest:ct_string("Match `4esn`=(((`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})-[?{`4esn`:0.e0 Ends With 12 Ends With $7,@usn6:$``[_usn4..][`7esn`..]}]->(#usn7 {@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]})<-[@usn5? *1000..]->(:@usn6:`7esn`{_usn3:False[`2esn`..#usn8]}))),((:#usn7{`2esn`:.12 Starts With @usn5 Starts With $#usn8})) Remove Filter(usn1 In 00 Starts With _usn3 Where 12e12[Null]).`7esn`!,Filter(`4esn` In `6esn`['s_str'..][010..] Where 12e12[Count ( * )..][usn2..]).`2esn`! Union All Remove _usn3(Distinct $1000 Contains $`3esn`,7 Contains $`5esn` Contains $usn1).usn2?,{@usn5:0.e0[@usn6][0x0]}._usn4,_usn3:`4esn`:#usn8 Merge `8esn`=(({@usn6:$123456789 Is Null Is Null,@usn6:`6esn`[1.e1..$#usn7][.e0..True]})<-[`5esn`:usn1|`3esn` *010{`2esn`:`6esn` =~01234567 =~0Xa}]->(_usn4 :``)) Union All Remove (:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[`2esn`]-(`6esn` :#usn7)-[_usn4?:`6esn`]-(@usn5 :`8esn`).`7esn`,`7esn`(usn2 Is Null Is Null,`6esn` =~$_usn3).`1esn`!;"),
    octest:ct_string("With Distinct $`4esn`[12.e12..][0.0..] As `2esn`,$0[..`8esn`] As _usn4,$`1esn` Starts With $999 Skip $#usn8[1e1][9e1] Limit Count(*) Ends With 010 Remove [usn1 In 00 Starts With _usn3 Where 010 =~$usn2 =~1e1|9e1 Starts With `1esn` Starts With 0Xa].usn2?,Count ( * ).@usn5? Remove `5esn`:usn1,(`3esn` :_usn4:usn1)-[:`3esn`|:`4esn` *999..{`6esn`:$123456789[..0.12][..#usn7],`3esn`:0 Ends With $7 Ends With _usn3}]->(:`4esn`:#usn8{usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null})<-[`` *0xabc]->(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}).`1esn`! Union All Unwind 07[`6esn`..][`5esn`..] As usn1;"),
    octest:ct_string("Create ((`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})-[?:@usn6 *..7{#usn8:'s_str'[.12..$#usn7][$999..`2esn`]}]->(@usn5 {_usn4:010[$@usn6],`6esn`:123456789[1e1..0.0]})<-[`6esn`?:`2esn`|usn2 *01234567..12]->(:`7esn`{#usn7:True =~@usn5 =~$`1esn`})),`6esn`=({`8esn`:$@usn5 Contains 01,`2esn`:123.654 Contains #usn8})-[{`5esn`:.e1[..$``][..0X0123456789ABCDEF]}]->(_usn3 {`5esn`:0.12 Contains .e1})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]}) Remove None(usn1 In 00 Starts With _usn3 Where 123456789[`4esn`..][Count ( * )..]).#usn8!,All(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0X7[0e0..])._usn4 Union All With  12e12[Null] As usn2,$`4esn`[0][0e0] As _usn3,12e12 Starts With $123456789 Starts With 12.0 Order By Count(*)[.e0.._usn4] Asc Skip (`7esn` :@usn6:`7esn`)<-[:``|:_usn4{`8esn`:0 Ends With $7 Ends With _usn3}]-(usn1 {#usn7:Count ( * )[@usn6..0x0]})<-[`8esn`]->(#usn8 ) Contains usn2(Distinct $1000[01234567],00 In 0.12 In `5esn`) Contains Any(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where usn2[$`1esn`...0]) Where $`7esn` Ends With `1esn` Ends With True Merge `4esn`=({`8esn`:0X7 In 's_str' In $`1esn`}) Union Create (`` :usn1);"),
    octest:ct_string("Merge `1esn`=((`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]})) On Match Set usn2+=$`4esn`[9e1..][0..],[usn1 In 00 Starts With _usn3 Where $`` Ends With 12e12].`3esn`? =0.12 Starts With {`1esn`:@usn6[..0xabc][..$#usn7]} Starts With {`3esn`:`8esn`[1000..$7][$`7esn`..`2esn`],_usn4:\"d_str\" Is Null Is Null},(usn1 :#usn7)-[?:usn2|#usn8{`2esn`:@usn5 In 0X0123456789ABCDEF,`1esn`:@usn6[`5esn`..$`3esn`]}]->(`4esn` {`7esn`:.e0[..999][..0X7]}).usn2 =$`3esn`[`2esn`...e0] Unwind $_usn4[`3esn`][0] As `7esn` Optional Match _usn3=(((#usn7 :#usn8{`2esn`:12 =~usn1 =~.e12})-[`8esn`?:#usn7|:_usn4{usn2:7[$`4esn`..123456789]}]->(#usn8 :usn2:@usn6{`5esn`:00 Ends With $_usn4 Ends With $`2esn`,usn2:#usn7 Starts With 0 Starts With 12})-[``? *12..0xabc]->({@usn6:9e0 Contains `8esn`}))),usn2=((`5esn` :`7esn`)) Where $@usn6[..$#usn7][..12.e12] Union Detach Delete Null Contains _usn4,12.e12[0e0..7];"),
    octest:ct_string("Return 0 =~12.e12 =~$``,@usn5 Ends With 1.e1 Ends With 0X0123456789ABCDEF As `8esn` Order By $`7esn` Starts With 07 Ascending Merge (usn1 {`4esn`:$123456789[0.0..],`2esn`:12 Ends With 01234567})<-[usn1? *..0X7]-(usn1 :`4esn`:#usn8)-[ *010{@usn5:Null Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)}) On Match Set [0X7 =~.0 =~\"d_str\",9e1[...e0]].@usn5 =Single(@usn5 In .12[#usn7][$`8esn`] Where `6esn` =~$_usn3) Ends With {`2esn`:.12 Ends With `1esn` Ends With $`1esn`,`5esn`:9e12[@usn6..$``][#usn8..Count ( * )]} Ends With (:_usn3{`2esn`:$`5esn` Is Null,@usn6:#usn7 Starts With `1esn`})<-[``?:@usn6]-(:`2esn`:`3esn`{`6esn`:01 In _usn3 In 12,_usn3:$`3esn` =~$`6esn` =~`8esn`})<-[:_usn4|:@usn5 *..0X7]->(`4esn` {`7esn`:.e0[..999][..0X7]}),{@usn6:usn1 In 1000 In $`5esn`,@usn6:9e0[``][123.654]}.`3esn`! =$999 In $`8esn` In `5esn` On Match Set `6esn` =7[..0X7][..'s_str'],[$`5esn` Contains $@usn6].`1esn` =1e1[@usn5..],Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 07 In 0 In 's_str').@usn5? =True Is Not Null Union Delete .12 Starts With 0Xa,.12[#usn7][$`8esn`] Unwind $_usn4[$`1esn`] As `2esn` Delete [07,$_usn3[..Count ( * )][..@usn5]][All(@usn5 In .12[#usn7][$`8esn`] Where .e12 =~0.0 =~9e0)..{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1}][[010 =~$usn2 =~1e1,`6esn` =~01234567 =~0Xa,07[1e1]]..Filter(usn1 In 0x0[..`4esn`] Where 1e1 In $#usn8 In 12e12)],`6esn` Starts With $usn2 Starts With 0.0;"),
    octest:ct_string("With Distinct *,Extract(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null|12.e12 Ends With 01 Ends With .e1) Ends With $0 Ends With All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`) As _usn3 Skip 010 Starts With `7esn` Starts With 9e1 Limit 07[12][$`6esn`] Where $_usn4[$`8esn`..][07..] Unwind 9e0[False] As #usn8 Detach Delete .e0 Is Not Null Is Not Null,{usn1:7 =~9e0 =~'s_str',@usn6:$usn1[..$`6esn`][..Null]} =~Single(usn2 In 1000 Contains 0.e0) =~Any(@usn6 In @usn5 In $`6esn` Where $`7esn` Is Not Null);"),
    octest:ct_string("Remove Single(usn1 In $123456789 Contains usn2 Where 9e12[0.0..12.e12]).`4esn`!,(_usn4 )<-[#usn7? *00..]->(`4esn` :`1esn`{`8esn`:12 Ends With .e12 Ends With $7,`8esn`:0.0[12...12]})-[@usn5?:`3esn`|:`4esn`{`7esn`:Count(*) In 01 In .0,`6esn`:$123456789[..0.12][..#usn7]}]->(`5esn` :`8esn`).``! With  *,Single(#usn7 In 01234567[$`3esn`..]) Is Null As `3esn`,07[$999] As `` Where 9e0[$_usn3..0X7][7..$#usn8] Remove (:``{#usn8:$`2esn`[..`2esn`]})-[@usn5?:@usn6$_usn3]->(:_usn4:usn1{`1esn`:123456789 Starts With `2esn` Starts With .0,@usn6:12.e12 Contains `5esn`})-[*{`2esn`:$1000[01234567]}]-(_usn4 :`4esn`:#usn8{#usn7:1e1[@usn5..]}).`5esn`,(@usn5 :`2esn`:`3esn`{`1esn`:$`8esn`[..$usn1][..'s_str']})<-[usn2:@usn6{`7esn`:123456789[`4esn`..][Count ( * )..],`4esn`:010[$`8esn`..][0..]}]-(_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8}).`4esn`;"),
    octest:ct_string("Create `1esn`=(((`5esn` {@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00})-[ *010{@usn5:Null Is Null Is Null}]-(:`5esn`)<-[`7esn`{`7esn`:\"d_str\",usn2:True[`4esn`][$`6esn`]}]-(#usn7 {@usn5:`5esn`[.e1][0Xa],@usn6:Count(*)[`7esn`..$12]}))) Remove Extract(`4esn` In $`8esn` Starts With 1000 Where `5esn` In 12|010 Contains 0X0123456789ABCDEF).`2esn`,{#usn7:.e12[..0.e0][..$`1esn`],usn1:010 Contains Count(*)}.`2esn`! Return Distinct *,9e12 Ends With 0X0123456789ABCDEF Ends With #usn7 As `5esn`,$12[`3esn`..0e0][`2esn`..$7] As #usn8 Order By $`2esn` Starts With .e0 Starts With 12.0 Descending,{`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]}[({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})-[? *999..]-({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`8esn` :`7esn`)][{@usn5:`` In `6esn`,`1esn`:$`2esn`[$`2esn`..]}] Asc,999 Is Null Is Null Desc Limit $7 Ends With `5esn`;"),
    octest:ct_string("Merge ((`4esn` :`7esn`{`7esn`:@usn6 Contains _usn4 Contains $`4esn`})) On Create Set _usn4+=@usn6(Distinct 12.e12[0e0..7],usn1[Count ( * )..$usn1]) Is Null Is Null,(_usn4 :``)-[usn1? *07..{`5esn`:#usn7 Is Not Null Is Not Null}]-({`1esn`:12[..9e0][..999],usn1:0x0 =~$`7esn` =~@usn6}).`5esn` =\"d_str\" Contains `3esn` Contains 00,`4esn` =``[True..] On Create Set #usn7+=Any(`6esn` In 0X7 =~`` Where 0X7[..12e12]),Extract(@usn5 In $#usn8 Is Null Is Null Where $@usn5 =~$`` =~$usn2|`5esn`[.e1][0Xa]).`6esn`? =$`1esn` Is Null Is Null Remove (:#usn7{usn1:$123456789[..0.12][..#usn7]})-[:_usn4|:@usn5 *0xabc]-({`6esn`:.e1 Starts With 0.0 Starts With `6esn`,_usn3:$@usn6 Contains 0 Contains $`2esn`}).``?,(:`4esn`:#usn8{`7esn`:#usn7 Starts With 0 Starts With 12})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]-(:#usn7{`2esn`:.12 Starts With @usn5 Starts With $#usn8}).#usn8? With Distinct {usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null} Is Not Null Is Not Null As #usn8,010[$`8esn`..][0..] Order By .e12[.12..][_usn4..] Ascending,Any(`6esn` In 0X7 =~`` Where $`5esn` In `2esn` In $12)[Extract(`4esn` In 's_str'[12..'s_str'] Where .12[9e0][$7]|$`3esn` Starts With $usn1)..[@usn5 In .12[#usn7][$`8esn`] Where $12 Contains 123.654 Contains `8esn`|@usn5 Ends With 1.e1 Ends With 0X0123456789ABCDEF]][{`6esn`:$12[..``][..$7]}..[usn1 In 1000 In $`5esn`]] Asc Skip {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']}[(`1esn` :`8esn`{`7esn`:`5esn`[`1esn`]})<-[`6esn`:`4esn`|:`7esn` *..0x0]->(#usn8 :@usn5)] Limit 9e12[usn2..7][.e1..$`7esn`] Where .0[01][$12] Union All Detach Delete ({usn1:`4esn` In $12 In `8esn`})-[`4esn`]-(`1esn` {usn1:True[Count(*)..][1e1..],usn1:9e1 Is Null Is Null})<-[?{`5esn`:0x0 Contains $`8esn` Contains `6esn`,#usn8:010 =~$usn2 =~1e1}]->({`6esn`:$`5esn` Is Null,`2esn`:`7esn` Starts With $usn2 Starts With .e0})[[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 0e0 =~_usn4|0x0 Contains _usn4 Contains 123456789]..[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 7 In $`3esn` In #usn7]][usn1($`1esn` Is Null Is Null,$0[0X0123456789ABCDEF..$#usn7])..[usn1 In 00 Starts With _usn3 Where .12[9e0][$7]|07]] Return $usn1[0.12..]['s_str'..] As `1esn`,(`4esn` :`8esn`{_usn4:0 Is Null Is Null})-[`6esn`:`8esn`|:usn1$_usn3]->(`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]}) Ends With Filter(@usn5 In $#usn8 Is Null Is Null Where @usn5 Contains $`1esn` Contains 999) Ends With [`4esn` In `6esn`[1e1..] Where 07[12e12]] Order By Count ( * )[..999] Asc Skip (:``{_usn3:Count(*)['s_str'..`1esn`],`1esn`:$`6esn`[$`1esn`][1000]})<-[`6esn`?:@usn6 *999..]->(`3esn` {`8esn`:$usn2[12..$`7esn`][$0..$`7esn`]})[Filter(_usn4 In usn1 Contains False Contains `` Where 123456789 Is Null)..];"),
    octest:ct_string("Detach Delete $#usn7 In .e1 In 01,False Starts With Count ( * ) Unwind usn1[1e1][$_usn4] As _usn4;"),
    octest:ct_string("Remove Extract(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $123456789 Ends With $`6esn`|.12 Ends With `1esn` Ends With $`1esn`).`5esn`! Optional Match usn2=((usn2 :`7esn`{_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`})-[`3esn`{#usn7:12e12 Ends With 010 Ends With .0}]->(usn2 :`5esn`)),((`3esn` :`8esn`)-[?{@usn5:12.e12['s_str'],`1esn`:_usn3 Ends With 12e12 Ends With .e0}]-(:`4esn`:#usn8{_usn4:'s_str' In \"d_str\" In 123456789,`2esn`:0.12 Ends With $usn1 Ends With $@usn5})-[ *..0X7]->(`5esn` :_usn4:usn1)) Unwind [@usn5 In $#usn8 Is Null Is Null Where $`2esn` Starts With .e0 Starts With 12.0|$`7esn` Is Null Is Null][``(Distinct 0X7 In $@usn5 In 9e0,12.0[0Xa][00])][`6esn`(Distinct 12.e12 In $0 In Count(*),$`2esn`[$`2esn`..])] As usn1;"),
    octest:ct_string("Create @usn6=((:usn1{_usn3:0xabc[12.e12..`1esn`],`1esn`:12[usn1][True]})-[?:`4esn`|:`7esn`]->(#usn7 {`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null})),#usn7=(@usn5 {usn2:$999[12.0..]})<-[usn1]->(`8esn` :_usn3{`8esn`:$`3esn` In $12 In 's_str'})-[_usn3?:``|:_usn4]->(`5esn` {usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null});"),
    octest:ct_string("Remove {@usn6:True[..'s_str'][..01]}.#usn7!,(_usn4 {#usn7:False[`2esn`..#usn8],#usn8:`5esn`[`1esn`..`1esn`]})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})-[#usn7?:@usn6 *00..]->(_usn3 :_usn4:usn1{@usn5:$@usn6 In $`5esn` In $usn2,#usn7:$0[0X0123456789ABCDEF..$#usn7]}).`3esn` Unwind `1esn`(Distinct 0.0[999..],9e0 Ends With $`7esn`) Ends With (`7esn` {`8esn`:Count ( * ) =~Count(*)})-[`8esn`?:#usn7|:_usn4{usn2:7[$`4esn`..123456789]}]->(#usn8 :usn2:@usn6{`5esn`:00 Ends With $_usn4 Ends With $`2esn`,usn2:#usn7 Starts With 0 Starts With 12})-[_usn3?:`2esn`|usn2 *010{`6esn`:#usn7 Ends With `4esn` Ends With @usn5}]->(`1esn` :``{`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]}) Ends With (#usn7 :`2esn`:`3esn`)<-[`2esn`?*..]->(:#usn8{`5esn`:0 Contains 12e12}) As usn1 With  1000 Contains $#usn7 Contains `6esn`,All(@usn5 In $#usn8 Is Null Is Null Where 's_str'[..0.0][..$`4esn`]) Is Null Is Null Order By $123456789 Ends With .e1 Ascending Skip $`3esn` Contains 0X0123456789ABCDEF Contains 00 Limit $_usn3 =~$`3esn` =~0x0 Where $usn2[..12.0];"),
    octest:ct_string("With Distinct *,$`7esn` Ends With $@usn5 As usn2,$@usn6 Starts With usn2 Starts With usn2 As #usn8 Skip 0.e0[..#usn8][..Null] Limit 00 Starts With _usn3 Where $@usn6 Contains 07 Contains 0.e0 With  $usn2[$123456789..123.654][$`5esn`..'s_str'],@usn6[$`8esn`][12.e12] As @usn5,$7[.12] As _usn3 Order By @usn5 Contains 01 Contains 12 Ascending Limit $7[.12] Where $usn1[_usn4..][usn2..] Merge (`7esn` {usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3})<-[{@usn5:$123456789 Ends With .e1,#usn8:0x0 =~_usn4}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})-[#usn8?]->(:`4esn`:#usn8{_usn4:'s_str' In \"d_str\" In 123456789,`2esn`:0.12 Ends With $usn1 Ends With $@usn5});"),
    octest:ct_string("Create usn1=((#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]})),`4esn`=((usn2 :`7esn`{@usn5:usn1[$`3esn`..$999][True..False],`8esn`:$`5esn` Is Null Is Null})) Optional Match #usn7=((`1esn` {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})<-[:_usn3|:`4esn`{_usn4:$`3esn` =~$`6esn` =~`8esn`,`5esn`:0X7[0e0..]}]-(:`8esn`)<-[:#usn7|:_usn4 *0Xa]-(usn1 :_usn3{_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"})),@usn5=(`4esn` :`1esn`{`8esn`:12 Ends With .e12 Ends With $7,`8esn`:0.0[12...12]})<-[`2esn` *12..0xabc{`6esn`:$123456789[0.0..],@usn5:999[$`6esn`]}]-(`7esn` {`8esn`:0X0123456789ABCDEF In $1000 In $`3esn`})-[usn1{`7esn`:``[Count(*)..][@usn5..]}]->(`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}) Where @usn5[..True][..0X7] With Distinct Extract(#usn7 In 01234567[$`3esn`..] Where 0xabc[$@usn5])[All(`4esn` In 's_str'[12..'s_str'] Where $_usn4[12e12][`4esn`])][(`6esn` :`5esn`)<-[:``|:_usn4 *0Xa]->(`7esn` :`2esn`:`3esn`)] As @usn5,12 Is Null Is Null As #usn7 Limit 0.12 Starts With {`1esn`:@usn6[..0xabc][..$#usn7]} Starts With {`3esn`:`8esn`[1000..$7][$`7esn`..`2esn`],_usn4:\"d_str\" Is Null Is Null} Where 12[..9e0][..999];"),
    octest:ct_string("Optional Match `7esn`=(`2esn` )<-[:_usn3|:`4esn`{_usn4:$`3esn` =~$`6esn` =~`8esn`,`5esn`:0X7[0e0..]}]-(:`6esn`:`7esn`{`3esn`:`8esn`[$``]}),`1esn`=((`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]})) Where Null[01234567][01234567] Union All Unwind 123.654[`5esn`] As @usn5 Create usn2=(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})-[?:#usn7|:_usn4]->(`` :#usn7$0)-[`2esn` *0X0123456789ABCDEF..{usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3}]->(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]}),(`8esn` {`3esn`:12e12 Is Not Null})-[_usn4?:_usn4|:@usn5 *123456789..999{`2esn`:@usn5 In $`6esn`}]->(`1esn` {`4esn`:$`7esn`[$usn1..][0.0..],`1esn`:$123456789[..0x0][..`4esn`]})-[`1esn`:`1esn`{``:_usn3[...e1],`2esn`:.12[`1esn`..][$`3esn`..]}]-(`7esn` :_usn4:usn1) Union All Remove `8esn`(Distinct 0X0123456789ABCDEF[..usn1]).`3esn`?,Extract(`4esn` In `6esn`['s_str'..][010..] Where #usn8[$#usn8..]).`8esn`! With  Filter(_usn4 In usn1 Contains False Contains `` Where 0.12 Contains $`2esn` Contains $_usn4) Is Null As usn2,$`7esn` Ends With $@usn5,9e1 Contains $`3esn` Contains 01234567 As @usn5 Order By Filter(_usn4 In usn1 Contains False Contains `` Where 123456789 Is Null) Contains (:``{#usn8:$`2esn`[..`2esn`]})-[@usn5?:@usn6$_usn3]->(:_usn4:usn1{`1esn`:123456789 Starts With `2esn` Starts With .0,@usn6:12.e12 Contains `5esn`})-[*{`2esn`:$1000[01234567]}]-(_usn4 :`4esn`:#usn8{#usn7:1e1[@usn5..]}) Contains _usn4(@usn6[`5esn`..$`3esn`],9e1 Starts With _usn3 Starts With `4esn`) Ascending,[@usn6 In @usn5 In $`6esn` Where $usn2 Is Not Null|$`6esn`[..0X0123456789ABCDEF]][`5esn`(Distinct 0X7 In $@usn5 In 9e0,0x0)..] Desc Skip [usn1 In 00 Starts With _usn3 Where False[.e1..Null]|1000[0.0][Null]][Filter(usn2 In 1000 Contains 0.e0 Where $`7esn` Ends With $`2esn` Ends With $usn1)..][Single(usn2 In 1000 Contains 0.e0 Where 0e0 Is Not Null Is Not Null)..] Remove None(#usn8 In $`5esn` Is Null Is Null Where 01234567 Ends With 12.0 Ends With 0X7).`2esn`?,[9e0 =~$`5esn`]._usn3!,(_usn4 )<-[#usn7? *00..]->(`4esn` :`1esn`{`8esn`:12 Ends With .e12 Ends With $7,`8esn`:0.0[12...12]})-[@usn5?:`3esn`|:`4esn`{`7esn`:Count(*) In 01 In .0,`6esn`:$123456789[..0.12][..#usn7]}]->(`5esn` :`8esn`).`1esn`;"),
    octest:ct_string("Optional Match `8esn`=((usn2 {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})-[`1esn`{_usn4:`3esn` Contains 0Xa}]-(:usn2:@usn6{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8})),`4esn`=(#usn7 :@usn5)-[`4esn`:_usn3|:`4esn`{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:usn1{`8esn`:usn1 Contains $``}) Where \"d_str\" Starts With $usn1 Union Create usn2=((`5esn` :usn2:@usn6{`5esn`:0Xa In .e1 In Count(*)})),_usn4=((#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]})) Return Any(usn2 In 1000 Contains 0.e0 Where @usn6[`3esn`..][$7..])[All(#usn7 In 01234567[$`3esn`..] Where Count(*)[.e0.._usn4])..][None(usn2 In 1000 Contains 0.e0 Where True[Count(*)..][1e1..])..] As @usn6,0X0123456789ABCDEF Contains 12.e12 Contains 999 Order By 9e1[0.e0..][#usn8..] Asc,$0 =~`3esn` Asc Limit False Is Null Union Remove (:`4esn`:#usn8{@usn6:$`4esn`[$`2esn`..]})-[`5esn`:#usn8*]->({_usn3:12.e12 In $0 In Count(*)}).usn1!,None(usn1 In 00 Starts With _usn3 Where 999 Contains `7esn`).`3esn`?,_usn3:usn1 With Distinct $`4esn`[$`2esn`..] As #usn8,#usn8 In $0,Any(`6esn` In 0X7 =~`` Where 0X7[0e0..]) Contains Single(`4esn` In `6esn`['s_str'..][010..] Where @usn6[`3esn`..][$7..]) As #usn7 Skip $@usn5 =~$`` =~$usn2 Limit `8esn` Ends With 999 Ends With 9e0;"),
    octest:ct_string("Create (((`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]})-[_usn4?:`5esn`|`1esn`]-(@usn5 {``:12[usn1][True],``:$`5esn` In `2esn` In $12})<-[`` *0xabc]->(`7esn` :`2esn`:`3esn`{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}))),`6esn`=(:`3esn`:`1esn`{_usn4:`1esn`[@usn6..$123456789],`4esn`:$usn2[..12.0]})<-[``?:@usn6]-(`6esn` :`3esn`:`1esn`{`7esn`:7 In 0xabc})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]}) Remove [`3esn`[..7][..12e12]].`2esn`?,(`7esn` :#usn8)-[`4esn`:`4esn`|:`7esn`{`3esn`:Count(*)[`7esn`..$12],_usn3:$999[$1000]}]-(`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[?{`3esn`:`6esn` =~01234567 =~0Xa,@usn5:0.e0[9e1..][0.0..]}]->(`2esn` {#usn8:12.e12[0e0..7]})._usn4? Union All Match @usn6=((:`7esn`{`2esn`:`` Starts With @usn5,usn2:$`2esn` Starts With .e0 Starts With 12.0})-[`6esn`? *00..{`8esn`:$`2esn`[123456789..][00..],`7esn`:123.654 Contains #usn8}]->(:_usn3{@usn6:$`7esn` Is Null Is Null})),((({_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999})<-[@usn6?:`6esn`*..]-(_usn3 :usn2:@usn6)-[usn1?:`2esn`|usn2 *123456789..999]-(`3esn` :usn2:@usn6))) Where #usn7 Ends With 9e1 Optional Match #usn7=(:#usn7{#usn8:0.12 Contains $`2esn` Contains $_usn4,`2esn`:$`5esn` Starts With _usn3 Starts With @usn5})<-[:@usn5|`8esn`*..]-(`2esn` :usn1{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})-[?:usn1|`3esn` *999..{_usn4:$999[12.0..],usn1:0[usn2..]}]->(:usn2:@usn6{@usn5:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:.12 Ends With $`4esn` Ends With Count(*)}) Match (((@usn6 {#usn7:False[`2esn`..#usn8]})-[? *010]-(`8esn` :@usn5)<-[#usn8?{`5esn`:Null[01234567][01234567]}]->(`6esn` :@usn6:`7esn`{@usn5:True[0x0][@usn6],`5esn`:Null Starts With _usn4 Starts With `6esn`}))),`8esn`=((_usn4 :`3esn`:`1esn`{`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]})) Where Count ( * ) =~Count(*);"),
    octest:ct_string("Match (((:`7esn`{#usn8:07 In 0 In 's_str',`6esn`:_usn3 =~00})-[`5esn`?:``|:_usn4]->(:#usn8{#usn7:12e12 Ends With 010 Ends With .0})<-[`3esn`{`7esn`:010 =~`6esn`,``:$usn2 =~$_usn4 =~`5esn`}]->({_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"}))) Where .0 Starts With `2esn` Starts With `6esn`;"),
    octest:ct_string("Remove {`5esn`:0e0 =~_usn4}.usn1?,[usn1 In 00 Starts With _usn3 Where False[.e1..Null]].`4esn`? With  *,0 Is Not Null Order By 07[`6esn`..][`5esn`..] Desc,_usn3[`3esn`][False] Ascending,Extract(usn2 In 1000 Contains 0.e0) Ends With Single(usn1 In 0x0[..`4esn`] Where 12.e12 Contains `5esn`) Ends With Single(usn1 In 00 Starts With _usn3 Where $0[01234567..00][$`2esn`..$@usn6]) Desc Where $#usn7 In .e1 In 01 Union All Create (`4esn` :`2esn`:`3esn`{`1esn`:123456789[1000]})-[`1esn`:usn2|#usn8 *1000..]-(:`5esn`{`3esn`:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:0e0 =~_usn4})-[`1esn`:`5esn`|`1esn` *..7{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]}]->(usn2 :@usn6:`7esn`),`4esn`=({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(`4esn` :`6esn`:`7esn`{`8esn`:0X7[..12e12]})-[?:@usn6{`8esn`:12 Ends With .e12 Ends With $7,`8esn`:0.0[12...12]}]-(`3esn` :``) Delete (`6esn` {@usn6:9e0 Contains `8esn`})<-[`5esn`:usn1|`3esn` *010{`2esn`:`6esn` =~01234567 =~0Xa}]-(usn2 {`7esn`:0e0 Is Null Is Null,usn2:`4esn` =~123456789})<-[ *00..{`3esn`:12 Ends With 01234567,`4esn`:00[``..][$`4esn`..]}]->(`2esn` :``)[[999[``..][Null..],usn1 In 1000 In $`5esn`,`5esn`[.e1][0Xa]]] Create ((_usn4 {`8esn`:9e1 In 01 In 999}));"),
    octest:ct_string("Remove None(usn1 In 0x0[..`4esn`] Where $usn1[0.12..]['s_str'..]).@usn6?,Any(usn1 In 0x0[..`4esn`] Where $1000 Is Null Is Null).``?,[`6esn` In 0X7 =~`` Where 123456789 =~_usn4 =~$0]._usn3! Union Optional Match _usn3=((:`7esn`{`2esn`:0Xa In .e1 In Count(*),`8esn`:.12[`1esn`..][$`3esn`..]})<-[@usn5?:_usn3|:`4esn` *..0x0]->(#usn8 {usn2:7 Contains 9e1})) Create ({`4esn`:#usn7 Starts With 0 Starts With 12,`4esn`:0x0 =~_usn4})-[ *..0x0]->(#usn8 {usn2:7 Contains 9e1}) Union All Return *,1.e1[Null][12.e12] As ``,Filter(@usn6 In @usn5 In $`6esn` Where .12[`1esn`..][$`3esn`..]) As _usn3 Order By 0.e0[`6esn`...e0][9e12...e12] Descending,_usn3 In .e1 In $12 Asc Skip [$`4esn`[9e1..][0..]][Any(`4esn` In $`8esn` Starts With 1000 Where 0.e0[9e1..][0.0..])..Single(#usn8 In $`5esn` Is Null Is Null Where 1000 Ends With 1000 Ends With $`4esn`)] Limit 123456789 =~_usn4 =~$0 With Distinct *,[$`7esn` Ends With `1esn` Ends With True,$999[12.0..]][`7esn`(Distinct $`2esn`[$`2esn`..])..][Any(usn1 In $123456789 Contains usn2 Where 0.e0 Ends With 12 Ends With $7)..] Limit Single(@usn5 In .12[#usn7][$`8esn`] Where `6esn` =~$_usn3) Ends With {`2esn`:.12 Ends With `1esn` Ends With $`1esn`,`5esn`:9e12[@usn6..$``][#usn8..Count ( * )]} Ends With (:_usn3{`2esn`:$`5esn` Is Null,@usn6:#usn7 Starts With `1esn`})<-[``?:@usn6]-(:`2esn`:`3esn`{`6esn`:01 In _usn3 In 12,_usn3:$`3esn` =~$`6esn` =~`8esn`})<-[:_usn4|:@usn5 *..0X7]->(`4esn` {`7esn`:.e0[..999][..0X7]});"),
    octest:ct_string("Create (({`5esn`:_usn3 Contains @usn6 Contains 1.e1,`7esn`:$12[01..][1.e1..]})-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})<-[usn1?{#usn7:9e12 Is Not Null Is Not Null,usn2:`3esn` =~0.0 =~$``}]->(`5esn` :`3esn`:`1esn`{`6esn`:$1000[.e0..]})),_usn4=(@usn5 {`1esn`:0[usn2..]})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`5esn` {_usn4:0X7 =~``})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(:`6esn`:`7esn`{`3esn`:`8esn`[$``]}) Return `8esn`[_usn3..$#usn7],({`1esn`:@usn6})<-[_usn4?:_usn4|:@usn5 *123456789..999{`2esn`:@usn5 In $`6esn`}]->(:`3esn`:`1esn`{`1esn`:0.0[1000..][.e1..]}) Is Null Is Null As `3esn` Skip `7esn` Starts With $usn2 Starts With .e0 Limit 00 Is Not Null Is Not Null Union Merge (((usn2 :#usn8{_usn3:$_usn3[..Count ( * )][..@usn5]})-[`1esn`:`1esn`{``:_usn3[...e1],`2esn`:.12[`1esn`..][$`3esn`..]}]-(`7esn` :_usn4:usn1)<-[@usn5:#usn8{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]-(#usn8 :_usn3))) With Distinct None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where _usn3[...e1]) In (:_usn4:usn1{``:123456789 Starts With `2esn` Starts With .0,`5esn`:``})<-[usn2?:usn2|#usn8{`6esn`:$123456789[$`2esn`][True],@usn5:$`3esn` =~$`6esn` =~`8esn`}]-({`5esn`:0e0 =~_usn4})-[_usn4:_usn3|:`4esn` *1000..{#usn8:$999 Ends With $`3esn` Ends With `8esn`}]->(#usn7 :`7esn`{`4esn`:.12 Starts With .12 Starts With `3esn`}) As _usn3 Skip `2esn` Is Not Null Is Not Null Limit None(usn1 In 0x0[..`4esn`] Where $`2esn` Contains usn1 Contains `2esn`)[..Extract(`6esn` In 0X7 =~`` Where $usn2 Contains 12.e12 Contains 00|$#usn8 Ends With 1000 Ends With .0)][..[@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where #usn7 Ends With 9e1]] Union All Optional Match (#usn7 :`6esn`:`7esn`)<-[`3esn`?:_usn3|:`4esn`]->(:`1esn`{_usn4:$_usn3[Null]})-[ *..0X7]->(`5esn` :_usn4:usn1) Where 0.12 In $7 In 0;"),
    octest:ct_string("Create @usn5=({`5esn`:Count(*)[..`3esn`],usn1:01234567 Ends With 0x0})-[?{@usn5:12.e12['s_str'],`1esn`:_usn3 Ends With 12e12 Ends With .e0}]-(`8esn` :`7esn`)<-[?:usn2|#usn8{#usn8:$@usn6 Is Null Is Null,_usn4:_usn4 Starts With $@usn6 Starts With #usn7}]-({_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"}),((:`3esn`:`1esn`{`1esn`:0.0[1000..][.e1..]})-[`3esn`?:`3esn`|:`4esn` *..01{_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`}]->(:`3esn`:`1esn`{_usn4:`1esn`[@usn6..$123456789],`4esn`:$usn2[..12.0]})-[``? *..01]->(`6esn` {`8esn`:.12 =~.12 =~1e1})) With Distinct {usn1:'s_str'[12..'s_str'],#usn7:07[`6esn`..][`5esn`..]} As `1esn` Limit {`7esn`:.e0 Contains #usn7 Contains $#usn8}[(:usn2:@usn6{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8})-[? *999..]-(:`4esn`:#usn8{@usn6:$`4esn`[$`2esn`..]})..None(`6esn` In 0X7 =~`` Where 12.e12['s_str'])][(`5esn` :`7esn`)-[?:`8esn`|:usn1 *..0X7{@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00}]->(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})..({`7esn`:12e12 Ends With 010 Ends With .0})<-[?:`5esn`|`1esn`{_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12}]-({@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]})];"),
    octest:ct_string("Return Distinct Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where usn1 Starts With $#usn7 Starts With `5esn`) Contains @usn5(Distinct 123456789 Starts With `2esn` Starts With .0,123456789 Starts With #usn7 Starts With `6esn`) Contains None(#usn8 In $`5esn` Is Null Is Null Where $#usn8 In .e12 In 9e1),9e1[010..] As `6esn` Order By $`2esn`[$usn2..][123456789..] Ascending,{@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`} In (:_usn3{`6esn`:.e12[..0.e0][..$`1esn`],`8esn`:7 In 0xabc})-[#usn7:`1esn` *07..]->(:`4esn`:#usn8{_usn4:'s_str' In \"d_str\" In 123456789,`2esn`:0.12 Ends With $usn1 Ends With $@usn5}) In All(@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7) Asc Limit 9e1 Starts With `1esn` Starts With 0Xa Create `5esn`=((:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[`6esn`:``|:_usn4 *..01]->(`5esn` {_usn4:0X7 =~``})-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(usn2 :usn1{``:9e12 Ends With 0X0123456789ABCDEF Ends With #usn7})),((#usn8 {_usn3:`6esn` =~01234567 =~0Xa,_usn4:$`5esn` Is Null Is Null})-[#usn7:`1esn` *07..]->(#usn8 {`2esn`:$`5esn` Contains Count(*) Contains #usn7,_usn4:Null Starts With $`7esn` Starts With `2esn`})) Union All Merge `8esn`=(:`8esn`) On Match Set usn2+=.e1 Ends With _usn4 Ends With @usn5,@usn5+=_usn3 In .e1 In $12,Extract(`4esn` In `6esn`[1e1..] Where $`7esn` Ends With `1esn` Ends With True).`` =010 In @usn6 Return Distinct Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where usn1 Starts With $#usn7 Starts With `5esn`) Contains @usn5(Distinct 123456789 Starts With `2esn` Starts With .0,123456789 Starts With #usn7 Starts With `6esn`) Contains None(#usn8 In $`5esn` Is Null Is Null Where $#usn8 In .e12 In 9e1),9e1[010..] As `6esn` Order By $1000 Contains $`3esn` Desc,(`7esn` :@usn6:`7esn`)<-[:``|:_usn4{`8esn`:0 Ends With $7 Ends With _usn3}]-(usn1 {#usn7:Count ( * )[@usn6..0x0]})<-[`8esn`]->(#usn8 ) Contains usn2(Distinct $1000[01234567],00 In 0.12 In `5esn`) Contains Any(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where usn2[$`1esn`...0]) Ascending,[$`3esn` Starts With 01234567 Starts With $1000] Starts With `4esn` Starts With [$`2esn`[..7][..$usn1]] Desc Skip $`7esn` =~.e1;"),
    octest:ct_string("Remove Single(`4esn` In $`8esn` Starts With 1000 Where $`8esn`[..$``]).`4esn`!,count(Distinct $#usn8,False Is Not Null Is Not Null)._usn3?,Any(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where `7esn` Starts With $`` Starts With $#usn7).`3esn`? Union Merge `1esn`=((_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8})-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})) On Create Set Extract(`4esn` In `6esn`['s_str'..][010..] Where 01 Ends With .e0|00[7..$123456789]).usn1? =usn2[`3esn`][_usn3],usn2+=[usn1[..@usn5][...e0]] In Extract(`6esn` In 0X7 =~`` Where $1000 Contains $`3esn`|12 Ends With 01234567) In {`3esn`:$`5esn` In `2esn` In .0,``:0e0 Is Null Is Null} On Create Set usn1+=`4esn` Ends With 123456789 Ends With @usn5,[$123456789[0.0..],07 In `5esn` In 12e12,$`3esn` Starts With 01234567 Starts With $1000].`3esn`! =\"d_str\" =~`3esn` =~0Xa,Any(_usn4 In usn1 Contains False Contains `` Where False In 123456789 In $0)._usn3 =`` =~12 =~$#usn7 Detach Delete $_usn3 =~`7esn` =~$_usn4,`7esn` Starts With $`` Starts With $#usn7,$0 =~`3esn` Return Distinct $_usn3[$`4esn`..Null] Skip 123456789 Starts With `2esn` Starts With .0;"),
    octest:ct_string("Return Distinct *,01234567 Is Null Is Null Order By 0e0 =~Count(*) =~0Xa Descending Skip [$1000 Is Null Is Null] Is Null Limit Extract(@usn6 In @usn5 In $`6esn` Where $`5esn` Contains $@usn6|$0[7..][Null..])[[`6esn` In 0X7 =~`` Where 9e1[0.e0..][#usn8..]]] Optional Match `1esn`=(:`8esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}),((#usn8 :@usn6:`7esn`{@usn5:1e1[@usn5..]})) Where $`3esn` =~$`7esn` =~False With  *,`7esn`[...e1][..\"d_str\"],12e12[0.e0..True][0.12..0.0] As #usn7 Order By 0xabc[12.e12..`1esn`] Ascending,12.e12 In $1000 Ascending,[`6esn` In 0X7 =~`` Where 0.12[Null..]] Is Null Is Null Ascending Limit Extract(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null|12.e12 Ends With 01 Ends With .e1)[00..] Where 0.e0[..#usn8][..Null] Union All Unwind (#usn7 :#usn8)-[`6esn`:`4esn`|:`7esn` *..0x0]->({`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})[Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`])][Filter(`4esn` In `6esn`['s_str'..][010..] Where @usn6[$`7esn`])] As `4esn` Union Merge ((#usn8 :@usn6:`7esn`{@usn5:1e1[@usn5..]})) On Create Set usn1+=Single(`6esn` In 0X7 =~`` Where 12.0[..$7][..999]) Starts With {_usn3:0.12 Is Null Is Null,`1esn`:9e12[0.0..12.e12]} Starts With (`8esn` :@usn5)-[`6esn`?:_usn3|:`4esn` *12..0xabc]-(usn2 :#usn8{`3esn`:123.654[@usn5]})<-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(#usn8 :`5esn`{usn2:.e1 Starts With 0.0 Starts With `6esn`,#usn8:9e12 =~01 =~$`7esn`}) Detach Delete $#usn7[...e12][..$7],({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})<-[#usn8?:_usn4|:@usn5 *..0x0]-(#usn8 :`1esn`{#usn7:1e1[`6esn`..]}) =~`5esn`(Distinct 0X7 In $@usn5 In 9e0,0x0) Create `8esn`=(:`8esn`);"),
    octest:ct_string("With  Extract(@usn6 In @usn5 In $`6esn` Where 9e0 =~$`5esn`|`2esn`[$`1esn`..][$_usn3..]) =~Extract(@usn6 In @usn5 In $`6esn` Where .12[`1esn`..][$`3esn`..]|Count ( * ) =~Count(*)) As _usn4 Where $usn1[0.12..]['s_str'..] Unwind [1.e1 =~$_usn4,.12 Contains $`4esn` Contains $`6esn`] Ends With Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn8 In .e12 In 9e1) As @usn6 Union All Create ((:`4esn`:#usn8{`7esn`:#usn7 Starts With 0 Starts With 12})-[{`5esn`:.e1[..$``][..0X0123456789ABCDEF]}]->(_usn3 {`5esn`:0.12 Contains .e1})<-[@usn6:`3esn`|:`4esn`*]->(`6esn` :`5esn`)),@usn6=((`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})) Match #usn8=({_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"})-[`4esn`:`4esn`|:`7esn`{`3esn`:Count(*)[`7esn`..$12],_usn3:$999[$1000]}]-(`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]}),(((`3esn` :`8esn`)-[`5esn`{usn2:`6esn`['s_str'..][010..]}]->(_usn3 :usn2:@usn6)-[:`7esn`|`2esn` *..0X7{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]->(`5esn` {usn2:`5esn`[.e1][0Xa],@usn5:$usn1 In 1000 In $#usn7}))) Where 9e0 Starts With `6esn`;"),
    octest:ct_string("Delete $123456789 =~$#usn8 =~$#usn8,Count(*)['s_str'..`1esn`],[@usn5 In 0X7 =~.0 =~\"d_str\"|#usn7 Starts With `1esn`][Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where `7esn`[...e1][..\"d_str\"])..][`2esn`(Distinct 12e12[Null],0xabc[12.e12..`1esn`])..] Delete {`3esn`:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:0e0 =~_usn4}[{`4esn`:$7 Ends With 12.0 Ends With 0xabc,_usn4:0X0123456789ABCDEF[.e0..$`4esn`]}..][Extract(`4esn` In `6esn`['s_str'..][010..] Where $999 Ends With $`3esn` Ends With `8esn`)..],`3esn`(Distinct 123456789 =~$123456789)[..(usn1 :`6esn`:`7esn`)-[`2esn`? *0..010]->(:usn1{`6esn`:7 Contains 9e1,#usn8:`7esn`[...e1][..\"d_str\"]})][..(:`4esn`:#usn8)<-[_usn4:`7esn`|`2esn`]-(`5esn` {`8esn`:0.0[12...12]})<-[#usn7:`3esn`|:`4esn` *00..]-(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})],Extract(`4esn` In `6esn`['s_str'..][010..] Where 07 In $7 In 12|$#usn8)[{`6esn`:12[usn1][True],`3esn`:$@usn6[..$usn1]}..][{`8esn`:00}..];"),
    octest:ct_string("Match `6esn`=(`6esn` :`5esn`),(@usn6 :`5esn`{_usn3:010[$`8esn`..][0..],_usn3:`2esn` Is Not Null Is Not Null}) Where 0x0 Union All With  [$#usn7[True..][$0..]][..(usn1 :#usn8)-[:`1esn` *010{`2esn`:$_usn3[9e1][$_usn4],`7esn`:`7esn`[...e1][..\"d_str\"]}]->(`7esn` :#usn8)<-[:#usn7|:_usn4{usn2:`5esn`[Count ( * )..][\"d_str\"..],`7esn`:.e1 In $@usn6 In 999}]-({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})][..[@usn5 In $#usn8 Is Null Is Null Where 12.e12[@usn5..123.654]]] Order By .e12 =~0.0 =~9e0 Desc,010 =~$usn2 =~1e1 Desc,#usn8(0X7 In 's_str' In $`1esn`,$0 Is Not Null)[usn1($`1esn` Is Null Is Null,$0[0X0123456789ABCDEF..$#usn7])] Descending Where .0 Is Null Is Null Detach Delete 0xabc Contains Null Contains 9e12,.12 Starts With 0Xa,`6esn` In 1000 In 01234567;"),
    octest:ct_string("Merge `7esn`=((`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]})<-[_usn3?:``|:_usn4 *0xabc{`6esn`:$#usn8 Ends With 1000 Ends With .0,`7esn`:010 =~`6esn`}]-(:usn1{#usn7:12[0X7..@usn6]})-[`5esn`?:_usn4|:@usn5]-(usn1 :`7esn`)) Merge (((`3esn` )-[?:#usn7|:_usn4]-(usn2 :#usn8{_usn3:$_usn3[..Count ( * )][..@usn5]})-[*{`2esn`:$1000[01234567]}]-(_usn4 :`4esn`:#usn8{#usn7:1e1[@usn5..]}))) On Match Set `5esn` =01234567 Starts With $_usn4,#usn7 =\"d_str\" =~`6esn` =~0Xa,{usn2:_usn3 Contains @usn6 Contains 1.e1,usn2:$`6esn`[`1esn`..][.e0..]}.usn2? =9e12 Contains .e0 Contains .e0 Union All Return Distinct *,[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`|$123456789 Ends With .e1] Contains [@usn6 In @usn5 In $`6esn` Where $_usn4[$`8esn`..][07..]|$1000 In $`7esn` In $7] Contains (`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})-[``?:@usn6{#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}]->(@usn5 :`3esn`:`1esn`{`3esn`:$`5esn` Is Not Null,`2esn`:9e1[0.e0..][#usn8..]}) Skip ({`5esn`:0.12 Contains .e1})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:@usn5{#usn7:1e1[@usn5..]})<-[?:`6esn` *01234567..12{`7esn`:7 In 0xabc}]-(#usn7 :usn2:@usn6{`1esn`:$usn2 Contains 12.e12 Contains 00}) =~None(usn1 In 00 Starts With _usn3 Where False[.e1..Null]) Return Distinct *,{`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]}[Extract(_usn4 In usn1 Contains False Contains `` Where `5esn`[.e1][0Xa])..] Order By [@usn5 In $#usn8 Is Null Is Null Where 12.e12[@usn5..123.654]|#usn7 Starts With `1esn`][[@usn5 In .12[#usn7][$`8esn`] Where 0.12 In $`4esn` In `6esn`|$`1esn` Starts With @usn6]..][$`1esn`..] Ascending;"),
    octest:ct_string("Optional Match `6esn`=({`8esn`:$@usn5 Contains 01,`2esn`:123.654 Contains #usn8})-[{`5esn`:.e1[..$``][..0X0123456789ABCDEF]}]->(_usn3 {`5esn`:0.12 Contains .e1})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]}),_usn4=((#usn8 {@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null})) Return *,False In `3esn`,12.e12[$`7esn`] Order By $`1esn` Ends With _usn4 Ends With `3esn` Descending Merge #usn8=(:@usn5{usn1:Count(*)[True],@usn6:123456789[$#usn7..]})<-[#usn7]-(`7esn` :`2esn`:`3esn`)-[?:``|:_usn4 *..0X7]->(`4esn` {`6esn`:$12[..``][..$7]}) On Match Set `2esn`+=123.654 In \"d_str\" In $_usn3 Union Delete `6esn`(Distinct 12.0[0Xa][00]) In {`7esn`:12e12 Ends With 010 Ends With .0} In Extract(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6|#usn7 Is Not Null Is Not Null),$@usn6[..$#usn7][..12.e12],.e0[`4esn`..`4esn`][0.0..$0] Delete 12.e12 In $1000,{_usn3:0.12 Is Null Is Null,`1esn`:9e12[0.0..12.e12]} Ends With {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]},$999 Ends With $`3esn` Ends With `8esn`;"),
    octest:ct_string("Remove Extract(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 0.12 Ends With $usn1 Ends With $@usn5|0X0123456789ABCDEF[.e0..$`4esn`]).`7esn`? Delete `8esn`[_usn3..$#usn7],$`6esn` Is Not Null Is Not Null,Extract(@usn6 In @usn5 In $`6esn` Where 9e0 =~$`5esn`|`2esn`[$`1esn`..][$_usn3..]) =~Extract(@usn6 In @usn5 In $`6esn` Where .12[`1esn`..][$`3esn`..]|Count ( * ) =~Count(*)) Merge `3esn`=(({`5esn`:0.12 Contains .e1})-[usn1?:`2esn`|usn2 *123456789..999]-(usn1 :`7esn`{`1esn`:$@usn6 Contains 07 Contains 0.e0})-[:@usn5|`8esn` *123456789..999{usn1:9e12 Is Not Null Is Not Null}]-(#usn7 :`5esn`)) Union All With Distinct *,({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})<-[#usn8?:_usn4|:@usn5 *..0x0]-(#usn8 :`1esn`{#usn7:1e1[`6esn`..]}) =~`5esn`(Distinct 0X7 In $@usn5 In 9e0,0x0),\"d_str\" =~`6esn` =~0Xa As `4esn` Create `4esn`=((:`7esn`{``:$`1esn` Starts With @usn6})),`1esn`=((@usn5 :@usn6:`7esn`{`6esn`:$0[01234567..00][$`2esn`..$@usn6],`3esn`:`6esn` Starts With $@usn6}));"),
    octest:ct_string("Merge #usn7=((_usn3 :_usn4:usn1{`2esn`:$`6esn`[$@usn6..]})) On Match Set @usn6+=(usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1})-[#usn8? *0xabc{`5esn`:0X7[12]}]->(usn1 {`2esn`:True =~@usn5 =~$`1esn`,`2esn`:`6esn`[1.e1..$#usn7][.e0..True]})[Any(_usn4 In usn1 Contains False Contains `` Where 0.12 In 01 In $`3esn`)..Single(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $123456789[..0x0][..`4esn`])][All(`6esn` In 0X7 =~`` Where $`3esn` =~Null)..{`8esn`:0xabc Ends With $#usn7 Ends With #usn8,usn2:usn1[$`3esn`..$999][True..False]}] On Match Set (usn1 :#usn7)-[?:usn2|#usn8{`2esn`:@usn5 In 0X0123456789ABCDEF,`1esn`:@usn6[`5esn`..$`3esn`]}]->(`4esn` {`7esn`:.e0[..999][..0X7]}).usn2 =$`3esn`[`2esn`...e0] Create ``=((`6esn` :`4esn`:#usn8{_usn4:12.e12[...0][..0x0]})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(usn1 :_usn3)) With  $`8esn` In \"d_str\" In 9e12 Order By 0X0123456789ABCDEF Is Null Is Null Descending Skip Any(@usn5 In $#usn8 Is Null Is Null Where .e1 In $@usn6 In 999) In None(usn1 In 0x0[..`4esn`] Where $123456789[..0x0][..`4esn`]);"),
    octest:ct_string("Match `1esn`=(:@usn5{usn1:Count(*)[True],@usn6:123456789[$#usn7..]})<-[#usn7]-(`7esn` :`2esn`:`3esn`)-[?:``|:_usn4 *..0X7]->(`4esn` {`6esn`:$12[..``][..$7]}),`1esn`=(((`7esn` :`2esn`:`3esn`)<-[@usn5?:#usn8 *999..{`1esn`:$@usn5 =~$`` =~$usn2}]->(`2esn` {`3esn`:$999[12.0..]})-[? *00..{#usn8:12.e12[...0][..0x0],`7esn`:$`4esn`[9e1..][0..]}]-(:usn1{`6esn`:7 Contains 9e1,#usn8:`7esn`[...e1][..\"d_str\"]}))) Create ((`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})),#usn7=((#usn7 :`5esn`)<-[:`2esn`|usn2 *07..]-({`7esn`:`6esn` Starts With $@usn6,``:`6esn` =~$_usn3})<-[`1esn`?:`1esn` *01234567..12]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})) Match `8esn`=((@usn6 {_usn3:$_usn4[$`1esn`]})-[`5esn`?:_usn4|:@usn5]->({`5esn`:Count(*)[..`3esn`],usn1:01234567 Ends With 0x0})-[usn2 *..0X7{#usn7:$_usn4[`3esn`][0]}]->({#usn7:Count ( * )[@usn6..0x0]})) Where 's_str'[12..'s_str'] Union Return $`5esn` In `2esn` In $12 As @usn6,usn1[Count ( * )..$usn1] As usn1,[0Xa[$``..][01234567..]] Contains `3esn`(Distinct _usn3 In .e1 In $12) Contains (`5esn` :`8esn`{`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null})<-[:@usn5|`8esn`*..]-(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})-[``?{usn2:@usn5 In 0X0123456789ABCDEF,usn2:9e1 Is Null Is Null}]->(`8esn` :_usn3{``:12.e12['s_str']}) As @usn6 Skip @usn6 Starts With `7esn` Starts With Null Limit $`2esn`[$123456789..$`1esn`][0Xa..$``] Union All Create (((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})-[:`7esn`|`2esn` *..0X7{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]-(`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})-[`4esn`? *00..]-(:`4esn`:#usn8{@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]}))) Match (usn2 :#usn8{`3esn`:123.654[@usn5]})-[@usn5?:@usn6$_usn3]->(:_usn4:usn1{`1esn`:123456789 Starts With `2esn` Starts With .0,@usn6:12.e12 Contains `5esn`}),((:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[usn1?:`1esn` *0X0123456789ABCDEF..{usn2:$`4esn`[12.e12..][0.0..]}]-(#usn7 :`5esn`)) Where 1e1[..False];"),
    octest:ct_string("Return Distinct 07[07] Skip $`4esn` Contains 0Xa Limit 00[.e0..9e1] Merge (:`4esn`:#usn8{@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]});"),
    octest:ct_string("Create #usn8=((`4esn` :`7esn`{`7esn`:@usn6 Contains _usn4 Contains $`4esn`})<-[_usn3?:`2esn`|usn2 *010{`6esn`:#usn7 Ends With `4esn` Ends With @usn5}]->(#usn7 :`3esn`:`1esn`)<-[?{`4esn`:12e12[$`5esn`][07]}]-(:`1esn`{_usn4:$_usn3[Null]})) Remove {`3esn`:`1esn` Contains Count ( * ),`7esn`:01234567 =~usn1}.#usn8? Create (((@usn6 {#usn7:False[`2esn`..#usn8]})-[? *010]-(`8esn` :@usn5)<-[#usn8?{`5esn`:Null[01234567][01234567]}]->(`6esn` :@usn6:`7esn`{@usn5:True[0x0][@usn6],`5esn`:Null Starts With _usn4 Starts With `6esn`}))),`8esn`=((_usn4 :`3esn`:`1esn`{`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]})) Union All Create ``=((`6esn` :`4esn`:#usn8{_usn4:12.e12[...0][..0x0]})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(usn1 :_usn3));"),
    octest:ct_string("Match ((`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]})<-[:`2esn`|usn2 *0..010]->(`` :`1esn`)<-[ *0X0123456789ABCDEF..{#usn8:`5esn` =~0Xa,usn1:12 =~usn1 =~.e12}]->(_usn3 :_usn3)),``=((`6esn` :`7esn`)) Where $`1esn` Starts With @usn6 Union Remove All(@usn5 In $#usn8 Is Null Is Null Where 7 In 0xabc).#usn7?,({_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`})-[`2esn`? *0..010]->(usn2 {usn1:0 Is Null Is Null,`8esn`:12.0[..$7][..999]})<-[#usn8:`3esn`|:`4esn` *0..010]->(`3esn` :usn2:@usn6).`4esn`! Merge `4esn`=(_usn4 :#usn8)-[`1esn`?:`1esn` *01234567..12]-({_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}) On Create Set ``+={usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null} Is Not Null Is Not Null,@usn5+=usn1[..@usn5][...e0],`2esn`+=All(#usn7 In 01234567[$`3esn`..] Where 12[usn1][True])[..[`4esn` In `6esn`[1e1..] Where $`2esn`[..`2esn`]|_usn3 In .e1 In $12]][..{`2esn`:$usn1[1e1.._usn3][$@usn6..$#usn7]}] On Create Set _usn4 =All(@usn5 In .12[#usn7][$`8esn`] Where 0Xa Is Null Is Null)[[usn1 In 00 Starts With _usn3 Where 010 =~$usn2 =~1e1]],#usn7 =_usn3(Distinct 0.12 In 01 In $`3esn`,1.e1[0X0123456789ABCDEF..][$`5esn`..]) Ends With Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) Ends With Filter(usn2 In 1000 Contains 0.e0 Where 12e12 Ends With 010 Ends With .0) Return Distinct All(usn1 In 0x0[..`4esn`] Where .12 Starts With .12 Starts With `3esn`)[[_usn4 In usn1 Contains False Contains `` Where $usn1[0.12..]['s_str'..]|12[..True][..$`4esn`]]..][({`5esn`:0.12 Contains .e1})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:@usn5{#usn7:1e1[@usn5..]})<-[?:`6esn` *01234567..12{`7esn`:7 In 0xabc}]-(#usn7 :usn2:@usn6{`1esn`:$usn2 Contains 12.e12 Contains 00})..] As #usn8,'s_str' In \"d_str\" In 123456789,None(`4esn` In 's_str'[12..'s_str'] Where 12.0[0Xa][00]) Is Not Null;"),
    octest:ct_string("Optional Match ((`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`3esn`?:_usn3|:`4esn`]-(`4esn` {`6esn`:$12[..``][..$7]})),((_usn4 {`8esn`:9e1 In 01 In 999})) Return .e12[.12..][_usn4..] As _usn4 Order By $usn1[1e1.._usn3][$@usn6..$#usn7] Desc Skip Extract(@usn6 In @usn5 In $`6esn` Where $_usn4[`3esn`][0]|_usn3 Is Null Is Null) Is Not Null Limit Extract(@usn6 In @usn5 In $`6esn` Where 123456789 =~_usn4 =~$0) Is Null Remove Single(`6esn` In 0X7 =~`` Where 010 =~`6esn`).`2esn`?,@usn6:`6esn`:`7esn`,(:``)-[@usn5:`4esn`|:`7esn` *0X0123456789ABCDEF..{`7esn`:.e0[..999][..0X7]}]-(usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1}).`6esn`?;"),
    octest:ct_string("With Distinct `8esn`(Distinct False Contains `3esn`,9e12 =~01 =~$`7esn`)[[@usn6[`5esn`..$`3esn`],0e0 Is Not Null Is Not Null]..] Order By usn2[$`1esn`...0] Descending,None(`6esn` In 0X7 =~`` Where $usn2 Contains 12.e12 Contains 00)[[@usn6 Starts With `7esn` Starts With Null]][{`1esn`:07[`6esn`..][`5esn`..],usn1:$usn2[False..`7esn`][`7esn`.._usn3]}] Ascending,01234567 Ends With 12.0 Ends With 0X7 Ascending Skip 12e12[1000..][0x0..] Create (((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})-[:`7esn`|`2esn` *..0X7{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]-(`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})-[`4esn`? *00..]-(:`4esn`:#usn8{@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]}))) Union All Create (:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[:#usn7|:_usn4{_usn3:\"d_str\" =~`3esn` =~0Xa}]-(#usn7 {`3esn`:Count(*)[12.e12..],`3esn`:usn2 =~0x0}) Merge `5esn`=(({_usn3:12.e12 In $0 In Count(*)})<-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(`2esn` :``)-[:_usn4|:@usn5 *0xabc]-({`6esn`:.e1 Starts With 0.0 Starts With `6esn`,_usn3:$@usn6 Contains 0 Contains $`2esn`})) On Match Set `7esn` ={`4esn`:$@usn6 Contains 0 Contains $`2esn`}[[@usn5 In 0X7 =~.0 =~\"d_str\"|$`1esn` Ends With _usn4 Ends With `3esn`]..Extract(@usn5 In .12[#usn7][$`8esn`] Where $usn2 Contains 12.e12 Contains 00|9e0 Ends With $`7esn`)],@usn6 =`5esn` In $999 On Create Set (@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})-[`2esn`]-({`4esn`:$_usn3[..Count ( * )][..@usn5],#usn8:_usn3 =~00})<-[`6esn`?{`7esn`:.12 Ends With `1esn` Ends With $`1esn`,``:9e0 Starts With `6esn`}]->(:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})._usn3 =123.654 Contains `2esn`,`3esn` =Extract(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null|12.e12 Ends With 01 Ends With .e1) Ends With $0 Ends With All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`),{`6esn`:$_usn4[$`8esn`..][07..]}.@usn6! =`5esn`[.e1][0Xa];"),
    octest:ct_string("Remove Any(usn2 In 1000 Contains 0.e0 Where .e12 Contains $12 Contains 12.e12).`2esn`,[$`6esn`[$`1esn`][1000],$``[False],07[12][$`6esn`]].`5esn`!,`7esn`(`3esn`[..7][..12e12],$999 Ends With $`3esn` Ends With `8esn`).usn2? With  *,All(`6esn` In 0X7 =~`` Where #usn7 Starts With 0 Starts With 12) Starts With Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where #usn7 Contains .0 Contains .e1) As usn2 Order By All(_usn4 In usn1 Contains False Contains `` Where $`4esn`[$`2esn`..])[..Single(usn1 In $123456789 Contains usn2 Where $usn1[0.12..]['s_str'..])][..``(Distinct `1esn`[0e0..])] Asc,`4esn` =~$`3esn` =~$123456789 Ascending,$123456789[False.._usn3] Desc Skip 7[..0X7][..'s_str'] Where $123456789 Contains 01 Contains 0.12 Create ((:`4esn`:#usn8{`7esn`:#usn7 Starts With 0 Starts With 12})-[{`5esn`:.e1[..$``][..0X0123456789ABCDEF]}]->(_usn3 {`5esn`:0.12 Contains .e1})<-[@usn6:`3esn`|:`4esn`*]->(`6esn` :`5esn`)),@usn6=((`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})) Union Create ((`3esn` {`8esn`:$``[_usn4..][`7esn`..]})) Merge usn2=(((`1esn` :``{`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]})<-[?:`5esn`|`1esn` *999..]->(:``)<-[@usn6? *1000..{#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1}]-(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`}))) On Match Set #usn7:``,({#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1})<-[?:@usn5|`8esn` *..0X7]-(:usn1).`4esn` =`6esn` Starts With $`5esn`,[`6esn` In 0X7 =~`` Where 0.12[Null..]]._usn4 =Count ( * )[`3esn`..][`2esn`..];"),
    octest:ct_string("Remove [0e0].`7esn`! Detach Delete 0Xa[..$``],9e0 In 01234567 Remove {`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}.@usn5?;"),
    octest:ct_string("Remove [usn1 In 0x0[..`4esn`] Where 0.12 Contains $12 Contains `8esn`|$@usn6[_usn3..0.e0]]._usn4?,Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where \"d_str\" Is Null Is Null).`1esn` Merge `4esn`=((({`8esn`:$@usn5 Contains 01,`2esn`:123.654 Contains #usn8})-[usn2?]-(`3esn` {_usn4:12.e12 Ends With 01 Ends With .e1})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`}))) On Match Set Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where Null[..12e12][..usn1]|\"d_str\" Contains `3esn` Contains 00).#usn7? =12 Is Null Is Null On Create Set [$usn1 In 1000 In $#usn7,$#usn7 In 12.0 In 0X0123456789ABCDEF,9e0 Is Not Null]._usn3 =All(_usn4 In usn1 Contains False Contains `` Where #usn8[$#usn8..])[(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})..],Extract(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null).`1esn`! =0xabc Starts With _usn3 Union All Return Distinct 9e0 Starts With `6esn`,9e1['s_str'..1e1] As #usn7 Limit `1esn` Contains Count ( * ) Unwind $`1esn` =~$`1esn` =~#usn7 As `4esn` Merge `4esn`=(`3esn` {_usn3:@usn6 Contains _usn4 Contains $`4esn`})<-[`7esn` *..0x0]-(@usn5 :usn1)<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3}) Union All Optional Match (:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[:#usn7|:_usn4{_usn3:\"d_str\" =~`3esn` =~0Xa}]-(#usn7 {`3esn`:Count(*)[12.e12..],`3esn`:usn2 =~0x0}) Remove {`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}.`3esn`!;"),
    octest:ct_string("Unwind [_usn4 Ends With 01 Ends With $`1esn`,0e0 =~_usn4,$7[.12]][Any(`4esn` In 's_str'[12..'s_str'] Where $1000 In $`7esn` In $7)..Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0x0[..`4esn`])] As `3esn` Optional Match (`6esn` :@usn6:`7esn`{@usn5:True[0x0][@usn6],`5esn`:Null Starts With _usn4 Starts With `6esn`}),(:`1esn`{@usn6:$_usn4[$`4esn`..$#usn7][`6esn`..7],`8esn`:'s_str'['s_str'..$usn2][_usn3.._usn3]})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`}) Where Null[01234567][01234567] Optional Match ``=((`6esn` :`4esn`:#usn8{_usn4:12.e12[...0][..0x0]})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(usn1 :_usn3)),(((`2esn` :`5esn`{#usn8:$999 Ends With $`3esn` Ends With `8esn`})-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]-(@usn5 :`5esn`)<-[_usn3?:`3esn`|:`4esn` *0..010]->(_usn3 ))) Union All Delete {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`} In (:_usn3{`6esn`:.e12[..0.e0][..$`1esn`],`8esn`:7 In 0xabc})-[#usn7:`1esn` *07..]->(:`4esn`:#usn8{_usn4:'s_str' In \"d_str\" In 123456789,`2esn`:0.12 Ends With $usn1 Ends With $@usn5}) In All(@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7),None(usn2 In 1000 Contains 0.e0 Where $usn1[..$`6esn`][..Null]) Starts With Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $usn1[..$`6esn`][..Null]|$`1esn` Starts With $999),123456789[$#usn7..] With Distinct {usn1:'s_str'[12..'s_str'],#usn7:07[`6esn`..][`5esn`..]} As `1esn` Limit {`7esn`:.e0 Contains #usn7 Contains $#usn8}[(:usn2:@usn6{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8})-[? *999..]-(:`4esn`:#usn8{@usn6:$`4esn`[$`2esn`..]})..None(`6esn` In 0X7 =~`` Where 12.e12['s_str'])][(`5esn` :`7esn`)-[?:`8esn`|:usn1 *..0X7{@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00}]->(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})..({`7esn`:12e12 Ends With 010 Ends With .0})<-[?:`5esn`|`1esn`{_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12}]-({@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]})];"),
    octest:ct_string("Create #usn8=(((`8esn` :@usn5)<-[@usn5:#usn7|:_usn4]->(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})<-[`4esn`:``|:_usn4{`5esn`:0e0 =~_usn4}]-(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`}))) Unwind 07[..$_usn3] As #usn7 Unwind `3esn`(Distinct _usn4 Ends With 01 Ends With $`1esn`) Starts With [Count(*) In 01 In .0,`` Starts With 12,$_usn4[$`8esn`..][07..]] Starts With Extract(@usn5 In $#usn8 Is Null Is Null Where 12.e12 In $0 In Count(*)) As _usn3 Union Return *,0X0123456789ABCDEF Ends With 0X0123456789ABCDEF Ends With 's_str' Order By [`8esn` In 's_str' Starts With 1000 Starts With #usn8] =~[01234567 Ends With 12.0 Ends With 0X7,999[$`6esn`],`` Starts With @usn5] =~(:@usn6:`7esn`{`1esn`:010[@usn5..]})<-[`7esn`?:`5esn`|`1esn`]->(#usn8 :_usn4:usn1) Descending,$123456789 Ends With .e0 Ascending,({@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]})-[`6esn`?:`4esn`|:`7esn` *0..010{_usn3:$`1esn` Starts With @usn6}]-(`2esn` {#usn8:12.e12[0e0..7]}) Desc Skip 0X0123456789ABCDEF[.e0..$`4esn`] Remove {usn2:$#usn7 In 12.0 In 0X0123456789ABCDEF,`6esn`:`7esn`[1e1..07][0x0..Count ( * )]}.`4esn`,Single(`4esn` In `6esn`['s_str'..][010..] Where 9e0 =~$`5esn`).`8esn`? Create (:``{`5esn`:.e1 In $@usn6 In 999})-[`5esn`?:`3esn`|:`4esn`{`1esn`:$usn2 Contains 12.e12 Contains 00}]-(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]}),((:_usn3{@usn6:$`7esn` Is Null Is Null})-[``:``|:_usn4 *0X0123456789ABCDEF..{_usn3:$_usn3[..Count ( * )][..@usn5]}]-(#usn8 :@usn6:`7esn`)<-[?:_usn3|:`4esn` *010{`8esn`:$``[_usn4..][`7esn`..]}]-(`2esn` ));"),
    octest:ct_string("Return `1esn`[0e0..] As @usn6,[$`8esn` In \"d_str\" In 9e12,9e0 Contains `8esn`,$@usn6 Contains 0 Contains $`2esn`][Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 01 In _usn3 In 12)][Extract(#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|`7esn` Starts With $usn2 Starts With .e0)] As _usn4,.e0 Is Not Null Is Not Null As `2esn` Order By 12.e12 In .e0 In `7esn` Asc,9e1[.12..] Asc Merge usn2=((`5esn` :usn2:@usn6{`5esn`:0Xa In .e1 In Count(*)})) On Create Set `3esn`+=[_usn4[0xabc..]][..Extract(_usn4 In usn1 Contains False Contains `` Where 12[usn1][True])][..(_usn3 {`7esn`:usn1 Contains False Contains ``})<-[? *0..010]-(#usn8 :`4esn`:#usn8)] Delete $12 Contains 123.654 Contains `8esn`,$`3esn` Is Not Null Is Not Null Union All Optional Match usn2=(((`7esn` :`7esn`)-[{`2esn`:\"d_str\" =~`3esn` =~0Xa,_usn4:usn1 Is Null Is Null}]->(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]})<-[`2esn`?:`7esn`|`2esn`{`8esn`:00}]-(`5esn` {@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00}))) Where 0X0123456789ABCDEF In 01234567 Optional Match `3esn`=((:#usn8{_usn4:\"d_str\"[Count ( * )],`2esn`:9e0 Ends With $`7esn`})) Union Unwind Extract(usn2 In 1000 Contains 0.e0 Where `7esn` Contains .0 Contains 9e12|_usn3 Is Null)[Single(_usn4 In usn1 Contains False Contains `` Where True[..'s_str'][..01])] As `` With Distinct 999 In $_usn4 In 0X7 As usn2,.e1 Starts With 0.0 Starts With `6esn`,.e1 Starts With $`8esn` Where 's_str'[.12..$#usn7][$999..`2esn`];"),
    octest:ct_string("Create (({`6esn`:$`5esn` Is Null,`2esn`:`7esn` Starts With $usn2 Starts With .e0})),(({@usn6:0X0123456789ABCDEF[..usn1]})<-[ *00..{@usn5:$`5esn` Is Null Is Null}]->(:_usn3{#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})-[usn1*]->(:`2esn`:`3esn`{usn2:9e12[@usn6..$``][#usn8..Count ( * )],`3esn`:$1000 In $`7esn` In $7}));"),
    octest:ct_string("Detach Delete Any(#usn7 In 01234567[$`3esn`..] Where 00 In 1e1)[[usn2 In 1000 Contains 0.e0 Where 12e12 Ends With 010 Ends With .0|0xabc[12.e12..`1esn`]]..][[@usn5 In .12[#usn7][$`8esn`] Where $@usn5 =~$`` =~$usn2]..],12.e12 Ends With 01 Ends With .e1,07[12e12] Detach Delete .e1 Starts With 0.0 Starts With `6esn`,(:`1esn`{@usn5:123456789 Starts With `2esn` Starts With 9e12})-[#usn7? *999..]-(@usn5 :_usn4:usn1{`1esn`:07[1e1],`7esn`:12e12[$`5esn`][07]})-[`6esn`:``|:_usn4 *..01]->(`7esn` :`6esn`:`7esn`{_usn4:07 In `5esn` In 12e12})[Extract(#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|`7esn` Starts With $usn2 Starts With .e0)..Extract(#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str')],`1esn` Contains Count ( * ) Remove usn1:`1esn` Union Remove [@usn5 In 0X7 =~.0 =~\"d_str\" Where $123456789 Ends With .e1]._usn4?,Filter(`4esn` In `6esn`['s_str'..][010..] Where @usn6[$`7esn`]).@usn5?,{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}._usn3 Detach Delete $`3esn` Contains 0X0123456789ABCDEF Contains 00,Extract(usn2 In 1000 Contains 0.e0 Where True[Count(*)..][1e1..]|1000[..$`6esn`][..0xabc]) Ends With [07[$999],12e12[Count ( * )..][usn2..]];"),
    octest:ct_string("Unwind 0x0 Is Not Null Is Not Null As `7esn` Remove ``(Distinct 0.12 In $`4esn` In `6esn`,12e12[_usn3..][$@usn5..])._usn3!,[@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 010[$@usn6]|12e12[Null]].@usn6 Delete 0X0123456789ABCDEF Is Not Null,`5esn`[`1esn`],7[..0X7][..'s_str'] Union Remove [`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 12.e12[@usn5..123.654]|9e0 Starts With `6esn`].#usn8? Union With Distinct *,Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With $usn1|.12 Ends With `1esn` Ends With $`1esn`)[[True[..'s_str'][..01],_usn4 Ends With 01 Ends With $`1esn`,.0[$`6esn`..False]]..`7esn`(Distinct 010 Is Null Is Null,$`8esn`[..$``])][({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})<-[? *0..010]-(`4esn` :`5esn`{_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[:#usn7|:_usn4 *1000..{_usn4:07 In `5esn` In 12e12,@usn6:.0 Is Null Is Null}]->(#usn7 $usn2)..All(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null)] As `8esn`,123456789 Starts With `2esn` Starts With 9e12 As `3esn` Skip Any(@usn5 In $#usn8 Is Null Is Null Where .e1 In $@usn6 In 999) In None(usn1 In 0x0[..`4esn`] Where $123456789[..0x0][..`4esn`]) Limit `6esn` Starts With $@usn6 Where 12[0X7..@usn6];"),
    octest:ct_string("Unwind Count(*) Is Null As `2esn` Remove (usn1 :_usn3{@usn6:True[..'s_str'][..01]})-[? *999..]-(`` :`1esn`).usn2?,Extract(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 123456789[$#usn7..]|123456789 In $usn2 In `6esn`)._usn4?,Filter(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $`6esn` Is Null Is Null)._usn3 Union Return 123456789 =~_usn4 =~$0 Order By 0xabc Starts With _usn3 Desc,(`8esn` :usn2:@usn6)<-[#usn7:`3esn`|:`4esn` *00..]->(`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}) =~{@usn6:$_usn3[..Count ( * )][..@usn5],@usn5:12e12[Null]} =~Extract(usn2 In 1000 Contains 0.e0 Where $`7esn` Ends With $`2esn` Ends With $usn1) Ascending,Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 01 In _usn3 In 12|0xabc[$@usn5]) Contains Extract(usn2 In 1000 Contains 0.e0 Where 0.12 In 01 In $`3esn`) Desc Skip Extract(#usn7 In 01234567[$`3esn`..] Where 0xabc[$@usn5])[All(`4esn` In 's_str'[12..'s_str'] Where $_usn4[12e12][`4esn`])][(`6esn` :`5esn`)<-[:``|:_usn4 *0Xa]->(`7esn` :`2esn`:`3esn`)] Limit [@usn5 In .12[#usn7][$`8esn`] Where $@usn5 =~$`` =~$usn2] Is Null Return Distinct *,.e1[usn1..],$1000[.e0..] As `3esn` Skip `5esn`[Count ( * )..][\"d_str\"..];"),
    octest:ct_string("Create _usn3=(({`5esn`:_usn3 Contains @usn6 Contains 1.e1,`7esn`:$12[01..][1.e1..]})-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})<-[usn1?{#usn7:9e12 Is Not Null Is Not Null,usn2:`3esn` =~0.0 =~$``}]->(`5esn` :`3esn`:`1esn`{`6esn`:$1000[.e0..]})) With  @usn6(123456789 =~$123456789) In Extract(`4esn` In `6esn`[1e1..]) In {``:True[..'s_str'][..01],usn1:0.12 In $7 In 0} Limit .12 Is Not Null Is Not Null Union All Create usn2=(({`4esn`:#usn7 Starts With 0 Starts With 12,`4esn`:0x0 =~_usn4})-[_usn4?:@usn6 *..7]->(@usn5 :`8esn`)-[@usn5{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8}]->(usn2 :`7esn`{_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`})),_usn4=(@usn5 {`1esn`:0[usn2..]})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`5esn` {_usn4:0X7 =~``})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(:`6esn`:`7esn`{`3esn`:`8esn`[$``]}) Unwind 0Xa Is Null Is Null As @usn5 Match `1esn`=(:`8esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}),((#usn8 :@usn6:`7esn`{@usn5:1e1[@usn5..]}));"),
    octest:ct_string("Merge ((usn2 {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})-[ *010{@usn5:Null Is Null Is Null}]-({@usn5:False In $`7esn` In .0,usn2:Null[1.e1..]})) Match (@usn5 :usn2:@usn6{`7esn`:1000 Contains 0.e0}) Union All Return $`5esn` Starts With _usn3 Starts With @usn5,9e0 Is Null Is Null,$999[..`1esn`] As `8esn` Order By usn2[$`1esn`...0] Descending,None(`6esn` In 0X7 =~`` Where $usn2 Contains 12.e12 Contains 00)[[@usn6 Starts With `7esn` Starts With Null]][{`1esn`:07[`6esn`..][`5esn`..],usn1:$usn2[False..`7esn`][`7esn`.._usn3]}] Ascending,01234567 Ends With 12.0 Ends With 0X7 Ascending Remove (:`7esn`)<-[? *1000..{_usn4:$`6esn`[$`1esn`][1000],`2esn`:12e12[$`5esn`][07]}]->(:``{`2esn`:9e0[``][123.654],`1esn`:$_usn3[Null]})<-[@usn5? *1000..]->(:@usn6:`7esn`{_usn3:False[`2esn`..#usn8]})._usn4!,(#usn7 {@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]})-[`2esn` *..7]-(_usn3 {usn1:_usn3 Contains @usn6 Contains 1.e1}).`1esn`?,($1000)<-[`4esn`:#usn8]-(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa}).@usn5? Unwind All(`4esn` In `6esn`['s_str'..][010..] Where 9e0 =~$`5esn`)[..(`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`})<-[`` *0xabc]->(`7esn` :#usn7{`6esn`:$`3esn` Contains 0X0123456789ABCDEF Contains 00,`1esn`:1000[123.654..9e12][1000.._usn3]})][..{`3esn`:$1000[.e0..]}] As `2esn`;"),
    octest:ct_string("Remove [$`2esn` =~'s_str',12 Ends With 01234567,$1000 Is Null Is Null].`3esn`?,[12.e12[...0][..0x0]]._usn4,(`1esn` :`8esn`)<-[#usn7:`3esn`|:`4esn` *00..]->(`4esn` :`8esn`)-[`4esn`? *0Xa]-(`7esn` :`2esn`:`3esn`{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}).`3esn`? With Distinct [@usn6 In @usn5 In $`6esn` Where $`1esn` Is Null Is Null] Contains Filter(`4esn` In 's_str'[12..'s_str'] Where 123.654 Starts With usn1 Starts With @usn5) Contains [`4esn` In $`8esn` Starts With 1000 Where False In `3esn`] Order By [#usn8 Ends With `4esn` Ends With $`4esn`,$`2esn` =~'s_str',$#usn7[...e12][..$7]][#usn7(0x0 =~_usn4,`5esn` =~0Xa)][{#usn8:$999 Ends With $`3esn` Ends With `8esn`}] Descending,9e12 Asc Skip 0X7[.e12..01234567] Limit $_usn4[0.12..$`6esn`][00..$@usn6] Match `4esn`=(({_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`})) Union Merge (((`7esn` :`2esn`:`3esn`)<-[@usn5?:#usn8 *999..{`1esn`:$@usn5 =~$`` =~$usn2}]->(`2esn` {`3esn`:$999[12.0..]})-[? *00..{#usn8:12.e12[...0][..0x0],`7esn`:$`4esn`[9e1..][0..]}]-(:usn1{`6esn`:7 Contains 9e1,#usn8:`7esn`[...e1][..\"d_str\"]}))) On Match Set `7esn`+=.e1[..$`4esn`][.._usn4],`4esn`+=@usn6[$`8esn`][12.e12],@usn5+=1000 Contains $#usn7 Contains `6esn` Match (({#usn7:`7esn` In 999 In @usn6,usn2:.12 Ends With $`4esn` Ends With Count(*)})-[`5esn`:@usn6]->(:``)),`6esn`=((:#usn7{`2esn`:.12 Starts With @usn5 Starts With $#usn8})) Where `2esn` Contains $999;"),
    octest:ct_string("With Distinct {@usn6:`7esn` In 999 In @usn6} Starts With Extract(usn1 In 0x0[..`4esn`] Where 0x0|07 Ends With 07) Starts With Filter(usn1 In 00 Starts With _usn3 Where $`` Ends With 12e12),False Ends With $`8esn`,``[$`3esn`][$`2esn`] As usn1 Order By $`6esn` Is Null Is Null Desc Limit 999 In $_usn4 In 0X7 With  *,[0Xa In .e1 In Count(*)][..{usn1:7 =~9e0 =~'s_str',@usn6:$usn1[..$`6esn`][..Null]}][..Extract(`4esn` In `6esn`['s_str'..][010..] Where #usn8[$#usn8..])] As @usn6,_usn3 Ends With 0x0 Ends With 01234567 Order By Single(`4esn` In `6esn`['s_str'..][010..] Where 12.0 Contains 0.e0)[..Any(`4esn` In 's_str'[12..'s_str'] Where Count(*)[`7esn`..$12])][..Extract(@usn5 In .12[#usn7][$`8esn`] Where 01234567 =~usn1)] Ascending Skip `7esn` Ends With $usn2 Ends With 999 Unwind All(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $`3esn` =~$`7esn` =~False)[..[0xabc[..$`1esn`][..01],12 Ends With 01234567,$@usn6 Is Null Is Null]][..#usn7(Distinct $0[$#usn8..01234567],$7)] As _usn4;"),
    octest:ct_string("Create #usn7=((#usn7 {`2esn`:$@usn6[..$usn1],usn2:12 Ends With 01 Ends With 1e1})),`2esn`=(:_usn4:usn1)-[#usn7?:_usn4|:@usn5{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]->(:`2esn`:`3esn`)<-[``]-(usn1 {#usn7:.e12[..0.e0][..$`1esn`],usn1:010 Contains Count(*)}) Merge `7esn`=((#usn8 :`1esn`{#usn7:1e1[`6esn`..]})<-[`3esn`? *123456789..999]->(_usn4 :_usn4:usn1)) On Create Set `3esn`+=00 Ends With $_usn4 Ends With $`2esn` On Match Set `6esn`:usn1,`7esn`+=07[`6esn`..][`5esn`..] Remove Extract(usn1 In 0x0[..`4esn`] Where $#usn7 In .e1 In 01).#usn8 Union All With Distinct Extract(`4esn` In `6esn`['s_str'..][010..] Where $12 Is Null Is Null) Ends With `2esn`(`7esn`[Null..][@usn5..],123.654[12.e12..1e1]) Ends With Any(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 010[$@usn6]) As `7esn`,$usn2 In 9e0 In $7 Order By @usn5 Starts With 12e12 Starts With @usn5 Desc Skip $``[_usn4..][`7esn`..] Optional Match ``=((_usn4 )-[#usn7:_usn3|:`4esn` *..0x0{usn2:$#usn7 In 12.0 In 0X0123456789ABCDEF,`6esn`:`7esn`[1e1..07][0x0..Count ( * )]}]->(`6esn` {`2esn`:$`2esn`[..`2esn`],usn1:False[0Xa..$@usn5][$`6esn`..12e12]})) Union Merge _usn4=(usn1 :_usn4:usn1)<-[`5esn` *0..010]-(usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1});"),
    octest:ct_string("Optional Match @usn6=(`` :#usn7)<-[?:`4esn`|:`7esn` *..0X7]-(:`3esn`:`1esn`{`1esn`:0.0[1000..][.e1..]})<-[`5esn`?:`6esn`]->(`6esn` :`6esn`:`7esn`{_usn4:\"d_str\"}),`6esn`=(`8esn` )-[ *0..010{#usn7:$@usn6 Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)}) Where 0.e0 Ends With 12 Ends With $7 Unwind 0X7 =~`4esn` =~`8esn` As `7esn` Match ((@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})) Where $`1esn` Starts With $999;"),
    octest:ct_string("With Distinct *,$@usn6 =~usn1 As `1esn` Skip $_usn4[$`1esn`] Limit $1000 In $`7esn` In $7 Where 9e0 In 01234567 Union All With  $`5esn`[$123456789][`1esn`] As `8esn`,[@usn6 In @usn5 In $`6esn` Where $usn2 Is Not Null|$`6esn`[..0X0123456789ABCDEF]][`5esn`(Distinct 0X7 In $@usn5 In 9e0,0x0)..] As #usn7 Order By None(usn1 In 0x0[..`4esn`] Where $`2esn` Contains usn1 Contains `2esn`)[..Extract(`6esn` In 0X7 =~`` Where $usn2 Contains 12.e12 Contains 00|$#usn8 Ends With 1000 Ends With .0)][..[@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where #usn7 Ends With 9e1]] Ascending,Count(*) In 01 In .0 Asc,Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`6esn`[$@usn6..]) In {`7esn`:12e12 Ends With 010 Ends With .0} In None(#usn8 In $`5esn` Is Null Is Null Where 123456789 In $usn2 In `6esn`) Asc Where 0.e0[9e0][0e0] Optional Match _usn3=(($999)),``=(({`8esn`:0X7 In 's_str' In $`1esn`})<-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]->(`1esn` :`1esn`)) Where 9e0[True..`1esn`] Unwind $_usn4[`3esn`][0] As _usn4;"),
    octest:ct_string("Optional Match ((#usn8 {`2esn`:$`5esn` Contains Count(*) Contains #usn7,_usn4:Null Starts With $`7esn` Starts With `2esn`})<-[`6esn`:`4esn`|:`7esn` *..0x0]->(#usn8 :@usn5)-[`6esn`:``|:_usn4 *..01]->(`5esn` :#usn7)) Return .e12[.12..][_usn4..] As _usn4 Order By $usn1[1e1.._usn3][$@usn6..$#usn7] Desc Skip Extract(@usn6 In @usn5 In $`6esn` Where $_usn4[`3esn`][0]|_usn3 Is Null Is Null) Is Not Null Limit Extract(@usn6 In @usn5 In $`6esn` Where 123456789 =~_usn4 =~$0) Is Null Merge (@usn6 )<-[? *12..0xabc]->(`5esn` :`6esn`:`7esn`{`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]})<-[``? *12..0xabc]-(`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1}) Union All With Distinct *,$@usn6 =~usn1 As `1esn` Skip $_usn4[$`1esn`] Limit $1000 In $`7esn` In $7 Where 9e0 In 01234567;"),
    octest:ct_string("Delete (:`1esn`{`6esn`:$0[..`8esn`],`1esn`:True Starts With $`8esn` Starts With \"d_str\"})<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[usn1?:`2esn`|usn2 *123456789..999]-(`3esn` :usn2:@usn6) Contains [usn2 In 1000 Contains 0.e0 Where #usn7 Ends With 9e1|010 Is Null Is Null] Contains Filter(@usn6 In @usn5 In $`6esn` Where 12[`7esn`...0][0.12..``]),[usn1 In 00 Starts With _usn3 Where False[.e1..Null]|1000[0.0][Null]][Filter(usn2 In 1000 Contains 0.e0 Where $`7esn` Ends With $`2esn` Ends With $usn1)..][Single(usn2 In 1000 Contains 0.e0 Where 0e0 Is Not Null Is Not Null)..],{_usn4:00}[#usn7(00 In 12.e12)][[.12 Ends With `1esn` Ends With $`1esn`,$`5esn`[False]]] Create #usn8=(:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[:#usn7|:_usn4{_usn3:\"d_str\" =~`3esn` =~0Xa}]-(#usn7 {`3esn`:Count(*)[12.e12..],`3esn`:usn2 =~0x0}) Return Distinct *,[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`|$123456789 Ends With .e1] Contains [@usn6 In @usn5 In $`6esn` Where $_usn4[$`8esn`..][07..]|$1000 In $`7esn` In $7] Contains (`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})-[``?:@usn6{#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}]->(@usn5 :`3esn`:`1esn`{`3esn`:$`5esn` Is Not Null,`2esn`:9e1[0.e0..][#usn8..]}) Skip ({`5esn`:0.12 Contains .e1})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:@usn5{#usn7:1e1[@usn5..]})<-[?:`6esn` *01234567..12{`7esn`:7 In 0xabc}]-(#usn7 :usn2:@usn6{`1esn`:$usn2 Contains 12.e12 Contains 00}) =~None(usn1 In 00 Starts With _usn3 Where False[.e1..Null]) Union All Remove usn1:`1esn` Delete {@usn5:$`3esn`} Starts With .12,.12[..`6esn`][..\"d_str\"],$#usn7[True..][$0..] Unwind 9e1 Starts With `1esn` Starts With 0Xa As `2esn`;"),
    octest:ct_string("Unwind Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 01 In _usn3 In 12|0xabc[$@usn5]) In None(`6esn` In 0X7 =~`` Where 12.e12['s_str']) As `5esn` Union All Return Distinct *,$`3esn` =~Null As usn2 Skip Filter(usn1 In $123456789 Contains usn2 Where usn2 Is Not Null) Ends With [usn1 In 00 Starts With _usn3 Where 010 =~$usn2 =~1e1] Ends With _usn3(Distinct $123456789 Ends With $`6esn`) Limit `3esn`(Distinct _usn4 Ends With 01 Ends With $`1esn`) Starts With [Count(*) In 01 In .0,`` Starts With 12,$_usn4[$`8esn`..][07..]] Starts With Extract(@usn5 In $#usn8 Is Null Is Null Where 12.e12 In $0 In Count(*)) Merge (_usn4 :#usn8)-[`1esn`?:`1esn` *01234567..12]-({_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999});"),
    octest:ct_string("Merge (({`6esn`:$`5esn` Is Null,`2esn`:`7esn` Starts With $usn2 Starts With .e0})) On Create Set #usn7:``,({#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1})<-[?:@usn5|`8esn` *..0X7]-(:usn1).`4esn` =`6esn` Starts With $`5esn`,[`6esn` In 0X7 =~`` Where 0.12[Null..]]._usn4 =Count ( * )[`3esn`..][`2esn`..] On Match Set `3esn` =010 In @usn5 In `5esn` With  01234567 Ends With 0x0,[`2esn` In `7esn` Starts With $`` Starts With $#usn7][{#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1}..] As #usn8,$1000 Is Not Null Is Not Null Order By 's_str'['s_str'..$usn2][_usn3.._usn3] Asc Skip Extract(usn2 In 1000 Contains 0.e0 Where True[Count(*)..][1e1..]|1000[..$`6esn`][..0xabc]) Ends With [07[$999],12e12[Count ( * )..][usn2..]] Limit Null[01234567][01234567] Where 0X7[..12e12] With  *,Single(#usn7 In 01234567[$`3esn`..]) Is Null As `3esn`,07[$999] As `` Where 9e0[$_usn3..0X7][7..$#usn8] Union Optional Match _usn4=(`1esn` :``{`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]}),`6esn`=((#usn7 :#usn8{`2esn`:12 =~usn1 =~.e12})) Union Detach Delete Extract(`4esn` In $`8esn` Starts With 1000 Where 9e1 Is Null Is Null) =~Any(`4esn` In 's_str'[12..'s_str'] Where $#usn8 Is Null) =~[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`|$123456789 Ends With .e1],$7 Contains 0x0 Contains ``,[\"d_str\"] Contains _usn3(Distinct $usn1[_usn4..][usn2..]) Remove [01234567[Null..0.e0][Count(*)..$#usn8],#usn8 Contains .e0 Contains $`8esn`,123456789[1e1..0.0]].`1esn`? Create (:`3esn`:`1esn`{@usn5:$#usn8 In .e12 In 9e1,`7esn`:9e1 Starts With `1esn` Starts With 0Xa}),(`3esn` :usn2:@usn6)-[#usn7:`7esn`|`2esn` *..01{``:0X7 In 's_str' In $`1esn`,#usn8:010 Contains Count(*)}]->({`4esn`:$usn1[1e1.._usn3][$@usn6..$#usn7],`3esn`:9e0[``][123.654]})-[_usn3]-(`` {`4esn`:9e0[True..`1esn`],@usn6:7 =~9e0 =~'s_str'});"),
    octest:ct_string("Merge ()<-[`8esn`:@usn5|`8esn` *123456789..999{`5esn`:0x0 Contains $`8esn` Contains `6esn`,#usn8:010 =~$usn2 =~1e1}]->(#usn8 :`1esn`{#usn7:1e1[`6esn`..]})<-[usn1?:`1esn`{#usn7:9e12 Is Not Null Is Not Null,usn2:`3esn` =~0.0 =~$``}]->(:`1esn`{`8esn`:Count ( * ) =~Count(*)}) With  *,#usn7 Starts With .e12 Starts With $`7esn` As usn2,{`4esn`:$usn1[0.12..]['s_str'..]} In None(`4esn` In $`8esn` Starts With 1000 Where 0.12 In 01 In $`3esn`) In usn2(True Contains @usn6) As @usn5 Limit Extract(`4esn` In 's_str'[12..'s_str'] Where 00 Starts With _usn3|$`1esn` Is Null Is Null) Is Null Is Null Unwind 0x0 =~_usn4 As `4esn` Union Create `7esn`=(((@usn5 :usn2:@usn6{`7esn`:1000 Contains 0.e0})-[`4esn`?:`8esn`|:usn1 *..0x0]->(:@usn6:`7esn`{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})<-[?:usn2|#usn8 *1000..]->(@usn6 :_usn4:usn1{@usn6:Null Is Null Is Null,#usn7:`5esn`[Count ( * )..][\"d_str\"..]}))) Remove All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 12.e12 Contains `5esn`).`6esn`?,Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where 12.e12 Ends With 01 Ends With .e1).`4esn`! Union All Unwind 07[12e12] As `4esn` Remove Extract(@usn6 In @usn5 In $`6esn` Where False Contains `3esn`).`5esn`?,(`2esn` {`3esn`:$999[12.0..]})-[:usn2|#usn8 *01234567..12{usn2:$`3esn` In $12 In 's_str'}]-(usn1 :_usn3).`5esn`;"),
    octest:ct_string("With Distinct 7 Contains 9e1 As `` Order By $`1esn` Starts With `8esn` Starts With $0 Descending,[1.e1 =~$_usn4,.12 Contains $`4esn` Contains $`6esn`] Ends With Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn8 In .e12 In 9e1) Desc,#usn8 Is Not Null Asc Skip 12.e12 Contains `5esn` Where 12e12[0.e0][9e1] Create #usn7=((#usn7 :`5esn`)<-[:`2esn`|usn2 *07..]-({`7esn`:`6esn` Starts With $@usn6,``:`6esn` =~$_usn3})<-[`1esn`?:`1esn` *01234567..12]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})),usn1=((`4esn` :`5esn`{@usn6:$usn2 =~$#usn8,`8esn`:`6esn` =~$_usn3})-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`7esn` :_usn4:usn1)<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})) Union Return 9e1 Starts With `1esn` Starts With 0Xa,07[$`5esn`..]['s_str'..] As `5esn`,010 =~$usn2 =~1e1 Skip $`8esn`[..$``] Limit 0.0[999..] Unwind 0X7 In $999 In $`` As ``;"),
    octest:ct_string("Detach Delete ({usn1:`4esn` In $12 In `8esn`})-[`4esn`]-(`1esn` {usn1:True[Count(*)..][1e1..],usn1:9e1 Is Null Is Null})<-[?{`5esn`:0x0 Contains $`8esn` Contains `6esn`,#usn8:010 =~$usn2 =~1e1}]->({`6esn`:$`5esn` Is Null,`2esn`:`7esn` Starts With $usn2 Starts With .e0})[[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 0e0 =~_usn4|0x0 Contains _usn4 Contains 123456789]..[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 7 In $`3esn` In #usn7]][usn1($`1esn` Is Null Is Null,$0[0X0123456789ABCDEF..$#usn7])..[usn1 In 00 Starts With _usn3 Where .12[9e0][$7]|07]] Return $usn1[0.12..]['s_str'..] As `1esn`,(`4esn` :`8esn`{_usn4:0 Is Null Is Null})-[`6esn`:`8esn`|:usn1$_usn3]->(`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]}) Ends With Filter(@usn5 In $#usn8 Is Null Is Null Where @usn5 Contains $`1esn` Contains 999) Ends With [`4esn` In `6esn`[1e1..] Where 07[12e12]] Order By Count ( * )[..999] Asc Skip (:``{_usn3:Count(*)['s_str'..`1esn`],`1esn`:$`6esn`[$`1esn`][1000]})<-[`6esn`?:@usn6 *999..]->(`3esn` {`8esn`:$usn2[12..$`7esn`][$0..$`7esn`]})[Filter(_usn4 In usn1 Contains False Contains `` Where 123456789 Is Null)..] Union All Detach Delete 12e12[0.e0..True][0.12..0.0];"),
    octest:ct_string("Detach Delete False[0Xa..$@usn5][$`6esn`..12e12] With Distinct `2esn` Contains $999 As #usn7,$123456789[False.._usn3] As `1esn` Order By [@usn6 In @usn5 In $`6esn` Where $999[$1000]|$7[.12]] In {`1esn`:$@usn6 Contains 07 Contains 0.e0} In (`2esn` {usn1:@usn6[$`7esn`],_usn3:$@usn6[..12e12]})-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]->(usn1 {#usn7:Count ( * )[@usn6..0x0]})-[@usn6?:#usn8 *..7{@usn5:@usn5 Starts With 12e12 Starts With @usn5}]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3}) Ascending,00[.e1..] Desc Skip 9e1[.12..] Match ((`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]})<-[:`2esn`|usn2 *0..010]->(`` :`1esn`)<-[ *0X0123456789ABCDEF..{#usn8:`5esn` =~0Xa,usn1:12 =~usn1 =~.e12}]->(_usn3 :_usn3)),``=((`6esn` :`7esn`)) Where $`1esn` Starts With @usn6;"),
    octest:ct_string("With Distinct $`5esn`[$123456789][`1esn`] As `8esn`,[@usn6 In @usn5 In $`6esn` Where $usn2 Is Not Null|$`6esn`[..0X0123456789ABCDEF]][`5esn`(Distinct 0X7 In $@usn5 In 9e0,0x0)..] As #usn7 Order By None(usn1 In 0x0[..`4esn`] Where $`2esn` Contains usn1 Contains `2esn`)[..Extract(`6esn` In 0X7 =~`` Where $usn2 Contains 12.e12 Contains 00|$#usn8 Ends With 1000 Ends With .0)][..[@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where #usn7 Ends With 9e1]] Ascending,Count(*) In 01 In .0 Asc,Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`6esn`[$@usn6..]) In {`7esn`:12e12 Ends With 010 Ends With .0} In None(#usn8 In $`5esn` Is Null Is Null Where 123456789 In $usn2 In `6esn`) Asc Remove None(@usn5 In 0X7 =~.0 =~\"d_str\" Where 9e12[usn2..7][.e1..$`7esn`]).`6esn`?,All(usn1 In 00 Starts With _usn3 Where 1e1[..False]).`4esn`?,Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where usn2[$`1esn`...0]|@usn6 Contains .e1 Contains $`4esn`)._usn3! Remove [@usn5 In 0X7 =~.0 =~\"d_str\" Where $`8esn` Starts With 1000|@usn6 Contains .e1 Contains $`4esn`].`8esn`! Union Return Distinct {@usn6:0.12 In $`4esn` In `6esn`,``:1e1 Is Null} Is Not Null Is Not Null,$0 =~$0 =~.e0 As `7esn` Order By Any(`6esn` In 0X7 =~`` Where 0X7[..12e12]) Asc,{@usn5:$`3esn`} Starts With .12 Asc Skip Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]) In All(@usn5 In .12[#usn7][$`8esn`] Where \"d_str\" =~`6esn` =~0Xa) In [123.654 Starts With usn1 Starts With @usn5] Union All Unwind 1000 Contains 123456789 Contains 1e1 As `` Return Distinct $@usn5[0.12..][@usn5..],010 Contains 0X0123456789ABCDEF Limit 9e0 Starts With `6esn` Delete [$`5esn` Is Not Null,0e0 Is Null Is Null] Ends With Filter(`4esn` In `6esn`['s_str'..][010..] Where Count(*)[..`3esn`]) Ends With (_usn4 {`8esn`:9e1 In 01 In 999})-[`8esn`?:#usn7|:_usn4]-(#usn8 :_usn3)-[ *0..010{#usn7:$@usn6 Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)});"),
    octest:ct_string("Remove Extract(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6|1e1 Is Null).`7esn`!,Filter(usn1 In 0x0[..`4esn`] Where $0[$#usn8..01234567]).`6esn`!;"),
    octest:ct_string("Merge ({`8esn`:$@usn5 Contains 01,`2esn`:123.654 Contains #usn8})-[{`5esn`:.e1[..$``][..0X0123456789ABCDEF]}]->(_usn3 {`5esn`:0.12 Contains .e1})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]}) On Match Set `5esn`(0[0.12..]).`1esn`? =12.e12 In $0 In Count(*),(usn2 :`6esn`:`7esn`{`6esn`:`` Contains 12 Contains True,usn2:$`2esn`[123456789..][00..]})-[`7esn`?{usn1:@usn5 Ends With $`3esn` Ends With 12e12,@usn6:12e12[_usn3..][$@usn5..]}]->(usn2 :`5esn`).#usn8? =[`4esn` In `6esn`[1e1..] Where `3esn` =~0.0 =~$``] =~[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`] On Create Set (:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[@usn6?:`1esn`]-(:`5esn`)-[@usn5?:`3esn`|:`4esn`{`7esn`:Count(*) In 01 In .0,`6esn`:$123456789[..0.12][..#usn7]}]->(`5esn` :`8esn`).#usn7! =0x0 Contains $`8esn` Contains `6esn`,`8esn` =None(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 12e12[.12..]) Ends With None(_usn4 In usn1 Contains False Contains `` Where 12 Ends With 01234567) Ends With @usn6($123456789[0.0..]) Remove `7esn`(usn2 Is Null Is Null,`6esn` =~$_usn3).`1esn`!,None(usn2 In 1000 Contains 0.e0 Where True[Count(*)..][1e1..]).`8esn`! Union Match #usn7=((`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`3esn`?:_usn3|:`4esn`]-(`4esn` {`6esn`:$12[..``][..$7]})),@usn5=(((_usn3 :_usn3{_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})-[#usn8:`3esn`|:`4esn` *0..010]-(:usn1{_usn3:'s_str'[..0.0][..$`4esn`],`4esn`:$123456789 Is Not Null Is Not Null})-[usn1? *07..{`5esn`:#usn7 Is Not Null Is Not Null}]-(`2esn` :usn1{`8esn`:$``[_usn4..][`7esn`..]}))) Unwind Any(@usn6 In @usn5 In $`6esn` Where 9e0[$_usn3..0X7][7..$#usn8]) Contains None(usn1 In 00 Starts With _usn3 Where 01234567 Ends With 12.0 Ends With 0X7) Contains Single(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn8 In .e12 In 9e1) As `4esn` Union With Distinct *,Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With $usn1|.12 Ends With `1esn` Ends With $`1esn`)[[True[..'s_str'][..01],_usn4 Ends With 01 Ends With $`1esn`,.0[$`6esn`..False]]..`7esn`(Distinct 010 Is Null Is Null,$`8esn`[..$``])][({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})<-[? *0..010]-(`4esn` :`5esn`{_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[:#usn7|:_usn4 *1000..{_usn4:07 In `5esn` In 12e12,@usn6:.0 Is Null Is Null}]->(#usn7 $usn2)..All(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null)] As `8esn`,123456789 Starts With `2esn` Starts With 9e12 As `3esn` Skip Any(@usn5 In $#usn8 Is Null Is Null Where .e1 In $@usn6 In 999) In None(usn1 In 0x0[..`4esn`] Where $123456789[..0x0][..`4esn`]) Limit `6esn` Starts With $@usn6 Where 12[0X7..@usn6];"),
    octest:ct_string("With Distinct `2esn` Starts With $_usn3 Starts With `2esn` Skip [@usn6 In @usn5 In $`6esn` Where False[0Xa..$@usn5][$`6esn`..12e12]][{@usn6:.12 Starts With 0Xa}..(`2esn` {usn1:@usn6[$`7esn`],_usn3:$@usn6[..12e12]})-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]->(usn1 {#usn7:Count ( * )[@usn6..0x0]})-[@usn6?:#usn8 *..7{@usn5:@usn5 Starts With 12e12 Starts With @usn5}]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})] Limit {`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]} Is Null Is Null Match @usn5=(:`8esn`{`7esn`:@usn6 Contains _usn4 Contains $`4esn`})-[`1esn`:usn2|#usn8 *1000..]-(:`5esn`{`3esn`:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:0e0 =~_usn4}) Remove Any(usn1 In 0x0[..`4esn`] Where $0[$#usn8..01234567])._usn3!,Filter(@usn6 In @usn5 In $`6esn` Where 9e0[$_usn3..0X7][7..$#usn8]).`3esn`!,#usn7(Distinct).`1esn` Union Return Distinct *,9e1 Starts With 9e1 Starts With 010 Delete Null[1.e1..],999[$`6esn`],None(usn1 In $123456789 Contains usn2 Where Count ( * )[..1e1])[`8esn`(00[``..][$`4esn`..],123.654[@usn5])] Union All Create usn1=((:#usn8{#usn7:12e12 Ends With 010 Ends With .0})-[#usn8? *0xabc]-(#usn8 :`4esn`:#usn8)),#usn7=(((`4esn` )<-[_usn3?:`3esn`|:`4esn` *0..010]->(_usn3 )<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})));"),
    octest:ct_string("Create (((@usn6 {#usn7:False[`2esn`..#usn8]})-[? *010]-(`8esn` :@usn5)<-[#usn8?{`5esn`:Null[01234567][01234567]}]->(`6esn` :@usn6:`7esn`{@usn5:True[0x0][@usn6],`5esn`:Null Starts With _usn4 Starts With `6esn`}))),`8esn`=((_usn4 :`3esn`:`1esn`{`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]})) Union Create `2esn`=((:#usn7{usn2:$`5esn`[$123456789][`1esn`]})) Return Distinct [`2esn` In `7esn` Starts With $`` Starts With $#usn7][{#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1}..] As @usn6,usn1[$`3esn`..$999][True..False] As `3esn` Order By Any(@usn6 In @usn5 In $`6esn` Where False Contains `3esn`) Ends With [1e1[@usn5..],$#usn8 Is Null,$0[$#usn8..01234567]] Ends With Extract(`6esn` In 0X7 =~`` Where 010 =~`6esn`) Descending,12.0 Contains 0.e0 Desc Limit Count ( * )[`1esn`..$0][$1000..$`5esn`] Unwind `5esn`[`1esn`..`1esn`] As usn2 Union Merge (((`2esn` :`7esn`)<-[? *..7]->({`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null})<-[:`6esn`]->(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}))) On Create Set @usn6 =`3esn`[..7][..12e12] With  *,Filter(usn1 In 00 Starts With _usn3 Where $_usn4[`3esn`][0])[..Extract(`6esn` In 0X7 =~`` Where #usn7 Starts With 0 Starts With 12|0x0 =~_usn4)][..{_usn4:.12 =~.12 =~1e1,#usn7:.e1 Starts With 0.0 Starts With `6esn`}],12[12e12..@usn6] As `5esn` Order By {_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]} Ends With Extract(`4esn` In $`8esn` Starts With 1000 Where `6esn`['s_str'..][010..]|12.e12[@usn5..123.654]) Ends With [$`5esn` Is Not Null,0e0 Is Null Is Null] Ascending Skip $`1esn`[$_usn3..][9e1..] Limit (:`1esn`{@usn5:123456789 Starts With `2esn` Starts With 9e12})-[#usn7? *999..]-(@usn5 :_usn4:usn1{`1esn`:07[1e1],`7esn`:12e12[$`5esn`][07]})-[`6esn`:``|:_usn4 *..01]->(`7esn` :`6esn`:`7esn`{_usn4:07 In `5esn` In 12e12})[Extract(#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|`7esn` Starts With $usn2 Starts With .e0)..Extract(#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str')] Unwind _usn3 Contains @usn6 Contains 1.e1 As `2esn`;"),
    octest:ct_string("Merge ((#usn8 {_usn3:`6esn` =~01234567 =~0Xa,_usn4:$`5esn` Is Null Is Null})) On Match Set _usn4:_usn3,[0xabc Contains $1000].`6esn` =(#usn8 :`5esn`{usn2:.e1 Starts With 0.0 Starts With `6esn`,#usn8:9e12 =~01 =~$`7esn`})<-[`7esn`?:`5esn`|`1esn` *0xabc]->(#usn7 {`6esn`:123456789 Is Null,`1esn`:00 In 12.e12})[Filter(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 0.12 Ends With $usn1 Ends With $@usn5)][`3esn`(Distinct 9e12[_usn3])],{@usn6:0.12[0.e0..][`4esn`..]}.`4esn` =0x0 Contains $`8esn` Contains `6esn` On Create Set Extract(#usn7 In 01234567[$`3esn`..] Where 0X7 In $999 In $``|9e1[...e0]).`7esn`! =0X7 In 's_str' In $`1esn`,{`3esn`:#usn7 Ends With `4esn` Ends With @usn5}.#usn8 =[usn1[..$_usn4][..``],0X7[.e12..01234567]] In `3esn`(@usn5[..True][..0X7],$`3esn` =~$`7esn` =~False) Remove Single(#usn8 In $`5esn` Is Null Is Null Where $123456789[0.0..]).#usn7?,Any(usn2 In 1000 Contains 0.e0 Where @usn6[`3esn`..][$7..]).@usn6! Union With Distinct *,010 Contains Count(*) As `5esn`,'s_str' Ends With .e0 As `1esn` Skip [_usn4 In usn1 Contains False Contains `` Where $usn1[0.12..]['s_str'..]|12[..True][..$`4esn`]] Ends With [`6esn` In 0X7 =~``|$#usn7[...e12][..$7]] Limit Count ( * )[`3esn`..][`2esn`..] Where 's_str'['s_str'..$usn2][_usn3.._usn3] Union Detach Delete 01 In _usn3 In 12,`1esn`[`3esn`..][$@usn6..];"),
    octest:ct_string("Unwind 7 In $`3esn` In #usn7 As `5esn` Create _usn3=(({`5esn`:_usn3 Contains @usn6 Contains 1.e1,`7esn`:$12[01..][1.e1..]})-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})<-[usn1?{#usn7:9e12 Is Not Null Is Not Null,usn2:`3esn` =~0.0 =~$``}]->(`5esn` :`3esn`:`1esn`{`6esn`:$1000[.e0..]})) With Distinct None(usn1 In 00 Starts With _usn3) Contains _usn3(Distinct 0.12 In 01 In $`3esn`,1.e1[0X0123456789ABCDEF..][$`5esn`..]) Contains {_usn4:Count(*)[True]} Order By 123.654[`5esn`] Descending,$`2esn`[..7][..$usn1] Descending,123456789 Starts With _usn4 Starts With @usn6 Descending Where $`4esn`[$`2esn`..] Union Return Distinct #usn8 In $0 As `1esn`,'s_str' In \"d_str\" In 123456789,[0Xa[$``..][01234567..]] Contains `3esn`(Distinct _usn3 In .e1 In $12) Contains (`5esn` :`8esn`{`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null})<-[:@usn5|`8esn`*..]-(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})-[``?{usn2:@usn5 In 0X0123456789ABCDEF,usn2:9e1 Is Null Is Null}]->(`8esn` :_usn3{``:12.e12['s_str']}) As @usn6 Order By Count ( * )[(`7esn` {usn1:$1000 Contains $`3esn`})-[`5esn`?:_usn4|:@usn5]-(`3esn` {`8esn`:$``[_usn4..][`7esn`..]})-[@usn5:`4esn`|:`7esn` *0X0123456789ABCDEF..{`7esn`:.e0[..999][..0X7]}]-(usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1})..Single(usn1 In 0x0[..`4esn`] Where $999[12.0..])][(:`6esn`:`7esn`{@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]})-[?{`2esn`:$`6esn`[$@usn6..]}]-(`4esn` :`6esn`:`7esn`)<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})..Single(`6esn` In 0X7 =~`` Where $usn1[0.12..]['s_str'..])] Ascending,0xabc[$@usn5] Asc,usn1[..$_usn4][..``] Ascending Union All Unwind 0X7 =~`4esn` =~`8esn` As `7esn` Remove {`8esn`:Count ( * ) =~Count(*)}.`6esn`,({@usn6:0X0123456789ABCDEF[..usn1]})<-[:``|:_usn4 *0Xa]->(`7esn` :`2esn`:`3esn`)._usn4?,(:`4esn`:#usn8)<-[_usn4:`7esn`|`2esn`]-(`5esn` {`8esn`:0.0[12...12]})<-[#usn7:`3esn`|:`4esn` *00..]-(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]}).`4esn` Optional Match `4esn`=(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})-[?:#usn7|:_usn4]->(`` :#usn7$0)-[`2esn` *0X0123456789ABCDEF..{usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3}]->(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]}),(((`` :@usn6:`7esn`{`2esn`:0.12[0.e0..][`4esn`..]})<-[`3esn`?:_usn3|:`4esn`]-(_usn3 :`1esn`)<-[_usn3{_usn3:12.e12 In $0 In Count(*)}]-(`7esn` :@usn5))) Where $_usn3[..Count ( * )][..@usn5];"),
    octest:ct_string("Detach Delete .e1[$_usn4][1e1],$usn1[_usn4..][usn2..],{@usn6:0.12 In $`4esn` In `6esn`,``:1e1 Is Null} Is Not Null Is Not Null Delete .12[`1esn`..],usn2 Starts With @usn6 Return Distinct *,usn2 =~0x0 As `8esn` Union All Detach Delete $`1esn` Ends With $`1esn` Merge ((`3esn` {`8esn`:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`1esn`?:`1esn` *01234567..12]->(`8esn` {`6esn`:00 In 12.e12})-[`6esn`? *01234567..12{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]-(@usn5 {usn2:$999[12.0..]})) Remove Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where #usn7 Starts With 0 Starts With 12).`6esn`! Union All Remove {`5esn`:`6esn` =~01234567 =~0Xa}.#usn7,(usn1 :#usn7)<-[@usn6?{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(:`2esn`:`3esn`{`6esn`:_usn4 Ends With 01 Ends With $`1esn`,`4esn`:$`8esn` In \"d_str\" In 9e12})._usn4,(#usn7 :`2esn`:`3esn`)-[@usn5?:@usn6$_usn3]->(:_usn4:usn1{`1esn`:123456789 Starts With `2esn` Starts With .0,@usn6:12.e12 Contains `5esn`})-[_usn3? *00..]-(`1esn` :`1esn`).`4esn`;"),
    octest:ct_string("Create (`8esn` :`1esn`),`2esn`=((:`2esn`:`3esn`{usn2:9e12[@usn6..$``][#usn8..Count ( * )],`3esn`:$1000 In $`7esn` In $7})<-[`6esn`:_usn4|:@usn5 *..7{_usn4:0.0 =~0X7 =~#usn7}]->(`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})-[`8esn` *..0x0]-(:`2esn`:`3esn`{usn2:$`5esn` In False})) Optional Match `7esn`=(@usn6 {_usn3:1e1[.e1..],`1esn`:$#usn8})<-[#usn8?*{usn2:\"d_str\" Contains `3esn` Contains 00,`3esn`:010 Contains 0X0123456789ABCDEF}]->({`6esn`:$`8esn`[..$``]})-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]-(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa}) Unwind 12.e12[$1000..] As `4esn` Union Remove [#usn7 In 01234567[$`3esn`..] Where .12 Starts With @usn5 Starts With $#usn8|$`6esn`[$`1esn`][1000]].@usn6?,usn2($#usn8 Is Null Is Null)._usn4 Union Unwind .e12[usn2][01] As _usn3 Match usn2=((#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})-[`6esn`?:usn1|`3esn`{`2esn`:1e1[@usn5..],`3esn`:$`6esn`[`3esn`..0e0]}]->(:`4esn`:#usn8{usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null})),((usn1 :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(:#usn7{`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})-[?{@usn5:12.e12['s_str'],`1esn`:_usn3 Ends With 12e12 Ends With .e0}]-(`8esn` :`7esn`)) Where $0[01234567..00][$`2esn`..$@usn6] Merge (((`2esn` :`7esn`)<-[? *..7]->({`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null})<-[:`6esn`]->(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}))) On Create Set @usn6 =`3esn`[..7][..12e12];"),
    octest:ct_string("Match (usn1 :`3esn`:`1esn`)-[?:`4esn`|:`7esn` *..0x0]-(:@usn5{@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]}) Where #usn8 Ends With `4esn` Ends With $`4esn` Return Distinct *,$7[12.e12..] As #usn7,`4esn`[$#usn7] As `1esn` Skip #usn7[..$1000][..01] Limit {`8esn`:@usn5[..True][..0X7],`1esn`:`1esn` Contains Count ( * )}[{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}][Any(usn1 In $123456789 Contains usn2 Where 0.e0 Ends With 12 Ends With $7)] With Distinct 12.e12 Contains $`5esn` As `` Order By $usn1[1e1.._usn3][$@usn6..$#usn7] Desc Limit All(#usn8 In $`5esn` Is Null Is Null Where #usn8[$#usn8..])[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..(#usn8 {`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]})<-[?:@usn5|`8esn`]-(usn2 :@usn5{`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})<-[?:#usn8{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]->(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})] Where False In $`7esn` In .0 Union Remove [usn1 In 0x0[..`4esn`]|`` Starts With @usn5].`6esn`?,(:#usn7{`6esn`:.e12 =~0.0 =~9e0,@usn6:$usn2 =~$_usn4 =~`5esn`})<-[ *1000..]->(#usn7 {`2esn`:$``[_usn4..][`7esn`..],`3esn`:#usn7 Ends With 9e1})._usn4? Unwind [010 =~$usn2 =~1e1,`6esn` =~01234567 =~0Xa,07[1e1]][(:@usn6:`7esn`)<-[?:_usn3|:`4esn` *010{`8esn`:$``[_usn4..][`7esn`..]}]-(@usn6 {_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12})..][Extract(#usn8 In $`5esn` Is Null Is Null Where 1000[0.0][Null])..] As `5esn` Unwind .e12 Starts With True As `7esn` Union All With Distinct *,Any(@usn5 In $#usn8 Is Null Is Null Where True[Count(*)..][1e1..]) Is Not Null As `6esn` Where $@usn6 Contains 0 Contains $`2esn` Remove ({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})-[`5esn`? *010]-({@usn6:0.12 In $`4esn` In `6esn`,``:1e1 Is Null}).`7esn`! Delete 0X0123456789ABCDEF Contains $usn1;"),
    octest:ct_string("Match _usn3=((:``{`5esn`:.e1 In $@usn6 In 999})) Where .e0[7..$`3esn`] Delete (`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})<-[{_usn3:12.e12 In $0 In Count(*)}]->({`6esn`:$_usn4[$`8esn`..][07..]}) Ends With Any(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn7 In .e1 In 01) Ends With usn2(Distinct _usn3 Contains @usn6 Contains 1.e1),`` Contains 12 Contains True,07[12][$`6esn`] Merge (#usn7 :`6esn`:`7esn`)<-[`3esn`?:_usn3|:`4esn`]->(:`1esn`{_usn4:$_usn3[Null]})-[ *..0X7]->(`5esn` :_usn4:usn1) On Match Set _usn4:_usn3,[0xabc Contains $1000].`6esn` =(#usn8 :`5esn`{usn2:.e1 Starts With 0.0 Starts With `6esn`,#usn8:9e12 =~01 =~$`7esn`})<-[`7esn`?:`5esn`|`1esn` *0xabc]->(#usn7 {`6esn`:123456789 Is Null,`1esn`:00 In 12.e12})[Filter(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 0.12 Ends With $usn1 Ends With $@usn5)][`3esn`(Distinct 9e12[_usn3])],{@usn6:0.12[0.e0..][`4esn`..]}.`4esn` =0x0 Contains $`8esn` Contains `6esn` On Create Set `5esn`+=0 Starts With `6esn` Starts With 0X0123456789ABCDEF,`4esn`+=$`7esn` Ends With $usn2,[usn2 In 1000 Contains 0.e0 Where #usn7 Ends With 9e1|010 Is Null Is Null].@usn5! =$1000 Ends With 1e1 Ends With 123.654 Union All Create (:``{_usn3:0X0123456789ABCDEF In 01234567})<-[``?:@usn6]-(#usn8 :@usn6:`7esn`{@usn5:1e1[@usn5..]}) Create (({#usn8:12.0[..$7][..999],@usn5:$`1esn` Is Null})<-[``?:`1esn` *0xabc{`5esn`:$``[_usn4..][`7esn`..]}]->(#usn7 :@usn6:`7esn`{_usn3:\"d_str\" =~`3esn` =~0Xa}));"),
    octest:ct_string("Unwind `2esn`(Distinct 7[..12e12][..$`6esn`]) In Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where `5esn`[.e1][0Xa]) As `4esn` Return Distinct *,01234567 Is Null Is Null Order By 0e0 =~Count(*) =~0Xa Descending Skip [$1000 Is Null Is Null] Is Null Limit Extract(@usn6 In @usn5 In $`6esn` Where $`5esn` Contains $@usn6|$0[7..][Null..])[[`6esn` In 0X7 =~`` Where 9e1[0.e0..][#usn8..]]];"),
    octest:ct_string("Merge ((#usn8 {usn2:7 Contains 9e1})-[`6esn`? *00..{`8esn`:$`2esn`[123456789..][00..],`7esn`:123.654 Contains #usn8}]->(:_usn3{@usn6:$`7esn` Is Null Is Null})) Merge `2esn`=(_usn4 {`8esn`:9e1 In 01 In 999})<-[:_usn3|:`4esn`{_usn4:$`3esn` =~$`6esn` =~`8esn`,`5esn`:0X7[0e0..]}]-(:`8esn`) On Match Set @usn5+=`1esn`[9e12..$`8esn`][usn2..$``],usn1 =[12.e12 Ends With 01 Ends With .e1,$@usn5[0.12..][@usn5..],$usn1 In 1000 In $#usn7] Is Not Null On Match Set _usn4 =0 Contains 12e12,`1esn`:#usn8,`7esn` =0 Is Not Null Unwind $@usn6 Starts With usn2 Starts With usn2 As _usn4 Union Unwind #usn8 Is Not Null As usn2 Match #usn8=(usn1 :`4esn`:#usn8) Where 00[``..][$`4esn`..] Create `5esn`=((#usn8 :`1esn`{#usn7:1e1[`6esn`..]})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->({usn1:`2esn`[$`1esn`..][$_usn3..]})),`5esn`=(((`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[ *..7]-(:_usn3{@usn6:$`7esn` Is Null Is Null})-[:`7esn`|`2esn` *12..0xabc]->(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}))) Union All With Distinct *,07[0..`4esn`] Order By Single(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $123456789 Ends With $`6esn`)[Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn7 In .e1 In 01)..][{`1esn`:@usn6[`5esn`..$`3esn`],_usn3:$999 Ends With $`3esn` Ends With `8esn`}..] Asc,$999[12.0..] Asc,All(`4esn` In $`8esn` Starts With 1000 Where 0X0123456789ABCDEF[.e0..$`4esn`])[(#usn8 :@usn6:`7esn`{``:9e1 Is Not Null Is Not Null})-[`1esn`{_usn4:`3esn` Contains 0Xa}]->(#usn7 :usn2:@usn6{`1esn`:$usn2 Contains 12.e12 Contains 00})-[`8esn` *..0x0]-(:`2esn`:`3esn`{usn2:$`5esn` In False})..#usn7(Distinct False Contains `3esn`,12e12[_usn3..][$@usn5..])] Asc Skip $1000 In $`7esn` In $7 Remove Any(usn2 In 1000 Contains 0.e0 Where @usn6[`3esn`..][$7..]).`1esn`,#usn7:_usn4:usn1,(#usn7 {`2esn`:$``[_usn4..][`7esn`..],`3esn`:#usn7 Ends With 9e1})<-[`2esn`:usn1|`3esn` *0Xa]->(`2esn` :`1esn`{``:9e1 Starts With _usn3 Starts With `4esn`})._usn3! Delete usn1[1e1][$_usn4],$123456789[..0.12][..#usn7];"),
    octest:ct_string("With Distinct *,[#usn7 In 01234567[$`3esn`..] Where `7esn` Starts With $`` Starts With $#usn7|07 In 0 In 's_str'][Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 12.0[..$7][..999])..][[@usn5 In .12[#usn7][$`8esn`] Where $0[7..][Null..]|$@usn5 Contains 01]..] As @usn6,0x0[123456789] As _usn3 Order By Extract(@usn5 In 0X7 =~.0 =~\"d_str\" Where $`4esn`[9e1..][0..]|$0 =~$usn1 =~9e1)[{``:\"d_str\",`1esn`:$1000 =~$`7esn`}] Descending Skip $`5esn` In `2esn` In .0 Where 9e12[0.0..12.e12] Unwind Any(@usn6 In @usn5 In $`6esn` Where 9e0[$_usn3..0X7][7..$#usn8]) Contains None(usn1 In 00 Starts With _usn3 Where 01234567 Ends With 12.0 Ends With 0X7) Contains Single(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn8 In .e12 In 9e1) As `4esn` With  Extract(`6esn` In 0X7 =~``|9e0 In 01234567) Contains Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) As `5esn` Where 010 Is Null Is Null Union All Merge `5esn`=(((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})-[:`7esn`|`2esn` *..0X7{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]-(`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})-[`4esn`? *00..]-(:`4esn`:#usn8{@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]}))) On Create Set `1esn`+=_usn4(Distinct `7esn` Starts With $usn2 Starts With .e0) =~`3esn`() =~#usn8(9e0 Ends With $`7esn`) Remove Filter(usn2 In 1000 Contains 0.e0 Where 12e12[$`5esn`][07])._usn4? Union Merge `2esn`=(:`3esn`:`1esn`{usn1:`4esn` In $12 In `8esn`})-[?:usn1|`3esn` *999..{_usn4:$999[12.0..],usn1:0[usn2..]}]->(:usn2:@usn6{@usn5:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:.12 Ends With $`4esn` Ends With Count(*)}) On Create Set [@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where .e0[..999][..0X7]]._usn4 =(`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})<-[{_usn3:12.e12 In $0 In Count(*)}]->({`6esn`:$_usn4[$`8esn`..][07..]}) Ends With Any(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn7 In .e1 In 01) Ends With usn2(Distinct _usn3 Contains @usn6 Contains 1.e1) On Match Set Single(usn1 In 00 Starts With _usn3 Where $`7esn` Ends With 07 Ends With 07).`6esn`? =Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 00 Ends With .12 Ends With `4esn`) Contains {`7esn`:0e0 Is Null Is Null,usn2:`4esn` =~123456789},@usn5 =[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn7 In .e1 In 01][..(usn1 :#usn8)-[:`1esn` *010{`2esn`:$_usn3[9e1][$_usn4],`7esn`:`7esn`[...e1][..\"d_str\"]}]->(`7esn` :#usn8)<-[:#usn7|:_usn4{usn2:`5esn`[Count ( * )..][\"d_str\"..],`7esn`:.e1 In $@usn6 In 999}]-({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})][..Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $usn2[..12.0])],[usn1 In 00 Starts With _usn3 Where 12 Ends With .e12 Ends With $7|_usn3 =~00].#usn7! =Single(usn1 In $123456789 Contains usn2 Where Count ( * )[..1e1]) Is Not Null Unwind 12e12[_usn3..][$@usn5..] As usn2;"),
    octest:ct_string("Delete `7esn`($123456789 In Count(*) In .e1) Ends With Extract(@usn5 In .12[#usn7][$`8esn`] Where $0[7..][Null..]|Count ( * )) Ends With Any(usn1 In 0x0[..`4esn`] Where False[.e1..Null]),`7esn`(0.0[1000..][.e1..],$@usn5 Contains 01)[Any(usn1 In 0x0[..`4esn`] Where 0X7[.e12..01234567])][[$@usn6 Contains 07 Contains 0.e0,`5esn` In 12]],$usn1[0.12..]['s_str'..] Unwind 999 Contains `7esn` As `7esn` Merge @usn5=(:@usn5{usn1:Count(*)[True],@usn6:123456789[$#usn7..]})<-[#usn7]-(`7esn` :`2esn`:`3esn`)-[?:``|:_usn4 *..0X7]->(`4esn` {`6esn`:$12[..``][..$7]}) On Create Set usn1+=$@usn6 In $`5esn` In $usn2 Union All Detach Delete [`4esn` In 's_str'[12..'s_str'] Where 9e12 =~01 =~$`7esn`][#usn7(00 In 12.e12)..Extract(usn1 In 0x0[..`4esn`] Where 1000 Ends With 1000 Ends With $`4esn`|@usn6[$`3esn`])][(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})<-[`8esn`]->(#usn8 )<-[`3esn` *00..{`8esn`:@usn6 Contains .e1 Contains $`4esn`,_usn4:0X7[..12e12]}]->(@usn5 {`1esn`:0[usn2..]})..(usn1 :_usn4:usn1)<-[@usn5?:`1esn`]-(#usn7 :`2esn`:`3esn`)],010 In @usn5 In `5esn`,1e1 In $999 In $usn2 Return 01234567 Is Null Is Null As `3esn`,0.12 Contains $12 Contains `8esn` As `5esn`,9e0 Starts With `6esn` Skip `3esn` Ends With 010 Limit Any(usn1 In 00 Starts With _usn3 Where `2esn` Is Not Null Is Not Null) Starts With All(`4esn` In $`8esn` Starts With 1000 Where 1.e1[0X0123456789ABCDEF..][$`5esn`..]) Starts With {`4esn`:$usn2 Contains 12.e12 Contains 00,`5esn`:7[$`4esn`..123456789]} Union All With  *,`` =~12 =~$#usn7 Order By 0X7 In 's_str' In $`1esn` Descending,@usn5 In 0X0123456789ABCDEF Asc,$`4esn` In $12 In _usn3 Ascending Skip [usn2 In 1000 Contains 0.e0 Where @usn6[`3esn`..][$7..]] In [0xabc[12.e12..`1esn`]] In {@usn6:$_usn3[..Count ( * )][..@usn5],@usn5:12e12[Null]} Where 0.12 In $`4esn` In `6esn` With  ({`1esn`:@usn6})<-[_usn4?:_usn4|:@usn5 *123456789..999{`2esn`:@usn5 In $`6esn`}]->(:`3esn`:`1esn`{`1esn`:0.0[1000..][.e1..]}) Is Null Is Null As `3esn` Skip count(Distinct 's_str' Starts With 1000 Starts With #usn8,12e12 Starts With $123456789 Starts With 12.0)[[_usn4 In usn1 Contains False Contains `` Where $#usn8]][[$`1esn` Is Null,\"d_str\" =~`6esn` =~0Xa,$usn2[0e0..]]];"),
    octest:ct_string("Merge usn1=(:`4esn`:#usn8{@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]}) On Create Set `8esn`+=$12[..7][..07],@usn5+=#usn7 Starts With .e12 Starts With $`7esn` Union Unwind $`2esn`[$123456789..$`1esn`][0Xa..$``] As `7esn`;"),
    octest:ct_string("Unwind 12.e12[0e0..7] As @usn5 Match (((`3esn` :`8esn`)-[`5esn`{usn2:`6esn`['s_str'..][010..]}]->(_usn3 :usn2:@usn6)-[:`7esn`|`2esn` *..0X7{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]->(`5esn` {usn2:`5esn`[.e1][0Xa],@usn5:$usn1 In 1000 In $#usn7}))),`6esn`=((#usn7 :#usn8{`2esn`:12 =~usn1 =~.e12})) Where 12.e12['s_str'] Union All With  01234567 Ends With 0x0,[`2esn` In `7esn` Starts With $`` Starts With $#usn7][{#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1}..] As #usn8,$1000 Is Not Null Is Not Null Order By 's_str'['s_str'..$usn2][_usn3.._usn3] Asc Skip Extract(usn2 In 1000 Contains 0.e0 Where True[Count(*)..][1e1..]|1000[..$`6esn`][..0xabc]) Ends With [07[$999],12e12[Count ( * )..][usn2..]] Limit Null[01234567][01234567] Where 0X7[..12e12] With Distinct $12 Contains 123.654 Contains `8esn` As _usn4 Limit Filter(@usn6 In @usn5 In $`6esn` Where .12[`1esn`..][$`3esn`..]) Union All Merge _usn4=(usn1 :_usn4:usn1)<-[`5esn` *0..010]-(usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1}) On Create Set `4esn` =$@usn6 Contains 07 Contains 0.e0 On Match Set [0X7 =~.0 =~\"d_str\",9e1[...e0]].@usn5 =Single(@usn5 In .12[#usn7][$`8esn`] Where `6esn` =~$_usn3) Ends With {`2esn`:.12 Ends With `1esn` Ends With $`1esn`,`5esn`:9e12[@usn6..$``][#usn8..Count ( * )]} Ends With (:_usn3{`2esn`:$`5esn` Is Null,@usn6:#usn7 Starts With `1esn`})<-[``?:@usn6]-(:`2esn`:`3esn`{`6esn`:01 In _usn3 In 12,_usn3:$`3esn` =~$`6esn` =~`8esn`})<-[:_usn4|:@usn5 *..0X7]->(`4esn` {`7esn`:.e0[..999][..0X7]}),{@usn6:usn1 In 1000 In $`5esn`,@usn6:9e0[``][123.654]}.`3esn`! =$999 In $`8esn` In `5esn` Merge ((({`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})<-[?:@usn6]-(`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})-[:_usn4|:@usn5]->(`5esn` :#usn7))) On Match Set (`5esn` {@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00})<-[?{#usn7:`6esn`[False..0.0][12e12..$usn2]}]-(`4esn` {`4esn`:#usn7[..$1000][..01]})-[`5esn`?:`3esn`|:`4esn`{`1esn`:$usn2 Contains 12.e12 Contains 00}]-(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]}).`4esn`! =0 Is Not Null,`6esn` =9e12 Ends With 0X0123456789ABCDEF Ends With #usn7,`1esn` =$_usn3[$`4esn`..Null] On Create Set 12.e12.`4esn`? =12e12 Starts With $123456789 Starts With 12.0,(#usn8 :_usn3)-[`8esn`?:`6esn`{#usn7:True =~@usn5 =~$`1esn`,@usn6:False[.e1..Null]}]->(:``{`2esn`:$7,usn1:.12 Contains $`4esn` Contains $`6esn`})-[`6esn`?:@usn6 *999..]->(`2esn` :usn2:@usn6).`3esn`? =All(#usn8 In $`5esn` Is Null Is Null Where #usn8[$#usn8..])[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..(#usn8 {`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]})<-[?:@usn5|`8esn`]-(usn2 :@usn5{`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})<-[?:#usn8{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]->(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})];"),
    octest:ct_string("Unwind `1esn`[12.e12][01] As _usn3 Create (@usn5 {@usn6:$123456789[0X7..12.e12]});"),
    octest:ct_string("Match `8esn`=((({`1esn`:12[..9e0][..999],usn1:0x0 =~$`7esn` =~@usn6})-[#usn8:`3esn`|:`4esn` *0..010]-(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]})<-[_usn3]->(_usn4 :`3esn`:`1esn`{`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]}))) Where $usn2[0e0..];"),
    octest:ct_string("With  $`1esn` Starts With $999 As #usn8,False In $`7esn` In .0 Skip 123456789 Starts With #usn7 Starts With `6esn` Limit 12e12 Is Not Null Where $999[$1000] Merge `6esn`=((@usn6 :`8esn`{`2esn`:0X7 =~.0 =~\"d_str\"})-[_usn3 *010]->(:usn1{`8esn`:usn1 Contains $``})<-[`8esn`?:``|:_usn4 *..01]-({`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null})) On Create Set [@usn6 In @usn5 In $`6esn` Where False Contains `3esn`].`6esn` =[#usn7 In 01234567[$`3esn`..] Where `7esn` Starts With $`` Starts With $#usn7|07 In 0 In 's_str'][Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 12.0[..$7][..999])..][[@usn5 In .12[#usn7][$`8esn`] Where $0[7..][Null..]|$@usn5 Contains 01]..],`8esn` =[`6esn` In 0X7 =~`` Where 12.e12['s_str']|00[7..$123456789]][All(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6)..][Extract(`4esn` In $`8esn` Starts With 1000 Where 1.e1[0X0123456789ABCDEF..][$`5esn`..]|9e1[...e0])..],($999)<-[ *00..{@usn5:$`5esn` Is Null Is Null}]->(@usn5 {`1esn`:0[usn2..]})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`1esn` :usn2:@usn6).`4esn` =`3esn` =~0.0 =~$`` On Create Set #usn8+=Extract(#usn7 In 01234567[$`3esn`..] Where 0xabc[$@usn5])[All(`4esn` In 's_str'[12..'s_str'] Where $_usn4[12e12][`4esn`])][(`6esn` :`5esn`)<-[:``|:_usn4 *0Xa]->(`7esn` :`2esn`:`3esn`)],`2esn` =$_usn4[$`1esn`..][$0..] Union Create #usn8=(usn1 :`4esn`:#usn8) With  [#usn8 In $`5esn` Is Null Is Null Where 0.0[..12e12][..$0]][{`2esn`:.e1 In $@usn6 In 999,usn2:@usn5 Ends With $`3esn` Ends With 12e12}..] As @usn5,usn2[`3esn`][_usn3] Order By None(usn2 In 1000 Contains 0.e0 Where $`6esn`[Count(*)..0.e0][0.0..Count ( * )])[(:usn2:@usn6{@usn6:$`4esn`[$`2esn`..]})<-[#usn8? *12..0xabc]-(:`6esn`:`7esn`{`3esn`:`8esn`[$``]})][Any(@usn6 In @usn5 In $`6esn` Where 12.0[0Xa][00])] Descending Merge ((@usn5 :_usn4:usn1{`1esn`:07[1e1],`7esn`:12e12[$`5esn`][07]})) On Match Set [@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where .e0[..999][..0X7]]._usn4 =(`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})<-[{_usn3:12.e12 In $0 In Count(*)}]->({`6esn`:$_usn4[$`8esn`..][07..]}) Ends With Any(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn7 In .e1 In 01) Ends With usn2(Distinct _usn3 Contains @usn6 Contains 1.e1) On Match Set usn2 =$`4esn`[$`6esn`];"),
    octest:ct_string("Match usn2=(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})-[?:#usn7|:_usn4]->(`` :#usn7$0)-[`2esn` *0X0123456789ABCDEF..{usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3}]->(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]}),(`8esn` {`3esn`:12e12 Is Not Null})-[_usn4?:_usn4|:@usn5 *123456789..999{`2esn`:@usn5 In $`6esn`}]->(`1esn` {`4esn`:$`7esn`[$usn1..][0.0..],`1esn`:$123456789[..0x0][..`4esn`]})-[`1esn`:`1esn`{``:_usn3[...e1],`2esn`:.12[`1esn`..][$`3esn`..]}]-(`7esn` :_usn4:usn1) Where $#usn8 Is Null With Distinct $`5esn` Is Null As _usn3,[usn1 In 0x0[..`4esn`] Where $1000 Is Null Is Null|12[usn1][True]] Starts With (`` :@usn5{#usn7:0X7[12]})-[@usn6? *07..{_usn4:Count(*)[..`3esn`],`5esn`:01234567[$`3esn`..]}]-(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null})<-[`5esn`:`8esn`|:usn1{usn1:12e12[Count ( * )..][usn2..],usn2:$123456789 Is Null Is Null}]-(`8esn` ) Starts With (`5esn` {usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null})<-[ *00..{@usn5:$`5esn` Is Null Is Null}]->(`3esn` :`4esn`:#usn8{``:\"d_str\" Is Null Is Null})<-[@usn5?:``|:_usn4]-(_usn3 :`4esn`:#usn8) As @usn5 Order By (`8esn` :usn2:@usn6)<-[#usn7:`3esn`|:`4esn` *00..]->(`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}) =~{@usn6:$_usn3[..Count ( * )][..@usn5],@usn5:12e12[Null]} =~Extract(usn2 In 1000 Contains 0.e0 Where $`7esn` Ends With $`2esn` Ends With $usn1) Descending,$`2esn` Ends With `3esn` Ends With $7 Desc Where $usn1[_usn4..][usn2..] Optional Match `8esn`=(($12)<-[:``|:_usn4{`8esn`:0 Ends With $7 Ends With _usn3}]-(#usn7 {`6esn`:123456789 Is Null,`1esn`:00 In 12.e12})<-[#usn8?:`6esn` *0..010]-(`` :@usn5)),(:``{`5esn`:.e1 In $@usn6 In 999})-[`5esn`?:`3esn`|:`4esn`{`1esn`:$usn2 Contains 12.e12 Contains 00}]-(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]}) Where 1e1[..#usn8][..'s_str'];"),
    octest:ct_string("Unwind 12 Ends With 07 Ends With @usn6 As `1esn` Union Merge @usn5=(`3esn` :`8esn`{usn1:`2esn`[$`3esn`..],`6esn`:$12[..``][..$7]})-[@usn5?:``|:_usn4]-(`8esn` :#usn8)<-[?:``|:_usn4]-({`5esn`:00 Ends With $_usn4 Ends With $`2esn`,usn2:#usn7 Starts With 0 Starts With 12}) On Create Set _usn3 ={`1esn`:`4esn` In $12 In `8esn`} Contains None(@usn5 In .12[#usn7][$`8esn`] Where .e12 =~0.0 =~9e0) Contains [@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]] Merge ((@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(:``{`2esn`:9e0[``][123.654],`1esn`:$_usn3[Null]})-[@usn6?:#usn7|:_usn4 *00..]->(`` :@usn5{#usn7:0X7[12]})) On Match Set (@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})<-[`6esn`:`4esn`|:`7esn` *1000..{`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null}]->(:#usn7)<-[`5esn`:`8esn`|:usn1]->(`5esn` :`6esn`:`7esn`{`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]}).#usn7? =1000 Contains 123456789 Contains 1e1 On Match Set usn1+=`4esn` Is Null;"),
    octest:ct_string("Create `1esn`=(((`3esn` {_usn4:12.e12 Ends With 01 Ends With .e1})-[@usn6? *1000..{#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1}]-(:@usn5{@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]})<-[? *0xabc{`7esn`:$`5esn` Contains $@usn6,#usn7:12.e12 Ends With 01 Ends With .e1}]->(`7esn` :usn1{`1esn`:00 Starts With _usn3}))),(@usn5 {_usn4:_usn3 Ends With 0x0 Ends With 01234567}) Create #usn7=((#usn7 :`5esn`)<-[:`2esn`|usn2 *07..]-({`7esn`:`6esn` Starts With $@usn6,``:`6esn` =~$_usn3})<-[`1esn`?:`1esn` *01234567..12]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})),usn1=((`4esn` :`5esn`{@usn6:$usn2 =~$#usn8,`8esn`:`6esn` =~$_usn3})-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`7esn` :_usn4:usn1)<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})) Union With Distinct *,`7esn`[$@usn6..$usn2]['s_str'..1e1] As `3esn`,Extract(@usn6 In @usn5 In $`6esn` Where 9e0 =~$`5esn`|`2esn`[$`1esn`..][$_usn3..]) =~Extract(@usn6 In @usn5 In $`6esn` Where .12[`1esn`..][$`3esn`..]|Count ( * ) =~Count(*)) Skip {@usn5:0.e0[@usn6][0x0]} Ends With All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 7 In $`3esn` In #usn7) Limit \"d_str\" =~12.e12 =~07;"),
    octest:ct_string("With  123.654 Is Not Null Is Not Null As `3esn`,$usn1 In 1000 In $#usn7 As `8esn` Order By .12 Starts With $usn2 Asc,[usn1 In 00 Starts With _usn3 Where False[.e1..Null]|1000[0.0][Null]][Filter(usn2 In 1000 Contains 0.e0 Where $`7esn` Ends With $`2esn` Ends With $usn1)..][Single(usn2 In 1000 Contains 0.e0 Where 0e0 Is Not Null Is Not Null)..] Asc,{`8esn`:$123456789 Is Null Is Null,_usn3:$`4esn` Starts With 1e1}[(#usn7 :`2esn`:`3esn`)<-[`8esn`?]->(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})..All(_usn4 In usn1 Contains False Contains `` Where $`8esn`[$``..$7][$1000..$`7esn`])] Descending Skip $@usn5[$#usn8..][9e1..] Limit $123456789[0X7..12.e12] Where 0.12[0.e0..][`4esn`..] Union All Remove {``:7[..`1esn`],_usn4:.e1 Ends With _usn4 Ends With @usn5}.usn2? Detach Delete (`5esn` {usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null})<-[`4esn`{#usn8:Null[0e0][12],`2esn`:`8esn` In $@usn5}]-({_usn3:999 In $_usn4 In 0X7,`1esn`:1e1 In $#usn8 In 12e12}) Contains 0X0123456789ABCDEF Contains Extract(#usn8 In $`5esn` Is Null Is Null Where #usn8[$#usn8..]|$@usn6[..$usn1]);"),
    octest:ct_string("With  @usn6 Starts With `7esn` Starts With Null,$usn1[#usn8..][``..] As `2esn`,`3esn`[$`1esn`..] As usn2 Skip ({usn1:`4esn` In $12 In `8esn`})-[`4esn`]-(`1esn` {usn1:True[Count(*)..][1e1..],usn1:9e1 Is Null Is Null})<-[?{`5esn`:0x0 Contains $`8esn` Contains `6esn`,#usn8:010 =~$usn2 =~1e1}]->({`6esn`:$`5esn` Is Null,`2esn`:`7esn` Starts With $usn2 Starts With .e0})[[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 0e0 =~_usn4|0x0 Contains _usn4 Contains 123456789]..[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 7 In $`3esn` In #usn7]][usn1($`1esn` Is Null Is Null,$0[0X0123456789ABCDEF..$#usn7])..[usn1 In 00 Starts With _usn3 Where .12[9e0][$7]|07]];"),
    octest:ct_string("Create ((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})-[?:usn1|`3esn`{#usn8:1000[..$`6esn`][..0xabc]}]->(:_usn4:usn1{``:123456789 Starts With `2esn` Starts With .0,`5esn`:``})-[``?:usn1|`3esn`]->(:@usn5{#usn7:1e1[@usn5..]})),((`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`})-[`3esn`? *999..]->({`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})<-[#usn7:`7esn`|`2esn` *..01{``:0X7 In 's_str' In $`1esn`,#usn8:010 Contains Count(*)}]-(`1esn` :`4esn`:#usn8{_usn4:$_usn4[#usn8..]})) Return Distinct *,$123456789 =~$#usn8 =~$#usn8 Order By $@usn6 Contains 07 Contains 0.e0 Asc Skip 0e0[12][$_usn4] Limit 123.654[12.e12..1e1];"),
    octest:ct_string("Merge @usn6=({`3esn`:$`3esn` =~$`7esn` =~False,`4esn`:12 Ends With 01234567}) On Match Set #usn7 =Any(usn1 In 00 Starts With _usn3 Where `2esn` Is Not Null Is Not Null) Starts With All(`4esn` In $`8esn` Starts With 1000 Where 1.e1[0X0123456789ABCDEF..][$`5esn`..]) Starts With {`4esn`:$usn2 Contains 12.e12 Contains 00,`5esn`:7[$`4esn`..123456789]} Union Remove [$`2esn` =~'s_str',12 Ends With 01234567,$1000 Is Null Is Null].`3esn`?,[12.e12[...0][..0x0]]._usn4,(`1esn` :`8esn`)<-[#usn7:`3esn`|:`4esn` *00..]->(`4esn` :`8esn`)-[`4esn`? *0Xa]-(`7esn` :`2esn`:`3esn`{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}).`3esn`? With Distinct [@usn6 In @usn5 In $`6esn` Where $`1esn` Is Null Is Null] Contains Filter(`4esn` In 's_str'[12..'s_str'] Where 123.654 Starts With usn1 Starts With @usn5) Contains [`4esn` In $`8esn` Starts With 1000 Where False In `3esn`] Order By [#usn8 Ends With `4esn` Ends With $`4esn`,$`2esn` =~'s_str',$#usn7[...e12][..$7]][#usn7(0x0 =~_usn4,`5esn` =~0Xa)][{#usn8:$999 Ends With $`3esn` Ends With `8esn`}] Descending,9e12 Asc Skip 0X7[.e12..01234567] Limit $_usn4[0.12..$`6esn`][00..$@usn6] Match `4esn`=(({_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`})) Union Create ((`7esn` :`2esn`:`3esn`{@usn6:9e0 Ends With $`7esn`})),``=((`3esn` ));"),
    octest:ct_string("Merge `1esn`=((@usn5 :@usn6:`7esn`{`6esn`:$0[01234567..00][$`2esn`..$@usn6],`3esn`:`6esn` Starts With $@usn6})) Remove Single(_usn4 In usn1 Contains False Contains `` Where 0X7 In 123.654 In $`2esn`).`6esn`?,(:_usn4:usn1{#usn7:$`5esn` Is Null Is Null,usn2:usn1[$`3esn`..$999][True..False]})-[``?:@usn6{#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}]->(@usn5 :`3esn`:`1esn`{`3esn`:$`5esn` Is Not Null,`2esn`:9e1[0.e0..][#usn8..]})<-[usn2:`8esn`|:usn1*..{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]->({#usn7:False[`2esn`..#usn8]})._usn4!,@usn5:`4esn`:#usn8 Merge (({usn2:00,#usn8:usn2 Ends With $`5esn` Ends With `2esn`})<-[_usn3?:`2esn`|usn2{`3esn`:0[0.12..]}]->(:``{`1esn`:`6esn` =~$_usn3})) Union Unwind 123456789 Starts With #usn7 Starts With `6esn` As `7esn` Return Distinct Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $usn2[..12.0]) In Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where Count(*)[True]) In Extract(`4esn` In 's_str'[12..'s_str'] Where 0xabc Ends With $#usn7 Ends With #usn8|.e1 Starts With 0.0 Starts With `6esn`) As #usn7,@usn5 Starts With \"d_str\" As ``;"),
    octest:ct_string("With Distinct 9e12 Ends With 0X0123456789ABCDEF Ends With #usn7 As `8esn`,1000[123.654..9e12][1000.._usn3] As `6esn`,Extract(usn1 In 00 Starts With _usn3 Where 00|0 Is Not Null Is Not Null) Starts With (:``{_usn3:Count(*)['s_str'..`1esn`],`1esn`:$`6esn`[$`1esn`][1000]})-[? *00..{_usn3:07[Count ( * )...e1][0X0123456789ABCDEF..$7],`1esn`:$`2esn` =~'s_str'}]->(_usn4 )<-[`2esn`?]-(usn2 :`3esn`:`1esn`) Starts With {_usn3:'s_str' =~0.e0} As `4esn` Where 7[..12e12][..$`6esn`] Optional Match `5esn`=((#usn8 :`1esn`{#usn7:1e1[`6esn`..]})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->({usn1:`2esn`[$`1esn`..][$_usn3..]})),`5esn`=(((`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[ *..7]-(:_usn3{@usn6:$`7esn` Is Null Is Null})-[:`7esn`|`2esn` *12..0xabc]->(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}))) Where `7esn` In 999 In @usn6;"),
    octest:ct_string("Detach Delete .e1 Starts With 0.0 Starts With `6esn`,(:`1esn`{@usn5:123456789 Starts With `2esn` Starts With 9e12})-[#usn7? *999..]-(@usn5 :_usn4:usn1{`1esn`:07[1e1],`7esn`:12e12[$`5esn`][07]})-[`6esn`:``|:_usn4 *..01]->(`7esn` :`6esn`:`7esn`{_usn4:07 In `5esn` In 12e12})[Extract(#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|`7esn` Starts With $usn2 Starts With .e0)..Extract(#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str')],`1esn` Contains Count ( * ) Unwind 0Xa[0xabc..] As @usn6 Create `4esn`=((@usn6 {`3esn`:0.12 In $7 In 0,_usn3:07[$999]})-[`1esn`:`5esn`|`1esn` *..7{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]}]->(usn2 :@usn6:`7esn`)<-[:@usn5|`8esn` *0Xa{usn1:$1000 Contains $`3esn`}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]})),(`7esn` :_usn4:usn1)-[_usn4?:#usn8 *..0X7{@usn5:07}]-(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})-[`1esn`{`2esn`:.12 Starts With @usn5 Starts With $#usn8}]->(:usn1{`6esn`:1000 Contains 0.e0,`7esn`:$@usn6[..$#usn7][..12.e12]}) Union Remove Single(_usn4 In usn1 Contains False Contains `` Where False In 123456789 In $0).#usn8?,[`2esn` Is Not Null Is Not Null].`7esn` With Distinct [$#usn7[True..][$0..]][..(usn1 :#usn8)-[:`1esn` *010{`2esn`:$_usn3[9e1][$_usn4],`7esn`:`7esn`[...e1][..\"d_str\"]}]->(`7esn` :#usn8)<-[:#usn7|:_usn4{usn2:`5esn`[Count ( * )..][\"d_str\"..],`7esn`:.e1 In $@usn6 In 999}]-({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})][..[@usn5 In $#usn8 Is Null Is Null Where 12.e12[@usn5..123.654]]] Order By {#usn7:0[0.12..]} Ends With Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]) Ends With {@usn5:\"d_str\" Is Null Is Null,@usn5:$_usn4[`3esn`][0]} Desc Skip 00 Starts With _usn3 Limit True =~@usn5 =~$`1esn` Union All Optional Match #usn8=((`8esn` :`7esn`{`8esn`:False In 123456789 In $0})<-[`6esn`:_usn4|:@usn5 *..7{_usn4:0.0 =~0X7 =~#usn7}]->(@usn6 {_usn3:$_usn4[$`1esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})),`1esn`=(((`3esn` {_usn4:12.e12 Ends With 01 Ends With .e1})-[@usn6? *1000..{#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1}]-(:@usn5{@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]})<-[? *0xabc{`7esn`:$`5esn` Contains $@usn6,#usn7:12.e12 Ends With 01 Ends With .e1}]->(`7esn` :usn1{`1esn`:00 Starts With _usn3}))) Where 010 Contains Count(*) Return Distinct *,[@usn6 =~01,$`7esn` In $7,00[``..][$`4esn`..]][All(`4esn` In $`8esn` Starts With 1000 Where 9e1 Is Null Is Null)..(_usn4 {_usn3:$`1esn` Is Null,usn1:$`4esn`[$`2esn`..]})<-[#usn8?:_usn4|:@usn5 *..0x0]-(#usn8 :`1esn`{#usn7:1e1[`6esn`..]})] As @usn6 Order By 010 Starts With `7esn` Starts With 9e1 Ascending,123456789 Is Null Descending,Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With $usn1|.12 Ends With `1esn` Ends With $`1esn`)[[True[..'s_str'][..01],_usn4 Ends With 01 Ends With $`1esn`,.0[$`6esn`..False]]..`7esn`(Distinct 010 Is Null Is Null,$`8esn`[..$``])][({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})<-[? *0..010]-(`4esn` :`5esn`{_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[:#usn7|:_usn4 *1000..{_usn4:07 In `5esn` In 12e12,@usn6:.0 Is Null Is Null}]->(#usn7 $usn2)..All(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null)] Desc Skip {#usn8:$`5esn` In False,usn2:$`7esn` In $7} Is Not Null Is Not Null Match #usn8=((`8esn` :`7esn`{`8esn`:False In 123456789 In $0})<-[`6esn`:_usn4|:@usn5 *..7{_usn4:0.0 =~0X7 =~#usn7}]->(@usn6 {_usn3:$_usn4[$`1esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})),`6esn`=(`6esn` :`5esn`) Where $`2esn`[..`2esn`];"),
    octest:ct_string("Create @usn6=((`2esn` :`8esn`{`2esn`:$`8esn` In \"d_str\" In 9e12})-[`5esn`:`8esn`|:usn1{usn1:12e12[Count ( * )..][usn2..],usn2:$123456789 Is Null Is Null}]->(@usn5 :#usn8{@usn5:$@usn5 Contains 01,`2esn`:@usn6[`3esn`..][$7..]})),_usn3=(`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})<-[`8esn`?:`5esn`|`1esn`]-(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]})<-[`3esn`?*..]->(`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]}) Create (((@usn6 {#usn7:False[`2esn`..#usn8]})-[? *010]-(`8esn` :@usn5)<-[#usn8?{`5esn`:Null[01234567][01234567]}]->(`6esn` :@usn6:`7esn`{@usn5:True[0x0][@usn6],`5esn`:Null Starts With _usn4 Starts With `6esn`}))),`8esn`=((_usn4 :`3esn`:`1esn`{`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]})) Union All Detach Delete Extract(`4esn` In `6esn`['s_str'..][010..] Where 07 In $7 In 12|$#usn8)[{`6esn`:12[usn1][True],`3esn`:$@usn6[..$usn1]}..][{`8esn`:00}..],$`6esn` Is Null Is Null;"),
    octest:ct_string("Unwind 0 Starts With `6esn` Starts With 0X0123456789ABCDEF As @usn6 Return *,01234567 Is Null Is Null Order By {`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null}[..[_usn4 In usn1 Contains False Contains `` Where True[..'s_str'][..01]]] Ascending Skip 010 =~$usn2 =~1e1 Union All With Distinct 0x0 In `8esn` In 999,``[$`3esn`][$`2esn`],01234567 Ends With 12.0 Ends With 0X7 Order By Count ( * )[..usn1][..12.e12] Asc,$usn2 Is Not Null Is Not Null Descending Skip `3esn`(Distinct $_usn3[Null],12[..True][..$`4esn`]) Is Null Is Null Detach Delete _usn3 Ends With 12e12 Ends With .e0,({`5esn`:0.12 Contains .e1})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:@usn5{#usn7:1e1[@usn5..]})<-[?:`6esn` *01234567..12{`7esn`:7 In 0xabc}]-(#usn7 :usn2:@usn6{`1esn`:$usn2 Contains 12.e12 Contains 00}) =~None(usn1 In 00 Starts With _usn3 Where False[.e1..Null]) Unwind $123456789 In Count(*) In .e1 As usn1;"),
    octest:ct_string("Unwind 07[..$_usn3] As #usn7 Union All Create #usn8=((`8esn` :`7esn`{`8esn`:False In 123456789 In $0})<-[`6esn`:_usn4|:@usn5 *..7{_usn4:0.0 =~0X7 =~#usn7}]->(@usn6 {_usn3:$_usn4[$`1esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})),`6esn`=(`6esn` :`5esn`);"),
    octest:ct_string("Remove (@usn5 :`3esn`:`1esn`{_usn3:#usn7 Starts With `1esn`})-[*{`2esn`:$1000[01234567]}]-(`4esn` :`1esn`)<-[`5esn`?:#usn8{#usn7:0.12 Ends With $usn1 Ends With $@usn5}]->({`1esn`:$@usn5 =~$`` =~$usn2}).#usn7,None(@usn5 In .12[#usn7][$`8esn`] Where $@usn5 =~$`` =~$usn2).`5esn`? Union Create #usn7=(((`4esn` )<-[_usn3?:`3esn`|:`4esn` *0..010]->(_usn3 )<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3}))),`5esn`=(#usn7 {@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]}) Union All Merge `1esn`=(((:_usn3{@usn6:$`7esn` Is Null Is Null})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :usn2:@usn6)<-[`3esn`? *999..{`6esn`:.e12 =~0.0 =~9e0,@usn6:$usn2 =~$_usn4 =~`5esn`}]->(:@usn6:`7esn`{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`}))) On Match Set _usn3+=01 In 01 In 12,#usn7 =$@usn5,`1esn`:`5esn` Detach Delete $@usn6[_usn3..0.e0] With  [#usn8 In $`5esn` Is Null Is Null][Single(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where #usn7[..$1000][..01])..][[@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7|`6esn`[1.e1..$#usn7][.e0..True]]..],(`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[usn1?:`8esn`|:usn1]->({`6esn`:.e1 Starts With 0.0 Starts With `6esn`,_usn3:$@usn6 Contains 0 Contains $`2esn`})<-[:`2esn`|usn2 *0..010]->(`2esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}) Is Null Is Null As #usn7,1e1[..#usn8][..'s_str'] As #usn8 Order By `3esn`[$123456789][$#usn7] Ascending,{@usn6:12.0[``],_usn4:$`3esn` Contains 0X0123456789ABCDEF Contains 00} Ends With Single(`6esn` In 0X7 =~`` Where 0X7[0e0..]) Ends With Extract(@usn5 In $#usn8 Is Null Is Null Where @usn5 Contains $`1esn` Contains 999|12.0[``]) Asc Skip (:`4esn`:#usn8{@usn6:0 Starts With 12e12 Starts With `4esn`})<-[`6esn`?{`7esn`:.12 Ends With `1esn` Ends With $`1esn`,``:9e0 Starts With `6esn`}]->(:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0}) Starts With Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`) Starts With [12.0 In 1000 In _usn4] Limit 00[01234567][False];"),
    octest:ct_string("Unwind [usn1 In 1000 In $`5esn`][Extract(#usn8 In $`5esn` Is Null Is Null Where $usn2 Is Not Null|$_usn3 =~`7esn` =~$_usn4)] As @usn5;"),
    octest:ct_string("Unwind 07[$`5esn`..]['s_str'..] As _usn3 Unwind Null Is Null Is Null As usn1 Unwind 123456789 =~Filter(usn2 In 1000 Contains 0.e0 Where 0X7[0e0..]) =~{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999} As `7esn`;"),
    octest:ct_string("Optional Match (`8esn` {`3esn`:12e12 Is Not Null})-[_usn4?:_usn4|:@usn5 *123456789..999{`2esn`:@usn5 In $`6esn`}]->(`1esn` {`4esn`:$`7esn`[$usn1..][0.0..],`1esn`:$123456789[..0x0][..`4esn`]})-[`1esn`:`1esn`{``:_usn3[...e1],`2esn`:.12[`1esn`..][$`3esn`..]}]-(`7esn` :_usn4:usn1) Where $`8esn` =~$usn2;"),
    octest:ct_string("Delete [$1000 =~$`7esn`,.12 Starts With @usn5 Starts With $#usn8,0x0[...e12][..@usn5]] Ends With Single(@usn5 In .12[#usn7][$`8esn`]) Create @usn6=(`` :#usn7)<-[?:`4esn`|:`7esn` *..0X7]-(:`3esn`:`1esn`{`1esn`:0.0[1000..][.e1..]})<-[`5esn`?:`6esn`]->(`6esn` :`6esn`:`7esn`{_usn4:\"d_str\"}),`6esn`=(`8esn` )-[ *0..010{#usn7:$@usn6 Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)}) Union All Match (`8esn` {`3esn`:12e12 Is Not Null})-[_usn4?:_usn4|:@usn5 *123456789..999{`2esn`:@usn5 In $`6esn`}]->(`1esn` {`4esn`:$`7esn`[$usn1..][0.0..],`1esn`:$123456789[..0x0][..`4esn`]})-[`1esn`:`1esn`{``:_usn3[...e1],`2esn`:.12[`1esn`..][$`3esn`..]}]-(`7esn` :_usn4:usn1) Where 9e1 Is Null Is Null Return @usn5[..True][..0X7] As `7esn`,{usn2:9e12[@usn6..$``][#usn8..Count ( * )],`3esn`:$1000 In $`7esn` In $7} Contains {`5esn`:$7[.12]} Contains Extract(usn1 In 00 Starts With _usn3 Where 07 Contains #usn8 Contains $_usn3|`2esn`[$`1esn`..][$_usn3..]) Order By 0X0123456789ABCDEF[..usn1] Descending Skip `3esn`[$123456789][$#usn7] Union Return Distinct $@usn5[0.12..][@usn5..],010 Contains 0X0123456789ABCDEF Limit 9e0 Starts With `6esn` Remove (usn2 :`7esn`{_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`})<-[`4esn`:`4esn`|:`7esn`{`3esn`:Count(*)[`7esn`..$12],_usn3:$999[$1000]}]->(`3esn` :`4esn`:#usn8{``:\"d_str\" Is Null Is Null}).`4esn`!,{#usn8:9e1[0.e0..][#usn8..]}.``,Any(@usn6 In @usn5 In $`6esn` Where $_usn4[$`8esn`..][07..]).#usn8 Create _usn3=((:``{`5esn`:.e1 In $@usn6 In 999}));"),
    octest:ct_string("Match `2esn`=((`5esn` {`5esn`:$`5esn`[False]})<-[?:usn2|#usn8 *00..]-(`6esn` :`5esn`{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]})) Where 9e12[@usn6..$``][#usn8..Count ( * )] Union Create `2esn`=(:_usn4:usn1)-[#usn7?:_usn4|:@usn5{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]->(:`2esn`:`3esn`)<-[``]-(usn1 {#usn7:.e12[..0.e0][..$`1esn`],usn1:010 Contains Count(*)}),(#usn7 :@usn5)<-[@usn5*]->({``:$1000 Is Null Is Null})-[?:@usn6 *..7{#usn8:'s_str'[.12..$#usn7][$999..`2esn`]}]->(`7esn` :`2esn`:`3esn`) Merge `4esn`=({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(`4esn` :`6esn`:`7esn`{`8esn`:0X7[..12e12]})-[?:@usn6{`8esn`:12 Ends With .e12 Ends With $7,`8esn`:0.0[12...12]}]-(`3esn` :``) Union All Detach Delete 123.654[@usn5] Merge usn2=((`4esn` :`5esn`{@usn6:$usn2 =~$#usn8,`8esn`:`6esn` =~$_usn3})-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`7esn` :_usn4:usn1)<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`8esn` :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})) On Create Set None(`6esn` In 0X7 =~`` Where 01234567 Ends With 0x0).`4esn`! =0[usn2..],[@usn6[$`3esn`]].`4esn` =01 In _usn3 In 12,`1esn`+=123456789 =~usn1 Unwind `7esn`(0.0[1000..][.e1..],$@usn5 Contains 01)[Any(usn1 In 0x0[..`4esn`] Where 0X7[.e12..01234567])][[$@usn6 Contains 07 Contains 0.e0,`5esn` In 12]] As `8esn`;"),
    octest:ct_string("Delete {`8esn`:010[@usn5..],#usn8:False Is Not Null Is Not Null}[[`4esn` In 's_str'[12..'s_str'] Where $`2esn`[..7][..$usn1]]][Count ( * )],[$1000 Is Null Is Null] Is Null Merge ((_usn4 {`8esn`:9e1 In 01 In 999})) Union Merge ((:usn2:@usn6{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8})<-[#usn8?:`6esn` *0..010]-(`` :@usn5)-[`3esn`{#usn7:12e12 Ends With 010 Ends With .0}]->(`4esn` :`7esn`{`7esn`:@usn6 Contains _usn4 Contains $`4esn`})) On Match Set [#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|$`7esn` Is Not Null].@usn6! =999[$`6esn`],#usn8+=$@usn6 In usn2 In 123456789,_usn3 =$`4esn`[12.e12..][0.0..] Optional Match #usn8=((@usn5 {@usn6:$123456789[0X7..12.e12]})<-[:`5esn`|`1esn`]-(#usn8 {@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null})),((#usn7 :_usn3)<-[:_usn4|:@usn5 *..0X7]->(`4esn` {`7esn`:.e0[..999][..0X7]})-[#usn7:_usn3|:`4esn`]-(:#usn7{usn1:$123456789[..0.12][..#usn7]})) Optional Match (`6esn` :@usn6:`7esn`{@usn5:True[0x0][@usn6],`5esn`:Null Starts With _usn4 Starts With `6esn`}),(:`1esn`{@usn6:$_usn4[$`4esn`..$#usn7][`6esn`..7],`8esn`:'s_str'['s_str'..$usn2][_usn3.._usn3]})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`}) Where Null[01234567][01234567] Union All Merge `1esn`=((({`6esn`:$`8esn`[..$``]})-[`2esn`]-(@usn6 {#usn7:'s_str' In \"d_str\" In 123456789,usn2:07[12][$`6esn`]})-[`2esn` *0X0123456789ABCDEF..{usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3}]->(usn1 :`4esn`:#usn8{usn2:$`8esn` In \"d_str\" In 9e12}))) On Match Set #usn7 =(@usn6 {_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12})-[*{`2esn`:$1000[01234567]}]-(_usn4 :`4esn`:#usn8{#usn7:1e1[@usn5..]})<-[:`2esn`|usn2 *0..010]->(`` :`1esn`) Is Not Null Is Not Null,`1esn` =`` =~12 =~$#usn7,[123456789[$#usn7..],_usn4[0xabc..],$`3esn` Starts With 01234567 Starts With $1000].`1esn`! =0X0123456789ABCDEF Starts With `2esn` Starts With $999 Remove Any(#usn7 In 01234567[$`3esn`..] Where 0Xa[0xabc..$#usn8])._usn4! Optional Match (((`` :@usn6:`7esn`{`2esn`:0.12[0.e0..][`4esn`..]})<-[`3esn`?:_usn3|:`4esn`]-(_usn3 :`1esn`)<-[_usn3{_usn3:12.e12 In $0 In Count(*)}]-(`7esn` :@usn5)));"),
    octest:ct_string("Unwind 12e12[Count ( * )..][usn2..] As `3esn` Remove Single(usn1 In 0x0[..`4esn`] Where $`2esn`[123456789..][00..]).`4esn`! Union All Merge usn1=(((`7esn` :``)<-[``?:@usn6]-(`6esn` :`3esn`:`1esn`{`7esn`:7 In 0xabc})-[:usn1|`3esn`*]->(:_usn3{`8esn`:0X0123456789ABCDEF In $1000 In $`3esn`}))) On Match Set [@usn5 In .12[#usn7][$`8esn`] Where Count ( * )|#usn7 Starts With 0 Starts With 12].`4esn` =[$1000 Is Null Is Null] Is Null,#usn7+=Any(@usn5 In $#usn8 Is Null Is Null Where .e1 In $@usn6 In 999),`5esn` =Filter(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $123456789[..0x0][..`4esn`]) Contains All(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 01234567[.12..7][1000..1.e1]) On Create Set `6esn` =Extract(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null|12.e12 Ends With 01 Ends With .e1) Ends With $0 Ends With All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`),{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4}.`2esn`? =.12[`1esn`..],`5esn`+=0 Starts With `6esn` Starts With 0X0123456789ABCDEF Detach Delete usn2[`3esn`][_usn3] Create ((`1esn` :usn2:@usn6)),`3esn`=(usn1 :`6esn`:`7esn`) Union All Merge `8esn`=(({@usn6:$123456789 Is Null Is Null,@usn6:`6esn`[1.e1..$#usn7][.e0..True]})<-[`5esn`:usn1|`3esn` *010{`2esn`:`6esn` =~01234567 =~0Xa}]->(_usn4 :``));"),
    octest:ct_string("Merge @usn5=(((:`1esn`{#usn7:1e1[`6esn`..]})<-[`6esn`?:_usn3|:`4esn` *12..0xabc]-(`1esn` :usn1$@usn6)<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`5esn` {@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]}))) On Create Set _usn4 =All(@usn5 In .12[#usn7][$`8esn`] Where 0Xa Is Null Is Null)[[usn1 In 00 Starts With _usn3 Where 010 =~$usn2 =~1e1]],#usn7 =_usn3(Distinct 0.12 In 01 In $`3esn`,1.e1[0X0123456789ABCDEF..][$`5esn`..]) Ends With Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) Ends With Filter(usn2 In 1000 Contains 0.e0 Where 12e12 Ends With 010 Ends With .0) On Create Set [@usn6 In @usn5 In $`6esn` Where False Contains `3esn`].`6esn` =[#usn7 In 01234567[$`3esn`..] Where `7esn` Starts With $`` Starts With $#usn7|07 In 0 In 's_str'][Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 12.0[..$7][..999])..][[@usn5 In .12[#usn7][$`8esn`] Where $0[7..][Null..]|$@usn5 Contains 01]..],`8esn` =[`6esn` In 0X7 =~`` Where 12.e12['s_str']|00[7..$123456789]][All(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6)..][Extract(`4esn` In $`8esn` Starts With 1000 Where 1.e1[0X0123456789ABCDEF..][$`5esn`..]|9e1[...e0])..],($999)<-[ *00..{@usn5:$`5esn` Is Null Is Null}]->(@usn5 {`1esn`:0[usn2..]})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`1esn` :usn2:@usn6).`4esn` =`3esn` =~0.0 =~$``;"),
    octest:ct_string("Return Distinct $`5esn` In `2esn` In $12 As `3esn` Order By [@usn5 In .12[#usn7][$`8esn`] Where .e12 =~0.0 =~9e0] Is Null Descending,.e1 Starts With $`8esn` Descending,[@usn6 =~01,$`7esn` In $7,00[``..][$`4esn`..]][All(`4esn` In $`8esn` Starts With 1000 Where 9e1 Is Null Is Null)..(_usn4 {_usn3:$`1esn` Is Null,usn1:$`4esn`[$`2esn`..]})<-[#usn8?:_usn4|:@usn5 *..0x0]-(#usn8 :`1esn`{#usn7:1e1[`6esn`..]})] Asc Skip $@usn5 Unwind 9e0 Ends With $`7esn` As `7esn`;"),
    octest:ct_string("With  01234567[.12..7][1000..1.e1] As `5esn`,{`7esn`:Count(*) In 01 In .0}[..{`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]}][..#usn7(Distinct 0.e0[9e0][0e0],999[``..][Null..])] As `5esn` Skip [@usn6 =~01,$`7esn` In $7,00[``..][$`4esn`..]][All(`4esn` In $`8esn` Starts With 1000 Where 9e1 Is Null Is Null)..(_usn4 {_usn3:$`1esn` Is Null,usn1:$`4esn`[$`2esn`..]})<-[#usn8?:_usn4|:@usn5 *..0x0]-(#usn8 :`1esn`{#usn7:1e1[`6esn`..]})] Delete {#usn8:$`5esn` In False,usn2:$`7esn` In $7} Is Not Null Is Not Null,Extract(`4esn` In $`8esn` Starts With 1000 Where False In `3esn`|$`3esn` =~Null) Create (({`5esn`:_usn3 Contains @usn6 Contains 1.e1,`7esn`:$12[01..][1.e1..]})-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})<-[usn1?{#usn7:9e12 Is Not Null Is Not Null,usn2:`3esn` =~0.0 =~$``}]->(`5esn` :`3esn`:`1esn`{`6esn`:$1000[.e0..]})),_usn4=(@usn5 {`1esn`:0[usn2..]})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`5esn` {_usn4:0X7 =~``})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(:`6esn`:`7esn`{`3esn`:`8esn`[$``]}) Union Unwind [usn1 In 1000 In $`5esn`][Extract(#usn8 In $`5esn` Is Null Is Null Where $usn2 Is Not Null|$_usn3 =~`7esn` =~$_usn4)] As `6esn` Detach Delete 01 In _usn3 In 12,`1esn`[`3esn`..][$@usn6..];"),
    octest:ct_string("Unwind [$`7esn` Ends With `1esn` Ends With True,$999[12.0..]][{`7esn`:$7[.12]}..[_usn4 In usn1 Contains False Contains `` Where 0X7 In 123.654 In $`2esn`]] As _usn3 Detach Delete $`5esn` In False,$@usn5[$#usn8..][9e1..],`7esn`[...e1][..\"d_str\"] Unwind usn2 Starts With @usn6 As #usn7 Union Detach Delete _usn3 Ends With 12e12 Ends With .e0,01[0.0],None(_usn4 In usn1 Contains False Contains `` Where 12 Ends With 01234567) Ends With None(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $`4esn`[..usn1]) Detach Delete $_usn4['s_str'..] Detach Delete .e0 Is Not Null Is Not Null,{usn1:7 =~9e0 =~'s_str',@usn6:$usn1[..$`6esn`][..Null]} =~Single(usn2 In 1000 Contains 0.e0) =~Any(@usn6 In @usn5 In $`6esn` Where $`7esn` Is Not Null) Union All Delete 7 =~9e0 =~'s_str';"),
    octest:ct_string("Detach Delete $usn2[..12.0],$999 In $`8esn` In `5esn` Unwind $1000 Starts With .0 Starts With 0.0 As `6esn` Merge (@usn6 )<-[? *12..0xabc]->(`5esn` :`6esn`:`7esn`{`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]})<-[``? *12..0xabc]-(`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1}) Union All Unwind `7esn`[1000..][$123456789..] As `1esn` Union All With Distinct $@usn6 Contains 07 Contains 0.e0,0X7 In $@usn5 In 9e0;"),
    octest:ct_string("Create `5esn`=(`8esn` :_usn3{`8esn`:$`3esn` In $12 In 's_str'}),`6esn`=((@usn6 :`8esn`{`2esn`:0X7 =~.0 =~\"d_str\"})-[_usn3 *010]->(:usn1{`8esn`:usn1 Contains $``})<-[`8esn`?:``|:_usn4 *..01]-({`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null})) Optional Match ((_usn3 :_usn4:usn1)<-[`5esn`?:#usn8{#usn7:0.12 Ends With $usn1 Ends With $@usn5}]->({`1esn`:$@usn5 =~$`` =~$usn2})),(:`3esn`:`1esn`{@usn5:$#usn8 In .e12 In 9e1,`7esn`:9e1 Starts With `1esn` Starts With 0Xa})-[:usn1|`3esn`]-(_usn3 :_usn4:usn1{`2esn`:$`6esn`[$@usn6..]}) Where 00[01234567][False] Union All Remove None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`1esn` Starts With $999).usn1!;"),
    octest:ct_string("Delete Filter(usn2 In 1000 Contains 0.e0 Where $`7esn` Ends With $`2esn` Ends With $usn1)[..(:usn2:@usn6{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8})-[? *999..]-(:`4esn`:#usn8{@usn6:$`4esn`[$`2esn`..]})][..Any(@usn5 In .12[#usn7][$`8esn`] Where 0Xa Is Null Is Null)],123.654 Starts With usn1 Starts With @usn5 With Distinct *,`7esn`[Null..][@usn5..],0X0123456789ABCDEF Contains $usn1 Skip Count(*)[[@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null]..] Limit False Ends With $`8esn` Where 0 Starts With 12e12 Starts With `4esn` With Distinct 0x0[...e12][..@usn5] As @usn5 Limit `1esn`(Distinct Count(*)[..`3esn`]) Starts With $0 Union All Return Distinct *,({@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]})-[`6esn`?:`4esn`|:`7esn` *0..010{_usn3:$`1esn` Starts With @usn6}]-(`2esn` {#usn8:12.e12[0e0..7]}) Order By [0 Is Null Is Null][..[_usn3 =~00,9e1 Is Null Is Null]] Descending,Single(`4esn` In `6esn`['s_str'..][010..] Where 12.0 Contains 0.e0)[..Any(`4esn` In 's_str'[12..'s_str'] Where Count(*)[`7esn`..$12])][..Extract(@usn5 In .12[#usn7][$`8esn`] Where 01234567 =~usn1)] Ascending,`8esn` In $@usn5 Asc Limit $#usn8 Is Null Match #usn8=(((`8esn` :@usn5)<-[@usn5:#usn7|:_usn4]->(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})<-[`4esn`:``|:_usn4{`5esn`:0e0 =~_usn4}]-(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})));"),
    octest:ct_string("Remove [.12 Starts With .12 Starts With `3esn`,Count ( * )[Count ( * )..12e12][usn1..1000],False In `3esn`].#usn7,{usn1:$1000 Contains $`3esn`}.#usn8!,None(`4esn` In $`8esn` Starts With 1000 Where True Starts With $`8esn` Starts With \"d_str\").`4esn`! Return Distinct 01234567 As usn2 Order By Filter(@usn5 In $#usn8 Is Null Is Null Where 9e1 Contains $`3esn` Contains 01234567) =~['s_str'[..0.e0][..`1esn`],`5esn`[.e1][0Xa],123456789 In $usn2 In `6esn`] Ascending Limit 12e12 Starts With $123456789 Starts With 12.0 Match ((`6esn` :`7esn`)),`4esn`=({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(`4esn` :`6esn`:`7esn`{`8esn`:0X7[..12e12]})-[?:@usn6{`8esn`:12 Ends With .e12 Ends With $7,`8esn`:0.0[12...12]}]-(`3esn` :``) Where 9e0 =~$`5esn` Union All Remove {usn1:0e0 Is Not Null Is Not Null,@usn6:0X7[12]}.usn2,`8esn`(Distinct 0X0123456789ABCDEF[..usn1]).usn1!,{`8esn`:0xabc Ends With $#usn7 Ends With #usn8,usn2:usn1[$`3esn`..$999][True..False]}.#usn8 Return Distinct 0Xa Is Not Null Is Not Null As `1esn`,(`5esn` :`7esn`)-[?:`8esn`|:usn1 *..0X7{@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00}]->(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})[..Filter(#usn8 In $`5esn` Is Null Is Null Where 0Xa Is Null Is Null)][..(`7esn` {@usn5:True[0x0][@usn6],`5esn`:Null Starts With _usn4 Starts With `6esn`})-[#usn8? *0xabc{`5esn`:0X7[12]}]->(`7esn` :`2esn`:`3esn`{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1})-[`6esn`:``|:_usn4 *..01]->(`5esn` {_usn4:0X7 =~``})] As usn1 Skip False[`6esn`][07] Limit [usn1 In 0x0[..`4esn`] Where $1000 Is Null Is Null|12[usn1][True]] Starts With (`` :@usn5{#usn7:0X7[12]})-[@usn6? *07..{_usn4:Count(*)[..`3esn`],`5esn`:01234567[$`3esn`..]}]-(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null})<-[`5esn`:`8esn`|:usn1{usn1:12e12[Count ( * )..][usn2..],usn2:$123456789 Is Null Is Null}]-(`8esn` ) Starts With (`5esn` {usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null})<-[ *00..{@usn5:$`5esn` Is Null Is Null}]->(`3esn` :`4esn`:#usn8{``:\"d_str\" Is Null Is Null})<-[@usn5?:``|:_usn4]-(_usn3 :`4esn`:#usn8);"),
    octest:ct_string("With Distinct *,Count ( * ) In 010 As `1esn` Limit $@usn5 =~07 =~True Match `4esn`=((#usn8 {@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null})) Where `` Starts With @usn5 Optional Match _usn4=(((#usn7 :#usn8{`2esn`:12 =~usn1 =~.e12})-[`8esn`?:#usn7|:_usn4{usn2:7[$`4esn`..123456789]}]->(#usn8 :usn2:@usn6{`5esn`:00 Ends With $_usn4 Ends With $`2esn`,usn2:#usn7 Starts With 0 Starts With 12})-[``? *12..0xabc]->({@usn6:9e0 Contains `8esn`}))),@usn6=((`2esn` :`8esn`{`2esn`:$`8esn` In \"d_str\" In 9e12})-[`5esn`:`8esn`|:usn1{usn1:12e12[Count ( * )..][usn2..],usn2:$123456789 Is Null Is Null}]->(@usn5 :#usn8{@usn5:$@usn5 Contains 01,`2esn`:@usn6[`3esn`..][$7..]}));"),
    octest:ct_string("Unwind Extract(`6esn` In 0X7 =~``|9e0 In 01234567) Contains Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) As usn2 With Distinct $999[$1000] As `4esn`,[`4esn` In 's_str'[12..'s_str'] Where 9e12 =~01 =~$`7esn`][#usn7(00 In 12.e12)..Extract(usn1 In 0x0[..`4esn`] Where 1000 Ends With 1000 Ends With $`4esn`|@usn6[$`3esn`])][(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})<-[`8esn`]->(#usn8 )<-[`3esn` *00..{`8esn`:@usn6 Contains .e1 Contains $`4esn`,_usn4:0X7[..12e12]}]->(@usn5 {`1esn`:0[usn2..]})..(usn1 :_usn4:usn1)<-[@usn5?:`1esn`]-(#usn7 :`2esn`:`3esn`)] Limit {`8esn`:@usn5[..True][..0X7],`1esn`:`1esn` Contains Count ( * )}[{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}][Any(usn1 In $123456789 Contains usn2 Where 0.e0 Ends With 12 Ends With $7)] Where $_usn4[12e12][`4esn`] Union All Unwind $_usn4[`3esn`][0] As _usn4 Create `5esn`=((:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[`6esn`:``|:_usn4 *..01]->(`5esn` {_usn4:0X7 =~``})-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(usn2 :usn1{``:9e12 Ends With 0X0123456789ABCDEF Ends With #usn7})) Create (((`4esn` {#usn8:`1esn`[0e0..],#usn7:$`6esn`[..0X0123456789ABCDEF]})<-[#usn8?:`3esn`|:`4esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]-({``:01234567 Ends With 0x0,`6esn`:0X7[0e0..]})<-[?:`7esn`|`2esn`]-(:`6esn`:`7esn`{`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]})));"),
    octest:ct_string("Detach Delete .e12[$_usn4..][False..],12.e12 Ends With 01 Ends With .e1,[\"d_str\"] Contains _usn3(Distinct $usn1[_usn4..][usn2..]) Union Remove Extract(`4esn` In `6esn`['s_str'..][010..] Where 12 =~usn1 =~.e12|$`2esn`[..`2esn`]).`8esn`!,_usn3:`` Union Match ((`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]})<-[:`2esn`|usn2 *0..010]->(`` :`1esn`)<-[ *0X0123456789ABCDEF..{#usn8:`5esn` =~0Xa,usn1:12 =~usn1 =~.e12}]->(_usn3 :_usn3)),(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}) Create ((:`4esn`:#usn8{`7esn`:#usn7 Starts With 0 Starts With 12})-[{`5esn`:.e1[..$``][..0X0123456789ABCDEF]}]->(_usn3 {`5esn`:0.12 Contains .e1})<-[@usn6:`3esn`|:`4esn`*]->(`6esn` :`5esn`)),(({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})-[?:`2esn`|usn2{@usn6:0.12[0.e0..][`4esn`..]}]->(:_usn4:usn1));"),
    octest:ct_string("Return Distinct 1000 Contains $#usn7 Contains `6esn` Order By (`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]})<-[`1esn`:`8esn`|:usn1 *0xabc{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]->(#usn8 :`2esn`:`3esn`{#usn7:Count(*) In 01 In .0,#usn7:12.0[..$7][..999]})<-[usn1?:`1esn`{#usn7:9e12 Is Not Null Is Not Null,usn2:`3esn` =~0.0 =~$``}]->(:`4esn`:#usn8{@usn6:0 Starts With 12e12 Starts With `4esn`})[Single(`4esn` In 's_str'[12..'s_str'])..#usn8($12 Contains 123.654 Contains `8esn`,0xabc Ends With $#usn7 Ends With #usn8)] Desc,usn1($@usn5[0.12..][@usn5..],\"d_str\" Starts With $usn1) Is Null Desc,Count ( * ) Contains 999 Contains $`8esn` Asc Merge `7esn`=((:`2esn`:`3esn`{usn2:9e12[@usn6..$``][#usn8..Count ( * )],`3esn`:$1000 In $`7esn` In $7})<-[`6esn`:_usn4|:@usn5 *..7{_usn4:0.0 =~0X7 =~#usn7}]->(`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})-[`8esn` *..0x0]-(:`2esn`:`3esn`{usn2:$`5esn` In False})) On Create Set 12.e12.`4esn`? =12e12 Starts With $123456789 Starts With 12.0,(#usn8 :_usn3)-[`8esn`?:`6esn`{#usn7:True =~@usn5 =~$`1esn`,@usn6:False[.e1..Null]}]->(:``{`2esn`:$7,usn1:.12 Contains $`4esn` Contains $`6esn`})-[`6esn`?:@usn6 *999..]->(`2esn` :usn2:@usn6).`3esn`? =All(#usn8 In $`5esn` Is Null Is Null Where #usn8[$#usn8..])[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..(#usn8 {`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]})<-[?:@usn5|`8esn`]-(usn2 :@usn5{`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})<-[?:#usn8{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]->(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})] Merge `6esn`=((`3esn` {`8esn`:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`1esn`?:`1esn` *01234567..12]->(`8esn` {`6esn`:00 In 12.e12})-[`6esn`? *01234567..12{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]-(@usn5 {usn2:$999[12.0..]})) On Match Set Any(_usn4 In usn1 Contains False Contains `` Where $`4esn`[$`2esn`..]).usn2 =010 In @usn5 In `5esn` Union All Match `1esn`=(({`4esn`:$_usn3[..Count ( * )][..@usn5],#usn8:_usn3 =~00})<-[`5esn`?:#usn8{#usn7:0.12 Ends With $usn1 Ends With $@usn5}]->({`1esn`:$@usn5 =~$`` =~$usn2})),(`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})<-[`8esn`?:`5esn`|`1esn`]-(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]})<-[`3esn`?*..]->(`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]}) Where 12[..9e0][..999] Remove Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 12.e12 Contains `5esn`|$_usn4[$`8esn`..][07..]).`2esn`!,Single(#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0).@usn6,({`2esn`:usn1[..@usn5][...e0],`8esn`:\"d_str\"[Count ( * )]})<-[?*$999]-(`7esn` :``)-[*{`2esn`:$1000[01234567]}]-(`4esn` :`1esn`).`5esn`;"),
    octest:ct_string("Detach Delete 0 Is Not Null,#usn7 Contains 07 Union All Return $`4esn`[12.e12..][0.0..],12[`7esn`...0][0.12..``] As @usn6,{#usn8:$`5esn` In False,usn2:$`7esn` In $7}[..Any(@usn6 In @usn5 In $`6esn` Where 010 =~$usn2 =~1e1)] Skip $`1esn` Ends With $`1esn` Union Detach Delete 010 Starts With `7esn` Starts With 9e1 With  `` Contains 12 Contains True Order By #usn7 Starts With 0 Starts With 12 Asc Skip True =~@usn5 =~$`1esn`;"),
    octest:ct_string("With  07 Ends With 07 As #usn8,00[``..][$`4esn`..],$usn2 Is Not Null Is Not Null Limit {`4esn`:0X7 =~.0 =~\"d_str\",_usn4:00 Ends With $_usn4 Ends With $`2esn`} Ends With Extract(#usn7 In 01234567[$`3esn`..] Where .12 In $999 In `5esn`) Ends With [$`3esn`[@usn5..$123456789],00,'s_str'[.12..$#usn7][$999..`2esn`]] Remove [`4esn` In $`8esn` Starts With 1000 Where 9e1 Is Null Is Null|9e12 =~01 =~$`7esn`].#usn7! Optional Match usn2=(((@usn6 {#usn7:False[`2esn`..#usn8]})-[? *010]-(`8esn` :@usn5)<-[#usn8?{`5esn`:Null[01234567][01234567]}]->(`6esn` :@usn6:`7esn`{@usn5:True[0x0][@usn6],`5esn`:Null Starts With _usn4 Starts With `6esn`}))),#usn7=(((`4esn` )<-[_usn3?:`3esn`|:`4esn` *0..010]->(_usn3 )<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3}))) Where $_usn4[`3esn`][0] Union All With Distinct All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) Is Not Null Is Not Null,0xabc[$@usn5] As `7esn`,.e0[usn2..] As _usn3 Order By False[..12.e12] Descending Skip [\"d_str\"] Contains _usn3(Distinct $usn1[_usn4..][usn2..]) Limit 7 In @usn5 In $`4esn` Where 12e12 Starts With $123456789 Starts With 12.0 Detach Delete 010 Starts With `7esn` Starts With 9e1 With Distinct *,Any(#usn8 In $`5esn` Is Null Is Null Where 0.12 Contains $`2esn` Contains $_usn4)[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..Extract(`4esn` In `6esn`[1e1..])] Order By .e0 Contains 01234567 Descending,[$`7esn` Ends With `1esn` Ends With True,$999[12.0..]][`7esn`(Distinct $`2esn`[$`2esn`..])..][Any(usn1 In $123456789 Contains usn2 Where 0.e0 Ends With 12 Ends With $7)..] Desc,'s_str' Starts With 1000 Starts With #usn8 Descending Where 123456789 =~_usn4 =~$0 Union Create `4esn`=(:``{`5esn`:.e1 In $@usn6 In 999})-[`5esn`?:`3esn`|:`4esn`{`1esn`:$usn2 Contains 12.e12 Contains 00}]-(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]}) Remove {`5esn`:`6esn` =~01234567 =~0Xa}.#usn7,(usn1 :#usn7)<-[@usn6?{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(:`2esn`:`3esn`{`6esn`:_usn4 Ends With 01 Ends With $`1esn`,`4esn`:$`8esn` In \"d_str\" In 9e12})._usn4,(#usn7 :`2esn`:`3esn`)-[@usn5?:@usn6$_usn3]->(:_usn4:usn1{`1esn`:123456789 Starts With `2esn` Starts With .0,@usn6:12.e12 Contains `5esn`})-[_usn3? *00..]-(`1esn` :`1esn`).`4esn` Match ((`4esn` :`7esn`{`7esn`:@usn6 Contains _usn4 Contains $`4esn`})),((`5esn` :`6esn`:`7esn`{`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]})<-[#usn8:`8esn`|:usn1 *123456789..999]-(`7esn` {usn2:`6esn`['s_str'..][010..]})<-[`4esn`:`4esn`|:`7esn`{`3esn`:Count(*)[`7esn`..$12],_usn3:$999[$1000]}]->(`3esn` :`4esn`:#usn8{``:\"d_str\" Is Null Is Null}));"),
    octest:ct_string("With Distinct ``(Distinct `1esn`[0e0..]) =~(:`1esn`{@usn5:123456789 Starts With `2esn` Starts With 9e12})-[@usn6?:`1esn`]-(:`5esn`)-[`5esn`?:`3esn`|:`4esn`{`1esn`:$usn2 Contains 12.e12 Contains 00}]-(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]}),All(usn1 In 0x0[..`4esn`] Where .12 Starts With .12 Starts With `3esn`)[[_usn4 In usn1 Contains False Contains `` Where $usn1[0.12..]['s_str'..]|12[..True][..$`4esn`]]..][({`5esn`:0.12 Contains .e1})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:@usn5{#usn7:1e1[@usn5..]})<-[?:`6esn` *01234567..12{`7esn`:7 In 0xabc}]-(#usn7 :usn2:@usn6{`1esn`:$usn2 Contains 12.e12 Contains 00})..] As #usn8,Any(`6esn` In 0X7 =~`` Where 0X7[0e0..]) Contains Single(`4esn` In `6esn`['s_str'..][010..] Where @usn6[`3esn`..][$7..]) As #usn7 Skip None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where usn1 Starts With $#usn7 Starts With `5esn`) Ends With $999 Ends With usn2(0X7[0e0..],$#usn8 Is Null Is Null) Limit usn1[$`3esn`..$999][True..False] Return 123456789 =~_usn4 =~$0 Order By 1000[..$`6esn`][..0xabc] Ascending,count($_usn3 =~`7esn` =~$_usn4) Is Not Null Is Not Null Desc Skip 12.e12['s_str'] Union All Merge _usn4=(usn1 :_usn4:usn1)<-[`5esn` *0..010]-(usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1}) On Create Set `4esn` =$@usn6 Contains 07 Contains 0.e0 On Match Set [0X7 =~.0 =~\"d_str\",9e1[...e0]].@usn5 =Single(@usn5 In .12[#usn7][$`8esn`] Where `6esn` =~$_usn3) Ends With {`2esn`:.12 Ends With `1esn` Ends With $`1esn`,`5esn`:9e12[@usn6..$``][#usn8..Count ( * )]} Ends With (:_usn3{`2esn`:$`5esn` Is Null,@usn6:#usn7 Starts With `1esn`})<-[``?:@usn6]-(:`2esn`:`3esn`{`6esn`:01 In _usn3 In 12,_usn3:$`3esn` =~$`6esn` =~`8esn`})<-[:_usn4|:@usn5 *..0X7]->(`4esn` {`7esn`:.e0[..999][..0X7]}),{@usn6:usn1 In 1000 In $`5esn`,@usn6:9e0[``][123.654]}.`3esn`! =$999 In $`8esn` In `5esn` Merge ((({`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})<-[?:@usn6]-(`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})-[:_usn4|:@usn5]->(`5esn` :#usn7))) On Match Set (`5esn` {@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00})<-[?{#usn7:`6esn`[False..0.0][12e12..$usn2]}]-(`4esn` {`4esn`:#usn7[..$1000][..01]})-[`5esn`?:`3esn`|:`4esn`{`1esn`:$usn2 Contains 12.e12 Contains 00}]-(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]}).`4esn`! =0 Is Not Null,`6esn` =9e12 Ends With 0X0123456789ABCDEF Ends With #usn7,`1esn` =$_usn3[$`4esn`..Null] On Create Set 12.e12.`4esn`? =12e12 Starts With $123456789 Starts With 12.0,(#usn8 :_usn3)-[`8esn`?:`6esn`{#usn7:True =~@usn5 =~$`1esn`,@usn6:False[.e1..Null]}]->(:``{`2esn`:$7,usn1:.12 Contains $`4esn` Contains $`6esn`})-[`6esn`?:@usn6 *999..]->(`2esn` :usn2:@usn6).`3esn`? =All(#usn8 In $`5esn` Is Null Is Null Where #usn8[$#usn8..])[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..(#usn8 {`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]})<-[?:@usn5|`8esn`]-(usn2 :@usn5{`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})<-[?:#usn8{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]->(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})] Union All With Distinct *,[#usn8 In $`5esn` Is Null Is Null Where 0.e0 Ends With 12 Ends With $7][..{@usn5:12 =~usn1 =~.e12,`2esn`:0X7 =~`4esn` =~`8esn`}] As #usn7,@usn6 Starts With `7esn` Starts With Null Order By Extract(@usn5 In 0X7 =~.0 =~\"d_str\" Where $`4esn`[9e1..][0..]|$0 =~$usn1 =~9e1)[{``:\"d_str\",`1esn`:$1000 =~$`7esn`}] Descending;"),
    octest:ct_string("With  *,None(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0.12 In $`4esn` In `6esn`) Is Null As @usn6,123456789 =~_usn4 =~$0 As usn1 Unwind ({`8esn`:$123456789 Contains 01 Contains 0.12})-[?:`2esn`|usn2{@usn6:0.12[0.e0..][`4esn`..]}]->(usn1 :#usn8)-[`3esn`? *999..]->({`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})[Single(`6esn` In 0X7 =~`` Where $`5esn` In `2esn` In $12)..$#usn7] As `7esn` Union Remove [@usn6 In @usn5 In $`6esn` Where 010 =~$usn2 =~1e1|00].`3esn`!,[@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 12e12[.12..]|$`6esn`[$`1esn`][1000]].`4esn`! Unwind Any(#usn8 In $`5esn` Is Null Is Null Where 0.12 Contains $`2esn` Contains $_usn4)[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..Extract(`4esn` In `6esn`[1e1..])] As `8esn`;"),
    octest:ct_string("Remove All(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0X7[0e0..]).`7esn`? Union All Return Distinct *,(_usn3 :_usn4:usn1)-[`3esn`?:`3esn`|:`4esn` *..01{_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`}]->(usn2 :#usn7)<-[@usn5?:`1esn`]-(#usn7 :`2esn`:`3esn`)[Extract(@usn6 In @usn5 In $`6esn` Where 9e0 =~$`5esn`|`2esn`[$`1esn`..][$_usn3..])..Extract(@usn5 In $#usn8 Is Null Is Null Where @usn5 Contains $`1esn` Contains 999)] As `8esn`,[1.e1 =~$_usn4,.12 Contains $`4esn` Contains $`6esn`] Ends With Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn8 In .e12 In 9e1) As `8esn` Order By @usn5 Starts With 12e12 Starts With @usn5 Desc Skip _usn4(usn1[Count ( * )..$usn1],_usn3 Ends With 12e12 Ends With .e0)[All(usn1 In 0x0[..`4esn`] Where $`2esn`[123456789..][00..])..Filter(@usn6 In @usn5 In $`6esn` Where 12[`7esn`...0][0.12..``])][[@usn6 In @usn5 In $`6esn` Where $``[_usn4..][`7esn`..]|12.e12 In $0 In Count(*)]..(:usn1)-[#usn7?:_usn4|:@usn5{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]->(:`2esn`:`3esn`)];"),
    octest:ct_string("With  *,0.12 In 01 In $`3esn` As @usn5 Order By Single(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where .12 Starts With @usn5 Starts With $#usn8) =~(@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})<-[_usn4?:`6esn`]-(`2esn` {`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null}) =~(_usn4 :usn1)-[@usn5? *999..]-(usn1 :`4esn`:#usn8)-[usn2?:`2esn`|usn2*..{@usn5:$1000[01234567],@usn5:0x0[$`3esn`..010][$#usn7..00]}]->(`4esn` {#usn8:`1esn`[0e0..],#usn7:$`6esn`[..0X0123456789ABCDEF]}) Desc,$12[01..][1.e1..] Descending,`7esn`[Null..][@usn5..] Asc Limit Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where \"d_str\" Is Null Is Null)[count(Distinct 0.12 Contains $12 Contains `8esn`)..[$`1esn` Is Null Is Null,9e1 In 01 In 999]] Where $@usn6 =~usn1 Merge `1esn`=((`8esn` :`7esn`{`8esn`:False In 123456789 In $0})-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]-(usn1 :`4esn`:#usn8{``:0 Is Not Null Is Not Null,`3esn`:usn1 Starts With $#usn7 Starts With `5esn`})) On Match Set #usn8($`2esn` Contains usn1 Contains `2esn`).`3esn`? =0xabc[..$`1esn`][..01] On Create Set @usn6+=[usn1[..$_usn4][..``],0X7[.e12..01234567]] In `3esn`(@usn5[..True][..0X7],$`3esn` =~$`7esn` =~False) Merge @usn5=({`5esn`:Count(*)[..`3esn`],usn1:01234567 Ends With 0x0})-[?{@usn5:12.e12['s_str'],`1esn`:_usn3 Ends With 12e12 Ends With .e0}]-(`8esn` :`7esn`)<-[?:usn2|#usn8{#usn8:$@usn6 Is Null Is Null,_usn4:_usn4 Starts With $@usn6 Starts With #usn7}]-({_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"}) Union Optional Match usn1=((:`1esn`{@usn6:$_usn4[$`4esn`..$#usn7][`6esn`..7],`8esn`:'s_str'['s_str'..$usn2][_usn3.._usn3]})-[usn1?:`2esn`|usn2 *123456789..999]-(`3esn` :usn2:@usn6)) Delete 0.12 Is Null Is Null Create ((`` :`1esn`)-[`1esn`:usn2|#usn8 *1000..]-(`6esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})<-[`4esn`]->({`8esn`:0X7 In 's_str' In $`1esn`})) Union Return Distinct `4esn` In $12 In `8esn` As `8esn` Order By $_usn3[..$_usn3][.._usn4] Descending,Extract(@usn6 In @usn5 In $`6esn` Where 123456789 =~_usn4 =~$0) Is Null Desc,\"d_str\" =~`6esn` =~0Xa Ascending Skip Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With $usn1|.12 Ends With `1esn` Ends With $`1esn`)[[True[..'s_str'][..01],_usn4 Ends With 01 Ends With $`1esn`,.0[$`6esn`..False]]..`7esn`(Distinct 010 Is Null Is Null,$`8esn`[..$``])][({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})<-[? *0..010]-(`4esn` :`5esn`{_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[:#usn7|:_usn4 *1000..{_usn4:07 In `5esn` In 12e12,@usn6:.0 Is Null Is Null}]->(#usn7 $usn2)..All(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null)] Delete 12.e12 Contains $`5esn`;"),
    octest:ct_string("With  *,.e12 Starts With True As _usn4,$1000 In $`7esn` In $7 Skip [$1000 =~$`7esn`,.12 Starts With @usn5 Starts With $#usn8,0x0[...e12][..@usn5]] Ends With Single(@usn5 In .12[#usn7][$`8esn`]) Limit Extract(@usn5 In 0X7 =~.0 =~\"d_str\" Where $`4esn`[9e1..][0..]|$0 =~$usn1 =~9e1)[{``:\"d_str\",`1esn`:$1000 =~$`7esn`}] Union All With  *,00 In 1e1 As `7esn`,0.12 Starts With {`1esn`:@usn6[..0xabc][..$#usn7]} Starts With {`3esn`:`8esn`[1000..$7][$`7esn`..`2esn`],_usn4:\"d_str\" Is Null Is Null} Skip 7 In @usn5 In $`4esn` Limit {`1esn`:`4esn` In $12 In `8esn`} Contains None(@usn5 In .12[#usn7][$`8esn`] Where .e12 =~0.0 =~9e0) Contains [@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]] Return Count ( * ) In 010 Limit Count(*)[True] Create (`4esn` :@usn5{``:$`2esn`[$`2esn`..],@usn6:010 =~`6esn`});"),
    octest:ct_string("Match (`` :`7esn`)<-[`8esn`:@usn5|`8esn` *123456789..999{`5esn`:0x0 Contains $`8esn` Contains `6esn`,#usn8:010 =~$usn2 =~1e1}]->(_usn4 {@usn5:$_usn3[$`4esn`..Null]}) Where $`4esn`[12.0..`5esn`] Unwind 1000[123.654..9e12][1000.._usn3] As _usn3 Union All Remove @usn5:@usn5,Single(`4esn` In `6esn`['s_str'..][010..] Where @usn6[$`7esn`]).@usn5,usn2:@usn6:`7esn` Create `2esn`=((:#usn7{usn2:$`5esn`[$123456789][`1esn`]})) Optional Match usn2=(((`7esn` :`7esn`)-[{`2esn`:\"d_str\" =~`3esn` =~0Xa,_usn4:usn1 Is Null Is Null}]->(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]})<-[`2esn`?:`7esn`|`2esn`{`8esn`:00}]-(`5esn` {@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00})));"),
    octest:ct_string("Return Distinct `3esn` =~`3esn` =~$`6esn` As `7esn` Limit $`7esn` Is Null Is Null Union All With Distinct *,`2esn` Starts With $_usn3 Starts With `2esn` Order By 0X7 In 123.654 In $`2esn` Asc,0 =~12.e12 =~$`` Asc,12.e12 Is Not Null Descending Skip 0.e0[123.654] Create #usn8=(:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[:#usn7|:_usn4{_usn3:\"d_str\" =~`3esn` =~0Xa}]-(#usn7 {`3esn`:Count(*)[12.e12..],`3esn`:usn2 =~0x0});"),
    octest:ct_string("Merge `4esn`=(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})-[?:#usn7|:_usn4]->(`` :#usn7$0)-[`2esn` *0X0123456789ABCDEF..{usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3}]->(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]}) On Create Set `3esn`+=(:`1esn`{`6esn`:$0[..`8esn`],`1esn`:True Starts With $`8esn` Starts With \"d_str\"})<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[usn1?:`2esn`|usn2 *123456789..999]-(`3esn` :usn2:@usn6) Contains [usn2 In 1000 Contains 0.e0 Where #usn7 Ends With 9e1|010 Is Null Is Null] Contains Filter(@usn6 In @usn5 In $`6esn` Where 12[`7esn`...0][0.12..``]),{`6esn`:$`8esn`[``..][123.654..],``:999[$`6esn`]}.`5esn`? =$_usn4[$`8esn`..][07..] On Create Set _usn4 =@usn5 Contains 01 Contains 12,#usn7+={#usn8:0X0123456789ABCDEF[..usn1]} Ends With (:``{_usn3:0X0123456789ABCDEF In 01234567})<-[``? *..0X7{_usn4:12 Ends With 01 Ends With 1e1}]-(usn2 :@usn6:`7esn`)-[:usn2|#usn8*..]-(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12}) Ends With [1e1 In $#usn8 In 12e12,123.654 Contains #usn8] Union All Merge ((:#usn7{`6esn`:.e12 =~0.0 =~9e0,@usn6:$usn2 =~$_usn4 =~`5esn`})) On Match Set [`6esn` In 0X7 =~``|$#usn7[...e12][..$7]].`1esn` =9e12 =~01 =~$`7esn` On Match Set `8esn` =12 Ends With 01 Ends With 1e1 Return Any(usn2 In 1000 Contains 0.e0 Where @usn6[`3esn`..][$7..])[All(#usn7 In 01234567[$`3esn`..] Where Count(*)[.e0.._usn4])..][None(usn2 In 1000 Contains 0.e0 Where True[Count(*)..][1e1..])..],9e12 Contains $_usn3 As `2esn`,All(`6esn` In 0X7 =~`` Where #usn7 Starts With 0 Starts With 12) Starts With Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where #usn7 Contains .0 Contains .e1) As usn2 Order By 9e1[.12..] Asc,Extract(_usn4 In usn1 Contains False Contains `` Where $`4esn` Starts With 1e1|Count(*)['s_str'..`1esn`]) =~Extract(`4esn` In $`8esn` Starts With 1000|`7esn`[Null..][@usn5..]) =~(:`4esn`:#usn8)<-[?:_usn3|:`4esn` *010{`8esn`:$``[_usn4..][`7esn`..]}]-(`2esn` ) Asc,Filter(`6esn` In 0X7 =~`` Where $usn2[0e0..])[{@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null}..] Descending Skip 9e1[.12..] Detach Delete @usn5[..True][..0X7],Any(`6esn` In 0X7 =~`` Where 0X7[0e0..]) Contains Single(`4esn` In `6esn`['s_str'..][010..] Where @usn6[`3esn`..][$7..]),`5esn` Ends With .e1 Ends With $_usn4 Union Remove `1esn`:`5esn`,{`5esn`:0X7[12]}.#usn8,Extract(usn1 In 0x0[..`4esn`] Where 1000 Ends With 1000 Ends With $`4esn`|@usn6[$`3esn`])._usn3? Unwind 999 Contains `7esn` As @usn5 Create ((:`4esn`:#usn8{`7esn`:#usn7 Starts With 0 Starts With 12})-[{`5esn`:.e1[..$``][..0X0123456789ABCDEF]}]->(_usn3 {`5esn`:0.12 Contains .e1})<-[@usn6:`3esn`|:`4esn`*]->(`6esn` :`5esn`)),(({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})-[?:`2esn`|usn2{@usn6:0.12[0.e0..][`4esn`..]}]->(:_usn4:usn1));"),
    octest:ct_string("With Distinct $`1esn` Starts With $999 As #usn8,False In $`7esn` In .0 Order By .e12[usn2][01] Desc,0 Ends With $7 Ends With _usn3 Ascending,Extract(@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7|Null Starts With $`7esn` Starts With `2esn`) =~{`5esn`:Count(*)[..`3esn`],usn1:01234567 Ends With 0x0} Descending Skip [1.e1 =~$_usn4,.12 Contains $`4esn` Contains $`6esn`] Ends With Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn8 In .e12 In 9e1) Limit \"d_str\" Where Count(*) In 01 In .0 Remove `3esn`:_usn3,{`7esn`:Count(*) In 01 In .0,`6esn`:$123456789[..0.12][..#usn7]}._usn3? Union All With  Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where usn1 Starts With $#usn7 Starts With `5esn`) Contains @usn5(Distinct 123456789 Starts With `2esn` Starts With .0,123456789 Starts With #usn7 Starts With `6esn`) Contains None(#usn8 In $`5esn` Is Null Is Null Where $#usn8 In .e12 In 9e1) Skip @usn5 Starts With 12e12 Starts With @usn5 Where 07[Count ( * )...e1][0X0123456789ABCDEF..$7] Detach Delete 999[$`8esn`],Single(#usn7 In 01234567[$`3esn`..])[(`5esn` :`8esn`{`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null})<-[:@usn5|`8esn`*..]-(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})-[``?{usn2:@usn5 In 0X0123456789ABCDEF,usn2:9e1 Is Null Is Null}]->(`8esn` :_usn3{``:12.e12['s_str']})][[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 12 Ends With 01234567|Count(*) In 01 In .0]],$#usn7 In .e1 In 01 With  $`2esn`[``..] As `3esn`,[123456789 =~$123456789,0.12 In $7 In 0] Is Null Is Null As `3esn`,`7esn`[...e1][..\"d_str\"] Order By [0.0 =~0X7 =~#usn7,123456789 =~_usn4 =~$0] Ends With `7esn`(Distinct 12.0[..$7][..999],0X7[.e12..01234567]) Asc Limit $#usn8 Is Null Where $123456789 In Count(*) In .e1;"),
    octest:ct_string("Create _usn4=(((@usn6 :_usn4:usn1{@usn6:Null Is Null Is Null,#usn7:`5esn`[Count ( * )..][\"d_str\"..]})-[`2esn`:@usn5|`8esn`]-(usn2 :`5esn`)-[:@usn5|`8esn` *0Xa{usn1:$1000 Contains $`3esn`}]->({`4esn`:#usn7 Starts With 0 Starts With 12,`4esn`:0x0 =~_usn4}))) Unwind $`5esn` Contains $@usn6 As @usn6 Return Distinct 1000 Contains $#usn7 Contains `6esn`,12.0 Contains 0.e0 As `6esn`,$12[..7][..07] As #usn8 Order By Single(`6esn` In 0X7 =~`` Where 0.12[Null..]) Contains (@usn5 :`2esn`:`3esn`{`1esn`:$`8esn`[..$usn1][..'s_str']})<-[usn2:@usn6{`7esn`:123456789[`4esn`..][Count ( * )..],`4esn`:010[$`8esn`..][0..]}]-(_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8}) Contains All(@usn6 In @usn5 In $`6esn` Where $usn2 Is Not Null) Descending Skip All(@usn5 In .12[#usn7][$`8esn`] Where 0Xa Is Null Is Null)[[usn1 In 00 Starts With _usn3 Where 010 =~$usn2 =~1e1]] Limit 0xabc Starts With _usn3 Union Optional Match `4esn`=(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})-[?:#usn7|:_usn4]->(`` :#usn7$0)-[`2esn` *0X0123456789ABCDEF..{usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3}]->(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]}),(((`` :@usn6:`7esn`{`2esn`:0.12[0.e0..][`4esn`..]})<-[`3esn`?:_usn3|:`4esn`]-(_usn3 :`1esn`)<-[_usn3{_usn3:12.e12 In $0 In Count(*)}]-(`7esn` :@usn5))) Where $_usn3[..Count ( * )][..@usn5] Match `3esn`=(((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})-[:`7esn`|`2esn` *..0X7{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]-(`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})-[`4esn`? *00..]-(:`4esn`:#usn8{@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]}))) Where `7esn`[Null..][@usn5..] Union All Remove [Null Contains _usn4].`8esn`!,Single(#usn8 In $`5esn` Is Null Is Null Where 0e0 =~_usn4).@usn6 With Distinct 0 =~12.e12 =~$``,0.12 Contains .e1 As `6esn`,01 Contains $`7esn` Contains 9e0 Order By Count ( * )[..1e1] Asc,_usn3(Distinct 0.12 In 01 In $`3esn`,1.e1[0X0123456789ABCDEF..][$`5esn`..]) Ends With Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) Ends With Filter(usn2 In 1000 Contains 0.e0 Where 12e12 Ends With 010 Ends With .0) Asc,[0X0123456789ABCDEF In 01234567,0x0 Contains _usn4 Contains 123456789] Ascending Skip Extract(#usn8 In $`5esn` Is Null Is Null Where 's_str' Starts With 1000 Starts With #usn8|07)[None(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 12[..True][..$`4esn`])..usn2(Distinct $1000[01234567],00 In 0.12 In `5esn`)][`8esn`(00[``..][$`4esn`..],123.654[@usn5])..Extract(@usn5 In $#usn8 Is Null Is Null Where @usn5 Contains $`1esn` Contains 999)] Limit _usn3(0x0[0X7..][usn1..])[..Any(#usn8 In $`5esn` Is Null Is Null Where 999[$`8esn`])][..{#usn7:False[`2esn`..#usn8]}] Detach Delete $`7esn` In 0.e0 In `4esn`;"),
    octest:ct_string("Create (@usn5 {_usn4:_usn3 Ends With 0x0 Ends With 01234567}) Union All With Distinct 0['s_str'][Null] As #usn7,{`2esn`:999 In $_usn4 In 0X7}[..{`7esn`:12e12 Ends With 010 Ends With .0}][..Filter(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $123456789[$`2esn`][True])] As `3esn`,Null Starts With _usn4 Starts With `6esn` As _usn3 Order By $`1esn`[$_usn3..][9e1..] Asc,$`2esn` Starts With .e0 Starts With 12.0 Descending,999 Contains `7esn` Ascending Limit 9e1 =~.0 =~$`1esn` Union Remove [$`5esn`[False],9e1 Contains $`3esn` Contains 01234567,`5esn`[Count ( * )..][\"d_str\"..]].@usn5!,`3esn`:_usn4:usn1,[usn1 In 00 Starts With _usn3].#usn8? Return Distinct *,$@usn6[..$usn1] As _usn3 Order By {``:12e12[$`5esn`][07],_usn3:$`6esn` Is Null Is Null} Ends With [0 Is Not Null Is Not Null] Descending,Extract(@usn6 In @usn5 In $`6esn` Where 123456789 =~_usn4 =~$0) Is Null Desc,.12 Ends With `1esn` Ends With $`1esn` Asc Limit `7esn` Starts With $`` Starts With $#usn7 Merge ((_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8})<-[?:usn2|#usn8 *00..]-(`3esn` :`4esn`:#usn8));"),
    octest:ct_string("Remove {_usn4:00 In 0.12 In `5esn`,@usn5:0X7 =~.0 =~\"d_str\"}.`6esn`? Return Distinct @usn5[..True][..0X7] As #usn8,[#usn7 In 01234567[$`3esn`..] Where `7esn` Starts With $`` Starts With $#usn7|07 In 0 In 's_str'][Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 12.0[..$7][..999])..][[@usn5 In .12[#usn7][$`8esn`] Where $0[7..][Null..]|$@usn5 Contains 01]..] Order By 0 Ends With $7 Ends With _usn3 Ascending Skip \"d_str\"[$`7esn`][$1000] Limit False[0Xa..$@usn5][$`6esn`..12e12] Remove `4esn`:``,{#usn7:0[0.12..]}.usn2! Union All Create (({``:12 Is Null Is Null})<-[usn2:`8esn`|:usn1*..{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]->({#usn7:False[`2esn`..#usn8]})-[`5esn`:#usn8*]->({_usn3:12.e12 In $0 In Count(*)})),#usn7=((`1esn` {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})<-[:_usn3|:`4esn`{_usn4:$`3esn` =~$`6esn` =~`8esn`,`5esn`:0X7[0e0..]}]-(:`8esn`)<-[:#usn7|:_usn4 *0Xa]-(usn1 :_usn3{_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"})) Remove (`2esn` :`6esn`:`7esn`{`6esn`:$#usn8 Ends With 1000 Ends With .0,`7esn`:010 =~`6esn`})-[:`2esn`|usn2 *999..{#usn8:`5esn` =~0Xa,usn1:12 =~usn1 =~.e12}]-(`4esn` :#usn7).@usn5?,All(`4esn` In `6esn`['s_str'..][010..] Where \"d_str\" =~`6esn` =~0Xa).``!,(`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})-[`2esn`*..$usn1]->(:@usn5{_usn4:.12 Starts With 0Xa})<-[`4esn`? *00..]-(`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]}).usn1! With Distinct `2esn` Contains $999 As #usn7,$123456789[False.._usn3] As `1esn` Order By (usn2 :`7esn`{@usn5:usn1[$`3esn`..$999][True..False],`8esn`:$`5esn` Is Null Is Null})-[`5esn`?:_usn4|:@usn5]-(usn1 :`7esn`)<-[`` *12..0xabc]->(:``{_usn3:Count(*)['s_str'..`1esn`],`1esn`:$`6esn`[$`1esn`][1000]}) Ends With [$`8esn` =~$usn2,0X0123456789ABCDEF[..usn1],`` In `6esn`] Descending Skip 0X7[..12e12] Union Optional Match ``=(((:_usn3{`6esn`:.e12[..0.e0][..$`1esn`],`8esn`:7 In 0xabc})<-[`4esn`:``|:_usn4{`5esn`:0e0 =~_usn4}]-(:`7esn`{@usn6:0.0[999..],#usn8:Null Is Null Is Null})-[#usn7:_usn3|:`4esn` *..0x0{usn2:$#usn7 In 12.0 In 0X0123456789ABCDEF,`6esn`:`7esn`[1e1..07][0x0..Count ( * )]}]->(`6esn` {`2esn`:$`2esn`[..`2esn`],usn1:False[0Xa..$@usn5][$`6esn`..12e12]}))) Where 1000 Ends With 1000 Ends With $`4esn` Remove [_usn4 In usn1 Contains False Contains `` Where 0.12 Contains $`2esn` Contains $_usn4].@usn5,[$123456789[0.0..],07 In `5esn` In 12e12,$`3esn` Starts With 01234567 Starts With $1000].`3esn`!,Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0.12 In $`4esn` In `6esn`)._usn4 Unwind @usn6(Distinct `` Starts With @usn5) =~Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 12.e12[@usn5..123.654]) =~#usn7(Distinct $0 =~$0 =~.e0) As `2esn`;"),
    octest:ct_string("Detach Delete [#usn8 In $`5esn` Is Null Is Null Where 0.0[..12e12][..$0]][{`2esn`:.e1 In $@usn6 In 999,usn2:@usn5 Ends With $`3esn` Ends With 12e12}..] Optional Match ((@usn6 {#usn7:False[`2esn`..#usn8]})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]-(`7esn` {_usn3:usn1 Contains $``})-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]-(_usn3 )) Where `7esn`[1e1..07][0x0..Count ( * )] Union Delete 0e0[`2esn`..010],@usn6[`5esn`..$`3esn`],Count ( * )[..usn1][..12.e12] Remove [#usn8 In $`5esn` Is Null Is Null Where 0e0 =~_usn4|$@usn6 =~usn1].usn1,None(@usn5 In .12[#usn7][$`8esn`] Where 123456789 Is Null).`1esn`?;"),
    octest:ct_string("Merge ((@usn5 :`3esn`:`1esn`{_usn3:#usn7 Starts With `1esn`})<-[?{`8esn`:`8esn`[1000..$7][$`7esn`..`2esn`],@usn5:$`2esn`[..`2esn`]}]->(usn2 :@usn5{`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})) On Match Set ``+=$@usn6 =~usn1,#usn8+=$#usn8 Is Null Create (`8esn` :@usn5)-[#usn7:`7esn`|`2esn` *..01{``:0X7 In 's_str' In $`1esn`,#usn8:010 Contains Count(*)}]->(`6esn` :_usn4:usn1{`6esn`:00 In 12.e12}) Union All Unwind $@usn6 Is Null As `` Union With Distinct $123456789 Ends With $`6esn` As `6esn`,Single(`6esn` In 0X7 =~`` Where 12.0[..$7][..999]) Starts With {_usn3:0.12 Is Null Is Null,`1esn`:9e12[0.0..12.e12]} Starts With (`8esn` :@usn5)-[`6esn`?:_usn3|:`4esn` *12..0xabc]-(usn2 :#usn8{`3esn`:123.654[@usn5]})<-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(#usn8 :`5esn`{usn2:.e1 Starts With 0.0 Starts With `6esn`,#usn8:9e12 =~01 =~$`7esn`}) Order By $usn2[0e0..] Desc,.0[$`6esn`..False] Ascending,[$`3esn` Starts With 01234567 Starts With $1000] Starts With `4esn` Starts With [$`2esn`[..7][..$usn1]] Asc Skip Extract(`4esn` In `6esn`['s_str'..][010..] Where $12 Is Null Is Null) Ends With `2esn`(`7esn`[Null..][@usn5..],123.654[12.e12..1e1]) Ends With Any(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 010[$@usn6]) Limit $`2esn` Contains usn1 Contains `2esn`;"),
    octest:ct_string("Detach Delete $999[12.0..] Remove ``:#usn7 Union Delete #usn8 Ends With `4esn` Ends With $`4esn`,$_usn3[..Count ( * )][..@usn5],$usn2 In 9e0 In $7 Detach Delete Extract(`4esn` In $`8esn` Starts With 1000 Where 9e1 Is Null Is Null) =~Any(`4esn` In 's_str'[12..'s_str'] Where $#usn8 Is Null) =~[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`|$123456789 Ends With .e1],$7 Contains 0x0 Contains ``,[\"d_str\"] Contains _usn3(Distinct $usn1[_usn4..][usn2..]) Merge (`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]})<-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :`4esn`:#usn8) On Create Set `2esn` =1e1[0.0],`4esn`+=All(@usn6 In @usn5 In $`6esn` Where False Contains `3esn`) =~None(`4esn` In $`8esn` Starts With 1000 Where 01 Ends With .e0) =~None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `7esn` Starts With $usn2 Starts With .e0) On Match Set #usn7 =.12 Is Not Null Is Not Null,Filter(usn2 In 1000 Contains 0.e0 Where 123456789 Starts With `2esn` Starts With .0).`1esn`? =[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn7 In .e1 In 01][``($`4esn`[usn1..$#usn8][12.0..`3esn`])..[`6esn` In 0X7 =~``|$#usn7[...e12][..$7]]][(:``{@usn5:$@usn6 Contains Count ( * ),`2esn`:$0 Is Not Null})-[_usn3?:`5esn`|`1esn` *0X0123456789ABCDEF..]->(`1esn` :#usn7{_usn3:999[.e12][01],`6esn`:9e12 Is Not Null Is Not Null})<-[`5esn`?:usn1|`3esn` *1000..]-(`5esn` {usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null})..Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 12.0[..$7][..999])];"),
    octest:ct_string("Merge ((:`2esn`:`3esn`{`7esn`:$_usn4[#usn8..]})<-[?:usn2|#usn8 *00..]-(`3esn` :`4esn`:#usn8)) Remove [`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`6esn`[$@usn6..]|010 =~$usn2 =~1e1].@usn6? With Distinct 01234567 Ends With 0x0,[`2esn` In `7esn` Starts With $`` Starts With $#usn7][{#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1}..] As #usn8,$1000 Is Not Null Is Not Null Where True[Count(*)..][1e1..];"),
    octest:ct_string("Return Any(#usn8 In $`5esn` Is Null Is Null Where 0.12 Contains $`2esn` Contains $_usn4)[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..Extract(`4esn` In `6esn`[1e1..])],123456789 Starts With _usn4 Starts With @usn6 Skip _usn3 Ends With 12e12 Ends With .e0 Remove Filter(`6esn` In 0X7 =~`` Where $0[$#usn8..01234567]).`5esn`?,{#usn7:False[`2esn`..#usn8]}.#usn7?,usn1($`1esn` =~$`1esn` =~#usn7).`1esn`? Optional Match (((`4esn` )<-[_usn3?:`3esn`|:`4esn` *0..010]->(_usn3 )<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3}))) Union All Return 01 In 01 In 12 As #usn8,$`6esn`[$`1esn`][1000],[#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str'|@usn6 Starts With `7esn` Starts With Null] Is Not Null Is Not Null Order By 12.e12 Contains `5esn` Ascending,{#usn8:#usn7 Ends With 9e1} Is Not Null Is Not Null Ascending Limit 0.12 Contains $12 Contains `8esn` Detach Delete 123.654[12.e12..1e1],`6esn`(Distinct 12.0[0Xa][00]) In {`7esn`:12e12 Ends With 010 Ends With .0} In Extract(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6|#usn7 Is Not Null Is Not Null) With Distinct *,\"d_str\" Order By $`3esn` Descending,[0[usn2..],7[12e12..$_usn4][9e1..True],`1esn` Contains Count ( * )][Extract(@usn5 In .12[#usn7][$`8esn`] Where Count ( * ))..][Single(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $123456789[..0x0][..`4esn`])..] Desc,1e1[..#usn8][..'s_str'] Descending Skip @usn5 Is Not Null Is Not Null Union All Match (_usn4 :#usn8)<-[`6esn`? *..7{`3esn`:123456789[$#usn7..]}]-(:`2esn`:`3esn`{`7esn`:$_usn4[#usn8..]})-[usn1?:_usn3|:`4esn` *123456789..999{`6esn`:01 Ends With .e0,`4esn`:$`7esn` Is Not Null}]->(_usn3 ) Where _usn4 Starts With 0X7;"),
    octest:ct_string("Unwind [`4esn` In `6esn`['s_str'..][010..] Where $@usn5 In 12e12 In Count(*)|$1000[01234567]][Any(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7)..{usn1:usn1 Is Null Is Null,usn2:12.0[``]}][(_usn3 {`5esn`:0.12 Contains .e1})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`})..00] As @usn5 Return *,[010 =~$usn2 =~1e1,`6esn` =~01234567 =~0Xa,07[1e1]][(:@usn6:`7esn`)<-[?:_usn3|:`4esn` *010{`8esn`:$``[_usn4..][`7esn`..]}]-(@usn6 {_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12})..][Extract(#usn8 In $`5esn` Is Null Is Null Where 1000[0.0][Null])..] As `8esn`,`5esn` =~0Xa As usn1 Order By 0X0123456789ABCDEF Is Null Is Null Descending,Count ( * ) In 010 Descending,`5esn` In $999 Descending Limit .e0 Contains #usn7 Contains $#usn8;"),
    octest:ct_string("Remove [usn1 In 0x0[..`4esn`]|`` Starts With @usn5].`6esn`?,(:#usn7{`6esn`:.e12 =~0.0 =~9e0,@usn6:$usn2 =~$_usn4 =~`5esn`})<-[ *1000..]->(#usn7 {`2esn`:$``[_usn4..][`7esn`..],`3esn`:#usn7 Ends With 9e1})._usn4? Unwind [010 =~$usn2 =~1e1,`6esn` =~01234567 =~0Xa,07[1e1]][(:@usn6:`7esn`)<-[?:_usn3|:`4esn` *010{`8esn`:$``[_usn4..][`7esn`..]}]-(@usn6 {_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12})..][Extract(#usn8 In $`5esn` Is Null Is Null Where 1000[0.0][Null])..] As `5esn` Unwind .e12 Starts With True As `7esn`;"),
    octest:ct_string("Delete 0x0[...e12][..@usn5],$``,@usn6[$`7esn`] Return *,.e1[$_usn4][1e1] As `7esn` Order By 9e0 Ends With $`7esn` Asc Skip 's_str'[12..'s_str'];"),
    octest:ct_string("Create ({``:.e12[..0.e0][..$`1esn`]})-[_usn3:#usn8]-(usn1 :#usn7) Merge `3esn`=((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})) On Create Set ``+={usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null} Is Not Null Is Not Null,@usn5+=usn1[..@usn5][...e0],`2esn`+=All(#usn7 In 01234567[$`3esn`..] Where 12[usn1][True])[..[`4esn` In `6esn`[1e1..] Where $`2esn`[..`2esn`]|_usn3 In .e1 In $12]][..{`2esn`:$usn1[1e1.._usn3][$@usn6..$#usn7]}] On Create Set usn1 =(`6esn` :_usn4:usn1{`6esn`:00 In 12.e12})-[?:@usn6{`8esn`:12 Ends With .e12 Ends With $7,`8esn`:0.0[12...12]}]-(`3esn` :``)[Extract(@usn5 In .12[#usn7][$`8esn`] Where #usn8 Contains .e0 Contains $`8esn`|.e0[..999][..0X7])..Any(#usn7 In 01234567[$`3esn`..] Where Null[01234567][01234567])],_usn4 =Any(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn`)[@usn6..][usn2(Distinct 0xabc Contains Null Contains 9e12,12[..True][..$`4esn`])..] Match (`7esn` {_usn3:usn1 Contains $``})<-[usn1]->(:#usn7{`7esn`:\"d_str\",usn2:True[`4esn`][$`6esn`]})-[:`1esn` *010{`2esn`:$_usn3[9e1][$_usn4],`7esn`:`7esn`[...e1][..\"d_str\"]}]->({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12}),(({`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]})-[#usn8?]-(:_usn3{`6esn`:.e12[..0.e0][..$`1esn`],`8esn`:7 In 0xabc})<-[ *1000..]->(#usn7 {`2esn`:$``[_usn4..][`7esn`..],`3esn`:#usn7 Ends With 9e1}));"),
    octest:ct_string("Create (`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`})-[_usn4{@usn6:`1esn`[...e1],`5esn`:`5esn`[`1esn`]}]->(`7esn` :`8esn`{`4esn`:00 Ends With .12 Ends With `4esn`})-[ *07..]->(usn2 :@usn6:`7esn`);"),
    octest:ct_string("Remove Extract(_usn4 In usn1 Contains False Contains `` Where _usn4[$`4esn`..]|999 Contains `7esn`).usn1? With Distinct *,`4esn`($123456789 =~$0 =~$`3esn`) =~[07[12][$`6esn`],$`2esn` =~'s_str',$12[01..][1.e1..]] =~usn1(#usn7 Starts With `1esn`) As `3esn` Order By Extract(usn2 In 1000 Contains 0.e0 Where 0X7 =~`4esn` =~`8esn`) Contains [0 Contains 12e12,0xabc Ends With $7 Ends With $`2esn`,0x0 =~_usn4] Ascending,07[1e1] Ascending Skip 0e0[$12..`5esn`][Count(*)..`6esn`] Limit $123456789 Is Not Null Is Not Null Where 7 =~9e0 =~'s_str' Return None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where _usn3[...e1]) In (:_usn4:usn1{``:123456789 Starts With `2esn` Starts With .0,`5esn`:``})<-[usn2?:usn2|#usn8{`6esn`:$123456789[$`2esn`][True],@usn5:$`3esn` =~$`6esn` =~`8esn`}]-({`5esn`:0e0 =~_usn4})-[_usn4:_usn3|:`4esn` *1000..{#usn8:$999 Ends With $`3esn` Ends With `8esn`}]->(#usn7 :`7esn`{`4esn`:.12 Starts With .12 Starts With `3esn`}) As _usn3 Skip `2esn` Is Not Null Is Not Null Limit None(usn1 In 0x0[..`4esn`] Where $`2esn` Contains usn1 Contains `2esn`)[..Extract(`6esn` In 0X7 =~`` Where $usn2 Contains 12.e12 Contains 00|$#usn8 Ends With 1000 Ends With .0)][..[@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where #usn7 Ends With 9e1]];"),
    octest:ct_string("Merge (@usn6 {`4esn`:$`2esn`[..`2esn`]})<-[`4esn`? *00..]-(`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]})-[ *..7]-(:_usn3{@usn6:$`7esn` Is Null Is Null}) On Create Set [$usn1 In 1000 In $#usn7,$#usn7 In 12.0 In 0X0123456789ABCDEF,9e0 Is Not Null]._usn3 =All(_usn4 In usn1 Contains False Contains `` Where #usn8[$#usn8..])[(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})..],Extract(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null).`1esn`! =0xabc Starts With _usn3 On Match Set `2esn` =$usn2[False..`7esn`][`7esn`.._usn3],``+=_usn4 Ends With 01 Ends With $`1esn`,``+=01 Ends With .e0 Delete `2esn`[$`1esn`..][$_usn3..],7 =~9e0 =~'s_str' Merge ((usn2 :`7esn`{@usn5:usn1[$`3esn`..$999][True..False],`8esn`:$`5esn` Is Null Is Null})-[@usn5?:@usn6*..]-(@usn5 {@usn6:0.0[999..],#usn8:Null Is Null Is Null})<-[`6esn`?{`7esn`:@usn6 Contains _usn4 Contains $`4esn`}]-(`1esn` :``)) On Create Set All(@usn5 In 0X7 =~.0 =~\"d_str\" Where 9e12[usn2..7][.e1..$`7esn`])._usn3? =$`1esn` =~$`1esn` =~#usn7,`2esn`+={`4esn`:$@usn6 Contains 0 Contains $`2esn`}[[@usn5 In 0X7 =~.0 =~\"d_str\"|$`1esn` Ends With _usn4 Ends With `3esn`]..Extract(@usn5 In .12[#usn7][$`8esn`] Where $usn2 Contains 12.e12 Contains 00|9e0 Ends With $`7esn`)] On Create Set None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 7 In $`3esn` In #usn7).`2esn`! =.e1[..$`4esn`][.._usn4];"),
    octest:ct_string("Create ({`4esn`:#usn7 Starts With 0 Starts With 12,`4esn`:0x0 =~_usn4})-[ *..0x0]->(#usn8 {usn2:7 Contains 9e1}) Create `7esn`=(`` :@usn6:`7esn`{`4esn`:0X0123456789ABCDEF Is Not Null}),(((`7esn` :`7esn`)-[{`2esn`:\"d_str\" =~`3esn` =~0Xa,_usn4:usn1 Is Null Is Null}]->(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]})<-[`2esn`?:`7esn`|`2esn`{`8esn`:00}]-(`5esn` {@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00}))) Remove [`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 12.0[..$7][..999]].`5esn`!,usn1(0X7[.e12..01234567])._usn3 Union Create `4esn`=((:`7esn`{``:$`1esn` Starts With @usn6})),@usn5=((@usn6 :#usn7{@usn5:Null Is Null Is Null})<-[``?:@usn5|`8esn`]->(:_usn4:usn1{#usn7:$`5esn` Is Null Is Null,usn2:usn1[$`3esn`..$999][True..False]})) Merge `8esn`=((@usn6 {_usn3:$_usn4[$`1esn`]})-[`5esn`?:_usn4|:@usn5]->({`5esn`:Count(*)[..`3esn`],usn1:01234567 Ends With 0x0})-[usn2 *..0X7{#usn7:$_usn4[`3esn`][0]}]->({#usn7:Count ( * )[@usn6..0x0]})) Remove Extract(_usn4 In usn1 Contains False Contains `` Where $12 Contains 123.654 Contains `8esn`|`5esn` In 12).#usn8?,[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`7esn` Ends With $`2esn` Ends With $usn1|0[0.12..]].@usn5?;"),
    octest:ct_string("Merge (`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`})-[_usn4{@usn6:`1esn`[...e1],`5esn`:`5esn`[`1esn`]}]->(`7esn` :`8esn`{`4esn`:00 Ends With .12 Ends With `4esn`})-[ *07..]->(usn2 :@usn6:`7esn`) On Create Set #usn8:_usn4:usn1,[0 Is Not Null Is Not Null].usn2! =(:`1esn`{@usn5:123456789 Starts With `2esn` Starts With 9e12})-[#usn7? *999..]-(@usn5 :_usn4:usn1{`1esn`:07[1e1],`7esn`:12e12[$`5esn`][07]})-[`6esn`:``|:_usn4 *..01]->(`7esn` :`6esn`:`7esn`{_usn4:07 In `5esn` In 12e12})[Extract(#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|`7esn` Starts With $usn2 Starts With .e0)..Extract(#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str')] Union With Distinct @usn6 Starts With `7esn` Starts With Null,$usn1[#usn8..][``..] As `2esn`,`3esn`[$`1esn`..] As usn2 Order By _usn3[0] Asc,``[$`3esn`][$`2esn`] Ascending,{@usn5:0.e0[@usn6][0x0]} Ends With All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 7 In $`3esn` In #usn7) Ascending Skip (@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})<-[_usn4?:`6esn`]-(`2esn` {`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null}) Is Not Null Is Not Null Limit [@usn6 In @usn5 In $`6esn` Where $usn2 Is Not Null|$`6esn`[..0X0123456789ABCDEF]][`5esn`(Distinct 0X7 In $@usn5 In 9e0,0x0)..] Where `1esn` Contains Count ( * ) Return Extract(`6esn` In 0X7 =~``|9e0 In 01234567) Contains Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) As `5esn` Return Distinct *,.e1 Starts With $`8esn` Skip 0xabc[12.e12..`1esn`] Limit 0.e0[@usn6][0x0];"),
    octest:ct_string("With Distinct *,$usn2[12..$`7esn`][$0..$`7esn`],[0Xa[$``..][01234567..]] Contains `3esn`(Distinct _usn3 In .e1 In $12) Contains (`5esn` :`8esn`{`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null})<-[:@usn5|`8esn`*..]-(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})-[``?{usn2:@usn5 In 0X0123456789ABCDEF,usn2:9e1 Is Null Is Null}]->(`8esn` :_usn3{``:12.e12['s_str']}) As @usn6 Skip 9e1 Starts With 9e1 Starts With 010 Limit `3esn`(Distinct 0.0[999..])[Any(`6esn` In 0X7 =~`` Where $0 Is Not Null)..[010 =~$usn2 =~1e1,`1esn`[@usn6..$123456789]]] Merge ((({`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})<-[?:@usn6]-(`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})-[:_usn4|:@usn5]->(`5esn` :#usn7))) On Match Set (`5esn` {@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00})<-[?{#usn7:`6esn`[False..0.0][12e12..$usn2]}]-(`4esn` {`4esn`:#usn7[..$1000][..01]})-[`5esn`?:`3esn`|:`4esn`{`1esn`:$usn2 Contains 12.e12 Contains 00}]-(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]}).`4esn`! =0 Is Not Null,`6esn` =9e12 Ends With 0X0123456789ABCDEF Ends With #usn7,`1esn` =$_usn3[$`4esn`..Null] On Create Set 12.e12.`4esn`? =12e12 Starts With $123456789 Starts With 12.0,(#usn8 :_usn3)-[`8esn`?:`6esn`{#usn7:True =~@usn5 =~$`1esn`,@usn6:False[.e1..Null]}]->(:``{`2esn`:$7,usn1:.12 Contains $`4esn` Contains $`6esn`})-[`6esn`?:@usn6 *999..]->(`2esn` :usn2:@usn6).`3esn`? =All(#usn8 In $`5esn` Is Null Is Null Where #usn8[$#usn8..])[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..(#usn8 {`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]})<-[?:@usn5|`8esn`]-(usn2 :@usn5{`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})<-[?:#usn8{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]->(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})] Merge (`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`})-[_usn4{@usn6:`1esn`[...e1],`5esn`:`5esn`[`1esn`]}]->(`7esn` :`8esn`{`4esn`:00 Ends With .12 Ends With `4esn`})-[ *07..]->(usn2 :@usn6:`7esn`) On Create Set #usn8:_usn4:usn1,[0 Is Not Null Is Not Null].usn2! =(:`1esn`{@usn5:123456789 Starts With `2esn` Starts With 9e12})-[#usn7? *999..]-(@usn5 :_usn4:usn1{`1esn`:07[1e1],`7esn`:12e12[$`5esn`][07]})-[`6esn`:``|:_usn4 *..01]->(`7esn` :`6esn`:`7esn`{_usn4:07 In `5esn` In 12e12})[Extract(#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|`7esn` Starts With $usn2 Starts With .e0)..Extract(#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str')] Union All Match @usn6=(((`4esn` :`2esn`:`3esn`{`1esn`:123456789[1000]})-[#usn7?:@usn6 *00..]->(_usn3 :_usn4:usn1{@usn5:$@usn6 In $`5esn` In $usn2,#usn7:$0[0X0123456789ABCDEF..$#usn7]})-[_usn3?:`2esn`|usn2 *010{`6esn`:#usn7 Ends With `4esn` Ends With @usn5}]->(`1esn` :``{`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]}))) Where `7esn`[1e1..07][0x0..Count ( * )] Create _usn3=(((#usn7 :#usn8{`2esn`:12 =~usn1 =~.e12})-[`8esn`?:#usn7|:_usn4{usn2:7[$`4esn`..123456789]}]->(#usn8 :usn2:@usn6{`5esn`:00 Ends With $_usn4 Ends With $`2esn`,usn2:#usn7 Starts With 0 Starts With 12})-[``? *12..0xabc]->({@usn6:9e0 Contains `8esn`}))),(((`8esn` :@usn5)<-[@usn5:#usn7|:_usn4]->(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})<-[`4esn`:``|:_usn4{`5esn`:0e0 =~_usn4}]-(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`}))) With Distinct (`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})<-[{_usn3:12.e12 In $0 In Count(*)}]->({`6esn`:$_usn4[$`8esn`..][07..]}) Ends With Any(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn7 In .e1 In 01) Ends With usn2(Distinct _usn3 Contains @usn6 Contains 1.e1) As #usn8 Order By _usn4 Starts With $@usn6 Starts With #usn7 Asc,$#usn7 Desc Where $@usn6 Is Null Is Null;"),
    octest:ct_string("Remove (`2esn` :`6esn`:`7esn`{`6esn`:$#usn8 Ends With 1000 Ends With .0,`7esn`:010 =~`6esn`})-[{@usn5:$123456789 Ends With .e1,#usn8:0x0 =~_usn4}]-(`3esn` {`8esn`:$usn2[12..$`7esn`][$0..$`7esn`]})<-[? *0..010]-(#usn8 :`4esn`:#usn8).`6esn`!,[@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null].`5esn`? Remove Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where .e12[..0.e0][..$`1esn`]).`5esn`!,Any(@usn6 In @usn5 In $`6esn` Where False Contains `3esn`).`5esn`? Remove {`6esn`:9e1 Contains $`3esn` Contains 01234567}.`2esn` Union Unwind 9e12 As `7esn` Unwind 12.e12 Contains $`5esn` As #usn7 Remove {`6esn`:$`8esn`[``..][123.654..],``:999[$`6esn`]}.``,[0X7[..12e12],$`6esn`[$`1esn`][1000]].usn2?;"),
    octest:ct_string("Return Distinct *,$7[12.e12..] As #usn7,`4esn`[$#usn7] As `1esn` Skip #usn7[..$1000][..01] Limit {`8esn`:@usn5[..True][..0X7],`1esn`:`1esn` Contains Count ( * )}[{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}][Any(usn1 In $123456789 Contains usn2 Where 0.e0 Ends With 12 Ends With $7)] Union All Unwind (`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})-[:usn1|`3esn`*]->(:_usn3{`8esn`:0X0123456789ABCDEF In $1000 In $`3esn`})-[`3esn`{#usn7:12e12 Ends With 010 Ends With .0}]->(usn1 :#usn8) Is Not Null As `8esn`;"),
    octest:ct_string("With Distinct Count ( * ) Ends With 1000 Ends With 12 As _usn4,False[..12.e12] Skip {usn2:123456789 Starts With `2esn` Starts With 9e12} Ends With All(usn2 In 1000 Contains 0.e0 Where 01234567[Null..0.e0][Count(*)..$#usn8]) Where 0 Is Null Is Null Merge ((`4esn` :`7esn`{`7esn`:@usn6 Contains _usn4 Contains $`4esn`})) On Create Set _usn4+=@usn6(Distinct 12.e12[0e0..7],usn1[Count ( * )..$usn1]) Is Null Is Null,(_usn4 :``)-[usn1? *07..{`5esn`:#usn7 Is Not Null Is Not Null}]-({`1esn`:12[..9e0][..999],usn1:0x0 =~$`7esn` =~@usn6}).`5esn` =\"d_str\" Contains `3esn` Contains 00,`4esn` =``[True..] On Create Set #usn7+=Any(`6esn` In 0X7 =~`` Where 0X7[..12e12]),Extract(@usn5 In $#usn8 Is Null Is Null Where $@usn5 =~$`` =~$usn2|`5esn`[.e1][0Xa]).`6esn`? =$`1esn` Is Null Is Null Delete usn1[1e1][$_usn4],$123456789[..0.12][..#usn7] Union All Optional Match (({`5esn`:_usn3 Contains @usn6 Contains 1.e1,`7esn`:$12[01..][1.e1..]})-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})<-[usn1?{#usn7:9e12 Is Not Null Is Not Null,usn2:`3esn` =~0.0 =~$``}]->(`5esn` :`3esn`:`1esn`{`6esn`:$1000[.e0..]})),_usn4=(@usn5 {`1esn`:0[usn2..]})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`5esn` {_usn4:0X7 =~``})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(:`6esn`:`7esn`{`3esn`:`8esn`[$``]}) With Distinct $`2esn`[``..] As `3esn`,({`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`4esn` {@usn6:True[..'s_str'][..01]}) In Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where 07[12e12]) As `4esn`,[@usn6 =~01,$`7esn` In $7,00[``..][$`4esn`..]][All(`4esn` In $`8esn` Starts With 1000 Where 9e1 Is Null Is Null)..(_usn4 {_usn3:$`1esn` Is Null,usn1:$`4esn`[$`2esn`..]})<-[#usn8?:_usn4|:@usn5 *..0x0]-(#usn8 :`1esn`{#usn7:1e1[`6esn`..]})] As @usn6 Order By `7esn`[1000..][$123456789..] Desc,$#usn8 In .e12 In 9e1 Descending,$@usn5 Contains $`7esn` Contains #usn8 Desc Detach Delete $`3esn` Is Not Null Is Not Null,$1000 Ends With 1e1 Ends With 123.654 Union All With Distinct *,`3esn` =~`3esn` =~$`6esn` As `7esn`,Any(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 123456789[$#usn7..]) Contains [#usn8 In $`5esn` Is Null Is Null Where 0e0 =~_usn4|$@usn6 =~usn1] Skip .12[..`6esn`][..\"d_str\"] Limit [@usn5 In 0X7 =~.0 =~\"d_str\" Where #usn7 Starts With 0 Starts With 12][Filter(#usn8 In $`5esn` Is Null Is Null Where $12 Contains 123.654 Contains `8esn`)][[_usn4 In usn1 Contains False Contains `` Where True[..'s_str'][..01]|9e1[0.e0..][#usn8..]]] Where @usn6[$`7esn`];"),
    octest:ct_string("Unwind {@usn6:`7esn` In 999 In @usn6} Starts With Extract(usn1 In 0x0[..`4esn`] Where 0x0|07 Ends With 07) Starts With Filter(usn1 In 00 Starts With _usn3 Where $`` Ends With 12e12) As _usn3 Return Distinct .12[#usn7][$`8esn`],12 Ends With 07 Ends With @usn6 As usn1 Order By $999[..`1esn`] Ascending,Single(`6esn` In 0X7 =~`` Where 0.12[Null..]) Contains (@usn5 :`2esn`:`3esn`{`1esn`:$`8esn`[..$usn1][..'s_str']})<-[usn2:@usn6{`7esn`:123456789[`4esn`..][Count ( * )..],`4esn`:010[$`8esn`..][0..]}]-(_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8}) Contains All(@usn6 In @usn5 In $`6esn` Where $usn2 Is Not Null) Descending,[$`8esn` =~$usn2][Any(`6esn` In 0X7 =~`` Where $0 Is Not Null)..] Asc;"),
    octest:ct_string("Detach Delete 1000 Ends With 1000 Ends With $`4esn`,Filter(usn1 In $123456789 Contains usn2 Where usn2 Is Not Null) Ends With [usn1 In 00 Starts With _usn3 Where 010 =~$usn2 =~1e1] Ends With _usn3(Distinct $123456789 Ends With $`6esn`) Merge `4esn`=((#usn8 {@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null})) On Match Set {`8esn`:`8esn` In $@usn5}.`3esn`! =$@usn5[#usn8..][$`1esn`..],All(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $@usn6 Is Null Is Null).`1esn`! =$12[..``][..$7] On Create Set usn2 =_usn3 Is Not Null Is Not Null,`4esn` =.e1 Starts With $`8esn` Union All Create (#usn7 :@usn5)-[`4esn`:_usn3|:`4esn`{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:usn1{`8esn`:usn1 Contains $``}),``=({`7esn`:`6esn` Starts With $@usn6,``:`6esn` =~$_usn3})-[? *12..0xabc]-(:`6esn`:`7esn`{`6esn`:_usn4 Ends With 01 Ends With $`1esn`,`4esn`:$`8esn` In \"d_str\" In 9e12})<-[ *0xabc]-(_usn4 {`1esn`:010[@usn5..]}) Return Distinct $`4esn`[$`2esn`..] As #usn8,#usn8 In $0,Any(`6esn` In 0X7 =~`` Where 0X7[0e0..]) Contains Single(`4esn` In `6esn`['s_str'..][010..] Where @usn6[`3esn`..][$7..]) As #usn7 Limit Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`6esn`[$@usn6..]) In {`7esn`:12e12 Ends With 010 Ends With .0} In None(#usn8 In $`5esn` Is Null Is Null Where 123456789 In $usn2 In `6esn`);"),
    octest:ct_string("Optional Match (((usn2 :#usn8{_usn3:$_usn3[..Count ( * )][..@usn5]})-[``?:@usn6{#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}]->(`4esn` :`4esn`:#usn8{`1esn`:$@usn5 In 12e12 In Count(*)})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`4esn` :`5esn`{@usn6:$usn2 =~$#usn8,`8esn`:`6esn` =~$_usn3}))),usn2=(((`7esn` :`7esn`)-[{`2esn`:\"d_str\" =~`3esn` =~0Xa,_usn4:usn1 Is Null Is Null}]->(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]})<-[`2esn`?:`7esn`|`2esn`{`8esn`:00}]-(`5esn` {@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00}))) Create (((@usn6 {#usn7:False[`2esn`..#usn8]})-[? *010]-(`8esn` :@usn5)<-[#usn8?{`5esn`:Null[01234567][01234567]}]->(`6esn` :@usn6:`7esn`{@usn5:True[0x0][@usn6],`5esn`:Null Starts With _usn4 Starts With `6esn`}))),`8esn`=((_usn4 :`3esn`:`1esn`{`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]})) Union Detach Delete 1000 In 0X0123456789ABCDEF In 01,@usn6(Distinct Null[0e0][12])[..[@usn5 In 0X7 =~.0 =~\"d_str\" Where 0X7[0e0..]]][..`8esn`(010 =~`6esn`)],1e1 Starts With #usn8 Starts With 1.e1 Detach Delete Null Starts With $`7esn` Starts With `2esn` Delete $7 Ends With 12.0 Ends With 0xabc,usn1 =~Null =~`5esn` Union Merge ((_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8})<-[?:usn2|#usn8 *00..]-(`3esn` :`4esn`:#usn8)) Match _usn3=(`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})<-[`8esn`?:`5esn`|`1esn`]-(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]})<-[`3esn`?*..]->(`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]}),``=(({`5esn`:0e0 =~_usn4}));"),
    octest:ct_string("Create @usn6=({`3esn`:$`3esn` =~$`7esn` =~False,`4esn`:12 Ends With 01234567}),`7esn`=((:@usn6:`7esn`{_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`})-[`6esn`:@usn5|`8esn` *12..0xabc]-(`` :@usn5)-[?{@usn5:12.e12['s_str'],`1esn`:_usn3 Ends With 12e12 Ends With .e0}]-(:`4esn`:#usn8{_usn4:'s_str' In \"d_str\" In 123456789,`2esn`:0.12 Ends With $usn1 Ends With $@usn5})) Union All Match `1esn`=((`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`5esn`?:usn1|`3esn` *1000..]-({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})) Where $123456789 Is Not Null Is Not Null Merge _usn4=(`1esn` {usn1:True[Count(*)..][1e1..],usn1:9e1 Is Null Is Null})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]->(`6esn` {`8esn`:`8esn` In $@usn5}) On Create Set _usn3 =(usn2 :`7esn`{@usn5:usn1[$`3esn`..$999][True..False],`8esn`:$`5esn` Is Null Is Null})-[`5esn`?:_usn4|:@usn5]-(usn1 :`7esn`)<-[`` *12..0xabc]->(:``{_usn3:Count(*)['s_str'..`1esn`],`1esn`:$`6esn`[$`1esn`][1000]}) Is Null Is Null,`1esn` =7 Contains $`5esn` Contains $usn1,usn2 =\"d_str\" =~`3esn` =~0x0 On Match Set @usn6+=(usn1 :usn1{`3esn`:.e0[7..$`3esn`],`6esn`:010 =~$usn2 =~1e1})-[#usn8? *0xabc{`5esn`:0X7[12]}]->(usn1 {`2esn`:True =~@usn5 =~$`1esn`,`2esn`:`6esn`[1.e1..$#usn7][.e0..True]})[Any(_usn4 In usn1 Contains False Contains `` Where 0.12 In 01 In $`3esn`)..Single(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $123456789[..0x0][..`4esn`])][All(`6esn` In 0X7 =~`` Where $`3esn` =~Null)..{`8esn`:0xabc Ends With $#usn7 Ends With #usn8,usn2:usn1[$`3esn`..$999][True..False]}];"),
    octest:ct_string("Return Distinct $12 Contains 123.654 Contains `8esn` As _usn4 Remove None(usn1 In 0x0[..`4esn`] Where False[.e1..Null]).``,[.e0[..999][..0X7]].`5esn`?;"),
    octest:ct_string("With  Count(*) In 01 In .0,1000 Contains $#usn7 Contains `6esn` Skip (`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})<-[`7esn`?:@usn5|`8esn`{@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]}]->(`6esn` {@usn6:9e0 Contains `8esn`})<-[ *0xabc{`1esn`:123.654 In \"d_str\" In $_usn3}]-({`6esn`:$`5esn` Is Null,`2esn`:`7esn` Starts With $usn2 Starts With .e0}) =~{#usn8:$@usn5[#usn8..][$`1esn`..]} =~{#usn8:0X0123456789ABCDEF[..usn1]} Limit $_usn3[..Count ( * )][..@usn5] Where $123456789 =~$`5esn` =~07 Optional Match `1esn`=((`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]})) With  `5esn` In $999 As `6esn` Order By [_usn4 In usn1 Contains False Contains `` Where True[..'s_str'][..01]][[.0 Starts With `2esn` Starts With `6esn`,9e1[0.e0..][#usn8..]]..][[07[$999],9e0 In 01234567,@usn5 In 0X0123456789ABCDEF]..] Asc,False Ends With $`8esn` Asc Where @usn5 Ends With $`3esn` Ends With 12e12 Union Unwind $`1esn` Is Null Is Null As `8esn` Remove `3esn`:#usn8,(`1esn` {@usn6:9e12 Ends With 0X0123456789ABCDEF Ends With #usn7,#usn8:\"d_str\" =~`3esn` =~0Xa})<-[#usn7]-({`5esn`:9e1 Starts With _usn3 Starts With `4esn`})-[:`7esn`|`2esn` *..0X7{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]->(`5esn` {usn2:`5esn`[.e1][0Xa],@usn5:$usn1 In 1000 In $#usn7}).`5esn`!,[$`` Ends With 12e12,.12 Starts With .12 Starts With `3esn`,12.e12[0e0..7]].`5esn`? Unwind .e12 Starts With True As `8esn` Union All Return $`4esn`[12.e12..][0.0..],12[`7esn`...0][0.12..``] As @usn6,{#usn8:$`5esn` In False,usn2:$`7esn` In $7}[..Any(@usn6 In @usn5 In $`6esn` Where 010 =~$usn2 =~1e1)] Skip $`1esn` Ends With $`1esn`;"),
    octest:ct_string("Unwind Any(@usn6 In @usn5 In $`6esn` Where False Contains `3esn`) Ends With [1e1[@usn5..],$#usn8 Is Null,$0[$#usn8..01234567]] Ends With Extract(`6esn` In 0X7 =~`` Where 010 =~`6esn`) As usn2 With  $`3esn` As usn1 Order By All(@usn5 In .12[#usn7][$`8esn`] Where $`5esn` Contains $@usn6) Is Null Is Null Ascending,\"d_str\" Contains `3esn` Contains 00 Desc Skip $_usn4[$`1esn`..][$0..] Limit True[0] Union All Merge ((({`1esn`:12[..9e0][..999],usn1:0x0 =~$`7esn` =~@usn6})-[#usn8:`3esn`|:`4esn` *0..010]-(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]})<-[_usn3]->(_usn4 :`3esn`:`1esn`{`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]}))) Merge `3esn`=((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})) On Match Set `6esn` =$@usn5[Count ( * )] Union With Distinct 12.e12[$1000..],[_usn4 Ends With 01 Ends With $`1esn`,0e0 =~_usn4,$7[.12]][Any(`4esn` In 's_str'[12..'s_str'] Where $1000 In $`7esn` In $7)..Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0x0[..`4esn`])] As `2esn`,01 In 01 In 12 As #usn8 Order By `3esn` =~$`5esn` =~12 Ascending,`3esn` =~`3esn` =~$`6esn` Asc Limit {@usn6:`7esn` In 999 In @usn6} Starts With Extract(usn1 In 0x0[..`4esn`] Where 0x0|07 Ends With 07) Starts With Filter(usn1 In 00 Starts With _usn3 Where $`` Ends With 12e12) Where True[0x0][@usn6] Unwind [`4esn` In 's_str'[12..'s_str'] Where 9e12 =~01 =~$`7esn`][#usn7(00 In 12.e12)..Extract(usn1 In 0x0[..`4esn`] Where 1000 Ends With 1000 Ends With $`4esn`|@usn6[$`3esn`])][(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})<-[`8esn`]->(#usn8 )<-[`3esn` *00..{`8esn`:@usn6 Contains .e1 Contains $`4esn`,_usn4:0X7[..12e12]}]->(@usn5 {`1esn`:0[usn2..]})..(usn1 :_usn4:usn1)<-[@usn5?:`1esn`]-(#usn7 :`2esn`:`3esn`)] As _usn3 Return Distinct *,0.12 In $`4esn` In `6esn`,`4esn`(_usn4[$`4esn`..],0x0[...e12][..@usn5])[..{`3esn`:`8esn`[1000..$7][$`7esn`..`2esn`],_usn4:\"d_str\" Is Null Is Null}] As `2esn` Skip 0X7[..12e12];"),
    octest:ct_string("Optional Match ((`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})),(((@usn6 {#usn7:'s_str' In \"d_str\" In 123456789,usn2:07[12][$`6esn`]})<-[?:@usn6{`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]}]->(:@usn5)<-[#usn8?:`4esn`|:`7esn` *07..]->(`` :#usn7$0))) Where 00 In 1e1 Create `3esn`=((@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})<-[{_usn3:12.e12 In $0 In Count(*)}]-(:#usn7{`2esn`:.12 Starts With @usn5 Starts With $#usn8})) Unwind [@usn5 In .12[#usn7][$`8esn`] Where $_usn4[12e12][`4esn`]][`1esn`(Distinct 1e1[0.0],0.0[1000..][.e1..])..``(False In `3esn`)][[@usn6 =~01,$`7esn` In $7,00[``..][$`4esn`..]]..Filter(@usn6 In @usn5 In $`6esn` Where False[0Xa..$@usn5][$`6esn`..12e12])] As @usn6 Union All Delete 7[..0X7][..'s_str'],9e0 Ends With $`7esn`,$0 Ends With $#usn7 Ends With .12 Create (#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]})<-[:`6esn` *..0X7{`3esn`:`1esn` Contains Count ( * ),`7esn`:01234567 =~usn1}]-(:@usn5{`8esn`:$`3esn`[@usn5..$123456789],@usn5:\"d_str\" Starts With $usn1})-[?:#usn7|:_usn4]->(`` :#usn7$0),((:``{`2esn`:9e0[``][123.654],`1esn`:$_usn3[Null]})) Union With  's_str'[..0.0][..$`4esn`] As `2esn`,#usn7 Contains .0 Contains .e1,({`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})-[`6esn`{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}]-(`4esn` {@usn6:True[..'s_str'][..01]}) In Any(@usn5 In 0X7 =~.0 =~\"d_str\" Where 07[12e12]) Skip `6esn` Starts With $usn2 Starts With 0.0 Limit 9e1 Contains $`3esn` Contains 01234567 Where True Starts With $`8esn` Starts With \"d_str\" Merge `2esn`=(:_usn4:usn1) On Match Set `6esn` =9e12 Ends With 0X0123456789ABCDEF Ends With #usn7,`7esn` =9e1[0.e0..][#usn8..],#usn7+=({`7esn`:12e12 Ends With 010 Ends With .0})<-[?:`5esn`|`1esn`{_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12}]-({@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]}) Ends With @usn6(123456789 =~$123456789) Ends With [`1esn` Contains Count ( * ),$@usn6 Contains Count ( * ),False In 123456789 In $0] On Create Set `` =(`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[usn1?:`8esn`|:usn1]->({`6esn`:.e1 Starts With 0.0 Starts With `6esn`,_usn3:$@usn6 Contains 0 Contains $`2esn`})<-[:`2esn`|usn2 *0..010]->(`2esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}) Is Null Is Null,`7esn`+=(`7esn` :_usn4:usn1)<-[:``|:_usn4 *0Xa]->(`7esn` :`2esn`:`3esn`) Starts With ({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})<-[? *0..010]-(`4esn` :`5esn`{_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[:#usn7|:_usn4 *1000..{_usn4:07 In `5esn` In 12e12,@usn6:.0 Is Null Is Null}]->(#usn7 $usn2) Starts With Extract(usn2 In 1000 Contains 0.e0 Where $`6esn`[..0X0123456789ABCDEF]|07[`6esn`..][`5esn`..]),`2esn`:`1esn` With Distinct $0 Is Null Is Null Skip [0X0123456789ABCDEF Ends With 0X0123456789ABCDEF Ends With 's_str',0X0123456789ABCDEF In $1000 In $`3esn`,$0[..`8esn`]] In `4esn`(Distinct 12.e12 In $0 In Count(*),00 In 1e1) In [`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where _usn3[...e1]|.e0 =~`5esn`] Where 010 Contains Count(*);"),
    octest:ct_string("Remove {#usn8:0X0123456789ABCDEF[..usn1]}.`5esn`! Detach Delete Any(#usn7 In 01234567[$`3esn`..] Where 00 In 1e1)[[usn2 In 1000 Contains 0.e0 Where 12e12 Ends With 010 Ends With .0|0xabc[12.e12..`1esn`]]..][[@usn5 In .12[#usn7][$`8esn`] Where $@usn5 =~$`` =~$usn2]..],12.e12 Ends With 01 Ends With .e1,07[12e12] Union With Distinct $0 Is Null Is Null Skip [0X0123456789ABCDEF Ends With 0X0123456789ABCDEF Ends With 's_str',0X0123456789ABCDEF In $1000 In $`3esn`,$0[..`8esn`]] In `4esn`(Distinct 12.e12 In $0 In Count(*),00 In 1e1) In [`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where _usn3[...e1]|.e0 =~`5esn`] Where 010 Contains Count(*);"),
    octest:ct_string("Match ((`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})),(((@usn6 {#usn7:'s_str' In \"d_str\" In 123456789,usn2:07[12][$`6esn`]})<-[?:@usn6{`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]}]->(:@usn5)<-[#usn8?:`4esn`|:`7esn` *07..]->(`` :#usn7$0))) Unwind 07[1e1] As `1esn`;"),
    octest:ct_string("Detach Delete .e1[$_usn4][1e1] Union Create `5esn`=(`8esn` :_usn3{`8esn`:$`3esn` In $12 In 's_str'}),`6esn`=((@usn6 :`8esn`{`2esn`:0X7 =~.0 =~\"d_str\"})-[_usn3 *010]->(:usn1{`8esn`:usn1 Contains $``})<-[`8esn`?:``|:_usn4 *..01]-({`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null})) Optional Match ((_usn3 :_usn4:usn1)<-[`5esn`?:#usn8{#usn7:0.12 Ends With $usn1 Ends With $@usn5}]->({`1esn`:$@usn5 =~$`` =~$usn2})),(:`3esn`:`1esn`{@usn5:$#usn8 In .e12 In 9e1,`7esn`:9e1 Starts With `1esn` Starts With 0Xa})-[:usn1|`3esn`]-(_usn3 :_usn4:usn1{`2esn`:$`6esn`[$@usn6..]}) Where 00[01234567][False];"),
    octest:ct_string("Return Distinct *,0['s_str'][Null] As #usn7,{usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null} Is Not Null Is Not Null As #usn8 Order By `4esn` =~$`3esn` =~$123456789 Ascending,{`2esn`:999 In $_usn4 In 0X7}[..{`7esn`:12e12 Ends With 010 Ends With .0}][..Filter(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $123456789[$`2esn`][True])] Asc,$`4esn`[..usn1] Ascending Skip [@usn5 In 0X7 =~.0 =~\"d_str\"|#usn7 Starts With `1esn`][Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where `7esn`[...e1][..\"d_str\"])..][`2esn`(Distinct 12e12[Null],0xabc[12.e12..`1esn`])..] Limit $usn2[..12.0] With Distinct *,Any(#usn8 In $`5esn` Is Null Is Null Where 0.12 Contains $`2esn` Contains $_usn4)[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..Extract(`4esn` In `6esn`[1e1..])] Order By .e0 Contains 01234567 Descending,[$`7esn` Ends With `1esn` Ends With True,$999[12.0..]][`7esn`(Distinct $`2esn`[$`2esn`..])..][Any(usn1 In $123456789 Contains usn2 Where 0.e0 Ends With 12 Ends With $7)..] Desc,'s_str' Starts With 1000 Starts With #usn8 Descending Where 123456789 =~_usn4 =~$0 Unwind 12 =~usn1 =~.e12 As `7esn`;"),
    octest:ct_string("With Distinct 0 =~12.e12 =~$``,0.12 Contains .e1 As `6esn`,01 Contains $`7esn` Contains 9e0 Skip [@usn6 In @usn5 In $`6esn` Where $_usn4[$`8esn`..][07..]|.e12 Contains $12 Contains 12.e12][(_usn3 :`6esn`:`7esn`{usn1:$_usn3[9e1][$_usn4],`8esn`:123456789 =~_usn4 =~$0})<-[#usn8? *12..0xabc]-(:`6esn`:`7esn`{`3esn`:`8esn`[$``]})-[:`6esn`{@usn6:$0 =~$0 =~.e0}]-({`1esn`:@usn6})..Any(#usn8 In $`5esn` Is Null Is Null Where 123456789 In $usn2 In `6esn`)][[010[$`8esn`..][0..],False In `3esn`,12e12 Ends With 010 Ends With .0]..{@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`}] Limit .12[..`6esn`][..\"d_str\"] Where 0.e0 Ends With 12 Ends With $7 Merge (`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[?:`2esn`|usn2{@usn6:0.12[0.e0..][`4esn`..]}]->(usn1 :#usn8)<-[ *..0x0{`4esn`:$`7esn`[$usn1..][0.0..],`1esn`:$123456789[..0x0][..`4esn`]}]->(#usn8 :`4esn`:#usn8{#usn7:$`8esn` Starts With 1000}) On Create Set `6esn` =$@usn5[Count ( * )] On Create Set Single(usn1 In 00 Starts With _usn3 Where $`7esn` Ends With 07 Ends With 07).`6esn`? =Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 00 Ends With .12 Ends With `4esn`) Contains {`7esn`:0e0 Is Null Is Null,usn2:`4esn` =~123456789},@usn5 =[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn7 In .e1 In 01][..(usn1 :#usn8)-[:`1esn` *010{`2esn`:$_usn3[9e1][$_usn4],`7esn`:`7esn`[...e1][..\"d_str\"]}]->(`7esn` :#usn8)<-[:#usn7|:_usn4{usn2:`5esn`[Count ( * )..][\"d_str\"..],`7esn`:.e1 In $@usn6 In 999}]-({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})][..Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $usn2[..12.0])],[usn1 In 00 Starts With _usn3 Where 12 Ends With .e12 Ends With $7|_usn3 =~00].#usn7! =Single(usn1 In $123456789 Contains usn2 Where Count ( * )[..1e1]) Is Not Null;"),
    octest:ct_string("Remove _usn3(Distinct 010[@usn5..]).`4esn` Union All Unwind @usn6 =~01 As `8esn` Unwind 999 In 12 In \"d_str\" As #usn8;"),
    octest:ct_string("Merge ``=(`7esn` :`7esn`)-[_usn4?:@usn6 *..7]->({usn1:usn1[$`3esn`..$999][True..False],`7esn`:_usn3 Ends With 12e12 Ends With .e0}) Match (`` :`7esn`)<-[`8esn`:@usn5|`8esn` *123456789..999{`5esn`:0x0 Contains $`8esn` Contains `6esn`,#usn8:010 =~$usn2 =~1e1}]->(_usn4 {@usn5:$_usn3[$`4esn`..Null]}) Where $`4esn`[12.0..`5esn`] Union All Delete Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`|999[$`6esn`]) =~Single(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn`) Union All Unwind $7[.12] As @usn6 Detach Delete ({usn1:`4esn` In $12 In `8esn`})-[`4esn`]-(`1esn` {usn1:True[Count(*)..][1e1..],usn1:9e1 Is Null Is Null})<-[?{`5esn`:0x0 Contains $`8esn` Contains `6esn`,#usn8:010 =~$usn2 =~1e1}]->({`6esn`:$`5esn` Is Null,`2esn`:`7esn` Starts With $usn2 Starts With .e0})[[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 0e0 =~_usn4|0x0 Contains _usn4 Contains 123456789]..[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 7 In $`3esn` In #usn7]][usn1($`1esn` Is Null Is Null,$0[0X0123456789ABCDEF..$#usn7])..[usn1 In 00 Starts With _usn3 Where .12[9e0][$7]|07]] Match usn1=(`4esn` :#usn7)-[_usn4?:`6esn`]-(`2esn` :`1esn`{``:9e1 Starts With _usn3 Starts With `4esn`})-[_usn4?:@usn6 *..7]->(`` :@usn6:`7esn`{`4esn`:0X0123456789ABCDEF Is Not Null}) Where $`5esn` In `2esn` In .0;"),
    octest:ct_string("Unwind $_usn4[`3esn`][0] As _usn4 Create `5esn`=((:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[`6esn`:``|:_usn4 *..01]->(`5esn` {_usn4:0X7 =~``})-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(usn2 :usn1{``:9e12 Ends With 0X0123456789ABCDEF Ends With #usn7})) Create (((`4esn` {#usn8:`1esn`[0e0..],#usn7:$`6esn`[..0X0123456789ABCDEF]})<-[#usn8?:`3esn`|:`4esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]-({``:01234567 Ends With 0x0,`6esn`:0X7[0e0..]})<-[?:`7esn`|`2esn`]-(:`6esn`:`7esn`{`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]}))) Union All Remove {`8esn`:Count ( * ) =~Count(*)}.`6esn`,({@usn6:0X0123456789ABCDEF[..usn1]})<-[:``|:_usn4 *0Xa]->(`7esn` :`2esn`:`3esn`)._usn4?,(:`4esn`:#usn8)<-[_usn4:`7esn`|`2esn`]-(`5esn` {`8esn`:0.0[12...12]})<-[#usn7:`3esn`|:`4esn` *00..]-(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]}).`4esn` Union Optional Match _usn3=(#usn8 {usn2:7 Contains 9e1})-[`4esn`?:`8esn`|:usn1 *..0x0]->(:@usn6:`7esn`{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`}) Where \"d_str\";"),
    octest:ct_string("Match (:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[:#usn7|:_usn4{_usn3:\"d_str\" =~`3esn` =~0Xa}]-(#usn7 {`3esn`:Count(*)[12.e12..],`3esn`:usn2 =~0x0}),((:``{`1esn`:`6esn` =~$_usn3})-[`5esn`?:`3esn`|:`4esn`{`1esn`:$usn2 Contains 12.e12 Contains 00}]-(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]})) Where _usn4[0xabc..];"),
    octest:ct_string("Detach Delete 0Xa Starts With 0.12 Starts With .0,1000 In 0X0123456789ABCDEF In 01,`1esn`[0e0..] Create ((@usn6 {#usn7:False[`2esn`..#usn8]})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]-(`7esn` {_usn3:usn1 Contains $``})-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]-(_usn3 )) Union All With Distinct $_usn4[$`1esn`] As `5esn`,None(`4esn` In 's_str'[12..'s_str'])[Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`)..][Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where $@usn6 Contains Count ( * ))..] Order By 010[$`8esn`..][0..] Desc,010[@usn5..] Descending,12.e12 In $1000 Ascending Limit 0x0[..$`6esn`][..$#usn8] Where 12.e12['s_str'] Union All Match `8esn`=((_usn4 :`3esn`:`1esn`{`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]})) Create `1esn`=((`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`5esn`?:usn1|`3esn` *1000..]-({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})) Optional Match usn2=((#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})-[`6esn`?:usn1|`3esn`{`2esn`:1e1[@usn5..],`3esn`:$`6esn`[`3esn`..0e0]}]->(:`4esn`:#usn8{usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null})),((usn1 :@usn6:`7esn`{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(:#usn7{`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})-[?{@usn5:12.e12['s_str'],`1esn`:_usn3 Ends With 12e12 Ends With .e0}]-(`8esn` :`7esn`)) Where `3esn`[..7][..12e12];"),
    octest:ct_string("Optional Match usn2=(:`8esn`{usn2:7 Contains 9e1})<-[_usn3?:`7esn`|`2esn` *010]-(#usn8 :`4esn`:#usn8)-[`8esn` *..0x0{#usn7:Count ( * )[Count ( * )..12e12][usn1..1000],`4esn`:010 Is Null Is Null}]->(@usn6 ) Where .e1 Starts With 0.0 Starts With `6esn` Detach Delete $999[12.0..] Union Optional Match #usn8=(((`8esn` :@usn5)<-[@usn5:#usn7|:_usn4]->(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})<-[`4esn`:``|:_usn4{`5esn`:0e0 =~_usn4}]-(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`}))),_usn4=(`1esn` {usn1:True[Count(*)..][1e1..],usn1:9e1 Is Null Is Null})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]->(`6esn` {`8esn`:`8esn` In $@usn5}) Union All Optional Match `5esn`=(({`2esn`:123456789 Starts With `2esn` Starts With .0,@usn6:$123456789[$`2esn`][True]})-[`3esn`{#usn7:12e12 Ends With 010 Ends With .0}]->(`4esn` :`7esn`{`7esn`:@usn6 Contains _usn4 Contains $`4esn`})-[`4esn`?:`8esn`|:usn1 *..0x0]->(#usn7 {`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null}));"),
    octest:ct_string("Match `3esn`=(#usn8 :`1esn`{#usn7:1e1[`6esn`..]})<-[:_usn3|:`4esn`{_usn4:$`3esn` =~$`6esn` =~`8esn`,`5esn`:0X7[0e0..]}]-(#usn8 :`5esn`{usn2:.e1 Starts With 0.0 Starts With `6esn`,#usn8:9e12 =~01 =~$`7esn`}),usn2=((#usn8 :`4esn`:#usn8)-[`6esn`? *01234567..12{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]-(@usn5 {usn2:$999[12.0..]})-[`5esn`? *00..{usn1:07[`6esn`..][`5esn`..],`2esn`:#usn7 Contains .0 Contains .e1}]->(`5esn` :usn2:@usn6)) Where $`8esn` =~$usn2 Merge _usn3=(({`5esn`:_usn3 Contains @usn6 Contains 1.e1,`7esn`:$12[01..][1.e1..]})-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})<-[usn1?{#usn7:9e12 Is Not Null Is Not Null,usn2:`3esn` =~0.0 =~$``}]->(`5esn` :`3esn`:`1esn`{`6esn`:$1000[.e0..]})) On Create Set `4esn`(Distinct .0 Starts With `2esn` Starts With `6esn`).`7esn`! =Filter(`4esn` In `6esn`['s_str'..][010..] Where 9e0 =~$`5esn`)[[1e1[0.0],0 Contains 12e12,$123456789[..0x0][..`4esn`]]],`8esn` =[@usn5 In $#usn8 Is Null Is Null Where $`2esn` Starts With .e0 Starts With 12.0|$`7esn` Is Null Is Null][``(Distinct 0X7 In $@usn5 In 9e0,12.0[0Xa][00])][`6esn`(Distinct 12.e12 In $0 In Count(*),$`2esn`[$`2esn`..])] Merge ((`6esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}));"),
    octest:ct_string("Merge `6esn`=(#usn7 {@usn5:`5esn`[.e1][0Xa],@usn6:Count(*)[`7esn`..$12]}) On Match Set Filter(usn1 In 0x0[..`4esn`] Where $#usn7 In .e1 In 01).`8esn`! =`6esn`[..`5esn`] Unwind `1esn`[12.e12][01] As _usn3 Optional Match `1esn`=(((`` :@usn5)-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]->(usn1 {#usn7:Count ( * )[@usn6..0x0]})-[@usn5:`8esn`|:usn1]-(#usn7 :`5esn`))),usn1=(_usn4 :`8esn`{`3esn`:False[.e1..Null],`3esn`:9e0 =~$`5esn`}) Union All Remove [`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 7 In $`3esn` In #usn7].@usn5,Extract(usn1 In 0x0[..`4esn`] Where 1000 Ends With 1000 Ends With $`4esn`|@usn6[$`3esn`])._usn3? Return Distinct *,$@usn6[..$usn1] As _usn3 Order By {``:12e12[$`5esn`][07],_usn3:$`6esn` Is Null Is Null} Ends With [0 Is Not Null Is Not Null] Descending,Extract(@usn6 In @usn5 In $`6esn` Where 123456789 =~_usn4 =~$0) Is Null Desc,.12 Ends With `1esn` Ends With $`1esn` Asc Limit `7esn` Starts With $`` Starts With $#usn7 Unwind $@usn6 Starts With usn2 Starts With usn2 As _usn4;"),
    octest:ct_string("Optional Match ((`5esn` :#usn7)<-[?:usn2|#usn8 *1000..]->(@usn6 :_usn4:usn1{@usn6:Null Is Null Is Null,#usn7:`5esn`[Count ( * )..][\"d_str\"..]})),`2esn`=((:@usn5{#usn7:1e1[@usn5..]})<-[? *0..010]-({@usn6:$123456789 Is Null Is Null,@usn6:`6esn`[1.e1..$#usn7][.e0..True]})<-[ *0xabc]-(_usn4 {`1esn`:010[@usn5..]})) Where False In 123456789 In $0 Merge usn1=(`3esn` :``) On Match Set All(`6esn` In 0X7 =~`` Where 0X7[..12e12])._usn4 =Null Starts With $`7esn` Starts With `2esn`,`5esn`+=999 Contains Count ( * ) Contains 123.654,usn1+=usn1[$`3esn`..$999][True..False] Union With Distinct 12.e12 In $0 In Count(*) As `` Optional Match @usn6=((:usn1{_usn3:0xabc[12.e12..`1esn`],`1esn`:12[usn1][True]})-[?:`4esn`|:`7esn`]->(#usn7 {`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null})),#usn7=(@usn5 {usn2:$999[12.0..]})<-[usn1]->(`8esn` :_usn3{`8esn`:$`3esn` In $12 In 's_str'})-[_usn3?:``|:_usn4]->(`5esn` {usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null}) With Distinct `5esn` In $999 As `6esn` Order By [_usn4 In usn1 Contains False Contains `` Where True[..'s_str'][..01]][[.0 Starts With `2esn` Starts With `6esn`,9e1[0.e0..][#usn8..]]..][[07[$999],9e0 In 01234567,@usn5 In 0X0123456789ABCDEF]..] Asc,False Ends With $`8esn` Asc Where _usn4[$`4esn`..];"),
    octest:ct_string("Unwind {@usn5:$`3esn`} Starts With .12 As @usn5;"),
    octest:ct_string("Create _usn3=((#usn8 :`1esn`{#usn7:1e1[`6esn`..]})<-[`3esn`? *123456789..999]->(_usn4 :_usn4:usn1)),(((`3esn` :`8esn`)-[`5esn`{usn2:`6esn`['s_str'..][010..]}]->(_usn3 :usn2:@usn6)-[:`7esn`|`2esn` *..0X7{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]->(`5esn` {usn2:`5esn`[.e1][0Xa],@usn5:$usn1 In 1000 In $#usn7}))) Merge ((`3esn` {#usn8:$usn2[0e0..],_usn3:$`5esn` Starts With _usn3 Starts With @usn5})<-[`6esn`?{`7esn`:.12 Ends With `1esn` Ends With $`1esn`,``:9e0 Starts With `6esn`}]->(:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})) On Create Set [$`6esn` Is Null Is Null,Count ( * )[@usn6..0x0],0.0[1000..][.e1..]]._usn3! =.0 Starts With `2esn` Starts With `6esn`,({``:\"d_str\",`1esn`:$1000 =~$`7esn`})-[usn1?:_usn3|:`4esn` *123456789..999{`6esn`:01 Ends With .e0,`4esn`:$`7esn` Is Not Null}]->(_usn3 ).`4esn` =usn2 Is Not Null Match (#usn7 :@usn5)-[`4esn`:_usn3|:`4esn`{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:usn1{`8esn`:usn1 Contains $``}),``=({`7esn`:`6esn` Starts With $@usn6,``:`6esn` =~$_usn3})-[? *12..0xabc]-(:`6esn`:`7esn`{`6esn`:_usn4 Ends With 01 Ends With $`1esn`,`4esn`:$`8esn` In \"d_str\" In 9e12})<-[ *0xabc]-(_usn4 {`1esn`:010[@usn5..]}) Union All Unwind $`1esn`[$usn2..][$1000..] As `1esn` Merge `5esn`=(({`4esn`:$_usn3[..Count ( * )][..@usn5],#usn8:_usn3 =~00})-[_usn4?:_usn4|:@usn5 *123456789..999{`2esn`:@usn5 In $`6esn`}]->(#usn8 :`4esn`:#usn8{#usn7:$`8esn` Starts With 1000})<-[:#usn7|:_usn4 *0Xa]-(usn1 :_usn3{_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"})) On Match Set {`6esn`:$`3esn` Contains 0X0123456789ABCDEF Contains 00,`1esn`:1000[123.654..9e12][1000.._usn3]}.`1esn`! =[$`1esn` Is Null Is Null,$12 Contains 123.654 Contains `8esn`] Starts With {`7esn`:Count(*) In 01 In .0,`6esn`:$123456789[..0.12][..#usn7]} Starts With Filter(usn1 In $123456789 Contains usn2 Where 01234567[.12..7][1000..1.e1]) On Match Set [@usn6 In @usn5 In $`6esn` Where False Contains `3esn`].`6esn` =[#usn7 In 01234567[$`3esn`..] Where `7esn` Starts With $`` Starts With $#usn7|07 In 0 In 's_str'][Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where 12.0[..$7][..999])..][[@usn5 In .12[#usn7][$`8esn`] Where $0[7..][Null..]|$@usn5 Contains 01]..],`8esn` =[`6esn` In 0X7 =~`` Where 12.e12['s_str']|00[7..$123456789]][All(usn1 In 0x0[..`4esn`] Where $`5esn` Contains $@usn6)..][Extract(`4esn` In $`8esn` Starts With 1000 Where 1.e1[0X0123456789ABCDEF..][$`5esn`..]|9e1[...e0])..],($999)<-[ *00..{@usn5:$`5esn` Is Null Is Null}]->(@usn5 {`1esn`:0[usn2..]})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(`1esn` :usn2:@usn6).`4esn` =`3esn` =~0.0 =~$`` Remove @usn5:_usn4:usn1,(:_usn4:usn1)-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]-(`1esn` :`1esn`).`1esn`!;"),
    octest:ct_string("Unwind [`8esn` In 's_str' Starts With 1000 Starts With #usn8] =~[01234567 Ends With 12.0 Ends With 0X7,999[$`6esn`],`` Starts With @usn5] =~(:@usn6:`7esn`{`1esn`:010[@usn5..]})<-[`7esn`?:`5esn`|`1esn`]->(#usn8 :_usn4:usn1) As #usn8 Union All Optional Match usn2=((`5esn` :usn2:@usn6{`5esn`:0Xa In .e1 In Count(*)})),_usn4=((#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]}));"),
    octest:ct_string("With Distinct 123.654 Is Not Null Is Not Null As `3esn`,00 As `4esn` Limit $12[..``][..$7] Detach Delete Count ( * )[..1e1] Union Delete Count ( * ) In 010,False[..12.e12] Unwind `7esn`[$999][7] As `5esn` Create (({`8esn`:$@usn5 Contains 01,`2esn`:123.654 Contains #usn8})),(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]})<-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :`4esn`:#usn8);"),
    octest:ct_string("Match `7esn`=(@usn6 {_usn3:1e1[.e1..],`1esn`:$#usn8})<-[#usn8?*{usn2:\"d_str\" Contains `3esn` Contains 00,`3esn`:010 Contains 0X0123456789ABCDEF}]->({`6esn`:$`8esn`[..$``]})-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]-(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa}),@usn6=({_usn3:12.e12 In $0 In Count(*)})<-[:@usn5|`8esn`*..]-(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4}) Where 1e1 In 9e0 In 9e0 Create (({#usn8:12.0[..$7][..999],@usn5:$`1esn` Is Null})<-[``?:`1esn` *0xabc{`5esn`:$``[_usn4..][`7esn`..]}]->(#usn7 :@usn6:`7esn`{_usn3:\"d_str\" =~`3esn` =~0Xa})) Union Delete (:`1esn`{`6esn`:$0[..`8esn`],`1esn`:True Starts With $`8esn` Starts With \"d_str\"})<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[usn1?:`2esn`|usn2 *123456789..999]-(`3esn` :usn2:@usn6) Contains [usn2 In 1000 Contains 0.e0 Where #usn7 Ends With 9e1|010 Is Null Is Null] Contains Filter(@usn6 In @usn5 In $`6esn` Where 12[`7esn`...0][0.12..``]),[usn1 In 00 Starts With _usn3 Where False[.e1..Null]|1000[0.0][Null]][Filter(usn2 In 1000 Contains 0.e0 Where $`7esn` Ends With $`2esn` Ends With $usn1)..][Single(usn2 In 1000 Contains 0.e0 Where 0e0 Is Not Null Is Not Null)..],{_usn4:00}[#usn7(00 In 12.e12)][[.12 Ends With `1esn` Ends With $`1esn`,$`5esn`[False]]] Create #usn8=(:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[:#usn7|:_usn4{_usn3:\"d_str\" =~`3esn` =~0Xa}]-(#usn7 {`3esn`:Count(*)[12.e12..],`3esn`:usn2 =~0x0}) Return Distinct *,[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`|$123456789 Ends With .e1] Contains [@usn6 In @usn5 In $`6esn` Where $_usn4[$`8esn`..][07..]|$1000 In $`7esn` In $7] Contains (`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})-[``?:@usn6{#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}]->(@usn5 :`3esn`:`1esn`{`3esn`:$`5esn` Is Not Null,`2esn`:9e1[0.e0..][#usn8..]}) Skip ({`5esn`:0.12 Contains .e1})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:@usn5{#usn7:1e1[@usn5..]})<-[?:`6esn` *01234567..12{`7esn`:7 In 0xabc}]-(#usn7 :usn2:@usn6{`1esn`:$usn2 Contains 12.e12 Contains 00}) =~None(usn1 In 00 Starts With _usn3 Where False[.e1..Null]) Union Create `6esn`=((_usn4 :@usn6:`7esn`)-[:usn2|#usn8*..]-(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12})) Return Distinct .12[#usn7][$`8esn`],12 Ends With 07 Ends With @usn6 As usn1 Order By $999[..`1esn`] Ascending,Single(`6esn` In 0X7 =~`` Where 0.12[Null..]) Contains (@usn5 :`2esn`:`3esn`{`1esn`:$`8esn`[..$usn1][..'s_str']})<-[usn2:@usn6{`7esn`:123456789[`4esn`..][Count ( * )..],`4esn`:010[$`8esn`..][0..]}]-(_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8}) Contains All(@usn6 In @usn5 In $`6esn` Where $usn2 Is Not Null) Descending,[$`8esn` =~$usn2][Any(`6esn` In 0X7 =~`` Where $0 Is Not Null)..] Asc Remove ({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})-[`5esn`? *010]-({@usn6:0.12 In $`4esn` In `6esn`,``:1e1 Is Null}).`7esn`!;"),
    octest:ct_string("Unwind Count(*)[`7esn`..$12] As `6esn` Detach Delete All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 12.e12 Contains `5esn`) Starts With None(@usn5 In $#usn8 Is Null Is Null) Starts With `3esn` Unwind #usn7 Contains .0 Contains .e1 As usn1 Union All Unwind Count(*)[`7esn`..$12] As `6esn` Detach Delete All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 12.e12 Contains `5esn`) Starts With None(@usn5 In $#usn8 Is Null Is Null) Starts With `3esn` Unwind #usn7 Contains .0 Contains .e1 As usn1;"),
    octest:ct_string("Create `8esn`=((usn2 {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})-[`1esn`{_usn4:`3esn` Contains 0Xa}]-(:usn2:@usn6{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8})),`4esn`=(#usn7 :@usn5)-[`4esn`:_usn3|:`4esn`{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:usn1{`8esn`:usn1 Contains $``}) Union All With Distinct 12e12 Starts With $123456789 Starts With 12.0,$@usn5 In 12e12 In Count(*) As #usn7,[0Xa In .e1 In Count(*)][..{usn1:7 =~9e0 =~'s_str',@usn6:$usn1[..$`6esn`][..Null]}][..Extract(`4esn` In `6esn`['s_str'..][010..] Where #usn8[$#usn8..])] As `6esn` Limit @usn6[..0xabc][..$#usn7] Where $`5esn` Contains Count(*) Contains #usn7 Remove (:_usn4:usn1{``:123456789 Starts With `2esn` Starts With .0,`5esn`:``})-[:`7esn`|`2esn` *..0X7{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]-(`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})<-[usn2?:usn1|`3esn`{`7esn`:0xabc Ends With $#usn7 Ends With #usn8,@usn5:$#usn8}]->(`3esn` :#usn8).usn2 Match (`8esn` {`3esn`:12e12 Is Not Null})-[_usn4?:_usn4|:@usn5 *123456789..999{`2esn`:@usn5 In $`6esn`}]->(`1esn` {`4esn`:$`7esn`[$usn1..][0.0..],`1esn`:$123456789[..0x0][..`4esn`]})-[`1esn`:`1esn`{``:_usn3[...e1],`2esn`:.12[`1esn`..][$`3esn`..]}]-(`7esn` :_usn4:usn1) Where 9e1 Is Null Is Null;"),
    octest:ct_string("Remove Extract(@usn5 In $#usn8 Is Null Is Null Where $#usn8 Is Null).``? Union All Remove [usn2 In 1000 Contains 0.e0 Where 0X7 =~`4esn` =~`8esn`|$`8esn`[$``..$7][$1000..$`7esn`]].`3esn`!,@usn6:#usn8,(@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})-[`2esn`]-({`4esn`:$_usn3[..Count ( * )][..@usn5],#usn8:_usn3 =~00})<-[`6esn`?{`7esn`:.12 Ends With `1esn` Ends With $`1esn`,``:9e0 Starts With `6esn`}]->(:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})._usn3 Remove [@usn5 In 0X7 =~.0 =~\"d_str\" Where $`8esn` Starts With 1000|@usn6 Contains .e1 Contains $`4esn`].`8esn`!;"),
    octest:ct_string("Merge usn1=((`6esn` :`3esn`:`1esn`{_usn3:1e1[.e1..],`1esn`:$#usn8})<-[@usn6? *1000..{#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1}]-(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`})<-[:`1esn` *01234567..12]-(`7esn` )) With Distinct 0Xa Starts With 0.12 Starts With .0 As usn2 Order By [0Xa In .e1 In Count(*)][..{usn1:7 =~9e0 =~'s_str',@usn6:$usn1[..$`6esn`][..Null]}][..Extract(`4esn` In `6esn`['s_str'..][010..] Where #usn8[$#usn8..])] Desc Limit Extract(_usn4 In usn1 Contains False Contains `` Where $`4esn` Starts With 1e1|Count(*)['s_str'..`1esn`]) =~Extract(`4esn` In $`8esn` Starts With 1000|`7esn`[Null..][@usn5..]) =~(:`4esn`:#usn8)<-[?:_usn3|:`4esn` *010{`8esn`:$``[_usn4..][`7esn`..]}]-(`2esn` ) Return .0 Starts With `2esn` Starts With `6esn` As _usn4,_usn4[$`4esn`..] As `7esn`,\"d_str\"[Count ( * )] As `7esn` Limit 0.e0[123.654] Union All Delete {_usn3:0X7 =~`4esn` =~`8esn`,`2esn`:$`3esn` Starts With $usn1} Is Not Null,.e0[7..$`3esn`] With  *,$@usn6 =~$#usn8 =~$#usn7 As `7esn`,#usn7 Ends With `4esn` Ends With @usn5 As `` Order By (`8esn` :usn2:@usn6)<-[#usn7:`3esn`|:`4esn` *00..]->(`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}) =~{@usn6:$_usn3[..Count ( * )][..@usn5],@usn5:12e12[Null]} =~Extract(usn2 In 1000 Contains 0.e0 Where $`7esn` Ends With $`2esn` Ends With $usn1) Ascending,{@usn6:0X0123456789ABCDEF[..usn1]}[..`7esn`($`3esn` =~$`6esn` =~`8esn`)][..(`4esn` {`6esn`:$12[..``][..$7]})<-[#usn7]-(_usn4 {#usn8:@usn5 In $`6esn`,`7esn`:010 =~`6esn`})] Ascending Skip Count ( * )[..usn1][..12.e12] Where `6esn` =~$_usn3 Remove {`8esn`:Count ( * ) =~Count(*)}.`6esn`,({@usn6:0X0123456789ABCDEF[..usn1]})<-[:``|:_usn4 *0Xa]->(`7esn` :`2esn`:`3esn`)._usn4?,(:`4esn`:#usn8)<-[_usn4:`7esn`|`2esn`]-(`5esn` {`8esn`:0.0[12...12]})<-[#usn7:`3esn`|:`4esn` *00..]-(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]}).`4esn` Union Match `1esn`=((`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]})) Remove All(#usn8 In $`5esn` Is Null Is Null Where 01234567 Ends With 12.0 Ends With 0X7).`8esn`! Optional Match `8esn`=(`8esn` {`6esn`:00 In 12.e12})<-[`5esn`:@usn6]-(:``{_usn3:0X0123456789ABCDEF In 01234567})<-[`7esn`?:@usn5|`8esn`{@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]}]->(`6esn` {@usn6:9e0 Contains `8esn`}) Where 123456789 Starts With `2esn` Starts With .0;"),
    octest:ct_string("Delete `7esn`($123456789 In Count(*) In .e1) Ends With Extract(@usn5 In .12[#usn7][$`8esn`] Where $0[7..][Null..]|Count ( * )) Ends With Any(usn1 In 0x0[..`4esn`] Where False[.e1..Null]),usn2 Starts With `6esn` Starts With 12e12 Merge `1esn`=((_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8})-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})) On Create Set Extract(`4esn` In `6esn`['s_str'..][010..] Where 01 Ends With .e0|00[7..$123456789]).usn1? =usn2[`3esn`][_usn3],usn2+=[usn1[..@usn5][...e0]] In Extract(`6esn` In 0X7 =~`` Where $1000 Contains $`3esn`|12 Ends With 01234567) In {`3esn`:$`5esn` In `2esn` In .0,``:0e0 Is Null Is Null} On Create Set usn1+=`4esn` Ends With 123456789 Ends With @usn5,[$123456789[0.0..],07 In `5esn` In 12e12,$`3esn` Starts With 01234567 Starts With $1000].`3esn`! =\"d_str\" =~`3esn` =~0Xa,Any(_usn4 In usn1 Contains False Contains `` Where False In 123456789 In $0)._usn3 =`` =~12 =~$#usn7 Merge usn1=(({``:12 Is Null Is Null})<-[usn2:`8esn`|:usn1*..{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]->({#usn7:False[`2esn`..#usn8]})-[`5esn`:#usn8*]->({_usn3:12.e12 In $0 In Count(*)}));"),
    octest:ct_string("Unwind {`5esn`:0Xa In .e1 In Count(*)}[$`8esn`][[#usn8 In $`5esn` Is Null Is Null Where 0.e0 Ends With 12 Ends With $7]] As `5esn` Merge `2esn`=(:_usn4:usn1) On Match Set `6esn` =9e12 Ends With 0X0123456789ABCDEF Ends With #usn7,`7esn` =9e1[0.e0..][#usn8..],#usn7+=({`7esn`:12e12 Ends With 010 Ends With .0})<-[?:`5esn`|`1esn`{_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12}]-({@usn5:$`6esn`[Count(*)..0.e0][0.0..Count ( * )],`2esn`:True[0x0][@usn6]}) Ends With @usn6(123456789 =~$123456789) Ends With [`1esn` Contains Count ( * ),$@usn6 Contains Count ( * ),False In 123456789 In $0] On Create Set `` =(`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[usn1?:`8esn`|:usn1]->({`6esn`:.e1 Starts With 0.0 Starts With `6esn`,_usn3:$@usn6 Contains 0 Contains $`2esn`})<-[:`2esn`|usn2 *0..010]->(`2esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}) Is Null Is Null,`7esn`+=(`7esn` :_usn4:usn1)<-[:``|:_usn4 *0Xa]->(`7esn` :`2esn`:`3esn`) Starts With ({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})<-[? *0..010]-(`4esn` :`5esn`{_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[:#usn7|:_usn4 *1000..{_usn4:07 In `5esn` In 12e12,@usn6:.0 Is Null Is Null}]->(#usn7 $usn2) Starts With Extract(usn2 In 1000 Contains 0.e0 Where $`6esn`[..0X0123456789ABCDEF]|07[`6esn`..][`5esn`..]),`2esn`:`1esn` Merge (((`8esn` :_usn3{`8esn`:$`3esn` In $12 In 's_str'})-[`6esn`? *0Xa{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`}]-(:`6esn`:`7esn`{`8esn`:$`3esn`[@usn5..$123456789],@usn5:\"d_str\" Starts With $usn1})-[`1esn`?:`1esn` *01234567..12]-({_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}))) On Match Set [usn1 In 00 Starts With _usn3 Where `6esn`[1e1..]].`5esn`! =Count ( * )[Count ( * )..12e12][usn1..1000],@usn5+=usn1 Contains $`` On Match Set `6esn`+=9e0 Is Not Null,``+=`4esn` Ends With 123456789 Ends With @usn5 Union Delete `8esn`[$``] Delete 7[..`1esn`],`6esn` In 1000 In 01234567 Union All Merge `1esn`=((_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8})-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})) On Create Set usn1+=Extract(#usn7 In 01234567[$`3esn`..] Where 0X7 In $999 In $``)[(:usn2:@usn6{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8})-[? *999..]-(:`4esn`:#usn8{@usn6:$`4esn`[$`2esn`..]})..],Any(_usn4 In usn1 Contains False Contains `` Where True[..'s_str'][..01]).#usn8! =#usn7 Starts With 0x0 Starts With Null Create (#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]})<-[:`6esn` *..0X7{`3esn`:`1esn` Contains Count ( * ),`7esn`:01234567 =~usn1}]-(:@usn5{`8esn`:$`3esn`[@usn5..$123456789],@usn5:\"d_str\" Starts With $usn1})-[?:#usn7|:_usn4]->(`` :#usn7$0),((:``{`2esn`:9e0[``][123.654],`1esn`:$_usn3[Null]}));"),
    octest:ct_string("Optional Match `3esn`=((:#usn8{_usn4:\"d_str\"[Count ( * )],`2esn`:9e0 Ends With $`7esn`})) Union Unwind $`1esn`[$usn2..][$1000..] As `3esn` Delete $`2esn` Contains usn1 Contains `2esn`,12e12[Count ( * )..][usn2..],Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`|999[$`6esn`]) =~Single(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn`) Remove [@usn5 In 0X0123456789ABCDEF,False[0Xa..$@usn5][$`6esn`..12e12]].`3esn`!,`7esn`(`3esn`[..7][..12e12],$999 Ends With $`3esn` Ends With `8esn`).usn2? Union All Merge `2esn`=(`7esn` {usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3}) Unwind `2esn` Is Not Null Is Not Null As _usn4;"),
    octest:ct_string("Unwind $@usn6 Starts With usn2 Starts With usn2 As _usn4 Unwind $`4esn`[..usn1] As #usn7 Union All Return Distinct *,\"d_str\"[Count ( * )] As `7esn` Skip Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 01 In _usn3 In 12|0xabc[$@usn5]) Contains Extract(usn2 In 1000 Contains 0.e0 Where 0.12 In 01 In $`3esn`) Limit {`1esn`:`4esn` In $12 In `8esn`} Contains None(@usn5 In .12[#usn7][$`8esn`] Where .e12 =~0.0 =~9e0) Contains [@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]] Remove Filter(#usn7 In 01234567[$`3esn`..] Where 0Xa[0xabc..$#usn8]).#usn8? Create ((`3esn` {`8esn`:$``[_usn4..][`7esn`..]}));"),
    octest:ct_string("Return *,7 Is Null As #usn7 Order By .e0 Contains 01234567 Descending,[$`7esn` Ends With `1esn` Ends With True,$999[12.0..]][`7esn`(Distinct $`2esn`[$`2esn`..])..][Any(usn1 In $123456789 Contains usn2 Where 0.e0 Ends With 12 Ends With $7)..] Desc,'s_str' Starts With 1000 Starts With #usn8 Descending Delete `6esn`[_usn4..][$`6esn`..] Unwind `1esn`[@usn6..$123456789] As `2esn`;"),
    octest:ct_string("Unwind $0[..07] As usn1 Create (:usn1) Remove (_usn3 :_usn4:usn1)-[`3esn`?:`3esn`|:`4esn` *..01{_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`}]->(usn2 :#usn7)<-[@usn5?:`1esn`]-(#usn7 :`2esn`:`3esn`).usn2,Extract(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 123456789[$#usn7..]|.e12 Contains $12 Contains 12.e12).usn1?,{_usn3:'s_str' =~0.e0}.usn2? Union All Optional Match #usn8=((:_usn4:usn1{``:123456789 Starts With `2esn` Starts With .0,`5esn`:``})-[`2esn`? *0..010]->(usn2 :_usn3)-[usn1? *07..{`5esn`:#usn7 Is Not Null Is Not Null}]-(`2esn` :usn1{`8esn`:$``[_usn4..][`7esn`..]})) Return Distinct 12.e12 In $0 In Count(*) As `` Return Distinct $`1esn` Starts With $999 As #usn8,Any(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7)[{#usn8:`5esn` =~0Xa,@usn5:0X7[999][$1000]}..[`` Starts With 12,$`1esn` Starts With $999]][`7esn`(Distinct $usn2[..12.0])..`1esn`(Distinct 1e1[0.0],0.0[1000..][.e1..])] Order By 9e1 Is Not Null Is Not Null Asc,$usn2[$123456789..123.654][$`5esn`..'s_str'] Desc;"),
    octest:ct_string("With  *,0xabc Starts With _usn3 As `3esn`,Null[..12e12][..usn1] As `3esn` Order By 0x0[$`3esn`..010][$#usn7..00] Ascending,010 =~$usn2 =~1e1 Desc,(#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :usn2:@usn6)-[`1esn`:`8esn`|:usn1 *0xabc{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]-(@usn5 :#usn8{`1esn`:0xabc Ends With $7 Ends With $`2esn`,_usn4:``})[.._usn4(@usn6[`5esn`..$`3esn`],`8esn`[$``])] Asc Limit 0x0 Contains $`8esn` Contains `6esn` Where 0xabc Contains Null Contains 9e12 Remove {`1esn`:0xabc[12.e12..`1esn`]}.`1esn`! Merge #usn7=(:#usn7{#usn8:0.12 Contains $`2esn` Contains $_usn4,`2esn`:$`5esn` Starts With _usn3 Starts With @usn5})<-[:@usn5|`8esn`*..]-(`2esn` :usn1{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})-[?:usn1|`3esn` *999..{_usn4:$999[12.0..],usn1:0[usn2..]}]->(:usn2:@usn6{@usn5:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:.12 Ends With $`4esn` Ends With Count(*)});"),
    octest:ct_string("Match `4esn`=((:`7esn`{``:$`1esn` Starts With @usn6})),@usn5=((@usn6 :#usn7{@usn5:Null Is Null Is Null})<-[``?:@usn5|`8esn`]->(:_usn4:usn1{#usn7:$`5esn` Is Null Is Null,usn2:usn1[$`3esn`..$999][True..False]})) Create ((`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`3esn`?:_usn3|:`4esn`]-(`4esn` {`6esn`:$12[..``][..$7]})) Remove All(@usn5 In .12[#usn7][$`8esn`] Where 0Xa Is Null Is Null).@usn5,`8esn`:_usn3,#usn7(Distinct 0.e0[9e0][0e0],999[``..][Null..]).`7esn`! Union All Remove [.12 Contains $`4esn` Contains $`6esn`].@usn6,[07 In `5esn` In 12e12]._usn3? Remove [Null Contains _usn4].`8esn`!,Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where usn2[`3esn`][_usn3]).`7esn`?,{#usn7:False[.e1..Null],`1esn`:9e0 Is Null Is Null}.@usn5! Detach Delete [`4esn` In 's_str'[12..'s_str'] Where 9e12 =~01 =~$`7esn`][#usn7(00 In 12.e12)..Extract(usn1 In 0x0[..`4esn`] Where 1000 Ends With 1000 Ends With $`4esn`|@usn6[$`3esn`])][(@usn5 {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']})<-[`8esn`]->(#usn8 )<-[`3esn` *00..{`8esn`:@usn6 Contains .e1 Contains $`4esn`,_usn4:0X7[..12e12]}]->(@usn5 {`1esn`:0[usn2..]})..(usn1 :_usn4:usn1)<-[@usn5?:`1esn`]-(#usn7 :`2esn`:`3esn`)] Union All Match `8esn`=((({`1esn`:12[..9e0][..999],usn1:0x0 =~$`7esn` =~@usn6})-[#usn8:`3esn`|:`4esn` *0..010]-(`7esn` :usn2:@usn6{@usn5:0xabc[$@usn5]})<-[_usn3]->(_usn4 :`3esn`:`1esn`{`5esn`:\"d_str\"[Count ( * )],_usn3:`6esn`['s_str'..][010..]}))) Where $usn2[0e0..];"),
    octest:ct_string("Remove [12e12 Starts With $123456789 Starts With 12.0].usn1 Delete `8esn`[$``];"),
    octest:ct_string("Match usn1=(`4esn` :#usn7)-[_usn4?:`6esn`]-(`2esn` :`1esn`{``:9e1 Starts With _usn3 Starts With `4esn`})-[_usn4?:@usn6 *..7]->(`` :@usn6:`7esn`{`4esn`:0X0123456789ABCDEF Is Not Null}) Where $`5esn` In `2esn` In .0 With Distinct 07 Contains 1000 As @usn5,$123456789 =~$#usn8 =~$#usn8 Order By None(`4esn` In 's_str'[12..'s_str'] Where $`3esn`[@usn5..$123456789])[(`` {`8esn`:0X7 In $@usn5 In 9e0,_usn3:@usn6[$`3esn`]})-[usn1{#usn7:7 Contains 9e1,`5esn`:$`` Ends With 12e12}]->(:#usn7{`7esn`:\"d_str\",usn2:True[`4esn`][$`6esn`]})..0e0][{`1esn`:$@usn6 Contains 07 Contains 0.e0}..{`3esn`:0.12 In $7 In 0,_usn3:07[$999]}] Asc,12e12[.12..] Descending Where 9e12[usn2..7][.e1..$`7esn`];"),
    octest:ct_string("Detach Delete All(usn1 In 0x0[..`4esn`] Where $0[$#usn8..01234567]) In [_usn4 In usn1 Contains False Contains `` Where False In 123456789 In $0|$`7esn` Is Not Null] In [.12 Ends With `1esn` Ends With $`1esn`,$usn2[False..`7esn`][`7esn`.._usn3],\"d_str\" Contains `3esn` Contains 00],[0.0 =~0X7 =~#usn7,123456789 =~_usn4 =~$0] Ends With `7esn`(Distinct 12.0[..$7][..999],0X7[.e12..01234567]),07 Contains #usn8 Contains $_usn3 Merge usn2=((({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})-[`1esn`:`1esn`{``:_usn3[...e1],`2esn`:.12[`1esn`..][$`3esn`..]}]-(`7esn` :_usn4:usn1)-[``? *..01]->(`6esn` :_usn4:usn1{`6esn`:00 In 12.e12}))) On Match Set `6esn`(Distinct 0Xa[$``..][01234567..],12.0 In 1000 In _usn4).`2esn` =Extract(`6esn` In 0X7 =~`` Where 01234567 Ends With 0x0|$_usn4[`3esn`][0]) Is Null Is Null Remove (:``{`1esn`:`6esn` =~$_usn3})-[_usn4?:_usn4|:@usn5 *123456789..999{`2esn`:@usn5 In $`6esn`}]->(`7esn` :`6esn`:`7esn`)-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->(`2esn` :usn2:@usn6).@usn5?,({usn2:00,#usn8:usn2 Ends With $`5esn` Ends With `2esn`})-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]-(:``)<-[`3esn`?:_usn3|:`4esn`]-(`4esn` {`6esn`:$12[..``][..$7]}).`5esn`?,(:`6esn`:`7esn`{_usn4:12[0X7..@usn6],_usn3:123456789 In $usn2 In `6esn`})<-[usn1]->(`8esn` :_usn3{`8esn`:$`3esn` In $12 In 's_str'}).`1esn` Union All Merge `2esn`=(:usn1{`8esn`:usn1 Contains $``})-[``? *..01]->(`6esn` {`8esn`:.12 =~.12 =~1e1})-[ *010{@usn5:Null Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)}) On Match Set `5esn`(0[0.12..]).`1esn`? =12.e12 In $0 In Count(*),(usn2 :`6esn`:`7esn`{`6esn`:`` Contains 12 Contains True,usn2:$`2esn`[123456789..][00..]})-[`7esn`?{usn1:@usn5 Ends With $`3esn` Ends With 12e12,@usn6:12e12[_usn3..][$@usn5..]}]->(usn2 :`5esn`).#usn8? =[`4esn` In `6esn`[1e1..] Where `3esn` =~0.0 =~$``] =~[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`] Unwind Extract(usn2 In 1000 Contains 0.e0 Where 0X7 =~`4esn` =~`8esn`) Contains [0 Contains 12e12,0xabc Ends With $7 Ends With $`2esn`,0x0 =~_usn4] As `7esn`;"),
    octest:ct_string("Optional Match `6esn`=((#usn7 :#usn8{`2esn`:12 =~usn1 =~.e12})),((@usn5 :_usn4:usn1{`1esn`:07[1e1],`7esn`:12e12[$`5esn`][07]})) Where 's_str' Ends With .e0 Union Delete `4esn` Is Null,$``[False..123.654] Merge ((usn2 {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})-[ *010{@usn5:Null Is Null Is Null}]-({@usn5:False In $`7esn` In .0,usn2:Null[1.e1..]}));"),
    octest:ct_string("Detach Delete usn2(Distinct `7esn` Ends With $usn2 Ends With 999) =~Extract(@usn5 In 0X7 =~.0 =~\"d_str\"|$`5esn` In `2esn` In .0) =~Any(`4esn` In `6esn`['s_str'..][010..] Where 01 Ends With .e0),#usn7 Contains .0 Contains .e1,0.12[Count(*)..];"),
    octest:ct_string("Unwind 0X0123456789ABCDEF Contains $usn1 As ``;"),
    octest:ct_string("Remove {#usn8:123456789[$#usn7..],#usn7:07[12e12]}.usn2,(#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]})<-[`4esn`:``|:_usn4{`5esn`:0e0 =~_usn4}]-(_usn4 {`1esn`:010[@usn5..]})<-[`6esn`?{`7esn`:.12 Ends With `1esn` Ends With $`1esn`,``:9e0 Starts With `6esn`}]-(usn1 :_usn3{@usn6:True[..'s_str'][..01]}).`8esn`! With Distinct 0Xa Starts With 0.12 Starts With .0 As usn2 Order By [0Xa In .e1 In Count(*)][..{usn1:7 =~9e0 =~'s_str',@usn6:$usn1[..$`6esn`][..Null]}][..Extract(`4esn` In `6esn`['s_str'..][010..] Where #usn8[$#usn8..])] Desc Limit Extract(_usn4 In usn1 Contains False Contains `` Where $`4esn` Starts With 1e1|Count(*)['s_str'..`1esn`]) =~Extract(`4esn` In $`8esn` Starts With 1000|`7esn`[Null..][@usn5..]) =~(:`4esn`:#usn8)<-[?:_usn3|:`4esn` *010{`8esn`:$``[_usn4..][`7esn`..]}]-(`2esn` ) Union Return Distinct $`1esn` Starts With $999 As #usn8,Any(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7)[{#usn8:`5esn` =~0Xa,@usn5:0X7[999][$1000]}..[`` Starts With 12,$`1esn` Starts With $999]][`7esn`(Distinct $usn2[..12.0])..`1esn`(Distinct 1e1[0.0],0.0[1000..][.e1..])] Order By 9e1 Is Not Null Is Not Null Asc,$usn2[$123456789..123.654][$`5esn`..'s_str'] Desc Union Return {usn1:7 =~9e0 =~'s_str',@usn6:$usn1[..$`6esn`][..Null]} =~Single(usn2 In 1000 Contains 0.e0) =~Any(@usn6 In @usn5 In $`6esn` Where $`7esn` Is Not Null) As `3esn`,Filter(usn1 In 00 Starts With _usn3 Where $_usn4[`3esn`][0])[..Extract(`6esn` In 0X7 =~`` Where #usn7 Starts With 0 Starts With 12|0x0 =~_usn4)][..{_usn4:.12 =~.12 =~1e1,#usn7:.e1 Starts With 0.0 Starts With `6esn`}] Order By @usn6(123456789 =~$123456789) In Extract(`4esn` In `6esn`[1e1..]) In {``:True[..'s_str'][..01],usn1:0.12 In $7 In 0} Ascending,$`3esn` =~Null Desc Skip Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 00 Ends With .12 Ends With `4esn`) Contains {`7esn`:0e0 Is Null Is Null,usn2:`4esn` =~123456789} Create #usn8=(((`8esn` :@usn5)<-[@usn5:#usn7|:_usn4]->(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})<-[`4esn`:``|:_usn4{`5esn`:0e0 =~_usn4}]-(@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`}))),_usn4=(`1esn` {usn1:True[Count(*)..][1e1..],usn1:9e1 Is Null Is Null})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]->(`6esn` {`8esn`:`8esn` In $@usn5}) With Distinct 's_str'[.12..$#usn7][$999..`2esn`] As `5esn` Limit $_usn3[..Count ( * )][..@usn5] Where @usn5 Ends With $`3esn` Ends With 12e12;"),
    octest:ct_string("Unwind 0X0123456789ABCDEF[..usn1] As _usn3 Optional Match usn2=(((`7esn` :`7esn`)-[{`2esn`:\"d_str\" =~`3esn` =~0Xa,_usn4:usn1 Is Null Is Null}]->(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]})<-[`2esn`?:`7esn`|`2esn`{`8esn`:00}]-(`5esn` {@usn5:07[0..`4esn`],usn2:$usn2 Contains 12.e12 Contains 00})));"),
    octest:ct_string("Optional Match (`8esn` :@usn5)-[#usn7:`7esn`|`2esn` *..01{``:0X7 In 's_str' In $`1esn`,#usn8:010 Contains Count(*)}]->(`6esn` :_usn4:usn1{`6esn`:00 In 12.e12}),(({`5esn`:_usn3 Contains @usn6 Contains 1.e1,`7esn`:$12[01..][1.e1..]})-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})<-[usn1?{#usn7:9e12 Is Not Null Is Not Null,usn2:`3esn` =~0.0 =~$``}]->(`5esn` :`3esn`:`1esn`{`6esn`:$1000[.e0..]})) Where `4esn` In $12 In `8esn` Union All Merge `1esn`=((@usn5 :@usn6:`7esn`{`6esn`:$0[01234567..00][$`2esn`..$@usn6],`3esn`:`6esn` Starts With $@usn6})) Remove Single(_usn4 In usn1 Contains False Contains `` Where 0X7 In 123.654 In $`2esn`).`6esn`?,(:_usn4:usn1{#usn7:$`5esn` Is Null Is Null,usn2:usn1[$`3esn`..$999][True..False]})-[``?:@usn6{#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}]->(@usn5 :`3esn`:`1esn`{`3esn`:$`5esn` Is Not Null,`2esn`:9e1[0.e0..][#usn8..]})<-[usn2:`8esn`|:usn1*..{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]->({#usn7:False[`2esn`..#usn8]})._usn4!,@usn5:`4esn`:#usn8 Merge (({usn2:00,#usn8:usn2 Ends With $`5esn` Ends With `2esn`})<-[_usn3?:`2esn`|usn2{`3esn`:0[0.12..]}]->(:``{`1esn`:`6esn` =~$_usn3})) Union All With  usn2 Is Not Null Is Not Null As `2esn`,False[`6esn`][07],0Xa[0xabc..] As usn2 Order By 9e1[0.e0..][#usn8..] Asc Skip #usn7 Is Not Null Is Not Null;"),
    octest:ct_string("Return [0X0123456789ABCDEF In 01234567,0x0 Contains _usn4 Contains 123456789] As `5esn`,(#usn7 :#usn8)-[`6esn`:`4esn`|:`7esn` *..0x0]->({`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})[Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`])][Filter(`4esn` In `6esn`['s_str'..][010..] Where @usn6[$`7esn`])],#usn8 Is Not Null Is Not Null Limit None(usn1 In 0x0[..`4esn`] Where .12 Starts With .12 Starts With `3esn`) Contains `3esn`($usn2 Contains 12.e12 Contains 00) Union Return *,[#usn8 In $`5esn` Is Null Is Null Where 0.e0 Ends With 12 Ends With $7][..{@usn5:12 =~usn1 =~.e12,`2esn`:0X7 =~`4esn` =~`8esn`}] As #usn7,@usn6 Starts With `7esn` Starts With Null Merge `1esn`=((_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8})-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})) On Create Set Extract(`4esn` In `6esn`['s_str'..][010..] Where 01 Ends With .e0|00[7..$123456789]).usn1? =usn2[`3esn`][_usn3],usn2+=[usn1[..@usn5][...e0]] In Extract(`6esn` In 0X7 =~`` Where $1000 Contains $`3esn`|12 Ends With 01234567) In {`3esn`:$`5esn` In `2esn` In .0,``:0e0 Is Null Is Null} On Create Set usn1+=`4esn` Ends With 123456789 Ends With @usn5,[$123456789[0.0..],07 In `5esn` In 12e12,$`3esn` Starts With 01234567 Starts With $1000].`3esn`! =\"d_str\" =~`3esn` =~0Xa,Any(_usn4 In usn1 Contains False Contains `` Where False In 123456789 In $0)._usn3 =`` =~12 =~$#usn7 With  *,$usn2[..12.0],$`2esn`[``..] As `3esn` Skip _usn3[.0] Where 0.0[999..] Union All Unwind usn2 Is Not Null Is Not Null As `4esn`;"),
    octest:ct_string("Remove True.`5esn`?,Filter(`4esn` In 's_str'[12..'s_str'] Where $`2esn`[..7][..$usn1]).`7esn`,{`5esn`:#usn7 Is Not Null Is Not Null}.#usn8! Merge usn1=((usn2 :`7esn`{@usn5:usn1[$`3esn`..$999][True..False],`8esn`:$`5esn` Is Null Is Null})-[@usn5?:@usn6*..]-(@usn5 {@usn6:0.0[999..],#usn8:Null Is Null Is Null})<-[`6esn`?{`7esn`:@usn6 Contains _usn4 Contains $`4esn`}]-(`1esn` :``)) On Create Set Extract(#usn7 In 01234567[$`3esn`..] Where 0X7 In $999 In $``|9e1[...e0]).`7esn`! =0X7 In 's_str' In $`1esn`,{`3esn`:#usn7 Ends With `4esn` Ends With @usn5}.#usn8 =[usn1[..$_usn4][..``],0X7[.e12..01234567]] In `3esn`(@usn5[..True][..0X7],$`3esn` =~$`7esn` =~False) On Create Set `7esn`+=$7,Extract(#usn7 In 01234567[$`3esn`..] Where `7esn` Starts With $`` Starts With $#usn7).`7esn`? =$999 =~False Optional Match `1esn`=((`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]}));"),
    octest:ct_string("Detach Delete 0.0[.e12][7],usn1($@usn5[0.12..][@usn5..],\"d_str\" Starts With $usn1) Is Null,#usn8[$_usn3..7][``..$`5esn`];"),
    octest:ct_string("Detach Delete 12[`7esn`...0][0.12..``] Optional Match `5esn`=((#usn8 :`1esn`{#usn7:1e1[`6esn`..]})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->({usn1:`2esn`[$`1esn`..][$_usn3..]})),`5esn`=(((`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[ *..7]-(:_usn3{@usn6:$`7esn` Is Null Is Null})-[:`7esn`|`2esn` *12..0xabc]->(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}))) Where `7esn` In 999 In @usn6 Union All Detach Delete Extract(usn1 In 00 Starts With _usn3 Where 00|0 Is Not Null Is Not Null) Starts With (:``{_usn3:Count(*)['s_str'..`1esn`],`1esn`:$`6esn`[$`1esn`][1000]})-[? *00..{_usn3:07[Count ( * )...e1][0X0123456789ABCDEF..$7],`1esn`:$`2esn` =~'s_str'}]->(_usn4 )<-[`2esn`?]-(usn2 :`3esn`:`1esn`) Starts With {_usn3:'s_str' =~0.e0},12 Ends With .e12 Ends With $7 Optional Match `6esn`=(`8esn` )-[ *0..010{#usn7:$@usn6 Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)}) Where 0.e0[@usn6][0x0] Match (((`4esn` )<-[_usn3?:`3esn`|:`4esn` *0..010]->(_usn3 )<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3}))) Where $usn2 In 9e0 In $7;"),
    octest:ct_string("Create _usn3=(($999)),``=(({`8esn`:0X7 In 's_str' In $`1esn`})<-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]->(`1esn` :`1esn`));"),
    octest:ct_string("Remove [`4esn` In $`8esn` Starts With 1000 Where 0X0123456789ABCDEF[.e0..$`4esn`]|#usn8 Ends With `4esn` Ends With $`4esn`]._usn4!,[12 =~usn1 =~.e12,7[12e12..$_usn4][9e1..True],_usn3 Ends With 12e12 Ends With .e0].`6esn`?,[@usn6 In @usn5 In $`6esn` Where 00[``..][$`4esn`..]|`2esn` Contains $999].#usn7 With  [#usn8 In $`5esn` Is Null Is Null Where 0.0[..12e12][..$0]][{`2esn`:.e1 In $@usn6 In 999,usn2:@usn5 Ends With $`3esn` Ends With 12e12}..] As @usn5,usn2[`3esn`][_usn3] Order By None(usn2 In 1000 Contains 0.e0 Where $`6esn`[Count(*)..0.e0][0.0..Count ( * )])[(:usn2:@usn6{@usn6:$`4esn`[$`2esn`..]})<-[#usn8? *12..0xabc]-(:`6esn`:`7esn`{`3esn`:`8esn`[$``]})][Any(@usn6 In @usn5 In $`6esn` Where 12.0[0Xa][00])] Descending Merge ((@usn6 :#usn7{@usn5:Null Is Null Is Null})) On Create Set `8esn` =Filter(@usn5 In $#usn8 Is Null Is Null Where 9e1 Contains $`3esn` Contains 01234567) =~['s_str'[..0.e0][..`1esn`],`5esn`[.e1][0Xa],123456789 In $usn2 In `6esn`],`8esn`+=Filter(`6esn` In 0X7 =~`` Where $usn2[0e0..])[usn2($#usn8 Is Null Is Null)..Extract(usn1 In 0x0[..`4esn`] Where 123456789 In $usn2 In `6esn`|@usn5[..True][..0X7])][(`` :@usn5{#usn7:0X7[12]})-[@usn6? *07..{_usn4:Count(*)[..`3esn`],`5esn`:01234567[$`3esn`..]}]-(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null})<-[`5esn`:`8esn`|:usn1{usn1:12e12[Count ( * )..][usn2..],usn2:$123456789 Is Null Is Null}]-(`8esn` )..[@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null]] Union Return Distinct *,9e1 Starts With 9e1 Starts With 010 Delete Null[1.e1..],999[$`6esn`],None(usn1 In $123456789 Contains usn2 Where Count ( * )[..1e1])[`8esn`(00[``..][$`4esn`..],123.654[@usn5])] Union All Match `1esn`=(:`8esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}),((#usn8 :@usn6:`7esn`{@usn5:1e1[@usn5..]})) Remove (@usn6 {_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12})<-[`8esn`?:`5esn`|`1esn`]-(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}).`6esn`,Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where 07[12e12]).usn2!,(_usn3 :_usn4:usn1{`2esn`:$`6esn`[$@usn6..]})<-[#usn7 *123456789..999]-(:@usn6:`7esn`{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})-[?:usn1|`3esn`]->(:`8esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}).`1esn`!;"),
    octest:ct_string("Detach Delete $`3esn`[@usn5..$123456789] Unwind Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 01 In _usn3 In 12|0xabc[$@usn5]) In None(`6esn` In 0X7 =~`` Where 12.e12['s_str']) As `5esn` Remove _usn3(1.e1[0X0123456789ABCDEF..][$`5esn`..]).#usn8? Union All Optional Match `5esn`=(`8esn` :_usn3{`8esn`:$`3esn` In $12 In 's_str'}),`7esn`=(({#usn7:False[`2esn`..#usn8]})-[`4esn`:`4esn`|:`7esn`{`3esn`:Count(*)[`7esn`..$12],_usn3:$999[$1000]}]-(`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})) With Distinct 0xabc[$@usn5] As usn2,(:`1esn`{@usn5:123456789 Starts With `2esn` Starts With 9e12})-[#usn7? *999..]-(@usn5 :_usn4:usn1{`1esn`:07[1e1],`7esn`:12e12[$`5esn`][07]})-[`6esn`:``|:_usn4 *..01]->(`7esn` :`6esn`:`7esn`{_usn4:07 In `5esn` In 12e12})[Extract(#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0|`7esn` Starts With $usn2 Starts With .e0)..Extract(#usn7 In 01234567[$`3esn`..] Where $`3esn` In $12 In 's_str')] Order By $12[01..][1.e1..] Ascending,0x0 =~_usn4 Desc Match `1esn`=(((`` :@usn5)-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]->(usn1 {#usn7:Count ( * )[@usn6..0x0]})-[@usn5:`8esn`|:usn1]-(#usn7 :`5esn`))),usn1=(_usn4 :`8esn`{`3esn`:False[.e1..Null],`3esn`:9e0 =~$`5esn`});"),
    octest:ct_string("With Distinct [@usn6 In @usn5 In $`6esn` Where $`1esn` Is Null Is Null] Contains Filter(`4esn` In 's_str'[12..'s_str'] Where 123.654 Starts With usn1 Starts With @usn5) Contains [`4esn` In $`8esn` Starts With 1000 Where False In `3esn`] Order By [#usn8 Ends With `4esn` Ends With $`4esn`,$`2esn` =~'s_str',$#usn7[...e12][..$7]][#usn7(0x0 =~_usn4,`5esn` =~0Xa)][{#usn8:$999 Ends With $`3esn` Ends With `8esn`}] Descending,9e12 Asc Skip 0X7[.e12..01234567] Limit $_usn4[0.12..$`6esn`][00..$@usn6] With  `2esn` In 7 In usn2,$0 =~$usn1 =~9e1 As `5esn`,@usn5[_usn4..][.e0..] As usn1 Skip Any(`6esn` In 0X7 =~`` Where $`5esn` In `2esn` In $12)[Extract(`4esn` In 's_str'[12..'s_str'] Where .12[9e0][$7]|$`3esn` Starts With $usn1)..[@usn5 In .12[#usn7][$`8esn`] Where $12 Contains 123.654 Contains `8esn`|@usn5 Ends With 1.e1 Ends With 0X0123456789ABCDEF]][{`6esn`:$12[..``][..$7]}..[usn1 In 1000 In $`5esn`]] Union All Merge `8esn`=((#usn8 {`2esn`:$`5esn` Contains Count(*) Contains #usn7,_usn4:Null Starts With $`7esn` Starts With `2esn`})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(:`6esn`:`7esn`{`3esn`:`8esn`[$``]})<-[ *00..{`3esn`:12 Ends With 01234567,`4esn`:00[``..][$`4esn`..]}]->(`2esn` :``));"),
    octest:ct_string("Unwind 0.12 Contains $`2esn` Contains $_usn4 As @usn6 Merge `2esn`=(:usn1{`8esn`:usn1 Contains $``})-[``? *..01]->(`6esn` {`8esn`:.12 =~.12 =~1e1})-[ *010{@usn5:Null Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)}) On Match Set `5esn`(0[0.12..]).`1esn`? =12.e12 In $0 In Count(*),(usn2 :`6esn`:`7esn`{`6esn`:`` Contains 12 Contains True,usn2:$`2esn`[123456789..][00..]})-[`7esn`?{usn1:@usn5 Ends With $`3esn` Ends With 12e12,@usn6:12e12[_usn3..][$@usn5..]}]->(usn2 :`5esn`).#usn8? =[`4esn` In `6esn`[1e1..] Where `3esn` =~0.0 =~$``] =~[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`3esn`] Union All Optional Match ((:`7esn`{`2esn`:`` Starts With @usn5,usn2:$`2esn` Starts With .e0 Starts With 12.0})-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(:`3esn`:`1esn`{_usn4:`1esn`[@usn6..$123456789],`4esn`:$usn2[..12.0]})),(`8esn` )-[ *0..010{#usn7:$@usn6 Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)}) Union Return Distinct 999[``..][Null..] As `1esn` Skip usn2(Distinct _usn3 Contains @usn6 Contains 1.e1)[Extract(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where _usn3 Is Null)..[12e12[0.e0][9e1]]][Single(`4esn` In $`8esn` Starts With 1000 Where $`8esn`[..$``])..Extract(`4esn` In 's_str'[12..'s_str'] Where `` Contains 12 Contains True|$`1esn` Is Null)] Limit Filter(usn2 In 1000 Contains 0.e0 Where $`7esn` Ends With $`2esn` Ends With $usn1)[..(:usn2:@usn6{``:$123456789[..0x0][..`4esn`],usn1:.e0 Contains #usn7 Contains $#usn8})-[? *999..]-(:`4esn`:#usn8{@usn6:$`4esn`[$`2esn`..]})][..Any(@usn5 In .12[#usn7][$`8esn`] Where 0Xa Is Null Is Null)];"),
    octest:ct_string("Remove @usn5:_usn4:usn1,(:_usn4:usn1)-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]-(`1esn` :`1esn`).`1esn`!;"),
    octest:ct_string("Create @usn6=(:#usn8)<-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]->({_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`})-[_usn3?:@usn5|`8esn`{`3esn`:`4esn`[7..][1000..],usn2:123456789 Starts With `2esn` Starts With 9e12}]-(`7esn` {`8esn`:0X0123456789ABCDEF In $1000 In $`3esn`}) Detach Delete $999[12.0..] Return Distinct *,$@usn6[..$usn1] As @usn6 Order By `3esn` =~0.0 =~$`` Ascending Skip (:`1esn`{`6esn`:$0[..`8esn`],`1esn`:True Starts With $`8esn` Starts With \"d_str\"})<-[ *..01{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]}]-(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[usn1?:`2esn`|usn2 *123456789..999]-(`3esn` :usn2:@usn6) Contains [usn2 In 1000 Contains 0.e0 Where #usn7 Ends With 9e1|010 Is Null Is Null] Contains Filter(@usn6 In @usn5 In $`6esn` Where 12[`7esn`...0][0.12..``]) Limit 0.e0[@usn6][0x0];"),
    octest:ct_string("Create ((:`4esn`:#usn8{`7esn`:#usn7 Starts With 0 Starts With 12})-[{`5esn`:.e1[..$``][..0X0123456789ABCDEF]}]->(_usn3 {`5esn`:0.12 Contains .e1})<-[@usn6:`3esn`|:`4esn`*]->(`6esn` :`5esn`)),@usn6=((`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})) Match #usn8=({_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"})-[`4esn`:`4esn`|:`7esn`{`3esn`:Count(*)[`7esn`..$12],_usn3:$999[$1000]}]-(`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]}),(((`3esn` :`8esn`)-[`5esn`{usn2:`6esn`['s_str'..][010..]}]->(_usn3 :usn2:@usn6)-[:`7esn`|`2esn` *..0X7{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]->(`5esn` {usn2:`5esn`[.e1][0Xa],@usn5:$usn1 In 1000 In $#usn7}))) Where 9e0 Starts With `6esn` Union All Unwind `7esn`[$999][7] As `5esn` Merge `6esn`=(($12)<-[:_usn3|:`4esn`{_usn4:$`3esn` =~$`6esn` =~`8esn`,`5esn`:0X7[0e0..]}]->(`7esn` :`2esn`:`3esn`{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1})-[?:`8esn`|:usn1{`6esn`:1e1[`6esn`..],`2esn`:7 =~9e0 =~'s_str'}]->({`3esn`:1e1 Is Null})) Union Remove {@usn5:7[..12e12][..$`6esn`]}.usn1,[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 12.e12[@usn5..123.654]|9e0 Starts With `6esn`].#usn8?,9e12.usn1 Create ``=(:`8esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]}),(`8esn` :`7esn`{`8esn`:False In 123456789 In $0})<-[usn2?:usn1|`3esn`{`7esn`:0xabc Ends With $#usn7 Ends With #usn8,@usn5:$#usn8}]->(`3esn` :#usn8)<-[?:`1esn`{`1esn`:123456789[1000]}]->(:usn1{_usn3:'s_str'[..0.0][..$`4esn`],`4esn`:$123456789 Is Not Null Is Not Null});"),
    octest:ct_string("With  `3esn`(Distinct 123456789 =~$123456789)[..(usn1 :`6esn`:`7esn`)-[`2esn`? *0..010]->(:usn1{`6esn`:7 Contains 9e1,#usn8:`7esn`[...e1][..\"d_str\"]})][..(:`4esn`:#usn8)<-[_usn4:`7esn`|`2esn`]-(`5esn` {`8esn`:0.0[12...12]})<-[#usn7:`3esn`|:`4esn` *00..]-(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]})] As `8esn` Order By [@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7|`6esn`[1.e1..$#usn7][.e0..True]][..Extract(#usn8 In $`5esn` Is Null Is Null Where #usn8[$#usn8..]|$@usn6[..$usn1])][..(:`4esn`:#usn8{#usn8:07})-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]-(@usn5 :`3esn`:`1esn`{`3esn`:$`5esn` Is Not Null,`2esn`:9e1[0.e0..][#usn8..]})-[``:`2esn`|usn2{_usn4:0X0123456789ABCDEF Ends With 0X0123456789ABCDEF Ends With 's_str',`3esn`:'s_str' In \"d_str\" In 123456789}]-(:``{`2esn`:9e0[``][123.654],`1esn`:$_usn3[Null]})] Descending,$123456789 Contains 01 Contains 0.12 Ascending Limit 999 In 9e1 In 7 Remove [@usn5 In .12[#usn7][$`8esn`] Where $_usn4[12e12][`4esn`]]._usn4?,Extract(@usn6 In @usn5 In $`6esn` Where 123456789 =~_usn4 =~$0)._usn3!,[#usn8 In $`5esn` Is Null Is Null Where $123456789 Ends With $`6esn`|$`8esn` =~$usn2].``! Union Remove Single(`4esn` In `6esn`[1e1..] Where `3esn` =~0.0 =~$``).`4esn`?,`1esn`:`4esn`:#usn8 Delete ({_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[? *..0x0]->(:usn2:@usn6{`6esn`:12[12e12..@usn6],#usn8:`6esn` =~$_usn3}),$123456789[$``][010];"),
    octest:ct_string("Detach Delete 0X0123456789ABCDEF Contains 12.e12 Contains 999,0X0123456789ABCDEF In $1000 In $`3esn`,'s_str' Is Not Null Is Not Null Return Distinct *,$usn1[#usn8..][``..] As `2esn`,[123456789 =~$123456789,0.12 In $7 In 0] Is Null Is Null As @usn5 Order By $1000 Is Null Is Null Descending,1000 In 0X0123456789ABCDEF In 01 Asc Union All Unwind 1.e1 Is Not Null Is Not Null As @usn6 With Distinct 0x0[0X7..][usn1..] As _usn4 Order By `6esn` Starts With $usn2 Starts With 0.0 Ascending,0X7 In $@usn5 In 9e0 Descending Union All Unwind $`5esn`[False] As `6esn` Return *,$0[7..][Null..] As `7esn`,`3esn`()[Filter(usn2 In 1000 Contains 0.e0 Where 0.12 In 01 In $`3esn`)..{@usn6:`6esn`[_usn4..][$`6esn`..]}] Order By (#usn8 {@usn6:$`7esn` Ends With 07 Ends With 07,usn2:`6esn` =~$_usn3})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :usn2:@usn6)-[`1esn`:`8esn`|:usn1 *0xabc{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]-(@usn5 :#usn8{`1esn`:0xabc Ends With $7 Ends With $`2esn`,_usn4:``})[.._usn4(@usn6[`5esn`..$`3esn`],`8esn`[$``])] Asc,.e1[..$``][..0X0123456789ABCDEF] Ascending Skip 01[..$``][..$`7esn`] Merge `3esn`=(({`5esn`:0.12 Contains .e1})-[usn1?:`2esn`|usn2 *123456789..999]-(usn1 :`7esn`{`1esn`:$@usn6 Contains 07 Contains 0.e0})-[:@usn5|`8esn` *123456789..999{usn1:9e12 Is Not Null Is Not Null}]-(#usn7 :`5esn`)) On Match Set @usn5+=`` In `6esn`,Filter(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where $`` Is Null Is Null).`` =12.e12 Is Not Null On Match Set `` =None(`4esn` In 's_str'[12..'s_str'])[Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`)..][Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where $@usn6 Contains Count ( * ))..],#usn7($`8esn`[$``..$7][$1000..$`7esn`],`2esn` In 7 In usn2).`6esn`? =$_usn4['s_str'..],`4esn`+=$`7esn` Ends With $usn2;"),
    octest:ct_string("Create (((_usn4 :`2esn`:`3esn`{#usn8:123456789[$#usn7..],#usn7:07[12e12]})-[:#usn7|:_usn4 *123456789..999]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})-[:``|:_usn4 *01234567..12{`2esn`:$`` Is Null Is Null,``:$`4esn`[usn1..$#usn8][12.0..`3esn`]}]-({usn1:0x0[0X7..][usn1..]}))),(`6esn` :`4esn`:#usn8{`3esn`:$`6esn` Is Null Is Null,_usn4:@usn5 In $`6esn`})-[_usn4{@usn6:`1esn`[...e1],`5esn`:`5esn`[`1esn`]}]->(`7esn` :`8esn`{`4esn`:00 Ends With .12 Ends With `4esn`})-[ *07..]->(usn2 :@usn6:`7esn`) Remove [_usn3 Ends With 0x0 Ends With 01234567,9e0[$_usn3..0X7][7..$#usn8]].`6esn` Create @usn6=((`2esn` :`8esn`{`2esn`:$`8esn` In \"d_str\" In 9e12})-[`5esn`:`8esn`|:usn1{usn1:12e12[Count ( * )..][usn2..],usn2:$123456789 Is Null Is Null}]->(@usn5 :#usn8{@usn5:$@usn5 Contains 01,`2esn`:@usn6[`3esn`..][$7..]})) Union All Unwind All(usn1 In 0x0[..`4esn`] Where .12 Starts With .12 Starts With `3esn`)[[_usn4 In usn1 Contains False Contains `` Where $usn1[0.12..]['s_str'..]|12[..True][..$`4esn`]]..][({`5esn`:0.12 Contains .e1})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:@usn5{#usn7:1e1[@usn5..]})<-[?:`6esn` *01234567..12{`7esn`:7 In 0xabc}]-(#usn7 :usn2:@usn6{`1esn`:$usn2 Contains 12.e12 Contains 00})..] As _usn3 Union All Remove Extract(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 12e12[.12..]|7[..`1esn`]).``,Extract(#usn8 In $`5esn` Is Null Is Null Where `3esn`[..7][..12e12]).@usn6,(:`2esn`:`3esn`{usn2:9e12[@usn6..$``][#usn8..Count ( * )],`3esn`:$1000 In $`7esn` In $7})<-[?:`1esn`]-(_usn4 :@usn6:`7esn`{@usn5:$_usn3[$`4esn`..Null]})._usn3!;"),
    octest:ct_string("With Distinct *,Single(#usn7 In 01234567[$`3esn`..]) Is Null Limit 123456789 Starts With `2esn` Starts With .0 Where $#usn7 In 12.0 In 0X0123456789ABCDEF Union All Unwind 12e12 Starts With $123456789 Starts With 12.0 As usn1 Optional Match `3esn`=(({``:$1000 Is Null Is Null})) Where `1esn`[...e1];"),
    octest:ct_string("Merge (`7esn` {usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3})<-[{@usn5:$123456789 Ends With .e1,#usn8:0x0 =~_usn4}]-(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})-[#usn8?]->(:`4esn`:#usn8{_usn4:'s_str' In \"d_str\" In 123456789,`2esn`:0.12 Ends With $usn1 Ends With $@usn5}) Merge `1esn`=((({`6esn`:$`8esn`[..$``]})-[`2esn`]-(@usn6 {#usn7:'s_str' In \"d_str\" In 123456789,usn2:07[12][$`6esn`]})-[`2esn` *0X0123456789ABCDEF..{usn1:01 Ends With .e0,#usn8:0 Ends With $7 Ends With _usn3}]->(usn1 :`4esn`:#usn8{usn2:$`8esn` In \"d_str\" In 9e12}))) On Match Set #usn7 =(@usn6 {_usn4:$999[$1000],`3esn`:1e1 In $#usn8 In 12e12})-[*{`2esn`:$1000[01234567]}]-(_usn4 :`4esn`:#usn8{#usn7:1e1[@usn5..]})<-[:`2esn`|usn2 *0..010]->(`` :`1esn`) Is Not Null Is Not Null,`1esn` =`` =~12 =~$#usn7,[123456789[$#usn7..],_usn4[0xabc..],$`3esn` Starts With 01234567 Starts With $1000].`1esn`! =0X0123456789ABCDEF Starts With `2esn` Starts With $999 Match `8esn`=((`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})<-[`3esn`?:_usn3|:`4esn`]-(`4esn` {`6esn`:$12[..``][..$7]})) Union Unwind {@usn6:0X0123456789ABCDEF[..usn1]}[..`7esn`($`3esn` =~$`6esn` =~`8esn`)][..(`4esn` {`6esn`:$12[..``][..$7]})<-[#usn7]-(_usn4 {#usn8:@usn5 In $`6esn`,`7esn`:010 =~`6esn`})] As `` Unwind $`6esn` =~1e1 As @usn6 Unwind All(usn1 In 0x0[..`4esn`] Where 07 In $7 In 12) =~Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 999[$`6esn`]|$`8esn` In \"d_str\" In 9e12) As #usn7 Union All Create _usn4=((:`8esn`{`7esn`:$`3esn`[@usn5..$123456789],`2esn`:False In $`7esn` In .0})-[`6esn`:``|:_usn4 *..01]->(`5esn` {_usn4:0X7 =~``})-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(usn2 :usn1{``:9e12 Ends With 0X0123456789ABCDEF Ends With #usn7})),(((#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]})-[?*..{`3esn`:Count(*)[12.e12..],`3esn`:usn2 =~0x0}]-(`` :`3esn`:`1esn`{_usn3:'s_str'[..0.0][..$`4esn`],`4esn`:$123456789 Is Not Null Is Not Null})<-[:`6esn` *..0X7{`3esn`:`1esn` Contains Count ( * ),`7esn`:01234567 =~usn1}]-({usn1:010[@usn5..],`7esn`:`2esn` Is Not Null Is Not Null}))) Match (`5esn` {_usn4:0X7 =~``}),((#usn8 {_usn3:`6esn` =~01234567 =~0Xa,_usn4:$`5esn` Is Null Is Null}));"),
    octest:ct_string("Remove None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 01 In _usn3 In 12).#usn8 Union All Optional Match `5esn`=({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(`4esn` :`6esn`:`7esn`{`8esn`:0X7[..12e12]})-[?:@usn6{`8esn`:12 Ends With .e12 Ends With $7,`8esn`:0.0[12...12]}]-(`3esn` :``),`4esn`=(:`6esn`:`7esn`{usn2:_usn3 Contains @usn6 Contains 1.e1,usn2:$`6esn`[`1esn`..][.e0..]})-[:`1esn` *010{`2esn`:$_usn3[9e1][$_usn4],`7esn`:`7esn`[...e1][..\"d_str\"]}]->(`7esn` :#usn8) Where 07[12][$`6esn`] Unwind ({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})<-[#usn8?:_usn4|:@usn5 *..0x0]-(#usn8 :`1esn`{#usn7:1e1[`6esn`..]}) =~`5esn`(Distinct 0X7 In $@usn5 In 9e0,0x0) As `3esn`;"),
    octest:ct_string("Return usn2 =~0x0 As `8esn`,All(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $123456789 Ends With $`6esn`) Is Null As `5esn`,_usn3[`3esn`][False] Skip {@usn5:$@usn6[..$usn1],`1esn`:usn2[`3esn`][_usn3]}[..Any(`4esn` In 's_str'[12..'s_str'] Where Null Contains _usn4)][..{`7esn`:True[..'s_str'][..01]}] Limit [$12 Is Null Is Null,999 Contains Count ( * ) Contains 123.654][Extract(usn2 In 1000 Contains 0.e0 Where 9e12 =~01 =~$`7esn`)..Any(`4esn` In $`8esn` Starts With 1000 Where 01 Ends With .e0)][[Null Contains _usn4,$`7esn` Is Null Is Null]..({_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[? *..0x0]->(:usn2:@usn6{`6esn`:12[12e12..@usn6],#usn8:`6esn` =~$_usn3})] Union All With Distinct *,0.12 In $`4esn` In `6esn`,`4esn`(_usn4[$`4esn`..],0x0[...e12][..@usn5])[..{`3esn`:`8esn`[1000..$7][$`7esn`..`2esn`],_usn4:\"d_str\" Is Null Is Null}] As `2esn` Skip 0X7[..12e12] With Distinct *,{`4esn`:$@usn6 Contains 0 Contains $`2esn`}[[@usn5 In 0X7 =~.0 =~\"d_str\"|$`1esn` Ends With _usn4 Ends With `3esn`]..Extract(@usn5 In .12[#usn7][$`8esn`] Where $usn2 Contains 12.e12 Contains 00|9e0 Ends With $`7esn`)] Order By 9e1 Starts With _usn3 Starts With `4esn` Descending,usn2(Distinct _usn3 Contains @usn6 Contains 1.e1)[Extract(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where _usn3 Is Null)..[12e12[0.e0][9e1]]][Single(`4esn` In $`8esn` Starts With 1000 Where $`8esn`[..$``])..Extract(`4esn` In 's_str'[12..'s_str'] Where `` Contains 12 Contains True|$`1esn` Is Null)] Descending Limit 0 Starts With 12e12 Starts With `4esn` Unwind 12.e12 In $1000 As `6esn`;"),
    octest:ct_string("Remove usn2:_usn4:usn1,None(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0.e0[9e1..][0.0..]).#usn7 Remove Extract(usn1 In 0x0[..`4esn`] Where $`2esn` Contains usn1 Contains `2esn`).`6esn`?,Extract(@usn6 In @usn5 In $`6esn` Where $`1esn` Is Null Is Null|@usn5 Starts With 12e12 Starts With @usn5).`2esn`?,[Count ( * )[Count ( * )..12e12][usn1..1000],12e12[$`5esn`][07],$_usn3[9e1][$_usn4]]._usn4 Union Return Distinct *,`7esn`[Null..][@usn5..],0X0123456789ABCDEF Contains $usn1 Skip Count(*)[[@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null]..] Limit False Ends With $`8esn` Merge (:`3esn`:`1esn`{@usn5:$#usn8 In .e12 In 9e1,`7esn`:9e1 Starts With `1esn` Starts With 0Xa})-[:usn1|`3esn`]-(_usn3 :_usn4:usn1{`2esn`:$`6esn`[$@usn6..]}) Return *,{#usn7:0[0.12..]} Ends With Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`]) Ends With {@usn5:\"d_str\" Is Null Is Null,@usn5:$_usn4[`3esn`][0]} As `8esn`,@usn5 Ends With 1.e1 Ends With 0X0123456789ABCDEF As `8esn` Skip {_usn3:0.12 Is Null Is Null,`1esn`:9e12[0.0..12.e12]} Ends With {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]};"),
    octest:ct_string("Create ``=((`6esn` :`4esn`:#usn8{_usn4:12.e12[...0][..0x0]})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(usn1 :_usn3));"),
    octest:ct_string("Detach Delete All(_usn4 In usn1 Contains False Contains `` Where #usn8[$#usn8..])[(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})..],`1esn` Contains Count ( * ) Optional Match `3esn`=(usn1 {#usn7:.e12[..0.e0][..$`1esn`],usn1:010 Contains Count(*)})-[usn2{`6esn`:$@usn6[_usn3..0.e0]}]->({usn1:`4esn` In $12 In `8esn`})<-[:`1esn`{_usn4:123456789 Starts With 12.0 Starts With .e12,`8esn`:1e1[`6esn`..]}]-(`6esn` {`8esn`:`8esn` In $@usn5}) Where 0x0[...e12][..@usn5] Union Unwind 123456789 Starts With `2esn` Starts With .0 As `3esn` Union All Create @usn6=(:#usn8)<-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]->({_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`})-[_usn3?:@usn5|`8esn`{`3esn`:`4esn`[7..][1000..],usn2:123456789 Starts With `2esn` Starts With 9e12}]-(`7esn` {`8esn`:0X0123456789ABCDEF In $1000 In $`3esn`}),`2esn`=(:`3esn`:`1esn`{usn1:`4esn` In $12 In `8esn`})-[?:usn1|`3esn` *999..{_usn4:$999[12.0..],usn1:0[usn2..]}]->(:usn2:@usn6{@usn5:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:.12 Ends With $`4esn` Ends With Count(*)}) Optional Match #usn8=({_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"})-[`4esn`:`4esn`|:`7esn`{`3esn`:Count(*)[`7esn`..$12],_usn3:$999[$1000]}]-(`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]}),(((`3esn` :`8esn`)-[`5esn`{usn2:`6esn`['s_str'..][010..]}]->(_usn3 :usn2:@usn6)-[:`7esn`|`2esn` *..0X7{`1esn`:$`8esn`[..$``],`6esn`:$`7esn`[$usn1..][0.0..]}]->(`5esn` {usn2:`5esn`[.e1][0Xa],@usn5:$usn1 In 1000 In $#usn7}))) Where 7[..12e12][..$`6esn`] Create ((_usn4 :`2esn`:`3esn`{#usn8:123456789[$#usn7..],#usn7:07[12e12]}));"),
    octest:ct_string("Delete False[`2esn`..#usn8],#usn8 Contains .e0 Contains $`8esn`,Null Starts With _usn4 Starts With `6esn` Remove Single(_usn4 In usn1 Contains False Contains `` Where False In 123456789 In $0).#usn8?,[`2esn` Is Not Null Is Not Null].`7esn`;"),
    octest:ct_string("Match ``=(((:_usn3{`6esn`:.e12[..0.e0][..$`1esn`],`8esn`:7 In 0xabc})<-[`4esn`:``|:_usn4{`5esn`:0e0 =~_usn4}]-(:`7esn`{@usn6:0.0[999..],#usn8:Null Is Null Is Null})-[#usn7:_usn3|:`4esn` *..0x0{usn2:$#usn7 In 12.0 In 0X0123456789ABCDEF,`6esn`:`7esn`[1e1..07][0x0..Count ( * )]}]->(`6esn` {`2esn`:$`2esn`[..`2esn`],usn1:False[0Xa..$@usn5][$`6esn`..12e12]}))) Union All Merge _usn4=(:`6esn`:`7esn`{usn2:.e0[..0X0123456789ABCDEF][...e12]}) On Match Set All(`6esn` In 0X7 =~`` Where `7esn`[...e1][..\"d_str\"]).`5esn` =None(usn2 In 1000 Contains 0.e0 Where $usn1[..$`6esn`][..Null]) Starts With Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $usn1[..$`6esn`][..Null]|$`1esn` Starts With $999) On Match Set ``:`2esn`:`3esn`,@usn6 =None(usn1 In $123456789 Contains usn2 Where Count ( * )[..1e1])[`8esn`(00[``..][$`4esn`..],123.654[@usn5])],usn2 =$`3esn`[`2esn`...e0] Return usn2 =~0x0 As `8esn`,All(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $123456789 Ends With $`6esn`) Is Null As `5esn`,_usn3[`3esn`][False] Skip {@usn5:$@usn6[..$usn1],`1esn`:usn2[`3esn`][_usn3]}[..Any(`4esn` In 's_str'[12..'s_str'] Where Null Contains _usn4)][..{`7esn`:True[..'s_str'][..01]}] Limit [$12 Is Null Is Null,999 Contains Count ( * ) Contains 123.654][Extract(usn2 In 1000 Contains 0.e0 Where 9e12 =~01 =~$`7esn`)..Any(`4esn` In $`8esn` Starts With 1000 Where 01 Ends With .e0)][[Null Contains _usn4,$`7esn` Is Null Is Null]..({_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[? *..0x0]->(:usn2:@usn6{`6esn`:12[12e12..@usn6],#usn8:`6esn` =~$_usn3})] Create ((:`6esn`:`7esn`{_usn4:12[0X7..@usn6],_usn3:123456789 In $usn2 In `6esn`})<-[#usn7?:_usn3|:`4esn` *00..]->(:`6esn`:`7esn`{_usn3:\"d_str\" Is Null Is Null})<-[@usn6]->(:#usn7{`6esn`:.e12 =~0.0 =~9e0,@usn6:$usn2 =~$_usn4 =~`5esn`})),((#usn7 {#usn7:01234567[.12..7][1000..1.e1],``:@usn5 Ends With 1.e1 Ends With 0X0123456789ABCDEF})<-[? *1000..{_usn4:$`6esn`[$`1esn`][1000],`2esn`:12e12[$`5esn`][07]}]->(:``{`2esn`:9e0[``][123.654],`1esn`:$_usn3[Null]}));"),
    octest:ct_string("Detach Delete [$`8esn` =~$usn2][Any(`6esn` In 0X7 =~`` Where $0 Is Not Null)..],\"d_str\" =~`3esn` =~0x0,Extract(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With $usn1|.12 Ends With `1esn` Ends With $`1esn`)[[True[..'s_str'][..01],_usn4 Ends With 01 Ends With $`1esn`,.0[$`6esn`..False]]..`7esn`(Distinct 010 Is Null Is Null,$`8esn`[..$``])][({`4esn`:9e0 Contains `8esn`,_usn3:$0 Ends With $#usn7 Ends With .12})<-[? *0..010]-(`4esn` :`5esn`{_usn3:Count ( * ) =~Count(*),usn2:_usn4[$`4esn`..]})<-[:#usn7|:_usn4 *1000..{_usn4:07 In `5esn` In 12e12,@usn6:.0 Is Null Is Null}]->(#usn7 $usn2)..All(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null)];"),
    octest:ct_string("Return {_usn4:00}[#usn7(00 In 12.e12)][[.12 Ends With `1esn` Ends With $`1esn`,$`5esn`[False]]] As `1esn` Skip Extract(`4esn` In `6esn`[1e1..] Where 123456789 =~_usn4 =~$0) Contains (`3esn` :usn2:@usn6{`4esn`:`7esn` Contains .0 Contains 9e12})<-[?{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:@usn5{#usn7:1e1[@usn5..]})-[`5esn`? *00..{usn1:07[`6esn`..][`5esn`..],`2esn`:#usn7 Contains .0 Contains .e1}]->(`5esn` :usn2:@usn6) Contains ({#usn7:_usn4 Starts With $@usn6 Starts With #usn7,`4esn`:12 Ends With 01 Ends With 1e1})-[#usn7?:_usn4|:@usn5{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]->(:`2esn`:`3esn`)<-[`7esn`?:#usn8]->(@usn5 :usn2:@usn6{`7esn`:1000 Contains 0.e0}) Return Distinct {usn2:123456789[`4esn`..][Count ( * )..],usn1:\"d_str\" Is Null Is Null} Is Not Null Is Not Null As #usn8,010[$`8esn`..][0..] Order By .e12[.12..][_usn4..] Ascending,Any(`6esn` In 0X7 =~`` Where $`5esn` In `2esn` In $12)[Extract(`4esn` In 's_str'[12..'s_str'] Where .12[9e0][$7]|$`3esn` Starts With $usn1)..[@usn5 In .12[#usn7][$`8esn`] Where $12 Contains 123.654 Contains `8esn`|@usn5 Ends With 1.e1 Ends With 0X0123456789ABCDEF]][{`6esn`:$12[..``][..$7]}..[usn1 In 1000 In $`5esn`]] Asc Skip {`5esn`:True[Count(*)..][1e1..],usn2:1e1[..#usn8][..'s_str']}[(`1esn` :`8esn`{`7esn`:`5esn`[`1esn`]})<-[`6esn`:`4esn`|:`7esn` *..0x0]->(#usn8 :@usn5)] Limit 9e12[usn2..7][.e1..$`7esn`] Remove `1esn`(Distinct `2esn`[$`1esn`..][$_usn3..])._usn4!,Null.`6esn`?,`3esn`(Distinct 01234567 Ends With 0x0).``! Union All Unwind usn2[`3esn`][_usn3] As @usn5;"),
    octest:ct_string("Match ((:`3esn`:`1esn`{usn2:`5esn`[Count ( * )..][\"d_str\"..],`7esn`:.e1 In $@usn6 In 999})<-[? *1000..{_usn4:$`6esn`[$`1esn`][1000],`2esn`:12e12[$`5esn`][07]}]->()),(((@usn6 {#usn7:False[`2esn`..#usn8]})-[? *010]-(`8esn` :@usn5)<-[#usn8?{`5esn`:Null[01234567][01234567]}]->(`6esn` :@usn6:`7esn`{@usn5:True[0x0][@usn6],`5esn`:Null Starts With _usn4 Starts With `6esn`}))) Where 0xabc[$@usn5] Remove #usn7(Distinct $@usn6[..$usn1],9e12 Is Not Null Is Not Null).usn1 Union All Create ((:`1esn`{`6esn`:$0[..`8esn`],`1esn`:True Starts With $`8esn` Starts With \"d_str\"})-[#usn8? *12..0xabc]-(#usn8 :`4esn`:#usn8{#usn7:$`8esn` Starts With 1000}));"),
    octest:ct_string("Unwind $`` Is Null Is Null As #usn8 Union Detach Delete Single(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where $123456789 Ends With $`6esn`)[Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn7 In .e1 In 01)..][{`1esn`:@usn6[`5esn`..$`3esn`],_usn3:$999 Ends With $`3esn` Ends With `8esn`}..],All(_usn4 In usn1 Contains False Contains `` Where #usn8[$#usn8..])[(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})..] Match (`6esn` :`5esn`)<-[?:`3esn`|:`4esn` *0xabc{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]-(`4esn` {`7esn`:.e0[..999][..0X7]})-[`1esn` *..0x0{`5esn`:0[usn2..],`2esn`:1000[0.0][Null]}]-(`3esn` :usn2:@usn6),_usn3=(($999)) Where 0X7 =~`` Return 0X7 In $@usn5 In 9e0,$`1esn`[9e1.._usn4][$999..$`2esn`] Skip $`5esn` In `2esn` In .0 Limit .0 Is Null Is Null Union All With Distinct *,`7esn` In 999 In @usn6,00 Is Null Is Null Order By None(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 00 Ends With .12 Ends With `4esn`)[`3esn`(Distinct $`1esn` =~$`1esn` =~#usn7,$@usn5 Contains 01)..] Desc,$`3esn` In $12 In 's_str' Asc Skip $123456789 Is Null Is Null Limit .e0 =~`5esn`;"),
    octest:ct_string("With Distinct @usn6 Starts With `7esn` Starts With Null,$usn1[#usn8..][``..] As `2esn`,`3esn`[$`1esn`..] As usn2 Order By _usn3[0] Asc,``[$`3esn`][$`2esn`] Ascending,{@usn5:0.e0[@usn6][0x0]} Ends With All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 7 In $`3esn` In #usn7) Ascending Skip (@usn6 :`1esn`{#usn8:$`5esn` In False,usn2:$`7esn` In $7})<-[_usn4?:`6esn`]-(`2esn` {`1esn`:Null Is Null Is Null,`4esn`:$#usn8 Is Null Is Null}) Is Not Null Is Not Null Limit [@usn6 In @usn5 In $`6esn` Where $usn2 Is Not Null|$`6esn`[..0X0123456789ABCDEF]][`5esn`(Distinct 0X7 In $@usn5 In 9e0,0x0)..] Where `1esn` Contains Count ( * ) Return Extract(`6esn` In 0X7 =~``|9e0 In 01234567) Contains Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) As `5esn` Return Distinct *,.e1 Starts With $`8esn` Skip 0xabc[12.e12..`1esn`] Limit 0.e0[@usn6][0x0];"),
    octest:ct_string("Match _usn3=((@usn5 {@usn6:0.0[999..],#usn8:Null Is Null Is Null})<-[:`2esn`|usn2 *0..010]->(`2esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})<-[`1esn`:`8esn`|:usn1 *0xabc{`6esn`:#usn7[..$1000][..01],_usn4:$`2esn` Contains usn1 Contains `2esn`}]->(#usn8 :`2esn`:`3esn`{#usn7:Count(*) In 01 In .0,#usn7:12.0[..$7][..999]})) Union Optional Match `1esn`=((usn2 :@usn5{`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})<-[#usn8? *0xabc{`5esn`:0X7[12]}]->(`4esn` {usn2:7 In 0xabc})),_usn4=((`2esn` :``)<-[`1esn`?:`1esn` *01234567..12]->(`8esn` {`6esn`:00 In 12.e12})) Where _usn4 Starts With 0X7 Union Create #usn7=(`3esn` :`8esn`{usn1:`2esn`[$`3esn`..],`6esn`:$12[..``][..$7]})-[@usn5?:``|:_usn4]-(`8esn` :#usn8)<-[?:``|:_usn4]-({`5esn`:00 Ends With $_usn4 Ends With $`2esn`,usn2:#usn7 Starts With 0 Starts With 12});"),
    octest:ct_string("With  [$#usn7[True..][$0..]][..(usn1 :#usn8)-[:`1esn` *010{`2esn`:$_usn3[9e1][$_usn4],`7esn`:`7esn`[...e1][..\"d_str\"]}]->(`7esn` :#usn8)<-[:#usn7|:_usn4{usn2:`5esn`[Count ( * )..][\"d_str\"..],`7esn`:.e1 In $@usn6 In 999}]-({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})][..[@usn5 In $#usn8 Is Null Is Null Where 12.e12[@usn5..123.654]]] Order By .e12 =~0.0 =~9e0 Desc,010 =~$usn2 =~1e1 Desc,#usn8(0X7 In 's_str' In $`1esn`,$0 Is Not Null)[usn1($`1esn` Is Null Is Null,$0[0X0123456789ABCDEF..$#usn7])] Descending Where .0 Is Null Is Null Detach Delete 0xabc Contains Null Contains 9e12,.12 Starts With 0Xa,`6esn` In 1000 In 01234567 Union Remove None(usn1 In 00 Starts With _usn3).@usn6?,#usn7:_usn3 With  07[07] Skip $`4esn` Contains 0Xa Limit 00[.e0..9e1] Create ((({`6esn`:$`4esn`[usn1..$#usn8][12.0..`3esn`]})<-[?:@usn6]-(`` :@usn6:`7esn`{``:@usn5 Starts With 12e12 Starts With @usn5})-[:_usn4|:@usn5]->(`5esn` :#usn7))) Union All Create `7esn`=(`` :@usn6:`7esn`{`4esn`:0X0123456789ABCDEF Is Not Null}),(((`` :@usn6:`7esn`{`2esn`:0.12[0.e0..][`4esn`..]})<-[`3esn`?:_usn3|:`4esn`]-(_usn3 :`1esn`)<-[_usn3{_usn3:12.e12 In $0 In Count(*)}]-(`7esn` :@usn5))) Unwind 00[.e1..] As `6esn`;"),
    octest:ct_string("Unwind 7 In @usn5 In $`4esn` As `5esn` Union With Distinct *,Single(#usn7 In 01234567[$`3esn`..]) Is Null As `2esn` Union All Return All(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) Is Not Null Is Not Null,0xabc[$@usn5] As `7esn`,.e0[usn2..] As _usn3 Skip 0x0 In `8esn` In 999;"),
    octest:ct_string("Optional Match `1esn`=((@usn5 {@usn6:$123456789[0X7..12.e12]})<-[:`5esn`|`1esn`]-(#usn8 {@usn5:01 Ends With .e0,`8esn`:$`5esn` Is Not Null})),(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null}) Return Distinct *,0.0 Is Null Is Null As `8esn` Order By $1000 Is Null Is Null Descending,1000 In 0X0123456789ABCDEF In 01 Asc With Distinct *,7 Is Null Order By $12[01..][1.e1..] Ascending,0x0 =~_usn4 Desc Limit 12[`7esn`...0][0.12..``] Where $123456789 Ends With .e0 Union Merge (:`4esn`:#usn8{@usn6:$123456789 Contains usn2,`5esn`:1000[123.654..9e12][1000.._usn3]}) Merge (`` {``:$@usn6 Contains 07 Contains 0.e0,_usn4:$#usn8 In .e12 In 9e1})<-[`8esn`?:`5esn`|`1esn`]-(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]})<-[`3esn`?*..]->(`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]}) On Create Set [$`6esn` Is Null Is Null,Count ( * )[@usn6..0x0],0.0[1000..][.e1..]]._usn3! =.0 Starts With `2esn` Starts With `6esn`,({``:\"d_str\",`1esn`:$1000 =~$`7esn`})-[usn1?:_usn3|:`4esn` *123456789..999{`6esn`:01 Ends With .e0,`4esn`:$`7esn` Is Not Null}]->(_usn3 ).`4esn` =usn2 Is Not Null On Match Set `5esn` =$123456789 =~$`5esn` =~07,`4esn`+=010 Starts With `7esn` Starts With 9e1,@usn5:`6esn`:`7esn`;"),
    octest:ct_string("Merge `5esn`=(({`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]})-[#usn8?]-(:_usn3{`6esn`:.e12[..0.e0][..$`1esn`],`8esn`:7 In 0xabc})<-[ *1000..]->(#usn7 {`2esn`:$``[_usn4..][`7esn`..],`3esn`:#usn7 Ends With 9e1})) Union Remove None(#usn7 In 01234567[$`3esn`..] Where 0X7 In $999 In $``).usn1?;"),
    octest:ct_string("Merge `6esn`=((`8esn` {`5esn`:1.e1[0X0123456789ABCDEF..][$`5esn`..],usn2:0 Is Not Null Is Not Null})<-[?:`6esn` *01234567..12{`7esn`:7 In 0xabc}]-(#usn7 :usn2:@usn6{`1esn`:$usn2 Contains 12.e12 Contains 00})) Create ({`2esn`:123456789 Starts With `2esn` Starts With .0,@usn6:$123456789[$`2esn`][True]}) With  $`2esn`[``..] As `3esn`,[123456789 =~$123456789,0.12 In $7 In 0] Is Null Is Null As `3esn`,`7esn`[...e1][..\"d_str\"] Order By [0.0 =~0X7 =~#usn7,123456789 =~_usn4 =~$0] Ends With `7esn`(Distinct 12.0[..$7][..999],0X7[.e12..01234567]) Asc Limit $#usn8 Is Null Where $123456789 In Count(*) In .e1 Union All Merge #usn7=((#usn7 :`5esn`)<-[:`2esn`|usn2 *07..]-({`7esn`:`6esn` Starts With $@usn6,``:`6esn` =~$_usn3})<-[`1esn`?:`1esn` *01234567..12]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})) On Create Set `4esn` =.12 Is Not Null Is Not Null,{@usn6:True[..'s_str'][..01]}.`2esn` =12.e12[...0][..0x0],[usn1 In 00 Starts With _usn3 Where $`` Ends With 12e12].`3esn`? =0.12 Starts With {`1esn`:@usn6[..0xabc][..$#usn7]} Starts With {`3esn`:`8esn`[1000..$7][$`7esn`..`2esn`],_usn4:\"d_str\" Is Null Is Null} Remove [_usn4 Starts With $@usn6 Starts With #usn7].`4esn`,usn2(Distinct usn2[`3esn`][_usn3]).@usn5? Union All Return *,Count ( * ) In 010 As `1esn` Limit $@usn5 =~07 =~True Merge _usn3=(@usn5 {@usn6:$123456789[0X7..12.e12]}) On Match Set @usn5 =12.e12['s_str'],@usn6 =$usn2[False..`7esn`][`7esn`.._usn3],({`6esn`:9e1[.12..],`5esn`:0.12 In $`4esn` In `6esn`})<-[usn2?:`4esn`|:`7esn` *0X0123456789ABCDEF..]-({usn1:$1000 Contains $`3esn`})-[_usn4?:@usn6 *..7]->({usn1:usn1[$`3esn`..$999][True..False],`7esn`:_usn3 Ends With 12e12 Ends With .e0}).@usn5? =07[07] Return Distinct *,[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`|$123456789 Ends With .e1] Contains [@usn6 In @usn5 In $`6esn` Where $_usn4[$`8esn`..][07..]|$1000 In $`7esn` In $7] Contains (`4esn` {_usn3:@usn5 In $`6esn`,@usn6:$usn2[12..$`7esn`][$0..$`7esn`]})-[``?:@usn6{#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0}]->(@usn5 :`3esn`:`1esn`{`3esn`:$`5esn` Is Not Null,`2esn`:9e1[0.e0..][#usn8..]});"),
    octest:ct_string("Optional Match (_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8})-[`7esn`?:`4esn`|:`7esn` *..0X7]-(:#usn7{`7esn`:\"d_str\",usn2:True[`4esn`][$`6esn`]}),usn1=((#usn8 :`3esn`:`1esn`{`6esn`:12e12 Ends With 010 Ends With .0,usn1:$`6esn`[$`1esn`][1000]})) Where _usn3 =~00 Optional Match (((`4esn` {#usn8:`1esn`[0e0..],#usn7:$`6esn`[..0X0123456789ABCDEF]})<-[#usn8?:`3esn`|:`4esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]}]-({``:01234567 Ends With 0x0,`6esn`:0X7[0e0..]})<-[?:`7esn`|`2esn`]-(:`6esn`:`7esn`{`6esn`:07 Ends With 07,`8esn`:1e1[@usn5..]}))) Where 12.0[``] Delete Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 0 Is Not Null Is Not Null)[..[.e0 Contains #usn7 Contains $#usn8]] Union Merge usn1=(`3esn` :``) On Match Set All(`6esn` In 0X7 =~`` Where 0X7[..12e12])._usn4 =Null Starts With $`7esn` Starts With `2esn`,`5esn`+=999 Contains Count ( * ) Contains 123.654,usn1+=usn1[$`3esn`..$999][True..False] Unwind `5esn`[`1esn`..`1esn`] As _usn4;"),
    octest:ct_string("Match ({`5esn`:123456789 Starts With `2esn` Starts With .0})-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]-(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa})<-[`` *12..0xabc]->(`3esn` :_usn4:usn1) Return $`4esn` Contains 0Xa,010 In `7esn` Order By 0x0 In `8esn` In 999 Descending Detach Delete 0X0123456789ABCDEF Contains 12.e12 Contains 999,0X0123456789ABCDEF In $1000 In $`3esn`,'s_str' Is Not Null Is Not Null Union Remove All(`4esn` In 's_str'[12..'s_str'] Where $`8esn`[..$``]).`7esn`!,usn2(07[$999]).`4esn` Remove [_usn4 In usn1 Contains False Contains `` Where 0.12 Contains $`2esn` Contains $_usn4].@usn5,[$123456789[0.0..],07 In `5esn` In 12e12,$`3esn` Starts With 01234567 Starts With $1000].`3esn`!,Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0.12 In $`4esn` In `6esn`)._usn4 Create #usn8=((`8esn` :`7esn`{`8esn`:False In 123456789 In $0})<-[`6esn`:_usn4|:@usn5 *..7{_usn4:0.0 =~0X7 =~#usn7}]->(@usn6 {_usn3:$_usn4[$`1esn`]})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(_usn3 {`2esn`:9e1[.12..],`2esn`:@usn6[`3esn`..][$7..]})),`6esn`=(`6esn` :`5esn`);"),
    octest:ct_string("Return $0 Contains `7esn` Contains $`8esn`,usn1 Contains \"d_str\" Contains 9e12 As _usn4,0Xa[0xabc..] As usn2 Skip \"d_str\" Limit $`7esn` Ends With $`2esn` Ends With $usn1 Delete 0.0 =~0X7 =~#usn7,12e12[True..][07..],Extract(`4esn` In `6esn`['s_str'..][010..] Where $12 Is Null Is Null) Ends With `2esn`(`7esn`[Null..][@usn5..],123.654[12.e12..1e1]) Ends With Any(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 010[$@usn6]) Union All Unwind usn2 Is Not Null Is Not Null As `4esn` Union All Create (usn2 {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})<-[:`5esn`|`1esn`{`4esn`:9e0[True..`1esn`],@usn6:7 =~9e0 =~'s_str'}]->(#usn7 {`5esn`:0.12 Contains .e1,#usn8:$1000 Is Null Is Null});"),
    octest:ct_string("Optional Match ((`6esn` :`4esn`:#usn8{_usn4:12.e12[...0][..0x0]})<-[`6esn` *999..{@usn6:$`7esn` Is Null Is Null}]->(usn1 :_usn3)) Union Return None(`4esn` In 's_str'[12..'s_str'])[Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`)..][Filter(@usn5 In 0X7 =~.0 =~\"d_str\" Where $@usn6 Contains Count ( * ))..] Remove Extract(`4esn` In $`8esn` Starts With 1000 Where 0.12 In 01 In $`3esn`).usn1!,_usn4(Distinct `7esn` Starts With $usn2 Starts With .e0).`5esn`,``:#usn7;"),
    octest:ct_string("Remove Extract(@usn5 In 0X7 =~.0 =~\"d_str\"|$`5esn` In `2esn` In .0).`2esn`?,(`4esn` {@usn5:1e1 In $#usn8 In 12e12})-[_usn4?:`5esn`|`1esn`]-(@usn5 {``:12[usn1][True],``:$`5esn` In `2esn` In $12}).`7esn`!,[999[.e12][01]].`2esn`! Match `5esn`=({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(`4esn` :`6esn`:`7esn`{`8esn`:0X7[..12e12]})-[?:@usn6{`8esn`:12 Ends With .e12 Ends With $7,`8esn`:0.0[12...12]}]-(`3esn` :``);"),
    octest:ct_string("Merge (:``{`5esn`:.e1 In $@usn6 In 999})-[`5esn`?:`3esn`|:`4esn`{`1esn`:$usn2 Contains 12.e12 Contains 00}]-(usn1 :`3esn`:`1esn`{`4esn`:#usn7[..$1000][..01]}) With  `6esn`['s_str'..][010..],$`4esn` Contains 0Xa Where 0X0123456789ABCDEF In $1000 In $`3esn` Detach Delete Any(@usn6 In @usn5 In $`6esn` Where 9e0[$_usn3..0X7][7..$#usn8]) Contains None(usn1 In 00 Starts With _usn3 Where 01234567 Ends With 12.0 Ends With 0X7) Contains Single(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $#usn8 In .e12 In 9e1),$@usn5 =~07 =~True Union All Remove {`4esn`:.12 Starts With 0Xa}.usn1!,[`6esn` In 0X7 =~`` Where 123456789 =~_usn4 =~$0|$#usn8 Ends With 1000 Ends With .0].`7esn`? Remove (:`2esn`:`3esn`{usn2:9e12[@usn6..$``][#usn8..Count ( * )],`3esn`:$1000 In $`7esn` In $7})<-[?:`1esn`]-(_usn4 :@usn6:`7esn`{@usn5:$_usn3[$`4esn`..Null]})._usn3!;"),
    octest:ct_string("Remove Any(#usn7 In 01234567[$`3esn`..] Where 0Xa[0xabc..$#usn8])._usn4! Remove (usn2 :`6esn`:`7esn`{`6esn`:`` Contains 12 Contains True,usn2:$`2esn`[123456789..][00..]})-[_usn3 *010]->(:usn1{`8esn`:usn1 Contains $``})._usn4?,usn1:`3esn`:`1esn`,{`2esn`:9e1 In 01 In 999,`5esn`:$@usn6[..$usn1]}.@usn5! Union Detach Delete $usn1[0.12..]['s_str'..],usn2 Starts With `6esn` Starts With 12e12,True[Count(*)..][1e1..];"),
    octest:ct_string("Remove ({@usn6:0X0123456789ABCDEF[..usn1]})<-[`4esn`:#usn8]-(:`6esn`:`7esn`{_usn4:`3esn` Contains 0Xa})-[{`2esn`:\"d_str\" =~`3esn` =~0Xa,_usn4:usn1 Is Null Is Null}]->(#usn8 :`7esn`).`6esn`? Match `3esn`=(#usn8 :`1esn`{#usn7:1e1[`6esn`..]})<-[:_usn3|:`4esn`{_usn4:$`3esn` =~$`6esn` =~`8esn`,`5esn`:0X7[0e0..]}]-(#usn8 :`5esn`{usn2:.e1 Starts With 0.0 Starts With `6esn`,#usn8:9e12 =~01 =~$`7esn`}),usn2=((#usn8 :`4esn`:#usn8)-[`6esn`? *01234567..12{``:$usn2 In 9e0 In $7,@usn5:0X7[12]}]-(@usn5 {usn2:$999[12.0..]})-[`5esn`? *00..{usn1:07[`6esn`..][`5esn`..],`2esn`:#usn7 Contains .0 Contains .e1}]->(`5esn` :usn2:@usn6)) Unwind 123.654[`5esn`] As @usn5 Union All Merge `6esn`=((@usn6 {`3esn`:0.12 In $7 In 0,_usn3:07[$999]})-[`1esn`:`5esn`|`1esn` *..7{`6esn`:False Is Not Null Is Not Null,_usn4:.e0[7..$`3esn`]}]->(usn2 :@usn6:`7esn`)<-[:@usn5|`8esn` *0Xa{usn1:$1000 Contains $`3esn`}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]})) On Match Set `8esn` =All(`4esn` In `6esn`['s_str'..][010..] Where $`8esn`[``..][123.654..]) Is Null Is Null,Filter(_usn4 In usn1 Contains False Contains `` Where 0.12 In 01 In $`3esn`)._usn3? =\"d_str\"[Count ( * )] Remove [.12 Starts With .12 Starts With `3esn`,Count ( * )[Count ( * )..12e12][usn1..1000],False In `3esn`].#usn7,{usn1:$1000 Contains $`3esn`}.#usn8!,None(`4esn` In $`8esn` Starts With 1000 Where True Starts With $`8esn` Starts With \"d_str\").`4esn`! Union All Match ((@usn5 :@usn6:`7esn`{`6esn`:$0[01234567..00][$`2esn`..$@usn6],`3esn`:`6esn` Starts With $@usn6})),((:`7esn`{`2esn`:`` Starts With @usn5,usn2:$`2esn` Starts With .e0 Starts With 12.0})-[#usn8{`2esn`:`6esn`[1.e1..$#usn7][.e0..True],`3esn`:$`5esn` Contains Count(*) Contains #usn7}]->(:`3esn`:`1esn`{_usn4:`1esn`[@usn6..$123456789],`4esn`:$usn2[..12.0]})) Where @usn6 Contains .e1 Contains $`4esn`;"),
    octest:ct_string("Delete 0e0[12][$_usn4];"),
    octest:ct_string("Merge ({`4esn`:#usn7 Starts With 0 Starts With 12,`4esn`:0x0 =~_usn4})-[ *..0x0]->(#usn8 {usn2:7 Contains 9e1}) On Match Set usn1+=`4esn` Is Null Union All Return Distinct _usn3(Distinct 0.12 In 01 In $`3esn`,1.e1[0X0123456789ABCDEF..][$`5esn`..]) Ends With Any(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `6esn`[False..0.0][12e12..$usn2]) Ends With Filter(usn2 In 1000 Contains 0.e0 Where 12e12 Ends With 010 Ends With .0),$`7esn` In 0.e0 In `4esn` As `2esn` Limit Any(@usn5 In $#usn8 Is Null Is Null Where 0.e0 Ends With 12 Ends With $7) Is Not Null Is Not Null Create `2esn`=(`8esn` )-[ *0..010{#usn7:$@usn6 Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)}),`3esn`=(`4esn` {usn2:7 In 0xabc})<-[$#usn8]->(`4esn` {#usn8:`1esn`[0e0..],#usn7:$`6esn`[..0X0123456789ABCDEF]}) With  *,`7esn`[...e1][..\"d_str\"],12e12[0.e0..True][0.12..0.0] As #usn7 Order By 0xabc[12.e12..`1esn`] Ascending,12.e12 In $1000 Ascending,[`6esn` In 0X7 =~`` Where 0.12[Null..]] Is Null Is Null Ascending Limit Extract(`4esn` In `6esn`[1e1..] Where $`5esn` Is Null Is Null|12.e12 Ends With 01 Ends With .e1)[00..] Where 0.e0[..#usn8][..Null] Union Optional Match `5esn`=(({`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]})-[#usn8?]-(:_usn3{`6esn`:.e12[..0.e0][..$`1esn`],`8esn`:7 In 0xabc})<-[ *1000..]->(#usn7 {`2esn`:$``[_usn4..][`7esn`..],`3esn`:#usn7 Ends With 9e1}));"),
    octest:ct_string("Unwind `3esn`(Distinct _usn4 Ends With 01 Ends With $`1esn`) Starts With [Count(*) In 01 In .0,`` Starts With 12,$_usn4[$`8esn`..][07..]] Starts With Extract(@usn5 In $#usn8 Is Null Is Null Where 12.e12 In $0 In Count(*)) As _usn3 Create `2esn`=(_usn4 {`8esn`:9e1 In 01 In 999})<-[:_usn3|:`4esn`{_usn4:$`3esn` =~$`6esn` =~`8esn`,`5esn`:0X7[0e0..]}]-(:`8esn`),`5esn`=(((`3esn` {`5esn`:`7esn` Starts With $usn2 Starts With .e0,#usn7:$@usn6[_usn3..0.e0]})-[ *..7]-(:_usn3{@usn6:$`7esn` Is Null Is Null})-[:`7esn`|`2esn` *12..0xabc]->(`6esn` :`5esn`{_usn3:$@usn6[..12e12],_usn4:$0[0X0123456789ABCDEF..$#usn7]})));"),
    octest:ct_string("Unwind #usn8[$#usn8..] As #usn8 Merge (((`1esn` :`8esn`)-[_usn4:`7esn`|`2esn`]-(`3esn` {`8esn`:$usn2[12..$`7esn`][$0..$`7esn`]})-[_usn4{@usn6:`1esn`[...e1],`5esn`:`5esn`[`1esn`]}]->(:usn2:@usn6{`6esn`:12[12e12..@usn6],#usn8:`6esn` =~$_usn3}))) Create ((_usn4 {`8esn`:9e1 In 01 In 999})) Union All Merge ((#usn7 :`5esn`)<-[:`2esn`|usn2 *07..]-({`7esn`:`6esn` Starts With $@usn6,``:`6esn` =~$_usn3})<-[`1esn`?:`1esn` *01234567..12]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})) On Match Set [`4esn` In `6esn`[1e1..] Where $`2esn`[..`2esn`]|`` Contains 12 Contains True].`2esn`? =$@usn6[..$#usn7][..12.e12],None(@usn5 In 0X7 =~.0 =~\"d_str\" Where #usn7 Starts With 0 Starts With 12).`8esn`! =12[..9e0][..999] With  [$`5esn` Is Not Null,0e0 Is Null Is Null] Ends With Filter(`4esn` In `6esn`['s_str'..][010..] Where Count(*)[..`3esn`]) Ends With (_usn4 {`8esn`:9e1 In 01 In 999})-[`8esn`?:#usn7|:_usn4]-(#usn8 :_usn3)-[ *0..010{#usn7:$@usn6 Is Null Is Null}]-(:`1esn`{`8esn`:Count ( * ) =~Count(*)}),[@usn5 In $#usn8 Is Null Is Null Where 7 In 0xabc][[Null[01234567][01234567],07[1e1],Count(*)[12.e12..]]..#usn8($12 Contains 123.654 Contains `8esn`,0xabc Ends With $#usn7 Ends With #usn8)] Skip `1esn`[@usn6..$123456789] With  *,{`3esn`:0xabc Ends With $#usn7 Ends With #usn8,`6esn`:0e0 =~_usn4}[All(@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7)..{_usn3:`1esn` In 999 In $#usn7,@usn5:\"d_str\" Starts With $usn1}][{#usn8:$999 Ends With $`3esn` Ends With `8esn`}..(:_usn4:usn1{usn1:123456789 Starts With `2esn` Starts With .0,@usn5:00 Starts With _usn3})-[`1esn`{_usn4:`3esn` Contains 0Xa}]-(#usn7 :`6esn`:`7esn`)] Order By .e1 Starts With $`8esn` Asc Limit $#usn7 In .e1 In 01;"),
    octest:ct_string("Optional Match usn2=((`1esn` :usn2:@usn6)-[_usn3?:`2esn`|usn2 *010{`6esn`:#usn7 Ends With `4esn` Ends With @usn5}]->(`1esn` :``{`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]})) With  Single(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where usn1 Starts With $#usn7 Starts With `5esn`) Contains @usn5(Distinct 123456789 Starts With `2esn` Starts With .0,123456789 Starts With #usn7 Starts With `6esn`) Contains None(#usn8 In $`5esn` Is Null Is Null Where $#usn8 In .e12 In 9e1),9e1[010..] As `6esn` Order By [`8esn` In 's_str' Starts With 1000 Starts With #usn8] =~[01234567 Ends With 12.0 Ends With 0X7,999[$`6esn`],`` Starts With @usn5] =~(:@usn6:`7esn`{`1esn`:010[@usn5..]})<-[`7esn`?:`5esn`|`1esn`]->(#usn8 :_usn4:usn1) Desc,`1esn`[`3esn`..][$@usn6..] Desc,123456789[1000] Desc Where 0X7 In 's_str' In $`1esn` Return Distinct $`1esn` Starts With $999 As #usn8,Any(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7)[{#usn8:`5esn` =~0Xa,@usn5:0X7[999][$1000]}..[`` Starts With 12,$`1esn` Starts With $999]][`7esn`(Distinct $usn2[..12.0])..`1esn`(Distinct 1e1[0.0],0.0[1000..][.e1..])] Order By 9e1 Is Not Null Is Not Null Asc,$usn2[$123456789..123.654][$`5esn`..'s_str'] Desc Union Match `1esn`=((`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]})) Remove All(#usn8 In $`5esn` Is Null Is Null Where 01234567 Ends With 12.0 Ends With 0X7).`8esn`! Optional Match `8esn`=(`8esn` {`6esn`:00 In 12.e12})<-[`5esn`:@usn6]-(:``{_usn3:0X0123456789ABCDEF In 01234567})<-[`7esn`?:@usn5|`8esn`{@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]}]->(`6esn` {@usn6:9e0 Contains `8esn`}) Where 123456789 Starts With `2esn` Starts With .0 Union All With  [$#usn7[True..][$0..]][..(usn1 :#usn8)-[:`1esn` *010{`2esn`:$_usn3[9e1][$_usn4],`7esn`:`7esn`[...e1][..\"d_str\"]}]->(`7esn` :#usn8)<-[:#usn7|:_usn4{usn2:`5esn`[Count ( * )..][\"d_str\"..],`7esn`:.e1 In $@usn6 In 999}]-({`3esn`:123.654 Starts With usn1 Starts With @usn5,#usn8:0X7[0e0..]})][..[@usn5 In $#usn8 Is Null Is Null Where 12.e12[@usn5..123.654]]] Order By .e12 =~0.0 =~9e0 Desc,010 =~$usn2 =~1e1 Desc,#usn8(0X7 In 's_str' In $`1esn`,$0 Is Not Null)[usn1($`1esn` Is Null Is Null,$0[0X0123456789ABCDEF..$#usn7])] Descending Where .0 Is Null Is Null Detach Delete 0xabc Contains Null Contains 9e12,.12 Starts With 0Xa,`6esn` In 1000 In 01234567;"),
    octest:ct_string("Remove (_usn3 :_usn4:usn1)-[`3esn`?:`3esn`|:`4esn` *..01{_usn3:`6esn`[0X7..][0x0..],`6esn`:0xabc Ends With $7 Ends With $`2esn`}]->(usn2 :#usn7)<-[@usn5?:`1esn`]-(#usn7 :`2esn`:`3esn`).usn2,[`6esn` In 0X7 =~`` Where $`6esn`[..0X0123456789ABCDEF]|12 Is Null Is Null].#usn8? Union All Create (:`3esn`:`1esn`{@usn5:$#usn8 In .e12 In 9e1,`7esn`:9e1 Starts With `1esn` Starts With 0Xa}),(`3esn` :usn2:@usn6)-[#usn7:`7esn`|`2esn` *..01{``:0X7 In 's_str' In $`1esn`,#usn8:010 Contains Count(*)}]->({`4esn`:$usn1[1e1.._usn3][$@usn6..$#usn7],`3esn`:9e0[``][123.654]})-[_usn3]-(`` {`4esn`:9e0[True..`1esn`],@usn6:7 =~9e0 =~'s_str'}) Delete True In 0x0,0X7[12] Union Create `4esn`=(:`5esn`{`7esn`:$`7esn` Ends With 07 Ends With 07,`5esn`:@usn5 Ends With $`3esn` Ends With 12e12})<-[`1esn`?:`1esn` *01234567..12]->(:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})<-[:`7esn`|`2esn` *123456789..999{`1esn`:12.0[..$7][..999],@usn5:$123456789 In Count(*) In .e1}]->(_usn4 ),(:#usn7) With Distinct {#usn8:$`5esn` In False,usn2:$`7esn` In $7}[..Any(@usn6 In @usn5 In $`6esn` Where 010 =~$usn2 =~1e1)] Order By usn1($@usn5[0.12..][@usn5..],\"d_str\" Starts With $usn1) Is Null Ascending,`` Asc,$999 In $`8esn` In `5esn` Descending Skip Extract(@usn6 In @usn5 In $`6esn` Where $_usn4[`3esn`][0]|_usn3 Is Null Is Null) Is Not Null Limit `4esn` Is Null Create (:`3esn`:`1esn`{@usn5:$#usn8 In .e12 In 9e1,`7esn`:9e1 Starts With `1esn` Starts With 0Xa}),(`3esn` :usn2:@usn6)-[#usn7:`7esn`|`2esn` *..01{``:0X7 In 's_str' In $`1esn`,#usn8:010 Contains Count(*)}]->({`4esn`:$usn1[1e1.._usn3][$@usn6..$#usn7],`3esn`:9e0[``][123.654]})-[_usn3]-(`` {`4esn`:9e0[True..`1esn`],@usn6:7 =~9e0 =~'s_str'});"),
    octest:ct_string("Return Distinct $#usn8[1e1][9e1] As @usn5,$`3esn`[`2esn`...e0] As _usn3,.e1 Starts With $`8esn` Skip 0x0 =~$`7esn` =~@usn6 Limit [$_usn3[$`4esn`..Null],0x0 Contains $`8esn` Contains `6esn`,\"d_str\" =~`6esn` =~0Xa] Contains [@usn6 Starts With `7esn` Starts With Null] Contains `6esn`(Distinct $`4esn`[usn1..$#usn8][12.0..`3esn`],12.e12['s_str']) Union Create `3esn`=((@usn6 :#usn8{`8esn`:`1esn`[@usn6..$123456789],`1esn`:9e12 =~01 =~$`7esn`})<-[{_usn3:12.e12 In $0 In Count(*)}]-(:#usn7{`2esn`:.12 Starts With @usn5 Starts With $#usn8})) Optional Match ((:_usn4:usn1{`8esn`:_usn3[...e1],`8esn`:0x0 =~_usn4})),_usn4=(({_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"})<-[#usn7]-(_usn4 {#usn8:@usn5 In $`6esn`,`7esn`:010 =~`6esn`})<-[ *00..{@usn5:$`5esn` Is Null Is Null}]->(:_usn4:usn1)) Where _usn4 Ends With 01 Ends With $`1esn`;"),
    octest:ct_string("With Distinct `8esn`(Distinct False Contains `3esn`,9e12 =~01 =~$`7esn`)[[@usn6[`5esn`..$`3esn`],0e0 Is Not Null Is Not Null]..],True[0] As @usn6 Skip .12 Ends With $`4esn` Ends With Count(*) Where $`4esn`[12.0..`5esn`] Delete $`6esn`[$@usn6..],Count ( * ) Contains 999 Contains $`8esn`,usn1($@usn5[0.12..][@usn5..],\"d_str\" Starts With $usn1) Is Null Merge `3esn`=(:`3esn`:`1esn`{`1esn`:0.0[1000..][.e1..]}) Union Match `5esn`=(#usn7 {@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]}) Where $`2esn` Contains usn1 Contains `2esn` Unwind 12e12[0.e0][9e1] As usn2 Union Delete (usn2 :`7esn`{@usn5:usn1[$`3esn`..$999][True..False],`8esn`:$`5esn` Is Null Is Null})-[`5esn`?:_usn4|:@usn5]-(usn1 :`7esn`)<-[`` *12..0xabc]->(:``{_usn3:Count(*)['s_str'..`1esn`],`1esn`:$`6esn`[$`1esn`][1000]}) Is Null Is Null,[@usn5 In $#usn8 Is Null Is Null Where #usn7 Contains $7|`6esn`[1.e1..$#usn7][.e0..True]][..Extract(#usn8 In $`5esn` Is Null Is Null Where #usn8[$#usn8..]|$@usn6[..$usn1])][..(:`4esn`:#usn8{#usn8:07})-[?:#usn7|:_usn4{_usn4:0X7[..12e12],``:.e1 In $@usn6 In 999}]-(@usn5 :`3esn`:`1esn`{`3esn`:$`5esn` Is Not Null,`2esn`:9e1[0.e0..][#usn8..]})-[``:`2esn`|usn2{_usn4:0X0123456789ABCDEF Ends With 0X0123456789ABCDEF Ends With 's_str',`3esn`:'s_str' In \"d_str\" In 123456789}]-(:``{`2esn`:9e0[``][123.654],`1esn`:$_usn3[Null]})];"),
    octest:ct_string("Optional Match ((_usn3 :_usn4:usn1)<-[`5esn`?:#usn8{#usn7:0.12 Ends With $usn1 Ends With $@usn5}]->({`1esn`:$@usn5 =~$`` =~$usn2})),(:`3esn`:`1esn`{@usn5:$#usn8 In .e12 In 9e1,`7esn`:9e1 Starts With `1esn` Starts With 0Xa})-[:usn1|`3esn`]-(_usn3 :_usn4:usn1{`2esn`:$`6esn`[$@usn6..]}) Where 123456789 =~$123456789 Create usn1=((_usn3 {_usn3:1e1[.e1..],`1esn`:$#usn8})-[`7esn`?]-(@usn6 :_usn3{_usn4:$`7esn` In $7,`1esn`:12.0[..$7][..999]})),#usn7=(_usn4 {_usn3:$`1esn` Is Null,usn1:$`4esn`[$`2esn`..]})<-[@usn5?:_usn3|:`4esn` *..0x0]->(#usn8 {usn2:7 Contains 9e1}) Detach Delete 0Xa Starts With $`4esn` Starts With 1e1 Union Delete `7esn`($123456789 In Count(*) In .e1) Ends With Extract(@usn5 In .12[#usn7][$`8esn`] Where $0[7..][Null..]|Count ( * )) Ends With Any(usn1 In 0x0[..`4esn`] Where False[.e1..Null]),`7esn`(0.0[1000..][.e1..],$@usn5 Contains 01)[Any(usn1 In 0x0[..`4esn`] Where 0X7[.e12..01234567])][[$@usn6 Contains 07 Contains 0.e0,`5esn` In 12]],$usn1[0.12..]['s_str'..] Unwind 999 Contains `7esn` As `7esn` Merge @usn5=(:@usn5{usn1:Count(*)[True],@usn6:123456789[$#usn7..]})<-[#usn7]-(`7esn` :`2esn`:`3esn`)-[?:``|:_usn4 *..0X7]->(`4esn` {`6esn`:$12[..``][..$7]}) On Create Set usn1+=$@usn6 In $`5esn` In $usn2 Union All Create `5esn`=((#usn8 :`4esn`:#usn8)<-[`6esn`?{`7esn`:@usn6 Contains _usn4 Contains $`4esn`}]-(usn1 :`4esn`:#usn8{usn2:$`8esn` In \"d_str\" In 9e12})<-[`6esn`?{`7esn`:.12 Ends With `1esn` Ends With $`1esn`,``:9e0 Starts With `6esn`}]-(_usn4 {#usn8:@usn5 In $`6esn`,`7esn`:010 =~`6esn`})),usn2=((:`1esn`{@usn6:$_usn4[$`4esn`..$#usn7][`6esn`..7],`8esn`:'s_str'['s_str'..$usn2][_usn3.._usn3]})-[usn2 *0X0123456789ABCDEF..{usn2:`` Starts With 12}]-(`4esn` {`7esn`:.e0[..999][..0X7]})-[_usn4?:@usn6 *..7]->({usn1:usn1[$`3esn`..$999][True..False],`7esn`:_usn3 Ends With 12e12 Ends With .e0})) Remove {`3esn`:`1esn` Contains Count ( * ),`7esn`:01234567 =~usn1}.#usn8?,[0X7[..12e12],$`6esn`[$`1esn`][1000]].usn2?;"),
    octest:ct_string("Remove {`8esn`:Count ( * ) =~Count(*)}.`6esn`,({@usn6:0X0123456789ABCDEF[..usn1]})<-[:``|:_usn4 *0Xa]->(`7esn` :`2esn`:`3esn`)._usn4?,(:`4esn`:#usn8)<-[_usn4:`7esn`|`2esn`]-(`5esn` {`8esn`:0.0[12...12]})<-[#usn7:`3esn`|:`4esn` *00..]-(@usn6 {`3esn`:123456789[1e1..0.0],`7esn`:12.0[..$7][..999]}).`4esn` Union All Detach Delete .e1 Starts With $`8esn`,`6esn` Is Not Null;"),
    octest:ct_string("With  0.12 In $7 In 0,#usn8 In $0 As `3esn` Order By None(usn1 In 0x0[..`4esn`] Where .12 Starts With .12 Starts With `3esn`) Contains `3esn`($usn2 Contains 12.e12 Contains 00) Ascending Unwind Count(*) Is Not Null Is Not Null As _usn4;"),
    octest:ct_string("Unwind $999 =~False As usn1 Merge `5esn`=(((`5esn` :`6esn`:`7esn`{`2esn`:$`2esn`[$123456789..$`1esn`][0Xa..$``]})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->(`2esn` :usn2:@usn6)-[?:@usn6 *00..{@usn5:$`5esn`[False],`4esn`:usn1[..$_usn4][..``]}]->(:``{`1esn`:`6esn` =~$_usn3}))) On Match Set _usn3+=07 In Count ( * ) In \"d_str\" Unwind $`` Is Null Is Null As #usn8 Union All Merge ((`1esn` :usn2:@usn6)-[_usn3?:`2esn`|usn2 *010{`6esn`:#usn7 Ends With `4esn` Ends With @usn5}]->(`1esn` :``{`8esn`:9e12[_usn3],_usn3:0.0[..12e12][..$0]})) On Match Set [$usn1 In 1000 In $#usn7,$#usn7 In 12.0 In 0X0123456789ABCDEF,9e0 Is Not Null]._usn3 =All(_usn4 In usn1 Contains False Contains `` Where #usn8[$#usn8..])[(usn1 :`7esn`{_usn3:9e0[$_usn3..0X7][7..$#usn8],usn1:False[`2esn`..#usn8]})<-[ *0Xa{#usn7:$`4esn`[9e1..][0..],`4esn`:'s_str' Ends With .e0}]->(`3esn` :_usn4:usn1{`5esn`:`3esn`[..7][..12e12],`5esn`:$``[_usn4..][`7esn`..]})..],Extract(@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null).`1esn`! =0xabc Starts With _usn3 Create _usn4=(@usn6 {#usn7:False[`2esn`..#usn8]})<-[`6esn`? *00..{`8esn`:$`2esn`[123456789..][00..],`7esn`:123.654 Contains #usn8}]-(`4esn` {@usn6:True[..'s_str'][..01]}) Match ({`3esn`:$`3esn` =~$`7esn` =~False,`4esn`:12 Ends With 01234567})-[#usn7:`1esn` *07..]->(:`7esn`{``:$`1esn` Starts With @usn6})<-[:#usn7|:_usn4 *0Xa]-(usn1 :_usn3{_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"}) Where 9e12 =~01 =~$`7esn`;"),
    octest:ct_string("Optional Match `1esn`=(((`` :@usn5)-[`2esn`:@usn5|`8esn` *07..{#usn8:@usn6 Contains _usn4 Contains $`4esn`}]->(usn1 {#usn7:Count ( * )[@usn6..0x0]})-[@usn5:`8esn`|:usn1]-(#usn7 :`5esn`))),usn1=(_usn4 :`8esn`{`3esn`:False[.e1..Null],`3esn`:9e0 =~$`5esn`}) Union With Distinct `` Is Not Null Is Not Null As @usn6,True[Count(*)..][1e1..] Remove Extract(`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where `7esn` Starts With $usn2 Starts With .e0).`6esn`! Match `8esn`=((@usn6 {_usn3:$_usn4[$`1esn`]})-[`5esn`?:_usn4|:@usn5]->({`5esn`:Count(*)[..`3esn`],usn1:01234567 Ends With 0x0})-[usn2 *..0X7{#usn7:$_usn4[`3esn`][0]}]->({#usn7:Count ( * )[@usn6..0x0]})) Where 's_str'[12..'s_str'] Union Merge ((@usn6 :#usn7{@usn5:Null Is Null Is Null})) On Create Set `8esn` =Filter(@usn5 In $#usn8 Is Null Is Null Where 9e1 Contains $`3esn` Contains 01234567) =~['s_str'[..0.e0][..`1esn`],`5esn`[.e1][0Xa],123456789 In $usn2 In `6esn`],`8esn`+=Filter(`6esn` In 0X7 =~`` Where $usn2[0e0..])[usn2($#usn8 Is Null Is Null)..Extract(usn1 In 0x0[..`4esn`] Where 123456789 In $usn2 In `6esn`|@usn5[..True][..0X7])][(`` :@usn5{#usn7:0X7[12]})-[@usn6? *07..{_usn4:Count(*)[..`3esn`],`5esn`:01234567[$`3esn`..]}]-(`1esn` :#usn8{usn2:9e1 Starts With _usn3 Starts With `4esn`,`3esn`:0Xa Is Null Is Null})<-[`5esn`:`8esn`|:usn1{usn1:12e12[Count ( * )..][usn2..],usn2:$123456789 Is Null Is Null}]-(`8esn` )..[@usn5 In 0X7 =~.0 =~\"d_str\" Where 0 Is Null Is Null]] Return Distinct *,9e12[_usn3] As `8esn`,$`1esn`[9e1.._usn4][$999..$`2esn`] As `8esn` Order By `6esn` Starts With $`5esn` Desc,$`7esn` Ends With 07 Ends With 07 Desc;"),
    octest:ct_string("Merge `3esn`=(usn1 :`7esn`)<-[? *00..{`6esn`:$@usn6[_usn3..0.e0]}]->(:#usn7{`7esn`:\"d_str\",usn2:True[`4esn`][$`6esn`]}) On Create Set `1esn` =0X0123456789ABCDEF[.e0..$`4esn`] On Match Set _usn4 =@usn5 Contains 01 Contains 12,#usn7+={#usn8:0X0123456789ABCDEF[..usn1]} Ends With (:``{_usn3:0X0123456789ABCDEF In 01234567})<-[``? *..0X7{_usn4:12 Ends With 01 Ends With 1e1}]-(usn2 :@usn6:`7esn`)-[:usn2|#usn8*..]-(:#usn7{``:$123456789 Is Not Null Is Not Null,`1esn`:#usn7 Starts With 0 Starts With 12}) Ends With [1e1 In $#usn8 In 12e12,123.654 Contains #usn8] Return *,{`2esn`:999 In $_usn4 In 0X7}[..{`7esn`:12e12 Ends With 010 Ends With .0}][..Filter(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $123456789[$`2esn`][True])] As `3esn` Limit All(`4esn` In `6esn`['s_str'..][010..] Where $`8esn`[``..][123.654..]) Is Null Is Null Union All With Distinct *,07[0..`4esn`],Filter(@usn6 In @usn5 In $`6esn` Where .12[`1esn`..][$`3esn`..]) Limit Any(#usn8 In $`5esn` Is Null Is Null Where 0.12 Contains $`2esn` Contains $_usn4)[..Filter(`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where $`3esn` Starts With 01234567 Starts With $1000)][..Extract(`4esn` In `6esn`[1e1..])] Where @usn5[..True][..0X7];"),
    octest:ct_string("Create `4esn`=((#usn8 {usn2:7 Contains 9e1})-[`6esn`? *00..{`8esn`:$`2esn`[123456789..][00..],`7esn`:123.654 Contains #usn8}]->(:_usn3{@usn6:$`7esn` Is Null Is Null}));"),
    octest:ct_string("Unwind .12 =~.12 =~1e1 As `8esn` Union All Create `5esn`=({@usn5:`6esn`[1e1..],@usn5:`7esn` Contains .0 Contains 9e12})<-[?:`6esn`{#usn7:7 In @usn5 In $`4esn`}]-(`4esn` :`6esn`:`7esn`{`8esn`:0X7[..12e12]})-[?:@usn6{`8esn`:12 Ends With .e12 Ends With $7,`8esn`:0.0[12...12]}]-(`3esn` :``) Detach Delete $usn2 =~$_usn4 =~`5esn` Detach Delete Extract(`4esn` In $`8esn` Starts With 1000 Where 9e1 Is Null Is Null) =~Any(`4esn` In 's_str'[12..'s_str'] Where $#usn8 Is Null) =~[`8esn` In 's_str' Starts With 1000 Starts With #usn8 Where 9e0 =~$`5esn`|$123456789 Ends With .e1],$7 Contains 0x0 Contains ``,[\"d_str\"] Contains _usn3(Distinct $usn1[_usn4..][usn2..]) Union All Return $`2esn`[``..] As `3esn`,[123456789 =~$123456789,0.12 In $7 In 0] Is Null Is Null As `3esn`,`7esn`[...e1][..\"d_str\"] Unwind _usn4 Starts With 0X7 As `4esn` Merge `3esn`=((`2esn` :_usn4:usn1{`7esn`:7 In 0xabc})<-[:@usn5|`8esn` *0Xa{usn1:$1000 Contains $`3esn`}]->(`2esn` :``)-[usn2?]-(`2esn` {#usn7:_usn4 Starts With 0X7,_usn3:False In $`7esn` In .0})) On Create Set `5esn` =999[.e12][01],Extract(usn1 In 0x0[..`4esn`] Where @usn6[$`3esn`]).#usn8? =`1esn` In 999 In $#usn7,usn1 =12.e12[0e0..7] On Match Set `1esn`+=Null[0e0][12],Filter(usn1 In 0x0[..`4esn`] Where $`` Ends With 12e12).usn1! =Extract(#usn8 In $`5esn` Is Null Is Null Where 's_str' Starts With 1000 Starts With #usn8|07)[None(@usn6 In #usn8 Ends With `4esn` Ends With $`4esn` Where 12[..True][..$`4esn`])..usn2(Distinct $1000[01234567],00 In 0.12 In `5esn`)][`8esn`(00[``..][$`4esn`..],123.654[@usn5])..Extract(@usn5 In $#usn8 Is Null Is Null Where @usn5 Contains $`1esn` Contains 999)];"),
    octest:ct_string("Create ``=(`4esn` :`8esn`{_usn4:0 Is Null Is Null}),(:_usn4:usn1{#usn7:$`5esn` Is Null Is Null,usn2:usn1[$`3esn`..$999][True..False]})-[`5esn`?:`2esn`|usn2 *999..]->(@usn6 :``{@usn5:@usn5 Starts With 12e12 Starts With @usn5})-[_usn4?:`5esn`|`1esn`]-(`2esn` :`8esn`{`2esn`:$`8esn` In \"d_str\" In 9e12}) With Distinct [@usn5 In $#usn8 Is Null Is Null Where 0.e0 Ends With 12 Ends With $7|$999 Ends With $`3esn` Ends With `8esn`] Starts With [$`6esn` Is Null Is Null,0Xa Is Not Null Is Not Null,0X7 In 123.654 In $`2esn`] Starts With [01234567[Null..0.e0][Count(*)..$#usn8]] As ``,Count ( * )[@usn6..0x0] Limit $`8esn`[..$usn1][..'s_str'] Union All Create (:`1esn`{@usn6:$_usn4[$`4esn`..$#usn7][`6esn`..7],`8esn`:'s_str'['s_str'..$usn2][_usn3.._usn3]})<-[:`6esn`]->(#usn7 {@usn5:$0[$#usn8..01234567],`1esn`:usn2 Ends With $`5esn` Ends With `2esn`}) Merge `1esn`=((`5esn` {_usn3:$123456789[0.0..],`2esn`:010[@usn5..]})) On Match Set usn2+=$`4esn`[9e1..][0..],[usn1 In 00 Starts With _usn3 Where $`` Ends With 12e12].`3esn`? =0.12 Starts With {`1esn`:@usn6[..0xabc][..$#usn7]} Starts With {`3esn`:`8esn`[1000..$7][$`7esn`..`2esn`],_usn4:\"d_str\" Is Null Is Null},(usn1 :#usn7)-[?:usn2|#usn8{`2esn`:@usn5 In 0X0123456789ABCDEF,`1esn`:@usn6[`5esn`..$`3esn`]}]->(`4esn` {`7esn`:.e0[..999][..0X7]}).usn2 =$`3esn`[`2esn`...e0] Unwind [@usn6 In @usn5 In $`6esn` Where $usn2 Is Not Null|$`6esn`[..0X0123456789ABCDEF]][`5esn`(Distinct 0X7 In $@usn5 In 9e0,0x0)..] As `3esn` Union All Create (((`` :@usn6:`7esn`{`2esn`:0.12[0.e0..][`4esn`..]})-[`3esn`?:``|:_usn4{`6esn`:Null[01234567][01234567],usn2:_usn3 Ends With 0x0 Ends With 01234567}]->(`8esn` :_usn3{`8esn`:$`3esn` In $12 In 's_str'})-[`7esn`{usn1:0 Is Not Null}]->(:`7esn`{`6esn`:123456789 Is Null,`1esn`:00 In 12.e12}))),`4esn`=((`2esn` :`6esn`:`7esn`{`6esn`:$#usn8 Ends With 1000 Ends With .0,`7esn`:010 =~`6esn`})) Return $`6esn` =~$#usn8 As #usn8 Order By (#usn7 :#usn8)-[`6esn`:`4esn`|:`7esn` *..0x0]->({`2esn`:0.12 Contains $12 Contains `8esn`,#usn8:$#usn8 In .e12 In 9e1})[Single(@usn5 In 0X7 =~.0 =~\"d_str\" Where $_usn4[$`1esn`])][Filter(`4esn` In `6esn`['s_str'..][010..] Where @usn6[$`7esn`])] Descending Limit Null Contains 9e1;"),
    octest:ct_string("Create #usn7=((`1esn` {#usn8:usn1 Contains $``,``:0xabc[12.e12..`1esn`]})<-[:_usn3|:`4esn`{_usn4:$`3esn` =~$`6esn` =~`8esn`,`5esn`:0X7[0e0..]}]-(:`8esn`)<-[:#usn7|:_usn4 *0Xa]-(usn1 :_usn3{_usn3:9e1 Starts With _usn3 Starts With `4esn`,``:\"d_str\"})),`5esn`=(#usn7 {@usn5:$_usn4[$`1esn`],#usn7:$_usn4[$`8esn`..][07..]}) Remove Extract(@usn5 In 0X7 =~.0 =~\"d_str\" Where 07[12e12]|`3esn` Contains 0Xa).usn1?,[12.0[0Xa][00],0 Is Not Null].@usn5?,{`1esn`:@usn6[`5esn`..$`3esn`]}.usn1? Match usn2=((`5esn` :usn2:@usn6{`5esn`:0Xa In .e1 In Count(*)})) Union All Return *,[\"d_str\" Starts With $usn1,.12 Contains $`4esn` Contains $`6esn`,01234567 =~usn1] Is Null Is Null As `7esn`,$123456789 Contains usn2 As `8esn` Limit 1000 Ends With 1000 Ends With $`4esn` Remove Extract(`2esn` In `7esn` Starts With $`` Starts With $#usn7 Where $@usn6 Is Null Is Null).`4esn`,All(@usn5 In $#usn8 Is Null Is Null).usn1! Union With  *,$0[..`8esn`] As _usn4 Order By $`6esn` Is Not Null Is Not Null Desc Skip 0x0 Contains $`8esn` Contains `6esn` Limit 1e1[@usn5..] Where 1000 Contains 0.e0 Merge (#usn7 :@usn5)-[`4esn`:_usn3|:`4esn`{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}]->(:usn1{`8esn`:usn1 Contains $``}) On Match Set ``+=`6esn`[0X7..][0x0..],#usn8 =1.e1 =~$_usn4,{`8esn`:1000 Contains 0.e0,usn1:`6esn`[1e1..]}.`4esn`? =$#usn8[1e1][9e1] On Match Set `1esn`+=`` Is Not Null,{@usn6:9e0 Ends With $`7esn`}.`2esn`? =Count ( * ) =~All(_usn4 In usn1 Contains False Contains `` Where _usn4 Starts With 0X7) Create (`1esn` :`1esn`);"),
    octest:ct_string("Remove (@usn5 :`3esn`:`1esn`{_usn3:#usn7 Starts With `1esn`})<-[@usn5?:``|:_usn4]-(#usn7 {`6esn`:123456789 Is Null,`1esn`:00 In 12.e12})-[usn2 *0X0123456789ABCDEF..{usn2:`` Starts With 12}]-(`4esn` {`7esn`:.e0[..999][..0X7]})._usn4,[@usn5 In $#usn8 Is Null Is Null Where $#usn8 Is Null|123.654[@usn5]].`6esn`! Unwind [`4esn` In $`8esn` Starts With 1000 Where `5esn` In 12][..Single(`6esn` In 0X7 =~`` Where .0 Starts With `2esn` Starts With `6esn`)][..[@usn5 In $#usn8 Is Null Is Null]] As `1esn` With  's_str'[12..'s_str'] Limit #usn7 Starts With 0x0 Starts With Null Where 1e1[`6esn`..] Union All Remove None(`4esn` In `6esn`[1e1..] Where 12.0[``]).@usn5?;"),
    octest:ct_string("Unwind 1e1[.e1..] As #usn7 Unwind `3esn`(`7esn` Starts With $usn2 Starts With .e0,$_usn3 =~`7esn` =~$_usn4)[[$`2esn`[123456789..][00..],Count ( * )[@usn6..0x0]]..][Extract(#usn7 In 01234567[$`3esn`..] Where .e12 Starts With 999 Starts With 0.0)..] As usn1 Merge ((@usn5 {@usn6:$123456789[0X7..12.e12]})<-[? *0..010]-(#usn8 :`4esn`:#usn8)) On Create Set `4esn` =.e12[.12..][_usn4..] On Match Set {`2esn`:12 =~usn1 =~.e12}.usn2 =False Is Not Null Is Not Null,`3esn` =010 In @usn5 In `5esn`,[usn2 In 1000 Contains 0.e0 Where #usn7 Ends With 9e1|010 Is Null Is Null].@usn5! =$1000 Ends With 1e1 Ends With 123.654 Union Delete 12e12[.12..],`1esn` In 999 In $#usn7 Create (((`7esn` :@usn6:`7esn`{`5esn`:\"d_str\" Starts With $usn1,`5esn`:`2esn`[$`3esn`..]})-[_usn4?:`5esn`|`1esn`]-(@usn5 {``:12[usn1][True],``:$`5esn` In `2esn` In $12})<-[`` *0xabc]->(`7esn` :`2esn`:`3esn`{_usn3:9e1 Starts With _usn3 Starts With `4esn`,usn2:$`3esn` Starts With $usn1}))),`6esn`=(:`3esn`:`1esn`{_usn4:`1esn`[@usn6..$123456789],`4esn`:$usn2[..12.0]})<-[``?:@usn6]-(`6esn` :`3esn`:`1esn`{`7esn`:7 In 0xabc})-[:`4esn`|:`7esn`{`4esn`:Null Contains _usn4}]->(`6esn` :#usn8{@usn5:\"d_str\" =~`6esn` =~0Xa,_usn3:07[..010][..12.0]}) Remove [0.0 =~0X7 =~#usn7,123456789 =~_usn4 =~$0].`3esn`,[`4esn` In $_usn4[$`4esn`..$#usn7][`6esn`..7] Where 0 Is Not Null Is Not Null|$`5esn` In `2esn` In .0].``!;").
