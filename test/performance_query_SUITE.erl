%%%-------------------------------------------------------------------
%%% File        : performance_query_SUITE.erl
%%% Description : Test Suite for rule: query.
%%%
%%% Created     : 15.12.2016
%%%-------------------------------------------------------------------
-module(performance_query_SUITE).

-compile(export_all).

-include_lib("common_test/include/ct.hrl").
-include_lib("eunit/include/eunit.hrl").

%%--------------------------------------------------------------------
%% COMMON TEST CALLBACK FUNCTIONS - SUITE
%%--------------------------------------------------------------------

suite() ->
    [
        {timetrap, {minutes, 10}}
    ].

init_per_suite(Config) ->
    Config.

end_per_suite(_Config) ->
    ok.

%%--------------------------------------------------------------------
%% COMMON TEST CALLBACK FUNCTIONS - ALL
%%--------------------------------------------------------------------

all() ->
    [test_query].

%%--------------------------------------------------------------------
%% TEST CASES
%%--------------------------------------------------------------------

test_query(_Config) ->
    octest:ct_string("With  `5esn`[..123.654][...e12] As @usn6,(`6esn` {_usn3:9e12 Starts With 1e1,_usn4:`2esn`[..$_usn3]})-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->({`1esn`:#usn7[0]}) Starts With Extract(`6esn` In $`6esn`[``..][Count(*)..] Where @usn5 Is Null|0xabc In 010 In #usn7) As `2esn`,{`2esn`:'s_str'[0..],`7esn`:0Xa[Count(*)..]}[..None(#usn7 In $999 In 1e1 Where 123456789 =~@usn6)] As `1esn` Skip $`3esn`[..0X0123456789ABCDEF][..7] Limit 12.0 Starts With .12 Starts With `6esn` Where ``[$`3esn`] Merge ((`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`})) On Match Set [usn1[..$@usn6][..00],0x0[0X7],$`8esn`[123456789..][$@usn5..]].`1esn`? =999 Contains 0 Contains $`5esn`"),
    octest:ct_string("With  .e12 Starts With $7 Starts With .0 As _usn4,[010[`5esn`],usn1[$@usn5]] Starts With All(#usn7 In 9e0[$1000] Where .e1 In 123456789) Starts With (`4esn` :usn2{@usn5:True Contains .e12})<-[:`2esn`|`4esn` *1000..0X0123456789ABCDEF]-(usn2 :``:usn2) As _usn3,.e0 As _usn3 Order By @usn5(Distinct) =~[_usn3[`5esn`..][usn2..],$#usn7 =~`2esn`] =~1.e1 Ascending Skip `2esn`[$@usn6..][Null..] Merge ((:`8esn`{@usn5:usn2 Ends With .e1 Ends With $`5esn`})-[usn2?:`3esn`]->(#usn8 :usn1:`3esn`{`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})) On Create Set [#usn7 In 9e1[$`1esn`..] Where 00 Ends With $`1esn` Ends With `7esn`].`2esn` =All(#usn7 In True Contains 's_str' Contains $usn1 Where $`1esn` Starts With Count(*)) In Any(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn`[0..][999..]) In Filter(`3esn` In 9e1 Contains $999 Where .e0 Is Not Null Is Not Null),``:@usn5,@usn5+=12.e12[_usn4..$1000][$7..$999] Union With  [#usn7 In 9e1[$`1esn`..] Where $@usn5 In $`6esn` In 12e12|12.0 Is Null Is Null] Contains [`3esn` In `2esn`[..01][..True] Where $0 Ends With $usn1 Ends With $_usn3] As #usn8 Order By [#usn7 In $999 In 1e1 Where 0X7['s_str'..][01..]] Is Not Null Is Not Null Desc Limit Any(`5esn` In 0X7 In $#usn7 Where 0.12 Contains False Contains 1.e1) Contains 0X7 Contains Extract(`8esn` In 123456789 =~@usn6 Where @usn5 Contains 9e0|9e0 Contains $12 Contains `3esn`) Union Delete 0e0 =~0Xa =~$999 Unwind 9e0 =~Count(*) =~$0 As _usn3"),
    octest:ct_string("Remove Extract(`6esn` In $`6esn`[``..][Count(*)..] Where 9e0[Count(*)..0.12][$`1esn`..12.0]|07 In `6esn`).usn1,(@usn5 :`4esn`:`6esn`)-[@usn6*..{`1esn`:$`2esn` Contains Count(*)}]->(`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]}).`8esn`,{`1esn`:0xabc =~$@usn5}.#usn8 Union All Match `5esn`=(`3esn` :_usn4) Remove [$123456789 Starts With 0.12 Starts With Null].`4esn`!,(:@usn6{usn2:$123456789 Contains $#usn8 Contains ``,_usn3:`3esn`[..0X0123456789ABCDEF][..0x0]})<-[`7esn`?:usn1|`4esn`]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})<-[:_usn4]->(:usn2{@usn5:07 Ends With 9e12 Ends With `2esn`}).#usn8"),
    octest:ct_string("Optional Match `4esn`=((@usn5 {`4esn`:1000[12e12][`5esn`],`1esn`:07 Ends With 9e12 Ends With `2esn`})<-[?:`3esn`*..]-(usn2 :`1esn`:_usn4{usn2:999 Contains $1000})) Where 00[False..0e0] Delete None(`5esn` In 0X7 In $#usn7 Where 0.12 Contains False Contains 1.e1)[..{@usn5:$@usn6 Is Not Null Is Not Null}][..{`3esn`:1e1 In 0.0 In 0X0123456789ABCDEF}] Match (((`4esn` :``:usn2)<-[`3esn`?{@usn6:Count(*)[..@usn6][..`7esn`],`6esn`:`2esn` In 9e0 In 7}]-({`6esn`:@usn5[$`6esn`..][$999..],`8esn`:$@usn5[..0xabc][..$`3esn`]})-[:_usn4{`8esn`:12.e12 Is Not Null Is Not Null,#usn7:@usn6[Null...0][\"d_str\"..Count(*)]}]-(@usn6 {`5esn`:.e12 Starts With $#usn8 Starts With False}))),((@usn5 {_usn4:`5esn` Contains #usn7 Contains 9e12}))"),
    octest:ct_string("With  *,{@usn6:$`3esn`[.e1][_usn4]}[`8esn`(Distinct $``[True])..] As #usn8,999[12e12..$_usn4] As usn2 Where 01 Ends With 0Xa Ends With 0X7 Merge ((@usn5 {usn2:.12[0X7..][12e12..],`6esn`:$`4esn`[`6esn`..$12]})-[?:`4esn`|@usn5 *0Xa]-(`6esn` {`3esn`:.0[$``..0X7],`3esn`:$usn2 Is Not Null Is Not Null})<-[:_usn3|:`7esn` *1000..0X0123456789ABCDEF]-(:_usn4{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]})) Match _usn4=(@usn6 :`4esn`:`6esn`)-[ *0..01{@usn6:$0[123.654..0.e0]}]->(usn1 :`1esn`:_usn4{_usn3:@usn6[999..$_usn3][0.12..$@usn5],`1esn`:9e12[..1e1][..'s_str']})<-[`2esn`?:`6esn`|:#usn8{`2esn`:12.e12 Contains 9e1,`5esn`:.e1 Starts With 12.e12 Starts With `2esn`}]-(_usn3 {_usn3:0.12 Starts With $`8esn` Starts With @usn5}),#usn8=(((`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[@usn6?:`7esn`|:`2esn`]->({#usn8:1e1 Is Not Null Is Not Null})-[?:@usn5|_usn3{`1esn`:`2esn` Is Null,`7esn`:`` =~.12}]-(`4esn` :#usn8:`1esn`{`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12}))) Union All Optional Match (((usn1 :`8esn`)<-[@usn5? *01..123456789{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`}]->(`` :usn2{@usn5:$`4esn` Contains _usn3 Contains `8esn`,`7esn`:$`4esn`[`4esn`][Count(*)]})<-[? *0xabc]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})))"),
    octest:ct_string("Delete 0.0 Is Not Null,#usn8 Is Null Optional Match #usn8=(`5esn` :`7esn`)<-[{_usn4:1.e1[`8esn`]}]->(:@usn6$usn1)<-[`4esn`:`1esn`|`3esn` *12..]-(usn1 :`7esn`{`7esn`:9e12 Starts With 1e1,_usn3:$`7esn`[$_usn4][.e0]}),usn2=(_usn3 {`8esn`:0e0 =~7 =~12.0,_usn4:.e1[..$`3esn`][..01]})<-[_usn4{`2esn`:#usn8[`8esn`..],`2esn`:@usn6[9e12]}]-(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-(`2esn` :@usn5{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3}) Where 12.e12[0..0.12][123.654..9e12] Unwind .0[$``..0X7] As usn1"),
    octest:ct_string("Create #usn8=((usn1 :@usn6)),`7esn`=(`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})-[`3esn`]->(:@usn5{#usn7:12e12 In $`5esn`}) Detach Delete usn2 In _usn3,True In (#usn8 :`6esn`:_usn3)<-[`2esn`?:_usn4{#usn8:$12[9e0..$999]}]->({``:.e1 Starts With 12.e12 Starts With `2esn`}),`1esn` Starts With 0X7 Starts With \"d_str\" Return Distinct `1esn`(.0 Starts With `1esn`,01[`3esn`..][Count(*)..]) In [@usn6 In False Contains 0 Contains $`6esn` Where `1esn` Starts With 0xabc Starts With $usn2] As `4esn`,`7esn`[$usn1..]['s_str'..] Union Detach Delete [$`1esn`[``][07],$`4esn`[`6esn`..$12],False[$usn1][0x0]] =~[.e12 Is Null Is Null],`1esn`[0.0..1e1][0x0..7] Unwind Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $`2esn` =~9e12) Is Null Is Null As `4esn`"),
    octest:ct_string("Merge ((:@usn5{usn2:$#usn7[..$`4esn`][..01],#usn7:False Is Null})<-[*..{`7esn`:$``[..\"d_str\"][..$#usn8],`7esn`:$`` Contains $`2esn` Contains $usn2}]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})) With Distinct *,1e1 Is Not Null Is Not Null Where `7esn` Ends With $7 Ends With $@usn5 Remove None(#usn7 In True Contains 's_str' Contains $usn1 Where $`2esn` Contains Count(*)).@usn5,_usn3:_usn3 Union Remove Extract(usn2 In 7[12] Where $_usn3 Is Null|`3esn`[..0X0123456789ABCDEF][..0x0]).#usn8!,Single(`6esn` In $`6esn`[``..][Count(*)..] Where 1.e1 Ends With $_usn4 Ends With #usn7).`3esn`! Detach Delete `4esn`($_usn4 Starts With $1000 Starts With 12)[{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}],$`3esn`[.e1][_usn4],$7[$12..12e12][1.e1..9e1] With  $999 In 12 In 1.e1 Order By (`5esn` :`1esn`:_usn4)-[?:#usn7|@usn5 *0X0123456789ABCDEF..{_usn3:@usn5 Is Not Null}]-(#usn8 {`5esn`:$12[$usn1..][Count(*)..],`7esn`:0e0[``..$1000][$7..12.e12]})[[.e0 Is Null Is Null,9e1 Contains 12,'s_str' Ends With `7esn` Ends With 010]..] Descending,Single(#usn7 In True Contains 's_str' Contains $usn1 Where `7esn`) Ends With [0Xa Ends With $`3esn` Ends With $1000] Ends With {usn1:0x0[0X7],@usn5:`4esn`[.12][$@usn6]} Desc Limit 00 In @usn6 In 0 Where $@usn6 In @usn6 In 1e1"),
    octest:ct_string("With Distinct _usn3[`2esn`..0X7][0.e0..$`3esn`] As `7esn` Order By [usn2[12e12..]['s_str'..]] =~Single(`8esn` In 123456789 =~@usn6 Where $`4esn`[`4esn`][Count(*)]) Ascending,`4esn`[\"d_str\"]['s_str'] Ascending,.12 In `8esn` In $#usn8 Asc Skip None(@usn6 In 010[`5esn`] Where 123.654 In $`7esn`)[(`` {`7esn`:$#usn7[..0Xa]})<-[`1esn`?:usn1|`4esn` *00..0Xa]-(_usn4 :@usn5{usn1:$#usn7 Starts With 01234567 Starts With $0})<-[usn1? *01234567..{@usn5:01[`3esn`..][Count(*)..]}]->(`3esn` :`6esn`:_usn3{`4esn`:12.0 Starts With .12 Starts With `6esn`,#usn8:0.0 Is Null Is Null})..[False Contains 0 Contains $`6esn`,`1esn` Is Not Null Is Not Null]] Limit [0.e0[..$7],$usn2[True..0X0123456789ABCDEF],`2esn` =~.e12 =~0X0123456789ABCDEF] Contains Extract(#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[..$`8esn`][..Null]|@usn5 Contains #usn8 Contains 12.0) Union All With  *,{@usn5:$@usn6 Is Not Null Is Not Null} Starts With [`3esn` In `2esn`[..01][..True] Where 0x0[usn1..usn1]] Starts With Extract(`3esn` In `2esn`[..01][..True] Where usn2[12.e12..]|0X7['s_str'..][01..]) As @usn6,None(#usn8 In `7esn` Where 9e1 Starts With Count ( * ))[..Any(usn2 In 7[12] Where 9e1 Is Not Null Is Not Null)] As `4esn` Order By 0x0[..9e0] Asc Skip Any(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07[_usn3..][`6esn`..]) =~Extract(_usn4 In 12e12 In 123456789 Where .e12[@usn6..][010..]) =~Single(_usn4 In 12e12 In 123456789 Where False Is Null) Where _usn3[12.e12..][`5esn`..]"),
    octest:ct_string("Match (((@usn6 )<-[`6esn`? *01234567..]->({`3esn`:`5esn` Contains `1esn` Contains usn1,`1esn`:999[@usn5..][Null..]})<-[? *0X7..{``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]}]-(:`6esn`:_usn3{`8esn`:.e12[..999][..@usn5],`3esn`:$_usn3 Is Null}))) Remove {`4esn`:$_usn4 Starts With $1000 Starts With 12,`5esn`:0 Ends With 12.e12 Ends With usn2}.``?,Single(`3esn` In 9e1 Contains $999 Where $`5esn` Is Not Null Is Not Null)._usn4? Union Remove [#usn7 In $999 In 1e1 Where .e12 Starts With $12 Starts With .e12|$usn2[`4esn`..9e12]].`6esn`,`5esn`:``:usn2,(`3esn` {`8esn`:`5esn` Contains #usn7 Contains 9e12})-[:`` *0..01]-({`7esn`:0xabc In Null,_usn4:.e12[0Xa..]})-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]->(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]})._usn3 Merge #usn7=(((:usn1:`3esn`{_usn3:$`6esn`[1.e1][$_usn3]})-[:`` *123456789..{`1esn`:`8esn` Is Not Null Is Not Null}]-(#usn8 :`2esn`)<-[ *00..0Xa]->(`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null}))) On Create Set [`6esn` In $`6esn`[``..][Count(*)..] Where 0x0[$0][7]|$`4esn`[`8esn`]].usn1 =Any(_usn4 In 12e12 In 123456789 Where _usn3 In $`8esn` In @usn6)[Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789])][All(@usn5 In 9e0 Ends With $#usn8)] On Match Set Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn` Contains .e0 Contains 0Xa).@usn6! =0.e0 Is Not Null Is Not Null,`1esn` =07 In `6esn`"),
    octest:ct_string("Return Distinct *,{`3esn`:$@usn6 Is Not Null Is Not Null,`1esn`:12e12 =~1e1}[[@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str']|$`3esn`[..0xabc][..$7]]..][(_usn4 {`6esn`:$_usn4 =~$`1esn` =~`2esn`,_usn3:#usn8 Is Null})-[?:#usn7|@usn5 *0X0123456789ABCDEF..{_usn3:@usn5 Is Not Null}]-(#usn8 {`5esn`:$12[$usn1..][Count(*)..],`7esn`:0e0[``..$1000][$7..12.e12]})-[_usn4?{_usn3:.e1[.e1..`1esn`],@usn6:.12 In `8esn` In $#usn8}]->(usn2 :@usn5)..] Union All Return *,01[`8esn`..9e12][.12..0] As @usn6,$`1esn` =~1e1 As `4esn` Order By 9e1 =~$_usn4 =~1.e1 Desc,$@usn5[$12...e12][0X0123456789ABCDEF..$999] Asc,(:`6esn`:_usn3{@usn6:7 =~`4esn`,_usn3:`6esn`[$1000][`3esn`]})-[_usn4:_usn4 *0X7..{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]}]-(:`6esn`:_usn3{`4esn`:#usn7 Contains $0 Contains $usn2})[[$`6esn`[1.e1][$_usn3]]][usn2(0xabc In Null)] Ascending Skip $1000 Is Not Null With  $_usn3[$12] Match usn1=((`6esn` :`5esn`)),#usn8=((:@usn5{`5esn`:`4esn` Starts With 0e0})) Where $usn2[`4esn`..9e12] Union With Distinct 0Xa In #usn7 In 's_str',`4esn` Starts With 0e0 As `7esn` Skip (#usn7 {_usn4:1.e1[`8esn`]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) Contains Extract(#usn7 In 9e0[$1000] Where _usn4 Is Not Null Is Not Null|usn2 Ends With .e1 Ends With $`5esn`) Where .e0 Optional Match `7esn`=((`4esn` )-[#usn8? *1000..0X0123456789ABCDEF{`7esn`:Count ( * )[$`5esn`..][$7..],`6esn`:`6esn` Ends With _usn4 Ends With False}]->(`` :_usn3)-[`4esn`?:`5esn`|:usn2]->(:`4esn`:`6esn`{usn2:$`8esn` Is Not Null Is Not Null})) Where 010 Starts With 0 Starts With 0.0"),
    octest:ct_string("Unwind {#usn7:$usn2[0.e0],`6esn`:.e1[..\"d_str\"][..$123456789]}[..Extract(@usn5 In 9e0 Ends With $#usn8 Where $7 In 0.e0 In 999|Count ( * ) In 0.12)][..[@usn6 In 010[`5esn`] Where 's_str' Starts With 9e0 Starts With usn2|$`5esn` =~$0 =~``]] As usn1 Unwind {@usn6:123.654 In 12,#usn7:12.e12 Ends With `` Ends With 0} Contains [`1esn`[usn1][0xabc],`5esn` Contains `7esn`,$``[True]] As usn1 Union All Return .e12[$@usn6..00][01234567.._usn3] Skip @usn5(Distinct 12e12 In 123456789,12.0 =~@usn6 =~$`2esn`)[`8esn`(123456789 =~$999)][`2esn`($`2esn`[..$`3esn`][..12e12])] Limit 07 Is Not Null Is Not Null"),
    octest:ct_string("Merge @usn5=(({@usn6:#usn7[`8esn`..usn1][$999..`7esn`]})) Union All Unwind `7esn` In 010 In usn1 As usn1 Merge `3esn`=(((:`6esn`:_usn3{`8esn`:.e12[..999][..@usn5],`3esn`:$_usn3 Is Null})<-[? *0X7..]->(`5esn` :``:usn2{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3})-[_usn4]->(:`6esn`:_usn3{_usn3:usn1 Is Null Is Null,#usn8:9e1[$``..][0.e0..]}))) On Match Set @usn6 =999[..`1esn`][..07],`3esn`+=$@usn5[0.0][0X0123456789ABCDEF],`6esn`+=$usn1[1000][.12] On Match Set #usn8+=Count(*)[$@usn5],@usn6 =0 =~1e1,`2esn`+=Extract(#usn7 In 9e1[$`1esn`..] Where $999[``]) Starts With (`6esn` :@usn6)<-[ *..07]-(:_usn3{`7esn`:9e0 Ends With $#usn8}) Starts With (#usn7 :@usn6)<-[? *01..123456789]-(`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})"),
    octest:ct_string("Return Distinct .0[$``..0X7],'s_str' Ends With `7esn` Ends With 010 Limit $_usn3 Is Not Null Merge ({`1esn`:1.e1[`8esn`]})<-[:``{``:.0[$``..0X7]}]-(#usn8 :`8esn`) On Create Set All(usn2 In False[$usn1][0x0] Where `2esn`[..01][..True]).`1esn`? =$usn2[`2esn`..$`1esn`],{usn1:#usn8 =~.e0,_usn3:$_usn4 Is Null Is Null}.`1esn` =$`7esn`[.e1][12.0] Delete 12.e12 Ends With $``,{_usn4:`1esn` Is Not Null Is Not Null,@usn5:0.12[$0..$usn2]} Is Not Null Is Not Null,{#usn7:usn1 In ``}[None(`3esn` In `2esn`[..01][..True])..Extract(@usn5 In 9e0 Ends With $#usn8 Where 0Xa[$`8esn`..][$_usn4..])] Union Create #usn8=((usn1 {@usn5:_usn4[$usn1..01234567][123.654..`5esn`],`5esn`:1.e1 =~$_usn4})-[?:_usn4]->(`2esn` :usn2)<-[usn1 *999..{#usn8:$999 Ends With .e0,_usn4:`4esn`[\"d_str\"]['s_str']}]->({`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})) Union All Merge (`2esn` :`1esn`:_usn4)-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-({`6esn`:9e12 =~@usn6}) On Match Set `5esn`+=010[..7][..`4esn`],(`2esn` :@usn5)-[`5esn`? *01..123456789{`5esn`:@usn6[9e12],`5esn`:@usn6[999..$_usn3][0.12..$@usn5]}]-(`1esn` {`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]}).`4esn`! =$@usn6 Ends With `1esn`,`6esn` =.0[$``..0X7]"),
    octest:ct_string("Optional Match `5esn`=(({#usn8:1e1 Is Not Null Is Not Null})<-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->(usn2 )<-[usn2?:@usn5|_usn3*{_usn4:@usn5 Starts With $`3esn`,#usn7:$`5esn` Is Not Null}]-(#usn7 :``:usn2)) Merge ((@usn6 {_usn4:0X0123456789ABCDEF Contains 12e12 Contains 12.e12})<-[`6esn`:``]->({@usn6:$1000 Is Not Null})-[?:`5esn`|:usn2 *123456789..{#usn7:$`1esn` =~999,`4esn`:$@usn6[00]}]->(`` {#usn8:.e12 Is Null Is Null,@usn6:`1esn` Is Not Null Is Not Null})) On Match Set `8esn` =Count(*)[9e12..12.0],@usn5+=9e0[Count(*)..0.12][$`1esn`..12.0] Union With  9e1[usn1..0x0][12.e12..12.0] Order By $@usn6[$0..9e12][.e12..Null] Desc,.e0 Is Not Null Is Not Null Desc,usn2[..$usn1][..$#usn8] Asc Skip $7 Ends With Count ( * ) Where 's_str' Starts With 9e0 Starts With usn2 Unwind `` Is Not Null Is Not Null As _usn4 Optional Match (usn2 :``:usn2) Where @usn6 Is Not Null Is Not Null"),
    octest:ct_string("Merge #usn7=(((:`6esn`:_usn3{``:usn1 Ends With 9e0 Ends With 9e0,`5esn`:$`7esn`[.e1][12.0]})-[`3esn`?:`5esn`|:usn2{`7esn`:0X7['s_str'..][01..],`8esn`:0.e0[0X0123456789ABCDEF..]}]-(usn2 :usn1:`3esn`)-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->({usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]}))) On Match Set @usn6+=[00[..$`8esn`][..7],`7esn`[$usn1..]['s_str'..]] Is Not Null Is Not Null On Match Set None(`6esn` In $`6esn`[``..][Count(*)..] Where 07 Contains `3esn` Contains `7esn`).`7esn`! =07[..07][..0X7],`4esn`:`1esn`:_usn4 Remove [`5esn` In 0X7 In $#usn7 Where @usn6 Is Not Null Is Not Null|9e1[..123456789]].``?,Any(#usn7 In True Contains 's_str' Contains $usn1 Where `5esn` Contains $`5esn` Contains 0X7).usn1 Union All With Distinct `4esn` Is Not Null Is Not Null,$`5esn` In `2esn` In `2esn` As usn2,$999[0Xa..][9e1..] As `4esn` Order By 123456789 =~True =~#usn7 Asc,True[..#usn8] Ascending Skip (`2esn` $`6esn`)<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(usn2 {usn1:.e12 Ends With 0Xa Ends With 0xabc}) Ends With Extract(@usn6 In False Contains 0 Contains $`6esn` Where .e1[usn2..$_usn3][.0..$#usn7]) Ends With Single(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]) Detach Delete [`4esn`[.12][$@usn6],.0[..'s_str'][..01234567],1.e1 =~.12][Any(usn2 In False[$usn1][0x0] Where False Is Null)..],{#usn7:$usn2[0.e0],`6esn`:.e1[..\"d_str\"][..$123456789]}[..Extract(@usn5 In 9e0 Ends With $#usn8 Where $7 In 0.e0 In 999|Count ( * ) In 0.12)][..[@usn6 In 010[`5esn`] Where 's_str' Starts With 9e0 Starts With usn2|$`5esn` =~$0 =~``]],Count(*) In #usn8 In \"d_str\" Detach Delete [0.0 Is Not Null,$`4esn`[`8esn`],$123456789[12e12..9e0]] =~.e12,None(#usn7 In 9e1[$`1esn`..] Where 1.e1[12.e12..]) Contains [$`2esn` Ends With `6esn`,9e1[..123456789]] Contains [12.0 In 123.654 In _usn4],`1esn`(#usn7[..07])[..[#usn8 In `7esn` Where 9e1 Starts With Count ( * )|`3esn` Starts With 9e0 Starts With usn1]]"),
    octest:ct_string("Create _usn4=({usn2:.12[0X7..][12e12..],`6esn`:$`4esn`[`6esn`..$12]})-[? *12..{usn2:$`8esn`[123456789..][$@usn5..]}]->(`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]}),`7esn`=((:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})<-[`2esn`? *..07{`2esn`:`3esn`[0x0..]}]->(`5esn` )) Unwind #usn7 In 0.e0 As usn1 Detach Delete True Contains 's_str' Contains $usn1,$`5esn`[..00] Union Optional Match usn2=((usn1 {_usn3:9e0[0X7..$`6esn`][123456789..0],`3esn`:123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]})-[:`6esn`|:#usn8{_usn4:0Xa Ends With $`3esn` Ends With $1000}]->(:`5esn`{`4esn`:0Xa[..Count ( * )][..$123456789]})),`2esn`=(((_usn3 :`1esn`:_usn4{#usn8:$999 Ends With .e0,_usn4:`4esn`[\"d_str\"]['s_str']})-[`4esn`?*..{``:`` =~.12,usn1:123.654 Is Not Null}]-(@usn6 :`4esn`:`6esn`{``:999 Contains 0 Contains $`5esn`,`6esn`:_usn3[12.e12..][`5esn`..]})-[:@usn6|:`7esn`{#usn7:.0[.e12..],usn2:usn2 =~usn1 =~Count ( * )}]->({usn2:@usn6 In .12 In `3esn`,`1esn`:usn2[12e12..]['s_str'..]}))) Where 00 Ends With `` Ends With 12.e12 Remove `5esn`:_usn4"),
    octest:ct_string("Match ((({`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12})<-[ *7..{#usn7:$`8esn`[12.e12][_usn4],`2esn`:$0[123.654..0.e0]}]-(`` :#usn8:`1esn`{`8esn`:12[$`5esn`..][False..]})-[`3esn` *..07{usn2:True Contains 0x0 Contains $_usn3}]-({``:``[$`3esn`],#usn8:$@usn6[00]}))) Where #usn7 =~9e12 With Distinct *,1e1 Is Not Null Is Not Null Where `7esn` Ends With $7 Ends With $@usn5 Union All Merge _usn4=(`1esn` {@usn5:`2esn` Starts With $`4esn`}) On Match Set @usn5+=$0[123.654..0.e0],Any(`8esn` In 123456789 =~@usn6 Where .e1 =~_usn4 =~_usn4)._usn3? =01[..$`8esn`][..9e0],usn1 ={_usn4:``[9e12][$999],#usn8:123.654 In 12} Starts With Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0[0.0]) Starts With Filter(`6esn` In $`6esn`[``..][Count(*)..]) Match _usn4=(((:#usn7:`5esn`{`4esn`:$``[..\"d_str\"][..$#usn8]})<-[`6esn`? *00..0Xa]->(:#usn8:`1esn`$`7esn`)-[usn2{``:$`1esn` =~999}]-(:usn1:`3esn`{``:$#usn7 In $@usn5 In $`1esn`,#usn7:999[@usn5..][Null..]}))) Remove Filter(`3esn` In 9e1 Contains $999 Where $`5esn` Is Not Null Is Not Null).`7esn`,@usn6:``:usn2,Any(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 07 Is Not Null Is Not Null).`6esn`? Union Merge `3esn`=(usn1 :`7esn`{`7esn`:9e12 Starts With 1e1,_usn3:$`7esn`[$_usn4][.e0]}) On Match Set _usn3+=#usn7[..07],(:`2esn`{`3esn`:9e1 Ends With Count(*) Ends With $7})-[#usn7?{`5esn`:.e12 Starts With $#usn8 Starts With False}]->(usn1 :`7esn`).`4esn` =1.e1[$`3esn`][0Xa],All(@usn5 In 's_str'[0..] Where `2esn`[..01][..True]).`2esn`! =`3esn`(#usn8 =~0.e0,1000[0e0][1e1])[[_usn3[0x0],1e1 In 0.0 In 0X0123456789ABCDEF]] On Create Set Filter(usn2 In False[$usn1][0x0] Where .e1[usn2..$_usn3][.0..$#usn7]).``! =12 Contains 01234567"),
    octest:ct_string("Match `2esn`=(((`6esn` :`4esn`:`6esn`)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})<-[`4esn` *0Xa{@usn6:999 Starts With `2esn` Starts With .e1,`4esn`:$@usn5[..0xabc][..$`3esn`]}]->(@usn6 :``:usn2))),`7esn`=((:#usn7:`5esn`{`3esn`:Null[..0]})<-[@usn5? *0..01{`3esn`:$`1esn` In .e0,@usn6:12.0 =~@usn6 =~$`2esn`}]->(`6esn` :#usn7:`5esn`{_usn3:_usn4 Is Null Is Null})) Where $`5esn` =~usn1 Union All With Distinct *,@usn5 Contains #usn8 Contains 12.0 As `6esn`,{_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}[..Single(@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str'])][..None(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $12[9e0..$999])] Skip 0.0 Is Null Is Null Where 07 Ends With 9e12 Ends With `2esn` With  12.e12[..$`6esn`] As `7esn`,Extract(usn2 In 7[12] Where $@usn5[0.0][0X0123456789ABCDEF])[[#usn7 In 9e0[$1000] Where 01 Ends With 0Xa Ends With 0X7|`2esn`[$usn2][12.0]]..][Filter(#usn8 In `7esn` Where @usn6[999..$_usn3][0.12..$@usn5])..] As ``,1.e1 Contains `6esn` Contains 0.e0 Skip Any(usn2 In 7[12] Where 0X7[.0])[Any(`6esn` In $`6esn`[``..][Count(*)..] Where $7 In $usn1 In 999)..#usn8(Distinct $_usn4 Is Null Is Null,01[`8esn`..9e12][.12..0])] Where 999 Contains $1000"),
    octest:ct_string("With  *,None(`8esn` In 123456789 =~@usn6 Where .e12 Starts With $12 Starts With .e12) Ends With Filter(`5esn` In 0X7 In $#usn7 Where 0x0[0X7]) Ends With Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12) As #usn7,@usn5 Contains #usn8 Contains 12.0 Order By 12[..0e0][...e1] Descending Where 0X0123456789ABCDEF Contains 12e12 Contains 12.e12 Unwind usn2[..$usn1][..$#usn8] As `` Return *,'s_str' Ends With `7esn` Ends With 010 Order By #usn7[``] Desc,`7esn` Starts With @usn5 Ascending Skip @usn6 =~999 =~@usn5 Union Remove Filter(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`).#usn7,[usn2 In 7[12] Where 12e12 Contains `2esn`].@usn5! Union All Merge @usn5=((:``:usn2{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7})) Detach Delete 12.e12 =~.0 =~usn1"),
    octest:ct_string("Detach Delete #usn7 In 0.e0,07,[.e0 Is Not Null Is Not Null,$#usn7 Contains $`7esn` Contains .e12,123.654 Is Not Null] In {`6esn`:0X7['s_str'..][01..],#usn7:12.e12 Is Not Null Is Not Null} In Any(`5esn` In `7esn`[$usn2..][$123456789..] Where `2esn` =~.e12 =~0X0123456789ABCDEF) Unwind Extract(#usn7 In 9e1[$`1esn`..] Where @usn5 Is Null)[All(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789])..] As `7esn` Return 1e1 Contains 's_str' Contains `3esn` Order By [9e12[9e1]][[_usn3[`2esn`..0X7][0.e0..$`3esn`]]..] Ascending,Any(#usn7 In 9e1[$`1esn`..] Where #usn7[0])[[00[12..$`6esn`],$`4esn`['s_str'..]]..] Ascending,9e1[$1000][7] Descending Skip 9e12[_usn4..$`5esn`][_usn4...e1] Limit $0 =~9e1 =~$`2esn` Union Unwind @usn6[123.654..][0x0..] As `2esn` Delete [_usn4 In 12e12 In 123456789 Where `3esn`[0X0123456789ABCDEF..][07..]] Contains Extract(`5esn` In 0X7 In $#usn7|0[1e1][$usn1]) Contains None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07 Is Not Null Is Not Null),0x0 In `8esn`"),
    octest:ct_string("With Distinct 0.e0['s_str'..][01234567..] As `7esn`,Single(_usn4 In 12e12 In 123456789 Where 0e0 =~7 =~12.0) Starts With Extract(#usn7 In 9e0[$1000] Where 123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]|9e12 =~@usn6),[#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`]][[`2esn` Is Null]][Extract(#usn7 In $999 In 1e1|01234567[Null..$_usn3])] Skip $`6esn`[1.e1][$_usn3] Limit usn1 Is Not Null"),
    octest:ct_string("With  {#usn8:1.e1 Is Null Is Null,_usn4:0xabc In 123456789 In 0x0}[All(@usn6 In 010[`5esn`] Where 00[1.e1..])..],`5esn`(0[1e1][$usn1],Null =~`6esn`)[usn2(Distinct)..][Single(#usn7 In 9e0[$1000] Where 01 Ends With 0Xa Ends With 0X7)..] As `1esn`,12.0 Starts With $`2esn` Starts With .e1 Order By [#usn8 In `7esn` Where $`3esn` Contains $`1esn`|$0[123.654..0.e0]][usn1(Distinct 999 Contains $1000,12[123.654..])..[.e12[..999][..@usn5],12.e12 =~.0 =~usn1,`6esn`[$1000][`3esn`]]][[@usn6 In 010[`5esn`] Where $usn2[`2esn`..$`1esn`]]..[`3esn` In 9e1 Contains $999 Where .12 In `8esn` In $#usn8]] Ascending Skip `1esn`(#usn7[..07])[..[#usn8 In `7esn` Where 9e1 Starts With Count ( * )|`3esn` Starts With 9e0 Starts With usn1]] Limit _usn3 =~`2esn` =~0 Where #usn7[0.e0..]['s_str'..] Merge ((@usn6 :@usn6{_usn4:#usn8 Is Not Null})-[_usn4? *999..{_usn3:$`5esn` =~usn1}]-(`5esn` :#usn8:`1esn`)<-[`1esn`:`8esn` *00..0Xa{#usn8:0X7['s_str'..][01..],``:$usn2 =~1.e1 =~usn1}]->(:_usn3{_usn4:.e1[7..][9e0..]})) On Match Set (:``:usn2{`4esn`:#usn7 Contains $0 Contains $usn2})<-[:`8esn` *0X7..]->(`4esn` :#usn7:`5esn`{@usn5:$`` Contains $`2esn` Contains $usn2})<-[`2esn`? *01..123456789]-(`2esn` :@usn6).`8esn` =`7esn`[1e1] On Create Set `7esn` ={usn2:_usn3[0x0]} In Extract(#usn7 In 9e0[$1000] Where $_usn3 Is Null|010 Starts With 0 Starts With 0.0) In {`7esn`:False[$`4esn`..]} Remove Filter(usn2 In 7[12] Where $#usn8[12.e12..`8esn`][12.0..0.0]).``,[`8esn` In 123456789 =~@usn6 Where ``[9e12][$999]].@usn5?,`4esn`:`7esn` Union All Match (:#usn8:`1esn`{usn2:$`7esn`[.e1][12.0],``:$`1esn` Contains 1e1 Contains @usn6}) Unwind usn1[...e12][..1.e1] As #usn8 Union All Merge ((:`8esn`{``:.e1 Starts With 12.e12 Starts With `2esn`})<-[?{``:00 Contains Count ( * ) Contains 0x0,#usn8:123.654 In $`7esn`}]-(:usn2{``:0.0 =~9e0 =~$0})) On Create Set usn1 =[#usn7 In True Contains 's_str' Contains $usn1 Where $@usn6 In @usn6 In 1e1|12.0[$1000..][#usn7..]][Any(_usn4 In 12e12 In 123456789 Where .e12[@usn6..][010..])..Single(usn2 In False[$usn1][0x0] Where 9e1 Is Not Null Is Not Null)],`6esn` =12.e12 =~0X0123456789ABCDEF =~1.e1 Detach Delete 9e1[_usn3] Return Distinct $#usn7[..9e0][..123.654] As @usn6 Order By Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4) Ends With [$@usn6 Is Not Null Is Not Null] Desc,None(#usn7 In $999 In 1e1 Where `1esn`[0.12..][@usn6..])[..[_usn4 In 12e12 In 123456789 Where 1.e1 =~$_usn4]] Desc,None(#usn7 In $999 In 1e1 Where _usn3 Contains 9e12 Contains `8esn`)[..Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 0xabc In 123456789 In 0x0|Count(*)[..@usn6][..`7esn`])] Desc Limit `6esn`"),
    octest:ct_string("Optional Match ((#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})<-[``:`4esn`|@usn5 *0xabc{#usn8:9e1 Contains $999,`5esn`:0e0[01][$`7esn`]}]-(_usn3 :`6esn`:_usn3{`6esn`:0.0 Is Not Null,`6esn`:$`8esn`[..True][.._usn4]})),usn2=((_usn3 :_usn4)-[`3esn`:`2esn`|`4esn`]->({usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})<-[:@usn6|:`7esn` *01..123456789]->(:`6esn`:_usn3{``:usn1 Contains 010,`2esn`:$0 In `3esn` In 07})) Where Null =~`6esn` With Distinct *,`5esn` Contains `5esn` Contains $_usn3 Limit False Starts With 0X7 Starts With 01234567 Where 9e1[_usn3] With Distinct .0[..'s_str'][..01234567] Order By {_usn4:01234567[Null..$_usn3],usn1:$123456789[12e12..9e0]} Desc,`1esn` Starts With 0X7 Starts With \"d_str\" Descending,9e1[$#usn8][$1000] Asc Skip Extract(#usn7 In 9e0[$1000] Where _usn4 Is Not Null Is Not Null|usn2 Ends With .e1 Ends With $`5esn`)[Any(@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``)][Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where 1e1 Contains 's_str' Contains `3esn`|$`2esn` Ends With `6esn`)] Limit _usn3 =~9e1 =~12e12 Union Match ({@usn6:0x0[Count(*)..@usn6][Count(*)..0Xa],`7esn`:0.0 =~9e0 =~$0})-[ *7..{usn1:0x0[0X7],@usn5:`4esn`[.12][$@usn6]}]->(:_usn3{_usn3:$`3esn`[.e1][_usn4]})-[_usn4 *01234567..{@usn5:0xabc =~$@usn5,usn1:0Xa[$`8esn`..][$_usn4..]}]->(`5esn` :`4esn`:`6esn`) Where 9e12 =~@usn6 Create (:_usn4)<-[`5esn` *0xabc]->(`` :`6esn`:_usn3)-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01}),`7esn`=((_usn3 :`7esn`)) With Distinct *,`4esn` Ends With 12 Ends With .12 As usn2,`3esn`(`7esn`,0x0 Contains $`6esn` Contains `4esn`) Is Null Is Null As usn1 Order By usn1[..$@usn6][..00] Desc Skip 9e1[$`1esn`..] Where usn1[$@usn5]"),
    octest:ct_string("With Distinct 01234567[$`2esn`][0Xa],`4esn`[.12][$@usn6] Order By 0[01234567..][0X0123456789ABCDEF..] Desc Where _usn4 Is Null Is Null With  *,(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})-[? *0Xa{usn1:`3esn`[0x0..]}]->(:`5esn`{`1esn`:0.e0}) Is Not Null Is Not Null As `3esn` Union All Optional Match `5esn`=(((usn1 :`8esn`)<-[@usn5? *01..123456789{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`}]->(`` :usn2{@usn5:$`4esn` Contains _usn3 Contains `8esn`,`7esn`:$`4esn`[`4esn`][Count(*)]})<-[? *0xabc]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]}))),`2esn`=(((`7esn` )<-[`4esn` *0Xa{@usn6:999 Starts With `2esn` Starts With .e1,`4esn`:$@usn5[..0xabc][..$`3esn`]}]->(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"})<-[usn2?:@usn5|_usn3*{_usn4:@usn5 Starts With $`3esn`,#usn7:$`5esn` Is Not Null}]-(#usn7 :``:usn2))) Create @usn5=(:@usn5{#usn7:12e12 In $`5esn`})<-[?{``:00 Contains Count ( * ) Contains 0x0,#usn8:123.654 In $`7esn`}]-(:usn2{``:0.0 =~9e0 =~$0})-[?*]-({`8esn`:`5esn` Contains #usn7 Contains 9e12}) Union All Unwind usn2[..$usn1][..$#usn8] As ``"),
    octest:ct_string("Merge @usn6=(:usn2{`6esn`:#usn7[$`3esn`..$1000][0.0..`2esn`],``:010 Starts With 0 Starts With 0.0}) On Create Set usn2+=$#usn7 Starts With $`2esn`,`4esn`+={#usn8:0.0 =~9e0 =~$0,`5esn`:Count ( * ) Ends With $123456789} Is Not Null,`8esn`+=12.e12 Ends With `` Ends With 0 Unwind $@usn5[0.0][0X0123456789ABCDEF] As usn1 Union All Match `8esn`=((_usn4 :`6esn`:_usn3)<-[`3esn`?:`2esn`|`4esn` *123456789..{_usn4:1.e1[`8esn`]}]->(`6esn` )<-[`5esn`?:`8esn`]->({``:12 Starts With #usn7 Starts With 0Xa,`8esn`:``[usn1][`5esn`]})),`8esn`=((_usn3 {`6esn`:@usn5[$`6esn`..][$999..],`8esn`:$@usn5[..0xabc][..$`3esn`]})<-[``:`5esn`|:usn2{`5esn`:_usn4[0]}]-(`2esn` {``:$0 =~9e1 =~$`2esn`,`8esn`:`5esn`[..123.654][...e12]})) Where 1000[12e12][`5esn`] Union Match ((#usn7 {`6esn`:$`2esn` Contains Count(*)})-[?:_usn4]->(`2esn` :usn2)) Detach Delete (`2esn` :usn1:`3esn`)-[@usn5:`5esn`|:usn2 *0Xa{#usn7:`7esn`[$usn2..][$123456789..]}]-({`7esn`:9e0 Contains $12 Contains `3esn`,`5esn`:.e0 Contains $#usn8})<-[?:`3esn`]-(`8esn` :#usn8:`1esn`{usn2:12.e12 Ends With $``,`2esn`:1e1 Contains 's_str' Contains `3esn`})[({usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]})],0X7 In $#usn7,Single(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 999 Contains $1000)[(`6esn` :@usn6)<-[ *..07]-(:_usn3{`7esn`:9e0 Ends With $#usn8})][#usn8($1000 Is Not Null,$`5esn`[0X7..010][`7esn`..'s_str'])]"),
    octest:ct_string("Return $123456789 Starts With 0.12 Starts With Null As _usn3 Order By #usn7[``] Desc,{`5esn`:`6esn`[$`8esn`][9e1]} Is Not Null Is Not Null Ascending,`` Is Null Descending Skip 0X0123456789ABCDEF In $7 Limit All(`8esn` In 123456789 =~@usn6 Where @usn5 Contains 9e0)[(:#usn7:`5esn`)<-[#usn8? *0Xa]-(`5esn` :`5esn`{#usn7:``[$`3esn`]})<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(usn2 {usn1:.e12 Ends With 0Xa Ends With 0xabc})..] With Distinct Count(*) In #usn8 In \"d_str\" As ``,$`4esn` Starts With 0 Starts With `7esn` As usn2 Order By $7 Starts With 12.e12 Starts With $@usn6 Desc,1.e1 Is Null Is Null Descending Skip $`1esn`[``][07] Limit `5esn` Contains 1.e1 Contains .e12 Where 9e1 Contains $999 Detach Delete All(#usn7 In $999 In 1e1 Where 1.e1 In 1000 In _usn3) Contains (`6esn` :`8esn`{@usn6:12.e12 Contains #usn7 Contains $_usn4})-[`8esn`{`7esn`:9e12 Starts With 1e1}]-(_usn3 :_usn4) Contains [`8esn` Is Not Null Is Not Null,12 Starts With #usn7 Starts With 0Xa,.0 Starts With `1esn`],usn2 Ends With $`4esn`"),
    octest:ct_string("Detach Delete 12.e12 =~.0 =~usn1 Merge ({`7esn`:`4esn` Is Not Null Is Not Null,`4esn`:`4esn` Ends With 12 Ends With .12})<-[`5esn`?:`7esn`|:`2esn` *0x0..]-(`4esn` :#usn7:`5esn`{@usn5:$`` Contains $`2esn` Contains $usn2}) On Match Set _usn3 =Single(usn2 In 7[12] Where `7esn` Is Null)[..Single(`6esn` In $`6esn`[``..][Count(*)..] Where $7 In $usn1 In 999)][..Any(#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4)] Union All Remove [@usn5 Is Not Null]._usn4!,[@usn6 In 010[`5esn`] Where 9e1 Ends With Count(*) Ends With $7|`1esn` Is Not Null Is Not Null].`` Create _usn3=((:``:usn2{`5esn`:1.e1[`8esn`],`1esn`:.e0})-[`3esn`:`2esn`|`4esn`]->(`` {``:$@usn6 Ends With 12.e12 Ends With @usn5,`2esn`:$`3esn` Ends With 01234567})<-[`6esn`?:_usn3|:`7esn` *..010]->(:_usn3{_usn4:.e1[7..][9e0..]})),@usn6=(`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`}) Union Match (`1esn` {#usn7:$`1esn` Ends With 0X0123456789ABCDEF,`3esn`:.12 Starts With _usn3 Starts With $``}) Where True Starts With Null Return *,True In (#usn8 :`6esn`:_usn3)<-[`2esn`?:_usn4{#usn8:$12[9e0..$999]}]->({``:.e1 Starts With 12.e12 Starts With `2esn`}) As `5esn`,Single(usn2 In False[$usn1][0x0] Where $@usn6 Is Not Null Is Not Null) =~[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07 Is Not Null Is Not Null] Skip 12.0 Ends With usn2 Ends With 0 Limit usn2 Ends With .e1 Ends With $`5esn`"),
    octest:ct_string("Remove `8esn`:`2esn` With Distinct Filter(#usn7 In $999 In 1e1 Where 9e12[..1e1][..'s_str'])[..Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|0 Ends With 12.e12 Ends With usn2)][..None(#usn7 In $999 In 1e1 Where `1esn`[0.12..][@usn6..])] As @usn6,$`1esn`[Null][True] As usn2,0X7 In $#usn7 Order By 01 Ends With 0Xa Ends With 0X7 Desc,$12 =~0X7 =~0x0 Ascending Skip `7esn`(Distinct `1esn` Starts With 0xabc Starts With $usn2)[({`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12})-[`6esn`?:@usn5|_usn3 *01234567..]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})..] Where 00[01234567][False] With Distinct *,`2esn`[..$_usn3] As _usn4,1e1 Is Null Is Null As `2esn` Order By 0.e0[$`4esn`..`2esn`] Descending,$123456789[12e12..9e0] Asc,$_usn3[_usn4..] Asc Limit @usn5(Distinct 1e1 Is Not Null Is Not Null,`1esn` Starts With 0xabc Starts With $usn2)[..Extract(`3esn` In 9e1 Contains $999 Where usn2[12.e12..]|.12[01][@usn5])] Where 12e12 Is Not Null"),
    octest:ct_string("With  $usn1,`1esn` Contains $999 Contains 0.0 As @usn6,$`6esn`[0e0..][010..] With  *,9e12[9e1] As @usn6 Merge #usn7=(((:`6esn`:_usn3{``:usn1 Ends With 9e0 Ends With 9e0,`5esn`:$`7esn`[.e1][12.0]})-[`3esn`?:`5esn`|:usn2{`7esn`:0X7['s_str'..][01..],`8esn`:0.e0[0X0123456789ABCDEF..]}]-(usn2 :usn1:`3esn`)-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->({usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]}))) On Match Set @usn6+=[00[..$`8esn`][..7],`7esn`[$usn1..]['s_str'..]] Is Not Null Is Not Null On Match Set None(`6esn` In $`6esn`[``..][Count(*)..] Where 07 Contains `3esn` Contains `7esn`).`7esn`! =07[..07][..0X7],`4esn`:`1esn`:_usn4"),
    octest:ct_string("Detach Delete 01234567[\"d_str\"..`4esn`],9e0 Ends With $#usn8 Union Unwind @usn5[$`6esn`..][$999..] As @usn5 Unwind 0x0[..9e0] As #usn8 Union Remove [#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`]|00 In @usn6 In 0].`8esn`,All(@usn5 In 9e0 Ends With $#usn8 Where _usn4[`7esn`]).`8esn`"),
    octest:ct_string("Detach Delete usn2 =~usn1 =~Count ( * ),010 Is Null Is Null Match #usn8=(((`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[@usn6?:`7esn`|:`2esn`]->({#usn8:1e1 Is Not Null Is Not Null})-[?:@usn5|_usn3{`1esn`:`2esn` Is Null,`7esn`:`` =~.12}]-(`4esn` :#usn8:`1esn`{`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12}))) Where 00 Contains Count ( * ) Contains 0x0 Union Unwind (:`2esn`)-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})-[@usn6? *0X0123456789ABCDEF..{``:0xabc[..$1000][..`5esn`],``:$`1esn` Contains 1e1 Contains @usn6}]-(`5esn` :@usn5) Is Null Is Null As `4esn` Union All Detach Delete (:`6esn`:_usn3{@usn6:7 =~`4esn`,_usn3:`6esn`[$1000][`3esn`]})-[_usn4:_usn4 *0X7..{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]}]-(:`6esn`:_usn3{`4esn`:#usn7 Contains $0 Contains $usn2})[[$`6esn`[1.e1][$_usn3]]][usn2(0xabc In Null)]"),
    octest:ct_string("Create #usn8=((`` :`3esn`{`6esn`:Count(*)[9e12..12.0]})<-[`6esn`? *00..0Xa]->(#usn7 :#usn8:`1esn`{``:.0[$``..0X7]})-[usn2?{``:$`1esn`[``][07]}]-(`3esn` :`6esn`:_usn3{`4esn`:12.0 Starts With .12 Starts With `6esn`,#usn8:0.0 Is Null Is Null})) Remove [_usn3 In $`8esn` In @usn6,.e12 Ends With 0Xa Ends With 0xabc,.e1[12.0..]].#usn8,{_usn4:`5esn` Contains #usn7 Contains 9e12}.`1esn`! Union All Match ((:`4esn`:`6esn`{@usn5:$#usn7[..9e0][..123.654],`2esn`:7[12]})) Remove Extract(@usn6 In 010[`5esn`]|False[$`4esn`..]).@usn5,{`3esn`:9e1 Ends With Count(*) Ends With $7}._usn4! Detach Delete {usn1:0x0[$0][7],`5esn`:@usn5 Contains #usn8 Contains 12.0}[[@usn5 In 9e0 Ends With $#usn8 Where 00 Contains Count ( * ) Contains 0x0]] Union Create #usn7=((`7esn` :`1esn`:_usn4{@usn5:0x0[usn1..usn1],`6esn`:`4esn`[$_usn3..$`7esn`]})-[usn2?:`5esn`|:usn2{`2esn`:`7esn`[$usn2..][$123456789..],@usn5:9e1 Starts With Count ( * )}]->({`3esn`:`5esn` Contains $`5esn` Contains 0X7})-[`6esn` *00..0Xa{usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01}]->(:usn1:`3esn`{@usn6:0.e0 Starts With .0 Starts With 123456789,`4esn`:.e1[7..][9e0..]})) Create _usn4=({#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]}) Unwind None(@usn5 In 9e0 Ends With $#usn8 Where `7esn`[$usn2..][$123456789..]) =~{`2esn`:7[12],usn1:.12[0X7..][12e12..]} =~Extract(#usn7 In True Contains 's_str' Contains $usn1 Where $`1esn` Starts With Count(*)|True[0xabc..01234567][$`8esn`..$@usn6]) As `6esn`"),
    octest:ct_string("Match `3esn`=((({`8esn`:.e0[999..1000][1e1..$`8esn`],`1esn`:$`3esn`[$_usn4..0Xa]})<-[ *00..0Xa]->(#usn7 :usn1:`3esn`)<-[?:usn2{@usn5:999[..`1esn`][..07],_usn4:Count ( * ) Ends With $123456789}]->(`1esn` :usn1:`3esn`{_usn3:.0[.e12..]}))),`6esn`=(((:@usn6{`6esn`:01 Ends With 0Xa Ends With 0X7})-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->({#usn8:False Starts With 0X7 Starts With 01234567})<-[ *..07{_usn3:0e0 =~7 =~12.0,usn2:123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]}]->(`4esn` :@usn5))) Union Return Distinct Count ( * ) In True In @usn5 Skip 01234567[\"d_str\"..`4esn`] Limit 123.654 In $`6esn` Union All Optional Match _usn4=({#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]}) Where 0x0[@usn6..][01..]"),
    octest:ct_string("Match (#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0})<-[?:`7esn`|:`2esn`]->(`1esn` :`3esn`{#usn7:12[..0e0][...e1]}) Where _usn4[@usn6..][$0..] Remove [$`4esn`[`4esn`][Count(*)],010[..7][..`4esn`],12.0 Starts With $`2esn` Starts With .e1].`6esn`!,[$@usn6[.0..][0e0..]].`8esn`? Merge (((`3esn` :`1esn`:_usn4)-[`1esn` *01234567..]->(_usn3 {#usn7:12.e12 Ends With `` Ends With 0,``:$@usn6 In @usn6 In 1e1})-[`8esn`:#usn7|@usn5 *00..0Xa]-(_usn3 {usn1:0x0 Starts With $`6esn`}))) On Match Set All(usn2 In False[$usn1][0x0] Where `2esn`[..01][..True]).`1esn`? =$usn2[`2esn`..$`1esn`],{usn1:#usn8 =~.e0,_usn3:$_usn4 Is Null Is Null}.`1esn` =$`7esn`[.e1][12.0] On Create Set ``+=$``[7],[@usn6 In False Contains 0 Contains $`6esn` Where 12.e12 =~.0 =~usn1|$`4esn` Contains .e0 Contains 0Xa].`` =$`7esn`[123456789..$1000][Count ( * )..$7] Union All Unwind $#usn8[@usn6..] As usn2 Merge ((`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]})) On Match Set `1esn` =All(@usn6 In 010[`5esn`] Where $@usn5 Ends With @usn5 Ends With 0xabc)[Extract(#usn7 In 9e1[$`1esn`..] Where 123.654 In $`7esn`)..[12.0 Starts With .12 Starts With `6esn`]],count(Distinct $`3esn`[..0X0123456789ABCDEF][..7])._usn3! =1.e1 Is Null Is Null With  0Xa In #usn7 In 's_str',`4esn` Starts With 0e0 As `7esn` Skip $1000 Is Not Null Limit 0X7['s_str'..][01..] Union All Create `1esn`=(:`6esn`:_usn3{`4esn`:#usn7 Contains $0 Contains $usn2}),usn1=(`6esn` )<-[usn1? *0xabc{usn1:$_usn4 Starts With $1000 Starts With 12}]-(usn1 :usn1:`3esn`) Optional Match `6esn`=((`6esn` :#usn8:`1esn`{`6esn`:usn1[..$@usn6][..00]})-[@usn5:_usn4 *0x0..]-(_usn3 :`1esn`:_usn4{#usn8:$999 Ends With .e0,_usn4:`4esn`[\"d_str\"]['s_str']}))"),
    octest:ct_string("With  *,count(Distinct $@usn6 Ends With 123456789 Ends With 12.0,$`2esn`[.0..][0.0..]) Is Not Null Is Not Null Where $`5esn`[0X7..010][`7esn`..'s_str'] Return Distinct `2esn`($`2esn`[..$`3esn`][..12e12])[usn1($0[123.654..0.e0])..'s_str'][.e12..Single(#usn7 In $999 In 1e1 Where _usn4 Is Not Null Is Not Null)] As `3esn`,usn1 Ends With 0.0 Limit 7 Ends With .12"),
    octest:ct_string("Return 0.0 Contains @usn5 As #usn8,{`2esn`:Count(*) Ends With usn1,`6esn`:1000 Ends With `7esn`}[Any(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 00[$usn1..])] Skip Extract(#usn7 In 9e0[$1000] Where @usn6 Contains .12 Contains $usn1|``[$`3esn`])[(:`6esn`:_usn3$usn2)<-[ *0Xa{`3esn`:9e1 Ends With Count(*) Ends With $7}]-(`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[usn1?:`2esn`|`4esn`{#usn7:$#usn7[..9e0][..123.654],usn2:.e0 Is Not Null Is Not Null}]-(`8esn` :@usn6)..All(_usn3 In _usn3 Contains _usn4 Contains $@usn5)] Limit $_usn3 Is Null Create (:`8esn`{#usn7:`1esn`[`3esn`..],usn2:_usn3[$usn2..][$``..]}) Match ``=(:_usn3{`7esn`:$999 Ends With .e0})<-[`8esn`?:`2esn`|`4esn`{usn2:#usn8[`6esn`..][$``..]}]-(@usn6 {`6esn`:$`5esn` =~usn1,`5esn`:$`` Starts With $1000 Starts With @usn6})-[?{_usn3:010[`5esn`],_usn4:#usn8 =~.e0}]-(#usn8 :`3esn`{`5esn`:$@usn6 Ends With `1esn`}),`3esn`=((`8esn` :@usn5{`5esn`:_usn3 In $`8esn` In @usn6,_usn4:$@usn6 Ends With 12.e12 Ends With @usn5})-[?:#usn7|@usn5 *0X0123456789ABCDEF..{_usn3:@usn5 Is Not Null}]-(#usn8 {`5esn`:$12[$usn1..][Count(*)..],`7esn`:0e0[``..$1000][$7..12.e12]})-[`4esn`?:#usn8|:`3esn`{`3esn`:01 Is Null,`1esn`:123456789[12]}]-(:_usn4{#usn7:1000[..`2esn`][..$@usn6],`1esn`:12e12 Starts With $0 Starts With $`2esn`}))"),
    octest:ct_string("With  's_str' Order By $12[9e0..$999] Asc,{`3esn`:.e1[..\"d_str\"][..$123456789]} Descending Skip #usn8[`8esn`..] Limit .12 In `8esn` In $#usn8 Where 12.e12 Contains #usn7 Contains $_usn4 Detach Delete 9e0[Count(*)..0.12][$`1esn`..12.0] Return *,[@usn5 In 9e0 Ends With $#usn8 Where 12.e12 =~0X0123456789ABCDEF =~1.e1|00[$`1esn`..][@usn6..]] Is Not Null As `3esn`,$12 Starts With $0 Starts With $`8esn` As `3esn` Limit {_usn4:`1esn` Is Not Null Is Not Null,@usn5:0.12[$0..$usn2]} Is Not Null Is Not Null Union All Delete $`1esn` Contains 1e1 Contains @usn6,{_usn4:`1esn` Is Not Null Is Not Null,@usn5:0.12[$0..$usn2]} Is Not Null Is Not Null,`7esn`(Distinct `1esn` Starts With 0xabc Starts With $usn2)[({`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12})-[`6esn`?:@usn5|_usn3 *01234567..]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})..] Union All Detach Delete $#usn8 Ends With `3esn` Ends With $`` Create (_usn3 :`5esn`{#usn8:0xabc In 010 In #usn7}),((`2esn` :_usn3)-[? *0xabc{`6esn`:$0[0Xa..$123456789],``:.e1[..\"d_str\"][..$123456789]}]-({@usn6:123.654 In 12,#usn7:12.e12 Ends With `` Ends With 0}))"),
    octest:ct_string("Delete $0[0Xa..$123456789],[usn2 In 7[12] Where #usn7[.e0]|$usn2 =~9e1] Is Null Is Null Union With Distinct Count ( * ) In True In @usn5 As `2esn`,$_usn3[$12] Order By $`4esn` Contains .e0 Contains 0Xa Asc,123.654[$0..0X7][Null..#usn8] Desc,07[..07][..0X7] Descending Skip $1000 Ends With `8esn` Ends With `2esn` Limit All(@usn5 In 's_str'[0..] Where 0Xa[..Count ( * )][..$123456789]) Is Not Null Is Not Null Where $123456789[...12][..@usn6] Unwind #usn8(@usn6[999..$_usn3][0.12..$@usn5])[..`1esn`(Distinct `5esn`[..123.654][...e12],01 Contains usn2 Contains 0X0123456789ABCDEF)] As _usn3 Create (((@usn6 )<-[`6esn`? *01234567..]->({`3esn`:`5esn` Contains `1esn` Contains usn1,`1esn`:999[@usn5..][Null..]})<-[? *0X7..{``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]}]-(:`6esn`:_usn3{`8esn`:.e12[..999][..@usn5],`3esn`:$_usn3 Is Null})))"),
    octest:ct_string("Merge (`2esn` :usn2)<-[:`2esn`|`4esn` *0X0123456789ABCDEF..{`3esn`:usn2[`8esn`..][0X0123456789ABCDEF..],_usn3:$@usn6 In @usn6 In 1e1}]-(:``:usn2{`4esn`:#usn7 Contains $0 Contains $usn2}) Union Unwind 0.12[$0..$usn2] As `4esn`"),
    octest:ct_string("Create ((({`7esn`:123.654,`6esn`:9e1 Starts With Count ( * )})-[:#usn7|@usn5*..]-(`3esn` :usn2{`6esn`:#usn8 Is Null})<-[?:#usn7|@usn5 *0..01]->(:`1esn`:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null}))),`8esn`=(:`3esn`{_usn3:1e1 Is Not Null Is Not Null,`2esn`:$usn1 Starts With usn1 Starts With True})-[_usn4 *01234567..{@usn5:0xabc =~$@usn5,usn1:0Xa[$`8esn`..][$_usn4..]}]->(`5esn` :`4esn`:`6esn`)-[?:usn2{#usn7:0 =~1.e1 =~$#usn7}]->(`8esn` $12)"),
    octest:ct_string("Return `1esn` Contains $999 Contains 0.0 As @usn6 Return $7 Ends With Count ( * ),`6esn` =~Null As `4esn` Skip 1e1[_usn3] Limit [`2esn` Is Null] Is Null Is Null"),
    octest:ct_string("With  (#usn7 {_usn4:1.e1[`8esn`]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) =~Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12) =~{usn2:#usn8[`8esn`..]},9e1[$#usn8][$1000] As `5esn`,$usn1 Order By usn1 Ends With 9e0 Ends With 9e0 Descending,None(usn2 In 7[12] Where 123456789 =~12 =~'s_str')[{@usn5:$`` Contains $`2esn` Contains $usn2}..][(`2esn` :`6esn`:_usn3)-[?:#usn8|:`3esn` *7..]-({`7esn`:9e12 =~@usn6})..] Descending Skip (:`6esn`:_usn3{@usn6:7 =~`4esn`,_usn3:`6esn`[$1000][`3esn`]})-[_usn4:_usn4 *0X7..{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]}]-(:`6esn`:_usn3{`4esn`:#usn7 Contains $0 Contains $usn2})[[$`6esn`[1.e1][$_usn3]]][usn2(0xabc In Null)] Remove [0.e0[1000.._usn4][.e1..usn1],$`1esn` =~999,07[_usn3..][`6esn`..]].usn1!,usn2:`4esn`:`6esn`,Extract(usn2 In False[$usn1][0x0] Where $`7esn`|07 Is Null).#usn7! Delete $`6esn` Is Not Null Is Not Null,$`8esn` Is Not Null Is Not Null Union With  (#usn7 {_usn4:1.e1[`8esn`]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) =~Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12) =~{usn2:#usn8[`8esn`..]},9e1[$#usn8][$1000] As `5esn`,$usn1 Order By usn1 Ends With 9e0 Ends With 9e0 Descending,None(usn2 In 7[12] Where 123456789 =~12 =~'s_str')[{@usn5:$`` Contains $`2esn` Contains $usn2}..][(`2esn` :`6esn`:_usn3)-[?:#usn8|:`3esn` *7..]-({`7esn`:9e12 =~@usn6})..] Descending Skip (:`6esn`:_usn3{@usn6:7 =~`4esn`,_usn3:`6esn`[$1000][`3esn`]})-[_usn4:_usn4 *0X7..{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]}]-(:`6esn`:_usn3{`4esn`:#usn7 Contains $0 Contains $usn2})[[$`6esn`[1.e1][$_usn3]]][usn2(0xabc In Null)] Remove [0.e0[1000.._usn4][.e1..usn1],$`1esn` =~999,07[_usn3..][`6esn`..]].usn1!,usn2:`4esn`:`6esn`,Extract(usn2 In False[$usn1][0x0] Where $`7esn`|07 Is Null).#usn7! Delete $`6esn` Is Not Null Is Not Null,$`8esn` Is Not Null Is Not Null Union All Return Distinct $usn2 =~0.e0 =~@usn6,{`2esn`:'s_str'[0..],`7esn`:0Xa[Count(*)..]}[..None(#usn7 In $999 In 1e1 Where 123456789 =~@usn6)] As _usn3,0X7[`2esn`..] As `5esn` Skip `1esn` Contains $999 Contains 0.0 Limit ``[..False][..`3esn`] With  *,`` =~.12 As #usn7 Skip usn2 =~7 Limit 0x0 In 0.e0 In #usn8 Where `2esn`[..01][..True] With  Any(#usn7 In 9e0[$1000] Where 123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]) Contains [$`4esn` In 1.e1 In #usn7,usn1[False..]] Contains Extract(@usn5 In 9e0 Ends With $#usn8 Where $`3esn` In $usn2) As #usn7 Order By @usn5[0..] Ascending,$@usn5 In $`6esn` In 12e12 Desc,#usn7 In 0.e0 Desc Skip {`8esn`:$_usn4 Starts With 12.e12} Is Null Is Null Limit 999 Contains $1000 Where 999 In #usn8 In $``"),
    octest:ct_string("Remove Any(`3esn` In 9e1 Contains $999 Where `2esn` Starts With 12.e12 Starts With 12.0).`5esn`"),
    octest:ct_string("Return 1e1 Contains 's_str' Contains `3esn` Order By [9e12[9e1]][[_usn3[`2esn`..0X7][0.e0..$`3esn`]]..] Ascending,Any(#usn7 In 9e1[$`1esn`..] Where #usn7[0])[[00[12..$`6esn`],$`4esn`['s_str'..]]..] Ascending,9e1[$1000][7] Descending Skip 9e12[_usn4..$`5esn`][_usn4...e1] Limit $0 =~9e1 =~$`2esn` Union Unwind #usn8 Is Null Is Null As `6esn` Union All Merge ((`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`})) On Match Set [usn1[..$@usn6][..00],0x0[0X7],$`8esn`[123456789..][$@usn5..]].`1esn`? =999 Contains 0 Contains $`5esn`"),
    octest:ct_string("Remove `2esn`(Distinct)._usn3? Union With  0x0[..9e0],Filter(`5esn` In 0X7 In $#usn7 Where 010 Is Null) Is Not Null As `2esn` Order By 1.e1[12..][$`4esn`..] Asc,Null[..010][..1000] Descending,Any(_usn4 In 12e12 In 123456789 Where _usn3 In $`8esn` In @usn6)[Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789])][All(@usn5 In 9e0 Ends With $#usn8)] Descending Limit 1.e1[12..][$`4esn`..] Where 07[$`2esn`..9e12][$`4esn`..9e12]"),
    octest:ct_string("Create (`3esn` {usn2:$usn2[`4esn`..9e12]}),`4esn`=(usn1 :`7esn`) Detach Delete $usn2[0.e0] Create (:usn2)<-[? *01..123456789{`8esn`:usn2 =~7,@usn5:`6esn` Ends With _usn4 Ends With False}]->(`` {``:$@usn6 Ends With 12.e12 Ends With @usn5,`2esn`:$`3esn` Ends With 01234567})<-[`4esn`:usn2]->(`3esn` :_usn4),`8esn`=((`4esn` :_usn4)-[`5esn`?:_usn3|:`7esn`]->({@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]})<-[?:`5esn`|:usn2]->(usn2 :`5esn`)) Union All Create ((#usn7 {`1esn`:$`4esn` Is Null Is Null})<-[ *999..{`3esn`:123456789 =~$999,_usn4:`4esn` Is Not Null Is Not Null}]-(`6esn` :`8esn`)) Delete Count(*) Starts With usn2 Starts With `7esn`,$1000 Starts With $`7esn`"),
    octest:ct_string("Remove [.e0 Starts With $@usn6 Starts With $7,12.0 In 123.654 In _usn4,$`5esn` In _usn3 In 0.0].`5esn`?,All(#usn7 In $999 In 1e1 Where _usn4 Contains `` Contains 1.e1).`5esn`!,@usn5:_usn4 Union Optional Match #usn8=(`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})-[`3esn`]->(:@usn5{#usn7:12e12 In $`5esn`}),`2esn`=(`8esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})-[`6esn`?:@usn5|_usn3 *01234567..]-(`5esn` {``:_usn3 Contains 9e12 Contains `8esn`,@usn6:``[7.._usn3]})<-[`8esn`{`1esn`:123456789 =~@usn6,`1esn`:$`5esn`[0X7..010][`7esn`..'s_str']}]->(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}) Detach Delete `2esn` Starts With $`7esn` Match `8esn`=({`6esn`:usn1[..$@usn6][..00]}) Where 0Xa[..Count ( * )][..$123456789]"),
    octest:ct_string("Return *,'s_str' Ends With `7esn` Ends With 010 Order By #usn7[``] Desc,`7esn` Starts With @usn5 Ascending Skip @usn6 =~999 =~@usn5 With  $1000 Starts With $`3esn` Starts With 0.e0 As @usn6,.e12 In $`5esn` In 0X7 As _usn4 Where 12.e12 Ends With $`` Unwind $`5esn`[$`3esn`..] As #usn8 Union Merge `6esn`=(((_usn4 :_usn4{`2esn`:`6esn` Starts With `6esn`,`8esn`:1000[0e0][1e1]})<-[`4esn`:`1esn`|`3esn` *12..]-(usn1 :`7esn`{`7esn`:9e12 Starts With 1e1,_usn3:$`7esn`[$_usn4][.e0]})-[``?:_usn4]-(_usn4 :_usn4))) On Match Set Extract(@usn5 In 's_str'[0..] Where `5esn`[..123.654][...e12]|$``[..\"d_str\"][..$#usn8]).@usn6 =[$usn1[`2esn`..][$`2esn`..]][(`3esn` :usn2)-[`4esn`?:usn1|`4esn`{`3esn`:123.654[..0.e0][..'s_str'],@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]}]-({`6esn`:9e1 Is Not Null Is Not Null,`8esn`:_usn3 In $`8esn` In @usn6})..`2esn`(Distinct $@usn6 Is Not Null Is Not Null,Count ( * ) Ends With $123456789)],None(#usn8 In `7esn` Where ``[7.._usn3]).@usn6? =`6esn`,Any(#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`])._usn4! =`` Is Null On Match Set `4esn` =(usn2 :_usn3)-[`6esn`?:`6esn`|:#usn8]-(`1esn` {_usn4:`8esn` Is Null})<-[`7esn`?:#usn8|:`3esn`]-(_usn4 :`3esn`)[Any(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null)..],usn1 =(`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})-[_usn3?:_usn4 *00..0Xa{_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})-[`4esn`:`1esn`|`3esn` *12..]->(usn2 :`1esn`:_usn4{usn2:999 Contains $1000}) Contains Filter(usn2 In False[$usn1][0x0] Where $`6esn`[``..][Count(*)..]) Create (((`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[@usn6?:`7esn`|:`2esn`]->({#usn8:1e1 Is Not Null Is Not Null})-[?:@usn5|_usn3{`1esn`:`2esn` Is Null,`7esn`:`` =~.12}]-(`4esn` :#usn8:`1esn`{`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12}))),#usn8=((`4esn` :@usn6)<-[@usn5?:usn2 *0..01]->(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})) Create _usn3=((:``:usn2{`5esn`:1.e1[`8esn`],`1esn`:.e0})-[`3esn`:`2esn`|`4esn`]->(`` {``:$@usn6 Ends With 12.e12 Ends With @usn5,`2esn`:$`3esn` Ends With 01234567})<-[`6esn`?:_usn3|:`7esn` *..010]->(:_usn3{_usn4:.e1[7..][9e0..]})),@usn6=(`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`}) Union Remove Extract(_usn4 In 12e12 In 123456789 Where .e1 Starts With 12.e12 Starts With `2esn`|$@usn5 Is Null Is Null).@usn5!,Extract(@usn6 In 010[`5esn`] Where $0[0Xa..$123456789]|#usn7[0.e0..]['s_str'..]).`8esn`?,(:#usn8:`1esn`$`7esn`)-[?:@usn6|:`7esn` *0X0123456789ABCDEF..{_usn4:0x0[12e12..$`7esn`]}]->({@usn5:Count(*) Is Not Null Is Not Null}).`5esn`?"),
    octest:ct_string("Match `3esn`=(_usn3 {`8esn`:_usn3[0x0],#usn8:$usn1 Contains 0}),usn1=(({usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})-[:`6esn`|:#usn8{`4esn`:$`2esn`[..$`3esn`][..12e12],#usn8:123.654 Is Not Null}]-(_usn3 :`5esn`)-[`4esn`?:#usn8|:`3esn`{`3esn`:01 Is Null,`1esn`:123456789[12]}]-(:_usn4{#usn7:1000[..`2esn`][..$@usn6],`1esn`:12e12 Starts With $0 Starts With $`2esn`})) Where \"d_str\"[True..]"),
    octest:ct_string("Return $`4esn`[`4esn`][Count(*)] As `8esn` Skip usn1 Starts With $_usn3 Return 123456789 =~$999 Order By $7[01..$123456789][#usn7..12.0] Descending,.12[..usn2][..12e12] Descending Unwind (#usn7 {_usn4:1.e1[`8esn`]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) =~Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12) =~{usn2:#usn8[`8esn`..]} As `5esn`"),
    octest:ct_string("Delete [`3esn` In `2esn`[..01][..True] Where $0 Ends With $usn1 Ends With $_usn3] In [12e12 In 123456789,`1esn`] In All(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789]),$999 Is Null Is Null Union Detach Delete $usn2[`2esn`..],`8esn`(Distinct #usn8 Is Not Null Is Not Null,`2esn` In 9e0 In 7) Starts With None(usn2 In 7[12] Where 123456789 =~12 =~'s_str') Match #usn7=(#usn8 :_usn3)-[`7esn`{#usn8:01 Is Null,`6esn`:#usn7[0]}]-({`2esn`:Count(*) Ends With usn1,`6esn`:1000 Ends With `7esn`})<-[:_usn3|:`7esn` *00..0Xa]-(#usn7 :`4esn`:`6esn`$usn2),(((:_usn4{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]})<-[`2esn`? *01..123456789]-(`2esn` :@usn6))) Where 999[123.654..$usn2][Count ( * )..0x0] Merge (((@usn6 :`2esn`{_usn3:$``[7],`7esn`:_usn3 Ends With 7 Ends With $`1esn`})<-[`3esn` *7..]->(`1esn` :@usn6{`6esn`:00[False..0e0],`6esn`:$usn2 =~1.e1 =~usn1})<-[? *01..123456789]-(usn1 :_usn4{`4esn`:`7esn` Is Null}))) On Match Set usn1(True Contains 's_str' Contains $usn1,.e0 Is Not Null Is Not Null).@usn5! ={usn2:_usn3[0x0]} In Extract(#usn7 In 9e0[$1000] Where $_usn3 Is Null|010 Starts With 0 Starts With 0.0) In {`7esn`:False[$`4esn`..]}"),
    octest:ct_string("Create (:@usn5{@usn5:$12[9e0..$999]})-[:`1esn`|`3esn` *0Xa{_usn4:``[9e12][$999],#usn8:123.654 In 12}]->(:@usn5{#usn7:12e12 In $`5esn`})<-[:`8esn` *0X7..]->(:`3esn`{`5esn`:True[0xabc..01234567][$`8esn`..$@usn6]}) With Distinct $usn2,[#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`]][[`2esn` Is Null]][Extract(#usn7 In $999 In 1e1|01234567[Null..$_usn3])] Order By 's_str' Contains 12.e12 Contains $`4esn` Descending,.e12 Ends With 0Xa Ends With 0xabc Descending Skip #usn7 =~9e12"),
    octest:ct_string("Return `2esn` Starts With 12.e12 Starts With 12.0 As _usn3 Order By $1000[$@usn6][$_usn4] Desc"),
    octest:ct_string("Return *,$`8esn`[999] As @usn5,00 Ends With `` Ends With 12.e12 Skip All(`3esn` In `2esn`[..01][..True] Where usn2[12.e12..])[Any(#usn8 In `7esn` Where .e0 Is Null Is Null)..Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 1e1 Contains 0.e0 Contains 9e1|12.e12 Ends With $``)][{`5esn`:False[$usn1][0x0]}..`8esn`(Distinct .e0[01234567..$`8esn`])] Merge `1esn`=((#usn8 :`6esn`:_usn3)<-[@usn5?:``{`3esn`:010 Is Null Is Null,`5esn`:_usn4 Contains `` Contains 1.e1}]-(:@usn6{`7esn`:$`6esn`[``..][Count(*)..]})) On Match Set `` =$``[..\"d_str\"][..$#usn8],Any(#usn7 In 9e0[$1000] Where 's_str'[0x0..1.e1]).usn2? =9e1[..123456789],@usn5+=[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 12.e12 Starts With \"d_str\" Starts With 9e1|$#usn7 Contains $`7esn` Contains .e12][#usn8(Distinct $_usn4 Is Null Is Null,01[`8esn`..9e12][.12..0])..[_usn4 In 12e12 In 123456789 Where Count ( * ) Ends With $123456789]][Filter(_usn4 In 12e12 In 123456789 Where $`5esn` =~usn1)..[$`5esn` In _usn3 In 0.0]] On Match Set (`3esn` {usn2:$usn2[`4esn`..9e12]})<-[{_usn4:1.e1[`8esn`]}]->(:@usn6$usn1).#usn7! =_usn4 Starts With `` Starts With 1000,Extract(`3esn` In `2esn`[..01][..True] Where 0X7[..$`8esn`]|$#usn7 Starts With 01234567 Starts With $0).`5esn`! =@usn6(Count ( * ) In True In @usn5)[None(#usn7 In True Contains 's_str' Contains $usn1 Where usn2 Contains $0 Contains .0)..Single(#usn7 In $999 In 1e1 Where _usn4 Contains `` Contains 1.e1)]"),
    octest:ct_string("Return *,`2esn`(Distinct 12.e12 =~.0 =~usn1,00 Ends With $`1esn` Ends With `7esn`)[[_usn4 In 12e12 In 123456789 Where 0x0 Starts With $`6esn`|`2esn` In 7]] Order By $`2esn` Starts With 0.12 Starts With $12 Ascending,07 In `6esn` Desc,12[..0e0][...e1] Desc Skip #usn8[`6esn`..][$``..] Limit `3esn`[..0X0123456789ABCDEF][..0x0] Merge (((:`7esn`{_usn3:@usn5[0.0..0X7]})-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]->(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]})-[? *12..{usn2:$`8esn`[123456789..][$@usn5..]}]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]}))) On Match Set @usn5+=$0[123.654..0.e0],Any(`8esn` In 123456789 =~@usn6 Where .e1 =~_usn4 =~_usn4)._usn3? =01[..$`8esn`][..9e0],usn1 ={_usn4:``[9e12][$999],#usn8:123.654 In 12} Starts With Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0[0.0]) Starts With Filter(`6esn` In $`6esn`[``..][Count(*)..]) On Create Set [#usn7 In 9e1[$`1esn`..] Where 00 Ends With $`1esn` Ends With `7esn`].`2esn` =All(#usn7 In True Contains 's_str' Contains $usn1 Where $`1esn` Starts With Count(*)) In Any(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn`[0..][999..]) In Filter(`3esn` In 9e1 Contains $999 Where .e0 Is Not Null Is Not Null),``:@usn5,@usn5+=12.e12[_usn4..$1000][$7..$999] Remove `3esn`(Distinct 123.654 Starts With 0X7 Starts With $`4esn`).``!,Any(_usn4 In 12e12 In 123456789 Where True Contains 's_str' Contains $usn1).`2esn`,Filter(`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]).@usn5? Union Remove {#usn8:`1esn`[usn1][0xabc],_usn3:$`6esn`[1.e1][$_usn3]}.#usn7?,[123456789 Contains 0.0 Contains $@usn6,_usn3 Contains _usn4 Contains $@usn5].`8esn`? Return _usn4(Distinct usn2[07..][.0..]) Ends With Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 12[$`5esn`..][False..]|$`2esn` Starts With `4esn` Starts With $usn1) Ends With Extract(@usn5 In 9e0 Ends With $#usn8 Where $`3esn` In $usn2),usn1[..$@usn6][..00] As #usn7,(#usn8 :_usn3{@usn5:_usn3 Starts With 12e12 Starts With `5esn`,@usn6:usn2 In _usn3})-[`1esn`?{`8esn`:.e0,usn2:9e1 Contains $999}]->(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})-[? *..010{`2esn`:'s_str'[0..]}]->({`7esn`:1.e1 In 1000 In _usn3,`8esn`:010 Starts With $`` Starts With 0e0})[..(`5esn` )-[ *00..0Xa]->(usn1 :#usn7:`5esn`{`5esn`:$@usn5 In 12e12 In 01})-[usn1?:`2esn`|`4esn`{#usn7:$#usn7[..9e0][..123.654],usn2:.e0 Is Not Null Is Not Null}]-(`1esn` :usn1:`3esn`{_usn3:.0[.e12..]})] As `7esn` Order By 0X7[..$`8esn`] Desc,$123456789[12e12..9e0] Descending Remove [@usn6 In False Contains 0 Contains $`6esn` Where 0.0 =~9e0 =~$0|.e0[01234567..$`8esn`]].@usn6?,({`4esn`:.e1[..$`3esn`][..01]})<-[`1esn`?:`8esn` *7..]-(:``:usn2{``:True[$_usn3..]}).`6esn`,All(`6esn` In $`6esn`[``..][Count(*)..] Where $#usn7 Ends With 's_str' Ends With 0X7).`6esn`?"),
    octest:ct_string("Return Distinct 0[$#usn8..][0x0..]"),
    octest:ct_string("Create (((`4esn` :``:usn2)<-[`3esn`?{@usn6:Count(*)[..@usn6][..`7esn`],`6esn`:`2esn` In 9e0 In 7}]-({`6esn`:@usn5[$`6esn`..][$999..],`8esn`:$@usn5[..0xabc][..$`3esn`]})-[:_usn4{`8esn`:12.e12 Is Not Null Is Not Null,#usn7:@usn6[Null...0][\"d_str\"..Count(*)]}]-(@usn6 {`5esn`:.e12 Starts With $#usn8 Starts With False}))),((@usn5 {_usn4:`5esn` Contains #usn7 Contains 9e12})) Union All Remove {`5esn`:1.e1[`8esn`],`1esn`:.e0}.`1esn`,{`6esn`:12.e12 Is Not Null Is Not Null,`1esn`:#usn7[0.12..]}.`3esn`?,`6esn`(`1esn`[`3esn`..],01[..01234567][..$_usn3]).`1esn`? Unwind None(#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[`8esn`]) Ends With [_usn4 In 12e12 In 123456789 Where 1.e1 =~$_usn4|0x0[0X7]] As usn1 Remove [_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $`8esn`[123456789..][$@usn5..]|#usn8 Is Not Null Is Not Null].#usn7 Union Detach Delete #usn7[0.e0..]['s_str'..],$0 Starts With @usn5 Create ((:`5esn`{`8esn`:$`1esn` Starts With Count(*),_usn3:usn1[...e12][..1.e1]}))"),
    octest:ct_string("Merge ((:#usn7:`5esn`{`2esn`:12.e12 Contains 9e1,`5esn`:.e1 Starts With 12.e12 Starts With `2esn`})<-[`2esn`{``:Null[..010][..1000]}]-(`` :usn1:`3esn`)-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})) On Match Set `1esn` =Filter(`8esn` In 123456789 =~@usn6 Where 123.654[`4esn`..12])[..Extract(#usn7 In $999 In 1e1 Where 1000[12e12][`5esn`])][..[@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``|.e0 =~Null]],#usn8(Distinct 12.0[$1000..][#usn7..],0xabc In Null).`2esn` =0.e0 Starts With usn1 On Match Set `2esn` =[$#usn7 Ends With 's_str' Ends With 0X7] Starts With (usn1 :@usn6)<-[?:#usn7|@usn5 *0..01]->(:`1esn`:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null})<-[_usn4? *12..{`1esn`:$`6esn` Starts With .e12 Starts With $`1esn`,`3esn`:`8esn`[0.e0..]}]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0}) Starts With [`5esn` In `7esn`[$usn2..][$123456789..] Where $`1esn` Starts With Count(*)]"),
    octest:ct_string("With  *,9e0[..123456789][..$`3esn`] As #usn7 Unwind [$`4esn`[0..][999..],$usn2 Is Not Null Is Not Null,$`5esn` In _usn3 In 0.0] Ends With [#usn7 In True Contains 's_str' Contains $usn1 Where 9e1[$#usn8][$1000]|.e1 In 0] Ends With None(#usn7 In $999 In 1e1 Where $`4esn`[`4esn`][Count(*)]) As #usn8 Union All Create ((_usn3 {`6esn`:@usn5[$`6esn`..][$999..],`8esn`:$@usn5[..0xabc][..$`3esn`]})-[? *0X0123456789ABCDEF..{#usn7:$@usn6[$0..9e12][.e12..Null]}]->(#usn8 :`5esn`)-[:`6esn`|:#usn8{`4esn`:$`2esn`[..$`3esn`][..12e12],#usn8:123.654 Is Not Null}]-(_usn3 :`5esn`))"),
    octest:ct_string("With  @usn5[0..] As `6esn`,[_usn3 In _usn3 Contains _usn4 Contains $@usn5] Contains [_usn4[$usn1..01234567][123.654..`5esn`]] Contains `4esn`(Distinct 07 In `6esn`) As `6esn`,_usn4[.12..$usn2][$_usn3..123.654] As `` Skip Single(#usn7 In $999 In 1e1 Where $`4esn`[`4esn`][Count(*)]) Contains None(#usn8 In `7esn` Where 12.0 Starts With $`2esn` Starts With .e1) Contains [.0 Ends With Count ( * ),0e0 Starts With 999 Starts With `2esn`,$@usn6 =~#usn7 =~True] Limit Filter(@usn5 In 9e0 Ends With $#usn8 Where 07 Is Null) =~{#usn7:1000[12e12][`5esn`]} Where 9e12[..`3esn`][..0X0123456789ABCDEF] Union Optional Match ((_usn3 {`6esn`:@usn5[$`6esn`..][$999..],`8esn`:$@usn5[..0xabc][..$`3esn`]})-[? *0X0123456789ABCDEF..{#usn7:$@usn6[$0..9e12][.e12..Null]}]->(#usn8 :`5esn`)-[:`6esn`|:#usn8{`4esn`:$`2esn`[..$`3esn`][..12e12],#usn8:123.654 Is Not Null}]-(_usn3 :`5esn`)) Where 010 Starts With 0 Starts With 0.0 With  _usn4 Contains $_usn3 Contains .e1,$`4esn`['s_str'..] As `` Limit .e12[..999][..@usn5] Where .12 In `8esn` In $#usn8 Return 0x0[12e12..$`7esn`] As #usn7 Order By .e12[`2esn`..010] Desc,0xabc In 010 In #usn7 Ascending Skip $999 In 1e1 Union Create _usn3=(((:usn2{`6esn`:`4esn` Starts With 0e0,`8esn`:usn2[12e12..]['s_str'..]})<-[:`2esn`|`4esn` *12..]-(_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]}))) Remove {#usn8:`1esn`[usn1][0xabc],_usn3:$`6esn`[1.e1][$_usn3]}.`3esn`,{usn1:@usn6[9e12]}.`4esn`! Return 12[$`5esn`..][False..] As `4esn`,0e0 Ends With 07 Ends With $`8esn` As `1esn` Limit All(@usn5 In 's_str'[0..] Where 07 Ends With 9e12 Ends With `2esn`)[Filter(`3esn` In 9e1 Contains $999 Where .e0 Is Not Null Is Not Null)..][Filter(@usn5 In 's_str'[0..] Where #usn7[0.12..])..]"),
    octest:ct_string("Unwind Count ( * ) Ends With `6esn` Ends With 's_str' As _usn3 Create #usn8=(`1esn` {#usn8:$#usn7[..9e0][..123.654],`5esn`:9e12 Starts With 1e1})<-[ *7..{#usn7:$`8esn`[12.e12][_usn4],`2esn`:$0[123.654..0.e0]}]-(`6esn` :`1esn`:_usn4{@usn5:07 Ends With 9e12 Ends With `2esn`}) With  0.e0['s_str'..][01234567..] As `1esn`,.e12 Starts With $7 Starts With .0 As _usn4,None(`8esn` In 123456789 =~@usn6 Where .e12 Starts With $12 Starts With .e12) Ends With Filter(`5esn` In 0X7 In $#usn7 Where 0x0[0X7]) Ends With Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12) As #usn7 Skip Single(#usn8 In `7esn` Where 12.0 Starts With $`2esn` Starts With .e1) Ends With [0X7 In $#usn7,`4esn` Is Not Null Is Not Null,.0[.e12..]] Ends With {`6esn`:0xabc[..$1000][..`5esn`],`4esn`:$@usn5 In 12e12 In 01} Union Merge ((`2esn` :@usn5)-[@usn6:#usn8|:`3esn`]->({@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]})) Unwind None(@usn5 In 9e0 Ends With $#usn8 Where `7esn`[$usn2..][$123456789..]) =~{`2esn`:7[12],usn1:.12[0X7..][12e12..]} =~Extract(#usn7 In True Contains 's_str' Contains $usn1 Where $`1esn` Starts With Count(*)|True[0xabc..01234567][$`8esn`..$@usn6]) As `6esn`"),
    octest:ct_string("Create `6esn`=(((`7esn` :`2esn`{@usn6:$0[123.654..0.e0]})-[_usn3 *..07{@usn6:$`2esn`[..$`3esn`][..12e12]}]->(`1esn` {#usn7:$`1esn` Ends With 0X0123456789ABCDEF,`3esn`:.12 Starts With _usn3 Starts With $``})<-[usn1:_usn4]-(`` {_usn3:`5esn` Contains `7esn`}))),``=(_usn3 :`4esn`:`6esn`)-[?:@usn6|:`7esn`]-(:#usn8:`1esn`)-[_usn3?]-(`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]}) Optional Match @usn5=(:`6esn`:_usn3{`6esn`:`2esn` Starts With $`7esn`})<-[:`2esn`|`4esn` *12..]->({`7esn`:`4esn` Is Not Null Is Not Null,`4esn`:`4esn` Ends With 12 Ends With .12})<-[?:#usn8|:`3esn`{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]-(:usn1:`3esn`{_usn4:$#usn7 Contains $`7esn` Contains .e12}) Where Count ( * )[@usn6] Create ((:#usn7:`5esn`{`2esn`:12.e12 Contains 9e1,`5esn`:.e1 Starts With 12.e12 Starts With `2esn`})<-[`2esn`{``:Null[..010][..1000]}]-(`` :usn1:`3esn`)-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})),((`7esn` :`2esn`{`4esn`:0[1e1][$usn1],usn2:`8esn`[..$#usn8]})<-[_usn4?:usn2]-(@usn6 :`6esn`:_usn3{@usn5:0xabc =~$@usn5,usn1:0Xa[$`8esn`..][$_usn4..]})-[`3esn`?:`7esn`|:`2esn`]-(`5esn` :#usn8:`1esn`{_usn3:`6esn` Is Null Is Null}))"),
    octest:ct_string("Remove {`6esn`:$@usn5 Contains 's_str' Contains \"d_str\",`4esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}.`1esn`! Remove `2esn`(.12[123.654..]).`4esn` Merge `3esn`=((:#usn8:`1esn`$`7esn`)<-[`1esn` *999..{`1esn`:1e1 Contains 's_str' Contains `3esn`}]-(usn1 {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(#usn7 :``:usn2))"),
    octest:ct_string("Create _usn3=(((:usn2{`6esn`:`4esn` Starts With 0e0,`8esn`:usn2[12e12..]['s_str'..]})<-[:`2esn`|`4esn` *12..]-(_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]}))) Remove {#usn8:`1esn`[usn1][0xabc],_usn3:$`6esn`[1.e1][$_usn3]}.`3esn`,{usn1:@usn6[9e12]}.`4esn`! Return 12[$`5esn`..][False..] As `4esn`,0e0 Ends With 07 Ends With $`8esn` As `1esn` Limit All(@usn5 In 's_str'[0..] Where 07 Ends With 9e12 Ends With `2esn`)[Filter(`3esn` In 9e1 Contains $999 Where .e0 Is Not Null Is Not Null)..][Filter(@usn5 In 's_str'[0..] Where #usn7[0.12..])..] Union All Remove Extract(`3esn` In 9e1 Contains $999 Where usn1[False..`5esn`][$1000..$12]|True Starts With Null).`4esn`! Union With  `5esn`[..123.654][...e12] As @usn6,(`6esn` {_usn3:9e12 Starts With 1e1,_usn4:`2esn`[..$_usn3]})-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->({`1esn`:#usn7[0]}) Starts With Extract(`6esn` In $`6esn`[``..][Count(*)..] Where @usn5 Is Null|0xabc In 010 In #usn7) As `2esn`,{`2esn`:'s_str'[0..],`7esn`:0Xa[Count(*)..]}[..None(#usn7 In $999 In 1e1 Where 123456789 =~@usn6)] As `1esn` Skip $`3esn`[..0X0123456789ABCDEF][..7] Limit 12.0 Starts With .12 Starts With `6esn` Where ``[$`3esn`] Merge ((`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`})) On Match Set [usn1[..$@usn6][..00],0x0[0X7],$`8esn`[123456789..][$@usn5..]].`1esn`? =999 Contains 0 Contains $`5esn`"),
    octest:ct_string("Create (:`5esn`{`4esn`:$`5esn` =~$0 =~``,_usn3:$``[..$#usn7][..`6esn`]})<-[#usn8? *1000..0X0123456789ABCDEF{`7esn`:Count ( * )[$`5esn`..][$7..],`6esn`:`6esn` Ends With _usn4 Ends With False}]->(`8esn` :@usn5{`5esn`:_usn3 In $`8esn` In @usn6,_usn4:$@usn6 Ends With 12.e12 Ends With @usn5})-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]->(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]}),`6esn`=((`4esn` :_usn4)-[`5esn`?:_usn3|:`7esn`]->({@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]})<-[?:`5esn`|:usn2]->(usn2 :`5esn`)) With Distinct $#usn8 Ends With `` Ends With 999 As `5esn`,Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 12.e12[0..0.12][123.654..9e12]) Is Not Null Is Not Null As _usn3 Order By _usn4(Distinct $@usn6[$`8esn`..][123456789..],$`` Starts With $1000 Starts With @usn6)[[#usn7 In True Contains 's_str' Contains $usn1 Where $usn2 =~1.e1 =~usn1]..][All(#usn7 In True Contains 's_str' Contains $usn1 Where $`2esn` Contains Count(*))..] Desc,{#usn8:0.0 =~9e0 =~$0,`5esn`:Count ( * ) Ends With $123456789} Is Not Null Desc,9e0 Ends With $#usn8 Desc Limit 12.0 Starts With $`2esn` Starts With .e1 Where 9e1 Ends With Count(*) Ends With $7"),
    octest:ct_string("Remove None(@usn5 In 's_str'[0..] Where usn2 Ends With .e1 Ends With $`5esn`).`7esn`?,count(Distinct 00[$usn1..],$`2esn` Ends With `6esn`).`4esn`? Remove All(#usn8 In `7esn`).`1esn` Union Delete $#usn7[..0Xa],01 In $@usn6 With  `5esn`[..123.654][...e12] As @usn6,(`6esn` {_usn3:9e12 Starts With 1e1,_usn4:`2esn`[..$_usn3]})-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->({`1esn`:#usn7[0]}) Starts With Extract(`6esn` In $`6esn`[``..][Count(*)..] Where @usn5 Is Null|0xabc In 010 In #usn7) As `2esn`,{`2esn`:'s_str'[0..],`7esn`:0Xa[Count(*)..]}[..None(#usn7 In $999 In 1e1 Where 123456789 =~@usn6)] As `1esn` Order By None(#usn7 In 9e0[$1000] Where $``[True]) Ends With None(#usn8 In `7esn` Where $1000 Starts With $`7esn`) Ends With Single(#usn8 In `7esn` Where @usn5 Contains 9e0) Descending,@usn5[$`7esn`..`5esn`] Ascending,.0 Contains .e12 Contains 0 Asc Skip usn1 Limit `6esn`[$`8esn`][9e1] Where False Starts With 0X7 Starts With 01234567 Union All Optional Match `1esn`=(_usn3 :@usn5{`8esn`:1e1 Contains 's_str' Contains `3esn`}),`5esn`=(:#usn7:`5esn`{@usn5:999 Starts With `2esn` Starts With .e1,``:0xabc In Null})-[`6esn` *0Xa]-(usn1 :`1esn`:_usn4{_usn3:@usn6[999..$_usn3][0.12..$@usn5],`1esn`:9e12[..1e1][..'s_str']}) Where 07 In `6esn` Merge `7esn`=(`8esn` :`2esn`{@usn5:$`4esn` Contains _usn3 Contains `8esn`,`7esn`:$`4esn`[`4esn`][Count(*)]})<-[usn1]->(:`6esn`:_usn3{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})-[_usn3?:_usn4 *00..0Xa{_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})"),
    octest:ct_string("With  *,All(@usn6 In 010[`5esn`] Where $@usn5 Ends With @usn5 Ends With 0xabc)[Extract(#usn7 In 9e1[$`1esn`..] Where 123.654 In $`7esn`)..[12.0 Starts With .12 Starts With `6esn`]],12 In $usn1 In 7 As `8esn` Skip None(#usn7 In True Contains 's_str' Contains $usn1 Where 00[12..$`6esn`]) Ends With None(#usn7 In 9e0[$1000] Where 1e1 Contains 0.e0 Contains 9e1) Limit $@usn5 Starts With .e1 Where usn1 Is Null Is Null Unwind [$``[7],_usn3 Contains _usn4 Contains $@usn5] Starts With [`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]|usn2 =~7] Starts With Any(`3esn` In `2esn`[..01][..True] Where 12.e12 Contains #usn7 Contains $_usn4) As #usn8 Union All Return Distinct .e12 Starts With $7 Starts With .0,[$``[7],_usn3 Contains _usn4 Contains $@usn5] Starts With [`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]|usn2 =~7] Starts With Any(`3esn` In `2esn`[..01][..True] Where 12.e12 Contains #usn7 Contains $_usn4) As #usn7,01 Contains usn2 Contains 0X0123456789ABCDEF As `8esn` Order By 0Xa =~False =~@usn5 Descending,12.0 In 010 Ascending,`4esn`[123456789] Ascending Return (#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})<-[?:`7esn`|:`2esn`]->(#usn8 :usn1:`3esn`{`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[ *01234567..]->(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12}) Contains [7[12],00[$`1esn`..][@usn6..],`5esn` Contains #usn7 Contains 9e12] Contains {_usn3:$@usn6[00],`2esn`:0.12 Is Null Is Null} Order By Extract(`8esn` In 123456789 =~@usn6 Where .e12 Starts With $12 Starts With .e12) Ends With [#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4] Ends With [False[$`4esn`..],$#usn7[..0Xa]] Asc,@usn6[..$@usn5] Ascending Skip 999 Starts With `2esn` Starts With .e1 Limit 0.e0[..$999][..0Xa] Union All Delete Count ( * ) Ends With `6esn` Ends With 's_str',Count(*)[$@usn5] Optional Match @usn6=(`` :`3esn`{`6esn`:Count(*)[9e12..12.0]})-[:@usn5|_usn3 *00..0Xa]-(:usn2{`6esn`:`4esn` Starts With 0e0,`8esn`:usn2[12e12..]['s_str'..]})<-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->(_usn4 :@usn5) Merge (#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0})<-[?:`7esn`|:`2esn`]->(`1esn` :`3esn`{#usn7:12[..0e0][...e1]}) On Match Set `2esn` =`3esn`[..0X0123456789ABCDEF][..0x0] On Create Set `2esn` =$@usn5[0.0][0X0123456789ABCDEF],@usn6+=[`5esn` In 0X7 In $#usn7 Where 0.e0['s_str'..][01234567..]][(`6esn` {_usn4:$`5esn` Is Not Null Is Not Null})-[ *999..{`3esn`:123456789 =~$999,_usn4:`4esn` Is Not Null Is Not Null}]-(usn1 :_usn4{`4esn`:`7esn` Is Null})]"),
    octest:ct_string("Merge (((`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null})-[`5esn`?:`7esn`|:`2esn` *0x0..]-(:_usn4{`1esn`:#usn7 Contains $0 Contains $usn2,`4esn`:999 Ends With $`` Ends With 0X0123456789ABCDEF})<-[? *12..{usn2:$`8esn`[123456789..][$@usn5..]}]->(:`1esn`:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null}))) Merge ((`4esn` :_usn3{usn2:01[..0Xa][..12],`1esn`:999[..`1esn`][..07]})-[:`` *0..01]-({`7esn`:0xabc In Null,_usn4:.e12[0Xa..]})) Return Distinct .e0 Starts With $@usn6 Starts With $7 As `1esn`,1.e1 Contains `6esn` Contains 0.e0 Order By `3esn`[$123456789..][$usn2..] Ascending Union All Unwind #usn8 Is Null Is Null As `8esn`"),
    octest:ct_string("Remove Extract(usn2 In 7[12] Where $_usn3 Is Null|`3esn`[..0X0123456789ABCDEF][..0x0]).#usn8!,Single(`6esn` In $`6esn`[``..][Count(*)..] Where 1.e1 Ends With $_usn4 Ends With #usn7).`3esn`! Detach Delete `4esn`($_usn4 Starts With $1000 Starts With 12)[{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}],$`3esn`[.e1][_usn4],$7[$12..12e12][1.e1..9e1] With  $999 In 12 In 1.e1 Order By (`5esn` :`1esn`:_usn4)-[?:#usn7|@usn5 *0X0123456789ABCDEF..{_usn3:@usn5 Is Not Null}]-(#usn8 {`5esn`:$12[$usn1..][Count(*)..],`7esn`:0e0[``..$1000][$7..12.e12]})[[.e0 Is Null Is Null,9e1 Contains 12,'s_str' Ends With `7esn` Ends With 010]..] Descending,Single(#usn7 In True Contains 's_str' Contains $usn1 Where `7esn`) Ends With [0Xa Ends With $`3esn` Ends With $1000] Ends With {usn1:0x0[0X7],@usn5:`4esn`[.12][$@usn6]} Desc Limit 00 In @usn6 In 0 Where $@usn6 In @usn6 In 1e1 Union Detach Delete `4esn` Contains 9e0,`5esn` Contains `7esn` Merge #usn8=((`4esn` :@usn6)<-[@usn5?:usn2 *0..01]->(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`}))"),
    octest:ct_string("Unwind usn2[12e12..]['s_str'..] As @usn6 Union Create `2esn`=(((`6esn` :`4esn`:`6esn`)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})<-[`4esn` *0Xa{@usn6:999 Starts With `2esn` Starts With .e1,`4esn`:$@usn5[..0xabc][..$`3esn`]}]->(@usn6 :``:usn2))),({_usn3:@usn6 Contains .12 Contains $usn1}) Return Distinct *,12[None(#usn7 In 9e1[$`1esn`..] Where usn2 Is Not Null)..`5esn`(Distinct 00[$`1esn`..][@usn6..],@usn6[9e12])][`5esn`(`2esn`[..01][..True])..(`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]})<-[? *7..]-(#usn7 :``:usn2)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})] As usn1,Any(#usn7 In 9e0[$1000] Where .e0 Is Null) In None(@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``) In Filter(@usn6 In False Contains 0 Contains $`6esn` Where $@usn5 In 12e12 In 01) As `7esn`"),
    octest:ct_string("Create _usn4=((`1esn` :#usn7:`5esn`{`1esn`:0e0 =~0Xa =~$999})),(((`7esn` {#usn7:$@usn6 Ends With `1esn`})<-[?:usn2{@usn5:999[..`1esn`][..07],_usn4:Count ( * ) Ends With $123456789}]->(`1esn` :usn1:`3esn`{_usn3:.0[.e12..]})<-[:`2esn`|`4esn` *0X0123456789ABCDEF..{`3esn`:usn2[`8esn`..][0X0123456789ABCDEF..],_usn3:$@usn6 In @usn6 In 1e1}]-(@usn6 :`2esn`{`4esn`:$999[0Xa..][9e1..]}))) Merge #usn8=({#usn7:12e12 In $`5esn`}) On Create Set @usn6+=None(`3esn` In `2esn`[..01][..True] Where usn1 In ``)[None(usn2 In 7[12] Where 12e12 =~$`7esn`)..],Single(#usn7 In 9e1[$`1esn`..] Where Count ( * ) In 0.12).@usn6? =7[0e0..] On Create Set ``+=$``[7],[@usn6 In False Contains 0 Contains $`6esn` Where 12.e12 =~.0 =~usn1|$`4esn` Contains .e0 Contains 0Xa].`` =$`7esn`[123456789..$1000][Count ( * )..$7] Union All Return *,12 Ends With True Ends With @usn6,Filter(`5esn` In 0X7 In $#usn7 Where 010 Is Null) Is Not Null As `2esn` Order By $123456789[12e12..9e0] Asc,1e1 Contains 0.e0 Contains 9e1 Ascending,.e12[@usn6..][010..] Desc Limit $`7esn` In False In $`1esn`"),
    octest:ct_string("Unwind $7[999][usn1] As `` Match (((:usn1:`3esn`{`8esn`:12 Starts With True Starts With 12e12,`8esn`:`2esn` Starts With $`7esn`})<-[`7esn`?:`2esn`|`4esn` *..010{usn1:0e0[``..$1000][$7..12.e12],`5esn`:0x0 Starts With $`6esn`}]->(@usn5 {_usn4:`5esn` Contains #usn7 Contains 9e12})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]}))) Where .e1[..\"d_str\"][..$123456789] Unwind 9e0 Is Not Null Is Not Null As `4esn`"),
    octest:ct_string("With  $@usn6[..12] As #usn8,`6esn`(`4esn` Ends With 12 Ends With .12,@usn5 Is Not Null)[Extract(`3esn` In 9e1 Contains $999 Where .e12 Ends With 0Xa Ends With 0xabc|1e1 Is Not Null Is Not Null)..Filter(usn2 In 7[12] Where usn2[12.e12..])] As #usn8,[`5esn` In 0X7 In $#usn7 Where 0.e0['s_str'..][01234567..]][(`6esn` {_usn4:$`5esn` Is Not Null Is Not Null})-[ *999..{`3esn`:123456789 =~$999,_usn4:`4esn` Is Not Null Is Not Null}]-(usn1 :_usn4{`4esn`:`7esn` Is Null})] Order By 12.e12[..9e1][..$_usn3] Descending,Extract(usn2 In 7[12] Where $@usn5[0.0][0X0123456789ABCDEF])[[#usn7 In 9e0[$1000] Where 01 Ends With 0Xa Ends With 0X7|`2esn`[$usn2][12.0]]..][Filter(#usn8 In `7esn` Where @usn6[999..$_usn3][0.12..$@usn5])..] Desc Skip @usn6(Count ( * ) In True In @usn5)[None(#usn7 In True Contains 's_str' Contains $usn1 Where usn2 Contains $0 Contains .0)..Single(#usn7 In $999 In 1e1 Where _usn4 Contains `` Contains 1.e1)] Limit Extract(usn2 In 7[12] Where usn1 Starts With 00|`8esn` Contains Count(*) Contains $#usn7) Contains None(@usn6 In False Contains 0 Contains $`6esn` Where $usn2[0.e0]) Contains Extract(@usn6 In False Contains 0 Contains $`6esn` Where $usn2[`4esn`..9e12]|$`4esn`['s_str'..]) Where `1esn` Is Not Null Is Not Null Union Unwind 1.e1 Starts With 9e12 As `8esn` Unwind `5esn`[Count ( * )] As @usn6"),
    octest:ct_string("With  *,All(#usn7 In $999 In 1e1 Where 1.e1 In 1000 In _usn3) Contains (`6esn` :`8esn`{@usn6:12.e12 Contains #usn7 Contains $_usn4})-[`8esn`{`7esn`:9e12 Starts With 1e1}]-(_usn3 :_usn4) Contains [`8esn` Is Not Null Is Not Null,12 Starts With #usn7 Starts With 0Xa,.0 Starts With `1esn`] As `8esn` Where $`7esn`[.e1][12.0] Union Unwind $1000 Ends With `8esn` Ends With `2esn` As `3esn`"),
    octest:ct_string("Unwind Count(*)[.e12..][01234567..] As `6esn` Union All Merge `7esn`=(((`` :`5esn`)-[ *0..01{@usn6:$0[123.654..0.e0]}]->(usn1 :`1esn`:_usn4{_usn3:@usn6[999..$_usn3][0.12..$@usn5],`1esn`:9e12[..1e1][..'s_str']})<-[`8esn`{`8esn`:usn1 Contains 010,_usn4:`5esn` Contains $`5esn` Contains 0X7}]-({#usn8:0xabc In 010 In #usn7}))) On Create Set `3esn` =12[.0],All(#usn7 In $999 In 1e1 Where 9e12[..1e1][..'s_str'])._usn4? =12 Starts With True Starts With 12e12 Merge usn1=((`` )<-[usn2?:`6esn`|:#usn8 *999..]-(`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})<-[?:usn2{usn2:@usn5 Is Not Null}]-(`7esn` {#usn8:False Starts With 0X7 Starts With 01234567})) With  `8esn` Is Null As `2esn`,[#usn7 In 9e1[$`1esn`..] Where $@usn5 In $`6esn` In 12e12|12.0 Is Null Is Null] Contains [`3esn` In `2esn`[..01][..True] Where $0 Ends With $usn1 Ends With $_usn3] As #usn8 Order By Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12) Starts With [12 In $usn1 In 7,`6esn` Ends With Count ( * ) Ends With Count ( * ),`2esn` Starts With $`7esn`] Starts With usn2(Distinct .0[..'s_str'][..01234567],Count(*) In 12 In `6esn`) Ascending,_usn4[.12..$usn2][$_usn3..123.654] Desc,`4esn`[\"d_str\"]['s_str'] Ascending Skip Filter(@usn5 In 9e0 Ends With $#usn8) Contains {@usn6:#usn7[`8esn`..usn1][$999..`7esn`]} Contains (:#usn7:`5esn`)-[?$7]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0})<-[@usn5? *01..123456789{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`}]->(`` :usn2{@usn5:$`4esn` Contains _usn3 Contains `8esn`,`7esn`:$`4esn`[`4esn`][Count(*)]}) Where $@usn6[$`8esn`..][123456789..]"),
    octest:ct_string("Detach Delete 12e12[12e12][$#usn7] Delete [_usn4 In 12e12 In 123456789 Where `3esn`[0X0123456789ABCDEF..][07..]] Contains Extract(`5esn` In 0X7 In $#usn7|0[1e1][$usn1]) Contains None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07 Is Not Null Is Not Null),0x0 In `8esn`"),
    octest:ct_string("Return *,`3esn`(#usn8 =~0.e0,1000[0e0][1e1])[[_usn3[0x0],1e1 In 0.0 In 0X0123456789ABCDEF]] As usn1,Extract(usn2 In 7[12] Where $@usn5[0.0][0X0123456789ABCDEF])[[#usn7 In 9e0[$1000] Where 01 Ends With 0Xa Ends With 0X7|`2esn`[$usn2][12.0]]..][Filter(#usn8 In `7esn` Where @usn6[999..$_usn3][0.12..$@usn5])..] Merge `1esn`=(`8esn` :@usn6)<-[?:usn2 *0x0..]->(:`2esn`{usn1:.0[..'s_str'][..01234567],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})-[`5esn`? *01..123456789{`5esn`:@usn6[9e12],`5esn`:@usn6[999..$_usn3][0.12..$@usn5]}]-(`1esn` {`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]}) On Create Set [#usn8 In `7esn` Where 01 Ends With 0Xa Ends With 0X7|`8esn` Contains Count(*) Contains $#usn7].``? ={`5esn`:$`1esn` In .e0,``:`6esn` Ends With Count ( * ) Ends With Count ( * )} Is Null Is Null,`8esn`+=$7 Is Null,`7esn` =_usn4 In #usn7 Unwind $12 Starts With $0 Starts With $`8esn` As usn2 Union Return Distinct *,1.e1 Ends With $#usn7 As usn2,@usn5[01][@usn5] Skip $`5esn` Limit (`7esn` :`2esn`{`4esn`:0[1e1][$usn1],usn2:`8esn`[..$#usn8]})-[:`6esn`|:#usn8{``:`1esn` Starts With 0xabc Starts With $usn2}]-(_usn3 :`2esn`{@usn5:`4esn` Is Not Null Is Not Null})-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01}) Is Not Null Union Return Distinct *,9e12 =~@usn6,`4esn` Contains 9e0 Order By 1000[..$1000] Descending Skip Filter(`6esn` In $`6esn`[``..][Count(*)..]) Ends With None(`5esn` In 0X7 In $#usn7 Where 12.0 Is Null Is Null) Limit {``:123.654 In $`7esn`}[All(`3esn` In `2esn`[..01][..True] Where 0Xa =~False =~@usn5)..None(@usn6 In False Contains 0 Contains $`6esn` Where $@usn6 =~#usn7 =~True)] Detach Delete Null Ends With _usn4 Ends With 0.0 Optional Match ((`1esn` {usn1:12e12 In $`5esn`})<-[`8esn`?:#usn7|@usn5{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3}]-(:usn1:`3esn`{@usn6:.0 Ends With Count ( * )})),#usn8=({`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})"),
    octest:ct_string("Return Distinct $usn2 =~0.e0 =~@usn6,{`2esn`:'s_str'[0..],`7esn`:0Xa[Count(*)..]}[..None(#usn7 In $999 In 1e1 Where 123456789 =~@usn6)] As _usn3,0X7[`2esn`..] As `5esn` Skip `1esn` Contains $999 Contains 0.0 Limit ``[..False][..`3esn`] With  *,`` =~.12 As #usn7 Skip usn2 =~7 Limit 0x0 In 0.e0 In #usn8 Where `2esn`[..01][..True] With  Any(#usn7 In 9e0[$1000] Where 123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]) Contains [$`4esn` In 1.e1 In #usn7,usn1[False..]] Contains Extract(@usn5 In 9e0 Ends With $#usn8 Where $`3esn` In $usn2) As #usn7 Order By @usn5[0..] Ascending,$@usn5 In $`6esn` In 12e12 Desc,#usn7 In 0.e0 Desc Skip {`8esn`:$_usn4 Starts With 12.e12} Is Null Is Null Limit 999 Contains $1000 Where 999 In #usn8 In $`` Union All With  123456789 Contains 0Xa As usn1,True Contains 's_str' Contains $usn1 As `8esn`,`2esn` Is Null As `8esn` Order By .e12[0Xa..] Descending,`5esn`[$`7esn`..$@usn5] Ascending,`5esn`[..True][..0.e0] Descending Where $@usn5[..$#usn7] Unwind 1000[7..$12] As @usn6 Union Unwind @usn6[..$@usn5] As #usn7 Unwind Count(*)[``..#usn8][`3esn`..0xabc] As @usn5"),
    octest:ct_string("With  *,`3esn`[...e1] Order By $_usn4[01..][$_usn4..] Ascending,Single(#usn7 In 9e1[$`1esn`..] Where usn2 Is Not Null)[[07[_usn3..][`6esn`..],999[123.654..$usn2][Count ( * )..0x0]]..][Single(usn2 In 7[12] Where $@usn5[..0xabc][..$`3esn`])..] Descending,.e12[0Xa..] Descending Skip [_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 999 Is Not Null Is Not Null|$`8esn`[123456789..][$@usn5..]] Contains (`1esn` {@usn5:`2esn` Starts With $`4esn`})<-[?{@usn6:$0[0Xa..$123456789],`4esn`:`7esn` Contains 9e0}]->(`2esn` {`1esn`:$`4esn` Is Null Is Null})<-[?:#usn7|@usn5 *0X0123456789ABCDEF..{_usn3:@usn5 Is Not Null}]-({#usn8:0xabc In 010 In #usn7}) Contains Extract(#usn7 In $999 In 1e1 Where .e0 Is Not Null Is Not Null|$`5esn` Is Not Null Is Not Null) Limit usn1[_usn3..] Where #usn7 Contains $0 Contains $usn2 Delete 123456789 Is Null Is Null,{#usn8:12.0 Ends With `2esn`,@usn5:usn1 Starts With 00}[Any(#usn7 In True Contains 's_str' Contains $usn1 Where usn2 Contains $0 Contains .0)..] Union All Optional Match usn1=((:@usn5{@usn5:$12[9e0..$999]})<-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(`1esn` :`6esn`:_usn3{#usn7:0x0[$0][7]})-[{`4esn`:.e1 In 123456789}]-(:`3esn`{``:$@usn5 Is Null Is Null,`8esn`:.e1[..\"d_str\"][..$123456789]})) Return @usn5(Distinct 12e12 In 123456789,12.0 =~@usn6 =~$`2esn`)[`8esn`(123456789 =~$999)][`2esn`($`2esn`[..$`3esn`][..12e12])],Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where 12.e12 Starts With \"d_str\" Starts With 9e1|$@usn5 In $`6esn` In 12e12) Ends With (:`7esn`{#usn7:0 =~1.e1 =~$#usn7})<-[`1esn`:`8esn` *7..]->(`` {#usn8:.e12 Is Null Is Null,@usn6:`1esn` Is Not Null Is Not Null}),`1esn`($`4esn`[`4esn`][Count(*)],`2esn` Starts With $`7esn`) =~Extract(@usn5 In 9e0 Ends With $#usn8 Where .e0 Starts With $@usn6 Starts With $7) =~{`3esn`:_usn3[`2esn`..0X7][0.e0..$`3esn`]} Union All Delete _usn4(Distinct $@usn6[$`8esn`..][123456789..],$`` Starts With $1000 Starts With @usn6)[[#usn7 In True Contains 's_str' Contains $usn1 Where $usn2 =~1.e1 =~usn1]..][All(#usn7 In True Contains 's_str' Contains $usn1 Where $`2esn` Contains Count(*))..],``(Distinct 00 Ends With `` Ends With 12.e12,`6esn`[..Count ( * )][..$_usn4]) In (usn1 :#usn8:`1esn`{`3esn`:`2esn` In 9e0 In 7})<-[`7esn`?:#usn8|:`3esn`{`6esn`:'s_str'[0..]}]->(#usn8 :`8esn`$#usn8) In Filter(@usn6 In 010[`5esn`] Where 1.e1[$usn1]) Return Distinct @usn5[01][@usn5],9e0 Contains $12 Contains `3esn` As #usn8,{`4esn`:0.0[usn1..],`7esn`:12.0[$1000..][#usn7..]}[Any(`6esn` In $`6esn`[``..][Count(*)..] Where $#usn7 Ends With 's_str' Ends With 0X7)..[usn1[..$@usn6][..00],0x0[0X7],$`8esn`[123456789..][$@usn5..]]][[12.e12[..$`6esn`],999 In #usn8 In $``]..Extract(#usn7 In 9e1[$`1esn`..] Where 00 Contains Count ( * ) Contains 0x0|$`5esn` =~usn1)] Skip {`3esn`:$@usn6 Is Not Null Is Not Null,`1esn`:12e12 =~1e1}[[@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str']|$`3esn`[..0xabc][..$7]]..][(_usn4 {`6esn`:$_usn4 =~$`1esn` =~`2esn`,_usn3:#usn8 Is Null})-[?:#usn7|@usn5 *0X0123456789ABCDEF..{_usn3:@usn5 Is Not Null}]-(#usn8 {`5esn`:$12[$usn1..][Count(*)..],`7esn`:0e0[``..$1000][$7..12.e12]})-[_usn4?{_usn3:.e1[.e1..`1esn`],@usn6:.12 In `8esn` In $#usn8}]->(usn2 :@usn5)..]"),
    octest:ct_string("Detach Delete 9e0[Count(*)..0.12][$`1esn`..12.0] Union All Unwind .e0[9e12..] As usn2 Union Remove Any(`6esn` In $`6esn`[``..][Count(*)..] Where False Contains 0 Contains $`6esn`).usn1!,{`1esn`:`1esn`[$@usn6][07]}.`1esn` Unwind #usn7[..07] As usn1"),
    octest:ct_string("Optional Match (((:`1esn`:_usn4{usn2:0x0 Starts With $`6esn`,_usn4:$`4esn`[`8esn`]})<-[@usn6?:_usn3|:`7esn`{@usn6:$`3esn`[.e1][_usn4]}]-(`` {`7esn`:$#usn7[..0Xa]})<-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(`3esn` {`3esn`:$@usn6 Is Not Null Is Not Null,`1esn`:12e12 =~1e1}))),_usn3=(`` {`7esn`:.e0 Is Not Null Is Not Null,@usn6:.e1[..$`3esn`][..01]})-[usn1?:`2esn`|`4esn`{#usn7:$#usn7[..9e0][..123.654],usn2:.e0 Is Not Null Is Not Null}]-(`8esn` :@usn6)<-[ *01234567..]->(:``:usn2{`5esn`:$12 Starts With $usn1}) Where _usn4[`7esn`]"),
    octest:ct_string("Merge _usn3=(`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`}) On Match Set {_usn3:0Xa[$`8esn`..][$_usn4..],usn1:True Starts With Null}.usn1 ={`4esn`:12e12 =~$`7esn`} Is Not Null Is Not Null Union All Remove (#usn8 :`8esn`$#usn8)-[usn2{``:$`1esn` =~999}]-(:usn1:`3esn`{``:$#usn7 In $@usn5 In $`1esn`,#usn7:999[@usn5..][Null..]})-[`7esn`:`4esn`|@usn5 *12..]-(@usn6 :usn1:`3esn`).@usn5?"),
    octest:ct_string("Optional Match ((_usn3 {#usn7:12.e12 Ends With `` Ends With 0,``:$@usn6 In @usn6 In 1e1})<-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(:`8esn`{``:$`1esn` =~999})) Where @usn6[9e12] Union All Unwind #usn7[..07] As usn1"),
    octest:ct_string("Merge (`5esn` :``:usn2)<-[`8esn` *0xabc{#usn8:12.0 Starts With .12 Starts With `6esn`,@usn5:_usn3[`5esn`..][usn2..]}]->(@usn6 :usn1:`3esn`{@usn5:999 Starts With `2esn` Starts With .e1,``:0xabc In Null})<-[usn2?:@usn5|_usn3*{_usn4:@usn5 Starts With $`3esn`,#usn7:$`5esn` Is Not Null}]-(#usn7 :``:usn2) On Match Set (:_usn3)<-[`2esn`? *01..123456789]-(@usn6 :``:usn2{usn1:0x0[0X7],@usn5:`4esn`[.12][$@usn6]}).#usn8! =Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $12[9e0..$999]|.12 Starts With _usn3 Starts With $``),{`1esn`:`8esn` Is Not Null Is Not Null}.`4esn`? =$@usn5 Starts With `5esn` Starts With 01234567,{`7esn`:0X7['s_str'..][01..],`8esn`:0.e0[0X0123456789ABCDEF..]}.``? =12 In $usn1 In 7 On Create Set #usn7+=Single(usn2 In 7[12] Where `7esn` Is Null)[..Single(`6esn` In $`6esn`[``..][Count(*)..] Where $7 In $usn1 In 999)][..Any(#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4)] Union Match _usn4=((`1esn` :#usn7:`5esn`{`1esn`:0e0 =~0Xa =~$999})),#usn8=(:`7esn`{_usn3:@usn5[0.0..0X7]}) Where 010 Is Null Is Null Union All With Distinct *,@usn6[9e12],$`3esn`[..0xabc][..$7] Skip All(#usn7 In True Contains 's_str' Contains $usn1 Where $`1esn` Starts With Count(*)) In Any(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn`[0..][999..]) In Filter(`3esn` In 9e1 Contains $999 Where .e0 Is Not Null Is Not Null) Limit Single(`5esn` In `7esn`[$usn2..][$123456789..] Where 12e12 Is Not Null) Is Not Null Is Not Null Where 1000[12e12][`5esn`] Optional Match `2esn`=(((`6esn` :`4esn`:`6esn`)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})<-[`4esn` *0Xa{@usn6:999 Starts With `2esn` Starts With .e1,`4esn`:$@usn5[..0xabc][..$`3esn`]}]->(@usn6 :``:usn2))),`7esn`=((`6esn` :`5esn`)<-[:`1esn`|`3esn` *0Xa{_usn4:``[9e12][$999],#usn8:123.654 In 12}]-(`5esn` :`4esn`:`6esn`)) Where 07 Is Not Null Is Not Null"),
    octest:ct_string("Merge #usn7=(((:usn1:`3esn`{_usn3:$`6esn`[1.e1][$_usn3]})-[:`` *123456789..{`1esn`:`8esn` Is Not Null Is Not Null}]-(#usn8 :`2esn`)<-[ *00..0Xa]->(`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null}))) On Create Set [`6esn` In $`6esn`[``..][Count(*)..] Where 0x0[$0][7]|$`4esn`[`8esn`]].usn1 =Any(_usn4 In 12e12 In 123456789 Where _usn3 In $`8esn` In @usn6)[Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789])][All(@usn5 In 9e0 Ends With $#usn8)] On Match Set Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn` Contains .e0 Contains 0Xa).@usn6! =0.e0 Is Not Null Is Not Null,`1esn` =07 In `6esn`"),
    octest:ct_string("Unwind [_usn4 In 12e12 In 123456789 Where `3esn`[0X0123456789ABCDEF..][07..]] Contains Extract(`5esn` In 0X7 In $#usn7|0[1e1][$usn1]) Contains None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07 Is Not Null Is Not Null) As `7esn` Unwind Extract(@usn6 In 010[`5esn`] Where 00[$usn1..]|_usn3[$usn2..][$``..])[Any(#usn7 In 9e1[$`1esn`..] Where #usn7[0])] As _usn3 Remove All(@usn6 In 010[`5esn`] Where 1.e1[$usn1]).`6esn`!,Extract(@usn6 In 010[`5esn`]|False[$`4esn`..]).@usn5 Union All Remove None(`6esn` In $`6esn`[``..][Count(*)..] Where 07 Is Not Null Is Not Null).`8esn`,[@usn6 In 010[`5esn`] Where $@usn5 Ends With @usn5 Ends With 0xabc|12.0 Starts With $`2esn` Starts With .e1].`3esn`?,7._usn4 Remove None(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]).`1esn`?,Extract(#usn7 In $999 In 1e1 Where _usn4 Is Not Null Is Not Null|0 =~1.e1 =~$#usn7).@usn5!,(`1esn` {`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]})-[_usn3:usn1|`4esn`{`6esn`:12e12 =~1e1}]-(@usn6 :_usn4{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}).@usn5"),
    octest:ct_string("Detach Delete $7 In $usn1 In 999,00[1.e1..],`8esn` =~@usn6 =~$`2esn` Match _usn3=(`1esn` )<-[? *0xabc]-(:@usn6{`6esn`:01 Ends With 0Xa Ends With 0X7}) Where @usn5 Starts With 9e0 Starts With 010 With Distinct (:@usn5{@usn5:999[..`1esn`][..07],_usn4:Count ( * ) Ends With $123456789})<-[`2esn`? *01..123456789]-(`2esn` :@usn6)[[`2esn`[..$_usn4][...12],False Contains 0 Contains $`6esn`,.e1[12.0..]]..[#usn7 In 9e0[$1000] Where #usn8 =~0.e0|12.e12 =~0X0123456789ABCDEF =~1.e1]],`1esn`[0Xa] As usn1,usn1 Contains 010 As @usn5 Order By [Count(*)[9e12..12.0]] Starts With [`5esn` In 0X7 In $#usn7 Where 123456789 =~$999|$`8esn` Is Not Null Is Not Null] Starts With [$usn2 Is Not Null Is Not Null,0 =~1e1] Ascending,None(`3esn` In 9e1 Contains $999 Where 0xabc In Null) Is Not Null Descending,Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $12[9e0..$999]|.12 Starts With _usn3 Starts With $``) Descending Limit Filter(`6esn` In $`6esn`[``..][Count(*)..] Where $7 In $usn1 In 999) Ends With Any(usn2 In 7[12] Where 0X7[.0]) Where @usn6 Is Not Null Is Not Null Union Delete $`1esn` Contains 1e1 Contains @usn6,None(#usn7 In 9e0[$1000] Where $_usn3 Is Null)[[0 =~1e1,$#usn8[12.e12..`8esn`][12.0..0.0],$1000 Is Not Null]..],(usn2 :_usn4)-[_usn4? *999..{_usn3:$`5esn` =~usn1}]-({`8esn`:usn2 Starts With .0,@usn5:Count(*) In 12 In `6esn`}) Starts With [`3esn` In `2esn`[..01][..True] Where _usn4 Is Null Is Null|_usn3 In $`8esn` In @usn6] Starts With [@usn5 In 's_str'[0..] Where `6esn`[..Count ( * )][..$_usn4]] Return Distinct *,None(usn2 In 7[12] Where 123456789 =~12 =~'s_str')[{@usn5:$`` Contains $`2esn` Contains $usn2}..][(`2esn` :`6esn`:_usn3)-[?:#usn8|:`3esn` *7..]-({`7esn`:9e12 =~@usn6})..] As `1esn` Merge usn1=((`2esn` :@usn5)) On Match Set Any(#usn8 In `7esn` Where $`3esn` Contains $`1esn`).`8esn`? =0x0 Contains $`6esn` Contains `4esn`,Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where False[$usn1][0x0]|@usn5[0.0..0X7]).usn2! =Single(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where @usn6 In .12 In `3esn`) Contains {usn2:.12[123.654..],`2esn`:`8esn`[$`4esn`..$#usn8]} Contains All(#usn7 In $999 In 1e1 Where 9e12 Starts With 1e1),`3esn` =12.e12[..$999][..07] On Match Set usn1 =`5esn` Contains `5esn` Contains $_usn3,#usn8 =True Contains 0x0 Contains $_usn3"),
    octest:ct_string("Create `4esn`=(`` {`8esn`:@usn5 Starts With $`3esn`,_usn4:`6esn` Is Null Is Null})<-[`7esn`:`2esn`|`4esn`{_usn4:.e1[7..][9e0..]}]-(usn2 :usn1:`3esn`{`3esn`:`2esn` Is Null})<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(:`5esn`{#usn8:$``[True],`1esn`:@usn5 Is Null}),(:`6esn`:_usn3{`6esn`:`2esn` Starts With $`7esn`}) With  *,#usn7[``] As usn1,None(#usn7 In $999 In 1e1 Where 123456789 =~@usn6) =~Single(`3esn` In 9e1 Contains $999 Where .12 In `8esn` In $#usn8) =~(`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[`5esn`?{_usn4:$usn2 =~9e1}]->(`8esn` :#usn8:`1esn`{usn2:12.e12 Ends With $``,`2esn`:1e1 Contains 's_str' Contains `3esn`})-[`` *1000..0X0123456789ABCDEF]-(:usn1:`3esn`{_usn3:$`6esn`[1.e1][$_usn3]}) Order By $@usn6 In @usn6 In 1e1 Desc,.e1[..$`3esn`][..01] Desc Limit _usn3 Is Null Is Null Unwind 9e0[Count(*)..0.12][$`1esn`..12.0] As @usn6 Union All Unwind $999 Starts With 12 Starts With 1e1 As `1esn` Merge `1esn`=((`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})-[?$7]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0}))"),
    octest:ct_string("Unwind $`5esn`[`7esn`] As @usn5 With  None(#usn7 In $999 In 1e1 Where _usn3 Contains 9e12 Contains `8esn`)[..Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 0xabc In 123456789 In 0x0|Count(*)[..@usn6][..`7esn`])] As `3esn`,9e1[@usn5][$usn1] As `5esn`,`4esn` Starts With 0e0 As `7esn` Order By 1.e1 Contains `6esn` Contains 0.e0 Descending,07[..07][..0X7] Descending Limit Single(_usn4 In 12e12 In 123456789 Where 0e0 =~7 =~12.0) Starts With Extract(#usn7 In 9e0[$1000] Where 123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]|9e12 =~@usn6) Return Distinct *,$#usn8[12.e12..`8esn`][12.0..0.0] As #usn8 Order By $#usn7[..9e0][..123.654] Descending,usn1[False..`5esn`][$1000..$12] Ascending,$usn2 =~1.e1 =~usn1 Desc Skip True Contains 0x0 Contains $_usn3 Limit `4esn` In 010 Union All Unwind @usn5(Distinct 12e12 In 123456789,12.0 =~@usn6 =~$`2esn`)[`8esn`(123456789 =~$999)][`2esn`($`2esn`[..$`3esn`][..12e12])] As usn2 Return Distinct *,False Is Null Order By 0X7[..$`8esn`] Desc,[@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str']|$`3esn`[..0xabc][..$7]] Is Null Ascending,12.e12 Ends With `` Ends With 0 Desc Skip Any(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 0xabc In 123456789 In 0x0)[..{`5esn`:0Xa[$`8esn`..][$_usn4..],_usn3:00[$usn1..]}][..Any(@usn6 In 010[`5esn`] Where 1.e1[$usn1])]"),
    octest:ct_string("Create (usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}),({#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})<-[ *..07{_usn3:0e0 =~7 =~12.0,usn2:123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]}]->(`4esn` :@usn5)<-[_usn4?:@usn6|:`7esn`]->({`6esn`:'s_str' Contains 12.e12 Contains $`4esn`}) Create ((`7esn` :`2esn`{`4esn`:0[1e1][$usn1],usn2:`8esn`[..$#usn8]})<-[_usn4?:usn2]-(@usn6 :`6esn`:_usn3{@usn5:0xabc =~$@usn5,usn1:0Xa[$`8esn`..][$_usn4..]})-[`3esn`?:`7esn`|:`2esn`]-(`5esn` :#usn8:`1esn`{_usn3:`6esn` Is Null Is Null})) Remove (:#usn7:`5esn`{usn1:.e1[..$`3esn`][..01],`4esn`:$`5esn` In .12})-[? *0Xa]-(`8esn` {``:12 Starts With #usn7 Starts With 0Xa,`8esn`:``[usn1][`5esn`]}).`2esn`! Union Create (@usn6 {`4esn`:9e1 Contains 12}) Return *,0X7[`2esn`..] As `6esn`,$`1esn` Contains 1e1 Contains @usn6 As `3esn` Order By $_usn3[_usn4..] Descending,9e1 Contains $999 Ascending Unwind 07[999] As @usn6"),
    octest:ct_string("With Distinct $@usn5 Contains 's_str' Contains \"d_str\" As @usn5 With Distinct *,[1000[0e0][1e1],12.0 Is Null Is Null] Is Not Null Is Not Null Order By $`5esn`[$`6esn`][`2esn`] Descending,`6esn`[..$`4esn`] Descending,12 Starts With $123456789 Starts With .e12 Ascending Limit [`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]|usn2 =~7] Contains Any(`3esn` In 9e1 Contains $999 Where _usn4[0]) Union All Create `2esn`=()-[:@usn6|:`7esn`{#usn7:.0[.e12..],usn2:usn2 =~usn1 =~Count ( * )}]-(:`4esn`:`6esn`{usn1:0 =~1e1,`7esn`:$#usn8[12.e12..`8esn`][12.0..0.0]})-[_usn3:`5esn`|:usn2 *999..{`3esn`:`5esn` Contains $`5esn` Contains 0X7}]-(`8esn` {`1esn`:$`4esn` Is Null Is Null})"),
    octest:ct_string("Merge (((usn1 :`8esn`)<-[@usn5? *01..123456789{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`}]->(`` :usn2{@usn5:$`4esn` Contains _usn3 Contains `8esn`,`7esn`:$`4esn`[`4esn`][Count(*)]})<-[? *0xabc]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})))"),
    octest:ct_string("Remove Extract(_usn4 In 12e12 In 123456789 Where .e1 Starts With 12.e12 Starts With `2esn`|$@usn5 Is Null Is Null).@usn5!,Extract(@usn6 In 010[`5esn`] Where $0[0Xa..$123456789]|#usn7[0.e0..]['s_str'..]).`8esn`?,(:#usn8:`1esn`$`7esn`)-[?:@usn6|:`7esn` *0X0123456789ABCDEF..{_usn4:0x0[12e12..$`7esn`]}]->({@usn5:Count(*) Is Not Null Is Not Null}).`5esn`?"),
    octest:ct_string("Create (usn2 :`7esn`)<-[usn1]->(:`6esn`:_usn3{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})<-[? *7..{`1esn`:12[..$999][..$`2esn`],usn2:9e1}]-(usn2 :usn1:`3esn`{`3esn`:`2esn` Is Null}) Return Distinct Count ( * ) In True In @usn5 Order By 0X0123456789ABCDEF[0X7..$`2esn`][$`5esn`..$usn2] Asc,`6esn`(`4esn` Ends With 12 Ends With .12,@usn5 Is Not Null)[Extract(`3esn` In 9e1 Contains $999 Where .e12 Ends With 0Xa Ends With 0xabc|1e1 Is Not Null Is Not Null)..Filter(usn2 In 7[12] Where usn2[12.e12..])] Desc Optional Match `5esn`=(`2esn` :`1esn`:_usn4)-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-({`6esn`:9e12 =~@usn6}) Union All Create `4esn`=(`` {`8esn`:@usn5 Starts With $`3esn`,_usn4:`6esn` Is Null Is Null})<-[`7esn`:`2esn`|`4esn`{_usn4:.e1[7..][9e0..]}]-(usn2 :usn1:`3esn`{`3esn`:`2esn` Is Null})<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(:`5esn`{#usn8:$``[True],`1esn`:@usn5 Is Null}) Detach Delete 12 Starts With $123456789 Starts With .e12"),
    octest:ct_string("Unwind #usn7[..07] As usn1 Union All Match #usn7=((`7esn` :`1esn`:_usn4{@usn5:0x0[usn1..usn1],`6esn`:`4esn`[$_usn3..$`7esn`]})-[usn2?:`5esn`|:usn2{`2esn`:`7esn`[$usn2..][$123456789..],@usn5:9e1 Starts With Count ( * )}]->({`3esn`:`5esn` Contains $`5esn` Contains 0X7})-[`6esn` *00..0Xa{usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01}]->(:usn1:`3esn`{@usn6:0.e0 Starts With .0 Starts With 123456789,`4esn`:.e1[7..][9e0..]})) Where 0.0 Contains #usn7 With  $@usn6 Ends With 12.e12 Ends With @usn5 As usn2 Where 12.0 Is Null Delete 12.e12 Contains `6esn`,$1000 Is Not Null,`1esn`[$@usn6][07] Union Remove Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where _usn4[`7esn`]|0xabc[..$1000][..`5esn`]).`4esn`?,[`5esn` In `7esn`[$usn2..][$123456789..] Where 12e12 Is Not Null].#usn8? Remove (usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})-[? *0Xa{usn1:`3esn`[0x0..]}]->(:`5esn`{`1esn`:0.e0})._usn3"),
    octest:ct_string("Create (((`1esn` {`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]})<-[`7esn`:#usn7|@usn5*{`8esn`:$`3esn`[$_usn4..0Xa]}]-(:_usn4{_usn3:$#usn7[..0Xa],@usn5:12e12 In 123456789})<-[`8esn`:#usn7|@usn5 *00..0Xa]->({`6esn`:9e1 Is Not Null Is Not Null,`8esn`:_usn3 In $`8esn` In @usn6}))),((:`4esn`:`6esn`{`2esn`:12e12 =~1e1,``:12.e12 Contains #usn7 Contains $_usn4})-[`5esn`?:`6esn`|:#usn8{`3esn`:$`1esn` In .e0,@usn6:12.0 =~@usn6 =~$`2esn`}]-({`5esn`:#usn8 =~.e0})<-[`1esn`?:usn1|`4esn` *..010]-(usn1 :_usn4{`4esn`:`7esn` Is Null})) Remove {``:07[$`2esn`..9e12][$`4esn`..9e12],`3esn`:$`6esn` Starts With .e12 Starts With $`1esn`}.`1esn`!,Filter(#usn8 In `7esn` Where 9e1 Starts With Count ( * )).@usn5!,(usn2 {`5esn`:$@usn5 In 12e12 In 01})<-[`7esn`{`4esn`:$_usn4[$`6esn`..],`4esn`:Count(*) In #usn8 In \"d_str\"}]->(`3esn` :usn2)-[`4esn`?*..{``:`` =~.12,usn1:123.654 Is Not Null}]-(@usn6 :`4esn`:`6esn`{``:999 Contains 0 Contains $`5esn`,`6esn`:_usn3[12.e12..][`5esn`..]}).`8esn`? Union Unwind {`8esn`:9e12 =~@usn6,`1esn`:999 Contains 0 Contains $`5esn`}[`4esn`()] As #usn8 Delete {`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]}[..`2esn`(Distinct 0 Ends With 12.e12 Ends With usn2)][..Filter(_usn4 In 12e12 In 123456789 Where .e1 In 123456789)],Extract(@usn6 In 010[`5esn`] Where @usn6 Contains .12 Contains $usn1) Is Not Null Merge ((:_usn4{`1esn`:0e0 =~0Xa =~$999})<-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]-(`` :`5esn`{@usn5:123456789 =~@usn6})<-[`1esn`?:usn1|`4esn` *..010]-(usn1 :_usn4{`4esn`:`7esn` Is Null})) On Match Set {usn2:$@usn6 =~#usn7 =~True,_usn3:07 In `6esn`}.`3esn` =$`5esn`[$`6esn`][`2esn`] Union Detach Delete $123456789[12e12..9e0] Remove [12.0 Starts With .12 Starts With `6esn`,usn2 Contains $0 Contains .0,$#usn7 In $@usn5 In $`1esn`].`7esn`!,Single(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0[0.0]).`3esn`?"),
    octest:ct_string("Create (@usn5 :`1esn`:_usn4),`3esn`=(`` {`1esn`:123456789 =~@usn6,`1esn`:$`5esn`[0X7..010][`7esn`..'s_str']})<-[`6esn`? *00..0Xa]->(_usn4 :@usn5{usn1:$#usn7 Starts With 01234567 Starts With $0})<-[:#usn8|:`3esn` *12..{`8esn`:12 Ends With Count ( * ),usn2:Count ( * ) In True In @usn5}]-(`7esn` :usn2{`3esn`:12.0 In 123.654 In _usn4}) Match @usn5=(:`6esn`:_usn3{`6esn`:`2esn` Starts With $`7esn`})<-[:`2esn`|`4esn` *12..]->({`7esn`:`4esn` Is Not Null Is Not Null,`4esn`:`4esn` Ends With 12 Ends With .12})<-[?:#usn8|:`3esn`{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]-(:usn1:`3esn`{_usn4:$#usn7 Contains $`7esn` Contains .e12}) Merge (((:#usn7:`5esn`{_usn4:$usn2 =~9e1})-[_usn4 *01234567..{@usn5:0xabc =~$@usn5,usn1:0Xa[$`8esn`..][$_usn4..]}]->(`5esn` :`4esn`:`6esn`)<-[`6esn`? *00..0Xa]->(#usn7 :#usn8:`1esn`{``:.0[$``..0X7]}))) Union Merge ((:`4esn`:`6esn`{@usn5:$#usn7[..9e0][..123.654],`2esn`:7[12]})) On Create Set [12 =~usn1,7 =~`4esn`,``[9e12][$999]].`1esn` =Extract(#usn7 In $999 In 1e1 Where `5esn`[..True][..0.e0]|$`5esn` =~$0 =~``) In (:`7esn`{#usn8:0Xa Ends With $`3esn` Ends With $1000})-[:`5esn`|:usn2 *01234567..]-(:`2esn`{_usn3:@usn5[0.0..0X7]}) In Extract(#usn7 In True Contains 's_str' Contains $usn1 Where 9e1[$#usn8][$1000]|999 Contains 0 Contains $`5esn`) On Create Set {usn1:0x0[$0][7],`5esn`:@usn5 Contains #usn8 Contains 12.0}.#usn8 =[@usn6 In False Contains 0 Contains $`6esn` Where 12.e12 =~.0 =~usn1] Is Null,`4esn`:#usn7:`5esn`,({usn2:.12[0X7..][12e12..],`6esn`:$`4esn`[`6esn`..$12]})<-[`8esn` *0xabc]-(:_usn3{_usn4:.e1[7..][9e0..]})-[_usn3?{``:$@usn5 Contains 's_str' Contains \"d_str\",_usn3:$#usn8[12.e12..`8esn`][12.0..0.0]}]-({`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}).usn2 =123.654[..0.e0][..'s_str'] Create (:usn1:`3esn`{`8esn`:12 Starts With True Starts With 12e12,`8esn`:`2esn` Starts With $`7esn`})<-[`7esn`:#usn7|@usn5*{`8esn`:$`3esn`[$_usn4..0Xa]}]-(:_usn4{_usn3:$#usn7[..0Xa],@usn5:12e12 In 123456789})"),
    octest:ct_string("Unwind {`3esn`:@usn5[0.0..0X7],@usn5:$#usn7 Starts With $`2esn`} Contains Filter(`3esn` In `2esn`[..01][..True] Where 0Xa =~False =~@usn5) Contains Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $12[9e0..$999]|.12 Starts With _usn3 Starts With $``) As `5esn` Union Delete $#usn7[..$`4esn`][..01]"),
    octest:ct_string("Unwind [Count(*)[9e12..12.0]] Starts With [`5esn` In 0X7 In $#usn7 Where 123456789 =~$999|$`8esn` Is Not Null Is Not Null] Starts With [$usn2 Is Not Null Is Not Null,0 =~1e1] As `5esn` Merge #usn7=(({_usn3:_usn3 Ends With 7 Ends With $`1esn`,``:$_usn4[$`5esn`][`7esn`]})-[:_usn4 *0..01]-(#usn8 :`2esn`{`1esn`:0x0 Starts With $`6esn`})) Remove Extract(`6esn` In $`6esn`[``..][Count(*)..] Where False Contains 0 Contains $`6esn`|0X7['s_str'..][01..]).#usn8,{#usn7:.e0 Is Null Is Null,#usn7:0.0 Is Null Is Null}.#usn8!,[$@usn5 Ends With @usn5 Ends With 0xabc,12.0 In 123.654 In _usn4].`3esn`? Union All Merge `4esn`=((@usn6 {usn1:$`1esn` Starts With $`4esn` Starts With $_usn3})<-[ *..07{`8esn`:.e0[999..1000][1e1..$`8esn`],`1esn`:$`3esn`[$_usn4..0Xa]}]-({#usn7:$`3esn` Ends With 01234567,_usn3:usn1 =~$`7esn`})) Return Distinct $0[010..] As `` Order By `5esn`(Distinct .e0[01234567..$`8esn`]) =~All(#usn7 In 9e0[$1000] Where 's_str'[0x0..1.e1]) =~[999 In #usn8 In $``,.e0 Is Null Is Null] Ascending Skip count(Distinct 0X0123456789ABCDEF Contains 12e12 Contains 12.e12)[..{usn2:.12[123.654..],`2esn`:`8esn`[$`4esn`..$#usn8]}][..(:#usn7:`5esn`{usn1:.e1[..$`3esn`][..01],`4esn`:$`5esn` In .12})<-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]-(:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null})] With  *,All(#usn7 In $999 In 1e1 Where 1.e1 In 1000 In _usn3) Contains (`6esn` :`8esn`{@usn6:12.e12 Contains #usn7 Contains $_usn4})-[`8esn`{`7esn`:9e12 Starts With 1e1}]-(_usn3 :_usn4) Contains [`8esn` Is Not Null Is Not Null,12 Starts With #usn7 Starts With 0Xa,.0 Starts With `1esn`] As `8esn` Where $`7esn`[.e1][12.0] Union All Delete 0xabc =~@usn5 =~$usn1,[$usn1 Ends With _usn4 Ends With `2esn`][@usn5(Distinct 12e12 In 123456789,12.0 =~@usn6 =~$`2esn`)..[#usn7 In $999 In 1e1 Where 9e12 Starts With 1e1]][Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 12[$`5esn`..][False..])..Extract(#usn7 In 9e1[$`1esn`..] Where $999[``])],1000[$7..][_usn4..] With  $1000 Starts With $`3esn` Starts With 0.e0 As @usn6,.e12 In $`5esn` In 0X7 As _usn4 Order By 1.e1 In 1000 In _usn3 Desc,None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 9e12[$`5esn`..$123456789]) In Extract(@usn5 In 's_str'[0..] Where 07 Ends With 9e12 Ends With `2esn`|00[01234567][False]) In [12 =~usn1] Descending,123.654 Is Null Is Null Asc Where _usn4[`7esn`]"),
    octest:ct_string("Detach Delete [0.12 Contains False Contains 1.e1,$12[$usn1..][Count(*)..]][{usn2:$@usn6 Ends With `1esn`,_usn3:`7esn`}..][{@usn6:1e1 Is Not Null Is Not Null,`8esn`:$`1esn` Starts With $`4esn` Starts With $_usn3}..],`6esn`[$1000][`3esn`] Remove Extract(@usn6 In 010[`5esn`] Where $0[0Xa..$123456789]|_usn3[12.e12..][`5esn`..])._usn3,(usn1 :`5esn`{@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})<-[`4esn`:usn2]->(:`8esn`{``:$`1esn` =~999}).`5esn`? Optional Match (((`7esn` {usn2:0X7[..$`8esn`],`1esn`:123.654 Is Not Null})<-[ *12..{`8esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}]-(`5esn` :`1esn`:_usn4)-[:`6esn`|:#usn8{``:`1esn` Starts With 0xabc Starts With $usn2}]-(_usn3 :`2esn`{@usn5:`4esn` Is Not Null Is Not Null}))),`8esn`=(:@usn5{usn2:$#usn7[..$`4esn`][..01],#usn7:False Is Null})-[@usn6:#usn8|:`3esn`]->({@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]}) Union Merge `2esn`=(((`7esn` )<-[`4esn` *0Xa{@usn6:999 Starts With `2esn` Starts With .e1,`4esn`:$@usn5[..0xabc][..$`3esn`]}]->(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"})<-[usn2?:@usn5|_usn3*{_usn4:@usn5 Starts With $`3esn`,#usn7:$`5esn` Is Not Null}]-(#usn7 :``:usn2))) On Match Set #usn8 ={_usn4:``[9e12][$999],#usn8:123.654 In 12} Starts With Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0[0.0]) Starts With Filter(`6esn` In $`6esn`[``..][Count(*)..]) With Distinct 0Xa In $`6esn` As `2esn`,count(Distinct $@usn6 Ends With 123456789 Ends With 12.0,$`2esn`[.0..][0.0..]) Is Not Null Is Not Null,12[0e0] As `5esn` Skip (`2esn` :_usn3{`8esn`:01234567[Null..$_usn3]})<-[?:usn2{usn2:@usn5 Is Not Null}]-(`7esn` {#usn8:False Starts With 0X7 Starts With 01234567}) =~[12 In $usn1 In 7] =~Filter(@usn5 In 's_str'[0..] Where 0.e0) Limit .e0[$`8esn`..][1000..]"),
    octest:ct_string("Return Distinct (:@usn5{@usn5:999[..`1esn`][..07],_usn4:Count ( * ) Ends With $123456789})<-[`2esn`? *01..123456789]-(`2esn` :@usn6)[[`2esn`[..$_usn4][...12],False Contains 0 Contains $`6esn`,.e1[12.0..]]..[#usn7 In 9e0[$1000] Where #usn8 =~0.e0|12.e12 =~0X0123456789ABCDEF =~1.e1]],.12[..usn2][..12e12],$usn2[`5esn`..][01234567..] As #usn8 Limit $`2esn` Is Null With Distinct *,0X0123456789ABCDEF[0X7..$`2esn`][$`5esn`..$usn2] Order By #usn7[0.12..] Asc Skip Count(*)[9e12..12.0] Where `3esn`[..0X0123456789ABCDEF][..0x0] Union All Merge (((`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null})-[`5esn`?:`7esn`|:`2esn` *0x0..]-(:_usn4{`1esn`:#usn7 Contains $0 Contains $usn2,`4esn`:999 Ends With $`` Ends With 0X0123456789ABCDEF})<-[? *12..{usn2:$`8esn`[123456789..][$@usn5..]}]->(:`1esn`:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null}))) Merge ((`4esn` :_usn3{usn2:01[..0Xa][..12],`1esn`:999[..`1esn`][..07]})-[:`` *0..01]-({`7esn`:0xabc In Null,_usn4:.e12[0Xa..]})) Return Distinct .e0 Starts With $@usn6 Starts With $7 As `1esn`,1.e1 Contains `6esn` Contains 0.e0 Order By `3esn`[$123456789..][$usn2..] Ascending Union All Return Distinct *,`3esn`[12..1000][\"d_str\"..1000],@usn6[123.654..][0x0..] As _usn3 Order By $999 In 1e1 Descending,True[..#usn8] Ascending,#usn8 Starts With $1000 Starts With $@usn5 Ascending Skip ``[..#usn8] Create `4esn`=((({#usn7:$`3esn` Ends With 01234567,_usn3:usn1 =~$`7esn`})-[`7esn`?:usn1|`4esn` *00..0Xa{`3esn`:usn1 In ``}]-(usn1 {usn1:$#usn7 Starts With 01234567 Starts With $0})<-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(_usn3 :`3esn`{_usn3:01[`8esn`..9e12][.12..0]}))),#usn8=(({usn2:`2esn`[..$_usn3]})) Merge ((@usn6 :`4esn`:`6esn`)<-[#usn8?:`8esn`{`1esn`:999 In #usn8 In $``,`8esn`:False[$`4esn`..]}]->({usn1:$123456789 In 0.12})) On Match Set All(usn2 In 7[12] Where `2esn`[$12..]).#usn8? =[#usn7 In 9e1[$`1esn`..] Where $@usn5 In $`6esn` In 12e12|12.0 Is Null Is Null] Contains [`3esn` In `2esn`[..01][..True] Where $0 Ends With $usn1 Ends With $_usn3],Extract(@usn6 In False Contains 0 Contains $`6esn` Where $0 Ends With $usn1 Ends With $_usn3|01 In $@usn6).`7esn`? ={`3esn`:.e1[..\"d_str\"][..$123456789]},[$`5esn` =~usn1,@usn6 Contains .12 Contains $usn1,999 In #usn8 In $``]._usn3 =[9e1 Ends With Count(*) Ends With $7,False[$usn1][0x0]] =~`2esn`(Distinct .12[01][@usn5],Count ( * ) Ends With $123456789) =~[@usn6 In False Contains 0 Contains $`6esn` Where $`8esn`[12.e12][_usn4]|12 Ends With Count ( * )] On Match Set `2esn`+=`3esn`(Null[..010][..1000],$0 =~9e1 =~$`2esn`)[1.e1..][None(#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[`8esn`])..],@usn5 =usn2 Ends With .e1 Ends With $`5esn`"),
    octest:ct_string("With  *,.0 Starts With `1esn` As #usn7,#usn8 =~.e0 Limit .0[.e12..]"),
    octest:ct_string("Delete _usn3[12.e12..][`5esn`..] Remove [`7esn` Contains 9e0,010[`5esn`],0.e0 Starts With .0 Starts With 123456789].`8esn`?,All(#usn7 In $999 In 1e1 Where 0X7['s_str'..][01..]).`7esn`!"),
    octest:ct_string("Create ((`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]})),(((@usn6 )<-[`6esn`? *01234567..]->({`3esn`:`5esn` Contains `1esn` Contains usn1,`1esn`:999[@usn5..][Null..]})<-[? *0X7..{``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]}]-(:`6esn`:_usn3{`8esn`:.e12[..999][..@usn5],`3esn`:$_usn3 Is Null}))) With Distinct $12 Starts With $0 Starts With $`8esn`,9e1[usn1..0x0][12.e12..12.0] As usn1,$``[..\"d_str\"][..$#usn8] As `6esn` Where `4esn`[.12][$@usn6] Union All Merge @usn6=((`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})) With  *,``(Distinct 00 Ends With `` Ends With 12.e12,`6esn`[..Count ( * )][..$_usn4]) In (usn1 :#usn8:`1esn`{`3esn`:`2esn` In 9e0 In 7})<-[`7esn`?:#usn8|:`3esn`{`6esn`:'s_str'[0..]}]->(#usn8 :`8esn`$#usn8) In Filter(@usn6 In 010[`5esn`] Where 1.e1[$usn1]) As `3esn` Order By $usn2[`5esn`..][01234567..] Asc,$`7esn`[.e1][12.0] Asc,$`5esn` =~usn1 Ascending Skip @usn6(0X7 In $#usn7,_usn4 Contains `` Contains 1.e1)[Extract(#usn7 In 9e0[$1000] Where $`1esn` Starts With Count(*)|9e0 Ends With $#usn8)..Any(#usn7 In 9e1[$`1esn`..] Where $`2esn` Ends With `6esn`)]"),
    octest:ct_string("Remove {@usn5:123.654 Is Not Null}.`3esn`!,Extract(`3esn` In 9e1 Contains $999 Where .e12 Ends With 0Xa Ends With 0xabc).`1esn`! Unwind [@usn5 In 9e0 Ends With $#usn8 Where 12.e12 =~0X0123456789ABCDEF =~1.e1|00[$`1esn`..][@usn6..]] Is Not Null As `1esn` Unwind [0.e0[..$7],$usn2[True..0X0123456789ABCDEF],`2esn` =~.e12 =~0X0123456789ABCDEF] Contains Extract(#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[..$`8esn`][..Null]|@usn5 Contains #usn8 Contains 12.0) As usn1 Union Match `3esn`=(_usn3 {`8esn`:_usn3[0x0],#usn8:$usn1 Contains 0}),((_usn3 {#usn7:12.e12 Ends With `` Ends With 0,``:$@usn6 In @usn6 In 1e1})-[_usn3?:`8esn` *1000..0X0123456789ABCDEF{@usn5:07 Is Not Null Is Not Null}]->(`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})) Union All Optional Match (_usn3 :`4esn`:`6esn`{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3})<-[`2esn`? *01..123456789]-(`2esn` :@usn6)<-[?{`6esn`:$0[0Xa..$123456789],``:.e1[..\"d_str\"][..$123456789]}]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`}) Where $`7esn`[.e1][12.0]"),
    octest:ct_string("Optional Match usn1=((`` )<-[usn2?:`6esn`|:#usn8 *999..]-(`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})<-[?:usn2{usn2:@usn5 Is Not Null}]-(`7esn` {#usn8:False Starts With 0X7 Starts With 01234567})),((`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})) Where $123456789[...12][..@usn6] Detach Delete `2esn`[$@usn6..][Null..],$1000 Starts With $`7esn` Union All Match `5esn`=(`3esn` :_usn4) Remove [$123456789 Starts With 0.12 Starts With Null].`4esn`!,(:@usn6{usn2:$123456789 Contains $#usn8 Contains ``,_usn3:`3esn`[..0X0123456789ABCDEF][..0x0]})<-[`7esn`?:usn1|`4esn`]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})<-[:_usn4]->(:usn2{@usn5:07 Ends With 9e12 Ends With `2esn`}).#usn8"),
    octest:ct_string("With  *,`2esn`(Distinct 12.e12 =~.0 =~usn1,00 Ends With $`1esn` Ends With `7esn`)[[_usn4 In 12e12 In 123456789 Where 0x0 Starts With $`6esn`|`2esn` In 7]] Limit $1000[$@usn6][$_usn4] Delete $usn1 Contains 0,'s_str' Contains 12.e12 Contains $`4esn`,0xabc[$999..][$usn1..] Unwind `8esn`(Distinct #usn8 Is Not Null Is Not Null,`2esn` In 9e0 In 7) Starts With None(usn2 In 7[12] Where 123456789 =~12 =~'s_str') As @usn6 Union Remove Single(@usn6 In False Contains 0 Contains $`6esn` Where $`8esn`[12.e12][_usn4]).`7esn`,Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|12.e12 Is Not Null Is Not Null).`2esn` Union All Remove [usn2 In 7[12] Where 12e12 =~$`7esn`|.e1[12.0..]].@usn5!"),
    octest:ct_string("Return Distinct #usn8[`6esn`..][$``..] As `2esn` Merge `6esn`=(((_usn4 :_usn4{`2esn`:`6esn` Starts With `6esn`,`8esn`:1000[0e0][1e1]})<-[`4esn`:`1esn`|`3esn` *12..]-(usn1 :`7esn`{`7esn`:9e12 Starts With 1e1,_usn3:$`7esn`[$_usn4][.e0]})-[``?:_usn4]-(_usn4 :_usn4))) On Match Set Extract(@usn5 In 's_str'[0..] Where `5esn`[..123.654][...e12]|$``[..\"d_str\"][..$#usn8]).@usn6 =[$usn1[`2esn`..][$`2esn`..]][(`3esn` :usn2)-[`4esn`?:usn1|`4esn`{`3esn`:123.654[..0.e0][..'s_str'],@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]}]-({`6esn`:9e1 Is Not Null Is Not Null,`8esn`:_usn3 In $`8esn` In @usn6})..`2esn`(Distinct $@usn6 Is Not Null Is Not Null,Count ( * ) Ends With $123456789)],None(#usn8 In `7esn` Where ``[7.._usn3]).@usn6? =`6esn`,Any(#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`])._usn4! =`` Is Null On Match Set `4esn` =(usn2 :_usn3)-[`6esn`?:`6esn`|:#usn8]-(`1esn` {_usn4:`8esn` Is Null})<-[`7esn`?:#usn8|:`3esn`]-(_usn4 :`3esn`)[Any(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null)..],usn1 =(`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})-[_usn3?:_usn4 *00..0Xa{_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})-[`4esn`:`1esn`|`3esn` *12..]->(usn2 :`1esn`:_usn4{usn2:999 Contains $1000}) Contains Filter(usn2 In False[$usn1][0x0] Where $`6esn`[``..][Count(*)..]) Create ``=((usn2 :`5esn`{`7esn`:0.12 Starts With $`8esn` Starts With @usn5})<-[usn1:`7esn`|:`2esn`{`6esn`:Count(*) In #usn8 In \"d_str\",`1esn`:$`1esn` Ends With 0X0123456789ABCDEF}]-(#usn8 :usn2{@usn5:$#usn7[..9e0][..123.654],`2esn`:7[12]})<-[ *..07{`5esn`:999 In 0e0}]-(_usn4 :`8esn`)),``=(@usn5 :`6esn`:_usn3{`7esn`:`8esn`[..$#usn8],`3esn`:12.e12[0..0.12][123.654..9e12]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) Union Delete 12.e12 Ends With $``,{_usn4:`1esn` Is Not Null Is Not Null,@usn5:0.12[$0..$usn2]} Is Not Null Is Not Null,{#usn7:usn1 In ``}[None(`3esn` In `2esn`[..01][..True])..Extract(@usn5 In 9e0 Ends With $#usn8 Where 0Xa[$`8esn`..][$_usn4..])] Union All Delete 's_str' Starts With 1e1 Starts With $0 Return 010 Starts With $`` Starts With 0e0 As @usn5 Order By 123456789 =~True =~#usn7 Asc,True[..#usn8] Ascending Skip Extract(#usn7 In True Contains 's_str' Contains $usn1 Where usn2 Contains $0 Contains .0) Ends With `2esn`(Distinct 123.654[`4esn`..12],_usn3[`2esn`..0X7][0.e0..$`3esn`]) Ends With [`5esn` In 0X7 In $#usn7 Where 12e12 =~1e1|0e0 =~0Xa =~$999] Limit #usn7 =~9e12"),
    octest:ct_string("Remove [_usn4 In 12e12 In 123456789 Where 00 In @usn6 In 0].#usn8! Merge `4esn`=(`4esn` :`7esn`)"),
    octest:ct_string("Remove @usn5:`7esn` Merge `1esn`=((`2esn` {`4esn`:1000[12e12][`5esn`],`1esn`:07 Ends With 9e12 Ends With `2esn`})) On Match Set (:``:usn2{`4esn`:#usn7 Contains $0 Contains $usn2})<-[:`8esn` *0X7..]->(`4esn` :#usn7:`5esn`{@usn5:$`` Contains $`2esn` Contains $usn2})<-[`2esn`? *01..123456789]-(`2esn` :@usn6).`8esn` =`7esn`[1e1] Union Optional Match @usn5=(:`6esn`:_usn3{`6esn`:`2esn` Starts With $`7esn`})<-[:`2esn`|`4esn` *12..]->({`7esn`:`4esn` Is Not Null Is Not Null,`4esn`:`4esn` Ends With 12 Ends With .12})<-[?:#usn8|:`3esn`{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]-(:usn1:`3esn`{_usn4:$#usn7 Contains $`7esn` Contains .e12}) Where 0Xa[$`8esn`..][$_usn4..] Remove Extract(`3esn` In 9e1 Contains $999 Where `2esn`[_usn3]|123.654 In $`7esn`).usn2?,@usn5:_usn3 Remove `5esn`($`4esn` In 1.e1 In #usn7,0Xa[Count(*)..]).`5esn`,(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"})<-[:``{``:.0[$``..0X7]}]-(#usn8 :`8esn`).`3esn`,None(#usn8 In `7esn` Where 9e12[..1e1][..'s_str'])._usn4? Union All Return Distinct 9e0 =~Count(*) =~$0,123.654 In $`6esn`,0 Ends With Count(*) Ends With False Order By #usn7 Contains $0 Contains $usn2 Asc,.12[01][@usn5] Desc Limit 12 Ends With Count ( * )"),
    octest:ct_string("Detach Delete 9e1 =~123456789 =~999 Create `1esn`=((@usn6 {`8esn`:@usn5 Starts With $`3esn`,_usn4:`6esn` Is Null Is Null})-[:``{``:.0[$``..0X7]}]->(:@usn6{`7esn`:$`6esn`[``..][Count(*)..]})-[ *..07]->(`4esn` {``:.e1 Starts With 12.e12 Starts With `2esn`})),`6esn`=((#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})<-[``:`4esn`|@usn5 *0xabc{#usn8:9e1 Contains $999,`5esn`:0e0[01][$`7esn`]}]-(_usn3 :`6esn`:_usn3{`6esn`:0.0 Is Not Null,`6esn`:$`8esn`[..True][.._usn4]})) With Distinct *,@usn5 Contains #usn8 Contains 12.0 As `6esn`,{_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}[..Single(@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str'])][..None(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $12[9e0..$999])] Skip 0.0 Is Null Is Null Where 07 Ends With 9e12 Ends With `2esn` Union All Return *,9e0[..123456789][..$`3esn`] As #usn7 Order By 999 In 0e0 Ascending Delete $7[01..$123456789][#usn7..12.0] Delete 0.0[usn1..]"),
    octest:ct_string("With Distinct .e1[.e1..`1esn`] As @usn5,$`4esn`['s_str'..] As ``,{``:00 In @usn6 In 0}[(_usn3 :`4esn`:`6esn`{usn2:`4esn` Starts With 0e0,`3esn`:7[12]})<-[ *7..{#usn7:$`8esn`[12.e12][_usn4],`2esn`:$0[123.654..0.e0]}]-(`` :#usn8:`1esn`{`8esn`:12[$`5esn`..][False..]})-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-({`6esn`:9e12 =~@usn6})] As `5esn` Order By 0X0123456789ABCDEF Is Not Null Is Not Null Asc Skip 123.654 In $`7esn` Where 999 Starts With `2esn` Starts With .e1 Union Return *,'s_str' Starts With 9e0 Starts With usn2 As `8esn` Optional Match `8esn`=((_usn4 :`6esn`:_usn3)<-[`3esn`?:`2esn`|`4esn` *123456789..{_usn4:1.e1[`8esn`]}]->(`6esn` )<-[`5esn`?:`8esn`]->({``:12 Starts With #usn7 Starts With 0Xa,`8esn`:``[usn1][`5esn`]})),(`2esn` $`6esn`) Where 7 =~`4esn` Optional Match `6esn`=(((_usn4 :_usn4{`2esn`:`6esn` Starts With `6esn`,`8esn`:1000[0e0][1e1]})<-[`4esn`:`1esn`|`3esn` *12..]-(usn1 :`7esn`{`7esn`:9e12 Starts With 1e1,_usn3:$`7esn`[$_usn4][.e0]})-[``?:_usn4]-(_usn4 :_usn4))) Union Remove All(@usn6 In False Contains 0 Contains $`6esn` Where $@usn5 In 12e12 In 01).usn2! Create (((:usn1:`3esn`{`8esn`:12 Starts With True Starts With 12e12,`8esn`:`2esn` Starts With $`7esn`})<-[`7esn`?:`2esn`|`4esn` *..010{usn1:0e0[``..$1000][$7..12.e12],`5esn`:0x0 Starts With $`6esn`}]->(@usn5 {_usn4:`5esn` Contains #usn7 Contains 9e12})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]})))"),
    octest:ct_string("Return Distinct 12.e12[..$`6esn`] As `7esn`,Extract(usn2 In 7[12] Where $@usn5[0.0][0X0123456789ABCDEF])[[#usn7 In 9e0[$1000] Where 01 Ends With 0Xa Ends With 0X7|`2esn`[$usn2][12.0]]..][Filter(#usn8 In `7esn` Where @usn6[999..$_usn3][0.12..$@usn5])..] As ``,1.e1 Contains `6esn` Contains 0.e0 Skip Any(usn2 In 7[12] Where 0X7[.0])[Any(`6esn` In $`6esn`[``..][Count(*)..] Where $7 In $usn1 In 999)..#usn8(Distinct $_usn4 Is Null Is Null,01[`8esn`..9e12][.12..0])] Merge usn2=((`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})<-[ *..07{_usn3:0e0 =~7 =~12.0,usn2:123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]}]->(`4esn` :@usn5)) On Create Set [$``[True]].#usn8! =[0.0 Is Not Null,$`4esn`[`8esn`],$123456789[12e12..9e0]] =~.e12 On Create Set [`5esn` In `7esn`[$usn2..][$123456789..] Where `7esn` Is Null|$_usn4 =~$`1esn` =~`2esn`].`6esn` =Any(#usn7 In True Contains 's_str' Contains $usn1 Where `6esn` Starts With `6esn`) =~Single(#usn7 In $999 In 1e1 Where _usn4 Contains `` Contains 1.e1),@usn6+='s_str',Extract(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0 Ends With 12.0 Ends With `5esn`)._usn4! =Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|123.654 Is Not Null) Ends With usn2(01 Is Null) Ends With [$@usn6 Ends With 123456789 Ends With 12.0,12.e12 =~.0 =~usn1] Union Remove `8esn`:@usn5,Single(#usn7 In 9e0[$1000] Where $1000 Is Not Null).`5esn` Merge `1esn`=((#usn8 :`6esn`:_usn3)<-[@usn5?:``{`3esn`:010 Is Null Is Null,`5esn`:_usn4 Contains `` Contains 1.e1}]-(:@usn6{`7esn`:$`6esn`[``..][Count(*)..]})) On Match Set `` =$``[..\"d_str\"][..$#usn8],Any(#usn7 In 9e0[$1000] Where 's_str'[0x0..1.e1]).usn2? =9e1[..123456789],@usn5+=[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 12.e12 Starts With \"d_str\" Starts With 9e1|$#usn7 Contains $`7esn` Contains .e12][#usn8(Distinct $_usn4 Is Null Is Null,01[`8esn`..9e12][.12..0])..[_usn4 In 12e12 In 123456789 Where Count ( * ) Ends With $123456789]][Filter(_usn4 In 12e12 In 123456789 Where $`5esn` =~usn1)..[$`5esn` In _usn3 In 0.0]] On Match Set (`3esn` {usn2:$usn2[`4esn`..9e12]})<-[{_usn4:1.e1[`8esn`]}]->(:@usn6$usn1).#usn7! =_usn4 Starts With `` Starts With 1000,Extract(`3esn` In `2esn`[..01][..True] Where 0X7[..$`8esn`]|$#usn7 Starts With 01234567 Starts With $0).`5esn`! =@usn6(Count ( * ) In True In @usn5)[None(#usn7 In True Contains 's_str' Contains $usn1 Where usn2 Contains $0 Contains .0)..Single(#usn7 In $999 In 1e1 Where _usn4 Contains `` Contains 1.e1)] Merge ((@usn6 :_usn4{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]})<-[_usn4? *12..{`1esn`:$`6esn` Starts With .e12 Starts With $`1esn`,`3esn`:`8esn`[0.e0..]}]->(_usn4 )-[#usn7?:`7esn`|:`2esn` *01234567..{@usn5:0xabc =~$@usn5,usn1:0Xa[$`8esn`..][$_usn4..]}]->(#usn8 :usn1:`3esn`{`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})) On Create Set #usn7 =[$`3esn` Ends With 01234567][..{`3esn`:`6esn` Starts With `6esn`}][...e1],@usn6+=0.12[$0..$usn2] On Create Set `4esn` =(usn2 :_usn3)-[`6esn`?:`6esn`|:#usn8]-(`1esn` {_usn4:`8esn` Is Null})<-[`7esn`?:#usn8|:`3esn`]-(_usn4 :`3esn`)[Any(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null)..],usn1 =(`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})-[_usn3?:_usn4 *00..0Xa{_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})-[`4esn`:`1esn`|`3esn` *12..]->(usn2 :`1esn`:_usn4{usn2:999 Contains $1000}) Contains Filter(usn2 In False[$usn1][0x0] Where $`6esn`[``..][Count(*)..])"),
    octest:ct_string("Unwind {`8esn`:usn2 =~7,@usn5:`6esn` Ends With _usn4 Ends With False} Ends With [0X7 In $#usn7,`4esn` Is Not Null Is Not Null,.0[.e12..]] Ends With (_usn4 :_usn4)<-[`7esn`:_usn4]->(`5esn` {``:_usn3 Contains 9e12 Contains `8esn`,@usn6:``[7.._usn3]})-[ *..07{`6esn`:Count(*)[9e12..12.0]}]->(:usn1:`3esn`{_usn4:$#usn7 Contains $`7esn` Contains .e12}) As _usn4 Optional Match (:`4esn`:`6esn`{`4esn`:$@usn5[..0xabc][..$`3esn`],`3esn`:$usn2[`2esn`..$`1esn`]}) Where 12e12 In $`5esn` Merge ((@usn5 :`4esn`:`6esn`)<-[`3esn` *7..]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]})) On Create Set `2esn`+=0X0123456789ABCDEF In .12,`1esn` =$`7esn` In False In $`1esn` Union All Merge #usn8=(((`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[@usn6?:`7esn`|:`2esn`]->({#usn8:1e1 Is Not Null Is Not Null})-[?:@usn5|_usn3{`1esn`:`2esn` Is Null,`7esn`:`` =~.12}]-(`4esn` :#usn8:`1esn`{`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12}))) Union All Return Distinct 9e0 =~Count(*) =~$0,123.654 In $`6esn`,0 Ends With Count(*) Ends With False Order By #usn7 Contains $0 Contains $usn2 Asc,.12[01][@usn5] Desc Limit 12 Ends With Count ( * )"),
    octest:ct_string("Create (:`8esn`{#usn7:`1esn`[`3esn`..],usn2:_usn3[$usn2..][$``..]})<-[`7esn`:`2esn`|`4esn`{_usn4:.e1[7..][9e0..]}]-(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"})<-[? *0X7..{`2esn`:$@usn5 In $`6esn` In 12e12}]-(`3esn` :_usn4{`3esn`:12[..0e0][...e1],`4esn`:.0 Is Null Is Null}) Match (({@usn6:#usn7[`8esn`..usn1][$999..`7esn`]})<-[@usn5:_usn4 *0x0..]->({`1esn`:0X7 In $#usn7,_usn3:usn1 Contains 010})),`7esn`=(((`2esn` {``:$0 =~9e1 =~$`2esn`,`8esn`:`5esn`[..123.654][...e12]})-[`1esn` *01234567..]->(_usn3 {#usn7:12.e12 Ends With `` Ends With 0,``:$@usn6 In @usn6 In 1e1})<-[`4esn`:`1esn`|`3esn` *12..]-(usn1 :`7esn`{`7esn`:9e12 Starts With 1e1,_usn3:$`7esn`[$_usn4][.e0]}))) Optional Match _usn4=(((`2esn` )-[?{_usn3:01[`8esn`..9e12][.12..0]}]->(`8esn` {@usn5:#usn7[..07],usn2:999 Contains 0 Contains $`5esn`})<-[``?{usn2:$7 In 0.e0 In 999,usn1:'s_str' Starts With 9e0 Starts With usn2}]->(_usn3 :`5esn`))),((:`4esn`:`6esn`{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7})<-[`8esn`?:`5esn`|:usn2 *01..123456789{`7esn`:`6esn`,`4esn`:'s_str' Starts With 9e0 Starts With usn2}]->({@usn6:12.e12 Contains #usn7 Contains $_usn4,usn2:$`5esn` =~$0 =~``})-[#usn7 *01..123456789]->(:`6esn`:_usn3{``:usn1 Ends With 9e0 Ends With 9e0,`5esn`:$`7esn`[.e1][12.0]})) Union Merge ((:#usn7:`5esn`{`2esn`:12.e12 Contains 9e1,`5esn`:.e1 Starts With 12.e12 Starts With `2esn`})<-[`2esn`?:usn1|`4esn` *00..0Xa]->(:#usn7:`5esn`{_usn3:0x0[Count(*)..@usn6][Count(*)..0Xa]})<-[:`2esn`|`4esn` *1000..0X0123456789ABCDEF]-(usn2 :`6esn`:_usn3{@usn5:$0[0Xa..$123456789]})) On Match Set `1esn`:@usn5,All(@usn5 In 's_str'[0..] Where `2esn`[..01][..True]).`2esn`! =`3esn`(#usn8 =~0.e0,1000[0e0][1e1])[[_usn3[0x0],1e1 In 0.0 In 0X0123456789ABCDEF]],`2esn`+=$_usn4[01..][$_usn4..] On Match Set #usn7+=.e0[..9e12][..07],`4esn`(True[$_usn3..],$999[``]).usn2 =123456789 Is Null Is Null,@usn5 =01[07..][1.e1..] Remove Filter(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 1e1 Contains 0.e0 Contains 9e1).`5esn`! With Distinct $`1esn`[Null][True] As usn2,Count ( * )[9e12] Skip [`8esn`[0.e0..],1e1 Contains 's_str' Contains `3esn`] In [`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]] Limit 0X7[0.12..] Where 0e0[01][$`7esn`] Union Unwind None(@usn5 In 9e0 Ends With $#usn8 Where `7esn`[$usn2..][$123456789..]) =~{`2esn`:7[12],usn1:.12[0X7..][12e12..]} =~Extract(#usn7 In True Contains 's_str' Contains $usn1 Where $`1esn` Starts With Count(*)|True[0xabc..01234567][$`8esn`..$@usn6]) As `6esn`"),
    octest:ct_string("Remove [$@usn5 In 12e12 In 01,$_usn4[..$_usn4][..`7esn`]].`3esn`?,[$_usn4 =~$`1esn` =~`2esn`,#usn7[`8esn`..usn1][$999..`7esn`],$@usn5[..0xabc][..$`3esn`]].`8esn`! Union All Optional Match ((usn2 {`5esn`:$@usn5 In 12e12 In 01})-[`8esn`:#usn7|@usn5 *00..0Xa]-(_usn3 {usn1:0x0 Starts With $`6esn`})),((_usn3 {#usn7:12.e12 Ends With `` Ends With 0,``:$@usn6 In @usn6 In 1e1})-[_usn3?:`8esn` *1000..0X0123456789ABCDEF{@usn5:07 Is Not Null Is Not Null}]->(`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})) Remove [12e12 =~1e1].`2esn`!"),
    octest:ct_string("Detach Delete `8esn` Is Not Null Is Not Null,Filter(@usn5 In 9e0 Ends With $#usn8 Where 7 Ends With 01234567 Ends With 0Xa) Starts With {usn2:`2esn` =~.e12 =~0X0123456789ABCDEF,@usn6:`2esn` Is Null} Starts With [usn2[12e12..]['s_str'..]] Return *,[`8esn`[..$#usn8],1.e1 Starts With 9e12] Ends With [`6esn` In $`6esn`[``..][Count(*)..]|.e1[12.0..]] Ends With Any(usn2 In 7[12]),$`6esn` Starts With .e12 Starts With $`1esn` As @usn6 Skip $`5esn`[$`3esn`..] Limit Single(@usn6 In 010[`5esn`] Where Count(*)[9e12..12.0])[(`2esn` {``:$0 =~9e1 =~$`2esn`,`8esn`:`5esn`[..123.654][...e12]})<-[:`1esn`|`3esn`{`2esn`:$`3esn` Ends With 01234567}]->(_usn3 :`5esn`)][`7esn`]"),
    octest:ct_string("Delete 9e0 Contains $12 Contains `3esn` Remove Filter(@usn6 In 010[`5esn`] Where 00[$usn1..]).usn2? Return @usn5[01][@usn5],9e0 Contains $12 Contains `3esn` As #usn8,{`4esn`:0.0[usn1..],`7esn`:12.0[$1000..][#usn7..]}[Any(`6esn` In $`6esn`[``..][Count(*)..] Where $#usn7 Ends With 's_str' Ends With 0X7)..[usn1[..$@usn6][..00],0x0[0X7],$`8esn`[123456789..][$@usn5..]]][[12.e12[..$`6esn`],999 In #usn8 In $``]..Extract(#usn7 In 9e1[$`1esn`..] Where 00 Contains Count ( * ) Contains 0x0|$`5esn` =~usn1)] Order By Null Ends With _usn4 Ends With 0.0 Asc Skip (`1esn` $`4esn`)-[@usn6?:`7esn`|:`2esn`]-({@usn6:#usn7[`8esn`..usn1][$999..`7esn`]}) =~Filter(`3esn` In 9e1 Contains $999 Where 12.0 Is Null Is Null) =~[0xabc In Null] Union Remove Any(#usn7 In 9e1[$`1esn`..] Where 999 In #usn8 In $``).`7esn` Merge (:`4esn`:`6esn`{`2esn`:12e12 =~1e1,``:12.e12 Contains #usn7 Contains $_usn4})<-[?:`5esn`|:usn2 *123456789..{#usn7:$`1esn` =~999,`4esn`:$@usn6[00]}]-(:`6esn`:_usn3)<-[@usn5? *999..{usn1:.e12[$@usn6..00][01234567.._usn3],`1esn`:`7esn` Contains 9e0}]-({@usn6:999 Contains 0 Contains $`5esn`,#usn7:999[..`1esn`][..07]}) Delete Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4) Ends With [$@usn6 Is Not Null Is Not Null],9e1 =~123456789 =~999,.e12[$@usn6..00][01234567.._usn3] Union All Merge `2esn`=((#usn7 {#usn7:1.e1 Starts With 9e12})<-[ *..07{`5esn`:999 In 0e0}]->(#usn7 :#usn8:`1esn`{``:.0[$``..0X7]})) Merge usn1=(((`` {`8esn`:$`6esn`[``..][Count(*)..]})<-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]-(#usn8 :`6esn`:_usn3)<-[{_usn4:1.e1[`8esn`]}]->(:@usn6$usn1))) On Create Set [@usn6 In False Contains 0 Contains $`6esn` Where 12.e12 =~.0 =~usn1].usn2! =None(#usn7 In True Contains 's_str' Contains $usn1 Where 00[12..$`6esn`]) Ends With None(#usn7 In 9e0[$1000] Where 1e1 Contains 0.e0 Contains 9e1),`8esn` =01[07..][1.e1..]"),
    octest:ct_string("Merge #usn7=(((:`7esn`{`2esn`:$`3esn` Ends With 01234567})<-[`7esn`:#usn7|@usn5*{`8esn`:$`3esn`[$_usn4..0Xa]}]-(`` :`3esn`{`8esn`:.e1[12.0..],`6esn`:0e0[999..$``]})<-[? *0X7..{``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]}]-(:`6esn`:_usn3{`8esn`:.e12[..999][..@usn5],`3esn`:$_usn3 Is Null}))) With Distinct .e1 In 0,Any(#usn7 In 9e1[$`1esn`..] Where #usn7[0])[[00[12..$`6esn`],$`4esn`['s_str'..]]..] Skip `3esn`[$123456789..][$usn2..] Where $@usn5[..$#usn7] Union All Detach Delete Any(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null)[..`4esn`][..(usn2 :_usn3)-[`6esn`?:`6esn`|:#usn8]-(`1esn` {_usn4:`8esn` Is Null})<-[`7esn`?:#usn8|:`3esn`]-(_usn4 :`3esn`)] Return Distinct usn2[12.e12..] As `2esn`,$`2esn`[0..123456789][``..`1esn`],#usn8[`6esn`..][$``..] As `2esn` Skip $@usn6 Ends With `1esn` Limit 9e1 Ends With Count(*) Ends With $7"),
    octest:ct_string("Detach Delete $`5esn`[\"d_str\"..],0.0 Is Not Null,$@usn6[$0..9e12][.e12..Null]"),
    octest:ct_string("With  *,$`7esn`[$_usn4][.e0],`5esn` Contains `1esn` Contains usn1 As `2esn` Order By `4esn` Contains 9e0 Desc,[@usn5 In 9e0 Ends With $#usn8 Where 12.e12 =~0X0123456789ABCDEF =~1.e1|00[$`1esn`..][@usn6..]] Is Not Null Asc Skip [`8esn`[0.e0..],1e1 Contains 's_str' Contains `3esn`] In [`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]] Limit $@usn6 =~#usn7 =~True Where 12.0 Is Null Remove Filter(`6esn` In $`6esn`[``..][Count(*)..] Where 7[0e0..]).`8esn`!,(_usn4 :`1esn`:_usn4)<-[?:`6esn`|:#usn8 *00..0Xa]-(:`8esn`{#usn7:`1esn`[`3esn`..],usn2:_usn3[$usn2..][$``..]}).@usn5! Match `4esn`=((@usn5 {`4esn`:1000[12e12][`5esn`],`1esn`:07 Ends With 9e12 Ends With `2esn`})<-[?:`3esn`*..]-(usn2 :`1esn`:_usn4{usn2:999 Contains $1000})),_usn3=(`8esn` :`2esn`)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})<-[`6esn`]->({#usn8:.e12 Is Null Is Null,@usn6:`1esn` Is Not Null Is Not Null})"),
    octest:ct_string("Delete `2esn`(Distinct 12.e12 =~.0 =~usn1,00 Ends With $`1esn` Ends With `7esn`)[[_usn4 In 12e12 In 123456789 Where 0x0 Starts With $`6esn`|`2esn` In 7]] Union All Detach Delete `4esn`[..$@usn6][..@usn6] Detach Delete @usn6[999..$_usn3][0.12..$@usn5] Union Create (`6esn` :@usn6)-[usn2?:`3esn`]->(`8esn` :@usn6{`7esn`:0e0[999..$``]})-[:@usn6|:`7esn`{#usn7:.0[.e12..],usn2:usn2 =~usn1 =~Count ( * )}]->(_usn3 :`4esn`:`6esn`{usn2:`4esn` Starts With 0e0,`3esn`:7[12]}),usn1=(#usn8 :``:usn2) Remove {``:.e12 Ends With 0Xa Ends With 0xabc}.usn2? Create (:`6esn`:_usn3{`8esn`:`4esn`[\"d_str\"]['s_str']})<-[:@usn6|:`7esn`{usn2:0x0 Starts With $`6esn`,_usn4:$`4esn`[`8esn`]}]-(@usn6 {@usn6:0e0 =~7 =~12.0}),`4esn`=((({#usn7:$`3esn` Ends With 01234567,_usn3:usn1 =~$`7esn`})-[`7esn`?:usn1|`4esn` *00..0Xa{`3esn`:usn1 In ``}]-(usn1 {usn1:$#usn7 Starts With 01234567 Starts With $0})<-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(_usn3 :`3esn`{_usn3:01[`8esn`..9e12][.12..0]})))"),
    octest:ct_string("Detach Delete $999 In 12 In 1.e1,usn2 Is Not Null Union All Create (((usn2 {`5esn`:$@usn6 Ends With `1esn`})<-[`2esn`? *01..123456789]-(@usn6 :``:usn2{usn1:0x0[0X7],@usn5:`4esn`[.12][$@usn6]})<-[? *7..{`1esn`:12[..$999][..$`2esn`],usn2:9e1}]-(#usn7 :``:usn2))) Union All Delete $@usn6 Ends With 12.e12 Ends With @usn5 Delete 0e0 =~0Xa =~$999"),
    octest:ct_string("Create (`6esn` :`5esn`)-[_usn4?:`6esn`|:#usn8]->(#usn7 :`3esn`{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]})<-[@usn6?:`7esn`|:`2esn`]->({#usn8:1e1 Is Not Null Is Not Null}),`6esn`=((:`4esn`:`6esn`{`4esn`:$@usn5[..0xabc][..$`3esn`],`3esn`:$usn2[`2esn`..$`1esn`]})) Match ({_usn3:$12[9e0..$999],#usn7:0.0 Contains `3esn` Contains @usn5})-[#usn7?:`7esn`|:`2esn` *..07]-(#usn7 {#usn7:1.e1 Starts With 9e12}) Union Return Distinct *,$999[0Xa..][9e1..] As `4esn` Skip $usn2 Ends With $123456789 Limit @usn6 Contains .12 Contains $usn1 Create ((`6esn` {_usn4:$`5esn` Is Not Null Is Not Null})),`5esn`=(((`2esn` :`1esn`:_usn4)<-[`5esn`?{`8esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}]->(`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})<-[`4esn`:usn2]->(:`6esn`:_usn3{`2esn`:999[123.654..$usn2][Count ( * )..0x0]}))) Union All Remove None(_usn4 In 12e12 In 123456789 Where True Contains 's_str' Contains $usn1).``?,[@usn6 In False Contains 0 Contains $`6esn` Where `1esn` Starts With 0xabc Starts With $usn2].`1esn` Return Distinct `1esn`[0Xa] As usn1,$`` Contains $`2esn` Contains $usn2 Order By $usn1 Ends With _usn4 Ends With `2esn` Descending,$``[..$#usn7][..`6esn`] Asc Skip 07[999]"),
    octest:ct_string("Optional Match ((:`6esn`:_usn3{usn1:`3esn`[0x0..]})<-[? *1000..0X0123456789ABCDEF{usn2:$7 In 0.e0 In 999,usn1:'s_str' Starts With 9e0 Starts With usn2}]->({`4esn`:.e1[..$`3esn`][..01]})<-[usn2?{``:$`1esn`[``][07]}]->(#usn7 {`7esn`:`8esn` Contains Count(*) Contains $#usn7})),(@usn6 {`5esn`:.e12 Starts With $#usn8 Starts With False})<-[`6esn`:``]->({@usn6:$1000 Is Not Null}) Where $`3esn` In $usn2 Union With  $`3esn`[.e1][_usn4] As _usn4,usn2 =~$`` =~$`8esn`,9e12[9e1] Order By `1esn` Starts With 9e1 Desc"),
    octest:ct_string("With  [#usn7 In $999 In 1e1 Where 0X7['s_str'..][01..]] Contains [@usn6 In False Contains 0 Contains $`6esn` Where `1esn` Starts With 0xabc Starts With $usn2] Contains Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where 999 In #usn8 In $``|True[0xabc..01234567][$`8esn`..$@usn6]) As usn2,$`3esn`[.e1][_usn4],All(#usn7 In $999 In 1e1 Where 1.e1 In 1000 In _usn3) Contains (`6esn` :`8esn`{@usn6:12.e12 Contains #usn7 Contains $_usn4})-[`8esn`{`7esn`:9e12 Starts With 1e1}]-(_usn3 :_usn4) Contains [`8esn` Is Not Null Is Not Null,12 Starts With #usn7 Starts With 0Xa,.0 Starts With `1esn`] As `4esn` Order By $`3esn` Ends With 01234567 Asc Skip @usn6 =~999 =~@usn5 Return {``:07[$`2esn`..9e12][$`4esn`..9e12],`3esn`:$`6esn` Starts With .e12 Starts With $`1esn`}[..Single(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null)][..Any(#usn7 In $999 In 1e1 Where 07 In `6esn`)] As usn1,`8esn` Is Not Null Is Not Null As `4esn` Order By Any(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $#usn7[..$`4esn`][..01])[Extract(usn2 In 7[12] Where $`2esn` Ends With `6esn`)][`7esn`(@usn5 Contains #usn8 Contains 12.0)] Ascending Skip 01[..9e12] Merge (#usn7 :`4esn`:`6esn`{`1esn`:`1esn`[$@usn6][07]}) On Match Set Extract(@usn5 In 's_str'[0..] Where @usn6 In .12 In `3esn`|$@usn6[00]).`8esn`? =9e0 Contains $12 Contains `3esn`,_usn4+=0x0[@usn5][$#usn8],count(Distinct $`3esn`[..0X0123456789ABCDEF][..7])._usn3! =1.e1 Is Null Is Null On Match Set `1esn` =[#usn7 In 9e0[$1000] Where .e1 In 123456789|.e12[..999][..@usn5]] In `5esn`(`1esn` Starts With 0X7 Starts With \"d_str\",9e1) In @usn5(Distinct `5esn` Contains $`5esn` Contains 0X7,True[..#usn8])"),
    octest:ct_string("Return Distinct .e0 Ends With $123456789 Ends With 0xabc Limit 's_str' Starts With 1e1 Starts With $0"),
    octest:ct_string("Remove Filter(usn2 In 7[12] Where $#usn8[12.e12..`8esn`][12.0..0.0]).``,[`8esn` In 123456789 =~@usn6 Where ``[9e12][$999]].@usn5?,`4esn`:`7esn` Return Distinct 12.e12[..$`6esn`] As `7esn`,Extract(usn2 In 7[12] Where $@usn5[0.0][0X0123456789ABCDEF])[[#usn7 In 9e0[$1000] Where 01 Ends With 0Xa Ends With 0X7|`2esn`[$usn2][12.0]]..][Filter(#usn8 In `7esn` Where @usn6[999..$_usn3][0.12..$@usn5])..] As ``,1.e1 Contains `6esn` Contains 0.e0 Skip Any(usn2 In 7[12] Where 0X7[.0])[Any(`6esn` In $`6esn`[``..][Count(*)..] Where $7 In $usn1 In 999)..#usn8(Distinct $_usn4 Is Null Is Null,01[`8esn`..9e12][.12..0])]"),
    octest:ct_string("Unwind \"d_str\"[#usn8] As @usn5"),
    octest:ct_string("Merge #usn7=(#usn8 :_usn3)-[`7esn`{#usn8:01 Is Null,`6esn`:#usn7[0]}]-({`2esn`:Count(*) Ends With usn1,`6esn`:1000 Ends With `7esn`})<-[:_usn3|:`7esn` *00..0Xa]-(#usn7 :`4esn`:`6esn`$usn2) On Match Set `2esn` =`3esn`[..0X0123456789ABCDEF][..0x0] On Match Set _usn4(Distinct $#usn7 In $@usn5 In $`1esn`,usn2 =~usn1 =~Count ( * )).`8esn`! =.12 Starts With _usn3 Starts With $``,usn1 =[0.12 Contains False Contains 1.e1,$12[$usn1..][Count(*)..]][{usn2:$@usn6 Ends With `1esn`,_usn3:`7esn`}..][{@usn6:1e1 Is Not Null Is Not Null,`8esn`:$`1esn` Starts With $`4esn` Starts With $_usn3}..] Create `4esn`=((`` {#usn7:#usn8 Is Not Null Is Not Null})-[#usn7?{`5esn`:.e12 Starts With $#usn8 Starts With False}]->(#usn7 :`4esn`:`6esn`{`1esn`:`1esn`[$@usn6][07]})-[{`4esn`:.e1 In 123456789}]-(:`3esn`{``:$@usn5 Is Null Is Null,`8esn`:.e1[..\"d_str\"][..$123456789]})) Delete Single(usn2 In 7[12] Where `7esn` Is Null)[..Single(`6esn` In $`6esn`[``..][Count(*)..] Where $7 In $usn1 In 999)][..Any(#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4)] Union All Create (`3esn` {usn2:$usn2[`4esn`..9e12]}),`4esn`=(usn1 :`7esn`) Detach Delete $usn2[0.e0] Create (:usn2)<-[? *01..123456789{`8esn`:usn2 =~7,@usn5:`6esn` Ends With _usn4 Ends With False}]->(`` {``:$@usn6 Ends With 12.e12 Ends With @usn5,`2esn`:$`3esn` Ends With 01234567})<-[`4esn`:usn2]->(`3esn` :_usn4),`8esn`=((`4esn` :_usn4)-[`5esn`?:_usn3|:`7esn`]->({@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]})<-[?:`5esn`|:usn2]->(usn2 :`5esn`)) Union All Merge ((_usn3 :usn2)) On Match Set Any(#usn8 In `7esn` Where $`5esn` In _usn3 In 0.0).`5esn`! =.e12 Ends With 0Xa Ends With 0xabc On Match Set `5esn`(Distinct .12[123.654..]).`3esn` =01234567 In 123456789 In 12,`6esn` =[@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str']|$`3esn`[..0xabc][..$7]] Is Null"),
    octest:ct_string("Return Distinct *,[1000[0e0][1e1],12.0 Is Null Is Null] Is Not Null Is Not Null Order By Extract(usn2 In 7[12] Where usn1 Starts With 00|`8esn` Contains Count(*) Contains $#usn7) Contains None(@usn6 In False Contains 0 Contains $`6esn` Where $usn2[0.e0]) Contains Extract(@usn6 In False Contains 0 Contains $`6esn` Where $usn2[`4esn`..9e12]|$`4esn`['s_str'..]) Asc,1.e1[$`3esn`][0Xa] Descending,`2esn` Starts With $`7esn` Ascending Skip $usn2[`2esn`..$`1esn`] Merge ((`7esn` :`2esn`{`4esn`:0[1e1][$usn1],usn2:`8esn`[..$#usn8]})<-[_usn4?:usn2]-(@usn6 :`6esn`:_usn3{@usn5:0xabc =~$@usn5,usn1:0Xa[$`8esn`..][$_usn4..]})-[`3esn`?:`7esn`|:`2esn`]-(`5esn` :#usn8:`1esn`{_usn3:`6esn` Is Null Is Null})) On Create Set usn1 =`3esn`[123456789],`3esn` =9e1[.12][`7esn`] On Match Set All(usn2 In False[$usn1][0x0] Where 010 Starts With 0 Starts With 0.0).`3esn`! =12.0[$12..$_usn4] Union Create ({@usn6:999 Contains 0 Contains $`5esn`,#usn7:999[..`1esn`][..07]}) Delete [_usn4 In 12e12 In 123456789 Where `3esn`[0X0123456789ABCDEF..][07..]] Contains Extract(`5esn` In 0X7 In $#usn7|0[1e1][$usn1]) Contains None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07 Is Not Null Is Not Null),0x0 In `8esn` Unwind [#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 9e1[usn1..0x0][12.e12..12.0]][..{usn2:0x0[0X7]}][..[12.e12 Is Not Null Is Not Null,$@usn6[.0..][0e0..]]] As _usn4 Union Unwind $`1esn`[``][07] As @usn5"),
    octest:ct_string("Unwind #usn8(@usn6[999..$_usn3][0.12..$@usn5])[..`1esn`(Distinct `5esn`[..123.654][...e12],01 Contains usn2 Contains 0X0123456789ABCDEF)] As _usn3 Detach Delete $`1esn`[``][07],`2esn` Starts With .e1 Starts With 9e12,$`4esn` In 1.e1 In #usn7 Union All Create `8esn`=(#usn8 :_usn3)-[`7esn`{#usn8:01 Is Null,`6esn`:#usn7[0]}]-({`2esn`:Count(*) Ends With usn1,`6esn`:1000 Ends With `7esn`})<-[:_usn3|:`7esn` *00..0Xa]-(#usn7 :`4esn`:`6esn`$usn2) Remove All(usn2 In False[$usn1][0x0] Where False Is Null).usn2 Unwind None(#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[..$`8esn`][..Null]) Is Null As `8esn` Union Detach Delete $@usn5 Ends With @usn5 Ends With 0xabc,_usn3 Ends With 7 Ends With $`1esn`,'s_str' Ends With `7esn` Ends With 010 With  0X7[`2esn`..] As `6esn`,Single(usn2 In False[$usn1][0x0])[All(@usn6 In 010[`5esn`] Where 00[1.e1..])][(:`2esn`{``:07[$`2esn`..9e12][$`4esn`..9e12],`3esn`:$`6esn` Starts With .e12 Starts With $`1esn`})-[?{`5esn`:$`2esn`[.0..][0.0..]}]->(:usn2{@usn5:07 Ends With 9e12 Ends With `2esn`})-[`` *1000..0X0123456789ABCDEF]->(:_usn4{`8esn`:01234567[Null..$_usn3]})] Order By ``[$`3esn`] Asc,[1000[0e0][1e1],12.0 Is Null Is Null] Is Not Null Is Not Null Asc,.e0 =~$`7esn` =~0X0123456789ABCDEF Descending Skip [#usn8 In `7esn` Where .e0 Is Null Is Null] Ends With {usn1:$`4esn`[`6esn`..$12],`4esn`:usn1 Contains 010} Ends With (:``:usn2{``:True[$_usn3..]})<-[`2esn`? *01..123456789]-(`1esn` {#usn8:$#usn7[..9e0][..123.654],`5esn`:9e12 Starts With 1e1})<-[?:#usn8|:`3esn`{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]-(`1esn` $`4esn`) Limit `5esn`[..123.654][...e12]"),
    octest:ct_string("Create ({_usn3:$12[9e0..$999],#usn7:0.0 Contains `3esn` Contains @usn5})-[#usn7?:`7esn`|:`2esn` *..07]-(#usn7 {#usn7:1.e1 Starts With 9e12}) Return *,00[12..$`6esn`] As _usn4,Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|0 Ends With 12.e12 Ends With usn2)[..123.654][..Any(#usn7 In $999 In 1e1 Where `4esn`[$_usn3..$`7esn`])] As `3esn` Skip `8esn` Contains `2esn` Contains .0 Limit Null[.12..12e12] Union All Create (:usn1:`3esn`{`8esn`:12 Starts With True Starts With 12e12,`8esn`:`2esn` Starts With $`7esn`})<-[`7esn`:#usn7|@usn5*{`8esn`:$`3esn`[$_usn4..0Xa]}]-(:_usn4{_usn3:$#usn7[..0Xa],@usn5:12e12 In 123456789}) Remove `2esn`(.12[123.654..]).`4esn` Union All Remove {usn1:#usn8 =~.e0,_usn3:$_usn4 Is Null Is Null}.`1esn`,Single(#usn7 In 9e1[$`1esn`..] Where 123.654 In $`7esn`).`3esn`?"),
    octest:ct_string("With Distinct #usn8 Is Not Null,.e0[..9e12][..07] Skip usn1 Limit 1000 Contains [True Contains 0x0 Contains $_usn3,_usn3 Contains 9e12 Contains `8esn`] Contains [12.0 In 123.654 In _usn4] Where $``[..\"d_str\"][..$#usn8] Create ((usn1 :`5esn`{`1esn`:#usn7 Contains $0 Contains $usn2,`4esn`:999 Ends With $`` Ends With 0X0123456789ABCDEF}))"),
    octest:ct_string("Remove `5esn`:#usn8:`1esn`,[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 0xabc In 123456789 In 0x0|.e0 Contains $#usn8].@usn6!,[123.654 Starts With 0X7 Starts With $`4esn`,`6esn` Is Null Is Null].@usn5 Optional Match `6esn`=(((:@usn6{`6esn`:01 Ends With 0Xa Ends With 0X7})-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->({#usn8:False Starts With 0X7 Starts With 01234567})<-[ *..07{_usn3:0e0 =~7 =~12.0,usn2:123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]}]->(`4esn` :@usn5))) With Distinct 0Xa Ends With $`3esn` Ends With $1000,Extract(@usn5 In 's_str'[0..] Where 12e12 Is Not Null) =~[`3esn` In 9e1 Contains $999 Where _usn3[`2esn`..0X7][0.e0..$`3esn`]],$#usn8[@usn6..] As `7esn` Order By (`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})-[_usn3?:_usn4 *00..0Xa{_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})-[`4esn`:`1esn`|`3esn` *12..]->(usn2 :`1esn`:_usn4{usn2:999 Contains $1000}) Contains Filter(usn2 In False[$usn1][0x0] Where $`6esn`[``..][Count(*)..]) Desc,$usn1[Null][`8esn`] Desc,$`5esn` In `2esn` In `2esn` Asc Limit [0.e0[..$7],$usn2[True..0X0123456789ABCDEF],`2esn` =~.e12 =~0X0123456789ABCDEF] Ends With `1esn`(Distinct $`3esn`[..0X0123456789ABCDEF][..7],`4esn`[$_usn3..$`7esn`]) Ends With [$`1esn`[``][07],`7esn`] Where _usn3[$`1esn`..] Union Remove Filter(#usn7 In 9e1[$`1esn`..] Where 12 =~usn1).usn2,Extract(#usn8 In `7esn` Where 9e1 Starts With Count ( * )|$@usn6[$`8esn`..][123456789..]).`6esn`!,_usn4:`7esn` Remove All(`6esn` In $`6esn`[``..][Count(*)..] Where $#usn7 Ends With 's_str' Ends With 0X7).`2esn`!,(`3esn` {`3esn`:$@usn6 Is Not Null Is Not Null,`1esn`:12e12 =~1e1})<-[:@usn5|_usn3{#usn7:$123456789 Starts With 0.12 Starts With Null,usn1:.e1[..$`3esn`][..01]}]-(#usn7 :`3esn`{`3esn`:@usn5[0.0..0X7],@usn5:$#usn7 Starts With $`2esn`})<-[ *01234567..]->(:`8esn`{``:.e1 Starts With 12.e12 Starts With `2esn`}).usn2,@usn6:_usn4"),
    octest:ct_string("Remove #usn7(@usn6 Contains .12 Contains $usn1).usn1!,_usn3._usn4? Create usn2=(`6esn` {`2esn`:$`3esn` Ends With 01234567}) Union Create ((`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`})),@usn5=(({@usn5:$`5esn` Is Not Null Is Not Null})-[`1esn`?:@usn6|:`7esn` *..010]-(:`6esn`:_usn3{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})<-[?:`` *0..01]->({`2esn`:9e12[$`5esn`..$123456789],`8esn`:$usn2 =~9e1})) Union All Delete 9e1[1.e1][$`8esn`],0X7[0.12..] Remove ({`7esn`:123.654,`6esn`:9e1 Starts With Count ( * )})-[@usn6:`5esn`|:usn2 *0xabc{#usn8:999 In 0e0}]-(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})-[:`2esn`|`4esn`{_usn3:@usn6[`1esn`..],@usn6:@usn6[9e12]}]->(_usn4 :@usn5).`8esn`?,All(`3esn` In `2esn`[..01][..True] Where #usn7 In 0.e0).`4esn`!,Extract(@usn5 In 9e0 Ends With $#usn8 Where `1esn` Is Not Null Is Not Null|Null[..0]).``?"),
    octest:ct_string("Delete Extract(#usn7 In 9e0[$1000] Where 00[12..$`6esn`]|$@usn6 Ends With `1esn`) =~[7 =~`4esn`,7 =~`4esn`],@usn5[$`6esn`..][$999..],1e1 Ends With $`2esn` Merge `5esn`=(`2esn` :_usn3) On Create Set usn1 =`3esn`[123456789],`3esn` =9e1[.12][`7esn`]"),
    octest:ct_string("Optional Match @usn5=(`5esn` :``:usn2)<-[`8esn` *0xabc{#usn8:12.0 Starts With .12 Starts With `6esn`,@usn5:_usn3[`5esn`..][usn2..]}]->(@usn6 :usn1:`3esn`{@usn5:999 Starts With `2esn` Starts With .e1,``:0xabc In Null})<-[usn2?:@usn5|_usn3*{_usn4:@usn5 Starts With $`3esn`,#usn7:$`5esn` Is Not Null}]-(#usn7 :``:usn2) Merge ((@usn6 {`7esn`:999 In 0e0})<-[? *1000..0X0123456789ABCDEF{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}]-(`6esn` {`2esn`:$`3esn` Ends With 01234567})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)) On Create Set [`5esn` In `7esn`[$usn2..][$123456789..] Where `7esn` Is Null|$_usn4 =~$`1esn` =~`2esn`].`6esn` =Any(#usn7 In True Contains 's_str' Contains $usn1 Where `6esn` Starts With `6esn`) =~Single(#usn7 In $999 In 1e1 Where _usn4 Contains `` Contains 1.e1),@usn6+='s_str',Extract(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0 Ends With 12.0 Ends With `5esn`)._usn4! =Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|123.654 Is Not Null) Ends With usn2(01 Is Null) Ends With [$@usn6 Ends With 123456789 Ends With 12.0,12.e12 =~.0 =~usn1] On Create Set `6esn` ={`3esn`:12 Starts With #usn7 Starts With 0Xa} Is Null Is Null,usn1+=`4esn`[$_usn3..$`7esn`] Union Unwind $1000[$@usn6][$_usn4] As `6esn`"),
    octest:ct_string("Return *,$@usn6 Ends With `1esn` Order By $999 Is Null Is Null Descending,0e0 =~7 =~12.0 Asc Skip `` =~.12 Union All Remove Any(`5esn` In `7esn`[$usn2..][$123456789..] Where 12e12 Is Not Null).@usn6!,[$0 In `3esn` In 07,123456789 Contains 0.0 Contains $@usn6].#usn8!"),
    octest:ct_string("Optional Match (((:`6esn`:_usn3{@usn5:0.e0[..$7],@usn6:.12 In `8esn` In $#usn8})-[?*..]-(usn2 :`5esn`{`7esn`:0.12 Starts With $`8esn` Starts With @usn5})-[:@usn6|:`7esn`{#usn7:.0[.e12..],usn2:usn2 =~usn1 =~Count ( * )}]->(#usn8 :`8esn`))) Where True[..#usn8] Merge ({`7esn`:`4esn` Is Not Null Is Not Null,`4esn`:`4esn` Ends With 12 Ends With .12})<-[`5esn`?:`7esn`|:`2esn` *0x0..]-(`4esn` :#usn7:`5esn`{@usn5:$`` Contains $`2esn` Contains $usn2}) On Match Set `3esn`+=`2esn` =~.e12 =~0X0123456789ABCDEF,#usn8:usn1:`3esn`,``+=`2esn` Create (@usn5 :`1esn`:_usn4)-[? *0xabc]-(`6esn` {`3esn`:.0[$``..0X7],`3esn`:$usn2 Is Not Null Is Not Null})-[? *01..123456789]-(_usn3 :`6esn`:_usn3) Union Merge #usn7=((@usn5 :`4esn`:`6esn`)<-[`3esn` *7..]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]})) On Match Set `5esn`(Distinct .12[123.654..]).`3esn` =01234567 In 123456789 In 12,`6esn` =[@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str']|$`3esn`[..0xabc][..$7]] Is Null On Match Set usn2+=`6esn`[$`8esn`][9e1] Union All Unwind 12e12 In 123456789 As `7esn`"),
    octest:ct_string("Create #usn7=((@usn5 :`4esn`:`6esn`)<-[`3esn` *7..]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]})),((:`2esn`{`3esn`:9e1 Ends With Count(*) Ends With $7})<-[usn1?:`1esn`|`3esn` *01234567..{@usn5:`4esn`[\"d_str\"]['s_str']}]-({`7esn`:9e0 Contains $12 Contains `3esn`,`5esn`:.e0 Contains $#usn8})) Delete Extract(`3esn` In 9e1 Contains $999 Where _usn4[0]|12 Starts With #usn7 Starts With 0Xa) In Extract(`3esn` In 9e1 Contains $999 Where 0e0 Starts With 999 Starts With `2esn`|9e1 Ends With Count(*) Ends With $7),Any(@usn6 In False Contains 0 Contains $`6esn` Where 12e12 In $`5esn`) =~[#usn7 In 9e1[$`1esn`..] Where 0Xa Ends With $`3esn` Ends With $1000|$@usn5 Contains 's_str' Contains \"d_str\"] =~Extract(@usn6 In False Contains 0 Contains $`6esn` Where $`6esn` Starts With .e12 Starts With $`1esn`|12e12 In 123456789) Remove [12.0 Starts With .12 Starts With `6esn`,usn2 Contains $0 Contains .0,$#usn7 In $@usn5 In $`1esn`].`7esn`!,Single(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0[0.0]).`3esn`? Union All Unwind $_usn4 =~$`1esn` =~`2esn` As #usn8 Create (((#usn7 :#usn8:`1esn`{``:.0[$``..0X7]})<-[? *0xabc]-(:@usn6{`6esn`:01 Ends With 0Xa Ends With 0X7})<-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->(usn2 :`5esn`))),usn1=(`7esn` :`3esn`{`2esn`:999[123.654..$usn2][Count ( * )..0x0]})-[`2esn`?:usn1|`4esn` *00..0Xa]-(`4esn` :`4esn`:`6esn`) Merge ((`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]})) On Match Set `1esn` =All(@usn6 In 010[`5esn`] Where $@usn5 Ends With @usn5 Ends With 0xabc)[Extract(#usn7 In 9e1[$`1esn`..] Where 123.654 In $`7esn`)..[12.0 Starts With .12 Starts With `6esn`]],count(Distinct $`3esn`[..0X0123456789ABCDEF][..7])._usn3! =1.e1 Is Null Is Null"),
    octest:ct_string("Delete 9e1[.12][`7esn`],$12[$usn1..][Count(*)..] Merge (((`5esn` :@usn6{usn1:'s_str'[0..]})-[?:`4esn`|@usn5 *0Xa]-({`1esn`:$12 Starts With $usn1,`6esn`:123.654[`4esn`..12]})-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(`2esn` {`1esn`:$`4esn` Is Null Is Null}))) On Match Set _usn3:`7esn` Detach Delete 7 Is Not Null,$`1esn`[Count ( * )],`6esn`[`5esn`..00] Union All Detach Delete $123456789[.0..],All(#usn7 In True Contains 's_str' Contains $usn1 Where #usn8 Is Null Is Null)[..[0x0[0X7]]][..(:`7esn`{`3esn`:$`3esn` Contains $`1esn`,#usn7:$usn2[`4esn`..9e12]})-[ *..07]->(_usn3 :`3esn`{_usn3:01[`8esn`..9e12][.12..0]})] Union All Remove Filter(@usn6 In 010[`5esn`] Where 00[$usn1..]).usn2?"),
    octest:ct_string("Merge ((#usn7 :_usn3)<-[ *0Xa{`3esn`:9e1 Ends With Count(*) Ends With $7}]-(:@usn6{`7esn`:$`6esn`[``..][Count(*)..]}))"),
    octest:ct_string("Remove _usn4(Distinct 0X0123456789ABCDEF Ends With 01 Ends With ``,$`3esn`[..0xabc][..$7]).`2esn`,`7esn`(`3esn`[0X0123456789ABCDEF..][07..],usn1 =~$`7esn`).usn1!,Filter(#usn8 In `7esn` Where $`3esn`[..0X0123456789ABCDEF][..7]).@usn5? Unwind $@usn5[`1esn`..][$999..] As `8esn` Union Match _usn3=((@usn5 {usn2:.12[0X7..][12e12..],`6esn`:$`4esn`[`6esn`..$12]})-[@usn6:`5esn`|:usn2 *0xabc{#usn8:999 In 0e0}]-(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})-[#usn7 *01..123456789]->(usn1 {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})),``=((:`5esn`{`8esn`:$`7esn`[0.12],_usn4:`1esn`})-[`5esn`:#usn7|@usn5]-({@usn6:123.654 In 12,#usn7:12.e12 Ends With `` Ends With 0})-[`1esn`?:@usn6|:`7esn` *..010]-(:`6esn`:_usn3{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})) Where 0x0[Count(*)..@usn6][Count(*)..0Xa] Remove Any(#usn7 In $#usn7 Contains $`7esn` Contains .e12).`5esn`?,_usn3(0[$`5esn`],`2esn`[..$_usn4][...12]).`2esn`?,(usn1 :@usn6)<-[:`8esn` *0X7..]->(`2esn` :`6esn`:_usn3{usn2:0e0 =~0Xa =~$999,`4esn`:@usn6[9e12]})<-[?{`5esn`:123.654[$0..0X7][Null..#usn8],`3esn`:12.e12[0..0.12][123.654..9e12]}]-(usn2 :`7esn`).#usn8 Create _usn3=(((:usn2{`6esn`:`4esn` Starts With 0e0,`8esn`:usn2[12e12..]['s_str'..]})<-[:`2esn`|`4esn` *12..]-(_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]}))) Union Unwind usn2[12e12..]['s_str'..] As @usn6"),
    octest:ct_string("Create (`8esn` :`2esn`{@usn5:$`4esn` Contains _usn3 Contains `8esn`,`7esn`:$`4esn`[`4esn`][Count(*)]}),(`8esn` {usn1:0e0 =~7 =~12.0,`7esn`:usn2 Starts With .0})<-[:_usn4]->(_usn4 {usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})<-[ *01234567..]->(:``:usn2{`5esn`:$12 Starts With $usn1}) Union Return *,[`8esn`[0.e0..],1e1 Contains 's_str' Contains `3esn`] In [`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]] As `4esn`,$1000[0X0123456789ABCDEF][12] Skip $999[.e12][.0] Limit `` Starts With $123456789 With Distinct {usn1:0x0[$0][7],`5esn`:@usn5 Contains #usn8 Contains 12.0}[[@usn5 In 9e0 Ends With $#usn8 Where 00 Contains Count ( * ) Contains 0x0]],(`2esn` $`6esn`)<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(usn2 {usn1:.e12 Ends With 0Xa Ends With 0xabc}) Ends With Extract(@usn6 In False Contains 0 Contains $`6esn` Where .e1[usn2..$_usn3][.0..$#usn7]) Ends With Single(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]) Order By `3esn`(#usn8 =~0.e0,1000[0e0][1e1])[[_usn3[0x0],1e1 In 0.0 In 0X0123456789ABCDEF]] Desc,Any(#usn7 In True Contains 's_str' Contains $usn1 Where `6esn` Starts With `6esn`) =~Single(#usn7 In $999 In 1e1 Where _usn4 Contains `` Contains 1.e1) Asc,$@usn5[..$#usn7] Descending Skip #usn8 Is Not Null Is Not Null"),
    octest:ct_string("With Distinct *,0x0[``..] As `2esn` Order By 12.e12 Ends With $`` Descending Skip 's_str' Starts With 9e0 Starts With usn2 Limit None(#usn7 In $999 In 1e1 Where 1000[12e12][`5esn`])[Any(`3esn` In `2esn`[..01][..True] Where $`3esn`[..0xabc][..$7])][$#usn7] Where `1esn` Starts With 0xabc Starts With $usn2 Create ((#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})<-[``:`4esn`|@usn5 *0xabc{#usn8:9e1 Contains $999,`5esn`:0e0[01][$`7esn`]}]-(_usn3 :`6esn`:_usn3{`6esn`:0.0 Is Not Null,`6esn`:$`8esn`[..True][.._usn4]})),usn2=((_usn3 :_usn4)-[`3esn`:`2esn`|`4esn`]->({usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})<-[:@usn6|:`7esn` *01..123456789]->(:`6esn`:_usn3{``:usn1 Contains 010,`2esn`:$0 In `3esn` In 07})) Remove Extract(#usn8 In `7esn` Where ``[7.._usn3]|@usn5 Is Null).`7esn`?,(_usn4 :_usn4)<-[`7esn`:_usn4]->(`5esn` {``:_usn3 Contains 9e12 Contains `8esn`,@usn6:``[7.._usn3]})-[ *..07{`6esn`:Count(*)[9e12..12.0]}]->(:usn1:`3esn`{_usn4:$#usn7 Contains $`7esn` Contains .e12}).``?"),
    octest:ct_string("Return Distinct Single(usn2 In False[$usn1][0x0] Where $@usn6 Is Not Null Is Not Null) =~[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07 Is Not Null Is Not Null],010 Is Null Is Null As #usn8,All(`3esn` In `2esn`[..01][..True] Where usn2[12.e12..])[Any(#usn8 In `7esn` Where .e0 Is Null Is Null)..Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 1e1 Contains 0.e0 Contains 9e1|12.e12 Ends With $``)][{`5esn`:False[$usn1][0x0]}..`8esn`(Distinct .e0[01234567..$`8esn`])] As `8esn` Order By $_usn3[_usn4..] Asc,0.12 Is Null Is Null Desc,`6esn` Ends With _usn4 Ends With False Ascending Skip 1.e1 =~.12 Limit `1esn`[$@usn6][07] Return $_usn4 Is Null Is Null,usn2 Starts With .0 Order By 9e1[$#usn8][$1000] Descending Limit #usn7 =~9e12"),
    octest:ct_string("Return Distinct [#usn7 In True Contains 's_str' Contains $usn1 Where $@usn6 In @usn6 In 1e1|12.0[$1000..][#usn7..]][Any(_usn4 In 12e12 In 123456789 Where .e12[@usn6..][010..])..Single(usn2 In False[$usn1][0x0] Where 9e1 Is Not Null Is Not Null)],Extract(@usn6 In False Contains 0 Contains $`6esn` Where $@usn6[$`8esn`..][123456789..]|.e1[usn2..$_usn3][.0..$#usn7]) Skip 1.e1 Is Null Is Null Union All Merge ((usn1 {_usn4:#usn8 Is Not Null})<-[:`8esn` *0X7..]->(:`8esn`{@usn5:usn2 Ends With .e1 Ends With $`5esn`})<-[_usn3:usn1|`4esn`{`6esn`:12e12 =~1e1}]->({`8esn`:usn2 Starts With .0,@usn5:Count(*) In 12 In `6esn`})) On Match Set @usn5 =$`2esn` Is Null,usn2+=`4esn` Starts With 0e0,``+={_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}[[$`2esn` =~9e12,`6esn` Is Null Is Null,usn2 Is Not Null]..[$`1esn` Starts With $`4esn` Starts With $_usn3]] Optional Match _usn3=(`` {`7esn`:.e0 Is Not Null Is Not Null,@usn6:.e1[..$`3esn`][..01]})-[usn1?:`2esn`|`4esn`{#usn7:$#usn7[..9e0][..123.654],usn2:.e0 Is Not Null Is Not Null}]-(`8esn` :@usn6)<-[ *01234567..]->(:``:usn2{`5esn`:$12 Starts With $usn1}) Where 0.e0 Starts With .0 Starts With 123456789 Delete 999[..`1esn`][..07],0x0[@usn5][$#usn8] Union All Merge ((:`8esn`{``:.e1 Starts With 12.e12 Starts With `2esn`})<-[?{``:00 Contains Count ( * ) Contains 0x0,#usn8:123.654 In $`7esn`}]-(:usn2{``:0.0 =~9e0 =~$0})) On Create Set usn1 =[#usn7 In True Contains 's_str' Contains $usn1 Where $@usn6 In @usn6 In 1e1|12.0[$1000..][#usn7..]][Any(_usn4 In 12e12 In 123456789 Where .e12[@usn6..][010..])..Single(usn2 In False[$usn1][0x0] Where 9e1 Is Not Null Is Not Null)],`6esn` =12.e12 =~0X0123456789ABCDEF =~1.e1 Detach Delete 9e1[_usn3] Return Distinct $#usn7[..9e0][..123.654] As @usn6 Order By Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4) Ends With [$@usn6 Is Not Null Is Not Null] Desc,None(#usn7 In $999 In 1e1 Where `1esn`[0.12..][@usn6..])[..[_usn4 In 12e12 In 123456789 Where 1.e1 =~$_usn4]] Desc,None(#usn7 In $999 In 1e1 Where _usn3 Contains 9e12 Contains `8esn`)[..Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 0xabc In 123456789 In 0x0|Count(*)[..@usn6][..`7esn`])] Desc Limit `6esn`"),
    octest:ct_string("Delete 123.654 In $`7esn` Return Distinct *,12.e12 Contains `6esn`,12[``...e12] As `6esn` Order By 's_str' Is Not Null Descending,123.654[`4esn`..12] Asc,[_usn3 In _usn3 Contains _usn4 Contains $@usn5] Contains [_usn4[$usn1..01234567][123.654..`5esn`]] Contains `4esn`(Distinct 07 In `6esn`) Ascending"),
    octest:ct_string("Return Distinct `1esn`[0Xa] As usn1,$`` Contains $`2esn` Contains $usn2 Order By $usn1 Ends With _usn4 Ends With `2esn` Descending,$``[..$#usn7][..`6esn`] Asc Skip 07[999] Union Match ((`1esn` :`2esn`)<-[`1esn`:`8esn` *999..{`4esn`:$123456789 Starts With 0.12 Starts With Null,usn2:.e1[7..][9e0..]}]->(`1esn` :`3esn`{#usn7:12[..0e0][...e1]})-[@usn6?:#usn8|:`3esn`{usn1:.e1[..$`3esn`][..01],`4esn`:$`5esn` In .12}]->(usn2 :_usn4))"),
    octest:ct_string("Remove All(usn2 In 7[12] Where #usn8 Is Null Is Null).`5esn` Optional Match ``=(((#usn7 :#usn8:`1esn`{``:.0[$``..0X7]})<-[? *0xabc]-(:@usn6{`6esn`:01 Ends With 0Xa Ends With 0X7})<-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->(usn2 :`5esn`))),((({`7esn`:123.654,`6esn`:9e1 Starts With Count ( * )})-[:#usn7|@usn5*..]-(`3esn` :usn2{`6esn`:#usn8 Is Null})<-[?:#usn7|@usn5 *0..01]->(:`1esn`:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null}))) Where $1000 Starts With $`3esn` Starts With 0.e0 Union All Remove (:`3esn`{`7esn`:0.e0['s_str'..][01234567..]})-[`5esn`?:`6esn`|:#usn8{`3esn`:$`1esn` In .e0,@usn6:12.0 =~@usn6 =~$`2esn`}]-(usn1 :`5esn`{`1esn`:#usn7 Contains $0 Contains $usn2,`4esn`:999 Ends With $`` Ends With 0X0123456789ABCDEF})<-[:`1esn`|`3esn`{_usn3:0e0 =~7 =~12.0,usn2:123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]}]-(@usn5 :`2esn`{`8esn`:0Xa[$`8esn`..][$_usn4..]}).``!,Any(#usn7 In True Contains 's_str' Contains $usn1 Where 00[12..$`6esn`]).`2esn`!,`1esn`:`6esn`:_usn3 With Distinct [#usn7 In $999 In 1e1 Where 0X7['s_str'..][01..]] Contains [@usn6 In False Contains 0 Contains $`6esn` Where `1esn` Starts With 0xabc Starts With $usn2] Contains Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where 999 In #usn8 In $``|True[0xabc..01234567][$`8esn`..$@usn6]) As usn2,#usn8 =~0.e0,$usn1 Limit 00 In @usn6 In 0 Where #usn8 =~.e0 Union Detach Delete 9e1[_usn3] Delete [usn2 In 7[12] Where #usn7[.e0]|$usn2 =~9e1] Is Null Is Null,$`2esn` Starts With .0 Starts With `1esn`,0x0[0.0] Optional Match _usn3=(`` {`7esn`:.e0 Is Not Null Is Not Null,@usn6:.e1[..$`3esn`][..01]})-[usn1?:`2esn`|`4esn`{#usn7:$#usn7[..9e0][..123.654],usn2:.e0 Is Not Null Is Not Null}]-(`8esn` :@usn6)<-[ *01234567..]->(:``:usn2{`5esn`:$12 Starts With $usn1}) Where 0.e0 Starts With .0 Starts With 123456789"),
    octest:ct_string("Return Distinct *,All(@usn6 In 010[`5esn`] Where $@usn5 Ends With @usn5 Ends With 0xabc)[Extract(#usn7 In 9e1[$`1esn`..] Where 123.654 In $`7esn`)..[12.0 Starts With .12 Starts With `6esn`]],12 In $usn1 In 7 As `8esn` Skip None(#usn7 In True Contains 's_str' Contains $usn1 Where 00[12..$`6esn`]) Ends With None(#usn7 In 9e0[$1000] Where 1e1 Contains 0.e0 Contains 9e1) Limit $@usn5 Starts With .e1 Optional Match ((@usn5 {`4esn`:1000[12e12][`5esn`],`1esn`:07 Ends With 9e12 Ends With `2esn`})<-[?:`3esn`*..]-(usn2 :`1esn`:_usn4{usn2:999 Contains $1000})) Union All Unwind [#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[..$`8esn`][..Null]|$@usn5[..0xabc][..$`3esn`]] Contains (`8esn` )<-[`2esn`:`4esn`|@usn5 *01234567..]-(`5esn` :`3esn`)<-[#usn8?:`8esn`{`1esn`:999 In #usn8 In $``,`8esn`:False[$`4esn`..]}]->(`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]}) Contains Any(`5esn` In 0X7 In $#usn7 Where 01 Is Null) As `3esn`"),
    octest:ct_string("Merge ((#usn8 :`8esn`$#usn8)) Optional Match ((`1esn` {_usn4:`8esn` Is Null})),`2esn`=(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}) Union Return *,$`2esn` Ends With `6esn` As usn1,`2esn` Is Null As `` Order By `6esn` =~$_usn4 =~7 Asc Skip `5esn`[..True][..0.e0] With Distinct 0e0[01][$`7esn`],'s_str'[0..] As `4esn`,Filter(@usn5 In 9e0 Ends With $#usn8 Where 07 Is Null) =~{#usn7:1000[12e12][`5esn`]} As _usn4 Skip 0x0[$0][7] Limit None(#usn7 In $999 In 1e1 Where 1000[12e12][`5esn`])[Any(`3esn` In `2esn`[..01][..True] Where $`3esn`[..0xabc][..$7])][$#usn7] Where $`7esn`[$_usn4][.e0] Optional Match ((:@usn5{usn2:$#usn7[..$`4esn`][..01],#usn7:False Is Null})<-[``?{usn2:$7 In 0.e0 In 999,usn1:'s_str' Starts With 9e0 Starts With usn2}]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0})),(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}) Where _usn3 Starts With 12e12 Starts With `5esn` Union All Return Distinct *,123.654[`4esn`..12] Order By 0.0[$usn2..] Asc,$7 Starts With 12.e12 Starts With $@usn6 Asc Limit $``[..\"d_str\"][..$#usn8] Merge `8esn`=(((@usn6 :`4esn`:`6esn`)<-[?{``:'s_str' Is Not Null,`8esn`:$`2esn` Is Null}]->(`1esn` :`2esn`)-[:@usn6|:`7esn`{#usn7:.0[.e12..],usn2:usn2 =~usn1 =~Count ( * )}]->(_usn3 :`4esn`:`6esn`{usn2:`4esn` Starts With 0e0,`3esn`:7[12]}))) On Match Set `8esn` ={#usn7:12e12 In $`5esn`} Ends With {`6esn`:12 =~usn1,_usn3:`6esn`[$`8esn`][9e1]},None(@usn5 In 's_str'[0..] Where 1000[..`2esn`][..$@usn6]).`2esn`? =0X0123456789ABCDEF Is Not Null Is Not Null"),
    octest:ct_string("Detach Delete #usn8[`8esn`..],$`5esn` =~usn1 Merge (`8esn` :@usn6)<-[?:usn2 *0x0..]->(:`2esn`{usn1:.0[..'s_str'][..01234567],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})-[`5esn`? *01..123456789{`5esn`:@usn6[9e12],`5esn`:@usn6[999..$_usn3][0.12..$@usn5]}]-(`1esn` {`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]}) Create @usn5=(({`8esn`:`5esn` Contains #usn7 Contains 9e12})<-[usn1:_usn4]-(`` {_usn3:`5esn` Contains `7esn`})<-[`3esn`?:`2esn`|`4esn` *123456789..{_usn4:1.e1[`8esn`]}]->(`1esn` :`3esn`{#usn8:$usn2[0.e0],`8esn`:$`4esn`['s_str'..]})) Union All Merge _usn4=(`1esn` {@usn5:`2esn` Starts With $`4esn`}) On Match Set @usn5+=$0[123.654..0.e0],Any(`8esn` In 123456789 =~@usn6 Where .e1 =~_usn4 =~_usn4)._usn3? =01[..$`8esn`][..9e0],usn1 ={_usn4:``[9e12][$999],#usn8:123.654 In 12} Starts With Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0[0.0]) Starts With Filter(`6esn` In $`6esn`[``..][Count(*)..]) Match _usn4=(((:#usn7:`5esn`{`4esn`:$``[..\"d_str\"][..$#usn8]})<-[`6esn`? *00..0Xa]->(:#usn8:`1esn`$`7esn`)-[usn2{``:$`1esn` =~999}]-(:usn1:`3esn`{``:$#usn7 In $@usn5 In $`1esn`,#usn7:999[@usn5..][Null..]}))) Remove Filter(`3esn` In 9e1 Contains $999 Where $`5esn` Is Not Null Is Not Null).`7esn`,@usn6:``:usn2,Any(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 07 Is Not Null Is Not Null).`6esn`?"),
    octest:ct_string("Create ((`4esn` :`4esn`:`6esn`)-[`3esn`:`2esn`|`4esn`]-({#usn8:False Starts With 0X7 Starts With 01234567})<-[#usn7?:`5esn`|:usn2{`7esn`:123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]}]-(`` {``:$@usn6 Ends With 12.e12 Ends With @usn5,`2esn`:$`3esn` Ends With 01234567})),#usn8=(:`7esn`{_usn3:@usn5[0.0..0X7]}) Optional Match (_usn3 :`4esn`:`6esn`{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3})<-[`2esn`? *01..123456789]-(`2esn` :@usn6)<-[?{`6esn`:$0[0Xa..$123456789],``:.e1[..\"d_str\"][..$123456789]}]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`}) Return *,$`5esn` Is Not Null,usn2 Contains $0 Contains .0 Order By 0.e0[$`4esn`..`2esn`] Descending,$123456789[12e12..9e0] Asc,$_usn3[_usn4..] Asc Skip $`7esn`[$_usn4][.e0] Limit Any(@usn5 In 9e0 Ends With $#usn8 Where 12.e12 =~0X0123456789ABCDEF =~1.e1)[(`5esn` :#usn8:`1esn`{_usn3:`6esn` Is Null Is Null})<-[?{@usn6:$0[0Xa..$123456789],`4esn`:`7esn` Contains 9e0}]->({_usn3:0X0123456789ABCDEF Contains 12e12 Contains 12.e12})-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})..][Filter(#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`])..] Union All Match #usn7=((@usn5 :`4esn`:`6esn`)<-[`3esn` *7..]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]})),((`1esn` :`2esn`)<-[`1esn`:`8esn` *999..{`4esn`:$123456789 Starts With 0.12 Starts With Null,usn2:.e1[7..][9e0..]}]->(`1esn` :`3esn`{#usn7:12[..0e0][...e1]})-[@usn6?:#usn8|:`3esn`{usn1:.e1[..$`3esn`][..01],`4esn`:$`5esn` In .12}]->(usn2 :_usn4)) Remove Extract(`6esn` In $`6esn`[``..][Count(*)..] Where False Contains 0 Contains $`6esn`|0X7['s_str'..][01..]).#usn8,{#usn7:.e0 Is Null Is Null,#usn7:0.0 Is Null Is Null}.#usn8!,[$@usn5 Ends With @usn5 Ends With 0xabc,12.0 In 123.654 In _usn4].`3esn`? Create ((`4esn` :_usn3{usn2:01[..0Xa][..12],`1esn`:999[..`1esn`][..07]})-[:`` *0..01]-({`7esn`:0xabc In Null,_usn4:.e12[0Xa..]})),((`4esn` :@usn6)<-[@usn5?:usn2 *0..01]->(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})) Union Detach Delete $usn2[0.e0]"),
    octest:ct_string("Match ((`4esn` :@usn6)<-[@usn5?:usn2 *0..01]->(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`}))"),
    octest:ct_string("Merge @usn5=(:`7esn`)<-[`1esn`?:usn1|`4esn` *..010]-(usn1 :_usn4{`4esn`:`7esn` Is Null}) On Match Set `4esn` =$#usn8 Ends With `3esn` Ends With $`` On Create Set Extract(#usn8 In `7esn` Where ``[7.._usn3]|@usn5 Is Null).`` =01 In $@usn6,@usn5+=$@usn5 Ends With @usn5 Ends With 0xabc,Extract(`3esn` In 9e1 Contains $999 Where usn1[False..`5esn`][$1000..$12]).`7esn` =.e0[9e12..] Remove Single(#usn7 In 9e1[$`1esn`..] Where `3esn`[7..0.e0][0.0..123456789]).`7esn`?"),
    octest:ct_string("Detach Delete $@usn6[_usn3..][$999..],$usn2 =~0.e0 =~@usn6 Unwind None(`3esn` In 9e1 Contains $999 Where 0xabc In Null) Is Not Null As `4esn` Union Create `8esn`=(:#usn8:`1esn`{usn2:$`7esn`[.e1][12.0],``:$`1esn` Contains 1e1 Contains @usn6})-[_usn3?{``:$@usn5 Contains 's_str' Contains \"d_str\",_usn3:$#usn8[12.e12..`8esn`][12.0..0.0]}]-(_usn3 :usn1:`3esn`)"),
    octest:ct_string("Create ((:@usn5{`5esn`:`4esn` Starts With 0e0})-[:@usn6|:`7esn`{#usn7:.0[.e12..],usn2:usn2 =~usn1 =~Count ( * )}]->(_usn3 :`4esn`:`6esn`{usn2:`4esn` Starts With 0e0,`3esn`:7[12]})) Create (#usn7 :`4esn`:`6esn`{`1esn`:`1esn`[$@usn6][07]}),`8esn`=((`4esn` :_usn4)-[`5esn`?:_usn3|:`7esn`]->({@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]})<-[?:`5esn`|:usn2]->(usn2 :`5esn`))"),
    octest:ct_string("Unwind $usn1 As `5esn` Union All Remove All(#usn7 In 9e0[$1000] Where 12e12 Starts With $0 Starts With $`2esn`).`8esn`?,``:@usn5,Single(`8esn` In 123456789 =~@usn6 Where ``[9e12][$999])._usn4! With Distinct *,0.e0 Is Not Null Is Not Null As _usn4 Order By $_usn3 Is Not Null Desc,[123456789 =~$999,$`2esn` Ends With `6esn`,12.e12 Contains 9e1][`5esn`(Distinct .e0[01234567..$`8esn`])][All(`3esn` In 9e1 Contains $999 Where $`5esn` Is Not Null Is Not Null)] Desc,Extract(#usn7 In 9e1[$`1esn`..] Where $999[``]) Starts With (`6esn` :@usn6)<-[ *..07]-(:_usn3{`7esn`:9e0 Ends With $#usn8}) Starts With (#usn7 :@usn6)<-[? *01..123456789]-(`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]}) Ascending Limit 1.e1[..123456789][..999] Where _usn4 Is Not Null Union Create `8esn`=((_usn4 :`6esn`:_usn3)<-[`3esn`?:`2esn`|`4esn` *123456789..{_usn4:1.e1[`8esn`]}]->(`6esn` )<-[`5esn`?:`8esn`]->({``:12 Starts With #usn7 Starts With 0Xa,`8esn`:``[usn1][`5esn`]})),`8esn`=((_usn3 {`6esn`:@usn5[$`6esn`..][$999..],`8esn`:$@usn5[..0xabc][..$`3esn`]})<-[``:`5esn`|:usn2{`5esn`:_usn4[0]}]-(`2esn` {``:$0 =~9e1 =~$`2esn`,`8esn`:`5esn`[..123.654][...e12]})) Optional Match (`8esn` {usn1:0e0 =~7 =~12.0,`7esn`:usn2 Starts With .0})<-[:_usn4]->(_usn4 {usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})<-[ *01234567..]->(:``:usn2{`5esn`:$12 Starts With $usn1}),(@usn5 :`1esn`:_usn4)-[? *0xabc]-(`6esn` {`3esn`:.0[$``..0X7],`3esn`:$usn2 Is Not Null Is Not Null})-[? *01..123456789]-(_usn3 :`6esn`:_usn3) Where 12.0 In 123.654 In _usn4 With  $usn1,`1esn` Contains $999 Contains 0.0 As @usn6,$`6esn`[0e0..][010..] Order By 0.0 Ends With $`7esn` Descending,`3esn`[7..0.e0][0.0..123456789] Asc Where ``[9e12][$999]"),
    octest:ct_string("Remove None(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where `2esn` Starts With .e1 Starts With 9e12).usn1?"),
    octest:ct_string("Delete 7 Is Not Null Match `5esn`=(:#usn7:`5esn`{@usn5:999 Starts With `2esn` Starts With .e1,``:0xabc In Null})-[`6esn` *0Xa]-(usn1 :`1esn`:_usn4{_usn3:@usn6[999..$_usn3][0.12..$@usn5],`1esn`:9e12[..1e1][..'s_str']}),`7esn`=(`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})-[`3esn`]->(:@usn5{#usn7:12e12 In $`5esn`}) Return Distinct .e1[.e1..`1esn`] As @usn5,$`4esn`['s_str'..] As ``,{``:00 In @usn6 In 0}[(_usn3 :`4esn`:`6esn`{usn2:`4esn` Starts With 0e0,`3esn`:7[12]})<-[ *7..{#usn7:$`8esn`[12.e12][_usn4],`2esn`:$0[123.654..0.e0]}]-(`` :#usn8:`1esn`{`8esn`:12[$`5esn`..][False..]})-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-({`6esn`:9e12 =~@usn6})] As `5esn` Skip .e1[..$`3esn`][..01] Union All Delete [$#usn7 Ends With 's_str' Ends With 0X7] Starts With (usn1 :@usn6)<-[?:#usn7|@usn5 *0..01]->(:`1esn`:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null})<-[_usn4? *12..{`1esn`:$`6esn` Starts With .e12 Starts With $`1esn`,`3esn`:`8esn`[0.e0..]}]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0}) Starts With [`5esn` In `7esn`[$usn2..][$123456789..] Where $`1esn` Starts With Count(*)] Union All With Distinct .e1 In 0,Any(#usn7 In 9e1[$`1esn`..] Where #usn7[0])[[00[12..$`6esn`],$`4esn`['s_str'..]]..] Skip `3esn`[$123456789..][$usn2..] Where $@usn5[..$#usn7] Return *,Any(@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``) Contains [_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where .0 Is Null Is Null|`3esn`[0x0..]] Contains [999[12.e12],#usn8 Is Null Is Null,1.e1 =~$_usn4] As `1esn`,12e12[12.0][False] Skip $`4esn`[`4esn`][Count(*)]"),
    octest:ct_string("Remove {`1esn`:0.e0}.usn1,`7esn`(`7esn` Contains 9e0,0.12[$0..$usn2]).`4esn`? With  0x0[0.0] As ``,Any(@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``) Contains [_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where .0 Is Null Is Null|`3esn`[0x0..]] Contains [999[12.e12],#usn8 Is Null Is Null,1.e1 =~$_usn4] As `1esn` Order By [#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`]][[`2esn` Is Null]][Extract(#usn7 In $999 In 1e1|01234567[Null..$_usn3])] Asc,usn2[12.e12..] Ascending,$@usn6 Is Not Null Is Not Null Desc Skip `5esn` Contains 1.e1 Contains .e12 Limit `7esn`[0x0][$`4esn`] Where `5esn` Contains #usn7 Contains 9e12 Union All Remove [0X0123456789ABCDEF Ends With 01 Ends With ``,$`4esn` Contains .e0 Contains 0Xa].`6esn` With Distinct $usn2 =~0.e0 =~@usn6 As _usn4,9e12[..1e1][..'s_str'] As @usn5 Order By 0X0123456789ABCDEF Is Not Null Is Not Null Asc,0X0123456789ABCDEF Is Not Null Is Not Null Asc Limit $7 In $usn1 In 999 Where 12.e12 Is Not Null Is Not Null Union All With Distinct *,.0 Contains .e12 Contains 0,1e1 Is Null Is Null As usn2 Detach Delete 01[..0Xa][..12],$`4esn`[..$`8esn`][..Null] Unwind 07[False] As @usn5"),
    octest:ct_string("Delete $`1esn` =~999,`5esn` Contains `5esn` Contains $_usn3,$1000 Is Not Null Return Distinct *,None(usn2 In 7[12] Where 123456789 =~12 =~'s_str')[{@usn5:$`` Contains $`2esn` Contains $usn2}..][(`2esn` :`6esn`:_usn3)-[?:#usn8|:`3esn` *7..]-({`7esn`:9e12 =~@usn6})..] As `1esn` Union All Create @usn6=((`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})) Unwind 010 Starts With 0 Starts With 0.0 As `5esn` Unwind 999[..`1esn`][..07] As `8esn` Union Create `1esn`=((`2esn` :`1esn`:_usn4)-[?:``]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})),usn2=(#usn7 {_usn4:1.e1[`8esn`]})<-[usn2{`2esn`:$12 Starts With $usn1}]->(:`5esn`{`8esn`:$`7esn`[0.12],_usn4:`1esn`})-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->(@usn6 :`4esn`:`6esn`{``:999 Contains 0 Contains $`5esn`,`6esn`:_usn3[12.e12..][`5esn`..]})"),
    octest:ct_string("With  `3esn`[7..0.e0][0.0..123456789] As _usn4,$usn2[0.e0] As _usn3 Limit 9e1 Contains $999 Where @usn5 Is Not Null Unwind [@usn5 In 9e0 Ends With $#usn8 Where 12.e12 =~0X0123456789ABCDEF =~1.e1|00[$`1esn`..][@usn6..]] As #usn8"),
    octest:ct_string("Create `8esn`=((_usn4 :`6esn`:_usn3)<-[`3esn`?:`2esn`|`4esn` *123456789..{_usn4:1.e1[`8esn`]}]->(`6esn` )<-[`5esn`?:`8esn`]->({``:12 Starts With #usn7 Starts With 0Xa,`8esn`:``[usn1][`5esn`]})),({`1esn`:1.e1[`8esn`]})<-[:``{``:.0[$``..0X7]}]-(#usn8 :`8esn`) Union Unwind 1.e1 Starts With 9e12 As `8esn` Unwind `5esn`[Count ( * )] As @usn6"),
    octest:ct_string("Return 01[$`7esn`..$@usn6] As `2esn`,(#usn7 {_usn4:1.e1[`8esn`]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) =~Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12) =~{usn2:#usn8[`8esn`..]} Order By `4esn` Contains 9e0 Desc,$12 =~0X7 =~0x0 Ascending,Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 1.e1 Ends With $_usn4 Ends With #usn7|$7 Starts With 12.e12 Starts With $@usn6) Starts With (:``:usn2)<-[`2esn`:`8esn`{`7esn`:$`4esn` Is Null Is Null}]-(:@usn5{`1esn`:999 Is Not Null Is Not Null,``:.e1[7..][9e0..]}) Starts With [01234567[Null..$_usn3],0[1e1][$usn1],False[..$`5esn`][..1e1]] Descending Limit None(#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[..$`8esn`][..Null]) Is Null Merge `7esn`=(`8esn` :`2esn`{@usn5:$`4esn` Contains _usn3 Contains `8esn`,`7esn`:$`4esn`[`4esn`][Count(*)]})<-[usn1]->(:`6esn`:_usn3{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})-[_usn3?:_usn4 *00..0Xa{_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]}) On Match Set @usn6 =.e0 Is Null Is Null,_usn4(#usn7 Starts With $123456789 Starts With 12e12).`7esn`! =Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 1.e1 Ends With $_usn4 Ends With #usn7|$7 Starts With 12.e12 Starts With $@usn6) Starts With (:``:usn2)<-[`2esn`:`8esn`{`7esn`:$`4esn` Is Null Is Null}]-(:@usn5{`1esn`:999 Is Not Null Is Not Null,``:.e1[7..][9e0..]}) Starts With [01234567[Null..$_usn3],0[1e1][$usn1],False[..$`5esn`][..1e1]] On Match Set `2esn`+=Any(`6esn` In $`6esn`[``..][Count(*)..] Where 1e1 Ends With $`7esn` Ends With .0) Is Not Null Merge `2esn`=(:#usn8:`1esn`$`7esn`) On Match Set `8esn`+=`2esn`(0e0 =~0Xa =~$999,@usn5 Contains 9e0)[(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[usn2? *0..01{`6esn`:#usn8 Is Null}]->(`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12})..][Any(`3esn` In `2esn`[..01][..True] Where 0.e0[..$7])..] Union All Return Distinct *,[usn2 In 7[12] Where #usn7[.e0]|$usn2 =~9e1] Is Null Is Null As #usn8 Order By @usn5(Distinct) =~[_usn3[`5esn`..][usn2..],$#usn7 =~`2esn`] =~1.e1 Ascending Skip (:``:usn2{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7})-[:`2esn`|`4esn`{_usn3:@usn6[`1esn`..],@usn6:@usn6[9e12]}]->({usn1:$#usn7 =~`2esn`})-[`3esn`?{@usn6:Count(*)[..@usn6][..`7esn`],`6esn`:`2esn` In 9e0 In 7}]->(`8esn` :@usn6{`7esn`:0e0[999..$``]})[{`6esn`:$`4esn`[`6esn`..$12],usn1:00 In @usn6 In 0}..][Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 123456789[12])..] Limit 0Xa[010..$0][$`2esn`..999]"),
    octest:ct_string("Merge (`6esn` :@usn6)-[usn2?:`3esn`]->(`8esn` :@usn6{`7esn`:0e0[999..$``]})-[:@usn6|:`7esn`{#usn7:.0[.e12..],usn2:usn2 =~usn1 =~Count ( * )}]->(_usn3 :`4esn`:`6esn`{usn2:`4esn` Starts With 0e0,`3esn`:7[12]}) On Create Set #usn8 =$_usn4[$`6esn`..] Match #usn7=((@usn5 :`4esn`:`6esn`)<-[`3esn` *7..]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]})),((`1esn` :`2esn`)<-[`1esn`:`8esn` *999..{`4esn`:$123456789 Starts With 0.12 Starts With Null,usn2:.e1[7..][9e0..]}]->(`1esn` :`3esn`{#usn7:12[..0e0][...e1]})-[@usn6?:#usn8|:`3esn`{usn1:.e1[..$`3esn`][..01],`4esn`:$`5esn` In .12}]->(usn2 :_usn4)) Union With  's_str' Order By $12[9e0..$999] Asc,{`3esn`:.e1[..\"d_str\"][..$123456789]} Descending Skip #usn8[`8esn`..] Limit .12 In `8esn` In $#usn8 Where 12.e12 Contains #usn7 Contains $_usn4 Detach Delete 9e0[Count(*)..0.12][$`1esn`..12.0] Return *,[@usn5 In 9e0 Ends With $#usn8 Where 12.e12 =~0X0123456789ABCDEF =~1.e1|00[$`1esn`..][@usn6..]] Is Not Null As `3esn`,$12 Starts With $0 Starts With $`8esn` As `3esn` Limit {_usn4:`1esn` Is Not Null Is Not Null,@usn5:0.12[$0..$usn2]} Is Not Null Is Not Null"),
    octest:ct_string("Delete 's_str' In $_usn4,Filter(`5esn` In 0X7 In $#usn7 Where 010 Is Null) Is Not Null,12.0 Is Null Union Detach Delete All(#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[`8esn`])[None(`5esn` In 0X7 In $#usn7 Where 's_str' Starts With 1e1 Starts With $0)..(_usn3 :`7esn`)<-[?:`5esn`|:usn2 *123456789..{#usn7:$`1esn` =~999,`4esn`:$@usn6[00]}]-(:`6esn`:_usn3)],0Xa[..Count ( * )][..$123456789],`2esn` Starts With .e1 Starts With 9e12 Unwind All(#usn7 In 9e0[$1000] Where 01 Ends With 0Xa Ends With 0X7) Contains `2esn`(Distinct 0x0[0.0],0Xa =~False =~@usn5) Contains Single(#usn7 In $999 In 1e1 Where $@usn6 =~#usn7 =~True) As `8esn` Merge ``=(((_usn3 {`6esn`:@usn5[$`6esn`..][$999..],`8esn`:$@usn5[..0xabc][..$`3esn`]})<-[`2esn`? *01234567..]->(:`2esn`)-[`2esn`? *..07{`2esn`:`3esn`[0x0..]}]->({`7esn`:999 In 0e0}))) Union Merge (@usn6 :`2esn`{_usn3:$``[7],`7esn`:_usn3 Ends With 7 Ends With $`1esn`}) On Create Set All(usn2 In 7[12] Where `2esn`[$12..]).#usn8? =[#usn7 In 9e1[$`1esn`..] Where $@usn5 In $`6esn` In 12e12|12.0 Is Null Is Null] Contains [`3esn` In `2esn`[..01][..True] Where $0 Ends With $usn1 Ends With $_usn3],Extract(@usn6 In False Contains 0 Contains $`6esn` Where $0 Ends With $usn1 Ends With $_usn3|01 In $@usn6).`7esn`? ={`3esn`:.e1[..\"d_str\"][..$123456789]},[$`5esn` =~usn1,@usn6 Contains .12 Contains $usn1,999 In #usn8 In $``]._usn3 =[9e1 Ends With Count(*) Ends With $7,False[$usn1][0x0]] =~`2esn`(Distinct .12[01][@usn5],Count ( * ) Ends With $123456789) =~[@usn6 In False Contains 0 Contains $`6esn` Where $`8esn`[12.e12][_usn4]|12 Ends With Count ( * )] On Match Set `5esn` =0.e0[0X0123456789ABCDEF..] Optional Match @usn6=(`` :`3esn`{`6esn`:Count(*)[9e12..12.0]})-[:@usn5|_usn3 *00..0Xa]-(:usn2{`6esn`:`4esn` Starts With 0e0,`8esn`:usn2[12e12..]['s_str'..]})<-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->(_usn4 :@usn5)"),
    octest:ct_string("Create (_usn4 :@usn5{usn1:$#usn7 Starts With 01234567 Starts With $0})<-[`8esn` *0xabc{#usn8:12.0 Starts With .12 Starts With `6esn`,@usn5:_usn3[`5esn`..][usn2..]}]->(#usn7 {`8esn`:`7esn` In 010 In usn1}) Union All Create (`` {`8esn`:$`6esn`[``..][Count(*)..]})<-[`6esn`? *00..0Xa]->(#usn7 :#usn8:`1esn`{``:.0[$``..0X7]}),usn1=(((`` {`8esn`:$`6esn`[``..][Count(*)..]})<-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]-(#usn8 :`6esn`:_usn3)<-[{_usn4:1.e1[`8esn`]}]->(:@usn6$usn1))) Merge #usn8=((#usn7 :_usn3$usn1)<-[`4esn`?:usn1|`4esn`{`3esn`:123.654[..0.e0][..'s_str'],@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]}]->({`3esn`:`2esn` In 9e0 In 7})) On Create Set @usn6+=$`1esn` =~1e1 On Create Set Extract(_usn4 In 12e12 In 123456789 Where Count ( * ) Ends With $123456789).`8esn` =None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 9e12[$`5esn`..$123456789]) In Extract(@usn5 In 's_str'[0..] Where 07 Ends With 9e12 Ends With `2esn`|00[01234567][False]) In [12 =~usn1] Union Return 9e1 Ends With Count(*) Ends With $7 As `6esn` Limit _usn3 Contains 9e12 Contains `8esn` Remove [999 Is Not Null Is Not Null,123.654 In $`7esn`].`6esn`,[#usn7 In 9e1[$`1esn`..] Where $`7esn`[$_usn4][.e0]|.0[..'s_str'][..01234567]].usn1?,[`6esn` In $`6esn`[``..][Count(*)..]|.e12 Starts With $12 Starts With .e12].`7esn`! Optional Match _usn3=(`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`}),`5esn`=((`8esn` :@usn5{`5esn`:_usn3 In $`8esn` In @usn6,_usn4:$@usn6 Ends With 12.e12 Ends With @usn5})-[`5esn`? *01..123456789{`5esn`:@usn6[9e12],`5esn`:@usn6[999..$_usn3][0.12..$@usn5]}]-(`1esn` {`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]})-[@usn5:`5esn`|:usn2 *0Xa{#usn7:`7esn`[$usn2..][$123456789..]}]-(`5esn` :``:usn2{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3})) Where $`7esn`"),
    octest:ct_string("Return Distinct *,$`3esn`[.e1][_usn4] Order By 12[None(#usn7 In 9e1[$`1esn`..] Where usn2 Is Not Null)..`5esn`(Distinct 00[$`1esn`..][@usn6..],@usn6[9e12])][`5esn`(`2esn`[..01][..True])..(`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]})<-[? *7..]-(#usn7 :``:usn2)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})] Descending With Distinct usn2 =~$`` =~$`8esn` As `2esn`,'s_str'[0x0..1.e1] As `6esn`,$`5esn`[\"d_str\"..] As `5esn` Limit 01[07..][1.e1..] Union All Remove None(`5esn` In `7esn`[$usn2..][$123456789..] Where _usn4 Is Not Null).`3esn`? Unwind \"d_str\"[#usn8] As @usn5 Union All Create _usn4=((`1esn` :#usn7:`5esn`{`1esn`:0e0 =~0Xa =~$999})),(((`7esn` {#usn7:$@usn6 Ends With `1esn`})<-[?:usn2{@usn5:999[..`1esn`][..07],_usn4:Count ( * ) Ends With $123456789}]->(`1esn` :usn1:`3esn`{_usn3:.0[.e12..]})<-[:`2esn`|`4esn` *0X0123456789ABCDEF..{`3esn`:usn2[`8esn`..][0X0123456789ABCDEF..],_usn3:$@usn6 In @usn6 In 1e1}]-(@usn6 :`2esn`{`4esn`:$999[0Xa..][9e1..]}))) Merge #usn8=({#usn7:12e12 In $`5esn`}) On Create Set @usn6+=None(`3esn` In `2esn`[..01][..True] Where usn1 In ``)[None(usn2 In 7[12] Where 12e12 =~$`7esn`)..],Single(#usn7 In 9e1[$`1esn`..] Where Count ( * ) In 0.12).@usn6? =7[0e0..] On Create Set ``+=$``[7],[@usn6 In False Contains 0 Contains $`6esn` Where 12.e12 =~.0 =~usn1|$`4esn` Contains .e0 Contains 0Xa].`` =$`7esn`[123456789..$1000][Count ( * )..$7]"),
    octest:ct_string("Remove `2esn`(.12[123.654..]).`4esn` Remove Extract(`8esn` In 123456789 =~@usn6 Where @usn5 Contains 9e0|9e0 Contains $12 Contains `3esn`).`8esn` Merge `2esn`=(((`7esn` )<-[`4esn` *0Xa{@usn6:999 Starts With `2esn` Starts With .e1,`4esn`:$@usn5[..0xabc][..$`3esn`]}]->(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"})<-[usn2?:@usn5|_usn3*{_usn4:@usn5 Starts With $`3esn`,#usn7:$`5esn` Is Not Null}]-(#usn7 :``:usn2))) On Match Set #usn8 =[`5esn` Contains `1esn` Contains usn1,$@usn5 Ends With @usn5 Ends With 0xabc] Is Null Is Null,`8esn` =[$@usn6 =~#usn7 =~True,$`1esn` Contains 1e1 Contains @usn6,9e1[..123456789]] Is Null On Create Set @usn6+=$#usn7 Ends With 's_str' Ends With 0X7,`6esn` ={`3esn`:12 Starts With #usn7 Starts With 0Xa} Is Null Is Null,usn2 =$@usn5 Ends With @usn5 Ends With 0xabc"),
    octest:ct_string("Merge `8esn`=((#usn8 :_usn3)<-[`8esn`?:#usn7|@usn5{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3}]-(`` :usn1:`3esn`)) Remove `6esn`(Distinct 0x0 Starts With $`6esn`,.e12[@usn6..][010..]).`8esn`!,[@usn6 In 010[`5esn`] Where 1.e1[$usn1]|_usn3[0x0]].usn2? Union Create `2esn`=(((`6esn` :`4esn`:`6esn`)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})<-[`4esn` *0Xa{@usn6:999 Starts With `2esn` Starts With .e1,`4esn`:$@usn5[..0xabc][..$`3esn`]}]->(@usn6 :``:usn2))),({_usn3:@usn6 Contains .12 Contains $usn1}) Return Distinct *,12[None(#usn7 In 9e1[$`1esn`..] Where usn2 Is Not Null)..`5esn`(Distinct 00[$`1esn`..][@usn6..],@usn6[9e12])][`5esn`(`2esn`[..01][..True])..(`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]})<-[? *7..]-(#usn7 :``:usn2)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})] As usn1,Any(#usn7 In 9e0[$1000] Where .e0 Is Null) In None(@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``) In Filter(@usn6 In False Contains 0 Contains $`6esn` Where $@usn5 In 12e12 In 01) As `7esn`"),
    octest:ct_string("Remove `6esn`(Distinct 9e1 Contains $999,_usn4 Is Not Null Is Not Null).`4esn`?,None(`8esn` In 123456789 =~@usn6 Where $usn1)._usn3! With Distinct $usn2 =~0.e0 =~@usn6 As _usn4,9e12[..1e1][..'s_str'] As @usn5 Order By 0X0123456789ABCDEF Is Not Null Is Not Null Asc,0X0123456789ABCDEF Is Not Null Is Not Null Asc Limit $7 In $usn1 In 999 Where 12.e12 Is Not Null Is Not Null"),
    octest:ct_string("Unwind 0x0[12e12..$`7esn`] As `7esn` Union All Remove (usn1 :@usn6)<-[?:#usn7|@usn5 *0..01]->(:`1esn`:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null})<-[_usn4? *12..{`1esn`:$`6esn` Starts With .e12 Starts With $`1esn`,`3esn`:`8esn`[0.e0..]}]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0}).@usn5! Union All Create @usn5=((({usn2:`2esn`[..$_usn3]})-[``?:_usn4]-(_usn4 :_usn4)<-[`6esn`? *..010{usn2:Null[..0]}]-(_usn3 {`8esn`:_usn3[0x0],#usn8:$usn1 Contains 0})))"),
    octest:ct_string("Merge ((#usn7 :usn1:`3esn`)-[`3esn`?:`7esn`|:`2esn`]-(`5esn` :#usn8:`1esn`{_usn3:`6esn` Is Null Is Null})-[@usn5:`5esn`|:usn2 *0Xa{#usn7:`7esn`[$usn2..][$123456789..]}]-({`7esn`:9e0 Contains $12 Contains `3esn`,`5esn`:.e0 Contains $#usn8})) On Match Set All(usn2 In False[$usn1][0x0] Where `2esn`[..01][..True]).`1esn`? =$usn2[`2esn`..$`1esn`],{usn1:#usn8 =~.e0,_usn3:$_usn4 Is Null Is Null}.`1esn` =$`7esn`[.e1][12.0] Remove usn2(Distinct _usn3 Starts With 12e12 Starts With `5esn`)._usn3!,{`6esn`:$`2esn` Starts With .0 Starts With `1esn`}.#usn7!,{`6esn`:Null =~`6esn`}._usn3! Union Delete [`5esn` In `7esn`[$usn2..][$123456789..] Where $`5esn` =~$0 =~``|\"d_str\" Is Not Null] =~All(#usn7 In $999 In 1e1 Where 1.e1 In 1000 In _usn3) =~[01 Ends With 0Xa Ends With 0X7],[#usn8 In `7esn` Where $`3esn` Contains $`1esn`|$0[123.654..0.e0]][usn1(Distinct 999 Contains $1000,12[123.654..])..[.e12[..999][..@usn5],12.e12 =~.0 =~usn1,`6esn`[$1000][`3esn`]]][[@usn6 In 010[`5esn`] Where $usn2[`2esn`..$`1esn`]]..[`3esn` In 9e1 Contains $999 Where .12 In `8esn` In $#usn8]] Remove Any(#usn7 In 9e1[$`1esn`..] Where 1.e1[12.e12..]).@usn6?,@usn5(Distinct Count ( * ) Ends With $123456789).`6esn`? Union All With  12.e12[..$`6esn`] As `7esn`,Extract(usn2 In 7[12] Where $@usn5[0.0][0X0123456789ABCDEF])[[#usn7 In 9e0[$1000] Where 01 Ends With 0Xa Ends With 0X7|`2esn`[$usn2][12.0]]..][Filter(#usn8 In `7esn` Where @usn6[999..$_usn3][0.12..$@usn5])..] As ``,1.e1 Contains `6esn` Contains 0.e0 Skip Any(usn2 In 7[12] Where 0X7[.0])[Any(`6esn` In $`6esn`[``..][Count(*)..] Where $7 In $usn1 In 999)..#usn8(Distinct $_usn4 Is Null Is Null,01[`8esn`..9e12][.12..0])] Where 999 Contains $1000 Detach Delete Extract(#usn8 In `7esn` Where ``[7.._usn3]|@usn5 Is Null) Is Not Null Is Not Null,010 Starts With $`` Starts With 0e0"),
    octest:ct_string("Match ((#usn7 :_usn3$usn1)-[#usn7:#usn8|:`3esn`{`6esn`:0.e0[$`4esn`..`2esn`],_usn3:7[12]}]-(`3esn` :usn2{`6esn`:#usn8 Is Null})),`4esn`=({`8esn`:.e0[999..1000][1e1..$`8esn`],`1esn`:$`3esn`[$_usn4..0Xa]}) Where .e0 Match (((`6esn` :#usn7:`5esn`)-[`6esn`?:@usn5|_usn3 *01234567..]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})-[ *0xabc{``:usn1 Contains 010,`2esn`:$0 In `3esn` In 07}]->(_usn4 :#usn7:`5esn`))),`1esn`=(`8esn` :@usn6)<-[?:usn2 *0x0..]->(:`2esn`{usn1:.0[..'s_str'][..01234567],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})-[`5esn`? *01..123456789{`5esn`:@usn6[9e12],`5esn`:@usn6[999..$_usn3][0.12..$@usn5]}]-(`1esn` {`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]}) Detach Delete False[..$`5esn`][..1e1],`4esn` Contains 9e0,12[$`5esn`..][False..] Union All Delete 0xabc =~@usn5 =~$usn1,[$usn1 Ends With _usn4 Ends With `2esn`][@usn5(Distinct 12e12 In 123456789,12.0 =~@usn6 =~$`2esn`)..[#usn7 In $999 In 1e1 Where 9e12 Starts With 1e1]][Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 12[$`5esn`..][False..])..Extract(#usn7 In 9e1[$`1esn`..] Where $999[``])],1000[$7..][_usn4..] With  $1000 Starts With $`3esn` Starts With 0.e0 As @usn6,.e12 In $`5esn` In 0X7 As _usn4 Order By 1.e1 In 1000 In _usn3 Desc,None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 9e12[$`5esn`..$123456789]) In Extract(@usn5 In 's_str'[0..] Where 07 Ends With 9e12 Ends With `2esn`|00[01234567][False]) In [12 =~usn1] Descending,123.654 Is Null Is Null Asc Where _usn4[`7esn`] Union All Optional Match ((`` {#usn7:#usn8 Is Not Null Is Not Null})<-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(`2esn` :@usn5)<-[?:`5esn`|:usn2]->(usn2 :`5esn`)) Remove {`6esn`:Null =~`6esn`}._usn3!,[usn2 In False[$usn1][0x0] Where `4esn` Starts With 0e0].`6esn`!,[010[`5esn`],0Xa[..Count ( * )][..$123456789]]._usn3"),
    octest:ct_string("Detach Delete (usn2 :usn1:`3esn`{`3esn`:`2esn` Is Null})<-[:`8esn` *999..{@usn6:`7esn` Ends With $7 Ends With $@usn5,``:0e0 Starts With 999 Starts With `2esn`}]->(`6esn` :#usn7:`5esn`)<-[usn1:`1esn`|`3esn`]->(`1esn` {#usn8:$#usn7[..9e0][..123.654],`5esn`:9e12 Starts With 1e1}) =~(`7esn` {#usn7:$@usn6 Ends With `1esn`})<-[#usn8 *0x0..]->(_usn3 :usn2{#usn8:$`2esn` Is Null,_usn3:123.654 Is Not Null})-[? *0X0123456789ABCDEF..]-(usn2 :_usn3),{@usn5:`6esn`[$1000][`3esn`]}[All(`3esn` In `2esn`[..01][..True] Where 0Xa =~False =~@usn5)..] Delete 9e1[.12][`7esn`],$12[$usn1..][Count(*)..] Union Merge ((:`2esn`{`3esn`:9e1 Ends With Count(*) Ends With $7})<-[usn1?:`1esn`|`3esn` *01234567..{@usn5:`4esn`[\"d_str\"]['s_str']}]-({`7esn`:9e0 Contains $12 Contains `3esn`,`5esn`:.e0 Contains $#usn8})) Detach Delete All(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $0[123.654..0.e0])[usn2(Distinct #usn7 Contains $0 Contains $usn2,0.e0)..]"),
    octest:ct_string("Unwind _usn3[`5esn`..][usn2..] As #usn7 Unwind $1000 Starts With $`3esn` Starts With 0.e0 As usn1 Union Remove All(#usn7 In 9e1[$`1esn`..] Where Count ( * ) In 0.12).#usn7?,All(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`).#usn8,{`4esn`:$999[0Xa..][9e1..]}.`3esn` Detach Delete $123456789[.0..],All(#usn7 In True Contains 's_str' Contains $usn1 Where #usn8 Is Null Is Null)[..[0x0[0X7]]][..(:`7esn`{`3esn`:$`3esn` Contains $`1esn`,#usn7:$usn2[`4esn`..9e12]})-[ *..07]->(_usn3 :`3esn`{_usn3:01[`8esn`..9e12][.12..0]})] Union Match (((@usn6 )<-[`6esn`? *01234567..]->({`3esn`:`5esn` Contains `1esn` Contains usn1,`1esn`:999[@usn5..][Null..]})<-[? *0X7..{``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]}]-(:`6esn`:_usn3{`8esn`:.e12[..999][..@usn5],`3esn`:$_usn3 Is Null}))) Remove {`4esn`:$_usn4 Starts With $1000 Starts With 12,`5esn`:0 Ends With 12.e12 Ends With usn2}.``?,Single(`3esn` In 9e1 Contains $999 Where $`5esn` Is Not Null Is Not Null)._usn4?"),
    octest:ct_string("Create ((#usn7 {`6esn`:$`2esn` Contains Count(*)})-[?:_usn4]->(`2esn` :usn2)) Detach Delete @usn6[..$@usn5] Create usn1=((#usn8 :_usn3)<-[? *12..{#usn7:`6esn` Ends With _usn4 Ends With False,usn1:1000[12e12][`5esn`]}]->(:`6esn`:_usn3{``:usn1 Contains 010,`2esn`:$0 In `3esn` In 07})),`1esn`=((`6esn` {`3esn`:$`2esn`[0..123456789][``..`1esn`],`7esn`:$0[0Xa..$123456789]})<-[? *00..0Xa]->(usn2 :@usn5)-[?:`2esn`|`4esn` *0Xa{#usn7:1.e1 Starts With 9e12}]-(:`4esn`:`6esn`{@usn5:$#usn7[..9e0][..123.654],`2esn`:7[12]})) Union All With Distinct `2esn`[$usn2][12.0],Single(#usn7 In 9e0[$1000] Where $123456789[...12][..@usn6])[Filter(@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str'])..] As _usn4 Limit `4esn` In 010"),
    octest:ct_string("Delete $123456789[0X0123456789ABCDEF],'s_str'[0..] Union Create usn2=((#usn7 {`8esn`:`7esn` In 010 In usn1})<-[usn1]->(:`6esn`:_usn3{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})<-[:`8esn` *999..{@usn6:`7esn` Ends With $7 Ends With $@usn5,``:0e0 Starts With 999 Starts With `2esn`}]->(`1esn` :@usn6{`6esn`:00[False..0e0],`6esn`:$usn2 =~1.e1 =~usn1})),@usn5=(:#usn8:`1esn`{`3esn`:123.654[..0.e0][..'s_str']})"),
    octest:ct_string("Optional Match #usn8=((`4esn` :@usn6)<-[@usn5?:usn2 *0..01]->(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})) Match #usn8=((`2esn` :_usn3{`8esn`:01234567[Null..$_usn3]})<-[ *0Xa{`3esn`:9e1 Ends With Count(*) Ends With $7}]-(`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})<-[usn1:`1esn`|`3esn`]-(_usn4 :@usn5))"),
    octest:ct_string("Unwind $12 Starts With $usn1 As `4esn` Return Distinct *,@usn5(Distinct 12e12 In 123456789,12.0 =~@usn6 =~$`2esn`)[`8esn`(123456789 =~$999)][`2esn`($`2esn`[..$`3esn`][..12e12])],[#usn7 In $999 In 1e1 Where 0X7['s_str'..][01..]] Contains [@usn6 In False Contains 0 Contains $`6esn` Where `1esn` Starts With 0xabc Starts With $usn2] Contains Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where 999 In #usn8 In $``|True[0xabc..01234567][$`8esn`..$@usn6]) As usn2 Order By $7 Starts With 12.e12 Starts With $@usn6 Asc,12e12 In 123456789 Asc Skip [0.0 Is Not Null,$`4esn`[`8esn`],$123456789[12e12..9e0]] =~.e12 Limit _usn4 Ends With _usn4 Ends With 9e0 Merge ``=((`4esn` :`4esn`:`6esn`)-[`3esn`:`2esn`|`4esn`]-({#usn8:False Starts With 0X7 Starts With 01234567})<-[#usn7?:`5esn`|:usn2{`7esn`:123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]}]-(`` {``:$@usn6 Ends With 12.e12 Ends With @usn5,`2esn`:$`3esn` Ends With 01234567})) Union Detach Delete $123456789[12e12..9e0] Remove [12.0 Starts With .12 Starts With `6esn`,usn2 Contains $0 Contains .0,$#usn7 In $@usn5 In $`1esn`].`7esn`!,Single(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0[0.0]).`3esn`? Union Unwind .0[.e12..] As usn1 Remove `5esn`($`4esn` In 1.e1 In #usn7,0Xa[Count(*)..]).`2esn`,[$0[123.654..0.e0],01234567[Null..$_usn3]]._usn4!,{usn1:#usn8 =~.e0,_usn3:$_usn4 Is Null Is Null}.`1esn`"),
    octest:ct_string("Detach Delete (`4esn` :#usn7:`5esn`{_usn4:0Xa Ends With $`3esn` Ends With $1000})-[@usn6:#usn8|:`3esn`]->({@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]})[[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07[_usn3..][`6esn`..]|`1esn`[0.12..][@usn6..]]..][{``:07[$`2esn`..9e12][$`4esn`..9e12],`3esn`:$`6esn` Starts With .e12 Starts With $`1esn`}..],07 Contains `3esn` Contains `7esn`,Any(#usn7 In True Contains 's_str' Contains $usn1 Where `6esn` Starts With `6esn`) =~Single(#usn7 In $999 In 1e1 Where _usn4 Contains `` Contains 1.e1)"),
    octest:ct_string("With  `2esn`[$usn2][12.0],Single(#usn7 In 9e0[$1000] Where $123456789[...12][..@usn6])[Filter(@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str'])..] As _usn4 Order By $`7esn`[..@usn6] Ascending Limit [`2esn` Is Null] Is Null Is Null Where usn1[...e12][..1.e1] Union All Unwind 0.12[$0..$usn2] As `8esn` Remove {_usn3:usn2 Ends With .e1 Ends With $`5esn`}.#usn8,(@usn6 :`6esn`:_usn3{@usn5:0xabc =~$@usn5,usn1:0Xa[$`8esn`..][$_usn4..]})<-[@usn5:_usn4 *0x0..]->(:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null})-[@usn6?:#usn8|:`3esn`{usn1:.e1[..$`3esn`][..01],`4esn`:$`5esn` In .12}]->(usn2 :_usn4)._usn3 Return 0X7[`2esn`..] Order By 0[@usn5..$#usn7] Ascending"),
    octest:ct_string("Merge (`8esn` :@usn6)<-[?:usn2 *0x0..]->(:`2esn`{usn1:.0[..'s_str'][..01234567],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})-[`5esn`? *01..123456789{`5esn`:@usn6[9e12],`5esn`:@usn6[999..$_usn3][0.12..$@usn5]}]-(`1esn` {`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]}) Return *,`6esn` =~Null As `4esn`,.e0 Starts With $@usn6 Starts With $7 As `5esn` Order By [`3esn` In 9e1 Contains $999 Where _usn3[`2esn`..0X7][0.e0..$`3esn`]] In (`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[ *0xabc{``:usn1 Contains 010,`2esn`:$0 In `3esn` In 07}]->(:#usn7:`5esn`)-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(:#usn8:`1esn`$`7esn`) In {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]} Asc,{`2esn`:'s_str'[0..],`7esn`:0Xa[Count(*)..]}[..None(#usn7 In $999 In 1e1 Where 123456789 =~@usn6)] Desc Skip $`3esn`[$_usn4..0Xa] Union All Optional Match #usn8=(`5esn` :`7esn`)<-[{_usn4:1.e1[`8esn`]}]->(:@usn6$usn1)<-[`4esn`:`1esn`|`3esn` *12..]-(usn1 :`7esn`{`7esn`:9e12 Starts With 1e1,_usn3:$`7esn`[$_usn4][.e0]}),usn2=(_usn3 {`8esn`:0e0 =~7 =~12.0,_usn4:.e1[..$`3esn`][..01]})<-[_usn4{`2esn`:#usn8[`8esn`..],`2esn`:@usn6[9e12]}]-(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-(`2esn` :@usn5{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3}) Remove Extract(#usn7 In 9e0[$1000] Where $_usn3 Is Null|@usn5 Contains 9e0)._usn4? With Distinct *,`3esn`[...e1] Where 9e0 Contains $12 Contains `3esn` Union All With Distinct 0.e0['s_str'..][01234567..] As `1esn`,None(#usn7 In $999 In 1e1 Where _usn3 Contains 9e12 Contains `8esn`)[..Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 0xabc In 123456789 In 0x0|Count(*)[..@usn6][..`7esn`])] As `3esn`,.0[$``..0X7] Skip usn2 =~$`` =~$`8esn` With  $1000 Starts With $`3esn` Starts With 0.e0 As @usn6,.e12 In $`5esn` In 0X7 As _usn4 Where 12.e12 Ends With $`` Unwind (@usn6 :`8esn`)<-[`4esn`?:`4esn`|@usn5 *01..123456789]-(:usn1:`3esn`{`8esn`:12 Starts With True Starts With 12e12,`8esn`:`2esn` Starts With $`7esn`}) Ends With #usn8(Distinct 12.e12 Contains #usn7 Contains $_usn4,01[`3esn`..][Count(*)..]) Ends With [`5esn`[..True][..0.e0],12 In $usn1 In 7,$`8esn`[123456789..][$@usn5..]] As `6esn`"),
    octest:ct_string("With Distinct 1.e1[$`3esn`][0Xa] As @usn5 Order By (:`6esn`:_usn3{@usn6:7 =~`4esn`,_usn3:`6esn`[$1000][`3esn`]})-[_usn4:_usn4 *0X7..{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]}]-(:`6esn`:_usn3{`4esn`:#usn7 Contains $0 Contains $usn2})[[$`6esn`[1.e1][$_usn3]]][usn2(0xabc In Null)] Ascending,{_usn4:`1esn` Is Not Null Is Not Null,@usn5:0.12[$0..$usn2]} Is Not Null Is Not Null Descending,9e12 =~@usn6 Asc Skip usn1[$@usn5] Where $@usn6[00] Union Delete All(`8esn` In 123456789 =~@usn6 Where @usn5 Contains 9e0)[(:#usn7:`5esn`)<-[#usn8? *0Xa]-(`5esn` :`5esn`{#usn7:``[$`3esn`]})<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(usn2 {usn1:.e12 Ends With 0Xa Ends With 0xabc})..],9e1[`1esn`..0][999..1e1],Any(`5esn` In `7esn`[$usn2..][$123456789..] Where $@usn6 Ends With 12.e12 Ends With @usn5) Contains [`8esn` In 123456789 =~@usn6 Where .e12[@usn6..][010..]|Count(*) Is Not Null Is Not Null] Contains ({`1esn`:usn2 Contains $0 Contains .0,_usn4:$@usn6[.0..][0e0..]})-[? *12..{usn2:$`8esn`[123456789..][$@usn5..]}]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]})"),
    octest:ct_string("Unwind Count(*) In #usn8 In \"d_str\" As `6esn` Match (`5esn` {`2esn`:`1esn`[0.0..1e1][0x0..7],#usn8:.e0}) Where $@usn6 Ends With 12.e12 Ends With @usn5 Union All Remove [`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn` Contains .e0 Contains 0Xa].`1esn`? Create (((:_usn4{`8esn`:01234567[Null..$_usn3]})<-[`8esn`?:`5esn`|:usn2 *01..123456789{`7esn`:`6esn`,`4esn`:'s_str' Starts With 9e0 Starts With usn2}]->(`5esn` :`3esn`{``:`` Is Null,`8esn`:$@usn6[$0..9e12][.e12..Null]})<-[`7esn`:`4esn`|@usn5 *12..]->({`4esn`:.e1[..$`3esn`][..01]}))) Union All Create `8esn`=((_usn3 {`6esn`:@usn5[$`6esn`..][$999..],`8esn`:$@usn5[..0xabc][..$`3esn`]})<-[``:`5esn`|:usn2{`5esn`:_usn4[0]}]-(`2esn` {``:$0 =~9e1 =~$`2esn`,`8esn`:`5esn`[..123.654][...e12]})),`2esn`=(:`1esn`:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null})<-[`4esn`:usn2]->(`3esn` :_usn4) Detach Delete Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|0 Ends With 12.e12 Ends With usn2)[..123.654][..Any(#usn7 In $999 In 1e1 Where `4esn`[$_usn3..$`7esn`])],123.654 Contains @usn5 Contains $`5esn`"),
    octest:ct_string("With  9e12[..`3esn`][..0X0123456789ABCDEF] As `5esn`,`3esn`(#usn8 =~0.e0,1000[0e0][1e1])[[_usn3[0x0],1e1 In 0.0 In 0X0123456789ABCDEF]] As usn1 Order By .e1[..$`3esn`][..01] Ascending,'s_str' Is Not Null Descending Where $#usn7[..$`4esn`][..01] Optional Match (((`6esn` :#usn7:`5esn`)-[`6esn`?:@usn5|_usn3 *01234567..]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})-[ *0xabc{``:usn1 Contains 010,`2esn`:$0 In `3esn` In 07}]->(_usn4 :#usn7:`5esn`))),`1esn`=(`8esn` :@usn6)<-[?:usn2 *0x0..]->(:`2esn`{usn1:.0[..'s_str'][..01234567],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})-[`5esn`? *01..123456789{`5esn`:@usn6[9e12],`5esn`:@usn6[999..$_usn3][0.12..$@usn5]}]-(`1esn` {`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]}) Merge `8esn`=(@usn6 {`5esn`:.e12 Starts With $#usn8 Starts With False})<-[`6esn`:``]->({@usn6:$1000 Is Not Null}) On Match Set `3esn`+=[_usn4 In 12e12 In 123456789 Where True Contains 's_str' Contains $usn1|999 Contains $1000] Starts With Single(`5esn` In `7esn`[$usn2..][$123456789..] Where $`5esn` =~$0 =~``),`2esn`+=\"d_str\" In @usn5 In $@usn5 On Create Set `7esn` ={usn2:_usn3[0x0]} In Extract(#usn7 In 9e0[$1000] Where $_usn3 Is Null|010 Starts With 0 Starts With 0.0) In {`7esn`:False[$`4esn`..]} Union All Remove Single(#usn7 In 9e0[$1000] Where Count ( * ) In True In @usn5).`3esn`,{`3esn`:9e1 Ends With Count(*) Ends With $7}._usn4!,(`` :`7esn`)-[_usn3?:_usn4 *00..0Xa{_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}]-(usn2 :`5esn`).`2esn`! Unwind True Contains 's_str' Contains $usn1 As _usn4 Merge `4esn`=({`7esn`:`4esn` Is Not Null Is Not Null,`4esn`:`4esn` Ends With 12 Ends With .12})<-[`5esn`?:`7esn`|:`2esn` *0x0..]-(`4esn` :#usn7:`5esn`{@usn5:$`` Contains $`2esn` Contains $usn2}) Union All Create _usn4=(((_usn4 :_usn4{_usn3:$`3esn`[.e1][_usn4]})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)<-[usn1:`7esn`|:`2esn`{`6esn`:Count(*) In #usn8 In \"d_str\",`1esn`:$`1esn` Ends With 0X0123456789ABCDEF}]-(`6esn` :`1esn`:_usn4)))"),
    octest:ct_string("Merge (:usn1:`3esn`{@usn6:0.e0 Starts With .0 Starts With 123456789,`4esn`:.e1[7..][9e0..]})-[#usn8:`4esn`|@usn5]-(:#usn7:`5esn`{`3esn`:Null[..0]})<-[:`6esn`|:#usn8{``:`1esn` Starts With 0xabc Starts With $usn2}]-(`2esn` :`1esn`:_usn4) On Match Set #usn7+=@usn6[123.654..][0x0..],`3esn`+=00 In @usn6 In 0,@usn6 =Filter(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]) Is Not Null Is Not Null On Create Set Any(#usn7 In True Contains 's_str' Contains $usn1 Where $12[9e0..$999]).`5esn`! =1.e1[12..][$`4esn`..],Any(usn2 In False[$usn1][0x0] Where $@usn6 Is Not Null Is Not Null).`2esn` =All(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07[_usn3..][`6esn`..]) =~All(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where .e12[..999][..@usn5]) =~Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4),`2esn` =1e1 Ends With $`2esn` Remove Filter(#usn8 In `7esn` Where $`3esn`[..0X0123456789ABCDEF][..7]).@usn5?,Extract(@usn6 In False Contains 0 Contains $`6esn`|$7 In 0.e0 In 999).`2esn`!,Single(#usn7 In $999 In 1e1 Where _usn4 Is Not Null Is Not Null).usn1 Union Detach Delete `2esn`[$@usn6..][Null..],$1000 Starts With $`7esn`"),
    octest:ct_string("Return Count ( * ) In True In @usn5 As `2esn`,$_usn3[$12] Order By $@usn6 =~0xabc =~$999 Descending,Null Ends With _usn4 Ends With 0.0 Asc,`3esn`(Distinct $123456789[...12][..@usn6])[{usn2:$`2esn` Is Null,#usn8:.0 Is Null Is Null}][#usn7(Distinct $@usn6 Is Not Null Is Not Null,``[7.._usn3])] Asc Skip usn2 =~7 Limit 0[@usn5..$#usn7] With  *,Extract(`6esn` In $`6esn`[``..][Count(*)..] Where $@usn5 Starts With `5esn` Starts With 01234567|0.e0[..$7]) Is Null Is Null Skip 0xabc In 123456789 In 0x0 Limit _usn4 Starts With 1000 Starts With $usn2 Where 123.654[$0..0X7][Null..#usn8] With Distinct 0e0[01][$`7esn`],'s_str'[0..] As `4esn`,Filter(@usn5 In 9e0 Ends With $#usn8 Where 07 Is Null) =~{#usn7:1000[12e12][`5esn`]} As _usn4 Skip 0x0[$0][7] Limit None(#usn7 In $999 In 1e1 Where 1000[12e12][`5esn`])[Any(`3esn` In `2esn`[..01][..True] Where $`3esn`[..0xabc][..$7])][$#usn7] Where $`7esn`[$_usn4][.e0] Union With Distinct [#usn7 In 9e1[$`1esn`..] Where $@usn5 In $`6esn` In 12e12|12.0 Is Null Is Null] Contains [`3esn` In `2esn`[..01][..True] Where $0 Ends With $usn1 Ends With $_usn3] As #usn8 Order By [#usn7 In $999 In 1e1 Where 0X7['s_str'..][01..]] Is Not Null Is Not Null Desc Limit Any(`5esn` In 0X7 In $#usn7 Where 0.12 Contains False Contains 1.e1) Contains 0X7 Contains Extract(`8esn` In 123456789 =~@usn6 Where @usn5 Contains 9e0|9e0 Contains $12 Contains `3esn`) Merge (_usn3 :`7esn`) On Create Set [@usn6 In False Contains 0 Contains $`6esn` Where 12.e12 =~.0 =~usn1].usn2! =None(#usn7 In True Contains 's_str' Contains $usn1 Where 00[12..$`6esn`]) Ends With None(#usn7 In 9e0[$1000] Where 1e1 Contains 0.e0 Contains 9e1),`8esn` =01[07..][1.e1..] On Create Set #usn7+=Null[.12..12e12],Single(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $0[123.654..0.e0]).`1esn`! =[123456789 =~$999,$`2esn` Ends With `6esn`,12.e12 Contains 9e1][`5esn`(Distinct .e0[01234567..$`8esn`])][All(`3esn` In 9e1 Contains $999 Where $`5esn` Is Not Null Is Not Null)],@usn6 =usn2[1.e1]"),
    octest:ct_string("Optional Match `8esn`=((_usn4 :`6esn`:_usn3)<-[`3esn`?:`2esn`|`4esn` *123456789..{_usn4:1.e1[`8esn`]}]->(`6esn` )<-[`5esn`?:`8esn`]->({``:12 Starts With #usn7 Starts With 0Xa,`8esn`:``[usn1][`5esn`]})),(`2esn` $`6esn`) Delete `5esn`(Distinct .12[123.654..]),.e1[..$`3esn`][..01],9e12[..1e1][..'s_str'] With  $usn1,`1esn` Contains $999 Contains 0.0 As @usn6,$`6esn`[0e0..][010..]"),
    octest:ct_string("With Distinct *,0.0[$@usn5.._usn4] As `1esn`,07 Is Null As #usn7 Order By 12.e12 Contains `6esn` Ascending,[$`3esn` Ends With 01234567][..{`3esn`:`6esn` Starts With `6esn`}][...e1] Asc,Extract(`3esn` In `2esn`[..01][..True] Where 00[01234567][False]|$`3esn` Ends With 01234567) Starts With (_usn4 :_usn4)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07}) Starts With Extract(@usn6 In 010[`5esn`] Where $`2esn` Starts With `4esn` Starts With $usn1) Asc Limit 9e1"),
    octest:ct_string("Unwind 123.654[$@usn5..] As @usn5"),
    octest:ct_string("Match (`3esn` {_usn4:123.654 In 12})-[`4esn`?:_usn4 *7..]-(`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`})<-[ *00..0Xa]->(#usn7 :usn1:`3esn`),(:`8esn`{``:.e1 Starts With 12.e12 Starts With `2esn`})<-[?:`3esn`*..]-(usn2 :`1esn`:_usn4{usn2:999 Contains $1000})<-[`5esn`?{`8esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}]->(`3esn` :usn1:`3esn`{`1esn`:0X7[.0]}) With  's_str' Where 's_str'[0..] Return *,[00[12..$`6esn`],$`4esn`['s_str'..]] Is Null,9e1[$#usn8][$1000] Limit $`3esn`[..$1000][..$123456789] Union Match (((:`6esn`:_usn3{``:usn1 Ends With 9e0 Ends With 9e0,`5esn`:$`7esn`[.e1][12.0]})-[`3esn`?:`5esn`|:usn2{`7esn`:0X7['s_str'..][01..],`8esn`:0.e0[0X0123456789ABCDEF..]}]-(usn2 :usn1:`3esn`)-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->({usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]}))),({@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]}) Where 1000[0e0][1e1] Merge (:usn1:`3esn`{@usn6:0.e0 Starts With .0 Starts With 123456789,`4esn`:.e1[7..][9e0..]})-[#usn8:`4esn`|@usn5]-(:#usn7:`5esn`{`3esn`:Null[..0]})<-[:`6esn`|:#usn8{``:`1esn` Starts With 0xabc Starts With $usn2}]-(`2esn` :`1esn`:_usn4) On Match Set #usn7+=@usn6[123.654..][0x0..],`3esn`+=00 In @usn6 In 0,@usn6 =Filter(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]) Is Not Null Is Not Null On Create Set Any(#usn7 In True Contains 's_str' Contains $usn1 Where $12[9e0..$999]).`5esn`! =1.e1[12..][$`4esn`..],Any(usn2 In False[$usn1][0x0] Where $@usn6 Is Not Null Is Not Null).`2esn` =All(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07[_usn3..][`6esn`..]) =~All(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where .e12[..999][..@usn5]) =~Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4),`2esn` =1e1 Ends With $`2esn` Union With  0Xa[$`8esn`..][$_usn4..],0e0[``]"),
    octest:ct_string("Return Distinct $0[010..] As `` Skip All(#usn7 In 9e0[$1000] Where 's_str'[0x0..1.e1]) Is Not Null Is Not Null Union Remove All(`8esn` In 123456789 =~@usn6 Where $`5esn` =~$`8esn` =~usn2).@usn6?,Filter(@usn6 In 010[`5esn`] Where @usn6[9e12]).`2esn` Remove Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $`5esn` In _usn3 In 0.0).`8esn` Remove Extract(@usn5 In 's_str'[0..] Where `5esn`[..123.654][...e12]).`3esn`!"),
    octest:ct_string("Merge #usn8=(((`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[@usn6?:`7esn`|:`2esn`]->({#usn8:1e1 Is Not Null Is Not Null})-[?:@usn5|_usn3{`1esn`:`2esn` Is Null,`7esn`:`` =~.12}]-(`4esn` :#usn8:`1esn`{`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12})))"),
    octest:ct_string("Unwind 0xabc =~@usn5 =~$usn1 As `8esn`"),
    octest:ct_string("With Distinct 9e1[usn1..0x0][12.e12..12.0] Limit 0.e0[..$999][..0Xa] Delete Extract(#usn7 In 9e0[$1000] Where 00[12..$`6esn`]|$@usn6 Ends With `1esn`) =~[7 =~`4esn`,7 =~`4esn`],@usn5[$`6esn`..][$999..],1e1 Ends With $`2esn` Optional Match `8esn`=((_usn4 :`6esn`:_usn3)<-[`3esn`?:`2esn`|`4esn` *123456789..{_usn4:1.e1[`8esn`]}]->(`6esn` )<-[`5esn`?:`8esn`]->({``:12 Starts With #usn7 Starts With 0Xa,`8esn`:``[usn1][`5esn`]})),(`2esn` $`6esn`) Where 7 =~`4esn` Union All Unwind Count(*)[``..#usn8][`3esn`..0xabc] As @usn5"),
    octest:ct_string("Return [`5esn`[$`7esn`..$@usn5],$#usn7[..9e0][..123.654],1.e1 Is Null Is Null] Ends With Any(`6esn` In $`6esn`[``..][Count(*)..] Where 07 Contains `3esn` Contains `7esn`),usn2[usn2..0X7] As `1esn` Order By 's_str'[0x0..1.e1] Asc Limit 0xabc[..$1000][..`5esn`] Union All Optional Match ((usn2 {`5esn`:$@usn5 In 12e12 In 01})-[`8esn`:#usn7|@usn5 *00..0Xa]-(_usn3 {usn1:0x0 Starts With $`6esn`})),((_usn3 {#usn7:12.e12 Ends With `` Ends With 0,``:$@usn6 In @usn6 In 1e1})-[_usn3?:`8esn` *1000..0X0123456789ABCDEF{@usn5:07 Is Not Null Is Not Null}]->(`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})) Remove [12e12 =~1e1].`2esn`!"),
    octest:ct_string("Return Distinct 0X0123456789ABCDEF[0X7..$`2esn`][$`5esn`..$usn2] As #usn8,(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})<-[?:`7esn`|:`2esn`]->(#usn8 :usn1:`3esn`{`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[ *01234567..]->(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12}) Contains [7[12],00[$`1esn`..][@usn6..],`5esn` Contains #usn7 Contains 9e12] Contains {_usn3:$@usn6[00],`2esn`:0.12 Is Null Is Null},$#usn7 =~`2esn` As `4esn` Limit Filter(`6esn` In $`6esn`[``..][Count(*)..]) Ends With None(`5esn` In 0X7 In $#usn7 Where 12.0 Is Null Is Null) Remove #usn7:usn2,[07[_usn3..][`6esn`..],$usn1 Ends With _usn4 Ends With `2esn`,False[$`4esn`..]].`3esn`?,[`6esn` Ends With _usn4 Ends With False].`4esn`!"),
    octest:ct_string("Unwind (`7esn` :`2esn`{`4esn`:0[1e1][$usn1],usn2:`8esn`[..$#usn8]})-[:`6esn`|:#usn8{``:`1esn` Starts With 0xabc Starts With $usn2}]-(_usn3 :`2esn`{@usn5:`4esn` Is Not Null Is Not Null})-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01}) Is Not Null As `4esn`"),
    octest:ct_string("Remove (:`3esn`{`7esn`:0.e0['s_str'..][01234567..]})-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]}).`6esn`!,[01 Is Null,9e1[..123456789],010 Starts With $`` Starts With 0e0].`6esn`?,(:#usn7:`5esn`{`2esn`:12.e12 Contains 9e1,`5esn`:.e1 Starts With 12.e12 Starts With `2esn`})<-[usn2 *0X0123456789ABCDEF..]->(usn2 :`7esn`)<-[? *01..123456789]-(`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]}).`5esn`? Return *,[`8esn`[..$#usn8],1.e1 Starts With 9e12] Ends With [`6esn` In $`6esn`[``..][Count(*)..]|.e1[12.0..]] Ends With Any(usn2 In 7[12]),$`6esn` Starts With .e12 Starts With $`1esn` As @usn6 Skip $`5esn`[$`3esn`..] Limit Single(@usn6 In 010[`5esn`] Where Count(*)[9e12..12.0])[(`2esn` {``:$0 =~9e1 =~$`2esn`,`8esn`:`5esn`[..123.654][...e12]})<-[:`1esn`|`3esn`{`2esn`:$`3esn` Ends With 01234567}]->(_usn3 :`5esn`)][`7esn`] Union All With Distinct Single(usn2 In False[$usn1][0x0] Where $@usn6 Is Not Null Is Not Null) =~[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07 Is Not Null Is Not Null],usn2[12.e12..] Skip @usn5[0.0..0X7] Limit 07 Where 12[123.654..] Unwind 12e12 In 123456789 As `7esn`"),
    octest:ct_string("Delete All(`8esn` In 123456789 =~@usn6 Where @usn5 Contains 9e0)[(:#usn7:`5esn`)<-[#usn8? *0Xa]-(`5esn` :`5esn`{#usn7:``[$`3esn`]})<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(usn2 {usn1:.e12 Ends With 0Xa Ends With 0xabc})..],9e1[`1esn`..0][999..1e1],Any(`5esn` In `7esn`[$usn2..][$123456789..] Where $@usn6 Ends With 12.e12 Ends With @usn5) Contains [`8esn` In 123456789 =~@usn6 Where .e12[@usn6..][010..]|Count(*) Is Not Null Is Not Null] Contains ({`1esn`:usn2 Contains $0 Contains .0,_usn4:$@usn6[.0..][0e0..]})-[? *12..{usn2:$`8esn`[123456789..][$@usn5..]}]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]}) Union With  *,00[False..0e0] As _usn3 Order By None(`8esn` In 123456789 =~@usn6 Where True[`3esn`]) Is Not Null Is Not Null Desc Skip (`2esn` :_usn3{`8esn`:01234567[Null..$_usn3]})<-[?:usn2{usn2:@usn5 Is Not Null}]-(`7esn` {#usn8:False Starts With 0X7 Starts With 01234567}) =~[12 In $usn1 In 7] =~Filter(@usn5 In 's_str'[0..] Where 0.e0) Limit [_usn3 Ends With 7 Ends With $`1esn`,True Contains .e12,usn2 Is Not Null] Contains [$`2esn`[.0..][0.0..]] Contains (`6esn` :`8esn`)<-[_usn3 *0X0123456789ABCDEF..]-(#usn8 :`2esn`)-[`7esn`:#usn8|:`3esn` *0..01{`3esn`:07[_usn3..][`6esn`..],@usn6:``[usn1][`5esn`]}]->(:_usn3{_usn4:.e1[7..][9e0..]}) Where `2esn` Starts With $`7esn` With Distinct 999[@usn5..][Null..] Limit None(usn2 In 7[12] Where 123456789 =~12 =~'s_str')[{@usn5:$`` Contains $`2esn` Contains $usn2}..][(`2esn` :`6esn`:_usn3)-[?:#usn8|:`3esn` *7..]-({`7esn`:9e12 =~@usn6})..] Where @usn5 Contains 9e0 Union All Optional Match `1esn`=((`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})-[?$7]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0}))"),
    octest:ct_string("Optional Match `8esn`=(:_usn3{usn1:#usn7[..07]})-[?:`7esn`|:`2esn`{@usn5:usn2[1.e1],@usn6:$#usn8 Starts With .e12 Starts With 1.e1}]->({`1esn`:$12 Starts With $usn1,`6esn`:123.654[`4esn`..12]})-[?:@usn5|_usn3{`1esn`:`2esn` Is Null,`7esn`:`` =~.12}]-(:`4esn`:`6esn`{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7}) Remove (:#usn8:`1esn`{usn2:$`7esn`[.e1][12.0],``:$`1esn` Contains 1e1 Contains @usn6})-[`` *1000..0X0123456789ABCDEF]-(`` :`7esn`)<-[?{`6esn`:$0[0Xa..$123456789],``:.e1[..\"d_str\"][..$123456789]}]-(:usn2{`6esn`:#usn7[$`3esn`..$1000][0.0..`2esn`],``:010 Starts With 0 Starts With 0.0}).`4esn`!,Extract(`5esn` In 0X7 In $#usn7 Where @usn6 Is Not Null Is Not Null).@usn5?,Any(usn2 In False[$usn1][0x0] Where 010 Starts With 0 Starts With 0.0).#usn7! Return 0.e0[..$7] As _usn3,0xabc =~@usn5 =~$usn1 Skip $@usn6[00] Limit `2esn`(0e0 =~0Xa =~$999,@usn5 Contains 9e0)[(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[usn2? *0..01{`6esn`:#usn8 Is Null}]->(`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12})..][Any(`3esn` In `2esn`[..01][..True] Where 0.e0[..$7])..]"),
    octest:ct_string("Merge ((usn2 :`6esn`:_usn3)-[?:#usn7|@usn5 *0X0123456789ABCDEF..{_usn3:@usn5 Is Not Null}]-(#usn8 {`5esn`:$12[$usn1..][Count(*)..],`7esn`:0e0[``..$1000][$7..12.e12]})) On Create Set `5esn` =$1000[$`4esn`..False],`6esn` =[#usn8 In `7esn` Where @usn5 Contains 9e0] Contains [$usn1 Ends With _usn4 Ends With `2esn`],`2esn` =12.0 Is Null Create (`6esn` {`2esn`:$`3esn` Ends With 01234567}),usn2=({`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})<-[`4esn` *0Xa{@usn6:999 Starts With `2esn` Starts With .e1,`4esn`:$@usn5[..0xabc][..$`3esn`]}]->(@usn6 :``:usn2)<-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->(_usn4 :@usn5) Delete (usn2 :usn1:`3esn`{`3esn`:`2esn` Is Null})<-[:`8esn` *999..{@usn6:`7esn` Ends With $7 Ends With $@usn5,``:0e0 Starts With 999 Starts With `2esn`}]->(`6esn` :#usn7:`5esn`)<-[usn1:`1esn`|`3esn`]->(`1esn` {#usn8:$#usn7[..9e0][..123.654],`5esn`:9e12 Starts With 1e1}) =~(`7esn` {#usn7:$@usn6 Ends With `1esn`})<-[#usn8 *0x0..]->(_usn3 :usn2{#usn8:$`2esn` Is Null,_usn3:123.654 Is Not Null})-[? *0X0123456789ABCDEF..]-(usn2 :_usn3) Union All Unwind [#usn7 In True Contains 's_str' Contains $usn1 Where $@usn6 In @usn6 In 1e1|12.0[$1000..][#usn7..]][Any(_usn4 In 12e12 In 123456789 Where .e12[@usn6..][010..])..Single(usn2 In False[$usn1][0x0] Where 9e1 Is Not Null Is Not Null)] As @usn6 Union All Unwind True[$_usn3..] As usn2"),
    octest:ct_string("Match ((#usn7 {`6esn`:$`2esn` Contains Count(*)})-[?:_usn4]->(`2esn` :usn2)) Detach Delete (`2esn` :usn1:`3esn`)-[@usn5:`5esn`|:usn2 *0Xa{#usn7:`7esn`[$usn2..][$123456789..]}]-({`7esn`:9e0 Contains $12 Contains `3esn`,`5esn`:.e0 Contains $#usn8})<-[?:`3esn`]-(`8esn` :#usn8:`1esn`{usn2:12.e12 Ends With $``,`2esn`:1e1 Contains 's_str' Contains `3esn`})[({usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]})],0X7 In $#usn7,Single(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 999 Contains $1000)[(`6esn` :@usn6)<-[ *..07]-(:_usn3{`7esn`:9e0 Ends With $#usn8})][#usn8($1000 Is Not Null,$`5esn`[0X7..010][`7esn`..'s_str'])] Union Unwind 07[999] As @usn6 Merge ``=(:_usn3{`7esn`:$999 Ends With .e0})<-[`8esn`?:`2esn`|`4esn`{usn2:#usn8[`6esn`..][$``..]}]-(@usn6 {`6esn`:$`5esn` =~usn1,`5esn`:$`` Starts With $1000 Starts With @usn6})-[?{_usn3:010[`5esn`],_usn4:#usn8 =~.e0}]-(#usn8 :`3esn`{`5esn`:$@usn6 Ends With `1esn`}) On Create Set Filter(usn2 In 7[12] Where $`6esn`[1.e1][$_usn3]).``? =0Xa[$`8esn`..][$_usn4..],_usn4+=0X0123456789ABCDEF In $7 On Create Set Single(@usn6 In 010[`5esn`] Where 123.654).`6esn`? =#usn7 Starts With $123456789 Starts With 12e12,`2esn` =Extract(`8esn` In 123456789 =~@usn6 Where 123.654[`4esn`..12]|`8esn` Contains Count(*) Contains $#usn7)[..[#usn7 In True Contains 's_str' Contains $usn1 Where Count(*) Ends With usn1]][..Filter(usn2 In 7[12] Where #usn7[0.e0..]['s_str'..])] Return Distinct .e1 =~_usn4 =~_usn4,`6esn`[..$`4esn`] As `5esn`,True[0xabc..01234567][$`8esn`..$@usn6] As #usn7 Order By @usn5[0..] Descending,Count(*) Is Null Ascending,Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|0 Ends With 12.e12 Ends With usn2)[..123.654][..Any(#usn7 In $999 In 1e1 Where `4esn`[$_usn3..$`7esn`])] Descending Union With Distinct `2esn` Starts With 12.e12 Starts With 12.0 As _usn4,$``[..\"d_str\"][..$#usn8] As `6esn` Order By $`3esn` Ends With 01234567 Ascending,`3esn`[0X0123456789ABCDEF..][07..] Asc Skip #usn8[`8esn`..] Limit $_usn4 Starts With $1000 Starts With 12 Where .e12[@usn6..][010..] Create @usn5=(({`7esn`:123.654,`6esn`:9e1 Starts With Count ( * )})-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(usn1 :_usn3{``:`6esn` =~$_usn4 =~7,`7esn`:9e0[$1000]})),(_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})"),
    octest:ct_string("Remove {`4esn`:0.0 Contains #usn7,`1esn`:$999[``]}.`5esn`? Remove All(`8esn` In 123456789 =~@usn6 Where $`5esn` =~$`8esn` =~usn2).@usn6?,Filter(@usn6 In 010[`5esn`] Where @usn6[9e12]).`2esn` Detach Delete $@usn6[_usn3..][$999..],$usn2 =~0.e0 =~@usn6"),
    octest:ct_string("Merge (#usn7 :`4esn`:`6esn`{`1esn`:`1esn`[$@usn6][07]}) On Match Set Extract(@usn5 In 's_str'[0..] Where @usn6 In .12 In `3esn`|$@usn6[00]).`8esn`? =9e0 Contains $12 Contains `3esn`,_usn4+=0x0[@usn5][$#usn8],count(Distinct $`3esn`[..0X0123456789ABCDEF][..7])._usn3! =1.e1 Is Null Is Null On Match Set `1esn` =[#usn7 In 9e0[$1000] Where .e1 In 123456789|.e12[..999][..@usn5]] In `5esn`(`1esn` Starts With 0X7 Starts With \"d_str\",9e1) In @usn5(Distinct `5esn` Contains $`5esn` Contains 0X7,True[..#usn8]) Match `8esn`=(((#usn7 {`6esn`:$`2esn` Contains Count(*)})<-[#usn8{`5esn`:$@usn5 In 12e12 In 01}]->(@usn6 {`5esn`:.e12 Starts With $#usn8 Starts With False})<-[`8esn`{`1esn`:123456789 =~@usn6,`1esn`:$`5esn`[0X7..010][`7esn`..'s_str']}]->(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}))) Where $#usn7 In $@usn5 In $`1esn` Union All With Distinct usn2[12.e12..] As `2esn`,$`2esn`[0..123456789][``..`1esn`],#usn8[`6esn`..][$``..] As `2esn` Order By $`7esn`[..@usn6] Ascending Skip 12.0 =~@usn6 =~$`2esn` Where 0e0[``..$1000][$7..12.e12] Union Detach Delete $`5esn`[..00] Unwind `8esn`(Distinct #usn8 Is Not Null Is Not Null,`2esn` In 9e0 In 7) Starts With None(usn2 In 7[12] Where 123456789 =~12 =~'s_str') As @usn6 Unwind [`8esn`[0.e0..],1e1 Contains 's_str' Contains `3esn`] In [`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]] As usn2"),
    octest:ct_string("Merge ({`1esn`:1.e1[`8esn`]})<-[:``{``:.0[$``..0X7]}]-(#usn8 :`8esn`) On Create Set @usn6+=7 Ends With 01234567 Ends With 0Xa,`2esn` =0Xa =~False =~@usn5 On Match Set `5esn` =$1000[$`4esn`..False],`6esn` =[#usn8 In `7esn` Where @usn5 Contains 9e0] Contains [$usn1 Ends With _usn4 Ends With `2esn`],`2esn` =12.0 Is Null Union Remove Extract(#usn7 In 9e0[$1000] Where $_usn3 Is Null|@usn5 Contains 9e0)._usn4? Create ((#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0})<-[`7esn`? *0Xa{@usn5:123.654 Is Not Null}]-(#usn8 :`2esn`{`1esn`:0x0 Starts With $`6esn`})) Union Return Distinct *,12[``...e12] As `6esn` Limit 0x0[Count(*)..@usn6][Count(*)..0Xa] Delete 0X0123456789ABCDEF[..0xabc],All(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where False[$usn1][0x0]) In [#usn7 In 9e1[$`1esn`..] Where @usn5 Is Null|9e12[9e1]] In [12.0 Is Null,$_usn4[..$_usn4][..`7esn`]],$`4esn` Starts With 0 Starts With `7esn` Merge _usn3=(:#usn7:`5esn`{@usn5:999 Starts With `2esn` Starts With .e1,``:0xabc In Null})-[`6esn` *0Xa]-(usn1 :`1esn`:_usn4{_usn3:@usn6[999..$_usn3][0.12..$@usn5],`1esn`:9e12[..1e1][..'s_str']}) On Match Set Extract(@usn5 In 's_str'[0..] Where `5esn`[..123.654][...e12]|$``[..\"d_str\"][..$#usn8]).@usn6 =[$usn1[`2esn`..][$`2esn`..]][(`3esn` :usn2)-[`4esn`?:usn1|`4esn`{`3esn`:123.654[..0.e0][..'s_str'],@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]}]-({`6esn`:9e1 Is Not Null Is Not Null,`8esn`:_usn3 In $`8esn` In @usn6})..`2esn`(Distinct $@usn6 Is Not Null Is Not Null,Count ( * ) Ends With $123456789)],None(#usn8 In `7esn` Where ``[7.._usn3]).@usn6? =`6esn`,Any(#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`])._usn4! =`` Is Null"),
    octest:ct_string("Return *,`3esn`[...e1] Detach Delete [0x0 Ends With 12.0 Ends With `5esn`,12e12 Ends With 0.0 Ends With usn1,00[1.e1..]] Ends With All(#usn8 In `7esn` Where $`3esn`[..0xabc][..$7]) Ends With Any(@usn6 In False Contains 0 Contains $`6esn` Where `6esn`[$1000][`3esn`]),@usn5(Distinct 12e12 In 123456789,12.0 =~@usn6 =~$`2esn`)[`8esn`(123456789 =~$999)][`2esn`($`2esn`[..$`3esn`][..12e12])] Union All Create @usn5=(((:usn2{`6esn`:`4esn` Starts With 0e0,`8esn`:usn2[12e12..]['s_str'..]})<-[:`2esn`|`4esn` *12..]-(_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]}))),#usn7=(((:`6esn`:_usn3{``:usn1 Ends With 9e0 Ends With 9e0,`5esn`:$`7esn`[.e1][12.0]})-[`3esn`?:`5esn`|:usn2{`7esn`:0X7['s_str'..][01..],`8esn`:0.e0[0X0123456789ABCDEF..]}]-(usn2 :usn1:`3esn`)-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->({usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]}))) Union Detach Delete Extract(`6esn` In $`6esn`[``..][Count(*)..] Where $@usn5 Starts With `5esn` Starts With 01234567|0.e0[..$7]) Is Null Is Null Optional Match `1esn`=(`5esn` :`5esn`{#usn7:``[$`3esn`]}) Where $`8esn`[..True][.._usn4]"),
    octest:ct_string("Unwind (#usn7 {`3esn`:1.e1 In 1000 In _usn3,#usn7:`2esn` Starts With .e1 Starts With 9e12})-[? *..010{#usn8:False Is Null}]-(:`5esn`)[Any(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07[_usn3..][`6esn`..])] As _usn3 With  *,`7esn`(Distinct `1esn` Starts With 0xabc Starts With $usn2)[({`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12})-[`6esn`?:@usn5|_usn3 *01234567..]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})..] As @usn5 Where 07 Contains `3esn` Contains `7esn` Detach Delete 999[12.e12] Union Remove Any(#usn7 In 9e1[$`1esn`..] Where 999 In #usn8 In $``).`7esn` Merge (:`4esn`:`6esn`{`2esn`:12e12 =~1e1,``:12.e12 Contains #usn7 Contains $_usn4})<-[?:`5esn`|:usn2 *123456789..{#usn7:$`1esn` =~999,`4esn`:$@usn6[00]}]-(:`6esn`:_usn3)<-[@usn5? *999..{usn1:.e12[$@usn6..00][01234567.._usn3],`1esn`:`7esn` Contains 9e0}]-({@usn6:999 Contains 0 Contains $`5esn`,#usn7:999[..`1esn`][..07]}) Delete Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4) Ends With [$@usn6 Is Not Null Is Not Null],9e1 =~123456789 =~999,.e12[$@usn6..00][01234567.._usn3]"),
    octest:ct_string("With Distinct $usn2 =~0.e0 =~@usn6 As _usn4,9e12[..1e1][..'s_str'] As @usn5 Order By 0X0123456789ABCDEF Is Not Null Is Not Null Asc,0X0123456789ABCDEF Is Not Null Is Not Null Asc Limit $7 In $usn1 In 999 Where 12.e12 Is Not Null Is Not Null"),
    octest:ct_string("Merge `4esn`=({`7esn`:`4esn` Is Not Null Is Not Null,`4esn`:`4esn` Ends With 12 Ends With .12})<-[`5esn`?:`7esn`|:`2esn` *0x0..]-(`4esn` :#usn7:`5esn`{@usn5:$`` Contains $`2esn` Contains $usn2}) Match ((`2esn` :_usn3)-[? *0xabc{`6esn`:$0[0Xa..$123456789],``:.e1[..\"d_str\"][..$123456789]}]-({@usn6:123.654 In 12,#usn7:12.e12 Ends With `` Ends With 0})),({@usn5:$`5esn` Is Not Null Is Not Null})<-[#usn8?:`8esn`{`1esn`:999 In #usn8 In $``,`8esn`:False[$`4esn`..]}]->(`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]}) Unwind 01[`3esn`..][Count(*)..] As _usn4"),
    octest:ct_string("Delete 0X0123456789ABCDEF[0X7..$`2esn`][$`5esn`..$usn2],$`3esn` Ends With 1000,[$`5esn` =~usn1,True[`3esn`],@usn6[9e12]][Single(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null)..] Remove All(@usn6 In False Contains 0 Contains $`6esn` Where usn1[False..])._usn3! Remove `8esn`:``:usn2 Union All Create (#usn7 {`6esn`:$`2esn` Contains Count(*)})<-[?:`7esn`|:`2esn`]->(#usn8 :usn1:`3esn`{`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[usn1:_usn4]-(`` {_usn3:`5esn` Contains `7esn`}) Return Distinct *,1e1 Contains 0.e0 Contains 9e1 Limit None(#usn7 In 9e0[$1000] Where $1000 Is Not Null) Is Null Is Null Create ((#usn7 {`1esn`:$`4esn` Is Null Is Null})<-[ *999..{`3esn`:123456789 =~$999,_usn4:`4esn` Is Not Null Is Not Null}]-(`6esn` :`8esn`)) Union Remove @usn6:`2esn` Detach Delete {`2esn`:12.e12 Is Not Null Is Not Null,``:Count ( * ) In True In @usn5} Ends With {`7esn`:$1000 Starts With $`3esn` Starts With 0.e0,``:$`2esn` Is Null} Ends With [0X7 In $#usn7,`4esn` Is Not Null Is Not Null,.0[.e12..]],$`5esn`[0X7..010][`7esn`..'s_str']"),
    octest:ct_string("Unwind 00[False..0e0] As `6esn` Union Create `3esn`=((:#usn8:`1esn`$`7esn`)<-[`1esn` *999..{`1esn`:1e1 Contains 's_str' Contains `3esn`}]-(usn1 {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(#usn7 :``:usn2)),usn2=(`3esn` {usn2:$usn2[`4esn`..9e12]}) Union Unwind _usn4(Distinct 0X0123456789ABCDEF Ends With 01 Ends With ``,$`3esn`[..0xabc][..$7]) In Single(`3esn` In 9e1 Contains $999 Where `2esn` Starts With 12.e12 Starts With 12.0) In Extract(usn2 In False[$usn1][0x0] Where .e1[usn2..$_usn3][.0..$#usn7]) As `1esn` Return Distinct *,`` =~.12 As #usn7 Order By Extract(`8esn` In 123456789 =~@usn6 Where .e12 Starts With $12 Starts With .e12) Ends With [#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4] Ends With [False[$`4esn`..],$#usn7[..0Xa]] Asc,@usn6[..$@usn5] Ascending Skip \"d_str\" Is Null Is Null Limit `1esn`(Distinct $`3esn`[..0X0123456789ABCDEF][..7],`4esn`[$_usn3..$`7esn`]) Is Null Match `6esn`=((`4esn` :_usn4)-[`5esn`?:_usn3|:`7esn`]->({@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]})<-[?:`5esn`|:usn2]->(usn2 :`5esn`)) Where `` Is Null"),
    octest:ct_string("Create `3esn`=(`` {`1esn`:123456789 =~@usn6,`1esn`:$`5esn`[0X7..010][`7esn`..'s_str']})<-[`6esn`? *00..0Xa]->(_usn4 :@usn5{usn1:$#usn7 Starts With 01234567 Starts With $0})<-[:#usn8|:`3esn` *12..{`8esn`:12 Ends With Count ( * ),usn2:Count ( * ) In True In @usn5}]-(`7esn` :usn2{`3esn`:12.0 In 123.654 In _usn4}),usn1=((`1esn` {``:0.0 Is Not Null,`1esn`:``[$`3esn`]})<-[:`1esn`|`3esn`{`2esn`:$`3esn` Ends With 01234567}]->(_usn3 :`5esn`)<-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(:`5esn`{`4esn`:0Xa[..Count ( * )][..$123456789]})) Unwind $123456789 Starts With 0.12 Starts With Null As #usn7 Union All Delete 12[..$999][..$`2esn`],Any(usn2 In 7[12] Where 0X7[.0])[Any(`6esn` In $`6esn`[``..][Count(*)..] Where $7 In $usn1 In 999)..#usn8(Distinct $_usn4 Is Null Is Null,01[`8esn`..9e12][.12..0])] Create `2esn`=(((:`6esn`:_usn3)<-[`1esn`:`8esn` *7..]->(`` {#usn8:.e12 Is Null Is Null,@usn6:`1esn` Is Not Null Is Not Null})-[#usn7?:`7esn`|:`2esn` *..07]-(#usn7 {#usn7:1.e1 Starts With 9e12}))),((`2esn` {``:$0 =~9e1 =~$`2esn`,`8esn`:`5esn`[..123.654][...e12]})-[_usn3?{``:$@usn5 Contains 's_str' Contains \"d_str\",_usn3:$#usn8[12.e12..`8esn`][12.0..0.0]}]-(_usn3 :usn1:`3esn`)<-[`7esn`? *..010{usn2:12 Ends With Count ( * ),#usn8:`8esn` Contains `2esn` Contains .0}]->({`6esn`:'s_str' Contains 12.e12 Contains $`4esn`})) Remove Filter(`6esn` In $`6esn`[``..][Count(*)..] Where 7[0e0..]).`8esn`!,(_usn4 :`1esn`:_usn4)<-[?:`6esn`|:#usn8 *00..0Xa]-(:`8esn`{#usn7:`1esn`[`3esn`..],usn2:_usn3[$usn2..][$``..]}).@usn5! Union Merge usn1=(#usn7 :`3esn`{`3esn`:@usn5[0.0..0X7],@usn5:$#usn7 Starts With $`2esn`})<-[usn1:_usn4]-(:`4esn`:`6esn`) On Match Set _usn3 =$``[01234567..][.0..]"),
    octest:ct_string("With Distinct `2esn` Starts With 12.e12 Starts With 12.0 As _usn4,$``[..\"d_str\"][..$#usn8] As `6esn` Order By $`3esn` Ends With 01234567 Ascending,`3esn`[0X0123456789ABCDEF..][07..] Asc Skip #usn8[`8esn`..] Limit $_usn4 Starts With $1000 Starts With 12 Where .e12[@usn6..][010..] Create @usn5=(({`7esn`:123.654,`6esn`:9e1 Starts With Count ( * )})-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(usn1 :_usn3{``:`6esn` =~$_usn4 =~7,`7esn`:9e0[$1000]})),(_usn4 :`8esn`{usn1:12.e12[..$`6esn`]}) Union Merge ``=(:_usn3{`7esn`:$999 Ends With .e0})<-[`8esn`?:`2esn`|`4esn`{usn2:#usn8[`6esn`..][$``..]}]-(@usn6 {`6esn`:$`5esn` =~usn1,`5esn`:$`` Starts With $1000 Starts With @usn6})-[?{_usn3:010[`5esn`],_usn4:#usn8 =~.e0}]-(#usn8 :`3esn`{`5esn`:$@usn6 Ends With `1esn`}) On Match Set `7esn`+=$`5esn` Is Not Null,Any(@usn5 In 9e0 Ends With $#usn8 Where $`3esn`[..0X0123456789ABCDEF][..7])._usn3 =.e12[`2esn`..010],`8esn` =Single(`5esn` In `7esn`[$usn2..][$123456789..] Where 12e12 Is Not Null) Is Not Null Is Not Null Merge `8esn`=(usn1 {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})<-[`4esn`?:`4esn`|@usn5 *01..123456789]-(#usn7 :`4esn`:`6esn`{`1esn`:`1esn`[$@usn6][07]}) Merge _usn3=(_usn3 {`8esn`:0e0 =~7 =~12.0,_usn4:.e1[..$`3esn`][..01]})<-[_usn4{`2esn`:#usn8[`8esn`..],`2esn`:@usn6[9e12]}]-(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-(`2esn` :@usn5{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3}) On Match Set @usn6+=(usn2 :_usn3)-[`6esn`?:`6esn`|:#usn8]-(`1esn` {_usn4:`8esn` Is Null})<-[`7esn`?:#usn8|:`3esn`]-(_usn4 :`3esn`)[Any(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null)..],usn1+=999 Is Not Null Is Not Null"),
    octest:ct_string("Detach Delete {#usn7:usn1 In ``}[None(`3esn` In `2esn`[..01][..True])..Extract(@usn5 In 9e0 Ends With $#usn8 Where 0Xa[$`8esn`..][$_usn4..])] With  9e0[..123456789][..$`3esn`] Order By 01 Contains usn2 Contains 0X0123456789ABCDEF Desc Limit 00 =~Count ( * ) Return 123456789 =~$999 Order By $7[01..$123456789][#usn7..12.0] Descending,.12[..usn2][..12e12] Descending"),
    octest:ct_string("Unwind 01[`3esn`..][Count(*)..] As _usn4 Union All Optional Match `3esn`=(`` {`1esn`:123456789 =~@usn6,`1esn`:$`5esn`[0X7..010][`7esn`..'s_str']})<-[`6esn`? *00..0Xa]->(_usn4 :@usn5{usn1:$#usn7 Starts With 01234567 Starts With $0})<-[:#usn8|:`3esn` *12..{`8esn`:12 Ends With Count ( * ),usn2:Count ( * ) In True In @usn5}]-(`7esn` :usn2{`3esn`:12.0 In 123.654 In _usn4}),usn1=((`1esn` {``:0.0 Is Not Null,`1esn`:``[$`3esn`]})<-[:`1esn`|`3esn`{`2esn`:$`3esn` Ends With 01234567}]->(_usn3 :`5esn`)<-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(:`5esn`{`4esn`:0Xa[..Count ( * )][..$123456789]})) Where 01234567[\"d_str\"..`4esn`]"),
    octest:ct_string("Remove `5esn`:@usn5,{#usn8:$0[123.654..0.e0]}.@usn6!,{`1esn`:#usn7 Contains $0 Contains $usn2,`4esn`:999 Ends With $`` Ends With 0X0123456789ABCDEF}.#usn8! Union All Match usn1=(((:`1esn`:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null})<-[ *7..{#usn7:$`8esn`[12.e12][_usn4],`2esn`:$0[123.654..0.e0]}]-(`` :#usn8:`1esn`{`8esn`:12[$`5esn`..][False..]})-[@usn6:`7esn`|:`2esn` *..07{`6esn`:$_usn4 Is Null Is Null,``:1e1 Ends With $`7esn` Ends With .0}]-(`5esn` :`3esn`{``:`` Is Null,`8esn`:$@usn6[$0..9e12][.e12..Null]}))),(`2esn` :`1esn`:_usn4)-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-({`6esn`:9e12 =~@usn6}) Create @usn5=(:`6esn`:_usn3{`6esn`:`2esn` Starts With $`7esn`})<-[:`2esn`|`4esn` *12..]->({`7esn`:`4esn` Is Not Null Is Not Null,`4esn`:`4esn` Ends With 12 Ends With .12})<-[?:#usn8|:`3esn`{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]-(:usn1:`3esn`{_usn4:$#usn7 Contains $`7esn` Contains .e12}) Merge ((@usn5 :`4esn`:`6esn`)<-[`3esn` *7..]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]})) On Create Set `2esn`+=0X0123456789ABCDEF In .12,`1esn` =$`7esn` In False In $`1esn`"),
    octest:ct_string("Merge ((_usn3 :_usn4)) On Create Set Extract(_usn4 In 12e12 In 123456789 Where Count ( * ) Ends With $123456789).`8esn` =None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 9e12[$`5esn`..$123456789]) In Extract(@usn5 In 's_str'[0..] Where 07 Ends With 9e12 Ends With `2esn`|00[01234567][False]) In [12 =~usn1] Return Distinct *,9e12 =~@usn6,`4esn` Contains 9e0 Order By 1000[..$1000] Descending Skip Filter(`6esn` In $`6esn`[``..][Count(*)..]) Ends With None(`5esn` In 0X7 In $#usn7 Where 12.0 Is Null Is Null) Limit {``:123.654 In $`7esn`}[All(`3esn` In `2esn`[..01][..True] Where 0Xa =~False =~@usn5)..None(@usn6 In False Contains 0 Contains $`6esn` Where $@usn6 =~#usn7 =~True)]"),
    octest:ct_string("Unwind $_usn4[9e0..][$1000..] As `5esn` Merge usn2=(@usn5 :@usn6{`2esn`:12e12 =~1e1,``:12.e12 Contains #usn7 Contains $_usn4})<-[`8esn` *0xabc]-(:_usn3{_usn4:.e1[7..][9e0..]}) On Match Set None(`6esn` In $`6esn`[``..][Count(*)..] Where 07 Contains `3esn` Contains `7esn`).`7esn`! =07[..07][..0X7],`4esn`:`1esn`:_usn4 Remove [@usn6 In False Contains 0 Contains $`6esn` Where $@usn6[$`8esn`..][123456789..]|$`3esn` In $usn2].usn1,[#usn8 In `7esn` Where $`5esn` Is Not Null Is Not Null].#usn8"),
    octest:ct_string("Delete .e1[7..][9e0..],$`5esn` In _usn3 In 0.0 With  0x0[0.0] As ``,Any(@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``) Contains [_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where .0 Is Null Is Null|`3esn`[0x0..]] Contains [999[12.e12],#usn8 Is Null Is Null,1.e1 =~$_usn4] As `1esn` Order By [#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`]][[`2esn` Is Null]][Extract(#usn7 In $999 In 1e1|01234567[Null..$_usn3])] Asc,usn2[12.e12..] Ascending,$@usn6 Is Not Null Is Not Null Desc Skip `5esn` Contains 1.e1 Contains .e12 Limit `7esn`[0x0][$`4esn`] Where `5esn` Contains #usn7 Contains 9e12 Union Unwind 07[999] As _usn3 Return Distinct 9e12[..`3esn`][..0X0123456789ABCDEF] As `5esn`,`3esn`(#usn8 =~0.e0,1000[0e0][1e1])[[_usn3[0x0],1e1 In 0.0 In 0X0123456789ABCDEF]] As usn1 Order By $@usn5[`1esn`..][$999..] Asc,12 Starts With $123456789 Starts With .e12 Ascending,1.e1[$`3esn`][0Xa] Desc"),
    octest:ct_string("Remove [usn2 In False[$usn1][0x0] Where `4esn` Starts With 0e0].`6esn`!,(`3esn` {`3esn`:$@usn6 Is Not Null Is Not Null,`1esn`:12e12 =~1e1})<-[:@usn5|_usn3{#usn7:$123456789 Starts With 0.12 Starts With Null,usn1:.e1[..$`3esn`][..01]}]-(#usn7 :`3esn`{`3esn`:@usn5[0.0..0X7],@usn5:$#usn7 Starts With $`2esn`})<-[ *01234567..]->(:`8esn`{``:.e1 Starts With 12.e12 Starts With `2esn`}).usn2,(:``:usn2{`3esn`:12.0 Starts With .12 Starts With `6esn`,``:$`4esn`[0..][999..]})-[@usn6?{`4esn`:12.0 Starts With .12 Starts With `6esn`,#usn8:0.0 Is Null Is Null}]->(:`7esn`{`2esn`:$`3esn` Ends With 01234567}).`6esn` Unwind 9e12[..1e1][..'s_str'] As @usn6 Union All Merge `4esn`=(((:`6esn`:_usn3{`8esn`:.e12[..999][..@usn5],`3esn`:$_usn3 Is Null})<-[? *0X7..]->(`5esn` :``:usn2{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3})-[_usn4]->(:`6esn`:_usn3{_usn3:usn1 Is Null Is Null,#usn8:9e1[$``..][0.e0..]}))) Detach Delete 0[$`5esn`] Union Unwind False[$usn1][0x0] As usn2 Delete $_usn4 Starts With $1000 Starts With 12,@usn5[$`7esn`..`5esn`],usn1 Unwind 12['s_str'][01] As `6esn`"),
    octest:ct_string("Unwind 123.654 In 12 As `7esn`"),
    octest:ct_string("Unwind $_usn4 =~$`1esn` =~`2esn` As #usn8 Create (((#usn7 :#usn8:`1esn`{``:.0[$``..0X7]})<-[? *0xabc]-(:@usn6{`6esn`:01 Ends With 0Xa Ends With 0X7})<-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->(usn2 :`5esn`))),usn1=(`7esn` :`3esn`{`2esn`:999[123.654..$usn2][Count ( * )..0x0]})-[`2esn`?:usn1|`4esn` *00..0Xa]-(`4esn` :`4esn`:`6esn`) Merge ((`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]})) On Match Set `1esn` =All(@usn6 In 010[`5esn`] Where $@usn5 Ends With @usn5 Ends With 0xabc)[Extract(#usn7 In 9e1[$`1esn`..] Where 123.654 In $`7esn`)..[12.0 Starts With .12 Starts With `6esn`]],count(Distinct $`3esn`[..0X0123456789ABCDEF][..7])._usn3! =1.e1 Is Null Is Null"),
    octest:ct_string("Optional Match ((`6esn` {_usn4:$`5esn` Is Not Null Is Not Null})),`5esn`=(((`2esn` :`1esn`:_usn4)<-[`5esn`?{`8esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}]->(`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})<-[`4esn`:usn2]->(:`6esn`:_usn3{`2esn`:999[123.654..$usn2][Count ( * )..0x0]}))) Union All With  *,[#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`]][[`2esn` Is Null]][Extract(#usn7 In $999 In 1e1|01234567[Null..$_usn3])] Where .e1[12.0..] Create @usn6=((`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})) Return Distinct (:@usn5{@usn5:999[..`1esn`][..07],_usn4:Count ( * ) Ends With $123456789})<-[`2esn`? *01..123456789]-(`2esn` :@usn6)[[`2esn`[..$_usn4][...12],False Contains 0 Contains $`6esn`,.e1[12.0..]]..[#usn7 In 9e0[$1000] Where #usn8 =~0.e0|12.e12 =~0X0123456789ABCDEF =~1.e1]],`1esn`[0Xa] As usn1,usn1 Contains 010 As @usn5 Order By 1000[$`2esn`..] Asc"),
    octest:ct_string("Optional Match #usn7=(`1esn` :@usn6{`6esn`:00[False..0e0],`6esn`:$usn2 =~1.e1 =~usn1})<-[`7esn`:`2esn`|`4esn`{_usn4:.e1[7..][9e0..]}]-(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"})-[:_usn3|:`7esn`*{`1esn`:12[..$999][..$`2esn`],usn2:9e1}]->(:``:usn2{`5esn`:$12 Starts With $usn1}),((:#usn7:`5esn`{_usn4:$usn2 =~9e1})<-[@usn5?:usn2 *0..01]->(`8esn` :`2esn`{@usn5:$`4esn` Contains _usn3 Contains `8esn`,`7esn`:$`4esn`[`4esn`][Count(*)]})) Where 9e1 Starts With Count ( * ) Merge (`2esn` :`1esn`:_usn4)-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-({`6esn`:9e12 =~@usn6}) On Match Set `5esn`+=010[..7][..`4esn`],(`2esn` :@usn5)-[`5esn`? *01..123456789{`5esn`:@usn6[9e12],`5esn`:@usn6[999..$_usn3][0.12..$@usn5]}]-(`1esn` {`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]}).`4esn`! =$@usn6 Ends With `1esn`,`6esn` =.0[$``..0X7] Detach Delete 01[`3esn`..][Count(*)..],usn2[07..][.0..] Union All Create @usn5=(:@usn5{#usn7:12e12 In $`5esn`})<-[?{``:00 Contains Count ( * ) Contains 0x0,#usn8:123.654 In $`7esn`}]-(:usn2{``:0.0 =~9e0 =~$0})-[?*]-({`8esn`:`5esn` Contains #usn7 Contains 9e12}),`3esn`=(:_usn4)<-[`5esn` *0xabc]->(`` :`6esn`:_usn3)-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01}) Return *,`3esn`(#usn8 =~0.e0,1000[0e0][1e1])[[_usn3[0x0],1e1 In 0.0 In 0X0123456789ABCDEF]] As usn1,Extract(usn2 In 7[12] Where $@usn5[0.0][0X0123456789ABCDEF])[[#usn7 In 9e0[$1000] Where 01 Ends With 0Xa Ends With 0X7|`2esn`[$usn2][12.0]]..][Filter(#usn8 In `7esn` Where @usn6[999..$_usn3][0.12..$@usn5])..] With  .e1 =~_usn4 =~_usn4,[_usn3 In _usn3 Contains _usn4 Contains $@usn5] Contains [_usn4[$usn1..01234567][123.654..`5esn`]] Contains `4esn`(Distinct 07 In `6esn`) As `5esn`,$`4esn` Starts With 0 Starts With `7esn` As usn2 Limit {@usn5:01[`3esn`..][Count(*)..]} Starts With Filter(#usn7 In $999 In 1e1 Where 9e12[..1e1][..'s_str']) Where _usn3[`2esn`..0X7][0.e0..$`3esn`] Union Return Distinct `2esn` Starts With 12.e12 Starts With 12.0 As _usn3 Order By None(#usn8 In `7esn` Where 9e1 Starts With Count ( * ))[..Any(usn2 In 7[12] Where 9e1 Is Not Null Is Not Null)] Desc,0xabc In .12 In 0Xa Descending,.0 Contains .e12 Contains 0 Desc Delete _usn3[12.e12..][`5esn`..]"),
    octest:ct_string("Match (`3esn` {`3esn`:$@usn6 Is Not Null Is Not Null,`1esn`:12e12 =~1e1})<-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]-(#usn8 :`6esn`:_usn3)-[`6esn`?:@usn5|_usn3 *01234567..]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]}) Where Count ( * ) In 0.12 Unwind 07 =~`4esn` =~$`1esn` As _usn3 Union Match ((`2esn` :_usn3)-[? *0xabc{`6esn`:$0[0Xa..$123456789],``:.e1[..\"d_str\"][..$123456789]}]-({@usn6:123.654 In 12,#usn7:12.e12 Ends With `` Ends With 0})),({@usn5:$`5esn` Is Not Null Is Not Null})<-[#usn8?:`8esn`{`1esn`:999 In #usn8 In $``,`8esn`:False[$`4esn`..]}]->(`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]})"),
    octest:ct_string("Return `1esn` Starts With 0X7 Starts With \"d_str\",$`4esn`[..$`8esn`][..Null] As #usn7,None(`8esn` In 123456789 =~@usn6 Where .e12 Starts With $12 Starts With .e12) Ends With Filter(`5esn` In 0X7 In $#usn7 Where 0x0[0X7]) Ends With Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12) As `4esn` Order By [123456789 =~12 =~'s_str',`2esn` Starts With 12.e12 Starts With 12.0,$`8esn`[..True][.._usn4]] Contains Filter(#usn7 In 9e0[$1000] Where `7esn`) Asc,None(#usn8 In `7esn` Where $`3esn` Contains $`1esn`) Starts With #usn8(0x0[Count(*)..@usn6][Count(*)..0Xa]) Ascending,_usn4 Contains $_usn3 Contains .e1 Asc Union All With Distinct *,`2esn`(Distinct 12.e12 =~.0 =~usn1,00 Ends With $`1esn` Ends With `7esn`)[[_usn4 In 12e12 In 123456789 Where 0x0 Starts With $`6esn`|`2esn` In 7]] Order By $`2esn` Starts With 0.12 Starts With $12 Ascending,07 In `6esn` Desc,12[..0e0][...e1] Desc Skip #usn8[`6esn`..][$``..] Limit `3esn`[..0X0123456789ABCDEF][..0x0]"),
    octest:ct_string("Optional Match usn2=((`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12})<-[`8esn` *0xabc{#usn8:12.0 Starts With .12 Starts With `6esn`,@usn5:_usn3[`5esn`..][usn2..]}]->(#usn7 {`8esn`:`7esn` In 010 In usn1})-[?$7]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0})) Where $@usn5 Is Null Is Null Detach Delete $#usn8[True][9e0],None(_usn4 In 12e12 In 123456789 Where 1.e1 =~.12)[[$`4esn`[0..][999..],0x0[Count(*)..@usn6][Count(*)..0Xa],12e12 In $`5esn`]..],0.0 Contains #usn7 Union Merge `1esn`=(((_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]->(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]})-[?:`8esn`*]-(`7esn` :usn2{`3esn`:12.0 In 123.654 In _usn4}))) On Match Set _usn4 =0Xa In #usn7 In 's_str',`5esn`+=$#usn8 Starts With .e12 Starts With 1.e1,`1esn`+=usn2 In _usn3 On Match Set _usn3+=`6esn`[$``..$_usn3][1000...0],[usn2 In 7[12] Where $@usn6 Ends With 12.e12 Ends With @usn5|0 Ends With 12.e12 Ends With usn2].`1esn` =123.654 Is Null Is Null Remove Any(@usn5 In 9e0 Ends With $#usn8 Where $`3esn`[..0X0123456789ABCDEF][..7])._usn3,`7esn`:@usn5 With  *,$`2esn` Contains Count(*) As `3esn`,(`2esn` :usn1:`3esn`)-[@usn5:`5esn`|:usn2 *0Xa{#usn7:`7esn`[$usn2..][$123456789..]}]-({`7esn`:9e0 Contains $12 Contains `3esn`,`5esn`:.e0 Contains $#usn8})<-[?:`3esn`]-(`8esn` :#usn8:`1esn`{usn2:12.e12 Ends With $``,`2esn`:1e1 Contains 's_str' Contains `3esn`})[({usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]})] Order By 010 Contains .e1 Asc,(:`6esn`:_usn3{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]})<-[#usn7 *01..123456789]->(`6esn` :usn1:`3esn`) Ends With Extract(#usn8 In `7esn` Where 9e12[..1e1][..'s_str']) Ends With [_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 123.654 Is Not Null|$`2esn`[.0..][0.0..]] Descending Skip $@usn5[`1esn`..][$999..] Limit Single(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`)[{`5esn`:`6esn`[$`8esn`][9e1]}] Union All Merge #usn8=((`4esn` :@usn6)<-[@usn5?:usn2 *0..01]->(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`}))"),
    octest:ct_string("With  `4esn` Is Not Null Is Not Null As `1esn`,Any(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 00[$usn1..]) Contains None(@usn5 In 's_str'[0..] Where 010 Is Null) Contains `2esn`(Distinct $`3esn`[$_usn4..0Xa],$`8esn`[123456789..][$@usn5..]),9e12[..`3esn`][..0X0123456789ABCDEF] As `5esn` Limit 0xabc[$999..][$usn1..]"),
    octest:ct_string("Return *,$`5esn`[0X7..010][`7esn`..'s_str'] As `4esn`,999 In 0e0 As #usn7 Order By 0xabc In Null Descending Skip count($`4esn`[`8esn`],`4esn` Is Not Null Is Not Null) =~Filter(@usn5 In 's_str'[0..] Where _usn3[0x0]) Return *,12 Ends With True Ends With @usn6,Filter(`5esn` In 0X7 In $#usn7 Where 010 Is Null) Is Not Null As `2esn` Order By $123456789[12e12..9e0] Asc,1e1 Contains 0.e0 Contains 9e1 Ascending,.e12[@usn6..][010..] Desc Limit $`7esn` In False In $`1esn` Union Unwind 7[0e0..] As `6esn` Optional Match ((_usn3 {`6esn`:@usn5[$`6esn`..][$999..],`8esn`:$@usn5[..0xabc][..$`3esn`]})-[? *0X0123456789ABCDEF..{#usn7:$@usn6[$0..9e12][.e12..Null]}]->(#usn8 :`5esn`)-[:`6esn`|:#usn8{`4esn`:$`2esn`[..$`3esn`][..12e12],#usn8:123.654 Is Not Null}]-(_usn3 :`5esn`))"),
    octest:ct_string("Merge ((#usn7 {#usn7:1.e1 Starts With 9e12})<-[ *..07{`5esn`:999 In 0e0}]->(#usn7 :#usn8:`1esn`{``:.0[$``..0X7]})) On Create Set `4esn`:usn2,`2esn`+=`2esn`(0e0 =~0Xa =~$999,@usn5 Contains 9e0)[(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[usn2? *0..01{`6esn`:#usn8 Is Null}]->(`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12})..][Any(`3esn` In `2esn`[..01][..True] Where 0.e0[..$7])..] On Match Set [#usn8 In `7esn` Where 00 In @usn6 In 0].`1esn`? =Filter(`3esn` In 9e1 Contains $999 Where .e0 Is Not Null Is Not Null) Is Not Null Is Not Null,Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789]).@usn6! =[#usn7 In 9e0[$1000] Where .e1 In 123456789|.e12[..999][..@usn5]] In `5esn`(`1esn` Starts With 0X7 Starts With \"d_str\",9e1) In @usn5(Distinct `5esn` Contains $`5esn` Contains 0X7,True[..#usn8]),_usn4+=$_usn3[$12] Unwind usn1[..$@usn6][..00] As `4esn` Union All Detach Delete [#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 12.e12 Starts With \"d_str\" Starts With 9e1|$#usn7 Contains $`7esn` Contains .e12][#usn8(Distinct $_usn4 Is Null Is Null,01[`8esn`..9e12][.12..0])..[_usn4 In 12e12 In 123456789 Where Count ( * ) Ends With $123456789]][Filter(_usn4 In 12e12 In 123456789 Where $`5esn` =~usn1)..[$`5esn` In _usn3 In 0.0]],$999 Ends With .e0,$`5esn` =~usn1 Optional Match ((:`4esn`:`6esn`{`2esn`:12e12 =~1e1,``:12.e12 Contains #usn7 Contains $_usn4})-[`5esn`?:`6esn`|:#usn8{`3esn`:$`1esn` In .e0,@usn6:12.0 =~@usn6 =~$`2esn`}]-({`5esn`:#usn8 =~.e0})<-[`1esn`?:usn1|`4esn` *..010]-(usn1 :_usn4{`4esn`:`7esn` Is Null})),((:#usn7:`5esn`{_usn4:$usn2 =~9e1})<-[@usn5?:usn2 *0..01]->(`8esn` :`2esn`{@usn5:$`4esn` Contains _usn3 Contains `8esn`,`7esn`:$`4esn`[`4esn`][Count(*)]})) Where `6esn`[..Count ( * )][..$_usn4] With  *,All(`5esn` In 0X7 In $#usn7 Where 12.0 Is Null Is Null) Is Not Null Is Not Null As `3esn` Limit `5esn`[$`7esn`..$@usn5] Where .e0 =~Null Union Remove Single(usn2 In 7[12] Where .e12[0Xa..]).usn1!,(`` $`6esn`)-[`4esn`:`1esn`|`3esn` *12..]->({`7esn`:9e12 =~@usn6})-[#usn7? *0X7..{`1esn`:#usn7[0]}]->(`5esn` :`6esn`:_usn3).``,`3esn`(Distinct $@usn5 In $`6esn` In 12e12).`8esn`! Remove Any(_usn4 In 12e12 In 123456789 Where 9e1 Is Not Null Is Not Null).#usn7? Remove None(#usn8 In `7esn` Where $`5esn` Is Not Null Is Not Null).`1esn`!"),
    octest:ct_string("Create (_usn3 :`4esn`:`6esn`)-[?:@usn6|:`7esn`]-(:#usn8:`1esn`)-[_usn3?]-(`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]}) Remove (_usn4 {`7esn`:#usn7[0.e0..]['s_str'..]})-[usn2{``:$`1esn` =~999}]-(:usn1:`3esn`{``:$#usn7 In $@usn5 In $`1esn`,#usn7:999[@usn5..][Null..]}).`2esn` Union Unwind Count ( * ) =~0e0 =~`8esn` As `8esn` Merge _usn4=(({usn2:`2esn`[..$_usn3]})) On Match Set usn1 =7 =~`4esn` On Create Set [_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where False[$usn1][0x0]|$_usn4[..$_usn4][..`7esn`]].`1esn` =12 Starts With \"d_str\" Starts With 00,#usn8+=0 =~1e1,#usn8 =12 Contains 1.e1 Merge _usn3=(:#usn7:`5esn`{@usn5:999 Starts With `2esn` Starts With .e1,``:0xabc In Null})-[`6esn` *0Xa]-(usn1 :`1esn`:_usn4{_usn3:@usn6[999..$_usn3][0.12..$@usn5],`1esn`:9e12[..1e1][..'s_str']})"),
    octest:ct_string("Return Distinct `2esn` Starts With 12.e12 Starts With 12.0 As _usn3 Order By $1000[$@usn6][$_usn4] Desc Union All Match ((@usn5 )),(`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`})-[@usn6:`5esn`|:usn2 *0xabc{#usn8:999 In 0e0}]-({`1esn`:#usn7[0]})"),
    octest:ct_string("Merge `8esn`=(((`4esn` :`4esn`:`6esn`)<-[ *..07{`8esn`:.e0[999..1000][1e1..$`8esn`],`1esn`:$`3esn`[$_usn4..0Xa]}]-(:_usn3{@usn5:$1000 Starts With $`7esn`})<-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(_usn3 :`3esn`{_usn3:01[`8esn`..9e12][.12..0]}))) On Match Set Extract(_usn4 In 12e12 In 123456789 Where Count ( * ) Ends With $123456789).`8esn` =None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 9e12[$`5esn`..$123456789]) In Extract(@usn5 In 's_str'[0..] Where 07 Ends With 9e12 Ends With `2esn`|00[01234567][False]) In [12 =~usn1] On Match Set usn1 =$usn1 Starts With usn1 Starts With True Detach Delete True Contains 's_str' Contains $usn1,$`5esn`[..00] Union With Distinct *,`4esn` Ends With 12 Ends With .12 As usn2,`3esn`(`7esn`,0x0 Contains $`6esn` Contains `4esn`) Is Null Is Null As usn1 Order By usn1[..$@usn6][..00] Desc Skip 9e1[$`1esn`..] Where usn1[$@usn5]"),
    octest:ct_string("Merge `1esn`=(`8esn` :@usn6)<-[?:usn2 *0x0..]->(:`2esn`{usn1:.0[..'s_str'][..01234567],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})-[`5esn`? *01..123456789{`5esn`:@usn6[9e12],`5esn`:@usn6[999..$_usn3][0.12..$@usn5]}]-(`1esn` {`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]}) On Create Set [#usn8 In `7esn` Where 01 Ends With 0Xa Ends With 0X7|`8esn` Contains Count(*) Contains $#usn7].``? ={`5esn`:$`1esn` In .e0,``:`6esn` Ends With Count ( * ) Ends With Count ( * )} Is Null Is Null,`8esn`+=$7 Is Null,`7esn` =_usn4 In #usn7 Union All Remove Extract(@usn6 In 010[`5esn`] Where 0e0[``..$1000][$7..12.e12]|1000[0e0][1e1]).`6esn`?"),
    octest:ct_string("Remove Extract(`5esn` In 0X7 In $#usn7 Where 0.12 Contains False Contains 1.e1|9e12 Contains $_usn3 Contains \"d_str\").usn1! Optional Match `3esn`=((:#usn8:`1esn`$`7esn`)<-[`1esn` *999..{`1esn`:1e1 Contains 's_str' Contains `3esn`}]-(usn1 {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(#usn7 :``:usn2)),usn2=(`3esn` {usn2:$usn2[`4esn`..9e12]}) Where _usn3 Contains 9e12 Contains `8esn` Merge (((:usn1:`3esn`{`8esn`:12 Starts With True Starts With 12e12,`8esn`:`2esn` Starts With $`7esn`})<-[`7esn`?:`2esn`|`4esn` *..010{usn1:0e0[``..$1000][$7..12.e12],`5esn`:0x0 Starts With $`6esn`}]->(@usn5 {_usn4:`5esn` Contains #usn7 Contains 9e12})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]}))) On Create Set _usn3+={@usn5:`6esn`[$1000][`3esn`]}[All(`3esn` In `2esn`[..01][..True] Where 0Xa =~False =~@usn5)..] Union Create ((:#usn7:`5esn`{`2esn`:12.e12 Contains 9e1,`5esn`:.e1 Starts With 12.e12 Starts With `2esn`})<-[`2esn`{``:Null[..010][..1000]}]-(`` :usn1:`3esn`)-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})),((`7esn` :`2esn`{`4esn`:0[1e1][$usn1],usn2:`8esn`[..$#usn8]})<-[_usn4?:usn2]-(@usn6 :`6esn`:_usn3{@usn5:0xabc =~$@usn5,usn1:0Xa[$`8esn`..][$_usn4..]})-[`3esn`?:`7esn`|:`2esn`]-(`5esn` :#usn8:`1esn`{_usn3:`6esn` Is Null Is Null})) With Distinct {`8esn`:9e12 =~@usn6,`1esn`:999 Contains 0 Contains $`5esn`}[`4esn`()],(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})<-[?:`7esn`|:`2esn`]->(#usn8 :usn1:`3esn`{`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[ *01234567..]->(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12}) Contains [7[12],00[$`1esn`..][@usn6..],`5esn` Contains #usn7 Contains 9e12] Contains {_usn3:$@usn6[00],`2esn`:0.12 Is Null Is Null} Order By [`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]|usn2 =~7] Contains Any(`3esn` In 9e1 Contains $999 Where _usn4[0]) Desc Limit $7 Starts With $`4esn`"),
    octest:ct_string("Return 00[$`1esn`..][@usn6..] As _usn4 Limit $@usn5[`1esn`..][$999..] Union With Distinct $@usn5,0.12[0Xa][$`7esn`] As `4esn`,All(#usn7 In $999 In 1e1 Where 1.e1 In 1000 In _usn3) Contains (`6esn` :`8esn`{@usn6:12.e12 Contains #usn7 Contains $_usn4})-[`8esn`{`7esn`:9e12 Starts With 1e1}]-(_usn3 :_usn4) Contains [`8esn` Is Not Null Is Not Null,12 Starts With #usn7 Starts With 0Xa,.0 Starts With `1esn`] As _usn3 Order By 0X0123456789ABCDEF[0X7..$`2esn`][$`5esn`..$usn2] Asc,`6esn`(`4esn` Ends With 12 Ends With .12,@usn5 Is Not Null)[Extract(`3esn` In 9e1 Contains $999 Where .e12 Ends With 0Xa Ends With 0xabc|1e1 Is Not Null Is Not Null)..Filter(usn2 In 7[12] Where usn2[12.e12..])] Desc Skip 01[$`7esn`..$@usn6] Union All With  (:@usn5{@usn5:999[..`1esn`][..07],_usn4:Count ( * ) Ends With $123456789})<-[`2esn`? *01..123456789]-(`2esn` :@usn6)[[`2esn`[..$_usn4][...12],False Contains 0 Contains $`6esn`,.e1[12.0..]]..[#usn7 In 9e0[$1000] Where #usn8 =~0.e0|12.e12 =~0X0123456789ABCDEF =~1.e1]],`1esn`[0Xa] As usn1,usn1 Contains 010 As @usn5 Order By 0Xa[..Count ( * )][..$123456789] Desc,`5esn`[$`7esn`..$@usn5] Ascending Skip usn2[..$usn1][..$#usn8] Limit 12.0 Ends With usn2 Ends With 0 Remove [@usn6 In False Contains 0 Contains $`6esn` Where 0.0 =~9e0 =~$0|.e0[01234567..$`8esn`]].@usn6?,({`4esn`:.e1[..$`3esn`][..01]})<-[`1esn`?:`8esn` *7..]-(:``:usn2{``:True[$_usn3..]}).`6esn`,All(`6esn` In $`6esn`[``..][Count(*)..] Where $#usn7 Ends With 's_str' Ends With 0X7).`6esn`? Return *,0.e0 =~00 As `3esn` Order By 's_str'[0x0..1.e1] Asc,usn1[False..`5esn`][$1000..$12] Ascending"),
    octest:ct_string("Detach Delete 1e1 Is Null Is Null,01234567[$`2esn`][0Xa]"),
    octest:ct_string("Merge `7esn`=(((`` :`5esn`)-[ *0..01{@usn6:$0[123.654..0.e0]}]->(usn1 :`1esn`:_usn4{_usn3:@usn6[999..$_usn3][0.12..$@usn5],`1esn`:9e12[..1e1][..'s_str']})<-[`8esn`{`8esn`:usn1 Contains 010,_usn4:`5esn` Contains $`5esn` Contains 0X7}]-({#usn8:0xabc In 010 In #usn7}))) On Create Set `3esn` =12[.0],All(#usn7 In $999 In 1e1 Where 9e12[..1e1][..'s_str'])._usn4? =12 Starts With True Starts With 12e12 Merge usn1=((`` )<-[usn2?:`6esn`|:#usn8 *999..]-(`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})<-[?:usn2{usn2:@usn5 Is Not Null}]-(`7esn` {#usn8:False Starts With 0X7 Starts With 01234567})) With  `8esn` Is Null As `2esn`,[#usn7 In 9e1[$`1esn`..] Where $@usn5 In $`6esn` In 12e12|12.0 Is Null Is Null] Contains [`3esn` In `2esn`[..01][..True] Where $0 Ends With $usn1 Ends With $_usn3] As #usn8 Order By Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12) Starts With [12 In $usn1 In 7,`6esn` Ends With Count ( * ) Ends With Count ( * ),`2esn` Starts With $`7esn`] Starts With usn2(Distinct .0[..'s_str'][..01234567],Count(*) In 12 In `6esn`) Ascending,_usn4[.12..$usn2][$_usn3..123.654] Desc,`4esn`[\"d_str\"]['s_str'] Ascending Skip Filter(@usn5 In 9e0 Ends With $#usn8) Contains {@usn6:#usn7[`8esn`..usn1][$999..`7esn`]} Contains (:#usn7:`5esn`)-[?$7]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0})<-[@usn5? *01..123456789{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`}]->(`` :usn2{@usn5:$`4esn` Contains _usn3 Contains `8esn`,`7esn`:$`4esn`[`4esn`][Count(*)]}) Where $@usn6[$`8esn`..][123456789..]"),
    octest:ct_string("Return _usn4 Contains $_usn3 Contains .e1,$`4esn`['s_str'..] As `` Limit {`7esn`:False[$`4esn`..]}[{#usn8:.e1 Starts With 12.e12 Starts With `2esn`,`8esn`:0 =~1.e1 =~$#usn7}] Unwind [#usn8 In `7esn` Where .e0 Starts With $@usn6 Starts With $7|1000[12e12][`5esn`]] Ends With [`3esn` In 9e1 Contains $999 Where .12 In `8esn` In $#usn8] Ends With [$``[..\"d_str\"][..$#usn8],$_usn4 Starts With $1000 Starts With 12,#usn7[.e0]] As `8esn` Remove Extract(`8esn` In 123456789 =~@usn6 Where .e12 Starts With $12 Starts With .e12|0x0[Count(*)..@usn6][Count(*)..0Xa])._usn3!,({_usn3:0X0123456789ABCDEF Contains 12e12 Contains 12.e12})<-[usn2?:`3esn` *00..0Xa]-(`2esn` {``:$0 =~9e1 =~$`2esn`,`8esn`:`5esn`[..123.654][...e12]})<-[`8esn`? *0Xa{#usn8:$``[True]}]->(_usn3 :`7esn`).`5esn`,Extract(`3esn` In 9e1 Contains $999 Where usn1[False..`5esn`][$1000..$12]).`7esn` Union All Unwind Extract(@usn5 In 9e0 Ends With $#usn8 Where $`8esn`[123456789..][$@usn5..]) =~None(#usn7 In True Contains 's_str' Contains $usn1 Where 's_str' Starts With 9e0 Starts With usn2) As `2esn`"),
    octest:ct_string("With  usn2 Starts With .0 Skip \"d_str\" In @usn5 In $@usn5 Limit _usn4 Starts With 1000 Starts With $usn2 Where _usn4 Is Not Null Is Not Null Merge (#usn7 {#usn7:1.e1 Starts With 9e12})<-[`5esn`?:@usn5|_usn3{``:0.0 =~9e0 =~$0}]-(:@usn5{`1esn`:999 Is Not Null Is Not Null,``:.e1[7..][9e0..]})-[@usn5?{#usn7:12e12 In $`5esn`}]->(`8esn` :`8esn`) On Match Set #usn7 =[$`3esn` Ends With 01234567][..{`3esn`:`6esn` Starts With `6esn`}][...e1],@usn6+=0.12[$0..$usn2] Union Delete $#usn7[..$`4esn`][..01],Filter(@usn5 In 9e0 Ends With $#usn8 Where 07 Is Null) =~{#usn7:1000[12e12][`5esn`]} Union All Return Distinct _usn4 Contains $_usn3 Contains .e1,$`4esn`['s_str'..] As `` Order By $usn2 =~9e1 Descending,(:@usn5{_usn3:123.654})<-[usn1:`1esn`|`3esn`]-(_usn4 :@usn5)-[:_usn3|:`7esn` *1000..0X0123456789ABCDEF]->(:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]}) Ends With Any(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn`[0..][999..]) Ends With {``:0xabc[..$1000][..`5esn`],``:$`1esn` Contains 1e1 Contains @usn6} Asc,1.e1 =~$_usn4 Desc Skip 12[0e0] Unwind $#usn8[@usn6..] As usn2"),
    octest:ct_string("Optional Match (`1esn` {`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]})<-[`4esn`?:`4esn`|@usn5 *01..123456789]-(:usn1:`3esn`{`8esn`:12 Starts With True Starts With 12e12,`8esn`:`2esn` Starts With $`7esn`})-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]->(_usn4 {_usn4:Null[..010][..1000],_usn3:.0 Is Null Is Null}) Where 00 Ends With `` Ends With 12.e12 Union All Remove Filter(`8esn` In 123456789 =~@usn6 Where True[`3esn`]).`8esn`?,Single(`8esn` In 123456789 =~@usn6 Where @usn6 Is Not Null Is Not Null).`1esn`?,Single(#usn7 In 9e1[$`1esn`..] Where 1.e1[12.e12..]).`6esn`! Optional Match (({`3esn`:_usn3[0x0],`3esn`:00[False..0e0]})<-[_usn4?:@usn6|:`7esn`]-({`3esn`:_usn3[0x0],`3esn`:00[False..0e0]})<-[_usn3?:_usn3|:`7esn`]->(`3esn` {`8esn`:`7esn` In 010 In usn1})) Where _usn3 Ends With 7 Ends With $`1esn` Merge (@usn6 :`2esn`{_usn3:$``[7],`7esn`:_usn3 Ends With 7 Ends With $`1esn`}) On Create Set All(usn2 In 7[12] Where `2esn`[$12..]).#usn8? =[#usn7 In 9e1[$`1esn`..] Where $@usn5 In $`6esn` In 12e12|12.0 Is Null Is Null] Contains [`3esn` In `2esn`[..01][..True] Where $0 Ends With $usn1 Ends With $_usn3],Extract(@usn6 In False Contains 0 Contains $`6esn` Where $0 Ends With $usn1 Ends With $_usn3|01 In $@usn6).`7esn`? ={`3esn`:.e1[..\"d_str\"][..$123456789]},[$`5esn` =~usn1,@usn6 Contains .12 Contains $usn1,999 In #usn8 In $``]._usn3 =[9e1 Ends With Count(*) Ends With $7,False[$usn1][0x0]] =~`2esn`(Distinct .12[01][@usn5],Count ( * ) Ends With $123456789) =~[@usn6 In False Contains 0 Contains $`6esn` Where $`8esn`[12.e12][_usn4]|12 Ends With Count ( * )] On Match Set `5esn` =0.e0[0X0123456789ABCDEF..]"),
    octest:ct_string("With Distinct *,$`3esn`[.e1][_usn4] Order By 12[None(#usn7 In 9e1[$`1esn`..] Where usn2 Is Not Null)..`5esn`(Distinct 00[$`1esn`..][@usn6..],@usn6[9e12])][`5esn`(`2esn`[..01][..True])..(`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]})<-[? *7..]-(#usn7 :``:usn2)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})] Descending Match `8esn`=((_usn3 :_usn4)) Where 0.0 Is Null Is Null Unwind 0[01234567..][0X0123456789ABCDEF..] As `4esn` Union All Remove `5esn`($`4esn` In 1.e1 In #usn7,0Xa[Count(*)..]).`2esn`,[$0[123.654..0.e0],01234567[Null..$_usn3]]._usn4!,{usn1:#usn8 =~.e0,_usn3:$_usn4 Is Null Is Null}.`1esn` Remove [#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 9e12[$`5esn`..$123456789]|12[..$999][..$`2esn`]].`1esn`?,#usn7:`4esn`:`6esn`,Any(#usn7 In $#usn7 Contains $`7esn` Contains .e12).`5esn`?"),
    octest:ct_string("Return Distinct *,$`5esn` Is Not Null,usn2 Contains $0 Contains .0 Order By 0.e0[$`4esn`..`2esn`] Descending,$123456789[12e12..9e0] Asc,$_usn3[_usn4..] Asc Skip $`7esn`[$_usn4][.e0] Limit Any(@usn5 In 9e0 Ends With $#usn8 Where 12.e12 =~0X0123456789ABCDEF =~1.e1)[(`5esn` :#usn8:`1esn`{_usn3:`6esn` Is Null Is Null})<-[?{@usn6:$0[0Xa..$123456789],`4esn`:`7esn` Contains 9e0}]->({_usn3:0X0123456789ABCDEF Contains 12e12 Contains 12.e12})-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})..][Filter(#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`])..] Union With Distinct (:@usn5{@usn5:999[..`1esn`][..07],_usn4:Count ( * ) Ends With $123456789})<-[`2esn`? *01..123456789]-(`2esn` :@usn6)[[`2esn`[..$_usn4][...12],False Contains 0 Contains $`6esn`,.e1[12.0..]]..[#usn7 In 9e0[$1000] Where #usn8 =~0.e0|12.e12 =~0X0123456789ABCDEF =~1.e1]],`1esn`[0Xa] As usn1,usn1 Contains 010 As @usn5 Order By [Count(*)[9e12..12.0]] Starts With [`5esn` In 0X7 In $#usn7 Where 123456789 =~$999|$`8esn` Is Not Null Is Not Null] Starts With [$usn2 Is Not Null Is Not Null,0 =~1e1] Ascending,None(`3esn` In 9e1 Contains $999 Where 0xabc In Null) Is Not Null Descending,Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $12[9e0..$999]|.12 Starts With _usn3 Starts With $``) Descending Limit Filter(`6esn` In $`6esn`[``..][Count(*)..] Where $7 In $usn1 In 999) Ends With Any(usn2 In 7[12] Where 0X7[.0]) Where @usn6 Is Not Null Is Not Null Create (`3esn` )-[#usn8:`4esn`|@usn5]-(:#usn7:`5esn`{`3esn`:Null[..0]}) Remove Any(`3esn` In 9e1 Contains $999 Where `2esn` Starts With 12.e12 Starts With 12.0).usn1,All(usn2 In 7[12] Where $@usn5[..0xabc][..$`3esn`])._usn4!,7._usn4 Union All Remove All(@usn6 In 010[`5esn`] Where `7esn`[$usn1..]['s_str'..]).usn1!,All(usn2 In False[$usn1][0x0] Where 010 Starts With 0 Starts With 0.0).`8esn` Unwind `4esn` Starts With 0e0 As `1esn` Return Distinct `` Starts With $123456789,$`4esn` Starts With $`4esn` Starts With $_usn3,9e1[$#usn8][$1000] Order By .e12[.12..] Desc,{@usn5:01[`3esn`..][Count(*)..]} Starts With Filter(#usn7 In $999 In 1e1 Where 9e12[..1e1][..'s_str']) Desc,``[$`3esn`] Descending Skip {@usn5:\"d_str\"[True..]} In _usn4(0 =~1e1,$123456789 Contains $#usn8 Contains ``) In [999 Contains $1000,`2esn` =~.e12 =~0X0123456789ABCDEF,_usn4[@usn6..][$0..]]"),
    octest:ct_string("Merge @usn5=(:`7esn`)<-[`1esn`?:usn1|`4esn` *..010]-(usn1 :_usn4{`4esn`:`7esn` Is Null}) Return False[$`1esn`..],``[$`1esn`] As _usn3,Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $`2esn` =~9e12) Is Null Is Null Order By usn1[..$@usn6][..00] Desc,[@usn5 In 9e0 Ends With $#usn8 Where 12.e12 =~0X0123456789ABCDEF =~1.e1|00[$`1esn`..][@usn6..]] Descending,`4esn` =~$`3esn` =~@usn5 Descending Limit 0x0 Contains $`6esn` Contains `4esn` With Distinct `2esn` Starts With 12.e12 Starts With 12.0 As #usn8,$_usn3 Is Not Null Is Not Null Order By All(#usn7 In 9e0[$1000] Where 0x0[12e12..$`7esn`])[(:`5esn`{_usn4:12 Starts With #usn7 Starts With 0Xa,#usn7:999 Is Null Is Null})<-[``:`4esn`|@usn5 *0xabc{#usn8:9e1 Contains $999,`5esn`:0e0[01][$`7esn`]}]-(_usn3 :`6esn`:_usn3{`6esn`:0.0 Is Not Null,`6esn`:$`8esn`[..True][.._usn4]})][{_usn4:@usn5 Starts With $`3esn`,#usn7:$`5esn` Is Not Null}] Desc Where `7esn` In 010 In usn1 Union Remove [True Contains 0x0 Contains $_usn3,_usn3 Contains 9e12 Contains `8esn`].#usn7!,Filter(@usn5 In 's_str'[0..] Where `7esn` In 010 In usn1).`3esn`"),
    octest:ct_string("Unwind `3esn`(#usn8 =~0.e0,1000[0e0][1e1])[[_usn3[0x0],1e1 In 0.0 In 0X0123456789ABCDEF]] As `8esn` Merge ((:@usn6)) On Create Set {`3esn`:07[_usn3..][`6esn`..],@usn6:``[usn1][`5esn`]}.@usn6 =Count(*)[``..#usn8][`3esn`..0xabc] On Create Set #usn7+=`6esn`[$`8esn`][9e1] Create ((`7esn` :`2esn`{`4esn`:0[1e1][$usn1],usn2:`8esn`[..$#usn8]})<-[_usn4?:usn2]-(@usn6 :`6esn`:_usn3{@usn5:0xabc =~$@usn5,usn1:0Xa[$`8esn`..][$_usn4..]})-[`3esn`?:`7esn`|:`2esn`]-(`5esn` :#usn8:`1esn`{_usn3:`6esn` Is Null Is Null})),(:_usn4{_usn3:$#usn7[..0Xa],@usn5:12e12 In 123456789}) Union All Create (`` {`8esn`:$`6esn`[``..][Count(*)..]})<-[`6esn`? *00..0Xa]->(#usn7 :#usn8:`1esn`{``:.0[$``..0X7]}),usn1=(((`` {`8esn`:$`6esn`[``..][Count(*)..]})<-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]-(#usn8 :`6esn`:_usn3)<-[{_usn4:1.e1[`8esn`]}]->(:@usn6$usn1))) Merge #usn8=((#usn7 :_usn3$usn1)<-[`4esn`?:usn1|`4esn`{`3esn`:123.654[..0.e0][..'s_str'],@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]}]->({`3esn`:`2esn` In 9e0 In 7})) On Create Set @usn6+=$`1esn` =~1e1 On Create Set Extract(_usn4 In 12e12 In 123456789 Where Count ( * ) Ends With $123456789).`8esn` =None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 9e12[$`5esn`..$123456789]) In Extract(@usn5 In 's_str'[0..] Where 07 Ends With 9e12 Ends With `2esn`|00[01234567][False]) In [12 =~usn1] Union All Return `2esn` Starts With 12.e12 Starts With 12.0 As _usn3 Skip 0e0[``] Limit .e0 =~Null Optional Match ((_usn3 {`6esn`:@usn5[$`6esn`..][$999..],`8esn`:$@usn5[..0xabc][..$`3esn`]})-[? *0X0123456789ABCDEF..{#usn7:$@usn6[$0..9e12][.e12..Null]}]->(#usn8 :`5esn`)-[:`6esn`|:#usn8{`4esn`:$`2esn`[..$`3esn`][..12e12],#usn8:123.654 Is Not Null}]-(_usn3 :`5esn`))"),
    octest:ct_string("Unwind @usn5[$`6esn`..][$999..] As @usn5 Unwind 0x0[..9e0] As #usn8 Union All Merge ((@usn6 {`7esn`:999 In 0e0})<-[? *1000..0X0123456789ABCDEF{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}]-(`6esn` {`2esn`:$`3esn` Ends With 01234567})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)) On Create Set [`5esn` In `7esn`[$usn2..][$123456789..] Where `7esn` Is Null|$_usn4 =~$`1esn` =~`2esn`].`6esn` =Any(#usn7 In True Contains 's_str' Contains $usn1 Where `6esn` Starts With `6esn`) =~Single(#usn7 In $999 In 1e1 Where _usn4 Contains `` Contains 1.e1),@usn6+='s_str',Extract(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0 Ends With 12.0 Ends With `5esn`)._usn4! =Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|123.654 Is Not Null) Ends With usn2(01 Is Null) Ends With [$@usn6 Ends With 123456789 Ends With 12.0,12.e12 =~.0 =~usn1] On Create Set `6esn` ={`3esn`:12 Starts With #usn7 Starts With 0Xa} Is Null Is Null,usn1+=`4esn`[$_usn3..$`7esn`] Union All Detach Delete 0X7[.0]"),
    octest:ct_string("With  $@usn5 Contains 's_str' Contains \"d_str\" As @usn5 Union Merge ((`2esn` :`6esn`:_usn3{usn2:0e0 =~0Xa =~$999,`4esn`:@usn6[9e12]})<-[`6esn`?:_usn3|:`7esn` *..010]->(:_usn3{_usn4:.e1[7..][9e0..]})<-[`3esn`?:`2esn`|`4esn` *123456789..{_usn4:1.e1[`8esn`]}]->({`8esn`:`5esn` Contains #usn7 Contains 9e12})) On Match Set #usn8+=`8esn` In $1000 On Create Set `4esn` =123456789[..0e0][..$#usn7] Return *,False Is Null Order By 0X7[..$`8esn`] Desc,[@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str']|$`3esn`[..0xabc][..$7]] Is Null Ascending,12.e12 Ends With `` Ends With 0 Desc Skip Any(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 0xabc In 123456789 In 0x0)[..{`5esn`:0Xa[$`8esn`..][$_usn4..],_usn3:00[$usn1..]}][..Any(@usn6 In 010[`5esn`] Where 1.e1[$usn1])] Union Optional Match #usn7=(((:`6esn`:_usn3{``:usn1 Ends With 9e0 Ends With 9e0,`5esn`:$`7esn`[.e1][12.0]})-[`3esn`?:`5esn`|:usn2{`7esn`:0X7['s_str'..][01..],`8esn`:0.e0[0X0123456789ABCDEF..]}]-(usn2 :usn1:`3esn`)-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->({usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]}))) With Distinct *,999 Contains [@usn6 In False Contains 0 Contains $`6esn` Where `1esn` Starts With 0xabc Starts With $usn2] Contains {_usn3:123.654 In $`7esn`} As `6esn`,.e0 Is Not Null Is Not Null As `7esn` Order By _usn3 In $`8esn` In @usn6 Desc Where `8esn` Contains Count(*) Contains $#usn7 Delete Any(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 00[$usn1..]) Contains None(@usn5 In 's_str'[0..] Where 010 Is Null) Contains `2esn`(Distinct $`3esn`[$_usn4..0Xa],$`8esn`[123456789..][$@usn5..])"),
    octest:ct_string("Optional Match usn1=(`3esn` {_usn3:$123456789[0.12..]})<-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->(usn2 ) Remove All(@usn6 In False Contains 0 Contains $`6esn` Where usn1[False..])._usn3! Union With Distinct 00[12e12][$`7esn`],[_usn3 In _usn3 Contains _usn4 Contains $@usn5] Contains [_usn4[$usn1..01234567][123.654..`5esn`]] Contains `4esn`(Distinct 07 In `6esn`) As `6esn`,0X7[..$`8esn`] As #usn7 Merge #usn8=((`3esn` :usn2)<-[:_usn4]->(:usn2{@usn5:07 Ends With 9e12 Ends With `2esn`})<-[`5esn`?:usn1|`4esn`{`3esn`:_usn3[0x0],`3esn`:00[False..0e0]}]->(`3esn` )) On Match Set `8esn`+=0x0[``..],usn1+=0e0 Ends With 07 Ends With $`8esn`,_usn4 =$@usn6[12.0][12.0] On Match Set usn1(True Contains 's_str' Contains $usn1,.e0 Is Not Null Is Not Null).@usn5! ={usn2:_usn3[0x0]} In Extract(#usn7 In 9e0[$1000] Where $_usn3 Is Null|010 Starts With 0 Starts With 0.0) In {`7esn`:False[$`4esn`..]}"),
    octest:ct_string("With Distinct *,None(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $`5esn` In _usn3 In 0.0) Is Not Null Is Not Null As @usn5 Order By 1000[12e12][`5esn`] Descending Limit All(@usn5 In 9e0 Ends With $#usn8 Where _usn4[`7esn`]) In {`6esn`:9e1 Is Not Null Is Not Null,`8esn`:_usn3 In $`8esn` In @usn6} In (:`6esn`:_usn3$usn2)-[:`3esn` *0Xa{`2esn`:`7esn`[$usn2..][$123456789..],@usn5:9e1 Starts With Count ( * )}]->(usn1 {usn1:$#usn7 Starts With 01234567 Starts With $0})-[?:#usn8|:`3esn` *0x0..]-(_usn3 :`4esn`:`6esn`{usn2:`4esn` Starts With 0e0,`3esn`:7[12]}) Where $999[``] Return Distinct (`5esn` :`4esn`:`6esn`)-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(#usn7 :``:usn2)[..Filter(#usn8 In `7esn`)] As #usn7,1e1 Is Null Is Null As usn2,{`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]}[..`2esn`(Distinct 0 Ends With 12.e12 Ends With usn2)][..Filter(_usn4 In 12e12 In 123456789 Where .e1 In 123456789)] As usn1 Unwind {`3esn`:@usn5[0.0..0X7],@usn5:$#usn7 Starts With $`2esn`} Contains Filter(`3esn` In `2esn`[..01][..True] Where 0Xa =~False =~@usn5) Contains Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $12[9e0..$999]|.12 Starts With _usn3 Starts With $``) As `5esn` Union All Optional Match ((:`8esn`{#usn7:`1esn`[`3esn`..],usn2:_usn3[$usn2..][$``..]})-[@usn6?*{_usn3:$usn1,_usn3:`2esn`[$12..]}]-(:`6esn`:_usn3{@usn6:7 =~`4esn`,_usn3:`6esn`[$1000][`3esn`]})-[? *0Xa]-(#usn8 ))"),
    octest:ct_string("Merge #usn7=((@usn5 :`4esn`:`6esn`)<-[`3esn` *7..]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]})) On Match Set `5esn`(Distinct .12[123.654..]).`3esn` =01234567 In 123456789 In 12,`6esn` =[@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str']|$`3esn`[..0xabc][..$7]] Is Null On Match Set usn2+=`6esn`[$`8esn`][9e1]"),
    octest:ct_string("Detach Delete Any(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null)[..`4esn`][..(usn2 :_usn3)-[`6esn`?:`6esn`|:#usn8]-(`1esn` {_usn4:`8esn` Is Null})<-[`7esn`?:#usn8|:`3esn`]-(_usn4 :`3esn`)] Return Distinct usn2[12.e12..] As `2esn`,$`2esn`[0..123456789][``..`1esn`],#usn8[`6esn`..][$``..] As `2esn` Skip $@usn6 Ends With `1esn` Limit 9e1 Ends With Count(*) Ends With $7 Union Delete `1esn` Contains $999 Contains 0.0,[#usn7 In $999 In 1e1 Where 0X7['s_str'..][01..]] Contains [@usn6 In False Contains 0 Contains $`6esn` Where `1esn` Starts With 0xabc Starts With $usn2] Contains Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where 999 In #usn8 In $``|True[0xabc..01234567][$`8esn`..$@usn6]) Return 12e12[0x0..12.e12] As `1esn`,.e1[7..][9e0..] As `4esn`,$#usn8 Starts With .e12 Starts With 1.e1 As `8esn` Order By $`5esn` In `2esn` In `2esn` Asc,0.0[..Count ( * )][..`1esn`] Ascending,[9e1 Ends With Count(*) Ends With $7,False[$usn1][0x0]] =~`2esn`(Distinct .12[01][@usn5],Count ( * ) Ends With $123456789) =~[@usn6 In False Contains 0 Contains $`6esn` Where $`8esn`[12.e12][_usn4]|12 Ends With Count ( * )] Ascending Create (:`6esn`:_usn3{`6esn`:`2esn` Starts With $`7esn`})"),
    octest:ct_string("Create (({`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})),`6esn`=(({`2esn`:9e12[$`5esn`..$123456789],`8esn`:$usn2 =~9e1})<-[`5esn`?{`8esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}]->(`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})) Delete $`5esn`,[Count(*)[9e12..12.0]] Starts With [`5esn` In 0X7 In $#usn7 Where 123456789 =~$999|$`8esn` Is Not Null Is Not Null] Starts With [$usn2 Is Not Null Is Not Null,0 =~1e1],.12[123.654..] Union Create (((`6esn` {`3esn`:$`2esn`[0..123456789][``..`1esn`],`7esn`:$0[0Xa..$123456789]})<-[_usn4{`2esn`:#usn8[`8esn`..],`2esn`:@usn6[9e12]}]-({#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})-[_usn3:usn1|`4esn`{`6esn`:12e12 =~1e1}]-(@usn6 :_usn4{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}))),_usn3=(((:usn2{`6esn`:`4esn` Starts With 0e0,`8esn`:usn2[12e12..]['s_str'..]})<-[:`2esn`|`4esn` *12..]-(_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]}))) With Distinct $`1esn`[Null][True] As usn2,{`6esn`:$#usn7 =~`2esn`,`4esn`:True[$_usn3..]}[(:`1esn`:_usn4{#usn8:00[12..$`6esn`],@usn6:usn1[..$@usn6][..00]})-[`2esn`:`4esn`|@usn5 *01234567..]-(:`5esn`{_usn4:12 Starts With #usn7 Starts With 0Xa,#usn7:999 Is Null Is Null})-[`3esn`:`2esn`|`4esn`]-({#usn8:False Starts With 0X7 Starts With 01234567})..Filter(@usn6 In 010[`5esn`] Where `7esn`[1e1])][Any(@usn6 In 010[`5esn`] Where False[$`4esn`..])..Extract(@usn5 In 's_str'[0..] Where `7esn` In 010 In usn1)] Limit {`1esn`:$999[``],@usn5:#usn7 Starts With $123456789 Starts With 12e12}[(_usn3 :`7esn`)-[`2esn`? *1000..0X0123456789ABCDEF{`8esn`:$7 In $usn1 In 999,@usn5:00 Ends With `` Ends With 12.e12}]-(:usn2{`5esn`:True[0xabc..01234567][$`8esn`..$@usn6]})..] Unwind 1.e1 Ends With $#usn7 As `5esn`"),
    octest:ct_string("With Distinct *,`2esn`(Distinct 12.e12 =~.0 =~usn1,00 Ends With $`1esn` Ends With `7esn`)[[_usn4 In 12e12 In 123456789 Where 0x0 Starts With $`6esn`|`2esn` In 7]] Order By $`2esn` Starts With 0.12 Starts With $12 Ascending,07 In `6esn` Desc,12[..0e0][...e1] Desc Skip #usn8[`6esn`..][$``..] Limit `3esn`[..0X0123456789ABCDEF][..0x0] Union With  {``:07[$`2esn`..9e12][$`4esn`..9e12],`3esn`:$`6esn` Starts With .e12 Starts With $`1esn`}[..Single(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null)][..Any(#usn7 In $999 In 1e1 Where 07 In `6esn`)] As usn1,`8esn` Is Not Null Is Not Null As `4esn` Skip (`2esn` $`6esn`)<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(usn2 {usn1:.e12 Ends With 0Xa Ends With 0xabc}) Ends With Extract(@usn6 In False Contains 0 Contains $`6esn` Where .e1[usn2..$_usn3][.0..$#usn7]) Ends With Single(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]) Limit Any(@usn6 In False Contains 0 Contains $`6esn` Where $usn2[`4esn`..9e12]) =~[9e12 =~@usn6,01 Ends With 0Xa Ends With 0X7,$@usn6[$0..9e12][.e12..Null]]"),
    octest:ct_string("With Distinct $@usn5,0.12[0Xa][$`7esn`] As `4esn`,All(#usn7 In $999 In 1e1 Where 1.e1 In 1000 In _usn3) Contains (`6esn` :`8esn`{@usn6:12.e12 Contains #usn7 Contains $_usn4})-[`8esn`{`7esn`:9e12 Starts With 1e1}]-(_usn3 :_usn4) Contains [`8esn` Is Not Null Is Not Null,12 Starts With #usn7 Starts With 0Xa,.0 Starts With `1esn`] As _usn3 Order By 0X0123456789ABCDEF[0X7..$`2esn`][$`5esn`..$usn2] Asc,`6esn`(`4esn` Ends With 12 Ends With .12,@usn5 Is Not Null)[Extract(`3esn` In 9e1 Contains $999 Where .e12 Ends With 0Xa Ends With 0xabc|1e1 Is Not Null Is Not Null)..Filter(usn2 In 7[12] Where usn2[12.e12..])] Desc Skip 01[$`7esn`..$@usn6]"),
    octest:ct_string("Delete [$``[7],_usn3 Contains _usn4 Contains $@usn5] Starts With [`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]|usn2 =~7] Starts With Any(`3esn` In `2esn`[..01][..True] Where 12.e12 Contains #usn7 Contains $_usn4),1.e1[$usn1] Union All Detach Delete [#usn7 In 9e1[$`1esn`..] Where $@usn5 In $`6esn` In 12e12|12.0 Is Null Is Null] Contains [`3esn` In `2esn`[..01][..True] Where $0 Ends With $usn1 Ends With $_usn3] Merge usn1=(`1esn` :`6esn`:_usn3{#usn7:0x0[$0][7]})-[?:``]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`}) On Create Set `6esn` ={`3esn`:12 Starts With #usn7 Starts With 0Xa} Is Null Is Null,usn1+=`4esn`[$_usn3..$`7esn`] On Match Set _usn3+=`6esn`[$``..$_usn3][1000...0],[usn2 In 7[12] Where $@usn6 Ends With 12.e12 Ends With @usn5|0 Ends With 12.e12 Ends With usn2].`1esn` =123.654 Is Null Is Null Detach Delete 00[False..0e0]"),
    octest:ct_string("Unwind None(#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[..$`8esn`][..Null]) Is Null As `8esn` Union With  0.e0 Is Not Null Is Not Null As _usn4 Limit \"d_str\" Is Not Null Is Not Null Unwind Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where $usn2 =~1.e1 =~usn1|123.654[$0..0X7][Null..#usn8])[(`1esn` {_usn4:`8esn` Is Null})<-[_usn4? *12..{`1esn`:$`6esn` Starts With .e12 Starts With $`1esn`,`3esn`:`8esn`[0.e0..]}]-(:`5esn`{`1esn`:0.e0})..][All(#usn7 In True Contains 's_str' Contains $usn1 Where usn2 Contains $0 Contains .0)..] As @usn6 Merge usn2=(`3esn` {usn2:$usn2[`4esn`..9e12]})"),
    octest:ct_string("Merge (@usn6 {`5esn`:.e12 Starts With $#usn8 Starts With False})<-[`6esn`:``]->({@usn6:$1000 Is Not Null}) On Match Set usn1 =$usn1 Starts With usn1 Starts With True With  None(#usn7 In $999 In 1e1 Where _usn3 Contains 9e12 Contains `8esn`)[..Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 0xabc In 123456789 In 0x0|Count(*)[..@usn6][..`7esn`])] As `3esn`,9e1[@usn5][$usn1] As `5esn`,`4esn` Starts With 0e0 As `7esn` Order By 1.e1 Contains `6esn` Contains 0.e0 Descending,07[..07][..0X7] Descending Limit Single(_usn4 In 12e12 In 123456789 Where 0e0 =~7 =~12.0) Starts With Extract(#usn7 In 9e0[$1000] Where 123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]|9e12 =~@usn6) With  *,All(#usn7 In True Contains 's_str' Contains $usn1 Where #usn8 Is Null Is Null)[..[0x0[0X7]]][..(:`7esn`{`3esn`:$`3esn` Contains $`1esn`,#usn7:$usn2[`4esn`..9e12]})-[ *..07]->(_usn3 :`3esn`{_usn3:01[`8esn`..9e12][.12..0]})] As `3esn`,All(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $0[123.654..0.e0])[usn2(Distinct #usn7 Contains $0 Contains $usn2,0.e0)..] As @usn6 Order By $`1esn` Ends With 0X0123456789ABCDEF Ascending Limit `4esn` Contains 9e0"),
    octest:ct_string("Merge (((`5esn` :@usn6{usn1:'s_str'[0..]})-[?:`4esn`|@usn5 *0Xa]-({`1esn`:$12 Starts With $usn1,`6esn`:123.654[`4esn`..12]})-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(`2esn` {`1esn`:$`4esn` Is Null Is Null}))) On Match Set _usn3:`7esn` Detach Delete #usn7[`8esn`..usn1][$999..`7esn`],{`3esn`:@usn5[0.0..0X7],@usn5:$#usn7 Starts With $`2esn`} Contains Filter(`3esn` In `2esn`[..01][..True] Where 0Xa =~False =~@usn5) Contains Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $12[9e0..$999]|.12 Starts With _usn3 Starts With $``),.0 Ends With 999 Ends With $`5esn`"),
    octest:ct_string("Return Distinct *,`4esn` Contains 9e0 Order By Single(`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]) Is Not Null Is Not Null Asc,12.e12[..9e1][..$_usn3] Descending,True In (#usn8 :`6esn`:_usn3)<-[`2esn`?:_usn4{#usn8:$12[9e0..$999]}]->({``:.e1 Starts With 12.e12 Starts With `2esn`}) Descending Unwind {_usn3:usn1 Is Null Is Null,#usn8:9e1[$``..][0.e0..]} Contains ({`7esn`:`8esn` Contains Count(*) Contains $#usn7})<-[_usn3:`3esn`{`5esn`:_usn4[0]}]->(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})-[#usn7?{`5esn`:.e12 Starts With $#usn8 Starts With False}]->({`1esn`:0X7 In $#usn7,_usn3:usn1 Contains 010}) Contains None(#usn8 In `7esn`) As `4esn` Union Optional Match (({`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})),`6esn`=(({`2esn`:9e12[$`5esn`..$123456789],`8esn`:$usn2 =~9e1})<-[`5esn`?{`8esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}]->(`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})) Detach Delete 12[0e0],$``[01234567..][.0..] With  *,None(#usn7 In 9e0[$1000] Where $``[True]) Ends With None(#usn8 In `7esn` Where $1000 Starts With $`7esn`) Ends With Single(#usn8 In `7esn` Where @usn5 Contains 9e0) Skip @usn6[..$@usn5] Where 12.e12 =~.0 =~usn1 Union All Return Distinct *,$`2esn` Starts With $@usn5 Starts With #usn7 As `6esn` Order By .e12 Starts With $#usn8 Starts With False Desc"),
    octest:ct_string("Match `8esn`=((_usn3 :_usn4)) Union Merge ((({usn2:_usn3[`2esn`..0X7][0.e0..$`3esn`]})<-[``?{usn2:$7 In 0.e0 In 999,usn1:'s_str' Starts With 9e0 Starts With usn2}]-(_usn3 )<-[? *..010{usn1:9e1[_usn3]}]->(`5esn` {`4esn`:0x0[usn1..usn1],usn1:$`5esn`[0X7..010][`7esn`..'s_str']}))) Detach Delete $0[123.654..0.e0],123.654"),
    octest:ct_string("Return *,`6esn` =~Null As `4esn`,.e0 Starts With $@usn6 Starts With $7 As `5esn` Order By [`3esn` In 9e1 Contains $999 Where _usn3[`2esn`..0X7][0.e0..$`3esn`]] In (`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[ *0xabc{``:usn1 Contains 010,`2esn`:$0 In `3esn` In 07}]->(:#usn7:`5esn`)-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(:#usn8:`1esn`$`7esn`) In {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]} Asc,{`2esn`:'s_str'[0..],`7esn`:0Xa[Count(*)..]}[..None(#usn7 In $999 In 1e1 Where 123456789 =~@usn6)] Desc Skip $`3esn`[$_usn4..0Xa] Create (:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]})<-[`7esn`:`2esn`|`4esn`{_usn4:.e1[7..][9e0..]}]-(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"}) Union Return *,`3esn`[12.0][$_usn3],.e1 =~_usn4 =~_usn4 As `3esn` Limit Count ( * ) In 0.12 With Distinct 010[12.0..`4esn`][``..Count(*)],$`7esn`[123456789..$1000][Count ( * )..$7],$`2esn` Contains Count(*) As `3esn` Skip `1esn` Where Null[..0]"),
    octest:ct_string("Delete [#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 12.e12 Starts With \"d_str\" Starts With 9e1|$#usn7 Contains $`7esn` Contains .e12] Starts With usn2(01 Is Null) Starts With Filter(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789]),All(`5esn` In `7esn`[$usn2..][$123456789..] Where _usn4 Is Not Null) Contains [@usn5 In 's_str'[0..] Where `6esn`[..Count ( * )][..$_usn4]] Contains ({usn1:$123456789 In 0.12})<-[`8esn`?:#usn7|@usn5{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3}]-(usn2 ) Create _usn3=((:`1esn`:_usn4{_usn3:0x0 Contains $`6esn` Contains `4esn`,@usn6:0Xa In #usn7 In 's_str'})-[#usn8:#usn7|@usn5 *123456789..{@usn5:usn2[12.e12..]}]->(`` )<-[:`2esn`|`4esn` *12..]-(_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})),usn2=((`` :`3esn`{`6esn`:Count(*)[9e12..12.0]})<-[`6esn`? *00..0Xa]->(#usn7 :#usn8:`1esn`{``:.0[$``..0X7]})-[usn2?{``:$`1esn`[``][07]}]-(`3esn` :`6esn`:_usn3{`4esn`:12.0 Starts With .12 Starts With `6esn`,#usn8:0.0 Is Null Is Null})) Merge `1esn`=(((_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]->(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]})-[?:`8esn`*]-(`7esn` :usn2{`3esn`:12.0 In 123.654 In _usn4}))) On Match Set _usn4 =0Xa In #usn7 In 's_str',`5esn`+=$#usn8 Starts With .e12 Starts With 1.e1,`1esn`+=usn2 In _usn3 On Match Set _usn3+=`6esn`[$``..$_usn3][1000...0],[usn2 In 7[12] Where $@usn6 Ends With 12.e12 Ends With @usn5|0 Ends With 12.e12 Ends With usn2].`1esn` =123.654 Is Null Is Null Union With  *,$`5esn` Is Not Null,usn2 Contains $0 Contains .0 Skip Extract(#usn7 In 9e0[$1000] Where $`1esn` Starts With Count(*)|9e0 Ends With $#usn8)[(`` :`5esn`{@usn5:123456789 =~@usn6})<-[:@usn5|_usn3{#usn7:$123456789 Starts With 0.12 Starts With Null,usn1:.e1[..$`3esn`][..01]}]-(#usn7 :`3esn`{`3esn`:@usn5[0.0..0X7],@usn5:$#usn7 Starts With $`2esn`})<-[:`1esn`|`3esn` *0Xa{_usn4:``[9e12][$999],#usn8:123.654 In 12}]-(`7esn` {``:9e1 Contains $999,``:$usn2[True..0X0123456789ABCDEF]}).._usn3(Distinct 0x0 Contains $`6esn` Contains `4esn`,usn2[1.e1])][(:@usn6{usn2:$123456789 Contains $#usn8 Contains ``,_usn3:`3esn`[..0X0123456789ABCDEF][..0x0]})<-[`7esn`?:usn1|`4esn`]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})<-[:_usn4]->(:usn2{@usn5:07 Ends With 9e12 Ends With `2esn`})..[#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[`8esn`]|9e1 Is Null]] Limit $`4esn`[`6esn`..$12] Where 0Xa[Count(*)..] Union With Distinct Single(usn2 In False[$usn1][0x0] Where $@usn6 Is Not Null Is Not Null) =~[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07 Is Not Null Is Not Null],010 Is Null Is Null As #usn8,All(`3esn` In `2esn`[..01][..True] Where usn2[12.e12..])[Any(#usn8 In `7esn` Where .e0 Is Null Is Null)..Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 1e1 Contains 0.e0 Contains 9e1|12.e12 Ends With $``)][{`5esn`:False[$usn1][0x0]}..`8esn`(Distinct .e0[01234567..$`8esn`])] As `8esn` Order By $_usn3[_usn4..] Asc,0.12 Is Null Is Null Desc,`6esn` Ends With _usn4 Ends With False Ascending Skip 1.e1 =~.12 Limit `1esn`[$@usn6][07] Create ``=(`3esn` :_usn4),((_usn3 :@usn5{`8esn`:1e1 Contains 's_str' Contains `3esn`})-[?:`2esn`|`4esn`{@usn5:0.e0}]-(`1esn` $`4esn`))"),
    octest:ct_string("Merge `4esn`=(`4esn` :`7esn`)"),
    octest:ct_string("Merge (_usn4 :@usn5{usn1:$#usn7 Starts With 01234567 Starts With $0})<-[`8esn` *0xabc{#usn8:12.0 Starts With .12 Starts With `6esn`,@usn5:_usn3[`5esn`..][usn2..]}]->(#usn7 {`8esn`:`7esn` In 010 In usn1}) Delete [9e1 Ends With Count(*) Ends With $7,False[$usn1][0x0]] =~`2esn`(Distinct .12[01][@usn5],Count ( * ) Ends With $123456789) =~[@usn6 In False Contains 0 Contains $`6esn` Where $`8esn`[12.e12][_usn4]|12 Ends With Count ( * )]"),
    octest:ct_string("Merge (({@usn6:010 Starts With 0 Starts With 0.0,_usn4:07[$`2esn`..9e12][$`4esn`..9e12]})<-[:@usn6|:`7esn` *0..01{``:`1esn`[0.0..1e1][0x0..7],usn2:01[`3esn`..][Count(*)..]}]->(`5esn` :``:usn2{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3})) With Distinct *,$`1esn`[07..] As ``,`` Is Null As `7esn` Skip $1000 Is Not Null Delete $usn1[Null][`8esn`],Single(#usn8 In `7esn` Where 12.0 Starts With $`2esn` Starts With .e1) Ends With [0X7 In $#usn7,`4esn` Is Not Null Is Not Null,.0[.e12..]] Ends With {`6esn`:0xabc[..$1000][..`5esn`],`4esn`:$@usn5 In 12e12 In 01} Union Delete (usn2 :usn1:`3esn`{`3esn`:`2esn` Is Null})<-[:`8esn` *999..{@usn6:`7esn` Ends With $7 Ends With $@usn5,``:0e0 Starts With 999 Starts With `2esn`}]->(`6esn` :#usn7:`5esn`)<-[usn1:`1esn`|`3esn`]->(`1esn` {#usn8:$#usn7[..9e0][..123.654],`5esn`:9e12 Starts With 1e1}) =~(`7esn` {#usn7:$@usn6 Ends With `1esn`})<-[#usn8 *0x0..]->(_usn3 :usn2{#usn8:$`2esn` Is Null,_usn3:123.654 Is Not Null})-[? *0X0123456789ABCDEF..]-(usn2 :_usn3) With  `5esn`[..123.654][...e12] As @usn6,(`6esn` {_usn3:9e12 Starts With 1e1,_usn4:`2esn`[..$_usn3]})-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->({`1esn`:#usn7[0]}) Starts With Extract(`6esn` In $`6esn`[``..][Count(*)..] Where @usn5 Is Null|0xabc In 010 In #usn7) As `2esn`,{`2esn`:'s_str'[0..],`7esn`:0Xa[Count(*)..]}[..None(#usn7 In $999 In 1e1 Where 123456789 =~@usn6)] As `1esn` Order By None(#usn7 In 9e0[$1000] Where $``[True]) Ends With None(#usn8 In `7esn` Where $1000 Starts With $`7esn`) Ends With Single(#usn8 In `7esn` Where @usn5 Contains 9e0) Descending,@usn5[$`7esn`..`5esn`] Ascending,.0 Contains .e12 Contains 0 Asc Skip usn1 Limit `6esn`[$`8esn`][9e1] Where False Starts With 0X7 Starts With 01234567"),
    octest:ct_string("Detach Delete (`3esn` :usn2)-[? *0xabc]-(`6esn` {`3esn`:.0[$``..0X7],`3esn`:$usn2 Is Not Null Is Not Null}) Is Null,$0[0Xa..$123456789],[$`5esn` =~usn1,True[`3esn`],@usn6[9e12]][None(#usn7 In 9e1[$`1esn`..] Where 1.e1[12.e12..])..] Create ((_usn3 :@usn5{`8esn`:1e1 Contains 's_str' Contains `3esn`})<-[? *..010{`2esn`:'s_str'[0..]}]->(_usn3 :`5esn`)),(:usn1:`3esn`{`8esn`:12 Starts With True Starts With 12e12,`8esn`:`2esn` Starts With $`7esn`})<-[`7esn`:#usn7|@usn5*{`8esn`:$`3esn`[$_usn4..0Xa]}]-(:_usn4{_usn3:$#usn7[..0Xa],@usn5:12e12 In 123456789}) Match (:`8esn`{``:.e1 Starts With 12.e12 Starts With `2esn`})<-[?:`3esn`*..]-(usn2 :`1esn`:_usn4{usn2:999 Contains $1000})<-[`5esn`?{`8esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}]->(`3esn` :usn1:`3esn`{`1esn`:0X7[.0]}),usn2=((#usn7 {`6esn`:$`2esn` Contains Count(*)})-[?:_usn4]->(`2esn` :usn2))"),
    octest:ct_string("Match `8esn`=((_usn3 :_usn4)) Where 0.0 Is Null Is Null Detach Delete `4esn`[..$@usn6][..@usn6],$_usn4 Is Null Is Null Detach Delete True Contains 's_str' Contains $usn1,$`5esn`[..00] Union Remove [`8esn` Is Not Null Is Not Null,12 Starts With #usn7 Starts With 0Xa,.0 Starts With `1esn`].@usn6?,[usn2 In False[$usn1][0x0] Where 999[@usn5..][Null..]|0.e0['s_str'..][01234567..]].``!,(:`1esn`:_usn4{usn2:0x0 Starts With $`6esn`,_usn4:$`4esn`[`8esn`]})<-[@usn5:`3esn` *0Xa{#usn7:1000[..`2esn`][..$@usn6],`1esn`:12e12 Starts With $0 Starts With $`2esn`}]->(:``:usn2{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7})._usn4? Unwind [#usn7 In 9e1[$`1esn`..] Where @usn5 Is Null] Is Not Null As `3esn` Remove [#usn7 In True Contains 's_str' Contains $usn1 Where `2esn`[..$_usn3]|1.e1 Starts With 9e12].#usn8?,usn1:usn2,Single(#usn8 In `7esn` Where 07 Contains `3esn` Contains `7esn`).@usn5!"),
    octest:ct_string("Unwind $12 Starts With $usn1 As `3esn` Union Return [#usn7 In 9e0[$1000] Where .e1 In 123456789|.e12[..999][..@usn5]] In `5esn`(`1esn` Starts With 0X7 Starts With \"d_str\",9e1) In @usn5(Distinct `5esn` Contains $`5esn` Contains 0X7,True[..#usn8]) As usn2,(`5esn` :@usn6{usn1:'s_str'[0..]})<-[ *00..0Xa]->(`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null})[All(#usn7 In 9e1[$`1esn`..] Where ``[$`3esn`])] As `3esn` Order By @usn6 =~999 =~@usn5 Ascending,$@usn5[..$#usn7] Descending,{`4esn`:12e12 =~$`7esn`} Is Not Null Is Not Null Desc Skip Count(*)[9e12..12.0] Return Distinct *,[`3esn` In `2esn`[..01][..True] Where 0.e0[1000.._usn4][.e1..usn1]|`5esn`[..123.654][...e12]] As `6esn`,$#usn8 Starts With .e12 Starts With 1.e1 As `8esn` Union All With Distinct .e12 Starts With $7 Starts With .0 Where $usn2[`4esn`..9e12] Merge `1esn`=((`2esn` {`4esn`:1000[12e12][`5esn`],`1esn`:07 Ends With 9e12 Ends With `2esn`})) On Match Set (:``:usn2{`4esn`:#usn7 Contains $0 Contains $usn2})<-[:`8esn` *0X7..]->(`4esn` :#usn7:`5esn`{@usn5:$`` Contains $`2esn` Contains $usn2})<-[`2esn`? *01..123456789]-(`2esn` :@usn6).`8esn` =`7esn`[1e1] Match #usn8=(({`6esn`:9e1 Is Not Null Is Not Null,`8esn`:_usn3 In $`8esn` In @usn6})<-[?:`3esn`*..]-(usn2 :``:usn2)-[`5esn`? *01234567..{`3esn`:usn2[`8esn`..][0X0123456789ABCDEF..],_usn3:$@usn6 In @usn6 In 1e1}]-(`1esn` :#usn7:`5esn`{`1esn`:0e0 =~0Xa =~$999})) Where .0[..'s_str'][..01234567]"),
    octest:ct_string("Unwind Extract(`8esn` In 123456789 =~@usn6 Where 123.654[`4esn`..12]|`8esn` Contains Count(*) Contains $#usn7)[{`7esn`:usn1[False..`5esn`][$1000..$12],`1esn`:$usn1[`2esn`..][$`2esn`..]}] As `5esn` Union All Create (((usn2 {`5esn`:$@usn6 Ends With `1esn`})<-[`2esn`? *01..123456789]-(@usn6 :``:usn2{usn1:0x0[0X7],@usn5:`4esn`[.12][$@usn6]})<-[? *7..{`1esn`:12[..$999][..$`2esn`],usn2:9e1}]-(#usn7 :``:usn2))) Union Return 9e1[$`1esn`..] As `` Order By None(#usn8 In `7esn` Where 9e1 Starts With Count ( * ))[..Any(usn2 In 7[12] Where 9e1 Is Not Null Is Not Null)] Desc,{@usn6:$`3esn`[.e1][_usn4]}[`8esn`(Distinct $``[True])..] Desc Skip 010[`5esn`]"),
    octest:ct_string("Remove (_usn4 {`7esn`:#usn7[0.e0..]['s_str'..]})-[usn2{``:$`1esn` =~999}]-(:usn1:`3esn`{``:$#usn7 In $@usn5 In $`1esn`,#usn7:999[@usn5..][Null..]}).`2esn` Union Return Distinct 0e0 Ends With 07 Ends With $`8esn` As `1esn`,0[01234567..][0X0123456789ABCDEF..] Order By (`1esn` :`3esn`{#usn7:12[..0e0][...e1]})<-[`6esn`:``]->({@usn6:$1000 Is Not Null})[(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})<-[?:`7esn`|:`2esn`]->(#usn8 :usn1:`3esn`{`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[ *01234567..]->(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})..Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|123.654 Is Not Null)][{`2esn`:$999 Ends With .e0}..[@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``|.e0 =~Null]] Ascending,1.e1[..`4esn`] Ascending,0xabc Is Not Null Is Not Null Descending Limit _usn4[.12..$usn2][$_usn3..123.654]"),
    octest:ct_string("Return $_usn4 Is Null Is Null,usn2 Starts With .0 Order By 9e1[$#usn8][$1000] Descending Limit #usn7 =~9e12 Detach Delete True Contains .e12,[#usn8 In `7esn` Where 9e12[$`5esn`..$123456789]] =~_usn4(Distinct $@usn6[$`8esn`..][123456789..],$`` Starts With $1000 Starts With @usn6),True Contains 0x0 Contains $_usn3"),
    octest:ct_string("With Distinct *,999 Contains [@usn6 In False Contains 0 Contains $`6esn` Where `1esn` Starts With 0xabc Starts With $usn2] Contains {_usn3:123.654 In $`7esn`} As `6esn`,.e0 Is Not Null Is Not Null As `7esn` Order By _usn3 In $`8esn` In @usn6 Desc Where `8esn` Contains Count(*) Contains $#usn7 Detach Delete None(`5esn` In `7esn`[$usn2..][$123456789..] Where 999 In #usn8 In $``)[[`5esn` In 0X7 In $#usn7 Where $@usn5 Starts With `5esn` Starts With 01234567|$``[..$#usn7][..`6esn`]]..Single(@usn5 In 9e0 Ends With $#usn8 Where `7esn`[$usn1..]['s_str'..])] Remove `4esn`:`4esn`:`6esn`,(usn2 :_usn4)<-[`8esn`?:#usn7|@usn5{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3}]-(`` :usn1:`3esn`)<-[@usn6?:_usn3|:`7esn`{@usn6:$`3esn`[.e1][_usn4]}]-(`` {`7esn`:$#usn7[..0Xa]}).usn2!,`5esn`(0.12 Contains False Contains 1.e1).`3esn`? Union With  Any(#usn7 In 9e0[$1000] Where 123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]) Contains [$`4esn` In 1.e1 In #usn7,usn1[False..]] Contains Extract(@usn5 In 9e0 Ends With $#usn8 Where $`3esn` In $usn2) As #usn7 Order By @usn5[0..] Ascending,$@usn5 In $`6esn` In 12e12 Desc,#usn7 In 0.e0 Desc Skip {`8esn`:$_usn4 Starts With 12.e12} Is Null Is Null Limit 999 Contains $1000 Where 999 In #usn8 In $`` Union All Match #usn7=(((:@usn5{@usn5:$12[9e0..$999]})<-[ *01234567..]-(`2esn` {`1esn`:$`4esn` Is Null Is Null})<-[@usn6?:`8esn` *0..01]->(`5esn` :`4esn`:`6esn`))),((usn2 :#usn8:`1esn`)<-[`4esn`? *..07]->(`4esn` {``:.e1 Starts With 12.e12 Starts With `2esn`})<-[`4esn`:`1esn`|`3esn` *12..]-(@usn6 {`4esn`:9e1 Contains 12})) Where `2esn` In 7"),
    octest:ct_string("Remove Extract(#usn7 In 9e0[$1000] Where 123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]|9e12 =~@usn6).#usn7,[@usn6 In False Contains 0 Contains $`6esn` Where $@usn5 In 12e12 In 01].`` Remove {`3esn`:$`5esn` Is Not Null Is Not Null}.`2esn`!,{``:`7esn`[$usn2..][$123456789..],_usn4:$12 Starts With $usn1}.`1esn`? Union All Merge #usn8=(({usn2:`2esn`[..$_usn3]})) On Create Set #usn8+=$123456789[.0..],`` =All(`8esn` In 123456789 =~@usn6 Where @usn5 Contains 9e0)[(:#usn7:`5esn`)<-[#usn8? *0Xa]-(`5esn` :`5esn`{#usn7:``[$`3esn`]})<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(usn2 {usn1:.e12 Ends With 0Xa Ends With 0xabc})..] On Match Set [`6esn` In $`6esn`[``..][Count(*)..] Where 0x0[$0][7]|$`4esn`[`8esn`]].usn1 =Any(_usn4 In 12e12 In 123456789 Where _usn3 In $`8esn` In @usn6)[Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789])][All(@usn5 In 9e0 Ends With $#usn8)] Merge (_usn4 :_usn4{`2esn`:`6esn` Starts With `6esn`,`8esn`:1000[0e0][1e1]}) On Create Set `7esn` ={usn2:_usn3[0x0]} In Extract(#usn7 In 9e0[$1000] Where $_usn3 Is Null|010 Starts With 0 Starts With 0.0) In {`7esn`:False[$`4esn`..]} On Match Set [_usn4 In 12e12 In 123456789 Where Count ( * ) Ends With $123456789|9e1 Ends With Count(*) Ends With $7]._usn4 =$`5esn`[0X7..010][`7esn`..'s_str'],@usn5+=(#usn7 {_usn4:1.e1[`8esn`]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) =~Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12) =~{usn2:#usn8[`8esn`..]},usn2+=999[12e12..$_usn4]"),
    octest:ct_string("With  $0[010..] As `` Order By `5esn`(Distinct .e0[01234567..$`8esn`]) =~All(#usn7 In 9e0[$1000] Where 's_str'[0x0..1.e1]) =~[999 In #usn8 In $``,.e0 Is Null Is Null] Ascending Skip count(Distinct 0X0123456789ABCDEF Contains 12e12 Contains 12.e12)[..{usn2:.12[123.654..],`2esn`:`8esn`[$`4esn`..$#usn8]}][..(:#usn7:`5esn`{usn1:.e1[..$`3esn`][..01],`4esn`:$`5esn` In .12})<-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]-(:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null})] Where usn2[12.e12..] Match #usn8=((`2esn` :_usn3{`8esn`:01234567[Null..$_usn3]})<-[ *0Xa{`3esn`:9e1 Ends With Count(*) Ends With $7}]-(`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})<-[usn1:`1esn`|`3esn`]-(_usn4 :@usn5)) Detach Delete Filter(@usn5 In 's_str'[0..] Where $@usn6 =~#usn7 =~True)[Extract(@usn5 In 's_str'[0..] Where _usn3[0x0])..All(_usn4 In 12e12 In 123456789 Where $usn2 Is Not Null Is Not Null)][(`4esn` :#usn8:`1esn`{`7esn`:.0[..'s_str'][..01234567],@usn6:False[..$`5esn`][..1e1]})<-[:`8esn`]-(:@usn6)-[? *0X0123456789ABCDEF..]-(usn2 :_usn3)..(#usn8 :_usn3{@usn5:_usn3 Starts With 12e12 Starts With `5esn`,@usn6:usn2 In _usn3})-[`1esn`?{`8esn`:.e0,usn2:9e1 Contains $999}]->(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})-[? *..010{`2esn`:'s_str'[0..]}]->({`7esn`:1.e1 In 1000 In _usn3,`8esn`:010 Starts With $`` Starts With 0e0})],$`4esn` In 1.e1 In #usn7 Union All Return `6esn` Starts With `6esn`,usn2(0X7[.0])[{#usn8:0Xa Ends With $`3esn` Ends With $1000}..][[Null =~`6esn`]..] As `6esn` Remove 12.e12.`7esn`!,(`4esn` :@usn6)-[`8esn`{`7esn`:9e12 Starts With 1e1}]-(_usn3 :_usn4).`4esn`"),
    octest:ct_string("Return Distinct $`6esn` Starts With .e12 Starts With $`1esn` As @usn6,$`4esn` Starts With $`4esn` Starts With $_usn3 Order By Extract(@usn6 In 010[`5esn`] Where 00[$usn1..]|_usn3[$usn2..][$``..])[Any(#usn7 In 9e1[$`1esn`..] Where #usn7[0])] Asc,True Ends With $_usn3 Ends With 12 Desc Skip 9e1[1.e1][$`8esn`] Limit (`3esn` :usn2)-[? *0xabc]-(`6esn` {`3esn`:.0[$``..0X7],`3esn`:$usn2 Is Not Null Is Not Null}) Is Null Union All Remove {`8esn`:usn2 =~7,`5esn`:.e0[01234567..$`8esn`]}.#usn8 Remove #usn7:`1esn`:_usn4,[`4esn` Ends With 12 Ends With .12,`5esn` Contains `1esn` Contains usn1,$`2esn` =~9e12].@usn5!"),
    octest:ct_string("Remove Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|0 Ends With 12.e12 Ends With usn2).`2esn`! With  0.e0 Is Not Null Is Not Null As _usn4,0X0123456789ABCDEF In $usn2 In `4esn`,$usn1 Is Not Null Is Not Null Order By 01234567[$@usn6..$#usn7][123456789..12e12] Desc,Single(#usn7 In 9e0[$1000] Where @usn6 Contains .12 Contains $usn1)[Filter(usn2 In 7[12] Where $@usn5[..0xabc][..$`3esn`])..][Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 12.0 In 123.654 In _usn4)..] Ascending Skip Null[..0] Limit Filter(`6esn` In $`6esn`[``..][Count(*)..] Where $7 In $usn1 In 999) Ends With Any(usn2 In 7[12] Where 0X7[.0]) Where 9e12 Starts With 1e1 Match (:_usn4)<-[`5esn` *0xabc]->(`` :`6esn`:_usn3)-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01}),`7esn`=((_usn3 :`7esn`)) Where .e12[@usn6..][010..]"),
    octest:ct_string("Return Distinct *,.0 Contains .e12 Contains 0,1e1 Is Null Is Null As usn2 Optional Match (`7esn` :usn2{`3esn`:12.0 In 123.654 In _usn4}),`7esn`=(((`` :`5esn`)-[ *0..01{@usn6:$0[123.654..0.e0]}]->(usn1 :`1esn`:_usn4{_usn3:@usn6[999..$_usn3][0.12..$@usn5],`1esn`:9e12[..1e1][..'s_str']})<-[`8esn`{`8esn`:usn1 Contains 010,_usn4:`5esn` Contains $`5esn` Contains 0X7}]-({#usn8:0xabc In 010 In #usn7}))) Match #usn8=(({`6esn`:9e1 Is Not Null Is Not Null,`8esn`:_usn3 In $`8esn` In @usn6})<-[?:`3esn`*..]-(usn2 :``:usn2)-[`5esn`? *01234567..{`3esn`:usn2[`8esn`..][0X0123456789ABCDEF..],_usn3:$@usn6 In @usn6 In 1e1}]-(`1esn` :#usn7:`5esn`{`1esn`:0e0 =~0Xa =~$999})) Where .0[..'s_str'][..01234567] Union Detach Delete $usn2[0.e0]"),
    octest:ct_string("Match (((:`6esn`:_usn3{``:usn1 Ends With 9e0 Ends With 9e0,`5esn`:$`7esn`[.e1][12.0]})-[`3esn`?:`5esn`|:usn2{`7esn`:0X7['s_str'..][01..],`8esn`:0.e0[0X0123456789ABCDEF..]}]-(usn2 :usn1:`3esn`)-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->({usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]}))),({@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]}) Where 1000[0e0][1e1] Merge (:usn1:`3esn`{@usn6:0.e0 Starts With .0 Starts With 123456789,`4esn`:.e1[7..][9e0..]})-[#usn8:`4esn`|@usn5]-(:#usn7:`5esn`{`3esn`:Null[..0]})<-[:`6esn`|:#usn8{``:`1esn` Starts With 0xabc Starts With $usn2}]-(`2esn` :`1esn`:_usn4) On Match Set #usn7+=@usn6[123.654..][0x0..],`3esn`+=00 In @usn6 In 0,@usn6 =Filter(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]) Is Not Null Is Not Null On Create Set Any(#usn7 In True Contains 's_str' Contains $usn1 Where $12[9e0..$999]).`5esn`! =1.e1[12..][$`4esn`..],Any(usn2 In False[$usn1][0x0] Where $@usn6 Is Not Null Is Not Null).`2esn` =All(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07[_usn3..][`6esn`..]) =~All(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where .e12[..999][..@usn5]) =~Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4),`2esn` =1e1 Ends With $`2esn` Union All Return Distinct Filter(@usn5 In 9e0 Ends With $#usn8) Contains {@usn6:#usn7[`8esn`..usn1][$999..`7esn`]} Contains (:#usn7:`5esn`)-[?$7]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0})<-[@usn5? *01..123456789{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`}]->(`` :usn2{@usn5:$`4esn` Contains _usn3 Contains `8esn`,`7esn`:$`4esn`[`4esn`][Count(*)]}) Skip $usn2 Ends With $123456789 Limit [@usn6 In False Contains 0 Contains $`6esn` Where usn1 Starts With 00|`5esn`[$`7esn`..$@usn5]] Is Not Null Is Not Null Delete `2esn`[$usn2][12.0],{`1esn`:`2esn` Is Null,`7esn`:`` =~.12}[Single(#usn7 In True Contains 's_str' Contains $usn1 Where `5esn` Contains $`5esn` Contains 0X7)..],(:``:usn2{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7})-[:`2esn`|`4esn`{_usn3:@usn6[`1esn`..],@usn6:@usn6[9e12]}]->({usn1:$#usn7 =~`2esn`})-[`3esn`?{@usn6:Count(*)[..@usn6][..`7esn`],`6esn`:`2esn` In 9e0 In 7}]->(`8esn` :@usn6{`7esn`:0e0[999..$``]})[{`6esn`:$`4esn`[`6esn`..$12],usn1:00 In @usn6 In 0}..][Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 123456789[12])..] Delete 1000[12e12][`5esn`],0Xa Contains `8esn` Contains 0xabc"),
    octest:ct_string("With Distinct Extract(`6esn` In $`6esn`[``..][Count(*)..] Where 1.e1 Ends With $_usn4 Ends With #usn7|0xabc =~$@usn5) Contains {`5esn`:1.e1[`8esn`],`1esn`:.e0} Contains {usn1:$123456789 In 0.12} As #usn7,``[7.._usn3] As usn2 Skip [0.e0[..$7],$usn2[True..0X0123456789ABCDEF],`2esn` =~.e12 =~0X0123456789ABCDEF] Ends With `1esn`(Distinct $`3esn`[..0X0123456789ABCDEF][..7],`4esn`[$_usn3..$`7esn`]) Ends With [$`1esn`[``][07],`7esn`] Create `5esn`=(((:`1esn`:_usn4{#usn8:00[12..$`6esn`],@usn6:usn1[..$@usn6][..00]})-[:`6esn`|:#usn8{`4esn`:$`2esn`[..$`3esn`][..12e12],#usn8:123.654 Is Not Null}]-({`6esn`:9e1 Is Not Null Is Not Null,`8esn`:_usn3 In $`8esn` In @usn6})<-[{_usn4:1.e1[`8esn`]}]->(:@usn6$usn1))) With Distinct $usn2[`5esn`..][01234567..] As #usn8 Order By .0 Ends With 999 Ends With $`5esn` Ascending,01234567 In $@usn6 In $#usn7 Desc Where .e0[01234567..$`8esn`] Union Match @usn6=(usn2 :_usn4) Where `4esn`[$_usn3..$`7esn`] Delete None(#usn7 In $999 In 1e1 Where 123456789 =~@usn6) =~Single(`3esn` In 9e1 Contains $999 Where .12 In `8esn` In $#usn8) =~(`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[`5esn`?{_usn4:$usn2 =~9e1}]->(`8esn` :#usn8:`1esn`{usn2:12.e12 Ends With $``,`2esn`:1e1 Contains 's_str' Contains `3esn`})-[`` *1000..0X0123456789ABCDEF]-(:usn1:`3esn`{_usn3:$`6esn`[1.e1][$_usn3]}),[_usn3 In _usn3 Contains _usn4 Contains $@usn5] In Single(@usn5 In 9e0 Ends With $#usn8 Where 07 Is Null) In [9e12[9e1],999 Starts With `2esn` Starts With .e1] Union With Distinct *,[$usn1[`2esn`..][$`2esn`..]] Contains Extract(usn2 In 7[12] Where $_usn3 Is Null|.e12 Is Null Is Null),$#usn7 Contains $`7esn` Contains .e12 As @usn5 Order By 0X0123456789ABCDEF[0X7..$`2esn`][$`5esn`..$usn2] Asc,`8esn` Is Null Desc Remove {``:.e12 Ends With 0Xa Ends With 0xabc}.usn2?"),
    octest:ct_string("Detach Delete All(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07[_usn3..][`6esn`..]) =~All(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where .e12[..999][..@usn5]) =~Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4),`4esn`[.12][$@usn6] Unwind $`5esn` =~$`8esn` =~usn2 As `1esn` Create (:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]})<-[`7esn`:`2esn`|`4esn`{_usn4:.e1[7..][9e0..]}]-(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"}) Union All With  9e0[..123456789][..$`3esn`] Order By 01 Contains usn2 Contains 0X0123456789ABCDEF Desc Limit 00 =~Count ( * ) Union All With  *,All(`5esn` In 0X7 In $#usn7 Where 12.0 Is Null Is Null) Is Not Null Is Not Null As `3esn` Limit `5esn`[$`7esn`..$@usn5] Where .e0 =~Null With  $999 =~.0 As usn2 Limit 's_str' Ends With _usn4 Ends With 0e0 Where 0Xa[$`8esn`..][$_usn4..]"),
    octest:ct_string("Unwind Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4) Ends With [$@usn6 Is Not Null Is Not Null] As `3esn` Unwind Extract(@usn5 In 's_str'[0..] Where 12 In $usn1 In 7) =~All(`3esn` In `2esn`[..01][..True] Where $`7esn`[.e1][12.0]) As @usn5 Union Merge ((_usn3 :_usn4)) On Create Set Extract(_usn4 In 12e12 In 123456789 Where Count ( * ) Ends With $123456789).`8esn` =None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 9e12[$`5esn`..$123456789]) In Extract(@usn5 In 's_str'[0..] Where 07 Ends With 9e12 Ends With `2esn`|00[01234567][False]) In [12 =~usn1] Return Distinct *,9e12 =~@usn6,`4esn` Contains 9e0 Order By 1000[..$1000] Descending Skip Filter(`6esn` In $`6esn`[``..][Count(*)..]) Ends With None(`5esn` In 0X7 In $#usn7 Where 12.0 Is Null Is Null) Limit {``:123.654 In $`7esn`}[All(`3esn` In `2esn`[..01][..True] Where 0Xa =~False =~@usn5)..None(@usn6 In False Contains 0 Contains $`6esn` Where $@usn6 =~#usn7 =~True)] Union Match (({#usn7:$@usn6[$0..9e12][.e12..Null]})) Match `6esn`=(((:`6esn`:_usn3)<-[? *0X7..{`2esn`:$@usn5 In $`6esn` In 12e12}]-(`3esn` :_usn4{`3esn`:12[..0e0][...e1],`4esn`:.0 Is Null Is Null})-[usn2 *..07]->(`` {_usn3:`5esn` Contains `7esn`}))) Where $_usn4[$`5esn`][`7esn`]"),
    octest:ct_string("Optional Match `3esn`=((:#usn8:`1esn`$`7esn`)<-[`1esn` *999..{`1esn`:1e1 Contains 's_str' Contains `3esn`}]-(usn1 {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(#usn7 :``:usn2)),usn2=(`3esn` {usn2:$usn2[`4esn`..9e12]}) Where _usn3 Contains 9e12 Contains `8esn` Delete 12 Starts With \"d_str\" Starts With 00,1e1 In 0.0 In 0X0123456789ABCDEF Optional Match ((`4esn` :@usn6)-[:`` *0..01]-({`7esn`:0xabc In Null,_usn4:.e12[0Xa..]})) Where 0Xa Ends With $`3esn` Ends With $1000"),
    octest:ct_string("Return 999[12e12..$_usn4] Order By Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where $usn2 =~1.e1 =~usn1|123.654[$0..0X7][Null..#usn8])[(`1esn` {_usn4:`8esn` Is Null})<-[_usn4? *12..{`1esn`:$`6esn` Starts With .e12 Starts With $`1esn`,`3esn`:`8esn`[0.e0..]}]-(:`5esn`{`1esn`:0.e0})..][All(#usn7 In True Contains 's_str' Contains $usn1 Where usn2 Contains $0 Contains .0)..] Descending,0X7[.0] Asc,$`3esn`[..0X0123456789ABCDEF][..7] Descending Limit #usn7 =~9e12 Union Detach Delete _usn3 Ends With 7 Ends With $`1esn`,(`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[`5esn`?{_usn4:$usn2 =~9e1}]->(`8esn` :#usn8:`1esn`{usn2:12.e12 Ends With $``,`2esn`:1e1 Contains 's_str' Contains `3esn`})-[`` *1000..0X0123456789ABCDEF]-(:usn1:`3esn`{_usn3:$`6esn`[1.e1][$_usn3]})[..Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where 999 In #usn8 In $``|Count ( * )[$`5esn`..][$7..])][..$usn2] Return Distinct ``[$`1esn`] Order By 123456789[12] Ascending,{usn1:0x0[$0][7],`5esn`:@usn5 Contains #usn8 Contains 12.0}[[@usn5 In 9e0 Ends With $#usn8 Where 00 Contains Count ( * ) Contains 0x0]] Asc,Count ( * )[$`5esn`..][$7..] Desc Union With  01234567 In 123456789 In 12 As usn1,Count ( * ) In 123456789 In $@usn5 As _usn3 Order By #usn7 In 0.e0 Desc Skip [$#usn7 Ends With 's_str' Ends With 0X7,12e12 Ends With 0.0 Ends With usn1][Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $`6esn`[``..][Count(*)..])..Extract(#usn7 In 9e0[$1000] Where @usn6 Contains .12 Contains $usn1|``[$`3esn`])][(#usn8 :`5esn`)<-[usn2?:`3esn` *00..0Xa]-(`2esn` {``:$0 =~9e1 =~$`2esn`,`8esn`:`5esn`[..123.654][...e12]})..{_usn3:_usn4 Is Null Is Null}] Where 0Xa[Count(*)..]"),
    octest:ct_string("With  $1000 Starts With $`3esn` Starts With 0.e0 As @usn6,.e12 In $`5esn` In 0X7 As _usn4 Where 12.e12 Ends With $`` Delete count($`4esn`[`8esn`],`4esn` Is Not Null Is Not Null) =~Filter(@usn5 In 's_str'[0..] Where _usn3[0x0]),9e1[$`1esn`..],$usn2[`2esn`..] Union All Delete #usn8 =~.e0,True[`1esn`...e1][00..7],(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[usn2? *0..01{`6esn`:#usn8 Is Null}]->(`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12}) Union All Create (({@usn6:#usn7[`8esn`..usn1][$999..`7esn`]})<-[@usn5:_usn4 *0x0..]->({`1esn`:0X7 In $#usn7,_usn3:usn1 Contains 010})),`7esn`=(((`2esn` {``:$0 =~9e1 =~$`2esn`,`8esn`:`5esn`[..123.654][...e12]})-[`1esn` *01234567..]->(_usn3 {#usn7:12.e12 Ends With `` Ends With 0,``:$@usn6 In @usn6 In 1e1})<-[`4esn`:`1esn`|`3esn` *12..]-(usn1 :`7esn`{`7esn`:9e12 Starts With 1e1,_usn3:$`7esn`[$_usn4][.e0]}))) Detach Delete Extract(@usn6 In 010[`5esn`] Where 00[$usn1..]|_usn3[$usn2..][$``..])[Any(#usn7 In 9e1[$`1esn`..] Where #usn7[0])],_usn4[$usn1..01234567][123.654..`5esn`],None(#usn7 In 9e0[$1000] Where $_usn3 Is Null) In [@usn5 In 's_str'[0..] Where $#usn8[12.e12..`8esn`][12.0..0.0]|`4esn` Ends With 12 Ends With .12] In [#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 12.e12 Starts With \"d_str\" Starts With 9e1|$#usn7 Contains $`7esn` Contains .e12]"),
    octest:ct_string("Merge usn2=(`8esn` :`6esn`:_usn3) On Match Set @usn5+=0Xa[010..$0][$`2esn`..999],``+=9e12[..`3esn`][..0X0123456789ABCDEF],({@usn6:#usn7[`8esn`..usn1][$999..`7esn`]})-[`2esn`? *..07{`2esn`:`3esn`[0x0..]}]->(_usn4 {_usn4:123.654 In 12})<-[@usn5? *0..01{`3esn`:$`1esn` In .e0,@usn6:12.0 =~@usn6 =~$`2esn`}]->(`6esn` :#usn7:`5esn`{_usn3:_usn4 Is Null Is Null}).usn2 ={#usn8:.0 Is Null Is Null}[..(_usn3 :@usn6{usn2:0Xa =~False =~@usn5,`3esn`:0x0[Count(*)..@usn6][Count(*)..0Xa]})<-[`7esn`?:`2esn`|`4esn` *..010{usn1:0e0[``..$1000][$7..12.e12],`5esn`:0x0 Starts With $`6esn`}]->(@usn5 {_usn4:`5esn` Contains #usn7 Contains 9e12})][..{`5esn`:@usn6[9e12],`5esn`:@usn6[999..$_usn3][0.12..$@usn5]}] On Create Set `6esn`+=$usn1,`1esn`+={_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}[..Single(@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str'])][..None(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $12[9e0..$999])] Union Merge `7esn`=(`8esn` :`2esn`{@usn5:$`4esn` Contains _usn3 Contains `8esn`,`7esn`:$`4esn`[`4esn`][Count(*)]})<-[usn1]->(:`6esn`:_usn3{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})-[_usn3?:_usn4 *00..0Xa{_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]}) Detach Delete None(@usn6 In 010[`5esn`] Where $`3esn` Ends With 01234567) Is Not Null Is Not Null,$`2esn` =~9e12,12 Starts With \"d_str\" Starts With 00"),
    octest:ct_string("Remove [999 Is Not Null Is Not Null,123.654 In $`7esn`].`6esn`,[#usn7 In 9e1[$`1esn`..] Where $`7esn`[$_usn4][.e0]|.0[..'s_str'][..01234567]].usn1?,[`6esn` In $`6esn`[``..][Count(*)..]|.e12 Starts With $12 Starts With .e12].`7esn`!"),
    octest:ct_string("Create `1esn`=((`2esn` :`1esn`:_usn4)-[?:``]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})) Create (((usn1 :#usn8:`1esn`{`3esn`:`2esn` In 9e0 In 7})<-[#usn8 *0x0..]->(#usn8 :_usn3{_usn4:.e1[7..][9e0..]})-[_usn4 *00..0Xa{`1esn`:$12 Starts With $usn1,`6esn`:123.654[`4esn`..12]}]-(usn2 :`5esn`{_usn4:`2esn` In 9e0 In 7,@usn5:9e1[`1esn`..0][999..1e1]}))) Union All With Distinct $#usn7[..9e0][..123.654] Order By 0.0[..Count ( * )][..`1esn`] Desc Limit 0x0 In 0.e0 In #usn8"),
    octest:ct_string("Unwind $123456789 In 0.12 As `7esn` With Distinct *,1e1 Is Not Null Is Not Null Where `7esn` Ends With $7 Ends With $@usn5 Unwind {usn2:$@usn6[00]}[..[123456789 =~$999,$`2esn` Ends With `6esn`,12.e12 Contains 9e1]][..[12e12 Starts With $0 Starts With $`2esn`,$_usn3 Is Null]] As `5esn` Union Unwind _usn3 Is Null Is Null As `7esn` Detach Delete 0Xa In #usn7 In 's_str',0.e0[1000.._usn4][.e1..usn1] With  *,_usn3[12.e12..][`5esn`..] As @usn6,999[..`1esn`][..07] Order By 7 Is Null Is Null Ascending,Count ( * ) =~0e0 =~`8esn` Descending,#usn7[0.e0..][$#usn8..] Descending Where $999 Ends With .e0 Union All Merge (usn2 :`1esn`:_usn4{usn2:999 Contains $1000})<-[@usn6? *0..01{_usn4:0Xa Ends With $`3esn` Ends With $1000}]-(`3esn` :`1esn`:_usn4) On Match Set 0.12.`8esn`? =.0 Contains .e12 Contains 0"),
    octest:ct_string("Remove (`` :`3esn`{`6esn`:Count(*)[9e12..12.0]})<-[ *0..01]-(@usn6 :_usn3{@usn6:07 Is Not Null Is Not Null,`5esn`:0e0 =~7 =~12.0}).`2esn`?,Extract(@usn6 In False Contains 0 Contains $`6esn` Where usn1 Starts With 00).@usn5! Merge (@usn6 {`5esn`:.e12 Starts With $#usn8 Starts With False})<-[`6esn`:``]->({@usn6:$1000 Is Not Null}) On Match Set usn1 =$usn1 Starts With usn1 Starts With True Create ((:`3esn`{`1esn`:`7esn`,`8esn`:12e12 =~$`7esn`})-[ *7..{usn1:0x0[0X7],@usn5:`4esn`[.12][$@usn6]}]->(`7esn` {#usn8:False Starts With 0X7 Starts With 01234567})<-[?:usn1|`4esn` *1000..0X0123456789ABCDEF{`6esn`:.e0[999..1000][1e1..$`8esn`],`4esn`:00 Ends With `` Ends With 12.e12}]-({`1esn`:usn2 Contains $0 Contains .0,_usn4:$@usn6[.0..][0e0..]})),((`8esn` {`8esn`:.e0[999..1000][1e1..$`8esn`],`1esn`:$`3esn`[$_usn4..0Xa]})<-[_usn3?:_usn3|:`7esn`]->(#usn7 )-[?:#usn8|:`3esn` *0x0..]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0}))"),
    octest:ct_string("Return Distinct *,$`7esn`[0.12] Limit 12[..0e0][...e1] Return *,`2esn`[..$_usn4][...12] As `6esn`,`1esn` Starts With 9e1 As `6esn` Order By 01 Ends With 123456789 Desc,1.e1[12.e12..] Desc,\"d_str\" Is Not Null Ascending Skip [#usn7 In 9e0[$1000] Where `6esn`[$1000][`3esn`]][Extract(#usn7 In $999 In 1e1 Where 9e12 Starts With 1e1|010 Starts With $`` Starts With 0e0)..] Limit @usn6 =~999 =~@usn5 Unwind 01 Ends With 123456789 As usn1"),
    octest:ct_string("Optional Match `8esn`=(#usn8 :_usn3)-[`7esn`{#usn8:01 Is Null,`6esn`:#usn7[0]}]-({`2esn`:Count(*) Ends With usn1,`6esn`:1000 Ends With `7esn`})<-[:_usn3|:`7esn` *00..0Xa]-(#usn7 :`4esn`:`6esn`$usn2) Where $0[0Xa..$123456789] Union Optional Match (`5esn` {`2esn`:`1esn`[0.0..1e1][0x0..7],#usn8:.e0}) Where #usn7[0.e0..]['s_str'..] Merge ((@usn6 :_usn4{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]})) On Match Set #usn7+=`1esn` Remove None(_usn4 In 12e12 In 123456789 Where 0x0 Starts With $`6esn`).`2esn`,(`5esn` :``:usn2)<-[?:`4esn`|@usn5{usn2:$@usn6[$`8esn`..][123456789..]}]->(:_usn4{`8esn`:01234567[Null..$_usn3]}).``?,Extract(usn2 In 7[12] Where .12[0X7..][12e12..]|0.0 Contains #usn7).`1esn`"),
    octest:ct_string("Match (((`6esn` :`4esn`:`6esn`)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})<-[`4esn` *0Xa{@usn6:999 Starts With `2esn` Starts With .e1,`4esn`:$@usn5[..0xabc][..$`3esn`]}]->(@usn6 :``:usn2)))"),
    octest:ct_string("Unwind 12e12[12e12][$#usn7] As usn2 Merge `1esn`=((`2esn` :`1esn`:_usn4)-[?:``]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})) On Create Set #usn7+=.e0[..9e12][..07],`4esn`(True[$_usn3..],$999[``]).usn2 =123456789 Is Null Is Null,@usn5 =01[07..][1.e1..] On Create Set `5esn`+={#usn7:12e12 In $`5esn`} Ends With {`6esn`:12 =~usn1,_usn3:`6esn`[$`8esn`][9e1]},usn2 =True Contains 0x0 Contains $_usn3 Delete $_usn4[9e0..][$1000..] Union Unwind (:`6esn`:_usn3{@usn6:7 =~`4esn`,_usn3:`6esn`[$1000][`3esn`]})-[_usn4:_usn4 *0X7..{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]}]-(:`6esn`:_usn3{`4esn`:#usn7 Contains $0 Contains $usn2})[[$`6esn`[1.e1][$_usn3]]][usn2(0xabc In Null)] As `5esn` Return *,0.e0 =~00 As `3esn` Order By 's_str'[0x0..1.e1] Asc,usn1[False..`5esn`][$1000..$12] Ascending"),
    octest:ct_string("Delete $_usn4[..123456789],.e1 In 123456789 Union Optional Match `8esn`=(#usn8 :_usn3)-[`7esn`{#usn8:01 Is Null,`6esn`:#usn7[0]}]-({`2esn`:Count(*) Ends With usn1,`6esn`:1000 Ends With `7esn`})<-[:_usn3|:`7esn` *00..0Xa]-(#usn7 :`4esn`:`6esn`$usn2) Where $0[0Xa..$123456789] Union Remove All(#usn7 In 9e1[$`1esn`..] Where Count ( * ) In 0.12).#usn7?,All(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`).#usn8,{`4esn`:$999[0Xa..][9e1..]}.`3esn` Detach Delete $123456789[.0..],All(#usn7 In True Contains 's_str' Contains $usn1 Where #usn8 Is Null Is Null)[..[0x0[0X7]]][..(:`7esn`{`3esn`:$`3esn` Contains $`1esn`,#usn7:$usn2[`4esn`..9e12]})-[ *..07]->(_usn3 :`3esn`{_usn3:01[`8esn`..9e12][.12..0]})]"),
    octest:ct_string("With  *,`3esn`[...e1] Where 12.e12[`8esn`..][1000..]"),
    octest:ct_string("Unwind Any(usn2 In 7[12] Where $_usn3 Is Null) Is Not Null Is Not Null As `2esn` With Distinct Any(@usn6 In False Contains 0 Contains $`6esn` Where $usn2[`4esn`..9e12]) =~[9e12 =~@usn6,01 Ends With 0Xa Ends With 0X7,$@usn6[$0..9e12][.e12..Null]] As `7esn` Where .0 Starts With `1esn` Optional Match `7esn`=((`4esn` )-[#usn8? *1000..0X0123456789ABCDEF{`7esn`:Count ( * )[$`5esn`..][$7..],`6esn`:`6esn` Ends With _usn4 Ends With False}]->(`` :_usn3)-[`4esn`?:`5esn`|:usn2]->(:`4esn`:`6esn`{usn2:$`8esn` Is Not Null Is Not Null}))"),
    octest:ct_string("Create _usn4=((#usn8 {`5esn`:$12[$usn1..][Count(*)..],`7esn`:0e0[``..$1000][$7..12.e12]})-[`5esn`? *01234567..{`3esn`:usn2[`8esn`..][0X0123456789ABCDEF..],_usn3:$@usn6 In @usn6 In 1e1}]-(usn1 {``:`6esn` =~$_usn4 =~7,`7esn`:9e0[$1000]})),(_usn3 :`4esn`:`6esn`{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3})<-[`2esn`? *01..123456789]-(`2esn` :@usn6)<-[?{`6esn`:$0[0Xa..$123456789],``:.e1[..\"d_str\"][..$123456789]}]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`}) Create _usn4=((`1esn` :#usn7:`5esn`{`1esn`:0e0 =~0Xa =~$999})),(((`7esn` {#usn7:$@usn6 Ends With `1esn`})<-[?:usn2{@usn5:999[..`1esn`][..07],_usn4:Count ( * ) Ends With $123456789}]->(`1esn` :usn1:`3esn`{_usn3:.0[.e12..]})<-[:`2esn`|`4esn` *0X0123456789ABCDEF..{`3esn`:usn2[`8esn`..][0X0123456789ABCDEF..],_usn3:$@usn6 In @usn6 In 1e1}]-(@usn6 :`2esn`{`4esn`:$999[0Xa..][9e1..]})))"),
    octest:ct_string("Match `7esn`=(`8esn` :`2esn`{@usn5:$`4esn` Contains _usn3 Contains `8esn`,`7esn`:$`4esn`[`4esn`][Count(*)]})<-[usn1]->(:`6esn`:_usn3{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})-[_usn3?:_usn4 *00..0Xa{_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]}) Where $#usn7 Ends With 's_str' Ends With 0X7 Optional Match (((`7esn` {usn2:0X7[..$`8esn`],`1esn`:123.654 Is Not Null})<-[ *12..{`8esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}]-(`5esn` :`1esn`:_usn4)-[:`6esn`|:#usn8{``:`1esn` Starts With 0xabc Starts With $usn2}]-(_usn3 :`2esn`{@usn5:`4esn` Is Not Null Is Not Null}))),`8esn`=(:@usn5{usn2:$#usn7[..$`4esn`][..01],#usn7:False Is Null})-[@usn6:#usn8|:`3esn`]->({@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]}) Union All Match _usn4=(((_usn4 :_usn4{_usn3:$`3esn`[.e1][_usn4]})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)<-[usn1:`7esn`|:`2esn`{`6esn`:Count(*) In #usn8 In \"d_str\",`1esn`:$`1esn` Ends With 0X0123456789ABCDEF}]-(`6esn` :`1esn`:_usn4))),usn1=(_usn4 :_usn4{`2esn`:`6esn` Starts With `6esn`,`8esn`:1000[0e0][1e1]})"),
    octest:ct_string("Merge ((usn2 :`5esn`{`7esn`:0.12 Starts With $`8esn` Starts With @usn5})<-[usn1:`7esn`|:`2esn`{`6esn`:Count(*) In #usn8 In \"d_str\",`1esn`:$`1esn` Ends With 0X0123456789ABCDEF}]-(#usn8 :usn2{@usn5:$#usn7[..9e0][..123.654],`2esn`:7[12]})<-[ *..07{`5esn`:999 In 0e0}]-(_usn4 :`8esn`)) Remove (@usn5 :`6esn`:_usn3{`7esn`:`8esn`[..$#usn8],`3esn`:12.e12[0..0.12][123.654..9e12]})-[`3esn`:`2esn`|`4esn`]->(`` {``:$@usn6 Ends With 12.e12 Ends With @usn5,`2esn`:$`3esn` Ends With 01234567})<-[usn1:_usn4]-(#usn7 :@usn6).#usn8 Union Remove [$`4esn`[`6esn`..$12],00[12..$`6esn`]].``! Delete $`1esn` Contains 1e1 Contains @usn6,{_usn4:`1esn` Is Not Null Is Not Null,@usn5:0.12[$0..$usn2]} Is Not Null Is Not Null,`7esn`(Distinct `1esn` Starts With 0xabc Starts With $usn2)[({`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12})-[`6esn`?:@usn5|_usn3 *01234567..]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})..] Detach Delete `` =~.12,[1e1 Is Not Null Is Not Null,``[$`3esn`],$`8esn` Is Not Null Is Not Null][..[$usn1 Ends With _usn4 Ends With `2esn`]][..Extract(usn2 In False[$usn1][0x0] Where .e1[usn2..$_usn3][.0..$#usn7])],123456789[12]"),
    octest:ct_string("Remove Extract(#usn7 In True Contains 's_str' Contains $usn1 Where 9e1[$#usn8][$1000]|_usn3[`2esn`..0X7][0.e0..$`3esn`]).`7esn`? Return Distinct *,#usn8 =~0.e0 Order By $`5esn`[\"d_str\"..] Ascending,Any(`5esn` In `7esn`[$usn2..][$123456789..] Where $@usn6 Ends With 12.e12 Ends With @usn5) Contains [`8esn` In 123456789 =~@usn6 Where .e12[@usn6..][010..]|Count(*) Is Not Null Is Not Null] Contains ({`1esn`:usn2 Contains $0 Contains .0,_usn4:$@usn6[.0..][0e0..]})-[? *12..{usn2:$`8esn`[123456789..][$@usn5..]}]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]}) Desc,$1000 Is Null Is Null Ascending Limit $0 =~9e1 =~$`2esn` Union Delete (usn2 :usn1:`3esn`{`3esn`:`2esn` Is Null})<-[:`8esn` *999..{@usn6:`7esn` Ends With $7 Ends With $@usn5,``:0e0 Starts With 999 Starts With `2esn`}]->(`6esn` :#usn7:`5esn`)<-[usn1:`1esn`|`3esn`]->(`1esn` {#usn8:$#usn7[..9e0][..123.654],`5esn`:9e12 Starts With 1e1}) =~(`7esn` {#usn7:$@usn6 Ends With `1esn`})<-[#usn8 *0x0..]->(_usn3 :usn2{#usn8:$`2esn` Is Null,_usn3:123.654 Is Not Null})-[? *0X0123456789ABCDEF..]-(usn2 :_usn3) With  `5esn`[..123.654][...e12] As @usn6,(`6esn` {_usn3:9e12 Starts With 1e1,_usn4:`2esn`[..$_usn3]})-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->({`1esn`:#usn7[0]}) Starts With Extract(`6esn` In $`6esn`[``..][Count(*)..] Where @usn5 Is Null|0xabc In 010 In #usn7) As `2esn`,{`2esn`:'s_str'[0..],`7esn`:0Xa[Count(*)..]}[..None(#usn7 In $999 In 1e1 Where 123456789 =~@usn6)] As `1esn` Order By None(#usn7 In 9e0[$1000] Where $``[True]) Ends With None(#usn8 In `7esn` Where $1000 Starts With $`7esn`) Ends With Single(#usn8 In `7esn` Where @usn5 Contains 9e0) Descending,@usn5[$`7esn`..`5esn`] Ascending,.0 Contains .e12 Contains 0 Asc Skip usn1 Limit `6esn`[$`8esn`][9e1] Where False Starts With 0X7 Starts With 01234567"),
    octest:ct_string("Remove Extract(#usn8 In `7esn` Where ``[7.._usn3]|@usn5 Is Null).`7esn`?,(_usn4 :_usn4)<-[`7esn`:_usn4]->(`5esn` {``:_usn3 Contains 9e12 Contains `8esn`,@usn6:``[7.._usn3]})-[ *..07{`6esn`:Count(*)[9e12..12.0]}]->(:usn1:`3esn`{_usn4:$#usn7 Contains $`7esn` Contains .e12}).``? With  *,$@usn5 In 12e12 In 01 Order By 0.12 Starts With $`8esn` Starts With @usn5 Ascending Limit $7 Starts With $`4esn` Merge `1esn`=(((_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]->(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]})-[?:`8esn`*]-(`7esn` :usn2{`3esn`:12.0 In 123.654 In _usn4}))) On Match Set _usn4 =0Xa In #usn7 In 's_str',`5esn`+=$#usn8 Starts With .e12 Starts With 1.e1,`1esn`+=usn2 In _usn3 On Match Set _usn3+=`6esn`[$``..$_usn3][1000...0],[usn2 In 7[12] Where $@usn6 Ends With 12.e12 Ends With @usn5|0 Ends With 12.e12 Ends With usn2].`1esn` =123.654 Is Null Is Null Union All Merge `1esn`=(usn2 :`5esn`)<-[? *7..]-(#usn7 :``:usn2) On Match Set `8esn` ={`3esn`:.e1[..\"d_str\"][..$123456789]},`1esn` =$7 Starts With 12.e12 Starts With $@usn6,None(#usn7 In $999 In 1e1 Where 0X7['s_str'..][01..]).`3esn`? =#usn8[..`8esn`] Unwind $_usn3 Is Not Null Is Not Null As `1esn` Match (((`4esn` :``:usn2)<-[`3esn`?{@usn6:Count(*)[..@usn6][..`7esn`],`6esn`:`2esn` In 9e0 In 7}]-({`6esn`:@usn5[$`6esn`..][$999..],`8esn`:$@usn5[..0xabc][..$`3esn`]})-[:_usn4{`8esn`:12.e12 Is Not Null Is Not Null,#usn7:@usn6[Null...0][\"d_str\"..Count(*)]}]-(@usn6 {`5esn`:.e12 Starts With $#usn8 Starts With False}))),((@usn5 {_usn4:`5esn` Contains #usn7 Contains 9e12})) Union All Return Distinct 12.e12 =~0X0123456789ABCDEF =~1.e1 As `6esn`,0.e0[..$7] As _usn3,usn1 Ends With 0.0 Skip usn2 =~$`` =~$`8esn` Limit (usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})-[? *0Xa{usn1:`3esn`[0x0..]}]->(:`5esn`{`1esn`:0.e0}) Is Not Null Is Not Null Delete 07[_usn3..][`6esn`..] Unwind 9e12 =~@usn6 As usn1"),
    octest:ct_string("Detach Delete $_usn3,[Count(*)[9e12..12.0]] Starts With [`5esn` In 0X7 In $#usn7 Where 123456789 =~$999|$`8esn` Is Not Null Is Not Null] Starts With [$usn2 Is Not Null Is Not Null,0 =~1e1] Union All Optional Match ((`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12})<-[`8esn` *0xabc{#usn8:12.0 Starts With .12 Starts With `6esn`,@usn5:_usn3[`5esn`..][usn2..]}]->(#usn7 {`8esn`:`7esn` In 010 In usn1})-[?$7]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0})) Delete [`3esn` In `2esn`[..01][..True] Where $0 Ends With $usn1 Ends With $_usn3] In [12e12 In 123456789,`1esn`] In All(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789]),True[..#usn8],0.12[0Xa][$`7esn`]"),
    octest:ct_string("Detach Delete .12[..usn2][..12e12] Return Distinct *,Any(#usn7 In 9e0[$1000] Where .e0 Is Null) In None(@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``) In Filter(@usn6 In False Contains 0 Contains $`6esn` Where $@usn5 In 12e12 In 01) As `7esn` Skip $`5esn` =~$0 =~`` Limit Count(*) In 12 In `6esn`"),
    octest:ct_string("Delete _usn3 =~9e1 =~12e12,count(Distinct $@usn6 Ends With 123456789 Ends With 12.0,$`2esn`[.0..][0.0..]) Is Not Null Is Not Null Union Merge @usn6=(#usn7 {_usn4:1.e1[`8esn`]})<-[usn2{`2esn`:$12 Starts With $usn1}]->(:`5esn`{`8esn`:$`7esn`[0.12],_usn4:`1esn`})-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->(@usn6 :`4esn`:`6esn`{``:999 Contains 0 Contains $`5esn`,`6esn`:_usn3[12.e12..][`5esn`..]}) On Create Set `3esn`+=`2esn` =~.e12 =~0X0123456789ABCDEF,#usn8:usn1:`3esn`,``+=`2esn` On Create Set `3esn` =12[.0],All(#usn7 In $999 In 1e1 Where 9e12[..1e1][..'s_str'])._usn4? =12 Starts With True Starts With 12e12 Unwind Count ( * ) In True In @usn5 As `3esn`"),
    octest:ct_string("With  0X7[`2esn`..] As `6esn`,Single(usn2 In False[$usn1][0x0])[All(@usn6 In 010[`5esn`] Where 00[1.e1..])][(:`2esn`{``:07[$`2esn`..9e12][$`4esn`..9e12],`3esn`:$`6esn` Starts With .e12 Starts With $`1esn`})-[?{`5esn`:$`2esn`[.0..][0.0..]}]->(:usn2{@usn5:07 Ends With 9e12 Ends With `2esn`})-[`` *1000..0X0123456789ABCDEF]->(:_usn4{`8esn`:01234567[Null..$_usn3]})] Order By ``[$`3esn`] Asc,[1000[0e0][1e1],12.0 Is Null Is Null] Is Not Null Is Not Null Asc,.e0 =~$`7esn` =~0X0123456789ABCDEF Descending Skip [#usn8 In `7esn` Where .e0 Is Null Is Null] Ends With {usn1:$`4esn`[`6esn`..$12],`4esn`:usn1 Contains 010} Ends With (:``:usn2{``:True[$_usn3..]})<-[`2esn`? *01..123456789]-(`1esn` {#usn8:$#usn7[..9e0][..123.654],`5esn`:9e12 Starts With 1e1})<-[?:#usn8|:`3esn`{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]-(`1esn` $`4esn`) Limit `5esn`[..123.654][...e12] Unwind $_usn3 Is Not Null As _usn3 Match ((`6esn` {_usn4:$`5esn` Is Not Null Is Not Null})),`5esn`=(((`2esn` :`1esn`:_usn4)<-[`5esn`?{`8esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}]->(`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})<-[`4esn`:usn2]->(:`6esn`:_usn3{`2esn`:999[123.654..$usn2][Count ( * )..0x0]}))) Where `3esn`"),
    octest:ct_string("With Distinct $@usn5,0.12[0Xa][$`7esn`] As `4esn`,All(#usn7 In $999 In 1e1 Where 1.e1 In 1000 In _usn3) Contains (`6esn` :`8esn`{@usn6:12.e12 Contains #usn7 Contains $_usn4})-[`8esn`{`7esn`:9e12 Starts With 1e1}]-(_usn3 :_usn4) Contains [`8esn` Is Not Null Is Not Null,12 Starts With #usn7 Starts With 0Xa,.0 Starts With `1esn`] As _usn3 Order By 0X0123456789ABCDEF[0X7..$`2esn`][$`5esn`..$usn2] Asc,`6esn`(`4esn` Ends With 12 Ends With .12,@usn5 Is Not Null)[Extract(`3esn` In 9e1 Contains $999 Where .e12 Ends With 0Xa Ends With 0xabc|1e1 Is Not Null Is Not Null)..Filter(usn2 In 7[12] Where usn2[12.e12..])] Desc Skip 01[$`7esn`..$@usn6] Where 12 In $usn1 In 7 Union Create _usn3=((:``:usn2{`5esn`:1.e1[`8esn`],`1esn`:.e0})-[`3esn`:`2esn`|`4esn`]->(`` {``:$@usn6 Ends With 12.e12 Ends With @usn5,`2esn`:$`3esn` Ends With 01234567})<-[`6esn`?:_usn3|:`7esn` *..010]->(:_usn3{_usn4:.e1[7..][9e0..]})),@usn6=(`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`}) Optional Match @usn5=(:`6esn`:_usn3{`6esn`:`2esn` Starts With $`7esn`})<-[:`2esn`|`4esn` *12..]->({`7esn`:`4esn` Is Not Null Is Not Null,`4esn`:`4esn` Ends With 12 Ends With .12})<-[?:#usn8|:`3esn`{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]-(:usn1:`3esn`{_usn4:$#usn7 Contains $`7esn` Contains .e12}) Where Count ( * )[@usn6]"),
    octest:ct_string("Delete Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4) Ends With [$@usn6 Is Not Null Is Not Null],_usn3[`2esn`..0X7][0.e0..$`3esn`],'s_str' Ends With _usn4 Ends With 0e0"),
    octest:ct_string("Unwind 12.0 In 010 As @usn5 Merge (:`5esn`{`4esn`:$`5esn` =~$0 =~``,_usn3:$``[..$#usn7][..`6esn`]})<-[#usn8? *1000..0X0123456789ABCDEF{`7esn`:Count ( * )[$`5esn`..][$7..],`6esn`:`6esn` Ends With _usn4 Ends With False}]->(`8esn` :@usn5{`5esn`:_usn3 In $`8esn` In @usn6,_usn4:$@usn6 Ends With 12.e12 Ends With @usn5})-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]->(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]}) On Match Set #usn7+=[#usn8 In `7esn` Where usn2[07..][.0..]|$usn1 Ends With _usn4 Ends With `2esn`] Contains (_usn3 {#usn7:1000[12e12][`5esn`]})-[`3esn`?:`3esn`]->(#usn8 :_usn3{_usn4:.e1[7..][9e0..]})-[? *..010{`2esn`:'s_str'[0..]}]->({`7esn`:1.e1 In 1000 In _usn3,`8esn`:010 Starts With $`` Starts With 0e0}) Contains Extract(`3esn` In `2esn`[..01][..True] Where usn1 In ``),@usn6:`8esn`,Any(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 12.0 Starts With $`2esn` Starts With .e1).`8esn`? =$`3esn`[$_usn4..0Xa] Union Remove All(`8esn` In 123456789 =~@usn6 Where ``[9e12][$999]).``? Detach Delete #usn7[`8esn`..usn1][$999..`7esn`],{`3esn`:@usn5[0.0..0X7],@usn5:$#usn7 Starts With $`2esn`} Contains Filter(`3esn` In `2esn`[..01][..True] Where 0Xa =~False =~@usn5) Contains Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $12[9e0..$999]|.12 Starts With _usn3 Starts With $``),.0 Ends With 999 Ends With $`5esn` Union All Return .e1 =~_usn4 =~_usn4,[_usn3 In _usn3 Contains _usn4 Contains $@usn5] Contains [_usn4[$usn1..01234567][123.654..`5esn`]] Contains `4esn`(Distinct 07 In `6esn`) As `5esn`,$`4esn` Starts With 0 Starts With `7esn` As usn2 Order By 0.0[$usn2..] Asc Limit @usn5(Distinct) =~[_usn3[`5esn`..][usn2..],$#usn7 =~`2esn`] =~1.e1"),
    octest:ct_string("Merge ({@usn6:0x0[Count(*)..@usn6][Count(*)..0Xa],`7esn`:0.0 =~9e0 =~$0})-[ *7..{usn1:0x0[0X7],@usn5:`4esn`[.12][$@usn6]}]->(:_usn3{_usn3:$`3esn`[.e1][_usn4]})-[_usn4 *01234567..{@usn5:0xabc =~$@usn5,usn1:0Xa[$`8esn`..][$_usn4..]}]->(`5esn` :`4esn`:`6esn`) On Match Set {#usn8:$`5esn` =~$`8esn` =~usn2}.`4esn`! =999[@usn5..][Null..],`4esn`:`1esn`:_usn4 On Create Set [usn1[..$@usn6][..00],0x0[0X7],$`8esn`[123456789..][$@usn5..]].`1esn`? =999 Contains 0 Contains $`5esn` Match #usn7=(#usn8 :_usn3)-[`7esn`{#usn8:01 Is Null,`6esn`:#usn7[0]}]-({`2esn`:Count(*) Ends With usn1,`6esn`:1000 Ends With `7esn`})<-[:_usn3|:`7esn` *00..0Xa]-(#usn7 :`4esn`:`6esn`$usn2),`2esn`=({@usn5:$`5esn` Is Not Null Is Not Null})<-[#usn8?:`8esn`{`1esn`:999 In #usn8 In $``,`8esn`:False[$`4esn`..]}]->(`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]}) Where $_usn4[$`5esn`][`7esn`] With  `2esn` Starts With $`4esn` As `8esn` Skip @usn6[12.0..0.12] Limit None(#usn7 In 9e0[$1000] Where $_usn3 Is Null)[[0 =~1e1,$#usn8[12.e12..`8esn`][12.0..0.0],$1000 Is Not Null]..] Where $7 Starts With 12.e12 Starts With $@usn6 Union All Create ((:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})<-[`2esn`? *..07{`2esn`:`3esn`[0x0..]}]->(`5esn` )),@usn5=((_usn3 :`1esn`:_usn4{#usn8:$999 Ends With .e0,_usn4:`4esn`[\"d_str\"]['s_str']})<-[#usn8?:@usn6|:`7esn` *0X0123456789ABCDEF..{_usn4:12.e12 =~.0 =~usn1,usn1:12e12 Contains `2esn`}]->(usn2 :@usn6)-[@usn5? *01..123456789{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`}]-(`1esn` {@usn5:`2esn` Starts With $`4esn`})) With  $@usn6[..12] As #usn8,`6esn`(`4esn` Ends With 12 Ends With .12,@usn5 Is Not Null)[Extract(`3esn` In 9e1 Contains $999 Where .e12 Ends With 0Xa Ends With 0xabc|1e1 Is Not Null Is Not Null)..Filter(usn2 In 7[12] Where usn2[12.e12..])] As #usn8,[`5esn` In 0X7 In $#usn7 Where 0.e0['s_str'..][01234567..]][(`6esn` {_usn4:$`5esn` Is Not Null Is Not Null})-[ *999..{`3esn`:123456789 =~$999,_usn4:`4esn` Is Not Null Is Not Null}]-(usn1 :_usn4{`4esn`:`7esn` Is Null})] Order By 12.e12[..9e1][..$_usn3] Descending,Extract(usn2 In 7[12] Where $@usn5[0.0][0X0123456789ABCDEF])[[#usn7 In 9e0[$1000] Where 01 Ends With 0Xa Ends With 0X7|`2esn`[$usn2][12.0]]..][Filter(#usn8 In `7esn` Where @usn6[999..$_usn3][0.12..$@usn5])..] Desc Skip @usn6(Count ( * ) In True In @usn5)[None(#usn7 In True Contains 's_str' Contains $usn1 Where usn2 Contains $0 Contains .0)..Single(#usn7 In $999 In 1e1 Where _usn4 Contains `` Contains 1.e1)] Limit Extract(usn2 In 7[12] Where usn1 Starts With 00|`8esn` Contains Count(*) Contains $#usn7) Contains None(@usn6 In False Contains 0 Contains $`6esn` Where $usn2[0.e0]) Contains Extract(@usn6 In False Contains 0 Contains $`6esn` Where $usn2[`4esn`..9e12]|$`4esn`['s_str'..]) Where `1esn` Is Not Null Is Not Null Optional Match #usn8=(((`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[@usn6?:`7esn`|:`2esn`]->({#usn8:1e1 Is Not Null Is Not Null})-[?:@usn5|_usn3{`1esn`:`2esn` Is Null,`7esn`:`` =~.12}]-(`4esn` :#usn8:`1esn`{`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12}))),@usn5=(`5esn` {`2esn`:`1esn`[0.0..1e1][0x0..7],#usn8:.e0})"),
    octest:ct_string("Merge @usn5=(`5esn` {`2esn`:`1esn`[0.0..1e1][0x0..7],#usn8:.e0}) Remove (@usn5 :`6esn`:_usn3{`7esn`:`8esn`[..$#usn8],`3esn`:12.e12[0..0.12][123.654..9e12]})-[`6esn` *0Xa]-(usn1 :`1esn`:_usn4{_usn3:@usn6[999..$_usn3][0.12..$@usn5],`1esn`:9e12[..1e1][..'s_str']})-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]-(_usn3 {`8esn`:.e0[999..1000][1e1..$`8esn`],`1esn`:$`3esn`[$_usn4..0Xa]}).@usn5?,Any(`5esn` In `7esn`[$usn2..][$123456789..] Where 999[12.e12])._usn3?"),
    octest:ct_string("Delete 01 Ends With 123456789 Union With Distinct *,.0 Contains .e12 Contains 0 Skip .e1[..$`3esn`][..01] Where 9e12[_usn4..$`5esn`][_usn4...e1] Merge `5esn`=({usn2:.0 Starts With `1esn`,`2esn`:00 Contains Count ( * ) Contains 0x0})<-[_usn4?:@usn6|:`7esn`]->(_usn3 :`2esn`{@usn5:`4esn` Is Not Null Is Not Null})<-[`8esn`:usn1|`4esn` *0Xa{`6esn`:Count(*) In #usn8 In \"d_str\",`1esn`:$`1esn` Ends With 0X0123456789ABCDEF}]->(:`8esn`) On Create Set {usn1:$_usn4 Starts With $1000 Starts With 12}.@usn6! =[1e1 Is Not Null Is Not Null,``[$`3esn`],$`8esn` Is Not Null Is Not Null][..[$usn1 Ends With _usn4 Ends With `2esn`]][..Extract(usn2 In False[$usn1][0x0] Where .e1[usn2..$_usn3][.0..$#usn7])] On Create Set `5esn`+=All(#usn7 In 9e1[$`1esn`..] Where 12 =~usn1)[Extract(#usn7 In $999 In 1e1)..][1.e1..],`2esn` =False Starts With 0X7 Starts With 01234567 With Distinct *,0X7[`2esn`..] As `6esn`,$`1esn` Contains 1e1 Contains @usn6 As `3esn` Order By 0xabc In .12 In 0Xa Descending Limit [#usn8 In `7esn` Where @usn5 Contains 9e0] Contains [$usn1 Ends With _usn4 Ends With `2esn`] Union All Return Distinct *,$#usn7[..0Xa] As #usn8,0X7[`2esn`..] As `5esn` Order By $7[999][usn1] Asc Create ((usn1 :_usn4{`4esn`:`7esn` Is Null})<-[`8esn`?:`2esn`|`4esn` *01..123456789{`8esn`:$`4esn` Is Null Is Null,usn1:$1000 Starts With $`3esn` Starts With 0.e0}]->(:#usn7:`5esn`{_usn3:0x0[Count(*)..@usn6][Count(*)..0Xa]})) Merge ((`1esn` {_usn4:`8esn` Is Null})) On Create Set All(usn2 In False[$usn1][0x0] Where 0.0[usn1..]).`8esn`? =_usn4 Starts With 1000 Starts With $usn2,`7esn`+=12 In $usn1 In 7,Any(#usn7 In 9e0[$1000] Where 1e1 Contains 0.e0 Contains 9e1).`2esn`! ={_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}[..Single(@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str'])][..None(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $12[9e0..$999])] On Match Set @usn6+=0.0[..Count ( * )][..`1esn`],usn2 =1.e1 Starts With 9e12,Single(usn2 In 7[12] Where $@usn6 Ends With 12.e12 Ends With @usn5).@usn5! =0xabc[$999..][$usn1..]"),
    octest:ct_string("Unwind None(@usn5 In 9e0 Ends With $#usn8 Where `7esn`[$usn2..][$123456789..]) =~{`2esn`:7[12],usn1:.12[0X7..][12e12..]} =~Extract(#usn7 In True Contains 's_str' Contains $usn1 Where $`1esn` Starts With Count(*)|True[0xabc..01234567][$`8esn`..$@usn6]) As `6esn`"),
    octest:ct_string("Create `2esn`=(({_usn3:_usn3 Ends With 7 Ends With $`1esn`,``:$_usn4[$`5esn`][`7esn`]})-[:_usn4 *0..01]-(#usn8 :`2esn`{`1esn`:0x0 Starts With $`6esn`})) Merge ``=(((`7esn` :`2esn`{@usn6:$0[123.654..0.e0]})-[_usn3 *..07{@usn6:$`2esn`[..$`3esn`][..12e12]}]->(`1esn` {#usn7:$`1esn` Ends With 0X0123456789ABCDEF,`3esn`:.12 Starts With _usn3 Starts With $``})<-[usn1:_usn4]-(`` {_usn3:`5esn` Contains `7esn`}))) On Create Set `6esn`+=0x0[0X7] On Create Set `5esn` =`2esn` Starts With $`4esn`,`5esn`+={#usn7:12e12 In $`5esn`} Ends With {`6esn`:12 =~usn1,_usn3:`6esn`[$`8esn`][9e1]},Extract(_usn4 In 12e12 In 123456789 Where .e1 Starts With 12.e12 Starts With `2esn`|$@usn5 Is Null Is Null).@usn5! =Any(@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``) Contains [_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where .0 Is Null Is Null|`3esn`[0x0..]] Contains [999[12.e12],#usn8 Is Null Is Null,1.e1 =~$_usn4] Remove Any(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0 Ends With 12.0 Ends With `5esn`).`1esn`,Single(`3esn` In `2esn`[..01][..True]).``,{usn1:'s_str'[0..]}._usn3? Union All Unwind .0 Contains .e12 Contains 0 As _usn4 With  *,$`5esn` Is Not Null,usn2 Contains $0 Contains .0 Skip Extract(#usn7 In 9e0[$1000] Where $`1esn` Starts With Count(*)|9e0 Ends With $#usn8)[(`` :`5esn`{@usn5:123456789 =~@usn6})<-[:@usn5|_usn3{#usn7:$123456789 Starts With 0.12 Starts With Null,usn1:.e1[..$`3esn`][..01]}]-(#usn7 :`3esn`{`3esn`:@usn5[0.0..0X7],@usn5:$#usn7 Starts With $`2esn`})<-[:`1esn`|`3esn` *0Xa{_usn4:``[9e12][$999],#usn8:123.654 In 12}]-(`7esn` {``:9e1 Contains $999,``:$usn2[True..0X0123456789ABCDEF]}).._usn3(Distinct 0x0 Contains $`6esn` Contains `4esn`,usn2[1.e1])][(:@usn6{usn2:$123456789 Contains $#usn8 Contains ``,_usn3:`3esn`[..0X0123456789ABCDEF][..0x0]})<-[`7esn`?:usn1|`4esn`]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})<-[:_usn4]->(:usn2{@usn5:07 Ends With 9e12 Ends With `2esn`})..[#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[`8esn`]|9e1 Is Null]] Limit $`4esn`[`6esn`..$12] Where 0Xa[Count(*)..] Union Merge @usn5=(:#usn8:`1esn`{`3esn`:123.654[..0.e0][..'s_str']}) Remove [#usn7 In $999 In 1e1 Where `1esn`[0.12..][@usn6..]].@usn6!"),
    octest:ct_string("Optional Match usn2=((usn1 {_usn3:9e0[0X7..$`6esn`][123456789..0],`3esn`:123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]})-[:`6esn`|:#usn8{_usn4:0Xa Ends With $`3esn` Ends With $1000}]->(:`5esn`{`4esn`:0Xa[..Count ( * )][..$123456789]})),({`7esn`:`4esn` Is Not Null Is Not Null,`4esn`:`4esn` Ends With 12 Ends With .12})<-[`5esn`?:`7esn`|:`2esn` *0x0..]-(`4esn` :#usn7:`5esn`{@usn5:$`` Contains $`2esn` Contains $usn2}) Where .e1[usn2..$_usn3][.0..$#usn7] Return Distinct .e12 Starts With $7 Starts With .0,[$``[7],_usn3 Contains _usn4 Contains $@usn5] Starts With [`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]|usn2 =~7] Starts With Any(`3esn` In `2esn`[..01][..True] Where 12.e12 Contains #usn7 Contains $_usn4) As #usn7,01 Contains usn2 Contains 0X0123456789ABCDEF As `8esn` Order By 0Xa =~False =~@usn5 Descending,12.0 In 010 Ascending,`4esn`[123456789] Ascending Union All Detach Delete 07[999],Any(#usn7 In 9e0[$1000] Where 123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]) Contains [$`4esn` In 1.e1 In #usn7,usn1[False..]] Contains Extract(@usn5 In 9e0 Ends With $#usn8 Where $`3esn` In $usn2) Optional Match (:`3esn`{``:$@usn5 Is Null Is Null,`8esn`:.e1[..\"d_str\"][..$123456789]})<-[`7esn`:`4esn`|@usn5 *12..]->({`4esn`:.e1[..$`3esn`][..01]}),_usn4=((#usn8 {`5esn`:$12[$usn1..][Count(*)..],`7esn`:0e0[``..$1000][$7..12.e12]})-[`5esn`? *01234567..{`3esn`:usn2[`8esn`..][0X0123456789ABCDEF..],_usn3:$@usn6 In @usn6 In 1e1}]-(usn1 {``:`6esn` =~$_usn4 =~7,`7esn`:9e0[$1000]})) Where True[..#usn8] With Distinct 0.e0['s_str'..][01234567..] As `1esn`,None(#usn7 In $999 In 1e1 Where _usn3 Contains 9e12 Contains `8esn`)[..Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 0xabc In 123456789 In 0x0|Count(*)[..@usn6][..`7esn`])] As `3esn`,.0[$``..0X7] Skip 0x0[``..] Where $@usn5 Is Null Is Null"),
    octest:ct_string("Merge ((@usn6 {`7esn`:999 In 0e0})<-[? *1000..0X0123456789ABCDEF{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}]-(`6esn` {`2esn`:$`3esn` Ends With 01234567})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)) On Create Set Extract(_usn4 In 12e12 In 123456789 Where Count ( * ) Ends With $123456789).`8esn` =None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 9e12[$`5esn`..$123456789]) In Extract(@usn5 In 's_str'[0..] Where 07 Ends With 9e12 Ends With `2esn`|00[01234567][False]) In [12 =~usn1] Create ``=(`5esn` {`2esn`:`1esn`[0.0..1e1][0x0..7],#usn8:.e0}) Union Detach Delete $usn2[`2esn`..],`8esn`(Distinct #usn8 Is Not Null Is Not Null,`2esn` In 9e0 In 7) Starts With None(usn2 In 7[12] Where 123456789 =~12 =~'s_str') Match #usn7=(#usn8 :_usn3)-[`7esn`{#usn8:01 Is Null,`6esn`:#usn7[0]}]-({`2esn`:Count(*) Ends With usn1,`6esn`:1000 Ends With `7esn`})<-[:_usn3|:`7esn` *00..0Xa]-(#usn7 :`4esn`:`6esn`$usn2),(((:_usn4{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]})<-[`2esn`? *01..123456789]-(`2esn` :@usn6))) Where 999[123.654..$usn2][Count ( * )..0x0] Merge (((@usn6 :`2esn`{_usn3:$``[7],`7esn`:_usn3 Ends With 7 Ends With $`1esn`})<-[`3esn` *7..]->(`1esn` :@usn6{`6esn`:00[False..0e0],`6esn`:$usn2 =~1.e1 =~usn1})<-[? *01..123456789]-(usn1 :_usn4{`4esn`:`7esn` Is Null}))) On Match Set usn1(True Contains 's_str' Contains $usn1,.e0 Is Not Null Is Not Null).@usn5! ={usn2:_usn3[0x0]} In Extract(#usn7 In 9e0[$1000] Where $_usn3 Is Null|010 Starts With 0 Starts With 0.0) In {`7esn`:False[$`4esn`..]}"),
    octest:ct_string("With Distinct 0X0123456789ABCDEF In $usn2 In `4esn` Order By $0 Ends With $usn1 Ends With $_usn3 Desc Limit $123456789[12e12..9e0] Remove (_usn4 {_usn4:Null[..010][..1000],_usn3:.0 Is Null Is Null})<-[`7esn`?:usn1|`4esn`]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01}).usn2 Delete None(#usn7 In $999 In 1e1 Where 123456789 =~@usn6) =~Single(`3esn` In 9e1 Contains $999 Where .12 In `8esn` In $#usn8) =~(`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[`5esn`?{_usn4:$usn2 =~9e1}]->(`8esn` :#usn8:`1esn`{usn2:12.e12 Ends With $``,`2esn`:1e1 Contains 's_str' Contains `3esn`})-[`` *1000..0X0123456789ABCDEF]-(:usn1:`3esn`{_usn3:$`6esn`[1.e1][$_usn3]}),{``:`6esn` =~$_usn4 =~7,`7esn`:9e0[$1000]}[#usn7(Distinct $`1esn`[``][07])..None(@usn6 In 010[`5esn`] Where $`3esn` Ends With 01234567)] Union All Unwind $``[..\"d_str\"][..$#usn8] As @usn6 Union Create `3esn`=(usn1 :`7esn`{`7esn`:9e12 Starts With 1e1,_usn3:$`7esn`[$_usn4][.e0]}) Unwind $_usn3 Is Not Null As _usn3"),
    octest:ct_string("Match `3esn`=((:_usn3{_usn3:$`3esn`[.e1][_usn4]})-[`4esn`?:#usn8|:`3esn`{`3esn`:01 Is Null,`1esn`:123456789[12]}]-(:`5esn`)<-[ *01234567..]->(#usn8 :`8esn`)) Where 9e1 Starts With Count ( * ) Match (:_usn4)<-[`5esn` *0xabc]->(`` :`6esn`:_usn3)-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01}),`7esn`=((_usn3 :`7esn`)) Where .e12[@usn6..][010..] Optional Match ``=((usn1 {_usn3:9e0[0X7..$`6esn`][123456789..0],`3esn`:123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]})-[:`6esn`|:#usn8{_usn4:0Xa Ends With $`3esn` Ends With $1000}]->(:`5esn`{`4esn`:0Xa[..Count ( * )][..$123456789]})),`1esn`=((usn1 :_usn4{`4esn`:`7esn` Is Null})) Union All Merge usn2=(`3esn` {usn2:$usn2[`4esn`..9e12]})"),
    octest:ct_string("Unwind (#usn7 {_usn4:1.e1[`8esn`]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) =~Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12) =~{usn2:#usn8[`8esn`..]} As `5esn` Merge (({@usn6:010 Starts With 0 Starts With 0.0,_usn4:07[$`2esn`..9e12][$`4esn`..9e12]})<-[:@usn6|:`7esn` *0..01{``:`1esn`[0.0..1e1][0x0..7],usn2:01[`3esn`..][Count(*)..]}]->(`5esn` :``:usn2{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3})) Detach Delete {#usn7:usn1 In ``}[None(`3esn` In `2esn`[..01][..True])..Extract(@usn5 In 9e0 Ends With $#usn8 Where 0Xa[$`8esn`..][$_usn4..])] Union Optional Match (({`3esn`:_usn3[0x0],`3esn`:00[False..0e0]})<-[_usn4?:@usn6|:`7esn`]-({`3esn`:_usn3[0x0],`3esn`:00[False..0e0]})<-[_usn3?:_usn3|:`7esn`]->(`3esn` {`8esn`:`7esn` In 010 In usn1})) Where _usn3 Ends With 7 Ends With $`1esn`"),
    octest:ct_string("Merge ((:`6esn`:_usn3)) On Match Set `` =Extract(@usn5 In 's_str'[0..] Where 12e12 Is Not Null) =~[`3esn` In 9e1 Contains $999 Where _usn3[`2esn`..0X7][0.e0..$`3esn`]] With Distinct @usn5(Distinct 12e12 In 123456789,12.0 =~@usn6 =~$`2esn`)[`8esn`(123456789 =~$999)][`2esn`($`2esn`[..$`3esn`][..12e12])],Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where 12.e12 Starts With \"d_str\" Starts With 9e1|$@usn5 In $`6esn` In 12e12) Ends With (:`7esn`{#usn7:0 =~1.e1 =~$#usn7})<-[`1esn`:`8esn` *7..]->(`` {#usn8:.e12 Is Null Is Null,@usn6:`1esn` Is Not Null Is Not Null}),`1esn`($`4esn`[`4esn`][Count(*)],`2esn` Starts With $`7esn`) =~Extract(@usn5 In 9e0 Ends With $#usn8 Where .e0 Starts With $@usn6 Starts With $7) =~{`3esn`:_usn3[`2esn`..0X7][0.e0..$`3esn`]} Where False Is Null Union Merge `3esn`=(usn1 :`7esn`{`7esn`:9e12 Starts With 1e1,_usn3:$`7esn`[$_usn4][.e0]}) On Match Set _usn3+=#usn7[..07],(:`2esn`{`3esn`:9e1 Ends With Count(*) Ends With $7})-[#usn7?{`5esn`:.e12 Starts With $#usn8 Starts With False}]->(usn1 :`7esn`).`4esn` =1.e1[$`3esn`][0Xa],All(@usn5 In 's_str'[0..] Where `2esn`[..01][..True]).`2esn`! =`3esn`(#usn8 =~0.e0,1000[0e0][1e1])[[_usn3[0x0],1e1 In 0.0 In 0X0123456789ABCDEF]] On Create Set Filter(usn2 In False[$usn1][0x0] Where .e1[usn2..$_usn3][.0..$#usn7]).``! =12 Contains 01234567 Union Remove Single(`6esn` In $`6esn`[``..][Count(*)..] Where 0x0 Starts With $`6esn`).`4esn`,(`2esn` {``:$0 =~9e1 =~$`2esn`,`8esn`:`5esn`[..123.654][...e12]})<-[:`1esn`|`3esn`{`2esn`:$`3esn` Ends With 01234567}]->(_usn3 :`5esn`).`5esn`,({`7esn`:`8esn` Contains Count(*) Contains $#usn7})<-[_usn3:`3esn`{`5esn`:_usn4[0]}]->(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})-[#usn7?{`5esn`:.e12 Starts With $#usn8 Starts With False}]->({`1esn`:0X7 In $#usn7,_usn3:usn1 Contains 010}).`5esn` Return Distinct 999[12e12..$_usn4] Order By Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where $usn2 =~1.e1 =~usn1|123.654[$0..0X7][Null..#usn8])[(`1esn` {_usn4:`8esn` Is Null})<-[_usn4? *12..{`1esn`:$`6esn` Starts With .e12 Starts With $`1esn`,`3esn`:`8esn`[0.e0..]}]-(:`5esn`{`1esn`:0.e0})..][All(#usn7 In True Contains 's_str' Contains $usn1 Where usn2 Contains $0 Contains .0)..] Descending,0X7[.0] Asc,$`3esn`[..0X0123456789ABCDEF][..7] Descending Limit #usn7 =~9e12 Merge ((`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})) On Create Set #usn8 ={_usn4:``[9e12][$999],#usn8:123.654 In 12} Starts With Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0[0.0]) Starts With Filter(`6esn` In $`6esn`[``..][Count(*)..]) On Create Set [`5esn` In `7esn`[$usn2..][$123456789..] Where $`5esn` =~$0 =~``|.12 In `8esn` In $#usn8]._usn4? =7 =~0.12,`6esn` =Single(`5esn` In `7esn`[$usn2..][$123456789..] Where 12e12 Is Not Null) Is Not Null Is Not Null,Any(#usn7 In $999 In 1e1 Where 0X7['s_str'..][01..]).`3esn`! =(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})-[? *0Xa{usn1:`3esn`[0x0..]}]->(:`5esn`{`1esn`:0.e0}) Is Not Null Is Not Null"),
    octest:ct_string("Remove [Null[..010][..1000]]._usn4!"),
    octest:ct_string("Unwind True Contains 's_str' Contains $usn1 As _usn4 Merge @usn5=(:`7esn`)<-[`1esn`?:usn1|`4esn` *..010]-(usn1 :_usn4{`4esn`:`7esn` Is Null}) With Distinct $_usn4 Is Null Is Null,usn2 Starts With .0 Order By 9e1[$#usn8][$1000] Descending Limit #usn7 =~9e12"),
    octest:ct_string("Detach Delete $usn2[`2esn`..$`1esn`],12 Ends With True Ends With @usn6 With Distinct `2esn`($`2esn`[..$`3esn`][..12e12])[usn1($0[123.654..0.e0])..'s_str'][.e12..Single(#usn7 In $999 In 1e1 Where _usn4 Is Not Null Is Not Null)] As `3esn`,usn1 Ends With 0.0 Order By $`3esn`[$_usn4..0Xa] Desc,$`1esn` Ends With 0X0123456789ABCDEF Ascending,$@usn5 Ends With @usn5 Ends With 0xabc Descending Where #usn8 =~0.e0 Merge #usn7=({usn2:.12[0X7..][12e12..],`6esn`:$`4esn`[`6esn`..$12]})-[? *12..{usn2:$`8esn`[123456789..][$@usn5..]}]->(`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})"),
    octest:ct_string("Create `7esn`=(`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})-[`3esn`]->(:@usn5{#usn7:12e12 In $`5esn`}),_usn3=((:``:usn2{`5esn`:1.e1[`8esn`],`1esn`:.e0})-[`3esn`:`2esn`|`4esn`]->(`` {``:$@usn6 Ends With 12.e12 Ends With @usn5,`2esn`:$`3esn` Ends With 01234567})<-[`6esn`?:_usn3|:`7esn` *..010]->(:_usn3{_usn4:.e1[7..][9e0..]})) Union Remove #usn8(Distinct 0X0123456789ABCDEF Contains 12e12 Contains 12.e12,Count(*) Starts With usn2 Starts With `7esn`).usn1,Single(@usn5 In 9e0 Ends With $#usn8 Where 0Xa[$`8esn`..][$_usn4..]).#usn7?,Any(_usn4 In 12e12 In 123456789 Where `3esn`[7..0.e0][0.0..123456789]).`8esn`! Return $`4esn`[`4esn`][Count(*)] As `8esn`,$usn1[`2esn`..][$`2esn`..] As _usn3,_usn4[`7esn`] As usn2 Skip 01[..$`8esn`][..9e0] Limit 0X7[.0] Union With  *,1.e1 Ends With $#usn7 As usn2,@usn5[01][@usn5] Skip $`5esn` Limit (`7esn` :`2esn`{`4esn`:0[1e1][$usn1],usn2:`8esn`[..$#usn8]})-[:`6esn`|:#usn8{``:`1esn` Starts With 0xabc Starts With $usn2}]-(_usn3 :`2esn`{@usn5:`4esn` Is Not Null Is Not Null})-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01}) Is Not Null"),
    octest:ct_string("Match usn2=(:#usn8:`1esn`$`7esn`),`4esn`=(({#usn7:$@usn6[$0..9e12][.e12..Null]})) Where $``[..$#usn7][..`6esn`] Match (:`7esn`{#usn8:$999 Ends With .e0,_usn4:`4esn`[\"d_str\"]['s_str']})<-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(`1esn` :`6esn`:_usn3{#usn7:0x0[$0][7]}) Union Optional Match ((_usn4 :#usn7:`5esn`)-[`4esn`:`1esn`|`3esn` *12..]->({`7esn`:9e12 =~@usn6})),((:`5esn`{`4esn`:$`5esn` =~$0 =~``,_usn3:$``[..$#usn7][..`6esn`]})<-[`1esn`:`8esn` *7..]-(`8esn` :@usn5{`5esn`:_usn3 In $`8esn` In @usn6,_usn4:$@usn6 Ends With 12.e12 Ends With @usn5})<-[?:usn2{@usn5:999[..`1esn`][..07],_usn4:Count ( * ) Ends With $123456789}]->(`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})) Where Count ( * )[$`5esn`..][$7..] Merge #usn7=(((:usn1:`3esn`{_usn3:$`6esn`[1.e1][$_usn3]})-[:`` *123456789..{`1esn`:`8esn` Is Not Null Is Not Null}]-(#usn8 :`2esn`)<-[ *00..0Xa]->(`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null}))) On Create Set [`6esn` In $`6esn`[``..][Count(*)..] Where 0x0[$0][7]|$`4esn`[`8esn`]].usn1 =Any(_usn4 In 12e12 In 123456789 Where _usn3 In $`8esn` In @usn6)[Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789])][All(@usn5 In 9e0 Ends With $#usn8)] On Match Set Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn` Contains .e0 Contains 0Xa).@usn6! =0.e0 Is Not Null Is Not Null,`1esn` =07 In `6esn`"),
    octest:ct_string("Merge `1esn`=((`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})-[?$7]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0}))"),
    octest:ct_string("Remove Any(`3esn` In `2esn`[..01][..True] Where $0 =~9e1 =~$`2esn`).usn1 With Distinct Filter(#usn7 In True Contains 's_str' Contains $usn1 Where `2esn`[..$_usn3]) In ({_usn3:_usn3 Ends With 7 Ends With $`1esn`,``:$_usn4[$`5esn`][`7esn`]})-[? *12..{usn2:$`8esn`[123456789..][$@usn5..]}]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]})<-[_usn4? *12..{`1esn`:$`6esn` Starts With .e12 Starts With $`1esn`,`3esn`:`8esn`[0.e0..]}]-({#usn8:.e12 Is Null Is Null,@usn6:`1esn` Is Not Null Is Not Null}) In Any(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 0xabc In 123456789 In 0x0) As `2esn`,1e1 Contains 12.0 As `1esn` Order By $999 Is Null Is Null Descending,Single(#usn7 In 9e0[$1000] Where $123456789[...12][..@usn6])[Filter(@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str'])..] Descending,.e12[0Xa..] Descending Where 9e1[`1esn`..0][999..1e1] Union Return Distinct *,0e0 Ends With 07 Ends With $`8esn` As `6esn` Order By {`4esn`:999 In 0e0,`6esn`:0.e0['s_str'..][01234567..]} Contains Single(`8esn` In 123456789 =~@usn6 Where 12.e12 Ends With `` Ends With 0) Ascending,$`4esn` In 1.e1 In #usn7 Desc Skip 0X0123456789ABCDEF In $usn2 In `4esn` Limit Extract(`3esn` In `2esn`[..01][..True] Where 0.0 Is Null Is Null|$usn2[0.e0])[{usn2:@usn5 Is Null,`8esn`:$@usn6 Ends With 123456789 Ends With 12.0}..] Remove [12.0 Is Null,.e1[..\"d_str\"][..$123456789]].`2esn`?,None(usn2 In False[$usn1][0x0] Where `2esn`[..01][..True])._usn4!,None(usn2 In 7[12] Where 9e1 Is Not Null Is Not Null).``! Remove `4esn`:`8esn`,[`1esn`].#usn8?,All(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where `1esn`[0.12..][@usn6..]).usn2!"),
    octest:ct_string("Match ((#usn8 :_usn3)<-[`8esn`?:#usn7|@usn5{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3}]-(`` :usn1:`3esn`)),((:`4esn`:`6esn`{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7})<-[`8esn`?:`5esn`|:usn2 *01..123456789{`7esn`:`6esn`,`4esn`:'s_str' Starts With 9e0 Starts With usn2}]->({@usn6:12.e12 Contains #usn7 Contains $_usn4,usn2:$`5esn` =~$0 =~``})-[#usn7 *01..123456789]->(:`6esn`:_usn3{``:usn1 Ends With 9e0 Ends With 9e0,`5esn`:$`7esn`[.e1][12.0]})) Where Count ( * )[@usn6] Union All Unwind $999[0Xa..][9e1..] As _usn4 Union Remove (:@usn5{usn2:$`3esn` Contains $`1esn`})<-[``:`4esn`|@usn5 *0xabc{#usn8:9e1 Contains $999,`5esn`:0e0[01][$`7esn`]}]-(`2esn` :@usn5)-[`2esn`? *12..{_usn3:$`2esn` Is Null}]->({usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]}).`2esn`?,_usn4(Distinct True Contains 0x0 Contains $_usn3).`3esn`,None(#usn7 In 9e0[$1000] Where 00[12..$`6esn`]).`7esn`? Detach Delete All(#usn7 In $999 In 1e1 Where 1.e1 In 1000 In _usn3) Contains (`6esn` :`8esn`{@usn6:12.e12 Contains #usn7 Contains $_usn4})-[`8esn`{`7esn`:9e12 Starts With 1e1}]-(_usn3 :_usn4) Contains [`8esn` Is Not Null Is Not Null,12 Starts With #usn7 Starts With 0Xa,.0 Starts With `1esn`],usn2 Ends With $`4esn` Return 0.e0[..$7] As _usn3,0xabc =~@usn5 =~$usn1 Skip $@usn6[00] Limit `2esn`(0e0 =~0Xa =~$999,@usn5 Contains 9e0)[(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[usn2? *0..01{`6esn`:#usn8 Is Null}]->(`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12})..][Any(`3esn` In `2esn`[..01][..True] Where 0.e0[..$7])..]"),
    octest:ct_string("Remove (@usn6 :`2esn`{_usn3:$``[7],`7esn`:_usn3 Ends With 7 Ends With $`1esn`})-[@usn6?{`4esn`:12.0 Starts With .12 Starts With `6esn`,#usn8:0.0 Is Null Is Null}]->(_usn3 :`3esn`{_usn3:01[`8esn`..9e12][.12..0]})<-[`7esn`:#usn7|@usn5*{`8esn`:$`3esn`[$_usn4..0Xa]}]-(:_usn4{_usn3:$#usn7[..0Xa],@usn5:12e12 In 123456789}).@usn5?,None(`8esn` In 123456789 =~@usn6 Where $usn1)._usn3! Unwind $123456789 Starts With 0.12 Starts With Null As #usn7 Unwind `1esn`($`4esn`[`4esn`][Count(*)],`2esn` Starts With $`7esn`) =~Extract(@usn5 In 9e0 Ends With $#usn8 Where .e0 Starts With $@usn6 Starts With $7) =~{`3esn`:_usn3[`2esn`..0X7][0.e0..$`3esn`]} As _usn3"),
    octest:ct_string("Unwind $12 Starts With $0 Starts With $`8esn` As @usn5 Return *,1e1 Contains 0.e0 Contains 9e1,`1esn` Starts With 9e1 As `6esn` Order By 010 Contains .e1 Asc,(:`6esn`:_usn3{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]})<-[#usn7 *01..123456789]->(`6esn` :usn1:`3esn`) Ends With Extract(#usn8 In `7esn` Where 9e12[..1e1][..'s_str']) Ends With [_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 123.654 Is Not Null|$`2esn`[.0..][0.0..]] Descending Union All Remove (@usn5 :`6esn`:_usn3{`7esn`:`8esn`[..$#usn8],`3esn`:12.e12[0..0.12][123.654..9e12]})-[`6esn` *0Xa]-(usn1 :`1esn`:_usn4{_usn3:@usn6[999..$_usn3][0.12..$@usn5],`1esn`:9e12[..1e1][..'s_str']})-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]-(_usn3 {`8esn`:.e0[999..1000][1e1..$`8esn`],`1esn`:$`3esn`[$_usn4..0Xa]}).@usn5?,Any(`5esn` In `7esn`[$usn2..][$123456789..] Where 999[12.e12])._usn3? Union All Create ((:_usn4{`4esn`:.e1 In 123456789})<-[ *999..{`3esn`:123456789 =~$999,_usn4:`4esn` Is Not Null Is Not Null}]-(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})) With Distinct (#usn7 {_usn4:1.e1[`8esn`]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) =~Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12) =~{usn2:#usn8[`8esn`..]},9e1[$#usn8][$1000] As `5esn`,$usn1"),
    octest:ct_string("Optional Match `8esn`=(((`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null})-[`5esn`?:`7esn`|:`2esn` *0x0..]-(:_usn4{`1esn`:#usn7 Contains $0 Contains $usn2,`4esn`:999 Ends With $`` Ends With 0X0123456789ABCDEF})<-[? *12..{usn2:$`8esn`[123456789..][$@usn5..]}]->(:`1esn`:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null}))) Merge ((:`3esn`{`7esn`:0.e0['s_str'..][01234567..]})<-[#usn8 *0x0..]->(_usn3 :usn2{#usn8:$`2esn` Is Null,_usn3:123.654 Is Not Null})<-[?:usn1|`4esn` *1000..0X0123456789ABCDEF{`6esn`:.e0[999..1000][1e1..$`8esn`],`4esn`:00 Ends With `` Ends With 12.e12}]-({`1esn`:usn2 Contains $0 Contains .0,_usn4:$@usn6[.0..][0e0..]})) On Create Set @usn6+=7 Ends With 01234567 Ends With 0Xa,`2esn` =0Xa =~False =~@usn5"),
    octest:ct_string("Create (`6esn` {`3esn`:$`2esn`[0..123456789][``..`1esn`],`7esn`:$0[0Xa..$123456789]}),`7esn`=((:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})<-[`2esn`? *..07{`2esn`:`3esn`[0x0..]}]->(`5esn` )) With  *,0.0[$@usn5.._usn4] As `1esn`,07 Is Null As #usn7 Order By 12.e12 Contains `6esn` Ascending,[$`3esn` Ends With 01234567][..{`3esn`:`6esn` Starts With `6esn`}][...e1] Asc,Extract(`3esn` In `2esn`[..01][..True] Where 00[01234567][False]|$`3esn` Ends With 01234567) Starts With (_usn4 :_usn4)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07}) Starts With Extract(@usn6 In 010[`5esn`] Where $`2esn` Starts With `4esn` Starts With $usn1) Asc Limit 9e1 With  *,1.e1 =~$_usn4,9e12 Contains $_usn3 Contains \"d_str\" As @usn5 Order By `2esn`($`2esn`[..$`3esn`][..12e12])[usn1($0[123.654..0.e0])..'s_str'][.e12..Single(#usn7 In $999 In 1e1 Where _usn4 Is Not Null Is Not Null)] Desc,Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where $usn2 =~1.e1 =~usn1|123.654[$0..0X7][Null..#usn8])[(`1esn` {_usn4:`8esn` Is Null})<-[_usn4? *12..{`1esn`:$`6esn` Starts With .e12 Starts With $`1esn`,`3esn`:`8esn`[0.e0..]}]-(:`5esn`{`1esn`:0.e0})..][All(#usn7 In True Contains 's_str' Contains $usn1 Where usn2 Contains $0 Contains .0)..] Descending,$@usn5 Descending Where `6esn`[$1000][`3esn`] Union All Return 999 In #usn8 In $``,$1000 Starts With $`3esn` Starts With 0.e0 As @usn6,[_usn3 In _usn3 Contains _usn4 Contains $@usn5] Contains [_usn4[$usn1..01234567][123.654..`5esn`]] Contains `4esn`(Distinct 07 In `6esn`) As `5esn` Order By [@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str']|$`3esn`[..0xabc][..$7]] Is Null Ascending Skip [`8esn`[..$#usn8],1.e1 Starts With 9e12] Ends With [`6esn` In $`6esn`[``..][Count(*)..]|.e1[12.0..]] Ends With Any(usn2 In 7[12]) Limit Count(*)[9e12..12.0]"),
    octest:ct_string("Delete `8esn` In $1000 Delete `1esn` Contains $999 Contains 0.0,[#usn7 In $999 In 1e1 Where 0X7['s_str'..][01..]] Contains [@usn6 In False Contains 0 Contains $`6esn` Where `1esn` Starts With 0xabc Starts With $usn2] Contains Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where 999 In #usn8 In $``|True[0xabc..01234567][$`8esn`..$@usn6]) Union With Distinct _usn3[0x0],$@usn6 Is Null Is Null As `5esn` Where $`8esn` Is Not Null Is Not Null"),
    octest:ct_string("Unwind $`5esn`[$`6esn`][`2esn`] As _usn4 Merge `3esn`=((`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`})) With  *,0.e0 =~00 As `3esn` Order By 's_str'[0x0..1.e1] Asc,usn1[False..`5esn`][$1000..$12] Ascending Where 9e1[$#usn8][$1000] Union Return Count ( * ) In True In @usn5 As `2esn`,$_usn3[$12] Limit `8esn`[0.e0..] Return Distinct *,0e0 Ends With 07 Ends With $`8esn` As `6esn` Order By {`4esn`:999 In 0e0,`6esn`:0.e0['s_str'..][01234567..]} Contains Single(`8esn` In 123456789 =~@usn6 Where 12.e12 Ends With `` Ends With 0) Ascending,$`4esn` In 1.e1 In #usn7 Desc Skip 0X0123456789ABCDEF In $usn2 In `4esn` Limit Extract(`3esn` In `2esn`[..01][..True] Where 0.0 Is Null Is Null|$usn2[0.e0])[{usn2:@usn5 Is Null,`8esn`:$@usn6 Ends With 123456789 Ends With 12.0}..] Create `1esn`=((@usn6 {`8esn`:@usn5 Starts With $`3esn`,_usn4:`6esn` Is Null Is Null})-[:``{``:.0[$``..0X7]}]->(:@usn6{`7esn`:$`6esn`[``..][Count(*)..]})-[ *..07]->(`4esn` {``:.e1 Starts With 12.e12 Starts With `2esn`})),`6esn`=((#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})<-[``:`4esn`|@usn5 *0xabc{#usn8:9e1 Contains $999,`5esn`:0e0[01][$`7esn`]}]-(_usn3 :`6esn`:_usn3{`6esn`:0.0 Is Not Null,`6esn`:$`8esn`[..True][.._usn4]}))"),
    octest:ct_string("Detach Delete Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|0 Ends With 12.e12 Ends With usn2)[..123.654][..Any(#usn7 In $999 In 1e1 Where `4esn`[$_usn3..$`7esn`])],123.654 Contains @usn5 Contains $`5esn` Union With Distinct *,`5esn`[..123.654][...e12],12e12 =~$`7esn` Skip 0 =~1.e1 =~$#usn7 Remove {`4esn`:0.0 Contains #usn7,`1esn`:$999[``]}.`5esn`? Merge (:`5esn`{`4esn`:$`5esn` =~$0 =~``,_usn3:$``[..$#usn7][..`6esn`]})<-[#usn8? *1000..0X0123456789ABCDEF{`7esn`:Count ( * )[$`5esn`..][$7..],`6esn`:`6esn` Ends With _usn4 Ends With False}]->(`8esn` :@usn5{`5esn`:_usn3 In $`8esn` In @usn6,_usn4:$@usn6 Ends With 12.e12 Ends With @usn5})-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]->(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]}) On Match Set _usn3+=.e0 Ends With $#usn7 Ends With False On Match Set `2esn` =9e1 Ends With Count(*) Ends With $7 Union All Create `4esn`=(`` {`8esn`:@usn5 Starts With $`3esn`,_usn4:`6esn` Is Null Is Null})<-[`7esn`:`2esn`|`4esn`{_usn4:.e1[7..][9e0..]}]-(usn2 :usn1:`3esn`{`3esn`:`2esn` Is Null})<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(:`5esn`{#usn8:$``[True],`1esn`:@usn5 Is Null}) Detach Delete 12 Starts With $123456789 Starts With .e12"),
    octest:ct_string("Merge ((:#usn7:`5esn`{`2esn`:12.e12 Contains 9e1,`5esn`:.e1 Starts With 12.e12 Starts With `2esn`})<-[`2esn`?:usn1|`4esn` *00..0Xa]->(:#usn7:`5esn`{_usn3:0x0[Count(*)..@usn6][Count(*)..0Xa]})<-[:`2esn`|`4esn` *1000..0X0123456789ABCDEF]-(usn2 :`6esn`:_usn3{@usn5:$0[0Xa..$123456789]})) On Match Set `1esn`:@usn5,All(@usn5 In 's_str'[0..] Where `2esn`[..01][..True]).`2esn`! =`3esn`(#usn8 =~0.e0,1000[0e0][1e1])[[_usn3[0x0],1e1 In 0.0 In 0X0123456789ABCDEF]],`2esn`+=$_usn4[01..][$_usn4..] On Match Set #usn7+=.e0[..9e12][..07],`4esn`(True[$_usn3..],$999[``]).usn2 =123456789 Is Null Is Null,@usn5 =01[07..][1.e1..] Remove Filter(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 1e1 Contains 0.e0 Contains 9e1).`5esn`! With Distinct $`1esn`[Null][True] As usn2,Count ( * )[9e12] Skip [`8esn`[0.e0..],1e1 Contains 's_str' Contains `3esn`] In [`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]] Limit 0X7[0.12..] Where 0e0[01][$`7esn`] Union All Unwind #usn8(1000[12e12][`5esn`],9e1 Contains 12)[Extract(#usn8 In `7esn` Where $`5esn` In _usn3 In 0.0)..`1esn`(Distinct `3esn`[7..0.e0][0.0..123456789],`1esn` Starts With 0xabc Starts With $usn2)][Filter(`6esn` In $`6esn`[``..][Count(*)..] Where 9e0[Count(*)..0.12][$`1esn`..12.0])..Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12)] As @usn6 Remove None(`5esn` In 0X7 In $#usn7 Where usn1 =~$`7esn`).`3esn`!,Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $123456789 In 0.12)._usn3?,(:`3esn`{#usn7:$#usn7 In $@usn5 In $`1esn`})<-[:`8esn` *0X7..]->(`2esn` :`6esn`:_usn3{usn2:0e0 =~0Xa =~$999,`4esn`:@usn6[9e12]}).`6esn`? With  *,count(Distinct $@usn6 Ends With 123456789 Ends With 12.0,$`2esn`[.0..][0.0..]) Is Not Null Is Not Null Order By .e0 Starts With $@usn6 Starts With $7 Descending Skip [$12[$usn1..][Count(*)..],usn2[1.e1],123456789[12]] Ends With [`5esn`[$`7esn`..$@usn5],$#usn7[..9e0][..123.654],1.e1 Is Null Is Null] Ends With Extract(`3esn` In 9e1 Contains $999 Where _usn4[0]|12 Starts With #usn7 Starts With 0Xa) Union Unwind Filter(`3esn` In 9e1 Contains $999 Where .e0 Is Not Null Is Not Null) Is Not Null Is Not Null As usn2 With Distinct *,0xabc Is Null Is Null Skip $7 Ends With Count ( * ) With Distinct 0.e0['s_str'..][01234567..] As `7esn`,Single(_usn4 In 12e12 In 123456789 Where 0e0 =~7 =~12.0) Starts With Extract(#usn7 In 9e0[$1000] Where 123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]|9e12 =~@usn6),[#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`]][[`2esn` Is Null]][Extract(#usn7 In $999 In 1e1|01234567[Null..$_usn3])] Skip $`6esn`[1.e1][$_usn3] Limit usn1 Is Not Null"),
    octest:ct_string("Delete [`3esn` In `2esn`[..01][..True] Where $0 Ends With $usn1 Ends With $_usn3] In [12e12 In 123456789,`1esn`] In All(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789]),True[..#usn8],0.12[0Xa][$`7esn`] Union With Distinct [`5esn`[$`7esn`..$@usn5],$#usn7[..9e0][..123.654],1.e1 Is Null Is Null] Ends With Any(`6esn` In $`6esn`[``..][Count(*)..] Where 07 Contains `3esn` Contains `7esn`) Order By None(`8esn` In 123456789 =~@usn6 Where True[`3esn`]) Is Not Null Is Not Null Desc Skip {`4esn`:999 In 0e0,`6esn`:0.e0['s_str'..][01234567..]} Contains Single(`8esn` In 123456789 =~@usn6 Where 12.e12 Ends With `` Ends With 0) Limit `6esn` Is Null Is Null Merge (`2esn` :`1esn`:_usn4)-[?*..]-({`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}) On Create Set @usn6+=$#usn7 Ends With 's_str' Ends With 0X7,`6esn` ={`3esn`:12 Starts With #usn7 Starts With 0Xa} Is Null Is Null,usn2 =$@usn5 Ends With @usn5 Ends With 0xabc With Distinct $12 Starts With $0 Starts With $`8esn`,9e1[usn1..0x0][12.e12..12.0] As usn1,$``[..\"d_str\"][..$#usn8] As `6esn` Union Remove (:#usn8:`1esn`{usn2:$`7esn`[.e1][12.0],``:$`1esn` Contains 1e1 Contains @usn6})-[`` *1000..0X0123456789ABCDEF]-(`` :`7esn`)<-[?{`6esn`:$0[0Xa..$123456789],``:.e1[..\"d_str\"][..$123456789]}]-(:usn2{`6esn`:#usn7[$`3esn`..$1000][0.0..`2esn`],``:010 Starts With 0 Starts With 0.0}).`4esn`!,Extract(`5esn` In 0X7 In $#usn7 Where @usn6 Is Not Null Is Not Null).@usn5?,Any(usn2 In False[$usn1][0x0] Where 010 Starts With 0 Starts With 0.0).#usn7!"),
    octest:ct_string("Unwind 0x0[..9e0] As @usn6 Create (_usn4 :`6esn`:_usn3)-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-({`6esn`:9e12 =~@usn6}),#usn8=(:@usn6{@usn6:010 Starts With 0 Starts With 0.0,_usn4:07[$`2esn`..9e12][$`4esn`..9e12]}) Union All With Distinct Any(#usn7 In 9e0[$1000] Where 123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]) Contains [$`4esn` In 1.e1 In #usn7,usn1[False..]] Contains Extract(@usn5 In 9e0 Ends With $#usn8 Where $`3esn` In $usn2) As #usn7 Order By Single(`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]) Is Not Null Is Not Null Asc,12.e12[..9e1][..$_usn3] Descending,True In (#usn8 :`6esn`:_usn3)<-[`2esn`?:_usn4{#usn8:$12[9e0..$999]}]->({``:.e1 Starts With 12.e12 Starts With `2esn`}) Descending Where $#usn7[..$`4esn`][..01] Match `3esn`=(_usn3 {`8esn`:_usn3[0x0],#usn8:$usn1 Contains 0}),((_usn3 {#usn7:12.e12 Ends With `` Ends With 0,``:$@usn6 In @usn6 In 1e1})-[_usn3?:`8esn` *1000..0X0123456789ABCDEF{@usn5:07 Is Not Null Is Not Null}]->(`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})) Where `5esn`[$`7esn`..$@usn5] Union All Delete `4esn`($_usn4 Starts With $1000 Starts With 12)[{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}],00[$`1esn`..][@usn6..],0.12 Starts With $`8esn` Starts With @usn5"),
    octest:ct_string("Return *,@usn5 Contains #usn8 Contains 12.0 As `6esn`,{_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}[..Single(@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str'])][..None(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $12[9e0..$999])] Skip 0.0 Is Null Is Null Return _usn3[`2esn`..0X7][0.e0..$`3esn`] As `7esn` Order By [usn2[12e12..]['s_str'..]] =~Single(`8esn` In 123456789 =~@usn6 Where $`4esn`[`4esn`][Count(*)]) Ascending,`4esn`[\"d_str\"]['s_str'] Ascending,.12 In `8esn` In $#usn8 Asc Skip None(@usn6 In 010[`5esn`] Where 123.654 In $`7esn`)[(`` {`7esn`:$#usn7[..0Xa]})<-[`1esn`?:usn1|`4esn` *00..0Xa]-(_usn4 :@usn5{usn1:$#usn7 Starts With 01234567 Starts With $0})<-[usn1? *01234567..{@usn5:01[`3esn`..][Count(*)..]}]->(`3esn` :`6esn`:_usn3{`4esn`:12.0 Starts With .12 Starts With `6esn`,#usn8:0.0 Is Null Is Null})..[False Contains 0 Contains $`6esn`,`1esn` Is Not Null Is Not Null]] Limit [0.e0[..$7],$usn2[True..0X0123456789ABCDEF],`2esn` =~.e12 =~0X0123456789ABCDEF] Contains Extract(#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[..$`8esn`][..Null]|@usn5 Contains #usn8 Contains 12.0) Return Distinct $`3esn`[$_usn4..0Xa] As #usn7,Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn` Contains .e0 Contains 0Xa) As `3esn`,$`5esn`[$`3esn`..] As `4esn` Limit $`` Is Not Null Is Not Null Union All Merge `7esn`=((:`1esn`:_usn4{_usn3:0x0 Contains $`6esn` Contains `4esn`,@usn6:0Xa In #usn7 In 's_str'})-[#usn8:#usn7|@usn5 *123456789..{@usn5:usn2[12.e12..]}]->(`` )<-[:`2esn`|`4esn` *12..]-(_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})) On Match Set `7esn`+=$`5esn` Is Not Null,Any(@usn5 In 9e0 Ends With $#usn8 Where $`3esn`[..0X0123456789ABCDEF][..7])._usn3 =.e12[`2esn`..010],`8esn` =Single(`5esn` In `7esn`[$usn2..][$123456789..] Where 12e12 Is Not Null) Is Not Null Is Not Null On Match Set @usn6 =999[..`1esn`][..07],`3esn`+=$@usn5[0.0][0X0123456789ABCDEF],`6esn`+=$usn1[1000][.12] Optional Match _usn4=({#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]}) Where 0x0[@usn6..][01..] Match ((#usn8 :_usn3)<-[`8esn`?:#usn7|@usn5{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3}]-(`` :usn1:`3esn`)),((:`4esn`:`6esn`{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7})<-[`8esn`?:`5esn`|:usn2 *01..123456789{`7esn`:`6esn`,`4esn`:'s_str' Starts With 9e0 Starts With usn2}]->({@usn6:12.e12 Contains #usn7 Contains $_usn4,usn2:$`5esn` =~$0 =~``})-[#usn7 *01..123456789]->(:`6esn`:_usn3{``:usn1 Ends With 9e0 Ends With 9e0,`5esn`:$`7esn`[.e1][12.0]})) Where Count ( * )[@usn6]"),
    octest:ct_string("Unwind Extract(@usn6 In False Contains 0 Contains $`6esn` Where $@usn6[$`8esn`..][123456789..]|.e1[usn2..$_usn3][.0..$#usn7]) As _usn4 Union All Detach Delete 0.e0 =~``,None(#usn8 In `7esn` Where 9e1 Starts With Count ( * ))[..Any(usn2 In 7[12] Where 9e1 Is Not Null Is Not Null)] Unwind 0.0 Is Null Is Null As #usn8 Union All Return Count ( * ) In True In @usn5 As `2esn`,$_usn3[$12] Order By $@usn6 =~0xabc =~$999 Descending,Null Ends With _usn4 Ends With 0.0 Asc,`3esn`(Distinct $123456789[...12][..@usn6])[{usn2:$`2esn` Is Null,#usn8:.0 Is Null Is Null}][#usn7(Distinct $@usn6 Is Not Null Is Not Null,``[7.._usn3])] Asc Skip usn2 =~7 Limit 0[@usn5..$#usn7] With  *,Extract(`6esn` In $`6esn`[``..][Count(*)..] Where $@usn5 Starts With `5esn` Starts With 01234567|0.e0[..$7]) Is Null Is Null Skip 0xabc In 123456789 In 0x0 Limit _usn4 Starts With 1000 Starts With $usn2 Where 123.654[$0..0X7][Null..#usn8] With Distinct 0e0[01][$`7esn`],'s_str'[0..] As `4esn`,Filter(@usn5 In 9e0 Ends With $#usn8 Where 07 Is Null) =~{#usn7:1000[12e12][`5esn`]} As _usn4 Skip 0x0[$0][7] Limit None(#usn7 In $999 In 1e1 Where 1000[12e12][`5esn`])[Any(`3esn` In `2esn`[..01][..True] Where $`3esn`[..0xabc][..$7])][$#usn7] Where $`7esn`[$_usn4][.e0]"),
    octest:ct_string("Unwind (#usn7 {_usn4:1.e1[`8esn`]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) =~Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12) =~{usn2:#usn8[`8esn`..]} As `4esn` Union Delete 12.e12 Ends With $``,{_usn4:`1esn` Is Not Null Is Not Null,@usn5:0.12[$0..$usn2]} Is Not Null Is Not Null,{#usn7:usn1 In ``}[None(`3esn` In `2esn`[..01][..True])..Extract(@usn5 In 9e0 Ends With $#usn8 Where 0Xa[$`8esn`..][$_usn4..])]"),
    octest:ct_string("Merge #usn7=((@usn5 {`5esn`:@usn6[9e12],`5esn`:@usn6[999..$_usn3][0.12..$@usn5]})<-[`2esn`:`8esn`{`7esn`:$`4esn` Is Null Is Null}]->(usn1 :@usn6)-[#usn7:#usn8|:`3esn`{`6esn`:0.e0[$`4esn`..`2esn`],_usn3:7[12]}]-(`8esn` :`8esn`)) On Match Set `1esn` =All(@usn6 In 010[`5esn`] Where $@usn5 Ends With @usn5 Ends With 0xabc)[Extract(#usn7 In 9e1[$`1esn`..] Where 123.654 In $`7esn`)..[12.0 Starts With .12 Starts With `6esn`]],count(Distinct $`3esn`[..0X0123456789ABCDEF][..7])._usn3! =1.e1 Is Null Is Null On Match Set `5esn`+=[`5esn` In 0X7 In $#usn7 Where 0.e0['s_str'..][01234567..]][(`6esn` {_usn4:$`5esn` Is Not Null Is Not Null})-[ *999..{`3esn`:123456789 =~$999,_usn4:`4esn` Is Not Null Is Not Null}]-(usn1 :_usn4{`4esn`:`7esn` Is Null})] Match `3esn`=((:#usn8:`1esn`$`7esn`)<-[`1esn` *999..{`1esn`:1e1 Contains 's_str' Contains `3esn`}]-(usn1 {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(#usn7 :``:usn2)),usn2=(`3esn` {usn2:$usn2[`4esn`..9e12]}) Optional Match `2esn`=(:#usn8:`1esn`$`7esn`) Where _usn4 Is Not Null"),
    octest:ct_string("Return (:`2esn`)-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})-[@usn6? *0X0123456789ABCDEF..{``:0xabc[..$1000][..`5esn`],``:$`1esn` Contains 1e1 Contains @usn6}]-(`5esn` :@usn5) Is Null Is Null,`7esn` Ends With $7 Ends With $@usn5 As `7esn`,Single(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`)[{`5esn`:`6esn`[$`8esn`][9e1]}] As `6esn` Order By 1000[12e12][`5esn`] Descending Skip {``:0.0 =~9e0 =~$0} Contains [@usn5 In 9e0 Ends With $#usn8 Where `7esn`[$usn2..][$123456789..]|0Xa[Count(*)..]] Limit .0[.e12..]"),
    octest:ct_string("Merge (:`5esn`{`4esn`:$`5esn` =~$0 =~``,_usn3:$``[..$#usn7][..`6esn`]})<-[#usn8? *1000..0X0123456789ABCDEF{`7esn`:Count ( * )[$`5esn`..][$7..],`6esn`:`6esn` Ends With _usn4 Ends With False}]->(`8esn` :@usn5{`5esn`:_usn3 In $`8esn` In @usn6,_usn4:$@usn6 Ends With 12.e12 Ends With @usn5})-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]->(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]}) On Match Set #usn7+=[#usn8 In `7esn` Where usn2[07..][.0..]|$usn1 Ends With _usn4 Ends With `2esn`] Contains (_usn3 {#usn7:1000[12e12][`5esn`]})-[`3esn`?:`3esn`]->(#usn8 :_usn3{_usn4:.e1[7..][9e0..]})-[? *..010{`2esn`:'s_str'[0..]}]->({`7esn`:1.e1 In 1000 In _usn3,`8esn`:010 Starts With $`` Starts With 0e0}) Contains Extract(`3esn` In `2esn`[..01][..True] Where usn1 In ``),@usn6:`8esn`,Any(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 12.0 Starts With $`2esn` Starts With .e1).`8esn`? =$`3esn`[$_usn4..0Xa] Unwind 0X7[..$`8esn`] As `1esn` With Distinct $@usn6[.0..][0e0..] Order By $`8esn` Is Not Null Is Not Null Descending,Null Ends With _usn4 Ends With 0.0 Ascending Limit .e0 Where 0.12[..$_usn3][..0Xa] Union With Distinct *,[$usn1[`2esn`..][$`2esn`..]] Contains Extract(usn2 In 7[12] Where $_usn3 Is Null|.e12 Is Null Is Null),$#usn7 Contains $`7esn` Contains .e12 As @usn5 Order By 0X0123456789ABCDEF[0X7..$`2esn`][$`5esn`..$usn2] Asc,`8esn` Is Null Desc Remove {``:.e12 Ends With 0Xa Ends With 0xabc}.usn2? Union All Remove `4esn`:`8esn`,[`1esn`].#usn8?,All(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where `1esn`[0.12..][@usn6..]).usn2! Match `3esn`=(`` :`6esn`:_usn3{_usn3:$`6esn`[1.e1][$_usn3]})-[_usn4?:`6esn`|:#usn8]->(#usn7 :`3esn`{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}),#usn7=(({@usn6:0x0[Count(*)..@usn6][Count(*)..0Xa],`7esn`:0.0 =~9e0 =~$0})-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-({`6esn`:9e12 =~@usn6})-[`5esn`?:`7esn`|:`2esn` *0x0..]-(:_usn4{`1esn`:#usn7 Contains $0 Contains $usn2,`4esn`:999 Ends With $`` Ends With 0X0123456789ABCDEF}))"),
    octest:ct_string("Delete $@usn5 Contains 7 Contains 7,12 Starts With \"d_str\" Starts With 00,$_usn3[_usn4..] Optional Match (usn2 :_usn4),`1esn`=((`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})-[?$7]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0})) Where 0e0[01][$`7esn`] Union All Remove [False[$`4esn`..],$#usn7[..0Xa]].usn1?,({`7esn`:`8esn` Contains Count(*) Contains $#usn7})<-[_usn3:`3esn`{`5esn`:_usn4[0]}]->(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})-[#usn7?{`5esn`:.e12 Starts With $#usn8 Starts With False}]->({`1esn`:0X7 In $#usn7,_usn3:usn1 Contains 010}).`5esn` Merge @usn6=((({`2esn`:9e12[$`5esn`..$123456789],`8esn`:$usn2 =~9e1})<-[_usn3:`3esn`{`5esn`:_usn4[0]}]->(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]-(`8esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07}))) On Match Set `1esn` =Filter(`8esn` In 123456789 =~@usn6 Where 123.654[`4esn`..12])[..Extract(#usn7 In $999 In 1e1 Where 1000[12e12][`5esn`])][..[@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``|.e0 =~Null]],#usn8(Distinct 12.0[$1000..][#usn7..],0xabc In Null).`2esn` =0.e0 Starts With usn1 With  *,0.e0 =~00 As `3esn` Order By 's_str'[0x0..1.e1] Asc,usn1[False..`5esn`][$1000..$12] Ascending Where 9e1[$#usn8][$1000]"),
    octest:ct_string("Remove {#usn8:`1esn`[usn1][0xabc],_usn3:$`6esn`[1.e1][$_usn3]}.`3esn`,{usn1:@usn6[9e12]}.`4esn`! Union All Optional Match (`7esn` :usn2{`3esn`:12.0 In 123.654 In _usn4}) Return Distinct _usn3 Is Not Null Is Not Null As `` Skip 0X7[..$`8esn`] Limit {@usn5:$@usn6 Is Not Null Is Not Null} Starts With [`3esn` In `2esn`[..01][..True] Where 0x0[usn1..usn1]] Starts With Extract(`3esn` In `2esn`[..01][..True] Where usn2[12.e12..]|0X7['s_str'..][01..]) Union Merge @usn5=(:#usn8:`1esn`{`3esn`:123.654[..0.e0][..'s_str']}) Remove [#usn7 In $999 In 1e1 Where `1esn`[0.12..][@usn6..]].@usn6!"),
    octest:ct_string("Delete `7esn`[$usn2..][$123456789..] Return $@usn6 Ends With 12.e12 Ends With @usn5 As usn2,``[usn1][`5esn`],`7esn`[..$`6esn`] Order By [#usn8 In `7esn` Where @usn5 Contains 9e0] Contains [$usn1 Ends With _usn4 Ends With `2esn`] Asc,(`5esn` :`4esn`:`6esn`)-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(#usn7 :``:usn2)[..Filter(#usn8 In `7esn`)] Desc Skip None(#usn7 In $999 In 1e1 Where 1000[12e12][`5esn`])[Any(`3esn` In `2esn`[..01][..True] Where $`3esn`[..0xabc][..$7])][$#usn7] Limit 0e0 Is Null Is Null Return Distinct *,count($`4esn`[`8esn`],`4esn` Is Not Null Is Not Null) =~Filter(@usn5 In 's_str'[0..] Where _usn3[0x0]),@usn6 Contains .12 Contains $usn1 As `6esn` Order By 12.0 =~@usn6 =~$`2esn` Ascending Skip 0.0 Is Not Null Limit Filter(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]) Is Not Null Is Not Null Union Match ({`1esn`:1.e1[`8esn`]})<-[#usn8?:`8esn`{`1esn`:999 In #usn8 In $``,`8esn`:False[$`4esn`..]}]->({usn1:$123456789 In 0.12}) Union All Delete [Count(*)[9e12..12.0]] Starts With [`5esn` In 0X7 In $#usn7 Where 123456789 =~$999|$`8esn` Is Not Null Is Not Null] Starts With [$usn2 Is Not Null Is Not Null,0 =~1e1] With Distinct (usn2 :usn1:`3esn`{`3esn`:`2esn` Is Null})<-[:`8esn` *999..{@usn6:`7esn` Ends With $7 Ends With $@usn5,``:0e0 Starts With 999 Starts With `2esn`}]->(`6esn` :#usn7:`5esn`)<-[usn1:`1esn`|`3esn`]->(`1esn` {#usn8:$#usn7[..9e0][..123.654],`5esn`:9e12 Starts With 1e1}) =~(`7esn` {#usn7:$@usn6 Ends With `1esn`})<-[#usn8 *0x0..]->(_usn3 :usn2{#usn8:$`2esn` Is Null,_usn3:123.654 Is Not Null})-[? *0X0123456789ABCDEF..]-(usn2 :_usn3) Order By `1esn` Contains $999 Contains 0.0 Ascending Limit 0.e0[1000.._usn4][.e1..usn1]"),
    octest:ct_string("Remove Any(@usn5 In 's_str'[0..] Where #usn7[0.12..])._usn3,[`6esn` In $`6esn`[``..][Count(*)..] Where @usn5[0.0..0X7]].``! Return Distinct *,Null[..010][..1000] As #usn7,9e12 Ends With 12e12 Ends With 12 As `` Order By 1000[$7..][_usn4..] Desc Skip $`3esn` Ends With 01234567 Limit 7 Ends With .12"),
    octest:ct_string("Merge `4esn`=({`8esn`:.e0[999..1000][1e1..$`8esn`],`1esn`:$`3esn`[$_usn4..0Xa]}) On Create Set #usn7+=Single(usn2 In 7[12] Where `7esn` Is Null)[..Single(`6esn` In $`6esn`[``..][Count(*)..] Where $7 In $usn1 In 999)][..Any(#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4)] On Match Set `2esn` =9e1 Ends With Count(*) Ends With $7"),
    octest:ct_string("With  (usn2 :usn1:`3esn`{`3esn`:`2esn` Is Null})<-[:`8esn` *999..{@usn6:`7esn` Ends With $7 Ends With $@usn5,``:0e0 Starts With 999 Starts With `2esn`}]->(`6esn` :#usn7:`5esn`)<-[usn1:`1esn`|`3esn`]->(`1esn` {#usn8:$#usn7[..9e0][..123.654],`5esn`:9e12 Starts With 1e1}) =~(`7esn` {#usn7:$@usn6 Ends With `1esn`})<-[#usn8 *0x0..]->(_usn3 :usn2{#usn8:$`2esn` Is Null,_usn3:123.654 Is Not Null})-[? *0X0123456789ABCDEF..]-(usn2 :_usn3),[$``[7],_usn3 Contains _usn4 Contains $@usn5] Starts With [`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]|usn2 =~7] Starts With Any(`3esn` In `2esn`[..01][..True] Where 12.e12 Contains #usn7 Contains $_usn4) As #usn7,`7esn` In 010 In usn1 Order By .e12[0Xa..] Descending,`5esn`[$`7esn`..$@usn5] Ascending,`5esn`[..True][..0.e0] Descending Union Remove (:#usn8:`1esn`{usn2:$`7esn`[.e1][12.0],``:$`1esn` Contains 1e1 Contains @usn6})-[`` *1000..0X0123456789ABCDEF]-(`` :`7esn`)<-[?{`6esn`:$0[0Xa..$123456789],``:.e1[..\"d_str\"][..$123456789]}]-(:usn2{`6esn`:#usn7[$`3esn`..$1000][0.0..`2esn`],``:010 Starts With 0 Starts With 0.0}).`4esn`!,Extract(`5esn` In 0X7 In $#usn7 Where @usn6 Is Not Null Is Not Null).@usn5?,Any(usn2 In False[$usn1][0x0] Where 010 Starts With 0 Starts With 0.0).#usn7!"),
    octest:ct_string("Detach Delete 12.e12[_usn4..$1000][$7..$999],$0[010..] Return Distinct `7esn`(Distinct `1esn` Starts With 0xabc Starts With $usn2)[({`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12})-[`6esn`?:@usn5|_usn3 *01234567..]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})..],$`6esn`[0e0..][010..] Skip Extract(@usn6 In False Contains 0 Contains $`6esn` Where $0 Ends With $usn1 Ends With $_usn3) Limit 1.e1 Starts With 9e12 Detach Delete Single(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where @usn6 In .12 In `3esn`) Contains {usn2:.12[123.654..],`2esn`:`8esn`[$`4esn`..$#usn8]} Contains All(#usn7 In $999 In 1e1 Where 9e12 Starts With 1e1)"),
    octest:ct_string("Optional Match (usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}),({#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})<-[ *..07{_usn3:0e0 =~7 =~12.0,usn2:123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]}]->(`4esn` :@usn5)<-[_usn4?:@usn6|:`7esn`]->({`6esn`:'s_str' Contains 12.e12 Contains $`4esn`}) Where True Contains 0x0 Contains $_usn3 Create usn1=((`` )<-[usn2?:`6esn`|:#usn8 *999..]-(`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})<-[?:usn2{usn2:@usn5 Is Not Null}]-(`7esn` {#usn8:False Starts With 0X7 Starts With 01234567})),((`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})) Remove Single(#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[..$`8esn`][..Null]).`8esn`!,Extract(@usn5 In 9e0 Ends With $#usn8 Where $`3esn`[..0X0123456789ABCDEF][..7]|#usn8 =~.e0).`2esn`?,{_usn3:$`1esn` In .e0,`5esn`:False Starts With 0X7 Starts With 01234567}.`3esn` Union All Create ((#usn7 {`1esn`:$`4esn` Is Null Is Null})<-[ *999..{`3esn`:123456789 =~$999,_usn4:`4esn` Is Not Null Is Not Null}]-(`6esn` :`8esn`)) Delete Count(*) Starts With usn2 Starts With `7esn`,$1000 Starts With $`7esn`"),
    octest:ct_string("Merge `7esn`=((:#usn8:`1esn`$`7esn`)<-[`1esn` *999..{`1esn`:1e1 Contains 's_str' Contains `3esn`}]-(usn1 {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(#usn7 :``:usn2)) On Create Set All(usn2 In False[$usn1][0x0] Where 0.0[usn1..]).`8esn`? =_usn4 Starts With 1000 Starts With $usn2,`7esn`+=12 In $usn1 In 7,Any(#usn7 In 9e0[$1000] Where 1e1 Contains 0.e0 Contains 9e1).`2esn`! ={_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}[..Single(@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str'])][..None(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $12[9e0..$999])] Merge (#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0})<-[?:`7esn`|:`2esn`]->(`1esn` :`3esn`{#usn7:12[..0e0][...e1]}) On Match Set `2esn` =`3esn`[..0X0123456789ABCDEF][..0x0] On Create Set `2esn` =$@usn5[0.0][0X0123456789ABCDEF],@usn6+=[`5esn` In 0X7 In $#usn7 Where 0.e0['s_str'..][01234567..]][(`6esn` {_usn4:$`5esn` Is Not Null Is Not Null})-[ *999..{`3esn`:123456789 =~$999,_usn4:`4esn` Is Not Null Is Not Null}]-(usn1 :_usn4{`4esn`:`7esn` Is Null})] Remove Any(#usn7 In 9e1[$`1esn`..] Where 1.e1[12.e12..]).@usn6?,@usn5(Distinct Count ( * ) Ends With $123456789).`6esn`? Union Return 00[$`1esn`..][@usn6..] As _usn4 Limit @usn5[$`6esn`..][$999..] Merge `6esn`=(((:`6esn`:_usn3{``:usn1 Ends With 9e0 Ends With 9e0,`5esn`:$`7esn`[.e1][12.0]})-[`3esn`?:`5esn`|:usn2{`7esn`:0X7['s_str'..][01..],`8esn`:0.e0[0X0123456789ABCDEF..]}]-(usn2 :usn1:`3esn`)-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->({usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})))"),
    octest:ct_string("With  *,1.e1 =~$_usn4,9e12 Contains $_usn3 Contains \"d_str\" As @usn5 Order By `2esn`($`2esn`[..$`3esn`][..12e12])[usn1($0[123.654..0.e0])..'s_str'][.e12..Single(#usn7 In $999 In 1e1 Where _usn4 Is Not Null Is Not Null)] Desc,Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where $usn2 =~1.e1 =~usn1|123.654[$0..0X7][Null..#usn8])[(`1esn` {_usn4:`8esn` Is Null})<-[_usn4? *12..{`1esn`:$`6esn` Starts With .e12 Starts With $`1esn`,`3esn`:`8esn`[0.e0..]}]-(:`5esn`{`1esn`:0.e0})..][All(#usn7 In True Contains 's_str' Contains $usn1 Where usn2 Contains $0 Contains .0)..] Descending,$@usn5 Descending Where `6esn`[$1000][`3esn`] Union All Remove ({@usn6:#usn7[`8esn`..usn1][$999..`7esn`]})-[usn2?:`3esn`]->(`8esn` :@usn6{`7esn`:0e0[999..$``]})-[?{_usn3:`4esn`[$_usn3..$`7esn`]}]-({usn2:.12[0X7..][12e12..],`6esn`:$`4esn`[`6esn`..$12]}).`7esn` Remove All(#usn7 In 9e0[$1000] Where 12e12 Starts With $0 Starts With $`2esn`).`8esn`?,``:@usn5,Single(`8esn` In 123456789 =~@usn6 Where ``[9e12][$999])._usn4! Merge ((@usn5 {usn2:.12[0X7..][12e12..],`6esn`:$`4esn`[`6esn`..$12]})-[?:`4esn`|@usn5 *0Xa]-(`6esn` {`3esn`:.0[$``..0X7],`3esn`:$usn2 Is Not Null Is Not Null})<-[:_usn3|:`7esn` *1000..0X0123456789ABCDEF]-(:_usn4{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]})) Union Optional Match (((`6esn` :`4esn`:`6esn`)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})<-[`4esn` *0Xa{@usn6:999 Starts With `2esn` Starts With .e1,`4esn`:$@usn5[..0xabc][..$`3esn`]}]->(@usn6 :``:usn2))),`7esn`=((`6esn` :`5esn`)<-[:`1esn`|`3esn` *0Xa{_usn4:``[9e12][$999],#usn8:123.654 In 12}]-(`5esn` :`4esn`:`6esn`)) Detach Delete Extract(@usn6 In 010[`5esn`] Where 00[$usn1..]|_usn3[$usn2..][$``..])[Any(#usn7 In 9e1[$`1esn`..] Where #usn7[0])],_usn4[$usn1..01234567][123.654..`5esn`],None(#usn7 In 9e0[$1000] Where $_usn3 Is Null) In [@usn5 In 's_str'[0..] Where $#usn8[12.e12..`8esn`][12.0..0.0]|`4esn` Ends With 12 Ends With .12] In [#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 12.e12 Starts With \"d_str\" Starts With 9e1|$#usn7 Contains $`7esn` Contains .e12]"),
    octest:ct_string("Unwind $12 Starts With $0 Starts With $`8esn` As usn2 Union Create _usn4=(:`5esn`{`4esn`:$`5esn` =~$0 =~``,_usn3:$``[..$#usn7][..`6esn`]})<-[#usn8? *1000..0X0123456789ABCDEF{`7esn`:Count ( * )[$`5esn`..][$7..],`6esn`:`6esn` Ends With _usn4 Ends With False}]->(`8esn` :@usn5{`5esn`:_usn3 In $`8esn` In @usn6,_usn4:$@usn6 Ends With 12.e12 Ends With @usn5})-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]->(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]}),((:`3esn`{`7esn`:0.e0['s_str'..][01234567..]})<-[#usn8 *0x0..]->(_usn3 :usn2{#usn8:$`2esn` Is Null,_usn3:123.654 Is Not Null})<-[?:usn1|`4esn` *1000..0X0123456789ABCDEF{`6esn`:.e0[999..1000][1e1..$`8esn`],`4esn`:00 Ends With `` Ends With 12.e12}]-({`1esn`:usn2 Contains $0 Contains .0,_usn4:$@usn6[.0..][0e0..]})) Return Distinct [#usn7 In $999 In 1e1 Where 0X7['s_str'..][01..]] Contains [@usn6 In False Contains 0 Contains $`6esn` Where `1esn` Starts With 0xabc Starts With $usn2] Contains Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where 999 In #usn8 In $``|True[0xabc..01234567][$`8esn`..$@usn6]) As usn2,#usn8 =~0.e0,$usn1 Limit 00 In @usn6 In 0 Merge `8esn`=(({_usn3:_usn3 Ends With 7 Ends With $`1esn`,``:$_usn4[$`5esn`][`7esn`]})-[:_usn4 *0..01]-(#usn8 :`2esn`{`1esn`:0x0 Starts With $`6esn`}))"),
    octest:ct_string("Unwind Filter(#usn7 In $999 In 1e1 Where 9e12[..1e1][..'s_str'])[..Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|0 Ends With 12.e12 Ends With usn2)][..None(#usn7 In $999 In 1e1 Where `1esn`[0.12..][@usn6..])] As usn2 Remove Filter(`6esn` In $`6esn`[``..][Count(*)..] Where 7[0e0..]).`8esn`!,`4esn`:usn2,(:`8esn`{@usn5:usn2 Ends With .e1 Ends With $`5esn`})<-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->(usn2 :`5esn`).`8esn`? Remove #usn7:`3esn`,Single(`6esn` In $`6esn`[``..][Count(*)..] Where 's_str' Starts With 1e1 Starts With $0).`4esn`?"),
    octest:ct_string("Create @usn5=(((:usn2{`6esn`:`4esn` Starts With 0e0,`8esn`:usn2[12e12..]['s_str'..]})<-[:`2esn`|`4esn` *12..]-(_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]}))),#usn7=(((:`6esn`:_usn3{``:usn1 Ends With 9e0 Ends With 9e0,`5esn`:$`7esn`[.e1][12.0]})-[`3esn`?:`5esn`|:usn2{`7esn`:0X7['s_str'..][01..],`8esn`:0.e0[0X0123456789ABCDEF..]}]-(usn2 :usn1:`3esn`)-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->({usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]}))) Union All With  0X7[`2esn`..] As `6esn`,Single(usn2 In False[$usn1][0x0])[All(@usn6 In 010[`5esn`] Where 00[1.e1..])][(:`2esn`{``:07[$`2esn`..9e12][$`4esn`..9e12],`3esn`:$`6esn` Starts With .e12 Starts With $`1esn`})-[?{`5esn`:$`2esn`[.0..][0.0..]}]->(:usn2{@usn5:07 Ends With 9e12 Ends With `2esn`})-[`` *1000..0X0123456789ABCDEF]->(:_usn4{`8esn`:01234567[Null..$_usn3]})] Order By ``[$`3esn`] Asc,[1000[0e0][1e1],12.0 Is Null Is Null] Is Not Null Is Not Null Asc,.e0 =~$`7esn` =~0X0123456789ABCDEF Descending Skip [#usn8 In `7esn` Where .e0 Is Null Is Null] Ends With {usn1:$`4esn`[`6esn`..$12],`4esn`:usn1 Contains 010} Ends With (:``:usn2{``:True[$_usn3..]})<-[`2esn`? *01..123456789]-(`1esn` {#usn8:$#usn7[..9e0][..123.654],`5esn`:9e12 Starts With 1e1})<-[?:#usn8|:`3esn`{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]-(`1esn` $`4esn`) Limit `5esn`[..123.654][...e12] Unwind $_usn3 Is Not Null As _usn3 Match ((`6esn` {_usn4:$`5esn` Is Not Null Is Not Null})),`5esn`=(((`2esn` :`1esn`:_usn4)<-[`5esn`?{`8esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}]->(`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})<-[`4esn`:usn2]->(:`6esn`:_usn3{`2esn`:999[123.654..$usn2][Count ( * )..0x0]}))) Where `3esn` Union All Merge (_usn3 :`7esn`) On Create Set [@usn6 In False Contains 0 Contains $`6esn` Where 12.e12 =~.0 =~usn1].usn2! =None(#usn7 In True Contains 's_str' Contains $usn1 Where 00[12..$`6esn`]) Ends With None(#usn7 In 9e0[$1000] Where 1e1 Contains 0.e0 Contains 9e1),`8esn` =01[07..][1.e1..] On Create Set #usn7+=Null[.12..12e12],Single(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $0[123.654..0.e0]).`1esn`! =[123456789 =~$999,$`2esn` Ends With `6esn`,12.e12 Contains 9e1][`5esn`(Distinct .e0[01234567..$`8esn`])][All(`3esn` In 9e1 Contains $999 Where $`5esn` Is Not Null Is Not Null)],@usn6 =usn2[1.e1] Merge `2esn`=(:#usn8:`1esn`$`7esn`) On Match Set `8esn`+=`2esn`(0e0 =~0Xa =~$999,@usn5 Contains 9e0)[(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[usn2? *0..01{`6esn`:#usn8 Is Null}]->(`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12})..][Any(`3esn` In `2esn`[..01][..True] Where 0.e0[..$7])..]"),
    octest:ct_string("Delete Count ( * ) In 999 With  *,@usn5 Contains #usn8 Contains 12.0 As `6esn`,{_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}[..Single(@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str'])][..None(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $12[9e0..$999])] Skip 0.0 Is Null Is Null Remove All(@usn6 In 010[`5esn`] Where 1.e1[$usn1]).`6esn`!,Extract(@usn6 In 010[`5esn`]|False[$`4esn`..]).@usn5"),
    octest:ct_string("Match ((@usn5 {usn2:.12[0X7..][12e12..],`6esn`:$`4esn`[`6esn`..$12]})-[?:`4esn`|@usn5 *0Xa]-(`6esn` {`3esn`:.0[$``..0X7],`3esn`:$usn2 Is Not Null Is Not Null})<-[:_usn3|:`7esn` *1000..0X0123456789ABCDEF]-(:_usn4{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]})),(:`3esn`{``:`` Is Null,`8esn`:$@usn6[$0..9e12][.e12..Null]}) Match #usn8=((`4esn` :@usn6)<-[@usn5?:usn2 *0..01]->(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})) Where `6esn` Starts With `6esn` Detach Delete [#usn8 In `7esn` Where @usn5 Contains 9e0] Contains [$usn1 Ends With _usn4 Ends With `2esn`] Union All Return *,0.e0 =~00 As `3esn` Order By 's_str'[0x0..1.e1] Asc,usn1[False..`5esn`][$1000..$12] Ascending Unwind @usn6[123.654..][0x0..] As `2esn`"),
    octest:ct_string("Merge ``=(((`7esn` :`2esn`{@usn6:$0[123.654..0.e0]})-[_usn3 *..07{@usn6:$`2esn`[..$`3esn`][..12e12]}]->(`1esn` {#usn7:$`1esn` Ends With 0X0123456789ABCDEF,`3esn`:.12 Starts With _usn3 Starts With $``})<-[usn1:_usn4]-(`` {_usn3:`5esn` Contains `7esn`}))) On Match Set `1esn`:@usn5,All(@usn5 In 's_str'[0..] Where `2esn`[..01][..True]).`2esn`! =`3esn`(#usn8 =~0.e0,1000[0e0][1e1])[[_usn3[0x0],1e1 In 0.0 In 0X0123456789ABCDEF]],`2esn`+=$_usn4[01..][$_usn4..] On Match Set Single(`5esn` In `7esn`[$usn2..][$123456789..] Where $@usn6 Ends With 12.e12 Ends With @usn5).usn1? =`6esn`[9e12..],`7esn`+=$0[0.e0] Optional Match (`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]}) Union Return Distinct *,All(#usn7 In True Contains 's_str' Contains $usn1 Where $`1esn` Starts With Count(*)) In Any(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn`[0..][999..]) In Filter(`3esn` In 9e1 Contains $999 Where .e0 Is Not Null Is Not Null) As `8esn` Order By 12.0 Ends With `2esn` Descending,$`4esn`[`4esn`][Count(*)] Descending,$`1esn`[07..] Desc Skip 9e12[..123.654][..999] Union All Return *,#usn7[0.12..],$`3esn`[.e1][_usn4] As _usn4 Skip (`2esn` $`6esn`)<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(usn2 {usn1:.e12 Ends With 0Xa Ends With 0xabc}) Ends With Extract(@usn6 In False Contains 0 Contains $`6esn` Where .e1[usn2..$_usn3][.0..$#usn7]) Ends With Single(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]) Limit \"d_str\" Is Not Null Is Not Null"),
    octest:ct_string("Remove `1esn`:_usn3 Return `1esn` Contains $999 Contains 0.0 As @usn6 Detach Delete [$usn1[`2esn`..][$`2esn`..]] Contains Extract(usn2 In 7[12] Where $_usn3 Is Null|.e12 Is Null Is Null),12e12 Ends With 0.0 Ends With usn1 Union All Create (`` {`8esn`:$`6esn`[``..][Count(*)..]})<-[`6esn`? *00..0Xa]->(#usn7 :#usn8:`1esn`{``:.0[$``..0X7]}),usn1=(((`` {`8esn`:$`6esn`[``..][Count(*)..]})<-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]-(#usn8 :`6esn`:_usn3)<-[{_usn4:1.e1[`8esn`]}]->(:@usn6$usn1))) Merge #usn8=((#usn7 :_usn3$usn1)<-[`4esn`?:usn1|`4esn`{`3esn`:123.654[..0.e0][..'s_str'],@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]}]->({`3esn`:`2esn` In 9e0 In 7})) On Create Set @usn6+=$`1esn` =~1e1 On Create Set Extract(_usn4 In 12e12 In 123456789 Where Count ( * ) Ends With $123456789).`8esn` =None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 9e12[$`5esn`..$123456789]) In Extract(@usn5 In 's_str'[0..] Where 07 Ends With 9e12 Ends With `2esn`|00[01234567][False]) In [12 =~usn1] Union Return Distinct 1.e1[..123456789][..999],_usn3[12.e12..][`5esn`..] As @usn6,[_usn3 In _usn3 Contains _usn4 Contains $@usn5] Contains [_usn4[$usn1..01234567][123.654..`5esn`]] Contains `4esn`(Distinct 07 In `6esn`) As `5esn` Order By 123456789 Contains 0Xa Descending,[@usn6 In False Contains 0 Contains $`6esn` Where usn1 Starts With 00|`5esn`[$`7esn`..$@usn5]] Is Not Null Is Not Null Desc,00[False..0e0] Ascending Unwind usn1[...e12][..1.e1] As #usn7 Delete usn1 Is Not Null,0X0123456789ABCDEF Ends With 01 Ends With ``"),
    octest:ct_string("Return Distinct *,$`7esn`[0.12] Skip _usn4 Starts With 1000 Starts With $usn2 Union All Unwind (#usn7 {_usn4:1.e1[`8esn`]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) =~Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12) =~{usn2:#usn8[`8esn`..]} As `4esn` Union Create _usn4=({#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})"),
    octest:ct_string("Create #usn8=((`3esn` :usn2{`6esn`:#usn8 Is Null})-[`4esn`?:_usn4 *7..{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]-(usn2 :`6esn`:_usn3{@usn5:$0[0Xa..$123456789]})<-[`2esn`{``:Null[..010][..1000]}]-(`` :usn1:`3esn`)),(`2esn` :`1esn`:_usn4) Union Optional Match _usn4=(((_usn4 :_usn4{_usn3:$`3esn`[.e1][_usn4]})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)<-[usn1:`7esn`|:`2esn`{`6esn`:Count(*) In #usn8 In \"d_str\",`1esn`:$`1esn` Ends With 0X0123456789ABCDEF}]-(`6esn` :`1esn`:_usn4))),usn1=(_usn4 :_usn4{`2esn`:`6esn` Starts With `6esn`,`8esn`:1000[0e0][1e1]})"),
    octest:ct_string("Return 9e1[$`1esn`..] As `` Order By None(#usn8 In `7esn` Where 9e1 Starts With Count ( * ))[..Any(usn2 In 7[12] Where 9e1 Is Not Null Is Not Null)] Desc,{@usn6:$`3esn`[.e1][_usn4]}[`8esn`(Distinct $``[True])..] Desc Skip 010[`5esn`] Union With  *,Single(#usn7 In True Contains 's_str' Contains $usn1 Where `2esn`[..$_usn3])[..{`8esn`:usn2 =~7,`5esn`:.e0[01234567..$`8esn`]}][..Any(@usn6 In 010[`5esn`] Where False[$`4esn`..])] As #usn8,$#usn7 Contains $`7esn` Contains .e12 As @usn5 Limit (:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[usn2? *0..01{`6esn`:#usn8 Is Null}]->(`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12}) Where 01[`3esn`..][Count(*)..] With  Any(#usn7 In 9e0[$1000] Where 123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]) Contains [$`4esn` In 1.e1 In #usn7,usn1[False..]] Contains Extract(@usn5 In 9e0 Ends With $#usn8 Where $`3esn` In $usn2) As #usn7 Order By @usn5[0..] Ascending,$@usn5 In $`6esn` In 12e12 Desc,#usn7 In 0.e0 Desc Skip {`8esn`:$_usn4 Starts With 12.e12} Is Null Is Null Limit 999 Contains $1000 Optional Match `2esn`=(_usn3 {`8esn`:0e0 =~7 =~12.0,_usn4:.e1[..$`3esn`][..01]})<-[_usn4{`2esn`:#usn8[`8esn`..],`2esn`:@usn6[9e12]}]-(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-(`2esn` :@usn5{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3}),`8esn`=((:#usn8:`1esn`)-[ *..07]->(`4esn` {``:.e1 Starts With 12.e12 Starts With `2esn`})-[`5esn`?:_usn3|:`7esn`]->({@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]})) Where .e1 In 123456789"),
    octest:ct_string("Return 0.e0 =~00 As `3esn`,(`2esn` {`7esn`:999 In 0e0})<-[`8esn`?:`2esn`|`4esn` *01..123456789{`8esn`:$`4esn` Is Null Is Null,usn1:$1000 Starts With $`3esn` Starts With 0.e0}]->(:#usn7:`5esn`{_usn3:0x0[Count(*)..@usn6][Count(*)..0Xa]})<-[ *0X7..{#usn8:.e0 Contains $#usn8}]->(`2esn` :`6esn`:_usn3) In (`8esn` :`6esn`:_usn3)-[`2esn`? *..07{`2esn`:`3esn`[0x0..]}]->(_usn4 {_usn4:123.654 In 12})-[?:#usn8|:`3esn` *0x0..]-(_usn3 :`4esn`:`6esn`{usn2:`4esn` Starts With 0e0,`3esn`:7[12]}) In {_usn4:.e0 Contains $#usn8,@usn6:1000[12e12][`5esn`]} As ``,#usn8[`6esn`..][$``..] As `2esn` Remove Extract(#usn7 In True Contains 's_str' Contains $usn1 Where 00[12..$`6esn`]|$``[..\"d_str\"][..$#usn8]).`6esn`! Remove `4esn`:`4esn`:`6esn`,(usn2 :_usn4)<-[`8esn`?:#usn7|@usn5{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3}]-(`` :usn1:`3esn`)<-[@usn6?:_usn3|:`7esn`{@usn6:$`3esn`[.e1][_usn4]}]-(`` {`7esn`:$#usn7[..0Xa]}).usn2!,`5esn`(0.12 Contains False Contains 1.e1).`3esn`? Union All Unwind {`4esn`:12e12 =~$`7esn`} Is Not Null Is Not Null As _usn3 Unwind 0x0[``..] As usn1 Return Distinct *,Any(#usn7 In 9e0[$1000] Where 123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]) Contains [$`4esn` In 1.e1 In #usn7,usn1[False..]] Contains Extract(@usn5 In 9e0 Ends With $#usn8 Where $`3esn` In $usn2) As #usn7,[$#usn7 Ends With 's_str' Ends With 0X7,12e12 Ends With 0.0 Ends With usn1][Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $`6esn`[``..][Count(*)..])..Extract(#usn7 In 9e0[$1000] Where @usn6 Contains .12 Contains $usn1|``[$`3esn`])][(#usn8 :`5esn`)<-[usn2?:`3esn` *00..0Xa]-(`2esn` {``:$0 =~9e1 =~$`2esn`,`8esn`:`5esn`[..123.654][...e12]})..{_usn3:_usn4 Is Null Is Null}] Order By 0e0 Is Null Is Null Ascending,$@usn6[..12] Descending Union Create (usn2 :_usn4),`1esn`=((`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})-[?$7]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0})) Remove [999 Is Not Null Is Not Null,123.654 In $`7esn`].`6esn` Delete 9e0[Count(*)..0.12][$`1esn`..12.0],`7esn` Is Null"),
    octest:ct_string("Optional Match ((`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12})<-[`8esn` *0xabc{#usn8:12.0 Starts With .12 Starts With `6esn`,@usn5:_usn3[`5esn`..][usn2..]}]->(#usn7 {`8esn`:`7esn` In 010 In usn1})-[?$7]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0})) Delete [`3esn` In `2esn`[..01][..True] Where $0 Ends With $usn1 Ends With $_usn3] In [12e12 In 123456789,`1esn`] In All(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789]),True[..#usn8],0.12[0Xa][$`7esn`] Union All Delete `1esn` Starts With 9e1,{`1esn`:$999[``],@usn5:#usn7 Starts With $123456789 Starts With 12e12}[(_usn3 :`7esn`)-[`2esn`? *1000..0X0123456789ABCDEF{`8esn`:$7 In $usn1 In 999,@usn5:00 Ends With `` Ends With 12.e12}]-(:usn2{`5esn`:True[0xabc..01234567][$`8esn`..$@usn6]})..],999 Is Null Is Null"),
    octest:ct_string("Remove None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 9e12[$`5esn`..$123456789]).`4esn`,[@usn6 In 010[`5esn`] Where 9e1 Ends With Count(*) Ends With $7|`1esn` Is Not Null Is Not Null].`` Match `6esn`=((`4esn` :_usn4)-[`5esn`?:_usn3|:`7esn`]->({@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]})<-[?:`5esn`|:usn2]->(usn2 :`5esn`)) Where `` Is Null Create (_usn4 :_usn4{`2esn`:`6esn` Starts With `6esn`,`8esn`:1000[0e0][1e1]}),`2esn`=(:#usn8:`1esn`$`7esn`)"),
    octest:ct_string("Unwind #usn8[`8esn`..] As `7esn` Union All Merge (({@usn6:010 Starts With 0 Starts With 0.0,_usn4:07[$`2esn`..9e12][$`4esn`..9e12]})<-[:@usn6|:`7esn` *0..01{``:`1esn`[0.0..1e1][0x0..7],usn2:01[`3esn`..][Count(*)..]}]->(`5esn` :``:usn2{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3})) With Distinct *,$`1esn`[07..] As ``,`` Is Null As `7esn` Skip $1000 Is Not Null Delete $usn1[Null][`8esn`],Single(#usn8 In `7esn` Where 12.0 Starts With $`2esn` Starts With .e1) Ends With [0X7 In $#usn7,`4esn` Is Not Null Is Not Null,.0[.e12..]] Ends With {`6esn`:0xabc[..$1000][..`5esn`],`4esn`:$@usn5 In 12e12 In 01}"),
    octest:ct_string("Match usn2=((usn2 :`5esn`{`7esn`:0.12 Starts With $`8esn` Starts With @usn5})<-[usn1:`7esn`|:`2esn`{`6esn`:Count(*) In #usn8 In \"d_str\",`1esn`:$`1esn` Ends With 0X0123456789ABCDEF}]-(#usn8 :usn2{@usn5:$#usn7[..9e0][..123.654],`2esn`:7[12]})<-[ *..07{`5esn`:999 In 0e0}]-(_usn4 :`8esn`)) Where 1e1 Contains 's_str' Contains `3esn` Merge #usn7=(({_usn3:_usn3 Ends With 7 Ends With $`1esn`,``:$_usn4[$`5esn`][`7esn`]})-[:_usn4 *0..01]-(#usn8 :`2esn`{`1esn`:0x0 Starts With $`6esn`}))"),
    octest:ct_string("Create ((_usn3 :@usn5{`8esn`:1e1 Contains 's_str' Contains `3esn`})<-[? *..010{`2esn`:'s_str'[0..]}]->(_usn3 :`5esn`)),(:usn1:`3esn`{`8esn`:12 Starts With True Starts With 12e12,`8esn`:`2esn` Starts With $`7esn`})<-[`7esn`:#usn7|@usn5*{`8esn`:$`3esn`[$_usn4..0Xa]}]-(:_usn4{_usn3:$#usn7[..0Xa],@usn5:12e12 In 123456789}) Optional Match ((_usn3 :@usn5{`8esn`:1e1 Contains 's_str' Contains `3esn`})-[?:`2esn`|`4esn`{@usn5:0.e0}]-(`1esn` $`4esn`)),(_usn3 :`7esn`)-[*..{``:.e1 Starts With 12.e12 Starts With `2esn`}]-(#usn7 :_usn3) Return Distinct *,All(#usn7 In True Contains 's_str' Contains $usn1 Where #usn8 Is Null Is Null)[..[0x0[0X7]]][..(:`7esn`{`3esn`:$`3esn` Contains $`1esn`,#usn7:$usn2[`4esn`..9e12]})-[ *..07]->(_usn3 :`3esn`{_usn3:01[`8esn`..9e12][.12..0]})] As `3esn`,All(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $0[123.654..0.e0])[usn2(Distinct #usn7 Contains $0 Contains $usn2,0.e0)..] As @usn6 Order By $`1esn` Ends With 0X0123456789ABCDEF Ascending Limit `4esn` Contains 9e0"),
    octest:ct_string("Optional Match `4esn`=((({#usn7:$`3esn` Ends With 01234567,_usn3:usn1 =~$`7esn`})-[`7esn`?:usn1|`4esn` *00..0Xa{`3esn`:usn1 In ``}]-(usn1 {usn1:$#usn7 Starts With 01234567 Starts With $0})<-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(_usn3 :`3esn`{_usn3:01[`8esn`..9e12][.12..0]}))),#usn8=(({usn2:`2esn`[..$_usn3]})) Where `2esn`[..$_usn3] Return `6esn`[`5esn`..00],$1000 Is Null Is Null,0.0[usn1..] As `3esn` Limit All(#usn7 In $999 In 1e1 Where 1.e1 In 1000 In _usn3) Contains (`6esn` :`8esn`{@usn6:12.e12 Contains #usn7 Contains $_usn4})-[`8esn`{`7esn`:9e12 Starts With 1e1}]-(_usn3 :_usn4) Contains [`8esn` Is Not Null Is Not Null,12 Starts With #usn7 Starts With 0Xa,.0 Starts With `1esn`]"),
    octest:ct_string("Create `2esn`=(`5esn` :``:usn2)<-[`8esn` *0xabc{#usn8:12.0 Starts With .12 Starts With `6esn`,@usn5:_usn3[`5esn`..][usn2..]}]->(@usn6 :usn1:`3esn`{@usn5:999 Starts With `2esn` Starts With .e1,``:0xabc In Null})<-[usn2?:@usn5|_usn3*{_usn4:@usn5 Starts With $`3esn`,#usn7:$`5esn` Is Not Null}]-(#usn7 :``:usn2) Match `6esn`=(((:#usn7:`5esn`{`4esn`:$``[..\"d_str\"][..$#usn8]})<-[`6esn`? *00..0Xa]->(:#usn8:`1esn`$`7esn`)-[usn2{``:$`1esn` =~999}]-(:usn1:`3esn`{``:$#usn7 In $@usn5 In $`1esn`,#usn7:999[@usn5..][Null..]}))),`8esn`=(usn1 {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})<-[`4esn`?:`4esn`|@usn5 *01..123456789]-(#usn7 :`4esn`:`6esn`{`1esn`:`1esn`[$@usn6][07]}) Where 0e0[``..$1000][$7..12.e12] Union All Match ((:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})<-[`2esn`? *..07{`2esn`:`3esn`[0x0..]}]->(`5esn` )),@usn5=((_usn3 :`1esn`:_usn4{#usn8:$999 Ends With .e0,_usn4:`4esn`[\"d_str\"]['s_str']})<-[#usn8?:@usn6|:`7esn` *0X0123456789ABCDEF..{_usn4:12.e12 =~.0 =~usn1,usn1:12e12 Contains `2esn`}]->(usn2 :@usn6)-[@usn5? *01..123456789{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`}]-(`1esn` {@usn5:`2esn` Starts With $`4esn`})) Where 12.0 Is Null Is Null"),
    octest:ct_string("Unwind Count(*)[..`8esn`] As _usn3"),
    octest:ct_string("Unwind 12.e12 Is Not Null Is Not Null As `2esn` Remove {`6esn`:$@usn5 Contains 's_str' Contains \"d_str\",`4esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}.`1esn`!,{`8esn`:12.0 Ends With `2esn`,`3esn`:123.654[$0..0X7][Null..#usn8]}.`1esn`! Return Distinct Count ( * ) In True In @usn5 Skip 01234567[\"d_str\"..`4esn`] Limit 123.654 In $`6esn` Union All Unwind {`3esn`:@usn5[0.0..0X7],@usn5:$#usn7 Starts With $`2esn`} Contains Filter(`3esn` In `2esn`[..01][..True] Where 0Xa =~False =~@usn5) Contains Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $12[9e0..$999]|.12 Starts With _usn3 Starts With $``) As #usn7 Return Distinct *,False Is Null Order By 0X7[..$`8esn`] Desc,[@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str']|$`3esn`[..0xabc][..$7]] Is Null Ascending,12.e12 Ends With `` Ends With 0 Desc Skip Any(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 0xabc In 123456789 In 0x0)[..{`5esn`:0Xa[$`8esn`..][$_usn4..],_usn3:00[$usn1..]}][..Any(@usn6 In 010[`5esn`] Where 1.e1[$usn1])] Union Delete 1000[7..$12],@usn5 Is Not Null,usn2 Is Not Null Detach Delete None(`5esn` In `7esn`[$usn2..][$123456789..] Where 12.e12 Starts With \"d_str\" Starts With 9e1) Contains `3esn`(Distinct $123456789[...12][..@usn6]) Contains {``:`1esn` Starts With 0xabc Starts With $usn2} Return *,00[$usn1..] Limit `4esn`(Distinct 0.0 Contains #usn7)[(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})<-[?:`7esn`|:`2esn`]->(#usn8 :usn1:`3esn`{`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[ *01234567..]->(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})..][None(@usn5 In 's_str'[0..] Where #usn7[0.12..])..]"),
    octest:ct_string("Merge (_usn3 :`5esn`{#usn8:0xabc In 010 In #usn7}) On Create Set `5esn`+={#usn7:12e12 In $`5esn`} Ends With {`6esn`:12 =~usn1,_usn3:`6esn`[$`8esn`][9e1]},usn2 =True Contains 0x0 Contains $_usn3 Delete .0 Starts With `1esn`,$7[$12..12e12][1.e1..9e1] Union All Optional Match #usn8=(`5esn` :`7esn`)<-[{_usn4:1.e1[`8esn`]}]->(:@usn6$usn1)<-[`4esn`:`1esn`|`3esn` *12..]-(usn1 :`7esn`{`7esn`:9e12 Starts With 1e1,_usn3:$`7esn`[$_usn4][.e0]}),usn2=(_usn3 {`8esn`:0e0 =~7 =~12.0,_usn4:.e1[..$`3esn`][..01]})<-[_usn4{`2esn`:#usn8[`8esn`..],`2esn`:@usn6[9e12]}]-(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-(`2esn` :@usn5{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3}) Where 12.e12[0..0.12][123.654..9e12]"),
    octest:ct_string("Remove Any(#usn8 In `7esn` Where 12.0 Starts With $`2esn` Starts With .e1).`7esn`!,[12e12 Is Not Null].usn1?,(_usn3 :usn2)-[:_usn3|:`7esn`*{`1esn`:12[..$999][..$`2esn`],usn2:9e1}]->(:``:usn2{`5esn`:$12 Starts With $usn1}).#usn7! Union Create `3esn`=((:#usn8:`1esn`$`7esn`)<-[`1esn` *999..{`1esn`:1e1 Contains 's_str' Contains `3esn`}]-(usn1 {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(#usn7 :``:usn2)) Unwind 07[False] As @usn6"),
    octest:ct_string("Return Distinct *,Null[..010][..1000] As #usn7,9e12 Ends With 12e12 Ends With 12 As `` Order By 1000[$7..][_usn4..] Desc Skip $`3esn` Ends With 01234567 Limit 7 Ends With .12 Merge `1esn`=((`2esn` :`1esn`:_usn4)-[?:``]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})) Unwind usn1[..$@usn6][..00] As `4esn` Union All Return 0x0[0.0] As ``,Any(@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``) Contains [_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where .0 Is Null Is Null|`3esn`[0x0..]] Contains [999[12.e12],#usn8 Is Null Is Null,1.e1 =~$_usn4] As `1esn` Order By [#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`]][[`2esn` Is Null]][Extract(#usn7 In $999 In 1e1|01234567[Null..$_usn3])] Asc,usn2[12.e12..] Ascending,$@usn6 Is Not Null Is Not Null Desc Skip `5esn` Contains 1.e1 Contains .e12 Limit `7esn`[0x0][$`4esn`] Merge #usn7=(_usn3 :@usn5{`8esn`:1e1 Contains 's_str' Contains `3esn`}) Optional Match @usn6=(usn2 :_usn4) Where _usn3[`2esn`..0X7][0.e0..$`3esn`]"),
    octest:ct_string("Unwind 0 Is Not Null As `6esn` Optional Match `2esn`=((#usn8 :_usn3{@usn5:_usn3 Starts With 12e12 Starts With `5esn`,@usn6:usn2 In _usn3})<-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->(`5esn` {``:_usn3 Contains 9e12 Contains `8esn`,@usn6:``[7.._usn3]})-[`1esn`?{`8esn`:.e0,usn2:9e1 Contains $999}]-(usn2 :_usn4)),(((`6esn` :`4esn`:`6esn`)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})<-[`4esn` *0Xa{@usn6:999 Starts With `2esn` Starts With .e1,`4esn`:$@usn5[..0xabc][..$`3esn`]}]->(@usn6 :``:usn2))) Detach Delete `8esn` Is Not Null Is Not Null,Filter(@usn5 In 9e0 Ends With $#usn8 Where 7 Ends With 01234567 Ends With 0Xa) Starts With {usn2:`2esn` =~.e12 =~0X0123456789ABCDEF,@usn6:`2esn` Is Null} Starts With [usn2[12e12..]['s_str'..]]"),
    octest:ct_string("Remove [`5esn` In 0X7 In $#usn7 Where @usn6 Is Not Null Is Not Null|9e1[..123456789]].``?,Any(#usn7 In True Contains 's_str' Contains $usn1 Where `5esn` Contains $`5esn` Contains 0X7).usn1 Unwind `7esn`[1e1] As `6esn` Union All Remove Any(`5esn` In `7esn`[$usn2..][$123456789..] Where _usn4 Is Not Null).`4esn`,(_usn3 {`8esn`:_usn3[0x0],#usn8:$usn1 Contains 0})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(_usn4 :`8esn`)<-[ *0X7..{#usn8:.e0 Contains $#usn8}]->(`2esn` :`6esn`:_usn3).@usn5!"),
    octest:ct_string("Unwind 0X0123456789ABCDEF[..0xabc] As `8esn` Delete $7[$12..12e12][1.e1..9e1],Filter(@usn5 In 's_str'[0..] Where #usn7[0.12..]) =~[_usn4 In 12e12 In 123456789 Where .0 Ends With Count ( * )|$`1esn` In .e0]"),
    octest:ct_string("Remove Extract(#usn7 In $999 In 1e1 Where 0X7['s_str'..][01..]|0x0[0.0]).`3esn`! Return Distinct 9e1 Ends With Count(*) Ends With $7 As `6esn` Limit _usn3 Contains 9e12 Contains `8esn` Union All Unwind $_usn4 Starts With 12.e12 As `2esn` Return Distinct ``[$`1esn`] Order By 123456789[12] Ascending,{usn1:0x0[$0][7],`5esn`:@usn5 Contains #usn8 Contains 12.0}[[@usn5 In 9e0 Ends With $#usn8 Where 00 Contains Count ( * ) Contains 0x0]] Asc,Count ( * )[$`5esn`..][$7..] Desc Union With Distinct 123.654[$0..0X7][Null..#usn8] As `3esn` Order By (`5esn` :`4esn`:`6esn`)-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(#usn7 :``:usn2)[..Filter(#usn8 In `7esn`)] Desc,Count ( * )[$`5esn`..][$7..] Desc Skip Extract(@usn5 In 9e0 Ends With $#usn8 Where $7 In 0.e0 In 999)[..Filter(@usn6 In 010[`5esn`] Where 1.e1[$usn1])] Limit None(#usn7 In 9e0[$1000] Where $_usn3 Is Null)[[0 =~1e1,$#usn8[12.e12..`8esn`][12.0..0.0],$1000 Is Not Null]..] Where $123456789 Contains $#usn8 Contains `` Merge _usn3=({`4esn`:.e1[..$`3esn`][..01]})-[`5esn`:#usn7|@usn5]-(`5esn` :`4esn`:`6esn`) On Create Set usn1 =`3esn`[123456789],`3esn` =9e1[.12][`7esn`]"),
    octest:ct_string("Remove None(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]).`1esn`?,Extract(#usn7 In $999 In 1e1 Where _usn4 Is Not Null Is Not Null|0 =~1.e1 =~$#usn7).@usn5!,(`1esn` {`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]})-[_usn3:usn1|`4esn`{`6esn`:12e12 =~1e1}]-(@usn6 :_usn4{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}).@usn5 Delete `2esn`[$usn2][12.0],{`1esn`:`2esn` Is Null,`7esn`:`` =~.12}[Single(#usn7 In True Contains 's_str' Contains $usn1 Where `5esn` Contains $`5esn` Contains 0X7)..],(:``:usn2{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7})-[:`2esn`|`4esn`{_usn3:@usn6[`1esn`..],@usn6:@usn6[9e12]}]->({usn1:$#usn7 =~`2esn`})-[`3esn`?{@usn6:Count(*)[..@usn6][..`7esn`],`6esn`:`2esn` In 9e0 In 7}]->(`8esn` :@usn6{`7esn`:0e0[999..$``]})[{`6esn`:$`4esn`[`6esn`..$12],usn1:00 In @usn6 In 0}..][Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 123456789[12])..] Return Distinct *,1.e1 Ends With $#usn7 As usn2,@usn5[01][@usn5] Order By $`4esn`[..$`8esn`][..Null] Descending Skip `6esn` Is Null Is Null Union Create (((#usn7 :#usn8:`1esn`{``:.0[$``..0X7]})<-[? *0xabc]-(:@usn6{`6esn`:01 Ends With 0Xa Ends With 0X7})<-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->(usn2 :`5esn`))),usn1=(`7esn` :`3esn`{`2esn`:999[123.654..$usn2][Count ( * )..0x0]})-[`2esn`?:usn1|`4esn` *00..0Xa]-(`4esn` :`4esn`:`6esn`) Unwind False[$usn1][0x0] As usn2"),
    octest:ct_string("Unwind usn1[...e12][..1.e1] As #usn8"),
    octest:ct_string("Delete `2esn` Starts With 12.e12 Starts With 12.0 Delete \"d_str\" Is Not Null,$usn1 Unwind {_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}[..Single(@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str'])][..None(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $12[9e0..$999])] As `6esn` Union All Delete .e0[...0][..$`2esn`] With Distinct *,@usn5 Contains #usn8 Contains 12.0,Any(@usn6 In False Contains 0 Contains $`6esn` Where $usn2[`4esn`..9e12]) =~[9e12 =~@usn6,01 Ends With 0Xa Ends With 0X7,$@usn6[$0..9e12][.e12..Null]] Order By False[$usn1][0x0] Asc,Count ( * ) Ends With `6esn` Ends With 's_str' Asc,@usn6[12.0..0.12] Ascending Skip $usn1[`2esn`..][$`2esn`..] Limit 00[01234567][False] Detach Delete [9e12[9e1]][[_usn3[`2esn`..0X7][0.e0..$`3esn`]]..]"),
    octest:ct_string("Create (:usn1:`3esn`{@usn6:.0 Ends With Count ( * )}),usn2=(@usn5 :@usn6{`2esn`:12e12 =~1e1,``:12.e12 Contains #usn7 Contains $_usn4})<-[`8esn` *0xabc]-(:_usn3{_usn4:.e1[7..][9e0..]})"),
    octest:ct_string("Merge _usn4=(:`3esn`{#usn7:$#usn7 In $@usn5 In $`1esn`})<-[?:usn1|`4esn` *1000..0X0123456789ABCDEF{`6esn`:.e0[999..1000][1e1..$`8esn`],`4esn`:00 Ends With `` Ends With 12.e12}]-(:#usn8:`1esn`{`6esn`:$`4esn`[`6esn`..$12],usn1:00 In @usn6 In 0}) On Match Set `8esn`+=0x0[``..],usn1+=0e0 Ends With 07 Ends With $`8esn`,_usn4 =$@usn6[12.0][12.0] On Create Set Filter(usn2 In 7[12] Where $`6esn`[1.e1][$_usn3]).``? =0Xa[$`8esn`..][$_usn4..],_usn4+=0X0123456789ABCDEF In $7 Remove None(_usn4 In 12e12 In 123456789 Where $usn2 Is Not Null Is Not Null).@usn5 Optional Match ((_usn4 :#usn7:`5esn`)-[`4esn`:`1esn`|`3esn` *12..]->({`7esn`:9e12 =~@usn6})),((:`5esn`{`4esn`:$`5esn` =~$0 =~``,_usn3:$``[..$#usn7][..`6esn`]})<-[`1esn`:`8esn` *7..]-(`8esn` :@usn5{`5esn`:_usn3 In $`8esn` In @usn6,_usn4:$@usn6 Ends With 12.e12 Ends With @usn5})<-[?:usn2{@usn5:999[..`1esn`][..07],_usn4:Count ( * ) Ends With $123456789}]->(`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})) Where Count ( * )[$`5esn`..][$7..]"),
    octest:ct_string("With  *,All(#usn7 In True Contains 's_str' Contains $usn1 Where #usn8 Is Null Is Null)[..[0x0[0X7]]][..(:`7esn`{`3esn`:$`3esn` Contains $`1esn`,#usn7:$usn2[`4esn`..9e12]})-[ *..07]->(_usn3 :`3esn`{_usn3:01[`8esn`..9e12][.12..0]})] As `3esn`,All(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $0[123.654..0.e0])[usn2(Distinct #usn7 Contains $0 Contains $usn2,0.e0)..] As @usn6 Order By $`1esn` Ends With 0X0123456789ABCDEF Ascending Limit `4esn` Contains 9e0 Remove [#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[`8esn`]|Count(*) Is Null].#usn7,{``:0Xa =~False =~@usn5,`8esn`:.12[123.654..]}.`6esn`!,Any(#usn7 In $999 In 1e1 Where usn1 =~$`7esn`).`1esn`!"),
    octest:ct_string("Unwind `7esn` Is Null As @usn5 Return Distinct $#usn7 =~`2esn` As #usn7,usn1 Ends With 9e0 Ends With 9e0 As @usn5,{`2esn`:Count(*) Ends With usn1,`6esn`:1000 Ends With `7esn`}[Any(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 00[$usn1..])] Skip Any(usn2 In 7[12] Where 0X7[.0])[Any(`6esn` In $`6esn`[``..][Count(*)..] Where $7 In $usn1 In 999)..#usn8(Distinct $_usn4 Is Null Is Null,01[`8esn`..9e12][.12..0])] Merge ((:`3esn`{@usn5:$`5esn` In _usn3 In 0.0})-[:`1esn`|`3esn` *0Xa{_usn4:``[9e12][$999],#usn8:123.654 In 12}]->(:@usn5{#usn7:12e12 In $`5esn`})-[@usn5 *0X7..]->(`` $`6esn`)) On Match Set [`5esn` In `7esn`[$usn2..][$123456789..] Where `7esn` Is Null|$_usn4 =~$`1esn` =~`2esn`].`6esn` =Any(#usn7 In True Contains 's_str' Contains $usn1 Where `6esn` Starts With `6esn`) =~Single(#usn7 In $999 In 1e1 Where _usn4 Contains `` Contains 1.e1),@usn6+='s_str',Extract(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0 Ends With 12.0 Ends With `5esn`)._usn4! =Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|123.654 Is Not Null) Ends With usn2(01 Is Null) Ends With [$@usn6 Ends With 123456789 Ends With 12.0,12.e12 =~.0 =~usn1] Union With  123.654[$0..0X7][Null..#usn8] As `3esn` Order By (`5esn` :`4esn`:`6esn`)-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(#usn7 :``:usn2)[..Filter(#usn8 In `7esn`)] Desc,Count ( * )[$`5esn`..][$7..] Desc Skip Extract(@usn5 In 9e0 Ends With $#usn8 Where $7 In 0.e0 In 999)[..Filter(@usn6 In 010[`5esn`] Where 1.e1[$usn1])] Limit None(#usn7 In 9e0[$1000] Where $_usn3 Is Null)[[0 =~1e1,$#usn8[12.e12..`8esn`][12.0..0.0],$1000 Is Not Null]..] Merge (`6esn` :@usn6)-[usn2?:`3esn`]->(`8esn` :@usn6{`7esn`:0e0[999..$``]})-[:@usn6|:`7esn`{#usn7:.0[.e12..],usn2:usn2 =~usn1 =~Count ( * )}]->(_usn3 :`4esn`:`6esn`{usn2:`4esn` Starts With 0e0,`3esn`:7[12]}) On Create Set #usn8 =$_usn4[$`6esn`..] Merge ((`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})) On Create Set #usn8 ={_usn4:``[9e12][$999],#usn8:123.654 In 12} Starts With Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0[0.0]) Starts With Filter(`6esn` In $`6esn`[``..][Count(*)..]) On Create Set [`5esn` In `7esn`[$usn2..][$123456789..] Where $`5esn` =~$0 =~``|.12 In `8esn` In $#usn8]._usn4? =7 =~0.12,`6esn` =Single(`5esn` In `7esn`[$usn2..][$123456789..] Where 12e12 Is Not Null) Is Not Null Is Not Null,Any(#usn7 In $999 In 1e1 Where 0X7['s_str'..][01..]).`3esn`! =(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})-[? *0Xa{usn1:`3esn`[0x0..]}]->(:`5esn`{`1esn`:0.e0}) Is Not Null Is Not Null Union All Detach Delete 0[$`5esn`]"),
    octest:ct_string("Delete 0X7 In $#usn7 Unwind {#usn8:1.e1 Is Null Is Null,_usn4:0xabc In 123456789 In 0x0}[All(@usn6 In 010[`5esn`] Where 00[1.e1..])..] As _usn4 Detach Delete [`6esn` In $`6esn`[``..][Count(*)..] Where $0[123.654..0.e0]][{`8esn`:$`4esn`[..$`8esn`][..Null]}..({usn2:_usn3[`2esn`..0X7][0.e0..$`3esn`]})<-[_usn4?:@usn6|:`7esn`]-(usn1 :`2esn`{@usn6:True Contains 's_str' Contains $usn1,``:$`4esn` Starts With 0 Starts With `7esn`})-[@usn5:`5esn`|:usn2 *0Xa{#usn7:`7esn`[$usn2..][$123456789..]}]-({`7esn`:9e0 Contains $12 Contains `3esn`,`5esn`:.e0 Contains $#usn8})][None(`3esn` In `2esn`[..01][..True])..[0.e0[..$7],$usn2[True..0X0123456789ABCDEF],`2esn` =~.e12 =~0X0123456789ABCDEF]] Union All Return Distinct *,{`5esn`:`6esn`[$`8esn`][9e1]} Is Not Null Is Not Null Skip (`2esn` :_usn3{`8esn`:01234567[Null..$_usn3]})<-[?:usn2{usn2:@usn5 Is Not Null}]-(`7esn` {#usn8:False Starts With 0X7 Starts With 01234567}) =~[12 In $usn1 In 7] =~Filter(@usn5 In 's_str'[0..] Where 0.e0) Limit `2esn` =~.e12 =~0X0123456789ABCDEF"),
    octest:ct_string("Create ((usn1 :`5esn`{`1esn`:#usn7 Contains $0 Contains $usn2,`4esn`:999 Ends With $`` Ends With 0X0123456789ABCDEF})) With Distinct *,$`7esn`[$_usn4][.e0],`5esn` Contains `1esn` Contains usn1 As `2esn` Order By `4esn` Contains 9e0 Desc,[@usn5 In 9e0 Ends With $#usn8 Where 12.e12 =~0X0123456789ABCDEF =~1.e1|00[$`1esn`..][@usn6..]] Is Not Null Asc Skip [`8esn`[0.e0..],1e1 Contains 's_str' Contains `3esn`] In [`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]] Limit $@usn6 =~#usn7 =~True Where $@usn5 In $`6esn` In 12e12 Union Create `1esn`=((`2esn` :`1esn`:_usn4)-[?:``]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})),usn2=(#usn7 {_usn4:1.e1[`8esn`]})<-[usn2{`2esn`:$12 Starts With $usn1}]->(:`5esn`{`8esn`:$`7esn`[0.12],_usn4:`1esn`})-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->(@usn6 :`4esn`:`6esn`{``:999 Contains 0 Contains $`5esn`,`6esn`:_usn3[12.e12..][`5esn`..]}) Union With Distinct *,`5esn` Contains `5esn` Contains $_usn3 Order By 0xabc In Null Descending,12[.0] Ascending Skip None(`3esn` In 9e1 Contains $999 Where 0xabc In Null) Is Not Null Where .0 Ends With Count ( * ) Merge ``=(((#usn7 :#usn8:`1esn`{``:.0[$``..0X7]})<-[? *0xabc]-(:@usn6{`6esn`:01 Ends With 0Xa Ends With 0X7})<-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->(usn2 :`5esn`))) On Create Set usn1 =`3esn`[123456789],`3esn` =9e1[.12][`7esn`] Unwind 12.e12 Starts With 1000 As @usn5"),
    octest:ct_string("Merge (usn1 :_usn3{`4esn`:$`6esn`[1.e1][$_usn3]})-[`1esn` *01234567..]->(_usn3 {#usn7:12.e12 Ends With `` Ends With 0,``:$@usn6 In @usn6 In 1e1})-[?:`7esn`|:`2esn`{@usn5:usn2[1.e1],@usn6:$#usn8 Starts With .e12 Starts With 1.e1}]->({`1esn`:$12 Starts With $usn1,`6esn`:123.654[`4esn`..12]}) Remove _usn3(Distinct _usn3[`2esn`..0X7][0.e0..$`3esn`]).`8esn`"),
    octest:ct_string("Merge (_usn3 :`4esn`:`6esn`{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3})<-[`2esn`? *01..123456789]-(`2esn` :@usn6)<-[?{`6esn`:$0[0Xa..$123456789],``:.e1[..\"d_str\"][..$123456789]}]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`}) On Match Set [$0[123.654..0.e0],01234567[Null..$_usn3]]._usn4! ={`3esn`:12 Starts With #usn7 Starts With 0Xa} Is Null Is Null,None(#usn7 In 9e0[$1000] Where 00[12..$`6esn`]).`7esn`? =`4esn`(Distinct)[`2esn`($`2esn`[..$`3esn`][..12e12])][Extract(@usn6 In 010[`5esn`] Where 1.e1[$usn1]|.e12[..999][..@usn5])],`5esn`+={`7esn`:usn1[False..`5esn`][$1000..$12],`1esn`:$usn1[`2esn`..][$`2esn`..]}[Extract(@usn5 In 's_str'[0..] Where 0Xa[..Count ( * )][..$123456789]|.e1[..$`3esn`][..01])..] Merge ((`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]})) On Match Set `1esn` =All(@usn6 In 010[`5esn`] Where $@usn5 Ends With @usn5 Ends With 0xabc)[Extract(#usn7 In 9e1[$`1esn`..] Where 123.654 In $`7esn`)..[12.0 Starts With .12 Starts With `6esn`]],count(Distinct $`3esn`[..0X0123456789ABCDEF][..7])._usn3! =1.e1 Is Null Is Null Union All Unwind $@usn6 In @usn6 In 1e1 As #usn7 With  usn2[12.e12..] As `2esn`,$`2esn`[0..123456789][``..`1esn`],#usn8[`6esn`..][$``..] As `2esn` Skip $@usn6 Ends With `1esn` Limit 9e1 Ends With Count(*) Ends With $7 Delete $0[12.0...e1],_usn4[.12..$usn2][$_usn3..123.654],07[..07][..0X7]"),
    octest:ct_string("Return Distinct *,(usn2 :usn1:`3esn`{`3esn`:`2esn` Is Null})<-[:`8esn` *999..{@usn6:`7esn` Ends With $7 Ends With $@usn5,``:0e0 Starts With 999 Starts With `2esn`}]->(`6esn` :#usn7:`5esn`)<-[usn1:`1esn`|`3esn`]->(`1esn` {#usn8:$#usn7[..9e0][..123.654],`5esn`:9e12 Starts With 1e1}) =~(`7esn` {#usn7:$@usn6 Ends With `1esn`})<-[#usn8 *0x0..]->(_usn3 :usn2{#usn8:$`2esn` Is Null,_usn3:123.654 Is Not Null})-[? *0X0123456789ABCDEF..]-(usn2 :_usn3),[@usn5 In 9e0 Ends With $#usn8 Where 12.e12 =~0X0123456789ABCDEF =~1.e1|00[$`1esn`..][@usn6..]] As `1esn` Skip 01[07..][1.e1..] Limit All(usn2 In 7[12] Where #usn8 Is Null Is Null)[[usn2 In 7[12] Where #usn7[.e0]]..] Detach Delete `` Is Null,12 Starts With $123456789 Starts With .e12,#usn7[$`3esn`..$1000][0.0..`2esn`] Union Remove {``:.0[..'s_str'][..01234567]}.@usn5!,[#usn7 In 9e0[$1000] Where $123456789[...12][..@usn6]].`3esn` Return Distinct *,Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 1e1 Contains 0.e0 Contains 9e1|12.e12 Ends With $``) Is Null Is Null Order By Extract(#usn7 In 9e1[$`1esn`..] Where $999[``]) Starts With (`6esn` :@usn6)<-[ *..07]-(:_usn3{`7esn`:9e0 Ends With $#usn8}) Starts With (#usn7 :@usn6)<-[? *01..123456789]-(`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]}) Ascending,$@usn5[..$#usn7] Descending,{`3esn`:.e1[..\"d_str\"][..$123456789]} Descending Skip 9e1 Starts With Count ( * ) Limit {`1esn`:$999[``],@usn5:#usn7 Starts With $123456789 Starts With 12e12}[(_usn3 :`7esn`)-[`2esn`? *1000..0X0123456789ABCDEF{`8esn`:$7 In $usn1 In 999,@usn5:00 Ends With `` Ends With 12.e12}]-(:usn2{`5esn`:True[0xabc..01234567][$`8esn`..$@usn6]})..] Union Unwind #usn8(@usn6[999..$_usn3][0.12..$@usn5])[..`1esn`(Distinct `5esn`[..123.654][...e12],01 Contains usn2 Contains 0X0123456789ABCDEF)] As _usn3 Detach Delete $`1esn`[``][07],`2esn` Starts With .e1 Starts With 9e12,$`4esn` In 1.e1 In #usn7"),
    octest:ct_string("Remove usn1:#usn7:`5esn`,[@usn5 In 9e0 Ends With $#usn8 Where `1esn` Is Not Null Is Not Null|usn1 Is Null Is Null].usn2? With Distinct 0.e0['s_str'..][01234567..] As `7esn`,Single(_usn4 In 12e12 In 123456789 Where 0e0 =~7 =~12.0) Starts With Extract(#usn7 In 9e0[$1000] Where 123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]|9e12 =~@usn6),[#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`]][[`2esn` Is Null]][Extract(#usn7 In $999 In 1e1|01234567[Null..$_usn3])] Skip $`6esn`[1.e1][$_usn3] Limit usn1 Is Not Null Union Match (({#usn7:$@usn6[$0..9e12][.e12..Null]})) Match `6esn`=(((:`6esn`:_usn3)<-[? *0X7..{`2esn`:$@usn5 In $`6esn` In 12e12}]-(`3esn` :_usn4{`3esn`:12[..0e0][...e1],`4esn`:.0 Is Null Is Null})-[usn2 *..07]->(`` {_usn3:`5esn` Contains `7esn`}))) Where $_usn4[$`5esn`][`7esn`]"),
    octest:ct_string("Unwind {@usn6:123.654 In 12,#usn7:12.e12 Ends With `` Ends With 0} Contains [`1esn`[usn1][0xabc],`5esn` Contains `7esn`,$``[True]] As usn1 Return Distinct *,All(#usn7 In True Contains 's_str' Contains $usn1 Where #usn8 Is Null Is Null)[..[0x0[0X7]]][..(:`7esn`{`3esn`:$`3esn` Contains $`1esn`,#usn7:$usn2[`4esn`..9e12]})-[ *..07]->(_usn3 :`3esn`{_usn3:01[`8esn`..9e12][.12..0]})] As `3esn`,All(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $0[123.654..0.e0])[usn2(Distinct #usn7 Contains $0 Contains $usn2,0.e0)..] As @usn6 Order By $`1esn` Ends With 0X0123456789ABCDEF Ascending Limit `4esn` Contains 9e0 Match ``=((usn1 {_usn3:9e0[0X7..$`6esn`][123456789..0],`3esn`:123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]})-[:`6esn`|:#usn8{_usn4:0Xa Ends With $`3esn` Ends With $1000}]->(:`5esn`{`4esn`:0Xa[..Count ( * )][..$123456789]})),`1esn`=((usn1 :_usn4{`4esn`:`7esn` Is Null})) Union With  *,@usn5 Starts With $`3esn`,00[False..0e0] As `7esn` Order By 0.0[..Count ( * )][..`1esn`] Ascending,`1esn`[0.12..][@usn6..] Desc Skip True Contains .e12 Limit $0 =~9e1 =~$`2esn` Where 123.654[$0..0X7][Null..#usn8] Merge ((:`2esn`{`3esn`:9e1 Ends With Count(*) Ends With $7})<-[usn1?:`1esn`|`3esn` *01234567..{@usn5:`4esn`[\"d_str\"]['s_str']}]-({`7esn`:9e0 Contains $12 Contains `3esn`,`5esn`:.e0 Contains $#usn8})) Optional Match @usn5=((`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})) Union Return Distinct 0x0[..9e0],Filter(`5esn` In 0X7 In $#usn7 Where 010 Is Null) Is Not Null As `2esn` Order By 1.e1[12..][$`4esn`..] Asc,Null[..010][..1000] Descending,Any(_usn4 In 12e12 In 123456789 Where _usn3 In $`8esn` In @usn6)[Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789])][All(@usn5 In 9e0 Ends With $#usn8)] Descending Limit 1.e1[12..][$`4esn`..]"),
    octest:ct_string("Unwind $_usn4 =~_usn3 As _usn3 Merge usn2=(({`7esn`:`8esn` Contains Count(*) Contains $#usn7})<-[usn1? *0xabc{usn1:$_usn4 Starts With $1000 Starts With 12}]-(usn1 :usn1:`3esn`)) Unwind $#usn7 Ends With \"d_str\" As `7esn` Union All Merge `5esn`=(((usn1 :`8esn`)<-[@usn5? *01..123456789{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`}]->(`` :usn2{@usn5:$`4esn` Contains _usn3 Contains `8esn`,`7esn`:$`4esn`[`4esn`][Count(*)]})<-[? *0xabc]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]}))) On Create Set Any(#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[..$`8esn`][..Null]).`4esn`? =12.0[0X0123456789ABCDEF..],Extract(@usn5 In 's_str'[0..] Where $#usn8[12.e12..`8esn`][12.0..0.0]|123.654[$0..0X7][Null..#usn8]).#usn8! =12 Starts With \"d_str\" Starts With 00,`2esn` =12.0[$12..$_usn4] Unwind 0x0[..9e0] As #usn8 With Distinct 0e0[``],0X7 In $#usn7 Limit 12e12[12e12][$#usn7]"),
    octest:ct_string("Merge _usn3=((`2esn` {``:$0 =~9e1 =~$`2esn`,`8esn`:`5esn`[..123.654][...e12]})-[_usn3?{``:$@usn5 Contains 's_str' Contains \"d_str\",_usn3:$#usn8[12.e12..`8esn`][12.0..0.0]}]-(_usn3 :usn1:`3esn`)<-[`7esn`? *..010{usn2:12 Ends With Count ( * ),#usn8:`8esn` Contains `2esn` Contains .0}]->({`6esn`:'s_str' Contains 12.e12 Contains $`4esn`})) On Match Set #usn8+=Count(*)[$@usn5],@usn6 =0 =~1e1,`2esn`+=Extract(#usn7 In 9e1[$`1esn`..] Where $999[``]) Starts With (`6esn` :@usn6)<-[ *..07]-(:_usn3{`7esn`:9e0 Ends With $#usn8}) Starts With (#usn7 :@usn6)<-[? *01..123456789]-(`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]}) On Match Set `8esn`+=#usn8[..`8esn`],_usn4 =0e0 Ends With 07 Ends With $`8esn` Unwind .12[0X7..][12e12..] As `4esn` Return *,`2esn`[..$_usn4][...12] As `6esn`,`1esn` Starts With 9e1 As `6esn` Order By 01 Ends With 123456789 Desc,1.e1[12.e12..] Desc,\"d_str\" Is Not Null Ascending Skip [#usn7 In 9e0[$1000] Where `6esn`[$1000][`3esn`]][Extract(#usn7 In $999 In 1e1 Where 9e12 Starts With 1e1|010 Starts With $`` Starts With 0e0)..] Limit @usn6 =~999 =~@usn5 Union All Remove `5esn`:@usn5,{#usn8:$0[123.654..0.e0]}.@usn6!,{`1esn`:#usn7 Contains $0 Contains $usn2,`4esn`:999 Ends With $`` Ends With 0X0123456789ABCDEF}.#usn8!"),
    octest:ct_string("Merge `1esn`=(`5esn` :`5esn`{#usn7:``[$`3esn`]}) On Create Set @usn6+=$`1esn` =~1e1 On Match Set Any(`3esn` In 9e1 Contains $999 Where usn2[12.e12..]).usn1? =usn1[False..`5esn`][$1000..$12],#usn7 =Single(#usn7 In 9e0[$1000] Where $123456789[...12][..@usn6])[Filter(@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str'])..],Any(#usn8 In `7esn` Where .e12 Starts With $#usn8 Starts With False)._usn3? =1.e1 Ends With $#usn7 With  $1000 Starts With $`3esn` Starts With 0.e0 As @usn6,.e12 In $`5esn` In 0X7 As _usn4 Order By 1.e1 In 1000 In _usn3 Desc,None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 9e12[$`5esn`..$123456789]) In Extract(@usn5 In 's_str'[0..] Where 07 Ends With 9e12 Ends With `2esn`|00[01234567][False]) In [12 =~usn1] Descending,123.654 Is Null Is Null Asc Where _usn4[`7esn`] Union All Remove (:@usn6{`7esn`:$`6esn`[``..][Count(*)..]})<-[_usn4? *12..{`1esn`:$`6esn` Starts With .e12 Starts With $`1esn`,`3esn`:`8esn`[0.e0..]}]-(:`8esn`{usn2:$123456789 Contains $#usn8 Contains ``,_usn3:`3esn`[..0X0123456789ABCDEF][..0x0]})-[``?:`3esn` *12..]-(#usn7 {`1esn`:$`4esn` Is Null Is Null}).usn2?,Single(`3esn` In 9e1 Contains $999 Where $`8esn` Is Null Is Null).`6esn`? Delete $0[0Xa..$123456789],[usn2 In 7[12] Where #usn7[.e0]|$usn2 =~9e1] Is Null Is Null Union All Create (((`4esn` :``:usn2)<-[`3esn`?{@usn6:Count(*)[..@usn6][..`7esn`],`6esn`:`2esn` In 9e0 In 7}]-({`6esn`:@usn5[$`6esn`..][$999..],`8esn`:$@usn5[..0xabc][..$`3esn`]})-[:_usn4{`8esn`:12.e12 Is Not Null Is Not Null,#usn7:@usn6[Null...0][\"d_str\"..Count(*)]}]-(@usn6 {`5esn`:.e12 Starts With $#usn8 Starts With False}))),#usn8=((#usn7 :_usn3$usn1)<-[`4esn`?:usn1|`4esn`{`3esn`:123.654[..0.e0][..'s_str'],@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]}]->({`3esn`:`2esn` In 9e0 In 7})) Unwind Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4) Ends With [$@usn6 Is Not Null Is Not Null] As `3esn` Merge ``=(`1esn` {`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]})<-[`4esn`?:`4esn`|@usn5 *01..123456789]-(:usn1:`3esn`{`8esn`:12 Starts With True Starts With 12e12,`8esn`:`2esn` Starts With $`7esn`})-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]->(_usn4 {_usn4:Null[..010][..1000],_usn3:.0 Is Null Is Null}) On Match Set [$`7esn`[.e1][12.0]]._usn3! =123.654[..0.e0][..'s_str'],`2esn`+=.e0 =~Null,``:#usn7:`5esn` On Create Set None(`8esn` In 123456789 =~@usn6 Where Count(*) Ends With usn1).`7esn`! =All(usn2 In 7[12] Where #usn8 Is Null Is Null)[[usn2 In 7[12] Where #usn7[.e0]]..]"),
    octest:ct_string("Match #usn8=((`4esn` :@usn6)<-[@usn5?:usn2 *0..01]->(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})) Where `6esn` Starts With `6esn` Match #usn8=(`1esn` :`6esn`:_usn3{#usn7:0x0[$0][7]})-[?:``]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`}) Optional Match (:`3esn`{@usn6:$`5esn` =~$`8esn` =~usn2,`8esn`:12[..0e0][...e1]}),@usn5=(:@usn5{#usn7:12e12 In $`5esn`})<-[?{``:00 Contains Count ( * ) Contains 0x0,#usn8:123.654 In $`7esn`}]-(:usn2{``:0.0 =~9e0 =~$0})-[?*]-({`8esn`:`5esn` Contains #usn7 Contains 9e12}) Union All Unwind .e0[9e12..] As usn2 Union All Merge `1esn`=((`2esn` :`1esn`:_usn4)-[?:``]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`}))"),
    octest:ct_string("Create ((`6esn` {_usn4:$`5esn` Is Not Null Is Not Null})),`5esn`=(((`2esn` :`1esn`:_usn4)<-[`5esn`?{`8esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}]->(`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})<-[`4esn`:usn2]->(:`6esn`:_usn3{`2esn`:999[123.654..$usn2][Count ( * )..0x0]}))) Union All Unwind [#usn8 In `7esn` Where usn2[07..][.0..]|$usn1 Ends With _usn4 Ends With `2esn`] Contains (_usn3 {#usn7:1000[12e12][`5esn`]})-[`3esn`?:`3esn`]->(#usn8 :_usn3{_usn4:.e1[7..][9e0..]})-[? *..010{`2esn`:'s_str'[0..]}]->({`7esn`:1.e1 In 1000 In _usn3,`8esn`:010 Starts With $`` Starts With 0e0}) Contains Extract(`3esn` In `2esn`[..01][..True] Where usn1 In ``) As usn1 Return *,9e0[..123456789][..$`3esn`] As #usn7 Order By 999 In 0e0 Ascending Merge ((({usn2:_usn3[`2esn`..0X7][0.e0..$`3esn`]})<-[``?{usn2:$7 In 0.e0 In 999,usn1:'s_str' Starts With 9e0 Starts With usn2}]-(_usn3 )<-[? *..010{usn1:9e1[_usn3]}]->(`5esn` {`4esn`:0x0[usn1..usn1],usn1:$`5esn`[0X7..010][`7esn`..'s_str']}))) Union All Detach Delete $#usn8[True][9e0],None(_usn4 In 12e12 In 123456789 Where 1.e1 =~.12)[[$`4esn`[0..][999..],0x0[Count(*)..@usn6][Count(*)..0Xa],12e12 In $`5esn`]..],0.0 Contains #usn7 Match (((`` $`6esn`)<-[usn2*{_usn3:0.e0[0X0123456789ABCDEF..],`8esn`:$`5esn` In 07 In 00}]-(`3esn` {`8esn`:`5esn` Contains #usn7 Contains 9e12})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]}))),(((`` $`6esn`)<-[usn2*{_usn3:0.e0[0X0123456789ABCDEF..],`8esn`:$`5esn` In 07 In 00}]-(`3esn` {`8esn`:`5esn` Contains #usn7 Contains 9e12})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]}))) Where $@usn6 In @usn6 In 1e1"),
    octest:ct_string("Unwind [#usn7 In True Contains 's_str' Contains $usn1 Where $`1esn` Starts With Count(*)][All(#usn7 In True Contains 's_str' Contains $usn1 Where 0[1e1][$usn1])..][(:usn1:`3esn`{`8esn`:12 Starts With True Starts With 12e12,`8esn`:`2esn` Starts With $`7esn`})<-[ *0x0..]->(`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12})..] As usn2"),
    octest:ct_string("Remove Any(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 00[$usn1..]).#usn8!,({usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})-[:_usn3|:`7esn` *..07]->(`4esn` :_usn4).`7esn`!,None(#usn7 In True Contains 's_str' Contains $usn1 Where .e12[$@usn6..00][01234567.._usn3])._usn3! Detach Delete $@usn5 Contains 's_str' Contains \"d_str\",010 Is Null,Count(*)[..@usn6][..`7esn`]"),
    octest:ct_string("Remove [@usn5 Starts With $`3esn`].`2esn`?,_usn3(Distinct .0[..'s_str'][..01234567],$#usn7 Contains $`7esn` Contains .e12).usn1 Delete 010 Is Not Null Is Not Null Remove (:`1esn`:_usn4{`8esn`:#usn8 Is Null Is Null})<-[? *0X7..{``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]}]-(_usn3 :`4esn`:`6esn`{usn2:`4esn` Starts With 0e0,`3esn`:7[12]})-[`2esn`?:@usn6|:`7esn`]->(#usn8 :@usn5{_usn4:$#usn7 Contains $`7esn` Contains .e12}).`7esn`?"),
    octest:ct_string("Create `8esn`=(((`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null})-[`5esn`?:`7esn`|:`2esn` *0x0..]-(:_usn4{`1esn`:#usn7 Contains $0 Contains $usn2,`4esn`:999 Ends With $`` Ends With 0X0123456789ABCDEF})<-[? *12..{usn2:$`8esn`[123456789..][$@usn5..]}]->(:`1esn`:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null}))),`4esn`=(`` {`8esn`:@usn5 Starts With $`3esn`,_usn4:`6esn` Is Null Is Null})<-[`7esn`:`2esn`|`4esn`{_usn4:.e1[7..][9e0..]}]-(usn2 :usn1:`3esn`{`3esn`:`2esn` Is Null})<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(:`5esn`{#usn8:$``[True],`1esn`:@usn5 Is Null}) Union Return Distinct *,`6esn`,01234567[$`2esn`][0Xa] Limit None(#usn7 In 9e0[$1000] Where $_usn3 Is Null) In [@usn5 In 's_str'[0..] Where $#usn8[12.e12..`8esn`][12.0..0.0]|`4esn` Ends With 12 Ends With .12] In [#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 12.e12 Starts With \"d_str\" Starts With 9e1|$#usn7 Contains $`7esn` Contains .e12] Return `6esn`[`5esn`..00],$1000 Is Null Is Null,0.0[usn1..] As `3esn` Limit All(#usn7 In $999 In 1e1 Where 1.e1 In 1000 In _usn3) Contains (`6esn` :`8esn`{@usn6:12.e12 Contains #usn7 Contains $_usn4})-[`8esn`{`7esn`:9e12 Starts With 1e1}]-(_usn3 :_usn4) Contains [`8esn` Is Not Null Is Not Null,12 Starts With #usn7 Starts With 0Xa,.0 Starts With `1esn`] With  (`7esn` {#usn8:False Starts With 0X7 Starts With 01234567})<-[`8esn`? *0Xa{#usn8:$``[True]}]->(:`7esn`{usn2:@usn5 Is Not Null}) Is Null Is Null,$#usn8 Ends With `3esn` Ends With $`` As #usn7,{``:`6esn` =~$_usn4 =~7,`7esn`:9e0[$1000]}[#usn7(Distinct $`1esn`[``][07])..None(@usn6 In 010[`5esn`] Where $`3esn` Ends With 01234567)] As _usn3 Order By @usn6 =~999 =~@usn5 Ascending,``[7.._usn3] Descending,All(#usn7 In 9e0[$1000] Where 's_str'[0x0..1.e1]) Is Not Null Is Not Null Ascending Skip #usn8 Ends With $@usn5 Ends With $7 Limit #usn8[`8esn`..] Union All Return *,0X7[`2esn`..] As `6esn`,$`1esn` Contains 1e1 Contains @usn6 As `3esn` Order By $_usn3[_usn4..] Descending,9e1 Contains $999 Ascending With  _usn4(Distinct usn2[07..][.0..]) Ends With Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 12[$`5esn`..][False..]|$`2esn` Starts With `4esn` Starts With $usn1) Ends With Extract(@usn5 In 9e0 Ends With $#usn8 Where $`3esn` In $usn2),None(#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[..$`8esn`][..Null]) Is Null As `5esn` Remove _usn4(.12[0X7..][12e12..],9e1).#usn7!,All(usn2 In False[$usn1][0x0] Where 010 Starts With 0 Starts With 0.0).`8esn`"),
    octest:ct_string("Detach Delete `7esn` Ends With $7 Ends With $@usn5,0X0123456789ABCDEF Is Not Null Is Not Null,All(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 1e1 Contains 0.e0 Contains 9e1)[None(@usn6 In 010[`5esn`] Where 00[1.e1..])..[$12[$usn1..][Count(*)..],$@usn5 Contains 's_str' Contains \"d_str\"]][Extract(`3esn` In 9e1 Contains $999 Where 0e0 Starts With 999 Starts With `2esn`|9e1 Ends With Count(*) Ends With $7).._usn4(`1esn`[0.12..][@usn6..],#usn8 =~0.e0)] Union All Return *,All(@usn6 In 010[`5esn`] Where $@usn5 Ends With @usn5 Ends With 0xabc)[Extract(#usn7 In 9e1[$`1esn`..] Where 123.654 In $`7esn`)..[12.0 Starts With .12 Starts With `6esn`]],12 In $usn1 In 7 As `8esn` Skip None(#usn7 In True Contains 's_str' Contains $usn1 Where 00[12..$`6esn`]) Ends With None(#usn7 In 9e0[$1000] Where 1e1 Contains 0.e0 Contains 9e1) Limit $@usn5 Starts With .e1 Match `2esn`=(((`6esn` :`4esn`:`6esn`)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})<-[`4esn` *0Xa{@usn6:999 Starts With `2esn` Starts With .e1,`4esn`:$@usn5[..0xabc][..$`3esn`]}]->(@usn6 :``:usn2))),`7esn`=((:#usn7:`5esn`{`3esn`:Null[..0]})<-[@usn5? *0..01{`3esn`:$`1esn` In .e0,@usn6:12.0 =~@usn6 =~$`2esn`}]->(`6esn` :#usn7:`5esn`{_usn3:_usn4 Is Null Is Null})) Where $`5esn` =~usn1 Unwind #usn8 Is Null Is Null As `8esn` Union All Remove Single(#usn7 In 9e0[$1000] Where 's_str'[0x0..1.e1]).#usn7,usn2(.12 Starts With _usn3 Starts With $``)._usn3,`4esn`:`3esn` Unwind {`3esn`:.e1[..\"d_str\"][..$123456789]} As `3esn`"),
    octest:ct_string("Return Distinct *,None(#usn7 In 9e0[$1000] Where $``[True]) Ends With None(#usn8 In `7esn` Where $1000 Starts With $`7esn`) Ends With Single(#usn8 In `7esn` Where @usn5 Contains 9e0) Order By 0X0123456789ABCDEF In $usn2 In `4esn` Descending,0xabc In .12 In 0Xa Desc,01[$`7esn`..$@usn6] Ascending Skip 123.654[`4esn`..12] Create ((#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0})<-[`7esn`? *0Xa{@usn5:123.654 Is Not Null}]-(#usn8 :`2esn`{`1esn`:0x0 Starts With $`6esn`})) Union All Return Distinct 0Xa In #usn7 In 's_str' Limit 9e1[$1000][7] Return Distinct $usn2 =~1.e1 =~usn1 As `8esn`,``[$`3esn`] Order By 00[$`6esn`.._usn3][12e12..``] Desc Union Detach Delete {`5esn`:`6esn`[$`8esn`][9e1]} Is Not Null Is Not Null,12[None(#usn7 In 9e1[$`1esn`..] Where usn2 Is Not Null)..`5esn`(Distinct 00[$`1esn`..][@usn6..],@usn6[9e12])][`5esn`(`2esn`[..01][..True])..(`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]})<-[? *7..]-(#usn7 :``:usn2)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})],12.0 =~@usn6 =~$`2esn`"),
    octest:ct_string("With Distinct 12[$`5esn`..][False..] As `4esn`,0e0 Ends With 07 Ends With $`8esn` As `1esn` Limit All(@usn5 In 's_str'[0..] Where 07 Ends With 9e12 Ends With `2esn`)[Filter(`3esn` In 9e1 Contains $999 Where .e0 Is Not Null Is Not Null)..][Filter(@usn5 In 's_str'[0..] Where #usn7[0.12..])..] Union Unwind Extract(@usn6 In 010[`5esn`] Where 00[$usn1..]|_usn3[$usn2..][$``..])[Any(#usn7 In 9e1[$`1esn`..] Where #usn7[0])] As _usn3"),
    octest:ct_string("Merge ((`4esn` :`4esn`:`6esn`)-[`3esn`:`2esn`|`4esn`]-({#usn8:False Starts With 0X7 Starts With 01234567})<-[#usn7?:`5esn`|:usn2{`7esn`:123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]}]-(`` {``:$@usn6 Ends With 12.e12 Ends With @usn5,`2esn`:$`3esn` Ends With 01234567})) Create ((`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`})),@usn5=(({@usn5:$`5esn` Is Not Null Is Not Null})-[`1esn`?:@usn6|:`7esn` *..010]-(:`6esn`:_usn3{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})<-[?:`` *0..01]->({`2esn`:9e12[$`5esn`..$123456789],`8esn`:$usn2 =~9e1}))"),
    octest:ct_string("Unwind All(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07[_usn3..][`6esn`..]) =~All(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where .e12[..999][..@usn5]) =~Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4) As _usn4 Detach Delete $@usn6 Ends With `1esn` Union Merge (((:`5esn`{`4esn`:0Xa[..Count ( * )][..$123456789]})-[`8esn`?:`5esn`|:usn2 *01..123456789{`7esn`:`6esn`,`4esn`:'s_str' Starts With 9e0 Starts With usn2}]-({`7esn`:9e12 =~@usn6})<-[ *0x0..]->(`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12})))"),
    octest:ct_string("Unwind [@usn6 In False Contains 0 Contains $`6esn` Where usn1 Starts With 00|`5esn`[$`7esn`..$@usn5]] Is Not Null Is Not Null As @usn5 Create (((#usn7 :#usn8:`1esn`{``:.0[$``..0X7]})<-[? *0xabc]-(:@usn6{`6esn`:01 Ends With 0Xa Ends With 0X7})<-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->(usn2 :`5esn`))),usn1=(`7esn` :`3esn`{`2esn`:999[123.654..$usn2][Count ( * )..0x0]})-[`2esn`?:usn1|`4esn` *00..0Xa]-(`4esn` :`4esn`:`6esn`)"),
    octest:ct_string("Match `1esn`=(`3esn` )-[`7esn`:`4esn`|@usn5 *12..]-({`1esn`:#usn7[0]}),(`8esn` :`2esn`{@usn5:$`4esn` Contains _usn3 Contains `8esn`,`7esn`:$`4esn`[`4esn`][Count(*)]}) Where .0[$``..0X7] Union All Create ((`1esn` :usn2)),`2esn`=(`5esn` :``:usn2)<-[`8esn` *0xabc{#usn8:12.0 Starts With .12 Starts With `6esn`,@usn5:_usn3[`5esn`..][usn2..]}]->(@usn6 :usn1:`3esn`{@usn5:999 Starts With `2esn` Starts With .e1,``:0xabc In Null})<-[usn2?:@usn5|_usn3*{_usn4:@usn5 Starts With $`3esn`,#usn7:$`5esn` Is Not Null}]-(#usn7 :``:usn2)"),
    octest:ct_string("Return 12e12[0x0..12.e12] As `1esn`,.e1[7..][9e0..] As `4esn`,$#usn8 Starts With .e12 Starts With 1.e1 As `8esn` Order By $`5esn` In `2esn` In `2esn` Asc,0.0[..Count ( * )][..`1esn`] Ascending,[9e1 Ends With Count(*) Ends With $7,False[$usn1][0x0]] =~`2esn`(Distinct .12[01][@usn5],Count ( * ) Ends With $123456789) =~[@usn6 In False Contains 0 Contains $`6esn` Where $`8esn`[12.e12][_usn4]|12 Ends With Count ( * )] Ascending Optional Match (((:usn1:`3esn`{`8esn`:12 Starts With True Starts With 12e12,`8esn`:`2esn` Starts With $`7esn`})<-[`7esn`?:`2esn`|`4esn` *..010{usn1:0e0[``..$1000][$7..12.e12],`5esn`:0x0 Starts With $`6esn`}]->(@usn5 {_usn4:`5esn` Contains #usn7 Contains 9e12})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]}))) Where usn1[..$@usn6][..00] Unwind 0e0[999..$``] As usn1"),
    octest:ct_string("With  *,Single(#usn7 In True Contains 's_str' Contains $usn1 Where `2esn`[..$_usn3])[..{`8esn`:usn2 =~7,`5esn`:.e0[01234567..$`8esn`]}][..Any(@usn6 In 010[`5esn`] Where False[$`4esn`..])] As #usn8,$#usn7 Contains $`7esn` Contains .e12 As @usn5 Limit (:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[usn2? *0..01{`6esn`:#usn8 Is Null}]->(`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12}) Where 01[`3esn`..][Count(*)..] With  Any(#usn7 In 9e0[$1000] Where 123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]) Contains [$`4esn` In 1.e1 In #usn7,usn1[False..]] Contains Extract(@usn5 In 9e0 Ends With $#usn8 Where $`3esn` In $usn2) As #usn7 Order By @usn5[0..] Ascending,$@usn5 In $`6esn` In 12e12 Desc,#usn7 In 0.e0 Desc Skip {`8esn`:$_usn4 Starts With 12.e12} Is Null Is Null Limit 999 Contains $1000 Optional Match `2esn`=(_usn3 {`8esn`:0e0 =~7 =~12.0,_usn4:.e1[..$`3esn`][..01]})<-[_usn4{`2esn`:#usn8[`8esn`..],`2esn`:@usn6[9e12]}]-(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-(`2esn` :@usn5{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3}),`8esn`=((:#usn8:`1esn`)-[ *..07]->(`4esn` {``:.e1 Starts With 12.e12 Starts With `2esn`})-[`5esn`?:_usn3|:`7esn`]->({@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]})) Where .e1 In 123456789"),
    octest:ct_string("Unwind .e1[7..][9e0..] As `4esn` Delete [$`5esn` =~usn1,True[`3esn`],@usn6[9e12]][None(#usn7 In 9e1[$`1esn`..] Where 1.e1[12.e12..])..],$@usn5 In 12e12 In 01,All(`8esn` In 123456789 =~@usn6 Where @usn5 Contains 9e0)[(:#usn7:`5esn`)<-[#usn8? *0Xa]-(`5esn` :`5esn`{#usn7:``[$`3esn`]})<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(usn2 {usn1:.e12 Ends With 0Xa Ends With 0xabc})..] Remove Extract(`3esn` In `2esn`[..01][..True] Where $@usn6[$`8esn`..][123456789..]|_usn4 Is Null Is Null)._usn4?"),
    octest:ct_string("Return _usn4[@usn6..][$0..],[$usn2 =~1.e1 =~usn1,$usn1 Starts With usn1 Starts With True,$1000 Starts With $`3esn` Starts With 0.e0] In (`3esn` {`8esn`:`5esn` Contains #usn7 Contains 9e12})<-[`8esn`{`1esn`:123456789 =~@usn6,`1esn`:$`5esn`[0X7..010][`7esn`..'s_str']}]-(`4esn` :#usn8:`1esn`{`7esn`:.0[..'s_str'][..01234567],@usn6:False[..$`5esn`][..1e1]}) In None(`3esn` In 9e1 Contains $999 Where 12.0 Starts With .12 Starts With `6esn`),@usn5 Contains #usn8 Contains 12.0 As `4esn` Limit Any(#usn7 In $999 In 1e1 Where _usn4 Is Not Null Is Not Null) Is Null Union All Remove `5esn`($`4esn` In 1.e1 In #usn7,0Xa[Count(*)..]).`5esn`,(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"})<-[:``{``:.0[$``..0X7]}]-(#usn8 :`8esn`).`3esn`,None(#usn8 In `7esn` Where 9e12[..1e1][..'s_str'])._usn4? Union All Create `4esn`=(`` {`8esn`:@usn5 Starts With $`3esn`,_usn4:`6esn` Is Null Is Null})<-[`7esn`:`2esn`|`4esn`{_usn4:.e1[7..][9e0..]}]-(usn2 :usn1:`3esn`{`3esn`:`2esn` Is Null})<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(:`5esn`{#usn8:$``[True],`1esn`:@usn5 Is Null}),(:`6esn`:_usn3{`6esn`:`2esn` Starts With $`7esn`}) With  *,#usn7[``] As usn1,None(#usn7 In $999 In 1e1 Where 123456789 =~@usn6) =~Single(`3esn` In 9e1 Contains $999 Where .12 In `8esn` In $#usn8) =~(`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[`5esn`?{_usn4:$usn2 =~9e1}]->(`8esn` :#usn8:`1esn`{usn2:12.e12 Ends With $``,`2esn`:1e1 Contains 's_str' Contains `3esn`})-[`` *1000..0X0123456789ABCDEF]-(:usn1:`3esn`{_usn3:$`6esn`[1.e1][$_usn3]}) Order By $@usn6 In @usn6 In 1e1 Desc,.e1[..$`3esn`][..01] Desc Limit _usn3 Is Null Is Null Unwind 9e0[Count(*)..0.12][$`1esn`..12.0] As @usn6"),
    octest:ct_string("Create `1esn`=(`3esn` )-[`7esn`:`4esn`|@usn5 *12..]-({`1esn`:#usn7[0]}),usn1=((`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`})) Return Distinct #usn7[`8esn`..usn1][$999..`7esn`] As #usn8,[#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`]][[`2esn` Is Null]][Extract(#usn7 In $999 In 1e1|01234567[Null..$_usn3])] As `8esn`,999 In #usn8 In $`` Order By 999[12.e12] Desc,07 Ascending,[`6esn` In $`6esn`[``..][Count(*)..] Where $`6esn`[1.e1][$_usn3]|$`5esn` Is Not Null Is Not Null][{`6esn`:usn2 =~usn1 =~Count ( * ),@usn5:999 Is Not Null Is Not Null}..] Desc Merge #usn8=((`1esn` {usn1:12e12 In $`5esn`})<-[`8esn`?:#usn7|@usn5{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3}]-(:usn1:`3esn`{@usn6:.0 Ends With Count ( * )})) On Match Set [12e12 =~1e1,0X7[..$`8esn`]].`7esn` =1e1 Ends With $`2esn`,`8esn`+=01[$`7esn`..$@usn6] On Create Set [`5esn` In `7esn`[$usn2..][$123456789..] Where $`5esn` =~$0 =~``|.12 In `8esn` In $#usn8]._usn4? =7 =~0.12,`6esn` =Single(`5esn` In `7esn`[$usn2..][$123456789..] Where 12e12 Is Not Null) Is Not Null Is Not Null,Any(#usn7 In $999 In 1e1 Where 0X7['s_str'..][01..]).`3esn`! =(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})-[? *0Xa{usn1:`3esn`[0x0..]}]->(:`5esn`{`1esn`:0.e0}) Is Not Null Is Not Null Union Unwind {#usn7:$usn2[0.e0],`6esn`:.e1[..\"d_str\"][..$123456789]}[..Extract(@usn5 In 9e0 Ends With $#usn8 Where $7 In 0.e0 In 999|Count ( * ) In 0.12)][..[@usn6 In 010[`5esn`] Where 's_str' Starts With 9e0 Starts With usn2|$`5esn` =~$0 =~``]] As usn1 Unwind {@usn6:123.654 In 12,#usn7:12.e12 Ends With `` Ends With 0} Contains [`1esn`[usn1][0xabc],`5esn` Contains `7esn`,$``[True]] As usn1 Union Remove (`6esn` {_usn4:$`5esn` Is Not Null Is Not Null})<-[usn1:_usn4]-(#usn7 :@usn6).@usn5?,[@usn5 In 's_str'[0..] Where #usn7[0.12..]|.e12 Ends With 0Xa Ends With 0xabc].`1esn`? Remove [$usn2[0.e0],#usn8 Is Not Null Is Not Null,.12[01][@usn5]].`7esn`!,[_usn4 In 12e12 In 123456789 Where Count ( * ) Ends With $123456789|123.654[`4esn`..12]]._usn3? Remove Any(usn2 In 7[12] Where $@usn5[0.0][0X0123456789ABCDEF]).usn1!,[Count(*) Starts With usn2 Starts With `7esn`,07[$`2esn`..9e12][$`4esn`..9e12],9e1 Is Not Null Is Not Null].`2esn`?"),
    octest:ct_string("Unwind (:#usn7:`5esn`{usn1:.e1[..$`3esn`][..01],`4esn`:$`5esn` In .12})<-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]-(:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) Is Not Null As usn1"),
    octest:ct_string("Remove [@usn6 In 010[`5esn`] Where 1.e1[$usn1]|_usn3[0x0]].usn2?,usn1().usn1?,Extract(@usn5 In 's_str'[0..] Where #usn7[0.12..]).@usn6! Optional Match (:`2esn`{usn1:.0[..'s_str'][..01234567],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})<-[#usn8? *0Xa]-(`2esn` :`6esn`:_usn3),(@usn6 :`4esn`:`6esn`)-[ *0..01{@usn6:$0[123.654..0.e0]}]->(usn1 :`1esn`:_usn4{_usn3:@usn6[999..$_usn3][0.12..$@usn5],`1esn`:9e12[..1e1][..'s_str']})<-[`2esn`?:`6esn`|:#usn8{`2esn`:12.e12 Contains 9e1,`5esn`:.e1 Starts With 12.e12 Starts With `2esn`}]-(_usn3 {_usn3:0.12 Starts With $`8esn` Starts With @usn5}) Return Distinct *,`3esn`[12..1000][\"d_str\"..1000],@usn6[123.654..][0x0..] As _usn3 Order By $999 In 1e1 Descending,True[..#usn8] Ascending,#usn8 Starts With $1000 Starts With $@usn5 Ascending Skip ``[..#usn8]"),
    octest:ct_string("Remove Filter(`6esn` In $`6esn`[``..][Count(*)..] Where 7[0e0..]).`8esn`!,(_usn4 :`1esn`:_usn4)<-[?:`6esn`|:#usn8 *00..0Xa]-(:`8esn`{#usn7:`1esn`[`3esn`..],usn2:_usn3[$usn2..][$``..]}).@usn5! Unwind @usn5[0..] As usn2"),
    octest:ct_string("Return 0.0 Contains #usn7 As #usn8,Extract(@usn6 In False Contains 0 Contains $`6esn` Where $@usn6[$`8esn`..][123456789..]|.e1[usn2..$_usn3][.0..$#usn7]) Order By Any(`6esn` In $`6esn`[``..][Count(*)..] Where 1e1 Ends With $`7esn` Ends With .0) Is Not Null Descending,#usn8 Ends With $@usn5 Ends With $7 Desc,usn2[12.e12..] Asc Skip 12.0[$1000..][#usn7..] Limit $`2esn`[0..123456789][``..`1esn`] Delete Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $`2esn` =~9e12) Is Null Is Null,0Xa Contains `8esn` Contains 0xabc,Single(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where @usn6 In .12 In `3esn`) Contains {usn2:.12[123.654..],`2esn`:`8esn`[$`4esn`..$#usn8]} Contains All(#usn7 In $999 In 1e1 Where 9e12 Starts With 1e1) Union Detach Delete 12.e12 =~0X0123456789ABCDEF =~1.e1,$`8esn` Ends With 0x0 Ends With 0e0 Remove (@usn6 :`2esn`{_usn3:$``[7],`7esn`:_usn3 Ends With 7 Ends With $`1esn`})-[@usn6?{`4esn`:12.0 Starts With .12 Starts With `6esn`,#usn8:0.0 Is Null Is Null}]->(_usn3 :`3esn`{_usn3:01[`8esn`..9e12][.12..0]})<-[`7esn`:#usn7|@usn5*{`8esn`:$`3esn`[$_usn4..0Xa]}]-(:_usn4{_usn3:$#usn7[..0Xa],@usn5:12e12 In 123456789}).@usn5?,(`8esn` :@usn6{`7esn`:0e0[999..$``]})-[`6esn`? *01234567..]->(`8esn` {`5esn`:$@usn5 In $`6esn` In 12e12})-[?:`` *7..]-(#usn8 {usn2:12.e12[..$`6esn`],`4esn`:1e1 Contains 's_str' Contains `3esn`}).#usn8 With  0.12 Starts With $`8esn` Starts With @usn5 As @usn5,#usn7 Is Null Is Null As `1esn`,[@usn5[$`6esn`..][$999..],`` Starts With $123456789] Is Null Order By Any(#usn7 In 9e0[$1000] Where .e0 Is Null) In None(@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``) In Filter(@usn6 In False Contains 0 Contains $`6esn` Where $@usn5 In 12e12 In 01) Ascending,'s_str' Starts With 1e1 Starts With $0 Desc Where .e1[7..][9e0..] Union All Delete 0.0[..Count ( * )][..`1esn`] With  0Xa In #usn7 In 's_str',`4esn` Starts With 0e0 As `7esn` Skip $1000 Is Not Null Limit 0X7['s_str'..][01..] Unwind 123.654 In $999 In _usn3 As usn2"),
    octest:ct_string("Detach Delete `3esn` Starts With 9e0 Starts With usn1 Remove All(`6esn` In $`6esn`[``..][Count(*)..] Where 0X7['s_str'..][01..]).`2esn`!,(`3esn` {usn2:$usn2[`4esn`..9e12]})<-[`6esn`? *01234567..]->({`3esn`:`5esn` Contains `1esn` Contains usn1,`1esn`:999[@usn5..][Null..]})<-[_usn4?:@usn6|:`7esn`]->(_usn3 :`2esn`{@usn5:`4esn` Is Not Null Is Not Null}).`4esn` Merge ((@usn6 {`7esn`:999 In 0e0})<-[? *1000..0X0123456789ABCDEF{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}]-(`6esn` {`2esn`:$`3esn` Ends With 01234567})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)) On Create Set [`5esn` In `7esn`[$usn2..][$123456789..] Where `7esn` Is Null|$_usn4 =~$`1esn` =~`2esn`].`6esn` =Any(#usn7 In True Contains 's_str' Contains $usn1 Where `6esn` Starts With `6esn`) =~Single(#usn7 In $999 In 1e1 Where _usn4 Contains `` Contains 1.e1),@usn6+='s_str',Extract(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0 Ends With 12.0 Ends With `5esn`)._usn4! =Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|123.654 Is Not Null) Ends With usn2(01 Is Null) Ends With [$@usn6 Ends With 123456789 Ends With 12.0,12.e12 =~.0 =~usn1] On Create Set `6esn` ={`3esn`:12 Starts With #usn7 Starts With 0Xa} Is Null Is Null,usn1+=`4esn`[$_usn3..$`7esn`]"),
    octest:ct_string("Match ((`2esn` :_usn3)-[? *0xabc{`6esn`:$0[0Xa..$123456789],``:.e1[..\"d_str\"][..$123456789]}]-({@usn6:123.654 In 12,#usn7:12.e12 Ends With `` Ends With 0})),({@usn5:$`5esn` Is Not Null Is Not Null})<-[#usn8?:`8esn`{`1esn`:999 In #usn8 In $``,`8esn`:False[$`4esn`..]}]->(`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]}) Union All Delete $@usn5[..0xabc][..$`3esn`] Create ((`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]})),(((@usn6 )<-[`6esn`? *01234567..]->({`3esn`:`5esn` Contains `1esn` Contains usn1,`1esn`:999[@usn5..][Null..]})<-[? *0X7..{``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]}]-(:`6esn`:_usn3{`8esn`:.e12[..999][..@usn5],`3esn`:$_usn3 Is Null}))) Return 0X7[`2esn`..] Order By 0[@usn5..$#usn7] Ascending"),
    octest:ct_string("Return Distinct Any(@usn5 In 9e0 Ends With $#usn8 Where 12.e12 =~0X0123456789ABCDEF =~1.e1)[(`5esn` :#usn8:`1esn`{_usn3:`6esn` Is Null Is Null})<-[?{@usn6:$0[0Xa..$123456789],`4esn`:`7esn` Contains 9e0}]->({_usn3:0X0123456789ABCDEF Contains 12e12 Contains 12.e12})-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})..][Filter(#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`])..],@usn5 Contains #usn8 Contains 12.0 As `6esn` Order By @usn5 Is Not Null Asc,All(@usn5 In 's_str'[0..] Where 0Xa[..Count ( * )][..$123456789]) Is Not Null Is Not Null Ascending Skip #usn8 Is Not Null Is Not Null Merge ((`3esn` :usn2{`6esn`:#usn8 Is Null})-[:`2esn`|`4esn`{_usn3:@usn6[`1esn`..],@usn6:@usn6[9e12]}]->(`7esn` {`6esn`:0xabc[..$1000][..`5esn`],`4esn`:$@usn5 In 12e12 In 01})) On Match Set `5esn`+=[`5esn` In 0X7 In $#usn7 Where 0.e0['s_str'..][01234567..]][(`6esn` {_usn4:$`5esn` Is Not Null Is Not Null})-[ *999..{`3esn`:123456789 =~$999,_usn4:`4esn` Is Not Null Is Not Null}]-(usn1 :_usn4{`4esn`:`7esn` Is Null})] Union All Unwind @usn6[123.654..][0x0..] As usn1 Remove Extract(#usn7 In True Contains 's_str' Contains $usn1 Where 0 =~1e1).`8esn`!,[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $0[123.654..0.e0]|_usn3 Contains _usn4 Contains $@usn5].usn2!,{`4esn`:_usn4[@usn6..][$0..],@usn5:$@usn6 In @usn6 In 1e1}.`3esn`! Match usn1=((`3esn` {usn2:$usn2[`4esn`..9e12]})<-[?{@usn5:_usn3 Ends With 7 Ends With $`1esn`}]->(_usn3 :_usn4)<-[_usn4?:`3esn`]-(:_usn3{_usn4:.e1[7..][9e0..]})),usn1=(({#usn7:12e12 In $`5esn`})<-[?{`6esn`:$0[0Xa..$123456789],``:.e1[..\"d_str\"][..$123456789]}]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]-(`8esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07}))"),
    octest:ct_string("Delete $`8esn`[12.e12][_usn4] Optional Match (({`3esn`:_usn3[0x0],`3esn`:00[False..0e0]})<-[_usn4?:@usn6|:`7esn`]-({`3esn`:_usn3[0x0],`3esn`:00[False..0e0]})<-[_usn3?:_usn3|:`7esn`]->(`3esn` {`8esn`:`7esn` In 010 In usn1})) Union All Detach Delete Single(@usn6 In False Contains 0 Contains $`6esn` Where 12e12 In $`5esn`) Contains Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 0[1e1][$usn1]) Contains {`4esn`:9e1 Contains 12},@usn6 In .12 In `3esn`,@usn6 In .12 In `3esn` Return 0.e0[$`4esn`..`2esn`],12.e12 Starts With \"d_str\" Starts With 9e1,{``:00 In @usn6 In 0}[(_usn3 :`4esn`:`6esn`{usn2:`4esn` Starts With 0e0,`3esn`:7[12]})<-[ *7..{#usn7:$`8esn`[12.e12][_usn4],`2esn`:$0[123.654..0.e0]}]-(`` :#usn8:`1esn`{`8esn`:12[$`5esn`..][False..]})-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-({`6esn`:9e12 =~@usn6})] As `5esn` Skip Extract(#usn7 In $999 In 1e1 Where `5esn`[..True][..0.e0]|$`5esn` =~$0 =~``) In (:`7esn`{#usn8:0Xa Ends With $`3esn` Ends With $1000})-[:`5esn`|:usn2 *01234567..]-(:`2esn`{_usn3:@usn5[0.0..0X7]}) In Extract(#usn7 In True Contains 's_str' Contains $usn1 Where 9e1[$#usn8][$1000]|999 Contains 0 Contains $`5esn`) Create (((usn1 :#usn8:`1esn`{`3esn`:`2esn` In 9e0 In 7})<-[#usn8 *0x0..]->(#usn8 :_usn3{_usn4:.e1[7..][9e0..]})-[_usn4 *00..0Xa{`1esn`:$12 Starts With $usn1,`6esn`:123.654[`4esn`..12]}]-(usn2 :`5esn`{_usn4:`2esn` In 9e0 In 7,@usn5:9e1[`1esn`..0][999..1e1]})))"),
    octest:ct_string("Unwind Any(@usn6 In False Contains 0 Contains $`6esn` Where 12e12 In $`5esn`) =~[#usn7 In 9e1[$`1esn`..] Where 0Xa Ends With $`3esn` Ends With $1000|$@usn5 Contains 's_str' Contains \"d_str\"] =~Extract(@usn6 In False Contains 0 Contains $`6esn` Where $`6esn` Starts With .e12 Starts With $`1esn`|12e12 In 123456789) As #usn7 Remove Extract(#usn7 In $999 In 1e1 Where 9e12 Starts With 1e1|010 Starts With $`` Starts With 0e0)._usn3!,1000.`2esn`? Remove None(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`).@usn6?,[Count ( * ) In True In @usn5,#usn7[0.12..],1000[0e0][1e1]].`3esn`?"),
    octest:ct_string("Match `6esn`=((:`4esn`:`6esn`{`4esn`:$@usn5[..0xabc][..$`3esn`],`3esn`:$usn2[`2esn`..$`1esn`]})),`3esn`=(:_usn4)<-[`5esn` *0xabc]->(`` :`6esn`:_usn3)-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01}) Where 999 Is Null Is Null"),
    octest:ct_string("Remove Extract(#usn8 In `7esn` Where 9e12[$`5esn`..$123456789]|`1esn` Starts With 0xabc Starts With $usn2).`5esn`,{@usn6:0e0 =~7 =~12.0}._usn3!"),
    octest:ct_string("Detach Delete None(#usn7 In 9e0[$1000] Where $``[True]) Ends With None(#usn8 In `7esn` Where $1000 Starts With $`7esn`) Ends With Single(#usn8 In `7esn` Where @usn5 Contains 9e0),0e0 Starts With 999 Starts With `2esn` Merge (:_usn4{_usn3:$#usn7[..0Xa],@usn5:12e12 In 123456789}) Remove Extract(@usn6 In False Contains 0 Contains $`6esn` Where usn1 Starts With 00|01[..01234567][..$_usn3]).`6esn`?,None(#usn7 In $999 In 1e1 Where _usn4 Is Not Null Is Not Null).`5esn`"),
    octest:ct_string("Merge (((:`7esn`{_usn3:@usn5[0.0..0X7]})-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]->(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]})-[? *12..{usn2:$`8esn`[123456789..][$@usn5..]}]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]}))) On Match Set @usn5+=$0[123.654..0.e0],Any(`8esn` In 123456789 =~@usn6 Where .e1 =~_usn4 =~_usn4)._usn3? =01[..$`8esn`][..9e0],usn1 ={_usn4:``[9e12][$999],#usn8:123.654 In 12} Starts With Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0[0.0]) Starts With Filter(`6esn` In $`6esn`[``..][Count(*)..]) On Create Set [#usn7 In 9e1[$`1esn`..] Where 00 Ends With $`1esn` Ends With `7esn`].`2esn` =All(#usn7 In True Contains 's_str' Contains $usn1 Where $`1esn` Starts With Count(*)) In Any(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn`[0..][999..]) In Filter(`3esn` In 9e1 Contains $999 Where .e0 Is Not Null Is Not Null),``:@usn5,@usn5+=12.e12[_usn4..$1000][$7..$999] Delete {#usn7:12e12 In $`5esn`} Ends With {`6esn`:12 =~usn1,_usn3:`6esn`[$`8esn`][9e1]} Return {#usn8:1.e1 Is Null Is Null,_usn4:0xabc In 123456789 In 0x0}[All(@usn6 In 010[`5esn`] Where 00[1.e1..])..],`5esn`(0[1e1][$usn1],Null =~`6esn`)[usn2(Distinct)..][Single(#usn7 In 9e0[$1000] Where 01 Ends With 0Xa Ends With 0X7)..] As `1esn`,12.0 Starts With $`2esn` Starts With .e1 Order By [#usn8 In `7esn` Where $`3esn` Contains $`1esn`|$0[123.654..0.e0]][usn1(Distinct 999 Contains $1000,12[123.654..])..[.e12[..999][..@usn5],12.e12 =~.0 =~usn1,`6esn`[$1000][`3esn`]]][[@usn6 In 010[`5esn`] Where $usn2[`2esn`..$`1esn`]]..[`3esn` In 9e1 Contains $999 Where .12 In `8esn` In $#usn8]] Ascending Skip `1esn`(#usn7[..07])[..[#usn8 In `7esn` Where 9e1 Starts With Count ( * )|`3esn` Starts With 9e0 Starts With usn1]] Limit _usn3 =~`2esn` =~0 Union Remove All(_usn4 In 12e12 In 123456789 Where .e1 Starts With 12.e12 Starts With `2esn`).`3esn`!,Extract(#usn7 In 9e0[$1000]|9e12[$`5esn`..$123456789]).@usn5! Remove {_usn3:_usn4 Is Null Is Null}.``,``(@usn6[`1esn`..]).`7esn`! Remove All(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 12.e12[0..0.12][123.654..9e12]).`2esn`,[1000[..`2esn`][..$@usn6],Count(*) Is Null].`4esn`!,`8esn`:`5esn`"),
    octest:ct_string("Create (((`6esn` :`4esn`:`6esn`)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})<-[`4esn` *0Xa{@usn6:999 Starts With `2esn` Starts With .e1,`4esn`:$@usn5[..0xabc][..$`3esn`]}]->(@usn6 :``:usn2))) Match @usn6=((usn1 :_usn3{`4esn`:$`6esn`[1.e1][$_usn3]})<-[:_usn4]->(:usn2{@usn5:07 Ends With 9e12 Ends With `2esn`})<-[ *00..0Xa]->(`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null})) Where 1e1 In 0.0 In 0X0123456789ABCDEF With  (#usn7 {_usn4:1.e1[`8esn`]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) =~Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12) =~{usn2:#usn8[`8esn`..]},9e1[$#usn8][$1000] As `5esn`,$usn1 Order By usn1 Ends With 9e0 Ends With 9e0 Descending,None(usn2 In 7[12] Where 123456789 =~12 =~'s_str')[{@usn5:$`` Contains $`2esn` Contains $usn2}..][(`2esn` :`6esn`:_usn3)-[?:#usn8|:`3esn` *7..]-({`7esn`:9e12 =~@usn6})..] Descending Skip (:`6esn`:_usn3{@usn6:7 =~`4esn`,_usn3:`6esn`[$1000][`3esn`]})-[_usn4:_usn4 *0X7..{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]}]-(:`6esn`:_usn3{`4esn`:#usn7 Contains $0 Contains $usn2})[[$`6esn`[1.e1][$_usn3]]][usn2(0xabc In Null)] Union All Create (`5esn` :``:usn2)-[?{_usn3:`4esn`[$_usn3..$`7esn`]}]-({usn2:.12[0X7..][12e12..],`6esn`:$`4esn`[`6esn`..$12]}) Return _usn3[`2esn`..0X7][0.e0..$`3esn`] As `7esn` Order By [usn2[12e12..]['s_str'..]] =~Single(`8esn` In 123456789 =~@usn6 Where $`4esn`[`4esn`][Count(*)]) Ascending,`4esn`[\"d_str\"]['s_str'] Ascending,.12 In `8esn` In $#usn8 Asc Skip None(@usn6 In 010[`5esn`] Where 123.654 In $`7esn`)[(`` {`7esn`:$#usn7[..0Xa]})<-[`1esn`?:usn1|`4esn` *00..0Xa]-(_usn4 :@usn5{usn1:$#usn7 Starts With 01234567 Starts With $0})<-[usn1? *01234567..{@usn5:01[`3esn`..][Count(*)..]}]->(`3esn` :`6esn`:_usn3{`4esn`:12.0 Starts With .12 Starts With `6esn`,#usn8:0.0 Is Null Is Null})..[False Contains 0 Contains $`6esn`,`1esn` Is Not Null Is Not Null]] Limit [0.e0[..$7],$usn2[True..0X0123456789ABCDEF],`2esn` =~.e12 =~0X0123456789ABCDEF] Contains Extract(#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[..$`8esn`][..Null]|@usn5 Contains #usn8 Contains 12.0) Detach Delete {`2esn`:12.e12 Is Not Null Is Not Null,``:Count ( * ) In True In @usn5} Ends With {`7esn`:$1000 Starts With $`3esn` Starts With 0.e0,``:$`2esn` Is Null} Ends With [0X7 In $#usn7,`4esn` Is Not Null Is Not Null,.0[.e12..]],$`5esn`[0X7..010][`7esn`..'s_str'] Union Unwind None(#usn7 In $999 In 1e1 Where `1esn`[0.12..][@usn6..])[..[_usn4 In 12e12 In 123456789 Where 1.e1 =~$_usn4]] As `4esn`"),
    octest:ct_string("Delete _usn4[$usn1..01234567][123.654..`5esn`] With  *,1.e1 Ends With $#usn7 As usn2,@usn5[01][@usn5] Skip $`5esn` Limit (`7esn` :`2esn`{`4esn`:0[1e1][$usn1],usn2:`8esn`[..$#usn8]})-[:`6esn`|:#usn8{``:`1esn` Starts With 0xabc Starts With $usn2}]-(_usn3 :`2esn`{@usn5:`4esn` Is Not Null Is Not Null})-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01}) Is Not Null Union Delete {#usn8:0e0 =~0Xa =~$999,`7esn`:`3esn`} In [#usn7 In True Contains 's_str' Contains $usn1 Where Count(*) Ends With usn1] In None(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 1e1 Is Not Null Is Not Null) Merge (_usn3 :`4esn`:`6esn`)-[?:@usn6|:`7esn`]-(:#usn8:`1esn`)-[_usn3?]-(`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]}) Detach Delete $_usn3,[Count(*)[9e12..12.0]] Starts With [`5esn` In 0X7 In $#usn7 Where 123456789 =~$999|$`8esn` Is Not Null Is Not Null] Starts With [$usn2 Is Not Null Is Not Null,0 =~1e1]"),
    octest:ct_string("Detach Delete (`5esn` :`6esn`:_usn3)-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->({#usn8:False Starts With 0X7 Starts With 01234567})<-[usn2?{``:$`1esn`[``][07]}]->(#usn7 {`7esn`:`8esn` Contains Count(*) Contains $#usn7}) Is Null Is Null,[`5esn` Contains `1esn` Contains usn1,$@usn5 Ends With @usn5 Ends With 0xabc] Is Null Is Null Return Distinct `1esn`(.0 Starts With `1esn`,01[`3esn`..][Count(*)..]) In [@usn6 In False Contains 0 Contains $`6esn` Where `1esn` Starts With 0xabc Starts With $usn2] As `4esn`,`7esn`[$usn1..]['s_str'..] Detach Delete 01[`3esn`..][Count(*)..],usn2[07..][.0..] Union Remove (:`4esn`:`6esn`{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7})-[ *0xabc{``:usn1 Contains 010,`2esn`:$0 In `3esn` In 07}]->(_usn4 :#usn7:`5esn`)<-[_usn4]->(`1esn` {#usn7:$`1esn` Ends With 0X0123456789ABCDEF,`3esn`:.12 Starts With _usn3 Starts With $``}).`6esn` Remove Extract(`3esn` In 9e1 Contains $999 Where .e12 Ends With 0Xa Ends With 0xabc|$@usn5 Ends With @usn5 Ends With 0xabc).#usn7"),
    octest:ct_string("Remove {``:.e12 Ends With 0Xa Ends With 0xabc}.usn2? Union Merge `2esn`=(((:`6esn`:_usn3)<-[`1esn`:`8esn` *7..]->(`` {#usn8:.e12 Is Null Is Null,@usn6:`1esn` Is Not Null Is Not Null})-[#usn7?:`7esn`|:`2esn` *..07]-(#usn7 {#usn7:1.e1 Starts With 9e12}))) On Create Set usn2+=$12 Starts With $0 Starts With $`8esn`,`1esn`+=12.0 Starts With .12 Starts With `6esn`"),
    octest:ct_string("Remove [`3esn` In `2esn`[..01][..True] Where 00[01234567][False]].`7esn`!,Any(usn2 In False[$usn1][0x0] Where 12.e12 =~0X0123456789ABCDEF =~1.e1)._usn3,Extract(#usn7 In 9e1[$`1esn`..] Where $`7esn`[$_usn4][.e0]|$`3esn`[..$1000][..$123456789]).`1esn`? Union All Return Distinct *,$_usn4[9e0..][$1000..] As `2esn` Order By $12 =~0X7 =~0x0 Ascending,1e1[_usn3] Asc"),
    octest:ct_string("Create `4esn`=((@usn5 {`4esn`:1000[12e12][`5esn`],`1esn`:07 Ends With 9e12 Ends With `2esn`})<-[?:`3esn`*..]-(usn2 :`1esn`:_usn4{usn2:999 Contains $1000})),_usn3=(`8esn` :`2esn`)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})<-[`6esn`]->({#usn8:.e12 Is Null Is Null,@usn6:`1esn` Is Not Null Is Not Null}) Match ((#usn7 {`6esn`:$`2esn` Contains Count(*)})-[?:_usn4]->(`2esn` :usn2)) Remove `1esn`:@usn5 Union With  12[..0e0][...e1] Order By `4esn` =~$`3esn` =~@usn5 Descending,1000[7..$12] Ascending,True Ends With $_usn3 Ends With 12 Desc Delete `1esn`[`3esn`..],9e12[$`5esn`..$123456789]"),
    octest:ct_string("Remove {`1esn`:0xabc =~$@usn5}.#usn8 With Distinct *,None(#usn8 In `7esn` Where 9e1 Starts With Count ( * ))[..Any(usn2 In 7[12] Where 9e1 Is Not Null Is Not Null)] As #usn7,12 Is Not Null As `6esn` Order By Null[.12..12e12] Descending Detach Delete $`5esn` In 07 In 00 Union With Distinct 999[12e12..$_usn4] Order By Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where $usn2 =~1.e1 =~usn1|123.654[$0..0X7][Null..#usn8])[(`1esn` {_usn4:`8esn` Is Null})<-[_usn4? *12..{`1esn`:$`6esn` Starts With .e12 Starts With $`1esn`,`3esn`:`8esn`[0.e0..]}]-(:`5esn`{`1esn`:0.e0})..][All(#usn7 In True Contains 's_str' Contains $usn1 Where usn2 Contains $0 Contains .0)..] Descending,0X7[.0] Asc,$`3esn`[..0X0123456789ABCDEF][..7] Descending Limit #usn7 =~9e12 Where _usn4 Contains `` Contains 1.e1"),
    octest:ct_string("Return Distinct *,Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 1e1 Contains 0.e0 Contains 9e1|12.e12 Ends With $``) Is Null Is Null Order By Extract(#usn7 In 9e1[$`1esn`..] Where $999[``]) Starts With (`6esn` :@usn6)<-[ *..07]-(:_usn3{`7esn`:9e0 Ends With $#usn8}) Starts With (#usn7 :@usn6)<-[? *01..123456789]-(`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]}) Ascending,$@usn5[..$#usn7] Descending,{`3esn`:.e1[..\"d_str\"][..$123456789]} Descending Skip 9e1 Starts With Count ( * ) Limit {`1esn`:$999[``],@usn5:#usn7 Starts With $123456789 Starts With 12e12}[(_usn3 :`7esn`)-[`2esn`? *1000..0X0123456789ABCDEF{`8esn`:$7 In $usn1 In 999,@usn5:00 Ends With `` Ends With 12.e12}]-(:usn2{`5esn`:True[0xabc..01234567][$`8esn`..$@usn6]})..]"),
    octest:ct_string("Create `8esn`=(usn2 :`7esn`)-[? *7..{#usn7:`4esn`[123456789]}]-(:usn1:`3esn`{@usn6:.0 Ends With Count ( * )}),_usn4=((`2esn` {`4esn`:1000[12e12][`5esn`],`1esn`:07 Ends With 9e12 Ends With `2esn`})-[:@usn6|:`7esn`{#usn7:.0[.e12..],usn2:usn2 =~usn1 =~Count ( * )}]-(`1esn` :``:usn2{@usn5:`4esn`[\"d_str\"]['s_str']})-[:`6esn`|:#usn8{_usn4:0Xa Ends With $`3esn` Ends With $1000}]->(:`5esn`{`4esn`:0Xa[..Count ( * )][..$123456789]})) Union With Distinct *,1e1 Is Not Null Is Not Null Where `7esn` Ends With $7 Ends With $@usn5 Union All With  *,$`7esn`[$_usn4][.e0],`5esn` Contains `1esn` Contains usn1 As `2esn` Order By `4esn` Contains 9e0 Desc,[@usn5 In 9e0 Ends With $#usn8 Where 12.e12 =~0X0123456789ABCDEF =~1.e1|00[$`1esn`..][@usn6..]] Is Not Null Asc Skip [`8esn`[0.e0..],1e1 Contains 's_str' Contains `3esn`] In [`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]] Limit $@usn6 =~#usn7 =~True Where 12.0 Is Null Remove Filter(`6esn` In $`6esn`[``..][Count(*)..] Where 7[0e0..]).`8esn`!,(_usn4 :`1esn`:_usn4)<-[?:`6esn`|:#usn8 *00..0Xa]-(:`8esn`{#usn7:`1esn`[`3esn`..],usn2:_usn3[$usn2..][$``..]}).@usn5! Match `4esn`=((@usn5 {`4esn`:1000[12e12][`5esn`],`1esn`:07 Ends With 9e12 Ends With `2esn`})<-[?:`3esn`*..]-(usn2 :`1esn`:_usn4{usn2:999 Contains $1000})),_usn3=(`8esn` :`2esn`)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})<-[`6esn`]->({#usn8:.e12 Is Null Is Null,@usn6:`1esn` Is Not Null Is Not Null})"),
    octest:ct_string("Merge `3esn`=((`8esn` :@usn5{`5esn`:_usn3 In $`8esn` In @usn6,_usn4:$@usn6 Ends With 12.e12 Ends With @usn5})-[?:#usn7|@usn5 *0X0123456789ABCDEF..{_usn3:@usn5 Is Not Null}]-(#usn8 {`5esn`:$12[$usn1..][Count(*)..],`7esn`:0e0[``..$1000][$7..12.e12]})-[`4esn`?:#usn8|:`3esn`{`3esn`:01 Is Null,`1esn`:123456789[12]}]-(:_usn4{#usn7:1000[..`2esn`][..$@usn6],`1esn`:12e12 Starts With $0 Starts With $`2esn`})) Remove Filter(#usn7 In 9e0[$1000] Where 01 Ends With 0Xa Ends With 0X7).#usn8?,[$#usn7 Ends With 's_str' Ends With 0X7,12e12 Ends With 0.0 Ends With usn1].@usn6?,usn2(usn1 Ends With 9e0 Ends With 9e0).`4esn`? Union All Match usn2=((#usn7 {`8esn`:`7esn` In 010 In usn1})<-[usn1]->(:`6esn`:_usn3{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})<-[:`8esn` *999..{@usn6:`7esn` Ends With $7 Ends With $@usn5,``:0e0 Starts With 999 Starts With `2esn`}]->(`1esn` :@usn6{`6esn`:00[False..0e0],`6esn`:$usn2 =~1.e1 =~usn1})),@usn5=(:#usn8:`1esn`{`3esn`:123.654[..0.e0][..'s_str']}) With  *,1.e1 =~$_usn4,9e12 Contains $_usn3 Contains \"d_str\" As @usn5 Order By `2esn`($`2esn`[..$`3esn`][..12e12])[usn1($0[123.654..0.e0])..'s_str'][.e12..Single(#usn7 In $999 In 1e1 Where _usn4 Is Not Null Is Not Null)] Desc,Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where $usn2 =~1.e1 =~usn1|123.654[$0..0X7][Null..#usn8])[(`1esn` {_usn4:`8esn` Is Null})<-[_usn4? *12..{`1esn`:$`6esn` Starts With .e12 Starts With $`1esn`,`3esn`:`8esn`[0.e0..]}]-(:`5esn`{`1esn`:0.e0})..][All(#usn7 In True Contains 's_str' Contains $usn1 Where usn2 Contains $0 Contains .0)..] Descending,$@usn5 Descending Where `6esn`[$1000][`3esn`]"),
    octest:ct_string("Detach Delete @usn6 Is Not Null Is Not Null,01 Contains usn2 Contains 0X0123456789ABCDEF,None(#usn7 In $999 In 1e1 Where 1000[12e12][`5esn`])[Any(`3esn` In `2esn`[..01][..True] Where $`3esn`[..0xabc][..$7])][$#usn7] Union With  (`2esn` {`7esn`:999 In 0e0})<-[`8esn`?:`2esn`|`4esn` *01..123456789{`8esn`:$`4esn` Is Null Is Null,usn1:$1000 Starts With $`3esn` Starts With 0.e0}]->(:#usn7:`5esn`{_usn3:0x0[Count(*)..@usn6][Count(*)..0Xa]})<-[ *0X7..{#usn8:.e0 Contains $#usn8}]->(`2esn` :`6esn`:_usn3) In (`8esn` :`6esn`:_usn3)-[`2esn`? *..07{`2esn`:`3esn`[0x0..]}]->(_usn4 {_usn4:123.654 In 12})-[?:#usn8|:`3esn` *0x0..]-(_usn3 :`4esn`:`6esn`{usn2:`4esn` Starts With 0e0,`3esn`:7[12]}) In {_usn4:.e0 Contains $#usn8,@usn6:1000[12e12][`5esn`]},`7esn`(Distinct `1esn` Starts With 0xabc Starts With $usn2)[({`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12})-[`6esn`?:@usn5|_usn3 *01234567..]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})..] As @usn5 Order By Count(*) Is Null Ascending,#usn8[..`8esn`] Ascending,None(`5esn` In `7esn`[$usn2..][$123456789..] Where 12.e12 Starts With \"d_str\" Starts With 9e1) Contains `3esn`(Distinct $123456789[...12][..@usn6]) Contains {``:`1esn` Starts With 0xabc Starts With $usn2} Descending Skip (`` {`8esn`:$`6esn`[``..][Count(*)..]})<-[``? *0x0..{`6esn`:$`2esn` Contains Count(*)}]->(`6esn` :usn1:`3esn`)-[`3esn`?:`7esn`|:`2esn`]-(`3esn` {``:9e1 Is Null,usn1:9e0[Count(*)..0.12][$`1esn`..12.0]})[..{`6esn`:.e12 Is Null Is Null}]"),
    octest:ct_string("Merge `3esn`=(usn1 :#usn8:`1esn`{`3esn`:`2esn` In 9e0 In 7})-[@usn5?{#usn7:12e12 In $`5esn`}]->(`8esn` :`8esn`) Unwind 0.12[$0..$usn2] As `7esn` Union All Remove Any(`5esn` In `7esn`[$usn2..][$123456789..] Where 12e12 Is Not Null).@usn6!,[$0 In `3esn` In 07,123456789 Contains 0.0 Contains $@usn6].#usn8! Union Optional Match #usn8=(({`8esn`:usn2 Starts With .0,@usn5:Count(*) In 12 In `6esn`})<-[_usn3:usn1|`4esn`{`6esn`:12e12 =~1e1}]->({`8esn`:usn2 Starts With .0,@usn5:Count(*) In 12 In `6esn`})-[`7esn`?]->(:#usn7:`5esn`)),@usn5=((:``:usn2{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7})) Match @usn5=(:`6esn`:_usn3{`6esn`:`2esn` Starts With $`7esn`})<-[:`2esn`|`4esn` *12..]->({`7esn`:`4esn` Is Not Null Is Not Null,`4esn`:`4esn` Ends With 12 Ends With .12})<-[?:#usn8|:`3esn`{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]-(:usn1:`3esn`{_usn4:$#usn7 Contains $`7esn` Contains .e12}) With Distinct *,999 Contains [@usn6 In False Contains 0 Contains $`6esn` Where `1esn` Starts With 0xabc Starts With $usn2] Contains {_usn3:123.654 In $`7esn`} As `6esn`,.e0 Is Not Null Is Not Null As `7esn` Order By _usn3 In $`8esn` In @usn6 Desc"),
    octest:ct_string("Delete Count ( * )[9e12],12.0 Is Null,$@usn5[0.0][0X0123456789ABCDEF] Optional Match ((_usn3 :@usn5{`8esn`:1e1 Contains 's_str' Contains `3esn`})-[?:`2esn`|`4esn`{@usn5:0.e0}]-(`1esn` $`4esn`)),(_usn3 :`7esn`)-[*..{``:.e1 Starts With 12.e12 Starts With `2esn`}]-(#usn7 :_usn3) Remove [999 Is Not Null Is Not Null,123.654 In $`7esn`].`6esn` Union All Remove {usn1:0 =~1e1,`7esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}.usn1!,None(`5esn` In `7esn`[$usn2..][$123456789..] Where $123456789[...12][..@usn6]).usn2? Unwind $#usn8[..$999] As #usn7 Optional Match _usn4=((:`3esn`{#usn7:$#usn7 In $@usn5 In $`1esn`})),(`2esn` :`1esn`:_usn4)-[?*..]-({`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})"),
    octest:ct_string("Remove Extract(`6esn` In $`6esn`[``..][Count(*)..] Where 9e0[Count(*)..0.12][$`1esn`..12.0]|`2esn`[..01][..True]).#usn8!,[.0[$``..0X7],'s_str'[0..],0.0[usn1..]].`1esn`? Return Distinct usn2[12.e12..] As `2esn` Order By $@usn5 In $`6esn` In 12e12 Desc,07[_usn3..][`6esn`..] Descending,$`4esn` Contains _usn3 Contains `8esn` Asc Limit 0x0[0X7]"),
    octest:ct_string("Detach Delete Extract(@usn6 In False Contains 0 Contains $`6esn` Where $0 Ends With $usn1 Ends With $_usn3),$#usn8 Ends With `3esn` Ends With $``,01 Ends With .12 Ends With 07 Optional Match #usn8=(((:usn1:`3esn`{`8esn`:12 Starts With True Starts With 12e12,`8esn`:`2esn` Starts With $`7esn`})<-[`7esn`?:`2esn`|`4esn` *..010{usn1:0e0[``..$1000][$7..12.e12],`5esn`:0x0 Starts With $`6esn`}]->(@usn5 {_usn4:`5esn` Contains #usn7 Contains 9e12})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]}))) Where .12[123.654..]"),
    octest:ct_string("With Distinct (:@usn5{@usn5:999[..`1esn`][..07],_usn4:Count ( * ) Ends With $123456789})<-[`2esn`? *01..123456789]-(`2esn` :@usn6)[[`2esn`[..$_usn4][...12],False Contains 0 Contains $`6esn`,.e1[12.0..]]..[#usn7 In 9e0[$1000] Where #usn8 =~0.e0|12.e12 =~0X0123456789ABCDEF =~1.e1]],`1esn`[0Xa] As usn1,usn1 Contains 010 As @usn5 Order By [Count(*)[9e12..12.0]] Starts With [`5esn` In 0X7 In $#usn7 Where 123456789 =~$999|$`8esn` Is Not Null Is Not Null] Starts With [$usn2 Is Not Null Is Not Null,0 =~1e1] Ascending,None(`3esn` In 9e1 Contains $999 Where 0xabc In Null) Is Not Null Descending,Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $12[9e0..$999]|.12 Starts With _usn3 Starts With $``) Descending Limit Filter(`6esn` In $`6esn`[``..][Count(*)..] Where $7 In $usn1 In 999) Ends With Any(usn2 In 7[12] Where 0X7[.0]) Where @usn6 Is Not Null Is Not Null Create (`3esn` )-[#usn8:`4esn`|@usn5]-(:#usn7:`5esn`{`3esn`:Null[..0]}) Remove Any(`3esn` In 9e1 Contains $999 Where `2esn` Starts With 12.e12 Starts With 12.0).usn1,All(usn2 In 7[12] Where $@usn5[..0xabc][..$`3esn`])._usn4!,7._usn4 Union Merge #usn8=(((#usn8 :``:usn2)-[`3esn`:`2esn`|`4esn`]-({#usn8:False Starts With 0X7 Starts With 01234567})<-[@usn5? *0xabc{`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]}]->(@usn6 :``:usn2{usn1:0x0[0X7],@usn5:`4esn`[.12][$@usn6]}))) On Match Set #usn8 =[`5esn` Contains `1esn` Contains usn1,$@usn5 Ends With @usn5 Ends With 0xabc] Is Null Is Null,`8esn` =[$@usn6 =~#usn7 =~True,$`1esn` Contains 1e1 Contains @usn6,9e1[..123456789]] Is Null On Match Set #usn7+=@usn6[123.654..][0x0..],`3esn`+=00 In @usn6 In 0,@usn6 =Filter(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]) Is Not Null Is Not Null Remove {usn1:12[$`5esn`..][False..]}.`1esn` Union Remove [`3esn` In `2esn`[..01][..True] Where 00[01234567][False]].`7esn`!,Any(usn2 In False[$usn1][0x0] Where 12.e12 =~0X0123456789ABCDEF =~1.e1)._usn3,Extract(#usn7 In 9e1[$`1esn`..] Where $`7esn`[$_usn4][.e0]|$`3esn`[..$1000][..$123456789]).`1esn`?"),
    octest:ct_string("Unwind 00[$usn1..] As `3esn`"),
    octest:ct_string("Merge (`2esn` :`1esn`:_usn4)-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-({`6esn`:9e12 =~@usn6}) On Match Set `5esn`+=010[..7][..`4esn`],(`2esn` :@usn5)-[`5esn`? *01..123456789{`5esn`:@usn6[9e12],`5esn`:@usn6[999..$_usn3][0.12..$@usn5]}]-(`1esn` {`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]}).`4esn`! =$@usn6 Ends With `1esn`,`6esn` =.0[$``..0X7] Union All Remove All(#usn7 In True Contains 's_str' Contains $usn1 Where .e12[$@usn6..00][01234567.._usn3]).usn2,[@usn6 In False Contains 0 Contains $`6esn` Where $`5esn`[..00]|_usn3 Contains 9e12 Contains `8esn`].`3esn`?,{`4esn`:.e1[7..][9e0..],`8esn`:00 In @usn6 In 0}.`4esn`? Unwind All(#usn7 In 9e0[$1000] Where 0x0[12e12..$`7esn`])[(:`5esn`{_usn4:12 Starts With #usn7 Starts With 0Xa,#usn7:999 Is Null Is Null})<-[``:`4esn`|@usn5 *0xabc{#usn8:9e1 Contains $999,`5esn`:0e0[01][$`7esn`]}]-(_usn3 :`6esn`:_usn3{`6esn`:0.0 Is Not Null,`6esn`:$`8esn`[..True][.._usn4]})][{_usn4:@usn5 Starts With $`3esn`,#usn7:$`5esn` Is Not Null}] As #usn8 Union Merge `3esn`=(usn1 :`7esn`{`7esn`:9e12 Starts With 1e1,_usn3:$`7esn`[$_usn4][.e0]}) On Match Set _usn3+=#usn7[..07],(:`2esn`{`3esn`:9e1 Ends With Count(*) Ends With $7})-[#usn7?{`5esn`:.e12 Starts With $#usn8 Starts With False}]->(usn1 :`7esn`).`4esn` =1.e1[$`3esn`][0Xa],All(@usn5 In 's_str'[0..] Where `2esn`[..01][..True]).`2esn`! =`3esn`(#usn8 =~0.e0,1000[0e0][1e1])[[_usn3[0x0],1e1 In 0.0 In 0X0123456789ABCDEF]] On Create Set Filter(usn2 In False[$usn1][0x0] Where .e1[usn2..$_usn3][.0..$#usn7]).``! =12 Contains 01234567"),
    octest:ct_string("Match ((`7esn` :`2esn`{`4esn`:0[1e1][$usn1],usn2:`8esn`[..$#usn8]})<-[_usn4?:usn2]-(@usn6 :`6esn`:_usn3{@usn5:0xabc =~$@usn5,usn1:0Xa[$`8esn`..][$_usn4..]})-[`3esn`?:`7esn`|:`2esn`]-(`5esn` :#usn8:`1esn`{_usn3:`6esn` Is Null Is Null})),(:_usn4{_usn3:$#usn7[..0Xa],@usn5:12e12 In 123456789}) Where 123.654 With Distinct 0.e0['s_str'..][01234567..] As `1esn`,None(#usn7 In $999 In 1e1 Where _usn3 Contains 9e12 Contains `8esn`)[..Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 0xabc In 123456789 In 0x0|Count(*)[..@usn6][..`7esn`])] As `3esn`,.0[$``..0X7] With Distinct $@usn6[.0..][0e0..] Order By $`8esn` Is Not Null Is Not Null Descending,Null Ends With _usn4 Ends With 0.0 Ascending Limit .e0 Where 0.12[..$_usn3][..0Xa] Union All Unwind 123.654 In $999 In _usn3 As usn2 Match #usn8=(({`6esn`:9e1 Is Not Null Is Not Null,`8esn`:_usn3 In $`8esn` In @usn6})<-[?:`3esn`*..]-(usn2 :``:usn2)-[`5esn`? *01234567..{`3esn`:usn2[`8esn`..][0X0123456789ABCDEF..],_usn3:$@usn6 In @usn6 In 1e1}]-(`1esn` :#usn7:`5esn`{`1esn`:0e0 =~0Xa =~$999})) Where .0[..'s_str'][..01234567] Unwind 0x0[@usn5][$#usn8] As `1esn` Union All Merge ((`4esn` :_usn3{usn2:01[..0Xa][..12],`1esn`:999[..`1esn`][..07]})-[:`` *0..01]-({`7esn`:0xabc In Null,_usn4:.e12[0Xa..]})) Detach Delete (`1esn` $`4esn`)-[@usn6?:`7esn`|:`2esn`]-({@usn6:#usn7[`8esn`..usn1][$999..`7esn`]}) =~Filter(`3esn` In 9e1 Contains $999 Where 12.0 Is Null Is Null) =~[0xabc In Null],[$`1esn`[``][07],$`4esn`[`6esn`..$12],False[$usn1][0x0]] =~[.e12 Is Null Is Null],$`3esn`"),
    octest:ct_string("Merge `7esn`=(:_usn3{@usn5:$1000 Starts With $`7esn`})<-[:#usn8|:`3esn` *12..{`8esn`:12 Ends With Count ( * ),usn2:Count ( * ) In True In @usn5}]->(#usn8 :``:usn2) On Create Set #usn8+=`8esn` In $1000 Merge #usn7=(({@usn6:0x0[Count(*)..@usn6][Count(*)..0Xa],`7esn`:0.0 =~9e0 =~$0})-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-({`6esn`:9e12 =~@usn6})-[`5esn`?:`7esn`|:`2esn` *0x0..]-(:_usn4{`1esn`:#usn7 Contains $0 Contains $usn2,`4esn`:999 Ends With $`` Ends With 0X0123456789ABCDEF})) On Match Set [$usn2 =~9e1,$`6esn` Is Null].`8esn`? =(usn2 :usn1:`3esn`{`3esn`:`2esn` Is Null})<-[:`8esn` *999..{@usn6:`7esn` Ends With $7 Ends With $@usn5,``:0e0 Starts With 999 Starts With `2esn`}]->(`6esn` :#usn7:`5esn`)<-[usn1:`1esn`|`3esn`]->(`1esn` {#usn8:$#usn7[..9e0][..123.654],`5esn`:9e12 Starts With 1e1}) =~(`7esn` {#usn7:$@usn6 Ends With `1esn`})<-[#usn8 *0x0..]->(_usn3 :usn2{#usn8:$`2esn` Is Null,_usn3:123.654 Is Not Null})-[? *0X0123456789ABCDEF..]-(usn2 :_usn3),usn2 =$@usn5 Ends With @usn5 Ends With 0xabc,#usn8+=$`1esn` Starts With Count(*) Union Merge ((usn1 :_usn4{`4esn`:`7esn` Is Null})<-[`8esn`?:`2esn`|`4esn` *01..123456789{`8esn`:$`4esn` Is Null Is Null,usn1:$1000 Starts With $`3esn` Starts With 0.e0}]->(:#usn7:`5esn`{_usn3:0x0[Count(*)..@usn6][Count(*)..0Xa]})) Match ((`4esn` :@usn6)<-[@usn5?:usn2 *0..01]->(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})) Delete (`7esn` :`2esn`{`4esn`:0[1e1][$usn1],usn2:`8esn`[..$#usn8]})-[:`6esn`|:#usn8{``:`1esn` Starts With 0xabc Starts With $usn2}]-(_usn3 :`2esn`{@usn5:`4esn` Is Not Null Is Not Null})-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01}) Is Not Null"),
    octest:ct_string("Detach Delete `` =~.12,[1e1 Is Not Null Is Not Null,``[$`3esn`],$`8esn` Is Not Null Is Not Null][..[$usn1 Ends With _usn4 Ends With `2esn`]][..Extract(usn2 In False[$usn1][0x0] Where .e1[usn2..$_usn3][.0..$#usn7])],123456789[12] With Distinct $#usn8 Ends With `` Ends With 999 As `5esn`,Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 12.e12[0..0.12][123.654..9e12]) Is Not Null Is Not Null As _usn3 Order By _usn4(Distinct $@usn6[$`8esn`..][123456789..],$`` Starts With $1000 Starts With @usn6)[[#usn7 In True Contains 's_str' Contains $usn1 Where $usn2 =~1.e1 =~usn1]..][All(#usn7 In True Contains 's_str' Contains $usn1 Where $`2esn` Contains Count(*))..] Desc,{#usn8:0.0 =~9e0 =~$0,`5esn`:Count ( * ) Ends With $123456789} Is Not Null Desc,9e0 Ends With $#usn8 Desc Limit 12.0 Starts With $`2esn` Starts With .e1 Where 9e1 Ends With Count(*) Ends With $7 Merge `1esn`=(`6esn` {``:$@usn5 Contains 's_str' Contains \"d_str\",_usn3:$#usn8[12.e12..`8esn`][12.0..0.0]})-[:`5esn`|:usn2 *01234567..]-(:`2esn`{_usn3:@usn5[0.0..0X7]})-[#usn7:#usn8|:`3esn`{`6esn`:0.e0[$`4esn`..`2esn`],_usn3:7[12]}]-(`3esn` :usn2{`6esn`:#usn8 Is Null}) On Match Set `` =$``[..\"d_str\"][..$#usn8],Any(#usn7 In 9e0[$1000] Where 's_str'[0x0..1.e1]).usn2? =9e1[..123456789],@usn5+=[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 12.e12 Starts With \"d_str\" Starts With 9e1|$#usn7 Contains $`7esn` Contains .e12][#usn8(Distinct $_usn4 Is Null Is Null,01[`8esn`..9e12][.12..0])..[_usn4 In 12e12 In 123456789 Where Count ( * ) Ends With $123456789]][Filter(_usn4 In 12e12 In 123456789 Where $`5esn` =~usn1)..[$`5esn` In _usn3 In 0.0]] Union With Distinct usn2 =~$`` =~$`8esn` As `2esn`,'s_str'[0x0..1.e1] As `6esn`,$`5esn`[\"d_str\"..] As `5esn` Limit 01[07..][1.e1..] Return *,1e1[..#usn7][..$`5esn`] Order By [`3esn` In 9e1 Contains $999 Where .12 In `8esn` In $#usn8|12.e12[..$`6esn`]][Filter(#usn7 In $999 In 1e1 Where `1esn`[0.12..][@usn6..])..(:`2esn`{`8esn`:1e1 Contains 's_str' Contains `3esn`})<-[:#usn8|:`3esn` *12..{`8esn`:12 Ends With Count ( * ),usn2:Count ( * ) In True In @usn5}]-(:`5esn`{@usn6:1000[0e0][1e1]})<-[_usn4]->(:`4esn`:`6esn`{`4esn`:$@usn5[..0xabc][..$`3esn`],`3esn`:$usn2[`2esn`..$`1esn`]})] Ascending Match (`3esn` {_usn4:123.654 In 12})-[`4esn`?:_usn4 *7..]-(`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`})<-[ *00..0Xa]->(#usn7 :usn1:`3esn`),(:`8esn`{``:.e1 Starts With 12.e12 Starts With `2esn`})<-[?:`3esn`*..]-(usn2 :`1esn`:_usn4{usn2:999 Contains $1000})<-[`5esn`?{`8esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}]->(`3esn` :usn1:`3esn`{`1esn`:0X7[.0]}) Union Optional Match (_usn4 :#usn7:`5esn`)-[_usn4? *999..{_usn3:$`5esn` =~usn1}]-(`5esn` :#usn8:`1esn`) Where 9e1[`1esn`..0][999..1e1]"),
    octest:ct_string("Optional Match usn2=(`8esn` :`6esn`:_usn3),#usn8=(((`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[@usn6?:`7esn`|:`2esn`]->({#usn8:1e1 Is Not Null Is Not Null})-[?:@usn5|_usn3{`1esn`:`2esn` Is Null,`7esn`:`` =~.12}]-(`4esn` :#usn8:`1esn`{`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12}))) With  *,Single(usn2 In False[$usn1][0x0] Where $@usn6 Is Not Null Is Not Null) =~[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07 Is Not Null Is Not Null],True In (#usn8 :`6esn`:_usn3)<-[`2esn`?:_usn4{#usn8:$12[9e0..$999]}]->({``:.e1 Starts With 12.e12 Starts With `2esn`}) As `5esn` Order By Single(#usn7 In True Contains 's_str' Contains $usn1 Where `7esn`) Ends With [0Xa Ends With $`3esn` Ends With $1000] Ends With {usn1:0x0[0X7],@usn5:`4esn`[.12][$@usn6]} Desc,Any(#usn7 In 9e0[$1000] Where .e0 Is Null) In None(@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``) In Filter(@usn6 In False Contains 0 Contains $`6esn` Where $@usn5 In 12e12 In 01) Ascending,$`7esn`[$_usn4][.e0] Descending"),
    octest:ct_string("Merge ((`1esn` :`2esn`)<-[`1esn`:`8esn` *999..{`4esn`:$123456789 Starts With 0.12 Starts With Null,usn2:.e1[7..][9e0..]}]->(`1esn` :`3esn`{#usn7:12[..0e0][...e1]})-[@usn6?:#usn8|:`3esn`{usn1:.e1[..$`3esn`][..01],`4esn`:$`5esn` In .12}]->(usn2 :_usn4)) On Create Set #usn8+=[#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[..$`8esn`][..Null]|$@usn5[..0xabc][..$`3esn`]] Contains (`8esn` )<-[`2esn`:`4esn`|@usn5 *01234567..]-(`5esn` :`3esn`)<-[#usn8?:`8esn`{`1esn`:999 In #usn8 In $``,`8esn`:False[$`4esn`..]}]->(`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]}) Contains Any(`5esn` In 0X7 In $#usn7 Where 01 Is Null),@usn5+=.e0 =~$`7esn` =~0X0123456789ABCDEF,``+=(`6esn` {_usn3:9e12 Starts With 1e1,_usn4:`2esn`[..$_usn3]})-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->({`1esn`:#usn7[0]}) Starts With Extract(`6esn` In $`6esn`[``..][Count(*)..] Where @usn5 Is Null|0xabc In 010 In #usn7) On Match Set `6esn`(Distinct 0Xa[$`8esn`..][$_usn4..],0xabc In Null).`2esn`! =(`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null})<-[? *..010{#usn8:False Is Null}]->(#usn7 {#usn7:1.e1 Starts With 9e12})<-[:_usn3|:`7esn` *00..0Xa]-(`1esn` $`4esn`)[..[0X7 In $#usn7,`4esn` Is Not Null Is Not Null,.0[.e12..]]][..(:`2esn`{_usn3:@usn5[0.0..0X7]})<-[`7esn`?:`2esn`|`4esn` *..010{usn1:0e0[``..$1000][$7..12.e12],`5esn`:0x0 Starts With $`6esn`}]->(@usn5 {_usn4:`5esn` Contains #usn7 Contains 9e12})],Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null).`7esn`? =Filter(#usn7 In $999 In 1e1 Where 9e12[..1e1][..'s_str'])[..Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|0 Ends With 12.e12 Ends With usn2)][..None(#usn7 In $999 In 1e1 Where `1esn`[0.12..][@usn6..])],Extract(`3esn` In 9e1 Contains $999 Where _usn3[`2esn`..0X7][0.e0..$`3esn`]).@usn5 =$@usn6 Ends With 123456789 Ends With 12.0 Return *,Single(`5esn` In `7esn`[$usn2..][$123456789..] Where 12e12 Is Not Null) Is Not Null Is Not Null As usn1,00 Contains Count ( * ) Contains 0x0 As `5esn` Limit .e0 Union All Return Distinct *,1e1 Contains 0.e0 Contains 9e1 Limit None(#usn7 In 9e0[$1000] Where $1000 Is Not Null) Is Null Is Null Merge ((`7esn` {#usn8:False Starts With 0X7 Starts With 01234567})-[? *0xabc]-(`6esn` {`3esn`:.0[$``..0X7],`3esn`:$usn2 Is Not Null Is Not Null})) With  's_str' Order By $12[9e0..$999] Asc,{`3esn`:.e1[..\"d_str\"][..$123456789]} Descending Skip #usn8[`8esn`..] Limit .12 In `8esn` In $#usn8 Where 12.e12 Contains #usn7 Contains $_usn4"),
    octest:ct_string("Unwind `6esn`(`4esn` Ends With 12 Ends With .12,@usn5 Is Not Null)[Extract(`3esn` In 9e1 Contains $999 Where .e12 Ends With 0Xa Ends With 0xabc|1e1 Is Not Null Is Not Null)..Filter(usn2 In 7[12] Where usn2[12.e12..])] As @usn5 Return Distinct $@usn6 Ends With 12.e12 Ends With @usn5 As usn2,``[usn1][`5esn`],`7esn`[..$`6esn`] Order By $@usn6 In @usn6 In 1e1 Desc,.e1[..$`3esn`][..01] Desc Limit Single(`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]) Is Not Null Is Not Null Unwind $`5esn` Starts With 0.0 Starts With .e0 As `2esn`"),
    octest:ct_string("With Distinct $123456789 Starts With 0.12 Starts With Null As _usn3 Skip {`5esn`:`6esn`[$`8esn`][9e1]} Is Not Null Is Not Null Limit [@usn5 In 's_str'[0..] Where @usn6 In .12 In `3esn`] Ends With Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $`5esn` Is Not Null) Unwind #usn8[`8esn`..] As `7esn` Union All Merge _usn3=(((`7esn` {#usn7:$@usn6 Ends With `1esn`})<-[?:usn2{@usn5:999[..`1esn`][..07],_usn4:Count ( * ) Ends With $123456789}]->(`1esn` :usn1:`3esn`{_usn3:.0[.e12..]})<-[:`2esn`|`4esn` *0X0123456789ABCDEF..{`3esn`:usn2[`8esn`..][0X0123456789ABCDEF..],_usn3:$@usn6 In @usn6 In 1e1}]-(@usn6 :`2esn`{`4esn`:$999[0Xa..][9e1..]}))) On Match Set ``+=`2esn`[_usn3],[_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 12.e12[0..0.12][123.654..9e12]].`2esn` =(usn2 :_usn3)-[`6esn`?:`6esn`|:#usn8]-(`1esn` {_usn4:`8esn` Is Null})<-[`7esn`?:#usn8|:`3esn`]-(_usn4 :`3esn`) Is Null,`1esn`+=`4esn`($_usn4 Starts With $1000 Starts With 12)[{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}] On Create Set [usn1[..$@usn6][..00],0x0[0X7],$`8esn`[123456789..][$@usn5..]].`1esn`? =999 Contains 0 Contains $`5esn` Remove Any(_usn4 In 12e12 In 123456789 Where 9e1 Is Not Null Is Not Null).#usn7? Merge @usn6=(#usn7 {_usn4:1.e1[`8esn`]})<-[usn2{`2esn`:$12 Starts With $usn1}]->(:`5esn`{`8esn`:$`7esn`[0.12],_usn4:`1esn`})-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->(@usn6 :`4esn`:`6esn`{``:999 Contains 0 Contains $`5esn`,`6esn`:_usn3[12.e12..][`5esn`..]}) On Create Set All(usn2 In 7[12] Where `2esn`[$12..]).#usn8? =[#usn7 In 9e1[$`1esn`..] Where $@usn5 In $`6esn` In 12e12|12.0 Is Null Is Null] Contains [`3esn` In `2esn`[..01][..True] Where $0 Ends With $usn1 Ends With $_usn3],Extract(@usn6 In False Contains 0 Contains $`6esn` Where $0 Ends With $usn1 Ends With $_usn3|01 In $@usn6).`7esn`? ={`3esn`:.e1[..\"d_str\"][..$123456789]},[$`5esn` =~usn1,@usn6 Contains .12 Contains $usn1,999 In #usn8 In $``]._usn3 =[9e1 Ends With Count(*) Ends With $7,False[$usn1][0x0]] =~`2esn`(Distinct .12[01][@usn5],Count ( * ) Ends With $123456789) =~[@usn6 In False Contains 0 Contains $`6esn` Where $`8esn`[12.e12][_usn4]|12 Ends With Count ( * )]"),
    octest:ct_string("Unwind 0e0 Is Not Null As `6esn` Union Merge ``=(:_usn3{`7esn`:$999 Ends With .e0})<-[`8esn`?:`2esn`|`4esn`{usn2:#usn8[`6esn`..][$``..]}]-(@usn6 {`6esn`:$`5esn` =~usn1,`5esn`:$`` Starts With $1000 Starts With @usn6})-[?{_usn3:010[`5esn`],_usn4:#usn8 =~.e0}]-(#usn8 :`3esn`{`5esn`:$@usn6 Ends With `1esn`}) On Match Set `7esn`+=$`5esn` Is Not Null,Any(@usn5 In 9e0 Ends With $#usn8 Where $`3esn`[..0X0123456789ABCDEF][..7])._usn3 =.e12[`2esn`..010],`8esn` =Single(`5esn` In `7esn`[$usn2..][$123456789..] Where 12e12 Is Not Null) Is Not Null Is Not Null Merge `8esn`=(usn1 {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})<-[`4esn`?:`4esn`|@usn5 *01..123456789]-(#usn7 :`4esn`:`6esn`{`1esn`:`1esn`[$@usn6][07]}) Merge _usn3=(_usn3 {`8esn`:0e0 =~7 =~12.0,_usn4:.e1[..$`3esn`][..01]})<-[_usn4{`2esn`:#usn8[`8esn`..],`2esn`:@usn6[9e12]}]-(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-(`2esn` :@usn5{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3}) On Match Set @usn6+=(usn2 :_usn3)-[`6esn`?:`6esn`|:#usn8]-(`1esn` {_usn4:`8esn` Is Null})<-[`7esn`?:#usn8|:`3esn`]-(_usn4 :`3esn`)[Any(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null)..],usn1+=999 Is Not Null Is Not Null"),
    octest:ct_string("Create @usn5=(({`8esn`:`5esn` Contains #usn7 Contains 9e12})<-[usn1:_usn4]-(`` {_usn3:`5esn` Contains `7esn`})<-[`3esn`?:`2esn`|`4esn` *123456789..{_usn4:1.e1[`8esn`]}]->(`1esn` :`3esn`{#usn8:$usn2[0.e0],`8esn`:$`4esn`['s_str'..]})),((`8esn` :@usn6{`7esn`:0e0[999..$``]})-[`6esn`?:@usn5|_usn3 *01234567..]-(`5esn` {``:_usn3 Contains 9e12 Contains `8esn`,@usn6:``[7.._usn3]})) With Distinct *,0Xa[Count(*)..],[#usn8 In `7esn` Where @usn5 Contains 9e0] Contains [$usn1 Ends With _usn4 Ends With `2esn`] Order By None(#usn8 In `7esn` Where 9e1 Starts With Count ( * ))[..Any(usn2 In 7[12] Where 9e1 Is Not Null Is Not Null)] Desc,0xabc In .12 In 0Xa Descending,.0 Contains .e12 Contains 0 Desc Skip All(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 1e1 Contains 0.e0 Contains 9e1)[None(@usn6 In 010[`5esn`] Where 00[1.e1..])..[$12[$usn1..][Count(*)..],$@usn5 Contains 's_str' Contains \"d_str\"]][Extract(`3esn` In 9e1 Contains $999 Where 0e0 Starts With 999 Starts With `2esn`|9e1 Ends With Count(*) Ends With $7).._usn4(`1esn`[0.12..][@usn6..],#usn8 =~0.e0)] Limit `1esn` Starts With 9e1 Union Optional Match @usn5=(`3esn` {`4esn`:False Is Null}) Detach Delete $999 In 12 In 1.e1,usn2 Is Not Null Unwind .e12 Ends With 0Xa Ends With 0xabc As @usn6"),
    octest:ct_string("Detach Delete $`4esn`[`6esn`..$12],[`3esn` In `2esn`[..01][..True] Where 0.e0[1000.._usn4][.e1..usn1]|`5esn`[..123.654][...e12]],[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 9e1[usn1..0x0][12.e12..12.0]][..{usn2:0x0[0X7]}][..[12.e12 Is Not Null Is Not Null,$@usn6[.0..][0e0..]]] Delete usn2 Is Null Is Null Create ``=((@usn5 {`5esn`:@usn6[9e12],`5esn`:@usn6[999..$_usn3][0.12..$@usn5]})<-[`2esn`:`8esn`{`7esn`:$`4esn` Is Null Is Null}]->(usn1 :@usn6)-[#usn7:#usn8|:`3esn`{`6esn`:0.e0[$`4esn`..`2esn`],_usn3:7[12]}]-(`8esn` :`8esn`)),(:_usn3{usn1:#usn7[..07]})<-[`3esn` *7..]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]}) Union All Remove Extract(@usn6 In 010[`5esn`] Where 0e0[``..$1000][$7..12.e12]|1000[0e0][1e1]).`6esn`?"),
    octest:ct_string("Delete True Starts With Null,`4esn`(Distinct Count(*) In 12 In `6esn`,Count(*) In 12 In `6esn`) =~{`7esn`:$@usn6[00]} =~[0.12 Contains False Contains 1.e1,$12[$usn1..][Count(*)..]]"),
    octest:ct_string("Unwind 07 In 0Xa In usn1 As #usn8 Detach Delete usn1[False..`5esn`][$1000..$12] Match _usn4=(((:#usn7:`5esn`{`4esn`:$``[..\"d_str\"][..$#usn8]})<-[`6esn`? *00..0Xa]->(:#usn8:`1esn`$`7esn`)-[usn2{``:$`1esn` =~999}]-(:usn1:`3esn`{``:$#usn7 In $@usn5 In $`1esn`,#usn7:999[@usn5..][Null..]})))"),
    octest:ct_string("Unwind 1e1 Contains 0.e0 Contains 9e1 As `3esn` Detach Delete $`8esn`[999],usn2 Ends With $`4esn` Union Merge @usn6=((`5esn` {``:_usn3 Contains 9e12 Contains `8esn`,@usn6:``[7.._usn3]})<-[@usn5?:usn2 *00..0Xa{usn2:$usn2[`4esn`..9e12]}]->(:`3esn`{_usn3:1e1 Is Not Null Is Not Null,`2esn`:$usn1 Starts With usn1 Starts With True})-[usn2?:`5esn`|:usn2{`2esn`:`7esn`[$usn2..][$123456789..],@usn5:9e1 Starts With Count ( * )}]->(usn2 :usn1:`3esn`)) On Match Set [#usn8 In `7esn` Where 01 Ends With 0Xa Ends With 0X7|`8esn` Contains Count(*) Contains $#usn7].``? ={`5esn`:$`1esn` In .e0,``:`6esn` Ends With Count ( * ) Ends With Count ( * )} Is Null Is Null,`8esn`+=$7 Is Null,`7esn` =_usn4 In #usn7 Merge ``=(`6esn` )<-[usn1? *0xabc{usn1:$_usn4 Starts With $1000 Starts With 12}]-(usn1 :usn1:`3esn`) On Create Set [12e12 =~1e1,0X7[..$`8esn`]].`7esn` =1e1 Ends With $`2esn`,`8esn`+=01[$`7esn`..$@usn6] On Create Set Filter(`6esn` In $`6esn`[``..][Count(*)..] Where 0x0[$0][7])._usn4 =count(Distinct $@usn6 Ends With 123456789 Ends With 12.0,$`2esn`[.0..][0.0..]) Is Not Null Is Not Null,`1esn`+=@usn5[..\"d_str\"],_usn4 =`2esn` =~.e12 =~0X0123456789ABCDEF Union Optional Match #usn7=(((:#usn7:`5esn`{_usn4:$usn2 =~9e1})-[_usn4 *01234567..{@usn5:0xabc =~$@usn5,usn1:0Xa[$`8esn`..][$_usn4..]}]->(`5esn` :`4esn`:`6esn`)<-[`6esn`? *00..0Xa]->(#usn7 :#usn8:`1esn`{``:.0[$``..0X7]}))),_usn4=((`1esn` {usn1:12e12 In $`5esn`})<-[`8esn`?:#usn7|@usn5{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3}]-(:usn1:`3esn`{@usn6:.0 Ends With Count ( * )})) Unwind None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 9e12[$`5esn`..$123456789]) In Extract(@usn5 In 's_str'[0..] Where 07 Ends With 9e12 Ends With `2esn`|00[01234567][False]) In [12 =~usn1] As `6esn` Delete `1esn`[`3esn`..],9e12[$`5esn`..$123456789]"),
    octest:ct_string("Unwind $@usn5[_usn4] As #usn8 Union All Create ((#usn8 :_usn3)<-[`8esn`?:#usn7|@usn5{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3}]-(`` :usn1:`3esn`)),((:`4esn`:`6esn`{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7})<-[`8esn`?:`5esn`|:usn2 *01..123456789{`7esn`:`6esn`,`4esn`:'s_str' Starts With 9e0 Starts With usn2}]->({@usn6:12.e12 Contains #usn7 Contains $_usn4,usn2:$`5esn` =~$0 =~``})-[#usn7 *01..123456789]->(:`6esn`:_usn3{``:usn1 Ends With 9e0 Ends With 9e0,`5esn`:$`7esn`[.e1][12.0]})) Union All With  's_str' Where 's_str'[0..] Unwind 12e12 In 123456789 As `7esn` Detach Delete $12 Starts With $0 Starts With $`8esn`"),
    octest:ct_string("Create #usn7=(((:usn1:`3esn`{_usn3:$`6esn`[1.e1][$_usn3]})-[:`` *123456789..{`1esn`:`8esn` Is Not Null Is Not Null}]-(#usn8 :`2esn`)<-[ *00..0Xa]->(`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null}))),#usn8=(((`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[@usn6?:`7esn`|:`2esn`]->({#usn8:1e1 Is Not Null Is Not Null})-[?:@usn5|_usn3{`1esn`:`2esn` Is Null,`7esn`:`` =~.12}]-(`4esn` :#usn8:`1esn`{`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12}))) Create ((@usn6 {`7esn`:999 In 0e0})<-[? *1000..0X0123456789ABCDEF{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}]-(`6esn` {`2esn`:$`3esn` Ends With 01234567})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)),((usn2 :`6esn`:_usn3)-[?:#usn7|@usn5 *0X0123456789ABCDEF..{_usn3:@usn5 Is Not Null}]-(#usn8 {`5esn`:$12[$usn1..][Count(*)..],`7esn`:0e0[``..$1000][$7..12.e12]})) Optional Match ``=((usn2 :`5esn`{`7esn`:0.12 Starts With $`8esn` Starts With @usn5})<-[usn1:`7esn`|:`2esn`{`6esn`:Count(*) In #usn8 In \"d_str\",`1esn`:$`1esn` Ends With 0X0123456789ABCDEF}]-(#usn8 :usn2{@usn5:$#usn7[..9e0][..123.654],`2esn`:7[12]})<-[ *..07{`5esn`:999 In 0e0}]-(_usn4 :`8esn`)) Where 010 Is Null Is Null Union All Unwind Count(*)[9e12..12.0] As #usn8 Match _usn3=(`1esn` )<-[? *0xabc]-(:@usn6{`6esn`:01 Ends With 0Xa Ends With 0X7}) Where @usn5 Starts With 9e0 Starts With 010"),
    octest:ct_string("Unwind All(`5esn` In 0X7 In $#usn7 Where 12.0 Is Null Is Null) Is Not Null Is Not Null As `8esn` Create ((#usn8 :_usn3)<-[`8esn`?:#usn7|@usn5{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3}]-(`` :usn1:`3esn`)),((:`4esn`:`6esn`{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7})<-[`8esn`?:`5esn`|:usn2 *01..123456789{`7esn`:`6esn`,`4esn`:'s_str' Starts With 9e0 Starts With usn2}]->({@usn6:12.e12 Contains #usn7 Contains $_usn4,usn2:$`5esn` =~$0 =~``})-[#usn7 *01..123456789]->(:`6esn`:_usn3{``:usn1 Ends With 9e0 Ends With 9e0,`5esn`:$`7esn`[.e1][12.0]})) Create `1esn`=((#usn8 :`6esn`:_usn3)<-[@usn5?:``{`3esn`:010 Is Null Is Null,`5esn`:_usn4 Contains `` Contains 1.e1}]-(:@usn6{`7esn`:$`6esn`[``..][Count(*)..]})),usn2=((#usn7 {`8esn`:`7esn` In 010 In usn1})<-[usn1]->(:`6esn`:_usn3{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})<-[:`8esn` *999..{@usn6:`7esn` Ends With $7 Ends With $@usn5,``:0e0 Starts With 999 Starts With `2esn`}]->(`1esn` :@usn6{`6esn`:00[False..0e0],`6esn`:$usn2 =~1.e1 =~usn1})) Union Unwind 123.654[`4esn`..12] As `2esn` Create (((`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-({`6esn`:9e12 =~@usn6})<-[?:usn1|`4esn` *01..123456789{usn1:.e12[$@usn6..00][01234567.._usn3],`1esn`:`7esn` Contains 9e0}]-(_usn3 :@usn5{`8esn`:1e1 Contains 's_str' Contains `3esn`}))),`6esn`=(:`3esn`{@usn6:$`5esn` =~$`8esn` =~usn2,`8esn`:12[..0e0][...e1]}) Union All Delete Extract(usn2 In 7[12] Where 0X7[.0])[Single(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0 Ends With 12.0 Ends With `5esn`)],0x0[..9e0] Create #usn8=(`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})-[`3esn`]->(:@usn5{#usn7:12e12 In $`5esn`}),`2esn`=(`8esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})-[`6esn`?:@usn5|_usn3 *01234567..]-(`5esn` {``:_usn3 Contains 9e12 Contains `8esn`,@usn6:``[7.._usn3]})<-[`8esn`{`1esn`:123456789 =~@usn6,`1esn`:$`5esn`[0X7..010][`7esn`..'s_str']}]->(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}) Merge `5esn`=({usn2:.0 Starts With `1esn`,`2esn`:00 Contains Count ( * ) Contains 0x0})<-[_usn4?:@usn6|:`7esn`]->(_usn3 :`2esn`{@usn5:`4esn` Is Not Null Is Not Null})<-[`8esn`:usn1|`4esn` *0Xa{`6esn`:Count(*) In #usn8 In \"d_str\",`1esn`:$`1esn` Ends With 0X0123456789ABCDEF}]->(:`8esn`) On Create Set {usn1:$_usn4 Starts With $1000 Starts With 12}.@usn6! =[1e1 Is Not Null Is Not Null,``[$`3esn`],$`8esn` Is Not Null Is Not Null][..[$usn1 Ends With _usn4 Ends With `2esn`]][..Extract(usn2 In False[$usn1][0x0] Where .e1[usn2..$_usn3][.0..$#usn7])] On Create Set `5esn`+=All(#usn7 In 9e1[$`1esn`..] Where 12 =~usn1)[Extract(#usn7 In $999 In 1e1)..][1.e1..],`2esn` =False Starts With 0X7 Starts With 01234567"),
    octest:ct_string("Optional Match #usn7=((@usn5 :`4esn`:`6esn`)<-[`3esn` *7..]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]})),((:`2esn`{`3esn`:9e1 Ends With Count(*) Ends With $7})<-[usn1?:`1esn`|`3esn` *01234567..{@usn5:`4esn`[\"d_str\"]['s_str']}]-({`7esn`:9e0 Contains $12 Contains `3esn`,`5esn`:.e0 Contains $#usn8}))"),
    octest:ct_string("Unwind $1000 Starts With $`3esn` Starts With 0.e0 As usn1 Return Distinct _usn4 Contains $_usn3 Contains .e1,$`4esn`['s_str'..] As `` Order By $usn2 =~9e1 Descending,(:@usn5{_usn3:123.654})<-[usn1:`1esn`|`3esn`]-(_usn4 :@usn5)-[:_usn3|:`7esn` *1000..0X0123456789ABCDEF]->(:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]}) Ends With Any(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn`[0..][999..]) Ends With {``:0xabc[..$1000][..`5esn`],``:$`1esn` Contains 1e1 Contains @usn6} Asc,1.e1 =~$_usn4 Desc Skip 12[0e0] Optional Match (_usn4 :#usn7:`5esn`)-[_usn4? *999..{_usn3:$`5esn` =~usn1}]-(`5esn` :#usn8:`1esn`) Where 9e1[`1esn`..0][999..1e1] Union All Remove [usn2 In 7[12] Where #usn7[0.e0..]['s_str'..]].#usn7!,{#usn8:.0 Is Null Is Null}.`2esn` Match ({@usn6:0x0[Count(*)..@usn6][Count(*)..0Xa],`7esn`:0.0 =~9e0 =~$0})-[ *7..{usn1:0x0[0X7],@usn5:`4esn`[.12][$@usn6]}]->(:_usn3{_usn3:$`3esn`[.e1][_usn4]})-[_usn4 *01234567..{@usn5:0xabc =~$@usn5,usn1:0Xa[$`8esn`..][$_usn4..]}]->(`5esn` :`4esn`:`6esn`) Where 9e12 =~@usn6 Merge `1esn`=(@usn6 :_usn4{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]})-[`4esn`:`1esn`|`3esn` *12..]->(#usn8 :usn2{@usn5:$#usn7[..9e0][..123.654],`2esn`:7[12]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]-({usn2:.12[0X7..][12e12..],`6esn`:$`4esn`[`6esn`..$12]}) On Match Set Any(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $@usn5[..0xabc][..$`3esn`]).#usn8 =_usn3 In $`8esn` In @usn6 On Create Set `6esn` =.e1[12.0..],{@usn5:``[9e12][$999]}.@usn5? =usn1 Contains 010,usn2+=All(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 1.e1[12..][$`4esn`..])[{usn1:12.e12[..$`6esn`]}..]"),
    octest:ct_string("Create ((:#usn7:`5esn`{`2esn`:12.e12 Contains 9e1,`5esn`:.e1 Starts With 12.e12 Starts With `2esn`})<-[`2esn`{``:Null[..010][..1000]}]-(`` :usn1:`3esn`)-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})),((`7esn` :`2esn`{`4esn`:0[1e1][$usn1],usn2:`8esn`[..$#usn8]})<-[_usn4?:usn2]-(@usn6 :`6esn`:_usn3{@usn5:0xabc =~$@usn5,usn1:0Xa[$`8esn`..][$_usn4..]})-[`3esn`?:`7esn`|:`2esn`]-(`5esn` :#usn8:`1esn`{_usn3:`6esn` Is Null Is Null})) With Distinct {`8esn`:9e12 =~@usn6,`1esn`:999 Contains 0 Contains $`5esn`}[`4esn`()],(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})<-[?:`7esn`|:`2esn`]->(#usn8 :usn1:`3esn`{`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[ *01234567..]->(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12}) Contains [7[12],00[$`1esn`..][@usn6..],`5esn` Contains #usn7 Contains 9e12] Contains {_usn3:$@usn6[00],`2esn`:0.12 Is Null Is Null} Order By [`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]|usn2 =~7] Contains Any(`3esn` In 9e1 Contains $999 Where _usn4[0]) Desc Limit $7 Starts With $`4esn`"),
    octest:ct_string("Detach Delete Extract(@usn6 In 010[`5esn`] Where 00[$usn1..]|_usn3[$usn2..][$``..])[Any(#usn7 In 9e1[$`1esn`..] Where #usn7[0])],_usn4[$usn1..01234567][123.654..`5esn`],None(#usn7 In 9e0[$1000] Where $_usn3 Is Null) In [@usn5 In 's_str'[0..] Where $#usn8[12.e12..`8esn`][12.0..0.0]|`4esn` Ends With 12 Ends With .12] In [#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 12.e12 Starts With \"d_str\" Starts With 9e1|$#usn7 Contains $`7esn` Contains .e12] Return *,[#usn7 In 9e0[$1000] Where .e1 In 123456789|.e12[..999][..@usn5]] In `5esn`(`1esn` Starts With 0X7 Starts With \"d_str\",9e1) In @usn5(Distinct `5esn` Contains $`5esn` Contains 0X7,True[..#usn8]),01234567[$`2esn`][0Xa] As `5esn` Order By (`5esn` :`4esn`:`6esn`)-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(#usn7 :``:usn2)[..Filter(#usn8 In `7esn`)] Desc Skip $@usn6[123.654..00] Merge (((_usn4 :#usn7:`5esn`)<-[#usn8 *0x0..]->(#usn8 :_usn3{_usn4:.e1[7..][9e0..]})<-[`2esn`?:usn1|`4esn` *00..0Xa]->(`6esn` :#usn8:`1esn`{`6esn`:usn1[..$@usn6][..00]})))"),
    octest:ct_string("Optional Match (usn2 :_usn4),`1esn`=((`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})-[?$7]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0})) Where 0e0[01][$`7esn`] Remove (:#usn7:`5esn`{usn1:.e1[..$`3esn`][..01],`4esn`:$`5esn` In .12})-[? *0Xa]-(`8esn` {``:12 Starts With #usn7 Starts With 0Xa,`8esn`:``[usn1][`5esn`]}).`2esn`! Union All Detach Delete [$`5esn` =~usn1,True[`3esn`],@usn6[9e12]][None(#usn7 In 9e1[$`1esn`..] Where 1.e1[12.e12..])..],1.e1 In 1000 In _usn3,#usn8 =~.e0 Remove None(#usn7 In 9e0[$1000] Where 01 Ends With 0Xa Ends With 0X7).`5esn`?,({`1esn`:usn2 Contains $0 Contains .0,_usn4:$@usn6[.0..][0e0..]})<-[:`8esn` *0X7..]->(`2esn` :`6esn`:_usn3{usn2:0e0 =~0Xa =~$999,`4esn`:@usn6[9e12]})<-[`4esn`:usn2]->(:`8esn`{``:$`1esn` =~999}).usn2,(usn1 {usn1:$#usn7 =~`2esn`})-[{_usn3:01 Is Null,_usn3:$@usn6 Ends With 12.e12 Ends With @usn5}]-(_usn3 {`8esn`:0e0 =~7 =~12.0,_usn4:.e1[..$`3esn`][..01]})-[`7esn`:#usn8|:`3esn` *0..01{`3esn`:07[_usn3..][`6esn`..],@usn6:``[usn1][`5esn`]}]->(:_usn3{_usn4:.e1[7..][9e0..]}).`4esn` Create `4esn`=((`` {#usn7:#usn8 Is Not Null Is Not Null})-[#usn7?{`5esn`:.e12 Starts With $#usn8 Starts With False}]->(#usn7 :`4esn`:`6esn`{`1esn`:`1esn`[$@usn6][07]})-[{`4esn`:.e1 In 123456789}]-(:`3esn`{``:$@usn5 Is Null Is Null,`8esn`:.e1[..\"d_str\"][..$123456789]}))"),
    octest:ct_string("Delete Any(@usn5 In 9e0 Ends With $#usn8 Where 12.e12 =~0X0123456789ABCDEF =~1.e1)[(`5esn` :#usn8:`1esn`{_usn3:`6esn` Is Null Is Null})<-[?{@usn6:$0[0Xa..$123456789],`4esn`:`7esn` Contains 9e0}]->({_usn3:0X0123456789ABCDEF Contains 12e12 Contains 12.e12})-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})..][Filter(#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`])..],None(`5esn` In 0X7 In $#usn7 Where 0.12 Contains False Contains 1.e1)[..{@usn5:$@usn6 Is Not Null Is Not Null}][..{`3esn`:1e1 In 0.0 In 0X0123456789ABCDEF}] Unwind $_usn3 Is Not Null Is Not Null As `3esn` Create (((:`1esn`:_usn4{usn2:0x0 Starts With $`6esn`,_usn4:$`4esn`[`8esn`]})<-[@usn6?:_usn3|:`7esn`{@usn6:$`3esn`[.e1][_usn4]}]-(`` {`7esn`:$#usn7[..0Xa]})<-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(`3esn` {`3esn`:$@usn6 Is Not Null Is Not Null,`1esn`:12e12 =~1e1}))),_usn3=(`` {`7esn`:.e0 Is Not Null Is Not Null,@usn6:.e1[..$`3esn`][..01]})-[usn1?:`2esn`|`4esn`{#usn7:$#usn7[..9e0][..123.654],usn2:.e0 Is Not Null Is Not Null}]-(`8esn` :@usn6)<-[ *01234567..]->(:``:usn2{`5esn`:$12 Starts With $usn1}) Union Optional Match `8esn`=(#usn8 :_usn3)-[`7esn`{#usn8:01 Is Null,`6esn`:#usn7[0]}]-({`2esn`:Count(*) Ends With usn1,`6esn`:1000 Ends With `7esn`})<-[:_usn3|:`7esn` *00..0Xa]-(#usn7 :`4esn`:`6esn`$usn2) Where $0[0Xa..$123456789] Union All Delete (`2esn` $`6esn`)<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(usn2 {usn1:.e12 Ends With 0Xa Ends With 0xabc}) Ends With Extract(@usn6 In False Contains 0 Contains $`6esn` Where .e1[usn2..$_usn3][.0..$#usn7]) Ends With Single(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..])"),
    octest:ct_string("Detach Delete usn1[False..`5esn`][$1000..$12] Merge _usn3=(((`6esn` {`1esn`:12.0 =~@usn6 =~$`2esn`,`7esn`:0Xa[$`8esn`..][$_usn4..]})-[?:#usn7|@usn5 *0X0123456789ABCDEF..{_usn3:@usn5 Is Not Null}]-(#usn8 {`5esn`:$12[$usn1..][Count(*)..],`7esn`:0e0[``..$1000][$7..12.e12]})-[ *12..{`8esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}]-(:`2esn`{``:07[$`2esn`..9e12][$`4esn`..9e12],`3esn`:$`6esn` Starts With .e12 Starts With $`1esn`}))) On Match Set _usn3+=`6esn`[$``..$_usn3][1000...0],[usn2 In 7[12] Where $@usn6 Ends With 12.e12 Ends With @usn5|0 Ends With 12.e12 Ends With usn2].`1esn` =123.654 Is Null Is Null On Create Set [usn2[12e12..]['s_str'..],$`3esn`[$_usn4..0Xa],#usn8 Is Null Is Null].usn2? =123.654 In $`6esn` Union All With  *,Extract(`6esn` In $`6esn`[``..][Count(*)..] Where $@usn5 Starts With `5esn` Starts With 01234567|0.e0[..$7]) Is Null Is Null Skip 0xabc In 123456789 In 0x0 Limit _usn4 Starts With 1000 Starts With $usn2 Where 123.654[$0..0X7][Null..#usn8] Merge ({`4esn`:.e1[..$`3esn`][..01]})-[`5esn`:#usn7|@usn5]-(`5esn` :`4esn`:`6esn`) Union With  $999[0Xa..][9e1..] As `4esn`,0X0123456789ABCDEF In .12 As #usn7 Skip None(@usn6 In 010[`5esn`] Where 123.654 In $`7esn`)[(`` {`7esn`:$#usn7[..0Xa]})<-[`1esn`?:usn1|`4esn` *00..0Xa]-(_usn4 :@usn5{usn1:$#usn7 Starts With 01234567 Starts With $0})<-[usn1? *01234567..{@usn5:01[`3esn`..][Count(*)..]}]->(`3esn` :`6esn`:_usn3{`4esn`:12.0 Starts With .12 Starts With `6esn`,#usn8:0.0 Is Null Is Null})..[False Contains 0 Contains $`6esn`,`1esn` Is Not Null Is Not Null]] Limit All(#usn7 In 9e1[$`1esn`..] Where 12 =~usn1)[Extract(#usn7 In $999 In 1e1)..][1.e1..] Remove Extract(`8esn` In 123456789 =~@usn6 Where .e12 Starts With $12 Starts With .e12|0x0[Count(*)..@usn6][Count(*)..0Xa])._usn3!,({_usn3:0X0123456789ABCDEF Contains 12e12 Contains 12.e12})<-[usn2?:`3esn` *00..0Xa]-(`2esn` {``:$0 =~9e1 =~$`2esn`,`8esn`:`5esn`[..123.654][...e12]})<-[`8esn`? *0Xa{#usn8:$``[True]}]->(_usn3 :`7esn`).`5esn`,Extract(`3esn` In 9e1 Contains $999 Where usn1[False..`5esn`][$1000..$12]).`7esn`"),
    octest:ct_string("Delete {#usn7:$usn2[0.e0],`6esn`:.e1[..\"d_str\"][..$123456789]} Is Not Null"),
    octest:ct_string("Match #usn8=(`1esn` :`6esn`:_usn3{#usn7:0x0[$0][7]})-[?:``]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`}) With Distinct $usn2[`5esn`..][01234567..] As #usn8 Skip $`6esn`[1.e1][$_usn3] Limit False[$`4esn`..] Remove (`7esn` {#usn8:False Starts With 0X7 Starts With 01234567})-[#usn8:`4esn`|@usn5]-(:#usn7:`5esn`{`3esn`:Null[..0]})<-[:_usn3|:`7esn` *00..0Xa]-(#usn7 :`4esn`:`6esn`$usn2).#usn7?,Filter(@usn5 In 9e0 Ends With $#usn8 Where 0X7 In $#usn7).`5esn`,[_usn3 Starts With 12e12 Starts With `5esn`,0e0[``..$1000][$7..12.e12],0Xa Ends With $`3esn` Ends With $1000].`8esn`?"),
    octest:ct_string("Create usn2=((usn2 :`5esn`{`7esn`:0.12 Starts With $`8esn` Starts With @usn5})<-[usn1:`7esn`|:`2esn`{`6esn`:Count(*) In #usn8 In \"d_str\",`1esn`:$`1esn` Ends With 0X0123456789ABCDEF}]-(#usn8 :usn2{@usn5:$#usn7[..9e0][..123.654],`2esn`:7[12]})<-[ *..07{`5esn`:999 In 0e0}]-(_usn4 :`8esn`))"),
    octest:ct_string("Create #usn7=((@usn5 :`4esn`:`6esn`)<-[`3esn` *7..]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]})),((`1esn` :`2esn`)<-[`1esn`:`8esn` *999..{`4esn`:$123456789 Starts With 0.12 Starts With Null,usn2:.e1[7..][9e0..]}]->(`1esn` :`3esn`{#usn7:12[..0e0][...e1]})-[@usn6?:#usn8|:`3esn`{usn1:.e1[..$`3esn`][..01],`4esn`:$`5esn` In .12}]->(usn2 :_usn4)) Union All Unwind [#usn8 In `7esn` Where 9e12[$`5esn`..$123456789]] =~_usn4(Distinct $@usn6[$`8esn`..][123456789..],$`` Starts With $1000 Starts With @usn6) As usn1 With Distinct usn2 Ends With .e1 Ends With $`5esn`,Extract(@usn5 In 's_str'[0..] Where 12e12 Is Not Null) =~[`3esn` In 9e1 Contains $999 Where _usn3[`2esn`..0X7][0.e0..$`3esn`]] Skip $`3esn`[..$1000][..$123456789] Limit 0xabc Is Null Is Null"),
    octest:ct_string("Optional Match #usn8=((`3esn` :usn2{`6esn`:#usn8 Is Null})-[`4esn`?:_usn4 *7..{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]-(usn2 :`6esn`:_usn3{@usn5:$0[0Xa..$123456789]})<-[`2esn`{``:Null[..010][..1000]}]-(`` :usn1:`3esn`)),(`2esn` :`1esn`:_usn4) Union Delete {`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]}[..`2esn`(Distinct 0 Ends With 12.e12 Ends With usn2)][..Filter(_usn4 In 12e12 In 123456789 Where .e1 In 123456789)],Extract(@usn6 In 010[`5esn`] Where @usn6 Contains .12 Contains $usn1) Is Not Null Union With Distinct Single(usn2 In False[$usn1][0x0])[All(@usn6 In 010[`5esn`] Where 00[1.e1..])][(:`2esn`{``:07[$`2esn`..9e12][$`4esn`..9e12],`3esn`:$`6esn` Starts With .e12 Starts With $`1esn`})-[?{`5esn`:$`2esn`[.0..][0.0..]}]->(:usn2{@usn5:07 Ends With 9e12 Ends With `2esn`})-[`` *1000..0X0123456789ABCDEF]->(:_usn4{`8esn`:01234567[Null..$_usn3]})],`7esn`(Distinct `1esn` Starts With 0xabc Starts With $usn2)[({`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12})-[`6esn`?:@usn5|_usn3 *01234567..]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})..] As #usn7 Skip $`4esn` =~$`4esn` Return 0.0 Contains #usn7 As #usn8,Extract(@usn6 In False Contains 0 Contains $`6esn` Where $@usn6[$`8esn`..][123456789..]|.e1[usn2..$_usn3][.0..$#usn7]) Order By Any(`6esn` In $`6esn`[``..][Count(*)..] Where 1e1 Ends With $`7esn` Ends With .0) Is Not Null Descending,#usn8 Ends With $@usn5 Ends With $7 Desc,usn2[12.e12..] Asc Skip 12.0[$1000..][#usn7..] Limit $`2esn`[0..123456789][``..`1esn`]"),
    octest:ct_string("Detach Delete [0.12[$0..$usn2],07 In `6esn`] Is Not Null Is Not Null,12[..$999][..$`2esn`] Union Match _usn3=((@usn5 {usn2:.12[0X7..][12e12..],`6esn`:$`4esn`[`6esn`..$12]})-[@usn6:`5esn`|:usn2 *0xabc{#usn8:999 In 0e0}]-(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})-[#usn7 *01..123456789]->(usn1 {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})),``=((:`5esn`{`8esn`:$`7esn`[0.12],_usn4:`1esn`})-[`5esn`:#usn7|@usn5]-({@usn6:123.654 In 12,#usn7:12.e12 Ends With `` Ends With 0})-[`1esn`?:@usn6|:`7esn` *..010]-(:`6esn`:_usn3{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})) Where 0x0[Count(*)..@usn6][Count(*)..0Xa] Remove Any(#usn7 In $#usn7 Contains $`7esn` Contains .e12).`5esn`?,_usn3(0[$`5esn`],`2esn`[..$_usn4][...12]).`2esn`?,(usn1 :@usn6)<-[:`8esn` *0X7..]->(`2esn` :`6esn`:_usn3{usn2:0e0 =~0Xa =~$999,`4esn`:@usn6[9e12]})<-[?{`5esn`:123.654[$0..0X7][Null..#usn8],`3esn`:12.e12[0..0.12][123.654..9e12]}]-(usn2 :`7esn`).#usn8 Create _usn3=(((:usn2{`6esn`:`4esn` Starts With 0e0,`8esn`:usn2[12e12..]['s_str'..]})<-[:`2esn`|`4esn` *12..]-(_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]})))"),
    octest:ct_string("Unwind Filter(@usn5 In 's_str'[0..] Where $@usn6 =~#usn7 =~True)[Extract(@usn5 In 's_str'[0..] Where _usn3[0x0])..All(_usn4 In 12e12 In 123456789 Where $usn2 Is Not Null Is Not Null)][(`4esn` :#usn8:`1esn`{`7esn`:.0[..'s_str'][..01234567],@usn6:False[..$`5esn`][..1e1]})<-[:`8esn`]-(:@usn6)-[? *0X0123456789ABCDEF..]-(usn2 :_usn3)..(#usn8 :_usn3{@usn5:_usn3 Starts With 12e12 Starts With `5esn`,@usn6:usn2 In _usn3})-[`1esn`?{`8esn`:.e0,usn2:9e1 Contains $999}]->(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})-[? *..010{`2esn`:'s_str'[0..]}]->({`7esn`:1.e1 In 1000 In _usn3,`8esn`:010 Starts With $`` Starts With 0e0})] As `` Remove All(#usn7 In 9e0[$1000] Where @usn6 Contains .12 Contains $usn1).`6esn`?,None(usn2 In False[$usn1][0x0] Where 9e12 Starts With 1e1).#usn8 Union All Return *,All(@usn6 In 010[`5esn`] Where $@usn5 Ends With @usn5 Ends With 0xabc)[Extract(#usn7 In 9e1[$`1esn`..] Where 123.654 In $`7esn`)..[12.0 Starts With .12 Starts With `6esn`]],12 In $usn1 In 7 As `8esn` Skip None(#usn7 In True Contains 's_str' Contains $usn1 Where 00[12..$`6esn`]) Ends With None(#usn7 In 9e0[$1000] Where 1e1 Contains 0.e0 Contains 9e1) Limit $@usn5 Starts With .e1 Match `2esn`=(((`6esn` :`4esn`:`6esn`)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})<-[`4esn` *0Xa{@usn6:999 Starts With `2esn` Starts With .e1,`4esn`:$@usn5[..0xabc][..$`3esn`]}]->(@usn6 :``:usn2))),`7esn`=((:#usn7:`5esn`{`3esn`:Null[..0]})<-[@usn5? *0..01{`3esn`:$`1esn` In .e0,@usn6:12.0 =~@usn6 =~$`2esn`}]->(`6esn` :#usn7:`5esn`{_usn3:_usn4 Is Null Is Null})) Where $`5esn` =~usn1 Unwind #usn8 Is Null Is Null As `8esn` Union Delete `6esn` Is Null Is Null,0.e0[..$7] Detach Delete 01 Ends With 0Xa Ends With 0X7 Create (`5esn` :``:usn2)-[?{_usn3:`4esn`[$_usn3..$`7esn`]}]-({usn2:.12[0X7..][12e12..],`6esn`:$`4esn`[`6esn`..$12]})"),
    octest:ct_string("Optional Match #usn7=(((`4esn` :#usn7:`5esn`{_usn4:0Xa Ends With $`3esn` Ends With $1000})-[usn2?{``:$`1esn`[``][07]}]-(`3esn` :`6esn`:_usn3{`4esn`:12.0 Starts With .12 Starts With `6esn`,#usn8:0.0 Is Null Is Null})<-[? *0xabc]-(:@usn6{`6esn`:01 Ends With 0Xa Ends With 0X7}))),usn1=(`6esn` )<-[usn1? *0xabc{usn1:$_usn4 Starts With $1000 Starts With 12}]-(usn1 :usn1:`3esn`) Unwind 9e1[`1esn`..0][999..1e1] As #usn8 Merge `6esn`=(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]})"),
    octest:ct_string("With  *,$`2esn` Contains Count(*) As `3esn`,(`2esn` :usn1:`3esn`)-[@usn5:`5esn`|:usn2 *0Xa{#usn7:`7esn`[$usn2..][$123456789..]}]-({`7esn`:9e0 Contains $12 Contains `3esn`,`5esn`:.e0 Contains $#usn8})<-[?:`3esn`]-(`8esn` :#usn8:`1esn`{usn2:12.e12 Ends With $``,`2esn`:1e1 Contains 's_str' Contains `3esn`})[({usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]})] Order By 010 Contains .e1 Asc,(:`6esn`:_usn3{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]})<-[#usn7 *01..123456789]->(`6esn` :usn1:`3esn`) Ends With Extract(#usn8 In `7esn` Where 9e12[..1e1][..'s_str']) Ends With [_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 123.654 Is Not Null|$`2esn`[.0..][0.0..]] Descending Skip $@usn5[`1esn`..][$999..] Limit Single(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`)[{`5esn`:`6esn`[$`8esn`][9e1]}] Union All Return Distinct #usn8 Is Not Null Is Not Null,{`1esn`:$999[``],@usn5:#usn7 Starts With $123456789 Starts With 12e12}[(_usn3 :`7esn`)-[`2esn`? *1000..0X0123456789ABCDEF{`8esn`:$7 In $usn1 In 999,@usn5:00 Ends With `` Ends With 12.e12}]-(:usn2{`5esn`:True[0xabc..01234567][$`8esn`..$@usn6]})..] As _usn4 Skip $`5esn`[$`3esn`..] Detach Delete [#usn7 In $999 In 1e1 Where 0X7['s_str'..][01..]] Is Not Null Is Not Null,00[False..0e0],0.e0[1000.._usn4][.e1..usn1] Detach Delete _usn4(Distinct 0X0123456789ABCDEF Ends With 01 Ends With ``,$`3esn`[..0xabc][..$7]) In Single(`3esn` In 9e1 Contains $999 Where `2esn` Starts With 12.e12 Starts With 12.0) In Extract(usn2 In False[$usn1][0x0] Where .e1[usn2..$_usn3][.0..$#usn7]),Count(*) Ends With usn1 Union All Unwind `2esn`[$@usn6..][Null..] As `8esn` Return *,[`8esn`[..$#usn8],$1000 Starts With $`7esn`,0xabc In 010 In #usn7] Is Null Is Null As `8esn` Skip All(@usn5 In 's_str'[0..] Where 0.e0) In Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $123456789 In 0.12) In {`1esn`:999 Is Not Null Is Not Null,``:.e1[7..][9e0..]} Limit Filter(@usn6 In 010[`5esn`] Where `7esn`[1e1]) Contains {`7esn`:$`5esn` In 07 In 00,`1esn`:07 In `6esn`} Contains {`3esn`:00[12..$`6esn`]} Match _usn4=(@usn6 :`4esn`:`6esn`)-[ *0..01{@usn6:$0[123.654..0.e0]}]->(usn1 :`1esn`:_usn4{_usn3:@usn6[999..$_usn3][0.12..$@usn5],`1esn`:9e12[..1e1][..'s_str']})<-[`2esn`?:`6esn`|:#usn8{`2esn`:12.e12 Contains 9e1,`5esn`:.e1 Starts With 12.e12 Starts With `2esn`}]-(_usn3 {_usn3:0.12 Starts With $`8esn` Starts With @usn5}),#usn8=(((`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[@usn6?:`7esn`|:`2esn`]->({#usn8:1e1 Is Not Null Is Not Null})-[?:@usn5|_usn3{`1esn`:`2esn` Is Null,`7esn`:`` =~.12}]-(`4esn` :#usn8:`1esn`{`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12})))"),
    octest:ct_string("Unwind {`8esn`:9e12 =~@usn6,`1esn`:999 Contains 0 Contains $`5esn`}[`4esn`()] As usn2 Merge #usn7=(((:usn1:`3esn`{_usn3:$`6esn`[1.e1][$_usn3]})-[:`` *123456789..{`1esn`:`8esn` Is Not Null Is Not Null}]-(#usn8 :`2esn`)<-[ *00..0Xa]->(`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null}))) On Create Set [`6esn` In $`6esn`[``..][Count(*)..] Where 0x0[$0][7]|$`4esn`[`8esn`]].usn1 =Any(_usn4 In 12e12 In 123456789 Where _usn3 In $`8esn` In @usn6)[Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789])][All(@usn5 In 9e0 Ends With $#usn8)] On Match Set Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn` Contains .e0 Contains 0Xa).@usn6! =0.e0 Is Not Null Is Not Null,`1esn` =07 In `6esn` Union Delete 0X7 In $#usn7 Unwind {#usn8:1.e1 Is Null Is Null,_usn4:0xabc In 123456789 In 0x0}[All(@usn6 In 010[`5esn`] Where 00[1.e1..])..] As _usn4 Detach Delete [`6esn` In $`6esn`[``..][Count(*)..] Where $0[123.654..0.e0]][{`8esn`:$`4esn`[..$`8esn`][..Null]}..({usn2:_usn3[`2esn`..0X7][0.e0..$`3esn`]})<-[_usn4?:@usn6|:`7esn`]-(usn1 :`2esn`{@usn6:True Contains 's_str' Contains $usn1,``:$`4esn` Starts With 0 Starts With `7esn`})-[@usn5:`5esn`|:usn2 *0Xa{#usn7:`7esn`[$usn2..][$123456789..]}]-({`7esn`:9e0 Contains $12 Contains `3esn`,`5esn`:.e0 Contains $#usn8})][None(`3esn` In `2esn`[..01][..True])..[0.e0[..$7],$usn2[True..0X0123456789ABCDEF],`2esn` =~.e12 =~0X0123456789ABCDEF]] Union All Unwind #usn8(1000[12e12][`5esn`],9e1 Contains 12)[Extract(#usn8 In `7esn` Where $`5esn` In _usn3 In 0.0)..`1esn`(Distinct `3esn`[7..0.e0][0.0..123456789],`1esn` Starts With 0xabc Starts With $usn2)][Filter(`6esn` In $`6esn`[``..][Count(*)..] Where 9e0[Count(*)..0.12][$`1esn`..12.0])..Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12)] As @usn6 Remove None(`5esn` In 0X7 In $#usn7 Where usn1 =~$`7esn`).`3esn`!,Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $123456789 In 0.12)._usn3?,(:`3esn`{#usn7:$#usn7 In $@usn5 In $`1esn`})<-[:`8esn` *0X7..]->(`2esn` :`6esn`:_usn3{usn2:0e0 =~0Xa =~$999,`4esn`:@usn6[9e12]}).`6esn`? With  *,count(Distinct $@usn6 Ends With 123456789 Ends With 12.0,$`2esn`[.0..][0.0..]) Is Not Null Is Not Null Order By .e0 Starts With $@usn6 Starts With $7 Descending Skip [$12[$usn1..][Count(*)..],usn2[1.e1],123456789[12]] Ends With [`5esn`[$`7esn`..$@usn5],$#usn7[..9e0][..123.654],1.e1 Is Null Is Null] Ends With Extract(`3esn` In 9e1 Contains $999 Where _usn4[0]|12 Starts With #usn7 Starts With 0Xa)"),
    octest:ct_string("Return *,[`8esn`[0.e0..],1e1 Contains 's_str' Contains `3esn`] In [`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]] As `4esn`,$1000[0X0123456789ABCDEF][12] Skip $999[.e12][.0] Limit `` Starts With $123456789 With Distinct {usn1:0x0[$0][7],`5esn`:@usn5 Contains #usn8 Contains 12.0}[[@usn5 In 9e0 Ends With $#usn8 Where 00 Contains Count ( * ) Contains 0x0]],(`2esn` $`6esn`)<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(usn2 {usn1:.e12 Ends With 0Xa Ends With 0xabc}) Ends With Extract(@usn6 In False Contains 0 Contains $`6esn` Where .e1[usn2..$_usn3][.0..$#usn7]) Ends With Single(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]) Order By `3esn`(#usn8 =~0.e0,1000[0e0][1e1])[[_usn3[0x0],1e1 In 0.0 In 0X0123456789ABCDEF]] Desc,Any(#usn7 In True Contains 's_str' Contains $usn1 Where `6esn` Starts With `6esn`) =~Single(#usn7 In $999 In 1e1 Where _usn4 Contains `` Contains 1.e1) Asc,$@usn5[..$#usn7] Descending Skip #usn8 Is Not Null Is Not Null"),
    octest:ct_string("With  *,0.e0 =~00 As `3esn` Order By 's_str'[0x0..1.e1] Asc,usn1[False..`5esn`][$1000..$12] Ascending Where 9e1[$#usn8][$1000] Remove (`6esn` {_usn4:$`5esn` Is Not Null Is Not Null})<-[usn1:_usn4]-(#usn7 :@usn6).@usn5?,[@usn5 In 's_str'[0..] Where #usn7[0.12..]|.e12 Ends With 0Xa Ends With 0xabc].`1esn`? Unwind 0X0123456789ABCDEF Ends With `2esn` Ends With $`7esn` As `8esn`"),
    octest:ct_string("Unwind Any(@usn6 In False Contains 0 Contains $`6esn` Where 12e12 In $`5esn`) =~[#usn7 In 9e1[$`1esn`..] Where 0Xa Ends With $`3esn` Ends With $1000|$@usn5 Contains 's_str' Contains \"d_str\"] =~Extract(@usn6 In False Contains 0 Contains $`6esn` Where $`6esn` Starts With .e12 Starts With $`1esn`|12e12 In 123456789) As `1esn` Union All Optional Match ((`4esn` :@usn6)-[:`` *0..01]-({`7esn`:0xabc In Null,_usn4:.e12[0Xa..]})) Where 0Xa Ends With $`3esn` Ends With $1000 Union Optional Match ``=(((#usn7 :#usn8:`1esn`{``:.0[$``..0X7]})<-[? *0xabc]-(:@usn6{`6esn`:01 Ends With 0Xa Ends With 0X7})<-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->(usn2 :`5esn`))),((({`7esn`:123.654,`6esn`:9e1 Starts With Count ( * )})-[:#usn7|@usn5*..]-(`3esn` :usn2{`6esn`:#usn8 Is Null})<-[?:#usn7|@usn5 *0..01]->(:`1esn`:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null}))) Where $1000 Starts With $`3esn` Starts With 0.e0"),
    octest:ct_string("Create #usn7=((:`7esn`{#usn8:$999 Ends With .e0,_usn4:`4esn`[\"d_str\"]['s_str']})) Union All Create (((usn2 :#usn8:`1esn`)-[`5esn`?:`7esn`|:`2esn` *0x0..]->(`8esn` :`8esn`)<-[_usn4:_usn4 *0X7..{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]}]-(#usn7 :`2esn`))),((@usn6 {`7esn`:999 In 0e0})<-[? *1000..0X0123456789ABCDEF{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}]-(`6esn` {`2esn`:$`3esn` Ends With 01234567})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)) Unwind 9e1 =~123456789 =~999 As ``"),
    octest:ct_string("Unwind [#usn7 In True Contains 's_str' Contains $usn1 Where $`1esn` Starts With Count(*)] Contains (:`2esn`)-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(`3esn` {`4esn`:False Is Null}) Contains Filter(`8esn` In 123456789 =~@usn6 Where $`6esn` Starts With .e12 Starts With $`1esn`) As `1esn` Union Delete 12.e12 Starts With \"d_str\" Starts With 9e1,'s_str' Starts With 9e0 Starts With usn2,$`4esn`[..$`8esn`][..Null] Optional Match (`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]}) Return Distinct *,00 Ends With $`1esn` Ends With `7esn`,$@usn6 Is Not Null Is Not Null As `8esn` Order By (:@usn5{_usn3:123.654})<-[usn1:`1esn`|`3esn`]-(_usn4 :@usn5)-[:_usn3|:`7esn` *1000..0X0123456789ABCDEF]->(:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]}) Ends With Any(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn`[0..][999..]) Ends With {``:0xabc[..$1000][..`5esn`],``:$`1esn` Contains 1e1 Contains @usn6} Asc,[@usn5 In 9e0 Ends With $#usn8 Where 12.e12 =~0X0123456789ABCDEF =~1.e1|00[$`1esn`..][@usn6..]] Descending,[#usn8 In `7esn` Where $`3esn` Contains $`1esn`|$0[123.654..0.e0]][usn1(Distinct 999 Contains $1000,12[123.654..])..[.e12[..999][..@usn5],12.e12 =~.0 =~usn1,`6esn`[$1000][`3esn`]]][[@usn6 In 010[`5esn`] Where $usn2[`2esn`..$`1esn`]]..[`3esn` In 9e1 Contains $999 Where .12 In `8esn` In $#usn8]] Descending Skip [usn2 In 7[12] Where #usn7[.e0]|$usn2 =~9e1] Is Null Is Null Limit 12.e12 =~.0 =~usn1"),
    octest:ct_string("With  010[12.0..`4esn`][``..Count(*)],$`7esn`[123456789..$1000][Count ( * )..$7],$`2esn` Contains Count(*) As `3esn` Order By [$``[7],_usn3 Contains _usn4 Contains $@usn5] Starts With [`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]|usn2 =~7] Starts With Any(`3esn` In `2esn`[..01][..True] Where 12.e12 Contains #usn7 Contains $_usn4) Ascending,[usn2 In 7[12] Where #usn7[.e0]|$usn2 =~9e1] Is Null Is Null Ascending Limit 0.e0 Ends With 1.e1 Where _usn4 Is Not Null Optional Match ((`6esn` {_usn4:$`5esn` Is Not Null Is Not Null})),`5esn`=(((`2esn` :`1esn`:_usn4)<-[`5esn`?{`8esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}]->(`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})<-[`4esn`:usn2]->(:`6esn`:_usn3{`2esn`:999[123.654..$usn2][Count ( * )..0x0]}))) Union All With  0.12 Starts With $`8esn` Starts With @usn5 As @usn5,#usn7 Is Null Is Null As `1esn`,[@usn5[$`6esn`..][$999..],`` Starts With $123456789] Is Null Order By Any(#usn7 In 9e0[$1000] Where .e0 Is Null) In None(@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``) In Filter(@usn6 In False Contains 0 Contains $`6esn` Where $@usn5 In 12e12 In 01) Ascending,'s_str' Starts With 1e1 Starts With $0 Desc Where .e1[7..][9e0..] Merge `2esn`=(((`7esn` )<-[`4esn` *0Xa{@usn6:999 Starts With `2esn` Starts With .e1,`4esn`:$@usn5[..0xabc][..$`3esn`]}]->(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"})<-[usn2?:@usn5|_usn3*{_usn4:@usn5 Starts With $`3esn`,#usn7:$`5esn` Is Not Null}]-(#usn7 :``:usn2))) On Match Set #usn8 ={_usn4:``[9e12][$999],#usn8:123.654 In 12} Starts With Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0[0.0]) Starts With Filter(`6esn` In $`6esn`[``..][Count(*)..]) Unwind _usn3[`5esn`..][usn2..] As #usn7 Union Remove {`3esn`:$`5esn` Is Not Null Is Not Null}.`2esn`!,{``:`7esn`[$usn2..][$123456789..],_usn4:$12 Starts With $usn1}.`1esn`? Match _usn4=(((_usn4 :_usn4{_usn3:$`3esn`[.e1][_usn4]})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)<-[usn1:`7esn`|:`2esn`{`6esn`:Count(*) In #usn8 In \"d_str\",`1esn`:$`1esn` Ends With 0X0123456789ABCDEF}]-(`6esn` :`1esn`:_usn4))),usn1=(_usn4 :_usn4{`2esn`:`6esn` Starts With `6esn`,`8esn`:1000[0e0][1e1]})"),
    octest:ct_string("Return Distinct 010 Is Not Null Is Not Null As `1esn`,9e12 Starts With 1e1 As `5esn` Order By 9e0[..123456789][..$`3esn`] Asc,$@usn6 Ends With `1esn` Descending,9e1[$#usn8][$1000] Descending Match ``=((:`3esn`{`5esn`:True[0xabc..01234567][$`8esn`..$@usn6]})<-[usn1:_usn4]-(`` {_usn3:`5esn` Contains `7esn`})),(((`5esn` :@usn6{usn1:'s_str'[0..]})-[?:`4esn`|@usn5 *0Xa]-({`1esn`:$12 Starts With $usn1,`6esn`:123.654[`4esn`..12]})-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(`2esn` {`1esn`:$`4esn` Is Null Is Null}))) Unwind 0[01234567..][0X0123456789ABCDEF..] As `4esn`"),
    octest:ct_string("Merge @usn6=((`1esn` :`6esn`:_usn3{#usn7:0x0[$0][7]})) On Match Set [`6esn` In $`6esn`[``..][Count(*)..] Where 0x0[$0][7]|$`4esn`[`8esn`]].usn1 =Any(_usn4 In 12e12 In 123456789 Where _usn3 In $`8esn` In @usn6)[Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789])][All(@usn5 In 9e0 Ends With $#usn8)] Return Distinct $@usn6 Ends With 12.e12 Ends With @usn5 As usn2,``[usn1][`5esn`],`7esn`[..$`6esn`] Order By $@usn6 In @usn6 In 1e1 Desc,.e1[..$`3esn`][..01] Desc Limit Single(`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]) Is Not Null Is Not Null Merge #usn8=((#usn7 :_usn3$usn1)<-[`4esn`?:usn1|`4esn`{`3esn`:123.654[..0.e0][..'s_str'],@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]}]->({`3esn`:`2esn` In 9e0 In 7})) On Create Set @usn6+=$`1esn` =~1e1 On Create Set Extract(_usn4 In 12e12 In 123456789 Where Count ( * ) Ends With $123456789).`8esn` =None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 9e12[$`5esn`..$123456789]) In Extract(@usn5 In 's_str'[0..] Where 07 Ends With 9e12 Ends With `2esn`|00[01234567][False]) In [12 =~usn1]"),
    octest:ct_string("Unwind 999 In `2esn` In `8esn` As `4esn` Union Return Distinct Null[..010][..1000] As #usn7 Order By Any(`6esn` In $`6esn`[``..][Count(*)..] Where 1e1 Ends With $`7esn` Ends With .0) Is Not Null Descending,#usn8 Ends With $@usn5 Ends With $7 Desc,usn2[12.e12..] Asc Skip 1000[..`2esn`][..$@usn6] Limit [$`6esn`[1.e1][$_usn3],0Xa Ends With $`3esn` Ends With $1000] Ends With (usn2 :_usn4)-[_usn4? *999..{_usn3:$`5esn` =~usn1}]-({`8esn`:usn2 Starts With .0,@usn5:Count(*) In 12 In `6esn`}) Create (`3esn` {_usn4:123.654 In 12})-[`4esn`?:_usn4 *7..]-(`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`})<-[ *00..0Xa]->(#usn7 :usn1:`3esn`),(:`8esn`{``:.e1 Starts With 12.e12 Starts With `2esn`})<-[?:`3esn`*..]-(usn2 :`1esn`:_usn4{usn2:999 Contains $1000})<-[`5esn`?{`8esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}]->(`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})"),
    octest:ct_string("Remove Filter(@usn6 In False Contains 0 Contains $`6esn` Where $@usn5 In 12e12 In 01).`3esn`,`5esn`(Distinct).usn1! Detach Delete `2esn` Starts With $`7esn` Remove `1esn`(Distinct $`3esn`[..0X0123456789ABCDEF][..7],`4esn`[$_usn3..$`7esn`]).#usn8! Union All Create ((_usn3 {#usn7:12.e12 Ends With `` Ends With 0,``:$@usn6 In @usn6 In 1e1})-[_usn3?:`8esn` *1000..0X0123456789ABCDEF{@usn5:07 Is Not Null Is Not Null}]->(`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})),usn2=(`6esn` :usn1:`3esn`)-[ *7..{usn1:0x0[0X7],@usn5:`4esn`[.12][$@usn6]}]->(`7esn` {#usn8:False Starts With 0X7 Starts With 01234567})<-[ *..07{`8esn`:.e0[999..1000][1e1..$`8esn`],`1esn`:$`3esn`[$_usn4..0Xa]}]-(:_usn3{@usn5:$1000 Starts With $`7esn`})"),
    octest:ct_string("Unwind [#usn8 In `7esn` Where .e0 Starts With $@usn6 Starts With $7|1000[12e12][`5esn`]] Ends With [`3esn` In 9e1 Contains $999 Where .12 In `8esn` In $#usn8] Ends With [$``[..\"d_str\"][..$#usn8],$_usn4 Starts With $1000 Starts With 12,#usn7[.e0]] As `8esn` Union All Return 010[12.0..`4esn`][``..Count(*)],$`7esn`[123456789..$1000][Count ( * )..$7],$`2esn` Contains Count(*) As `3esn` Order By [$``[7],_usn3 Contains _usn4 Contains $@usn5] Starts With [`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]|usn2 =~7] Starts With Any(`3esn` In `2esn`[..01][..True] Where 12.e12 Contains #usn7 Contains $_usn4) Ascending,[usn2 In 7[12] Where #usn7[.e0]|$usn2 =~9e1] Is Null Is Null Ascending Limit 0.e0 Ends With 1.e1 Unwind Extract(@usn6 In False Contains 0 Contains $`6esn` Where $@usn6[$`8esn`..][123456789..]|.e1[usn2..$_usn3][.0..$#usn7]) As _usn4 Detach Delete 9e1 Contains $999 Union All Unwind (:#usn7:`5esn`{usn1:.e1[..$`3esn`][..01],`4esn`:$`5esn` In .12})<-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]-(:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) Is Not Null As usn1"),
    octest:ct_string("With  0.e0 Is Not Null Is Not Null As _usn4,0X0123456789ABCDEF In $usn2 In `4esn`,$usn1 Is Not Null Is Not Null Order By 01234567[$@usn6..$#usn7][123456789..12e12] Desc,Single(#usn7 In 9e0[$1000] Where @usn6 Contains .12 Contains $usn1)[Filter(usn2 In 7[12] Where $@usn5[..0xabc][..$`3esn`])..][Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 12.0 In 123.654 In _usn4)..] Ascending Skip Null[..0] Limit Filter(`6esn` In $`6esn`[``..][Count(*)..] Where $7 In $usn1 In 999) Ends With Any(usn2 In 7[12] Where 0X7[.0])"),
    octest:ct_string("Create ((:`3esn`{`7esn`:0.e0['s_str'..][01234567..]})<-[#usn8 *0x0..]->(_usn3 :usn2{#usn8:$`2esn` Is Null,_usn3:123.654 Is Not Null})<-[?:usn1|`4esn` *1000..0X0123456789ABCDEF{`6esn`:.e0[999..1000][1e1..$`8esn`],`4esn`:00 Ends With `` Ends With 12.e12}]-({`1esn`:usn2 Contains $0 Contains .0,_usn4:$@usn6[.0..][0e0..]})),`2esn`=(((@usn6 :``:usn2{usn1:0x0[0X7],@usn5:`4esn`[.12][$@usn6]})<-[? *7..{`1esn`:.e12 Ends With 0Xa Ends With 0xabc}]->(#usn7 {`7esn`:`8esn` Contains Count(*) Contains $#usn7})<-[ *..07]->(`8esn` {`8esn`:$_usn4 Starts With 12.e12}))) Match (({`7esn`:usn1[False..`5esn`][$1000..$12],`1esn`:$usn1[`2esn`..][$`2esn`..]})) Unwind `4esn` Contains 9e0 As `8esn` Union With  (#usn7 {_usn4:1.e1[`8esn`]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) =~Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12) =~{usn2:#usn8[`8esn`..]},9e1[$#usn8][$1000] As `5esn`,$usn1 Order By usn1 Ends With 9e0 Ends With 9e0 Descending,None(usn2 In 7[12] Where 123456789 =~12 =~'s_str')[{@usn5:$`` Contains $`2esn` Contains $usn2}..][(`2esn` :`6esn`:_usn3)-[?:#usn8|:`3esn` *7..]-({`7esn`:9e12 =~@usn6})..] Descending Skip (:`6esn`:_usn3{@usn6:7 =~`4esn`,_usn3:`6esn`[$1000][`3esn`]})-[_usn4:_usn4 *0X7..{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]}]-(:`6esn`:_usn3{`4esn`:#usn7 Contains $0 Contains $usn2})[[$`6esn`[1.e1][$_usn3]]][usn2(0xabc In Null)] Remove [0.e0[1000.._usn4][.e1..usn1],$`1esn` =~999,07[_usn3..][`6esn`..]].usn1!,usn2:`4esn`:`6esn`,Extract(usn2 In False[$usn1][0x0] Where $`7esn`|07 Is Null).#usn7! Delete $`6esn` Is Not Null Is Not Null,$`8esn` Is Not Null Is Not Null"),
    octest:ct_string("Detach Delete .e12[..999][..@usn5]"),
    octest:ct_string("Merge ((`` {#usn7:#usn8 Is Not Null Is Not Null})<-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(`2esn` :@usn5)<-[?:`5esn`|:usn2]->(usn2 :`5esn`)) Delete 9e0[$`8esn`] Remove [7 =~`4esn`,`2esn` Starts With $`7esn`].`8esn`! Union Return Distinct .0 Starts With `1esn` As #usn7,Single(#usn7 In True Contains 's_str' Contains $usn1 Where `7esn`) Ends With [0Xa Ends With $`3esn` Ends With $1000] Ends With {usn1:0x0[0X7],@usn5:`4esn`[.12][$@usn6]} As usn2,$@usn5[..$#usn7] Limit None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $0[123.654..0.e0])[Extract(#usn7 In 9e0[$1000] Where .e1 In 123456789)][{_usn3:01[`8esn`..9e12][.12..0]}] Unwind `7esn` Is Null As @usn5 Union All Create (:`6esn`:_usn3{`8esn`:`4esn`[\"d_str\"]['s_str']})<-[:@usn6|:`7esn`{usn2:0x0 Starts With $`6esn`,_usn4:$`4esn`[`8esn`]}]-(@usn6 {@usn6:0e0 =~7 =~12.0}),`4esn`=((({#usn7:$`3esn` Ends With 01234567,_usn3:usn1 =~$`7esn`})-[`7esn`?:usn1|`4esn` *00..0Xa{`3esn`:usn1 In ``}]-(usn1 {usn1:$#usn7 Starts With 01234567 Starts With $0})<-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(_usn3 :`3esn`{_usn3:01[`8esn`..9e12][.12..0]})))"),
    octest:ct_string("Unwind $#usn7 =~`2esn` As usn1 Detach Delete [0.12 Contains False Contains 1.e1,$12[$usn1..][Count(*)..]][{usn2:$@usn6 Ends With `1esn`,_usn3:`7esn`}..][{@usn6:1e1 Is Not Null Is Not Null,`8esn`:$`1esn` Starts With $`4esn` Starts With $_usn3}..],`6esn`[$1000][`3esn`] Union Optional Match (`1esn` {#usn7:$`1esn` Ends With 0X0123456789ABCDEF,`3esn`:.12 Starts With _usn3 Starts With $``}) Where 0 =~1e1"),
    octest:ct_string("Create `2esn`=(((`6esn` :`4esn`:`6esn`)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})<-[`4esn` *0Xa{@usn6:999 Starts With `2esn` Starts With .e1,`4esn`:$@usn5[..0xabc][..$`3esn`]}]->(@usn6 :``:usn2))),`7esn`=((`6esn` :`5esn`)<-[:`1esn`|`3esn` *0Xa{_usn4:``[9e12][$999],#usn8:123.654 In 12}]-(`5esn` :`4esn`:`6esn`)) Detach Delete [#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[..$`8esn`][..Null]|$@usn5[..0xabc][..$`3esn`]] Contains (`8esn` )<-[`2esn`:`4esn`|@usn5 *01234567..]-(`5esn` :`3esn`)<-[#usn8?:`8esn`{`1esn`:999 In #usn8 In $``,`8esn`:False[$`4esn`..]}]->(`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]}) Contains Any(`5esn` In 0X7 In $#usn7 Where 01 Is Null),1e1 Ends With $`2esn` With Distinct $1000 Starts With $`3esn` Starts With 0.e0 As @usn6,.e12 In $`5esn` In 0X7 As _usn4 Order By 12.0 Ends With `2esn` Descending Skip @usn5 Starts With 9e0 Starts With 010 Limit usn1[_usn3..] Where 9e1[usn1..0x0][12.e12..12.0]"),
    octest:ct_string("Merge (`1esn` :`3esn`{#usn8:$usn2[0.e0],`8esn`:$`4esn`['s_str'..]})<-[`7esn`:_usn4]->(`5esn` {``:_usn3 Contains 9e12 Contains `8esn`,@usn6:``[7.._usn3]}) On Create Set `2esn`+=0X0123456789ABCDEF In .12,`1esn` =$`7esn` In False In $`1esn` On Create Set usn1+=_usn3 Starts With 12e12 Starts With `5esn`,`4esn`+=(`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[`5esn`?{_usn4:$usn2 =~9e1}]->(`8esn` :#usn8:`1esn`{usn2:12.e12 Ends With $``,`2esn`:1e1 Contains 's_str' Contains `3esn`})-[`` *1000..0X0123456789ABCDEF]-(:usn1:`3esn`{_usn3:$`6esn`[1.e1][$_usn3]})[..Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where 999 In #usn8 In $``|Count ( * )[$`5esn`..][$7..])][..$usn2],#usn7+=.e0 Is Null Optional Match #usn8=(`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})-[`3esn`]->(:@usn5{#usn7:12e12 In $`5esn`}),`2esn`=(`8esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})-[`6esn`?:@usn5|_usn3 *01234567..]-(`5esn` {``:_usn3 Contains 9e12 Contains `8esn`,@usn6:``[7.._usn3]})<-[`8esn`{`1esn`:123456789 =~@usn6,`1esn`:$`5esn`[0X7..010][`7esn`..'s_str']}]->(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}) Union Optional Match `8esn`=(`5esn` :``:usn2)-[?{_usn3:`4esn`[$_usn3..$`7esn`]}]-({usn2:.12[0X7..][12e12..],`6esn`:$`4esn`[`6esn`..$12]}),((:`2esn`{`3esn`:9e1 Ends With Count(*) Ends With $7})<-[usn1?:`1esn`|`3esn` *01234567..{@usn5:`4esn`[\"d_str\"]['s_str']}]-({`7esn`:9e0 Contains $12 Contains `3esn`,`5esn`:.e0 Contains $#usn8})) Create (`6esn` {`2esn`:$`3esn` Ends With 01234567}),usn2=({`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})<-[`4esn` *0Xa{@usn6:999 Starts With `2esn` Starts With .e1,`4esn`:$@usn5[..0xabc][..$`3esn`]}]->(@usn6 :``:usn2)<-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->(_usn4 :@usn5) Return Distinct *,Single(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`)[{`5esn`:`6esn`[$`8esn`][9e1]}] As `7esn` Skip $0 =~9e1 =~$`2esn` Limit Any(@usn5 In 9e0 Ends With $#usn8 Where 12.e12 =~0X0123456789ABCDEF =~1.e1)[(`5esn` :#usn8:`1esn`{_usn3:`6esn` Is Null Is Null})<-[?{@usn6:$0[0Xa..$123456789],`4esn`:`7esn` Contains 9e0}]->({_usn3:0X0123456789ABCDEF Contains 12e12 Contains 12.e12})-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})..][Filter(#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`])..] Union All Merge `1esn`=(`5esn` :`5esn`{#usn7:``[$`3esn`]}) On Create Set @usn6+=$`1esn` =~1e1 On Match Set Any(`3esn` In 9e1 Contains $999 Where usn2[12.e12..]).usn1? =usn1[False..`5esn`][$1000..$12],#usn7 =Single(#usn7 In 9e0[$1000] Where $123456789[...12][..@usn6])[Filter(@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str'])..],Any(#usn8 In `7esn` Where .e12 Starts With $#usn8 Starts With False)._usn3? =1.e1 Ends With $#usn7 With  $1000 Starts With $`3esn` Starts With 0.e0 As @usn6,.e12 In $`5esn` In 0X7 As _usn4 Order By 1.e1 In 1000 In _usn3 Desc,None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 9e12[$`5esn`..$123456789]) In Extract(@usn5 In 's_str'[0..] Where 07 Ends With 9e12 Ends With `2esn`|00[01234567][False]) In [12 =~usn1] Descending,123.654 Is Null Is Null Asc Where _usn4[`7esn`]"),
    octest:ct_string("Remove Extract(@usn6 In 010[`5esn`]|False[$`4esn`..]).@usn5,{`3esn`:9e1 Ends With Count(*) Ends With $7}._usn4! Detach Delete 0X7[..$`8esn`] Union All Delete `4esn`($_usn4 Starts With $1000 Starts With 12)[{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}],00[$`1esn`..][@usn6..],0.12 Starts With $`8esn` Starts With @usn5 Union Return Distinct `1esn`(.0 Starts With `1esn`,01[`3esn`..][Count(*)..]) In [@usn6 In False Contains 0 Contains $`6esn` Where `1esn` Starts With 0xabc Starts With $usn2] As `4esn`,`7esn`[$usn1..]['s_str'..] Detach Delete 00[12e12][$`7esn`],\"d_str\" Is Null Is Null,usn2[1.e1] Delete {``:`6esn` =~$_usn4 =~7,`7esn`:9e0[$1000]}[#usn7(Distinct $`1esn`[``][07])..None(@usn6 In 010[`5esn`] Where $`3esn` Ends With 01234567)]"),
    octest:ct_string("Return *,`3esn`[12.0][$_usn3],.e1 =~_usn4 =~_usn4 As `3esn` Limit Count ( * ) In 0.12 With Distinct 010[12.0..`4esn`][``..Count(*)],$`7esn`[123456789..$1000][Count ( * )..$7],$`2esn` Contains Count(*) As `3esn` Skip `1esn` Where Null[..0] Union All Unwind #usn8 Is Not Null As `1esn`"),
    octest:ct_string("Return *,#usn7[0.12..],$`3esn`[.e1][_usn4] As _usn4 Skip (`2esn` $`6esn`)<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(usn2 {usn1:.e12 Ends With 0Xa Ends With 0xabc}) Ends With Extract(@usn6 In False Contains 0 Contains $`6esn` Where .e1[usn2..$_usn3][.0..$#usn7]) Ends With Single(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]) Limit \"d_str\" Is Not Null Is Not Null"),
    octest:ct_string("Return *,12 Ends With True Ends With @usn6,Filter(`5esn` In 0X7 In $#usn7 Where 010 Is Null) Is Not Null As `2esn` Order By Extract(@usn6 In False Contains 0 Contains $`6esn` Where $0 Ends With $usn1 Ends With $_usn3) Ascending,$@usn6 =~0xabc =~$999 Descending,[`5esn` In `7esn`[$usn2..][$123456789..] Where $@usn6 Ends With 12.e12 Ends With @usn5|`7esn`[1e1]] Contains (`4esn` :#usn8:`1esn`{`7esn`:.0[..'s_str'][..01234567],@usn6:False[..$`5esn`][..1e1]})<-[:_usn4]->(:usn2{@usn5:07 Ends With 9e12 Ends With `2esn`})<-[?{@usn6:$0[0Xa..$123456789],`4esn`:`7esn` Contains 9e0}]->(`2esn` {`1esn`:$`4esn` Is Null Is Null}) Contains Single(`5esn` In `7esn`[$usn2..][$123456789..] Where 999 In #usn8 In $``) Desc Remove {`8esn`:usn2 =~7,`5esn`:.e0[01234567..$`8esn`]}.#usn8 Merge #usn7=(({_usn3:_usn3 Ends With 7 Ends With $`1esn`,``:$_usn4[$`5esn`][`7esn`]})-[:_usn4 *0..01]-(#usn8 :`2esn`{`1esn`:0x0 Starts With $`6esn`}))"),
    octest:ct_string("Detach Delete 07[999],12.e12 Contains #usn7 Contains $_usn4,0[@usn5..$#usn7] Union All Create #usn7=(((:usn1:`3esn`{_usn3:$`6esn`[1.e1][$_usn3]})-[:`` *123456789..{`1esn`:`8esn` Is Not Null Is Not Null}]-(#usn8 :`2esn`)<-[ *00..0Xa]->(`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null}))),#usn8=(((`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[@usn6?:`7esn`|:`2esn`]->({#usn8:1e1 Is Not Null Is Not Null})-[?:@usn5|_usn3{`1esn`:`2esn` Is Null,`7esn`:`` =~.12}]-(`4esn` :#usn8:`1esn`{`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12}))) Create ((@usn6 {`7esn`:999 In 0e0})<-[? *1000..0X0123456789ABCDEF{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}]-(`6esn` {`2esn`:$`3esn` Ends With 01234567})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)),((usn2 :`6esn`:_usn3)-[?:#usn7|@usn5 *0X0123456789ABCDEF..{_usn3:@usn5 Is Not Null}]-(#usn8 {`5esn`:$12[$usn1..][Count(*)..],`7esn`:0e0[``..$1000][$7..12.e12]})) Optional Match ``=((usn2 :`5esn`{`7esn`:0.12 Starts With $`8esn` Starts With @usn5})<-[usn1:`7esn`|:`2esn`{`6esn`:Count(*) In #usn8 In \"d_str\",`1esn`:$`1esn` Ends With 0X0123456789ABCDEF}]-(#usn8 :usn2{@usn5:$#usn7[..9e0][..123.654],`2esn`:7[12]})<-[ *..07{`5esn`:999 In 0e0}]-(_usn4 :`8esn`)) Where 010 Is Null Is Null Union Create `3esn`=((:#usn8:`1esn`$`7esn`)<-[`1esn` *999..{`1esn`:1e1 Contains 's_str' Contains `3esn`}]-(usn1 {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(#usn7 :``:usn2)),usn2=(`3esn` {usn2:$usn2[`4esn`..9e12]})"),
    octest:ct_string("Return Distinct (:@usn5{@usn5:999[..`1esn`][..07],_usn4:Count ( * ) Ends With $123456789})<-[`2esn`? *01..123456789]-(`2esn` :@usn6)[[`2esn`[..$_usn4][...12],False Contains 0 Contains $`6esn`,.e1[12.0..]]..[#usn7 In 9e0[$1000] Where #usn8 =~0.e0|12.e12 =~0X0123456789ABCDEF =~1.e1]],`1esn`[0Xa] As usn1,usn1 Contains 010 As @usn5 Order By 0Xa[..Count ( * )][..$123456789] Desc,`5esn`[$`7esn`..$@usn5] Ascending Skip usn2[..$usn1][..$#usn8] Limit 12.0 Ends With usn2 Ends With 0 Match @usn5=(:#usn8:`1esn`{`3esn`:123.654[..0.e0][..'s_str']}),(`3esn` {_usn3:$123456789[0.12..]})-[_usn4]->(:`6esn`:_usn3{_usn3:usn1 Is Null Is Null,#usn8:9e1[$``..][0.e0..]}) Remove {@usn6:07 Is Not Null Is Not Null,`5esn`:0e0 =~7 =~12.0}.`8esn`,All(#usn7 In 9e0[$1000] Where .e1 In 123456789).`6esn`! Union All Remove Any(`5esn` In `7esn`[$usn2..][$123456789..] Where _usn4 Is Not Null).`4esn`,(_usn3 {`8esn`:_usn3[0x0],#usn8:$usn1 Contains 0})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(_usn4 :`8esn`)<-[ *0X7..{#usn8:.e0 Contains $#usn8}]->(`2esn` :`6esn`:_usn3).@usn5!"),
    octest:ct_string("Remove {usn1:0 =~1e1,`7esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}.usn1!,None(`5esn` In `7esn`[$usn2..][$123456789..] Where $123456789[...12][..@usn6]).usn2? Unwind $#usn8[..$999] As #usn7 Optional Match _usn4=((:`3esn`{#usn7:$#usn7 In $@usn5 In $`1esn`})),(`2esn` :`1esn`:_usn4)-[?*..]-({`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})"),
    octest:ct_string("Detach Delete usn1 Ends With 0.0,$999 In 1e1,`7esn`(Distinct `1esn` Starts With 0xabc Starts With $usn2)[({`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12})-[`6esn`?:@usn5|_usn3 *01234567..]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})..]"),
    octest:ct_string("Return *,1e1 Contains 0.e0 Contains 9e1,`1esn` Starts With 9e1 As `6esn` Order By 010 Contains .e1 Asc,(:`6esn`:_usn3{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]})<-[#usn7 *01..123456789]->(`6esn` :usn1:`3esn`) Ends With Extract(#usn8 In `7esn` Where 9e12[..1e1][..'s_str']) Ends With [_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 123.654 Is Not Null|$`2esn`[.0..][0.0..]] Descending Return $123456789 Starts With 0.12 Starts With Null As _usn3 Order By #usn7[``] Desc,{`5esn`:`6esn`[$`8esn`][9e1]} Is Not Null Is Not Null Ascending,`` Is Null Descending Skip 0X0123456789ABCDEF In $7 Limit All(`8esn` In 123456789 =~@usn6 Where @usn5 Contains 9e0)[(:#usn7:`5esn`)<-[#usn8? *0Xa]-(`5esn` :`5esn`{#usn7:``[$`3esn`]})<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(usn2 {usn1:.e12 Ends With 0Xa Ends With 0xabc})..] Union All Return Distinct *,Null[..010][..1000] As #usn7,9e12 Ends With 12e12 Ends With 12 As `` Order By 1000[$7..][_usn4..] Desc Skip $`3esn` Ends With 01234567 Limit 7 Ends With .12 Merge `1esn`=((`2esn` :`1esn`:_usn4)-[?:``]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})) Unwind usn1[..$@usn6][..00] As `4esn`"),
    octest:ct_string("Match @usn6=(usn2 :_usn4) Where `2esn` In 7 Merge ((@usn6 :_usn4{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]})) On Create Set _usn4+=010 Starts With $`` Starts With 0e0 On Create Set #usn7+=@usn6[123.654..][0x0..],`3esn`+=00 In @usn6 In 0,@usn6 =Filter(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]) Is Not Null Is Not Null Unwind {`8esn`:9e12 =~@usn6,`1esn`:999 Contains 0 Contains $`5esn`}[`4esn`()] As usn2"),
    octest:ct_string("Return Distinct _usn3 Is Not Null Is Not Null As `` Skip 0X7[..$`8esn`] Limit {@usn5:$@usn6 Is Not Null Is Not Null} Starts With [`3esn` In `2esn`[..01][..True] Where 0x0[usn1..usn1]] Starts With Extract(`3esn` In `2esn`[..01][..True] Where usn2[12.e12..]|0X7['s_str'..][01..]) Delete $`7esn`[@usn5..][usn2..],0x0 In `8esn`"),
    octest:ct_string("Unwind 0.0 Ends With $`7esn` As #usn7 Detach Delete Single(_usn4 In 12e12 In 123456789 Where False Is Null)[[$usn1,_usn4 Contains `` Contains 1.e1]][(`6esn` {_usn3:9e12 Starts With 1e1,_usn4:`2esn`[..$_usn3]})-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->({`1esn`:#usn7[0]})],0 =~1e1 Unwind (#usn7 )<-[`5esn`?:@usn5|_usn3{``:0.0 =~9e0 =~$0}]-(:@usn5{`1esn`:999 Is Not Null Is Not Null,``:.e1[7..][9e0..]}) Contains Filter(#usn7 In $999 In 1e1 Where _usn4 Is Not Null Is Not Null) As `` Union All Return Distinct *,$@usn6[123.654..00] As @usn5,7 Is Null Is Null Order By 0[01234567..][0X0123456789ABCDEF..] Desc,Extract(usn2 In 7[12] Where usn1 Starts With 00|`8esn` Contains Count(*) Contains $#usn7) Contains None(@usn6 In False Contains 0 Contains $`6esn` Where $usn2[0.e0]) Contains Extract(@usn6 In False Contains 0 Contains $`6esn` Where $usn2[`4esn`..9e12]|$`4esn`['s_str'..]) Asc,[#usn7 In True Contains 's_str' Contains $usn1 Where $@usn6 In @usn6 In 1e1|12.0[$1000..][#usn7..]][Any(_usn4 In 12e12 In 123456789 Where .e12[@usn6..][010..])..Single(usn2 In False[$usn1][0x0] Where 9e1 Is Not Null Is Not Null)] Ascending Skip $_usn4[..123456789] Limit 0e0 Ends With 07 Ends With $`8esn` Merge ((#usn7 {#usn7:1.e1 Starts With 9e12})<-[ *..07{`5esn`:999 In 0e0}]->(#usn7 :#usn8:`1esn`{``:.0[$``..0X7]})) On Create Set `4esn`:usn2,`2esn`+=`2esn`(0e0 =~0Xa =~$999,@usn5 Contains 9e0)[(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[usn2? *0..01{`6esn`:#usn8 Is Null}]->(`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12})..][Any(`3esn` In `2esn`[..01][..True] Where 0.e0[..$7])..] On Match Set [#usn8 In `7esn` Where 00 In @usn6 In 0].`1esn`? =Filter(`3esn` In 9e1 Contains $999 Where .e0 Is Not Null Is Not Null) Is Not Null Is Not Null,Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789]).@usn6! =[#usn7 In 9e0[$1000] Where .e1 In 123456789|.e12[..999][..@usn5]] In `5esn`(`1esn` Starts With 0X7 Starts With \"d_str\",9e1) In @usn5(Distinct `5esn` Contains $`5esn` Contains 0X7,True[..#usn8]),_usn4+=$_usn3[$12]"),
    octest:ct_string("Create ((:`1esn`:_usn4{_usn3:0x0 Contains $`6esn` Contains `4esn`,@usn6:0Xa In #usn7 In 's_str'})<-[:@usn6|:`7esn`{usn2:0x0 Starts With $`6esn`,_usn4:$`4esn`[`8esn`]}]-(@usn6 {@usn6:0e0 =~7 =~12.0})<-[:`8esn` *0X7..]->(`2esn` :`6esn`:_usn3{usn2:0e0 =~0Xa =~$999,`4esn`:@usn6[9e12]})),(((`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`})-[?:_usn4]->(:`5esn`{`4esn`:0Xa[..Count ( * )][..$123456789]})<-[?:`` *0..01]->({`2esn`:9e12[$`5esn`..$123456789],`8esn`:$usn2 =~9e1}))) Union All With  .0 Starts With `1esn` As #usn7,Single(#usn7 In True Contains 's_str' Contains $usn1 Where `7esn`) Ends With [0Xa Ends With $`3esn` Ends With $1000] Ends With {usn1:0x0[0X7],@usn5:`4esn`[.12][$@usn6]} As usn2,$@usn5[..$#usn7] Limit None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $0[123.654..0.e0])[Extract(#usn7 In 9e0[$1000] Where .e1 In 123456789)][{_usn3:01[`8esn`..9e12][.12..0]}] Detach Delete 9e1[_usn3] Union Return *,`6esn`[$1000][`3esn`],$`1esn`[Null][True] As `7esn` Order By `5esn` Contains `5esn` Contains $_usn3 Ascending,[`3esn` In 9e1 Contains $999 Where _usn3[`2esn`..0X7][0.e0..$`3esn`]] In (`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[ *0xabc{``:usn1 Contains 010,`2esn`:$0 In `3esn` In 07}]->(:#usn7:`5esn`)-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(:#usn8:`1esn`$`7esn`) In {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]} Asc,#usn7 Starts With $123456789 Starts With 12e12 Asc Match ((:`5esn`{`8esn`:$`1esn` Starts With Count(*),_usn3:usn1[...e12][..1.e1]})<-[? *0X7..{`2esn`:$@usn5 In $`6esn` In 12e12}]-(:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(`4esn` :_usn4)) Merge (((:#usn7:`5esn`{_usn4:$usn2 =~9e1})-[_usn4 *01234567..{@usn5:0xabc =~$@usn5,usn1:0Xa[$`8esn`..][$_usn4..]}]->(`5esn` :`4esn`:`6esn`)<-[`6esn`? *00..0Xa]->(#usn7 :#usn8:`1esn`{``:.0[$``..0X7]})))"),
    octest:ct_string("Merge usn1=(:`2esn`{usn1:.0[..'s_str'][..01234567],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})<-[`8esn`{`1esn`:123456789 =~@usn6,`1esn`:$`5esn`[0X7..010][`7esn`..'s_str']}]-(`4esn` :#usn8:`1esn`{`7esn`:.0[..'s_str'][..01234567],@usn6:False[..$`5esn`][..1e1]}) On Match Set 0.12.`8esn`? =.0 Contains .e12 Contains 0 Remove Any(@usn5 In 's_str'[0..] Where #usn7[0.12..])._usn3,[`6esn` In $`6esn`[``..][Count(*)..] Where @usn5[0.0..0X7]].``! Union Return Distinct 07 As `4esn` Skip `2esn`(0e0 =~0Xa =~$999,@usn5 Contains 9e0)[(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[usn2? *0..01{`6esn`:#usn8 Is Null}]->(`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12})..][Any(`3esn` In `2esn`[..01][..True] Where 0.e0[..$7])..] Unwind Any(@usn6 In False Contains 0 Contains $`6esn` Where 12e12 In $`5esn`) =~[#usn7 In 9e1[$`1esn`..] Where 0Xa Ends With $`3esn` Ends With $1000|$@usn5 Contains 's_str' Contains \"d_str\"] =~Extract(@usn6 In False Contains 0 Contains $`6esn` Where $`6esn` Starts With .e12 Starts With $`1esn`|12e12 In 123456789) As `1esn` Merge usn1=((`2esn` :@usn5)) On Match Set Any(#usn8 In `7esn` Where $`3esn` Contains $`1esn`).`8esn`? =0x0 Contains $`6esn` Contains `4esn`,Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where False[$usn1][0x0]|@usn5[0.0..0X7]).usn2! =Single(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where @usn6 In .12 In `3esn`) Contains {usn2:.12[123.654..],`2esn`:`8esn`[$`4esn`..$#usn8]} Contains All(#usn7 In $999 In 1e1 Where 9e12 Starts With 1e1),`3esn` =12.e12[..$999][..07] On Match Set usn1 =`5esn` Contains `5esn` Contains $_usn3,#usn8 =True Contains 0x0 Contains $_usn3 Union All Create ((_usn3 {#usn7:12.e12 Ends With `` Ends With 0,``:$@usn6 In @usn6 In 1e1})-[_usn3?:`8esn` *1000..0X0123456789ABCDEF{@usn5:07 Is Not Null Is Not Null}]->(`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})),usn2=(`6esn` :usn1:`3esn`)-[ *7..{usn1:0x0[0X7],@usn5:`4esn`[.12][$@usn6]}]->(`7esn` {#usn8:False Starts With 0X7 Starts With 01234567})<-[ *..07{`8esn`:.e0[999..1000][1e1..$`8esn`],`1esn`:$`3esn`[$_usn4..0Xa]}]-(:_usn3{@usn5:$1000 Starts With $`7esn`})"),
    octest:ct_string("Return $`4esn`[`6esn`..$12] As `3esn` Order By [0x0 Ends With 12.0 Ends With `5esn`,12e12 Ends With 0.0 Ends With usn1,00[1.e1..]] Ends With All(#usn8 In `7esn` Where $`3esn`[..0xabc][..$7]) Ends With Any(@usn6 In False Contains 0 Contains $`6esn` Where `6esn`[$1000][`3esn`]) Asc,Filter(#usn7 In True Contains 's_str' Contains $usn1 Where `2esn`[..$_usn3]) In ({_usn3:_usn3 Ends With 7 Ends With $`1esn`,``:$_usn4[$`5esn`][`7esn`]})-[? *12..{usn2:$`8esn`[123456789..][$@usn5..]}]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]})<-[_usn4? *12..{`1esn`:$`6esn` Starts With .e12 Starts With $`1esn`,`3esn`:`8esn`[0.e0..]}]-({#usn8:.e12 Is Null Is Null,@usn6:`1esn` Is Not Null Is Not Null}) In Any(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 0xabc In 123456789 In 0x0) Asc Skip usn1 Union Merge `3esn`=(((:`6esn`:_usn3{`8esn`:.e12[..999][..@usn5],`3esn`:$_usn3 Is Null})<-[? *0X7..]->(`5esn` :``:usn2{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3})-[_usn4]->(:`6esn`:_usn3{_usn3:usn1 Is Null Is Null,#usn8:9e1[$``..][0.e0..]}))) On Match Set @usn6 =999[..`1esn`][..07],`3esn`+=$@usn5[0.0][0X0123456789ABCDEF],`6esn`+=$usn1[1000][.12] On Match Set #usn8+=Count(*)[$@usn5],@usn6 =0 =~1e1,`2esn`+=Extract(#usn7 In 9e1[$`1esn`..] Where $999[``]) Starts With (`6esn` :@usn6)<-[ *..07]-(:_usn3{`7esn`:9e0 Ends With $#usn8}) Starts With (#usn7 :@usn6)<-[? *01..123456789]-(`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]}) Unwind Count(*)[9e12..12.0] As #usn8 Remove All(#usn7 In True Contains 's_str' Contains $usn1 Where .e12[$@usn6..00][01234567.._usn3]).usn2,[@usn6 In False Contains 0 Contains $`6esn` Where $`5esn`[..00]|_usn3 Contains 9e12 Contains `8esn`].`3esn`?,{`4esn`:.e1[7..][9e0..],`8esn`:00 In @usn6 In 0}.`4esn`?"),
    octest:ct_string("Remove Extract(`8esn` In 123456789 =~@usn6 Where .e12 Starts With $12 Starts With .e12|.e1[12.0..]).`1esn`!,(:`5esn`{@usn6:1000[0e0][1e1]})-[:`` *0..01]-(:`8esn`{usn2:$123456789 Contains $#usn8 Contains ``,_usn3:`3esn`[..0X0123456789ABCDEF][..0x0]})-[?:#usn7|@usn5 *01234567..{`5esn`:$`4esn` In 1.e1 In #usn7}]-(`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]}).@usn6! Remove [`5esn` In 0X7 In $#usn7 Where @usn6 Is Not Null Is Not Null|9e1[..123456789]].``?,Any(#usn7 In True Contains 's_str' Contains $usn1 Where `5esn` Contains $`5esn` Contains 0X7).usn1 Optional Match (`8esn` {usn1:010[`5esn`],_usn3:_usn4 Is Null Is Null}) Union All Remove All(@usn6 In 010[`5esn`] Where `7esn`[$usn1..]['s_str'..]).usn1!,All(usn2 In False[$usn1][0x0] Where 010 Starts With 0 Starts With 0.0).`8esn` Unwind `4esn` Starts With 0e0 As `1esn` Return Distinct `` Starts With $123456789,$`4esn` Starts With $`4esn` Starts With $_usn3,9e1[$#usn8][$1000] Order By .e12[.12..] Desc,{@usn5:01[`3esn`..][Count(*)..]} Starts With Filter(#usn7 In $999 In 1e1 Where 9e12[..1e1][..'s_str']) Desc,``[$`3esn`] Descending Skip {@usn5:\"d_str\"[True..]} In _usn4(0 =~1e1,$123456789 Contains $#usn8 Contains ``) In [999 Contains $1000,`2esn` =~.e12 =~0X0123456789ABCDEF,_usn4[@usn6..][$0..]]"),
    octest:ct_string("Match `5esn`=(:#usn7:`5esn`{@usn5:999 Starts With `2esn` Starts With .e1,``:0xabc In Null})-[`6esn` *0Xa]-(usn1 :`1esn`:_usn4{_usn3:@usn6[999..$_usn3][0.12..$@usn5],`1esn`:9e12[..1e1][..'s_str']}),`7esn`=(`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})-[`3esn`]->(:@usn5{#usn7:12e12 In $`5esn`}) Unwind {_usn3:usn1 Is Null Is Null,#usn8:9e1[$``..][0.e0..]} Contains ({`7esn`:`8esn` Contains Count(*) Contains $#usn7})<-[_usn3:`3esn`{`5esn`:_usn4[0]}]->(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})-[#usn7?{`5esn`:.e12 Starts With $#usn8 Starts With False}]->({`1esn`:0X7 In $#usn7,_usn3:usn1 Contains 010}) Contains None(#usn8 In `7esn`) As `4esn` Union Remove [`6esn` In $`6esn`[``..][Count(*)..]|$`4esn`['s_str'..]].@usn6?,(usn2 {`5esn`:$@usn5 In 12e12 In 01})<-[:`2esn`|`4esn` *12..]->({`7esn`:`4esn` Is Not Null Is Not Null,`4esn`:`4esn` Ends With 12 Ends With .12})-[`7esn`:`4esn`|@usn5 *12..]-(`` :`3esn`{`6esn`:Count(*)[9e12..12.0]}).`5esn`"),
    octest:ct_string("Remove Filter(`8esn` In 123456789 =~@usn6 Where 0x0[@usn6..][01..]).#usn8! Match `1esn`=(`5esn` :`5esn`{#usn7:``[$`3esn`]}) Union All Remove #usn7:`3esn`,Single(`6esn` In $`6esn`[``..][Count(*)..] Where 's_str' Starts With 1e1 Starts With $0).`4esn`?"),
    octest:ct_string("Create ((`3esn` :usn2{`6esn`:#usn8 Is Null})-[:`2esn`|`4esn`{_usn3:@usn6[`1esn`..],@usn6:@usn6[9e12]}]->(`7esn` {`6esn`:0xabc[..$1000][..`5esn`],`4esn`:$@usn5 In 12e12 In 01})),`5esn`=(({@usn5:``[9e12][$999]})-[usn2{``:$`1esn` =~999}]-(:#usn7:`5esn`{`2esn`:12.e12 Contains 9e1,`5esn`:.e1 Starts With 12.e12 Starts With `2esn`})<-[:@usn6|:`7esn`{usn2:0x0 Starts With $`6esn`,_usn4:$`4esn`[`8esn`]}]-(@usn6 {@usn6:0e0 =~7 =~12.0})) Delete 123.654 In $`7esn`"),
    octest:ct_string("Remove (_usn4 {usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})<-[`2esn`:`8esn`{`7esn`:$`4esn` Is Null Is Null}]->(usn1 :@usn6)-[usn2?:`3esn` *00..0Xa]-(`2esn` :_usn3{`8esn`:01234567[Null..$_usn3]}).`8esn`,{usn1:$123456789 In 0.12}.`1esn`! Union Merge `4esn`=({`8esn`:.e0[999..1000][1e1..$`8esn`],`1esn`:$`3esn`[$_usn4..0Xa]}) On Create Set #usn7+=Single(usn2 In 7[12] Where `7esn` Is Null)[..Single(`6esn` In $`6esn`[``..][Count(*)..] Where $7 In $usn1 In 999)][..Any(#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4)] On Match Set `2esn` =9e1 Ends With Count(*) Ends With $7 Union All Merge ({`4esn`:.e1[..$`3esn`][..01]})-[`5esn`:#usn7|@usn5]-(`5esn` :`4esn`:`6esn`) Create (_usn3 :`7esn`) Unwind $`2esn` Starts With $@usn5 Starts With #usn7 As `4esn`"),
    octest:ct_string("With Distinct .0[..'s_str'][..01234567] Order By {_usn4:01234567[Null..$_usn3],usn1:$123456789[12e12..9e0]} Desc,`1esn` Starts With 0X7 Starts With \"d_str\" Descending,9e1[$#usn8][$1000] Asc Skip Extract(#usn7 In 9e0[$1000] Where _usn4 Is Not Null Is Not Null|usn2 Ends With .e1 Ends With $`5esn`)[Any(@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``)][Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where 1e1 Contains 's_str' Contains `3esn`|$`2esn` Ends With `6esn`)] Limit _usn3 =~9e1 =~12e12 Unwind usn1 Ends With 0.0 As _usn3 Merge `6esn`=(`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null})<-[@usn6:`1esn`|`3esn` *0X7..]->(_usn3 :`4esn`:`6esn`{usn2:`4esn` Starts With 0e0,`3esn`:7[12]}) On Match Set `4esn`+=$0 =~9e1 =~$`2esn`,_usn3 =Single(usn2 In 7[12] Where `7esn` Is Null)[..Single(`6esn` In $`6esn`[``..][Count(*)..] Where $7 In $usn1 In 999)][..Any(#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4)] On Match Set Single(`5esn` In 0X7 In $#usn7 Where 123456789 =~$999).`5esn` =0[01234567..][0X0123456789ABCDEF..],All(`6esn` In $`6esn`[``..][Count(*)..]).`6esn` =1.e1 Starts With 9e12 Union Delete $@usn6 Ends With `1esn` Union All Remove [_usn3 In $`8esn` In @usn6,.e12 Ends With 0Xa Ends With 0xabc,.e1[12.0..]].#usn8,{_usn4:`5esn` Contains #usn7 Contains 9e12}.`1esn`!"),
    octest:ct_string("With Distinct *,0xabc Is Null Is Null,usn2 =~$`` =~$`8esn` As `2esn` Skip 0 Ends With Count(*) Ends With False With  *,[#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`]][[`2esn` Is Null]][Extract(#usn7 In $999 In 1e1|01234567[Null..$_usn3])] Where .e1[12.0..] Union Unwind 9e1 =~$_usn4 =~1.e1 As `7esn`"),
    octest:ct_string("Match ((_usn3 :`8esn`{#usn8:False Starts With 0X7 Starts With 01234567})) Optional Match (:`7esn`{#usn8:$999 Ends With .e0,_usn4:`4esn`[\"d_str\"]['s_str']})<-[:`1esn`|`3esn`{`2esn`:$`3esn` Ends With 01234567}]->(_usn3 :`5esn`)-[:_usn3|:`7esn` *1000..0X0123456789ABCDEF]->(:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]}) Where 123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8] Match `3esn`=((`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`})),((`5esn` :@usn5{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})) Where 07 Is Null Union All Unwind .e0 Ends With $123456789 Ends With 0xabc As #usn7 Match `3esn`=(_usn3 {`8esn`:_usn3[0x0],#usn8:$usn1 Contains 0}),usn1=(({usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})-[:`6esn`|:#usn8{`4esn`:$`2esn`[..$`3esn`][..12e12],#usn8:123.654 Is Not Null}]-(_usn3 :`5esn`)-[`4esn`?:#usn8|:`3esn`{`3esn`:01 Is Null,`1esn`:123456789[12]}]-(:_usn4{#usn7:1000[..`2esn`][..$@usn6],`1esn`:12e12 Starts With $0 Starts With $`2esn`})) Where \"d_str\"[True..] Union Optional Match (`5esn` {`2esn`:`1esn`[0.0..1e1][0x0..7],#usn8:.e0}) Where #usn7[0.e0..]['s_str'..] Merge ((@usn6 :_usn4{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]})) On Match Set #usn7+=`1esn` Remove None(_usn4 In 12e12 In 123456789 Where 0x0 Starts With $`6esn`).`2esn`,(`5esn` :``:usn2)<-[?:`4esn`|@usn5{usn2:$@usn6[$`8esn`..][123456789..]}]->(:_usn4{`8esn`:01234567[Null..$_usn3]}).``?,Extract(usn2 In 7[12] Where .12[0X7..][12e12..]|0.0 Contains #usn7).`1esn`"),
    octest:ct_string("Remove (_usn4 {_usn4:Null[..010][..1000],_usn3:.0 Is Null Is Null})<-[`7esn`?:usn1|`4esn`]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01}).usn2 Union All Detach Delete $`1esn`[``][07],`2esn` Starts With .e1 Starts With 9e12,$`4esn` In 1.e1 In #usn7 Union Match (((`6esn` :#usn7:`5esn`)-[`6esn`?:@usn5|_usn3 *01234567..]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})-[ *0xabc{``:usn1 Contains 010,`2esn`:$0 In `3esn` In 07}]->(_usn4 :#usn7:`5esn`))),`1esn`=(`8esn` :@usn6)<-[?:usn2 *0x0..]->(:`2esn`{usn1:.0[..'s_str'][..01234567],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})-[`5esn`? *01..123456789{`5esn`:@usn6[9e12],`5esn`:@usn6[999..$_usn3][0.12..$@usn5]}]-(`1esn` {`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]})"),
    octest:ct_string("Delete 0x0[usn1..usn1] Union All Return Distinct $`3esn`[..0xabc][..$7] As ``,`` Is Not Null Is Not Null As `6esn` Order By (:`6esn`:_usn3{@usn6:7 =~`4esn`,_usn3:`6esn`[$1000][`3esn`]})-[_usn4:_usn4 *0X7..{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]}]-(:`6esn`:_usn3{`4esn`:#usn7 Contains $0 Contains $usn2})[[$`6esn`[1.e1][$_usn3]]][usn2(0xabc In Null)] Ascending,123.654 In 12 Desc,$_usn3[_usn4..] Asc Skip 0[.12..1e1] Limit 01 Ends With .12 Ends With 07 Merge #usn8=(_usn4 :@usn5{usn1:$#usn7 Starts With 01234567 Starts With $0})<-[`8esn` *0xabc{#usn8:12.0 Starts With .12 Starts With `6esn`,@usn5:_usn3[`5esn`..][usn2..]}]->(#usn7 {`8esn`:`7esn` In 010 In usn1}) On Create Set Single(`5esn` In 0X7 In $#usn7 Where 123456789 =~$999).`5esn` =0[01234567..][0X0123456789ABCDEF..],All(`6esn` In $`6esn`[``..][Count(*)..]).`6esn` =1.e1 Starts With 9e12 With  {#usn8:1.e1 Is Null Is Null,_usn4:0xabc In 123456789 In 0x0}[All(@usn6 In 010[`5esn`] Where 00[1.e1..])..],`5esn`(0[1e1][$usn1],Null =~`6esn`)[usn2(Distinct)..][Single(#usn7 In 9e0[$1000] Where 01 Ends With 0Xa Ends With 0X7)..] As `1esn`,12.0 Starts With $`2esn` Starts With .e1 Order By [#usn8 In `7esn` Where $`3esn` Contains $`1esn`|$0[123.654..0.e0]][usn1(Distinct 999 Contains $1000,12[123.654..])..[.e12[..999][..@usn5],12.e12 =~.0 =~usn1,`6esn`[$1000][`3esn`]]][[@usn6 In 010[`5esn`] Where $usn2[`2esn`..$`1esn`]]..[`3esn` In 9e1 Contains $999 Where .12 In `8esn` In $#usn8]] Ascending Skip `1esn`(#usn7[..07])[..[#usn8 In `7esn` Where 9e1 Starts With Count ( * )|`3esn` Starts With 9e0 Starts With usn1]] Limit _usn3 =~`2esn` =~0 Where #usn7[0.e0..]['s_str'..] Union All Optional Match (((:`1esn`:_usn4{usn2:0x0 Starts With $`6esn`,_usn4:$`4esn`[`8esn`]})<-[@usn6?:_usn3|:`7esn`{@usn6:$`3esn`[.e1][_usn4]}]-(`` {`7esn`:$#usn7[..0Xa]})<-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(`3esn` {`3esn`:$@usn6 Is Not Null Is Not Null,`1esn`:12e12 =~1e1}))),_usn3=(`` {`7esn`:.e0 Is Not Null Is Not Null,@usn6:.e1[..$`3esn`][..01]})-[usn1?:`2esn`|`4esn`{#usn7:$#usn7[..9e0][..123.654],usn2:.e0 Is Not Null Is Not Null}]-(`8esn` :@usn6)<-[ *01234567..]->(:``:usn2{`5esn`:$12 Starts With $usn1}) Where _usn4[`7esn`]"),
    octest:ct_string("Unwind Count ( * ) Ends With $123456789 As ``"),
    octest:ct_string("Match `2esn`=(`5esn` :``:usn2)<-[`8esn` *0xabc{#usn8:12.0 Starts With .12 Starts With `6esn`,@usn5:_usn3[`5esn`..][usn2..]}]->(@usn6 :usn1:`3esn`{@usn5:999 Starts With `2esn` Starts With .e1,``:0xabc In Null})<-[usn2?:@usn5|_usn3*{_usn4:@usn5 Starts With $`3esn`,#usn7:$`5esn` Is Not Null}]-(#usn7 :``:usn2) Union Match `1esn`=((`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})-[?$7]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0})) Union Optional Match `4esn`=(`` {`8esn`:@usn5 Starts With $`3esn`,_usn4:`6esn` Is Null Is Null})<-[`7esn`:`2esn`|`4esn`{_usn4:.e1[7..][9e0..]}]-(usn2 :usn1:`3esn`{`3esn`:`2esn` Is Null})<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(:`5esn`{#usn8:$``[True],`1esn`:@usn5 Is Null}),(:`6esn`:_usn3{`6esn`:`2esn` Starts With $`7esn`}) Where `2esn` =~.e12 =~0X0123456789ABCDEF Merge `8esn`=((_usn3 :_usn4))"),
    octest:ct_string("Merge usn2=((`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})<-[ *..07{_usn3:0e0 =~7 =~12.0,usn2:123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]}]->(`4esn` :@usn5)) On Create Set [$``[True]].#usn8! =[0.0 Is Not Null,$`4esn`[`8esn`],$123456789[12e12..9e0]] =~.e12 On Create Set [`5esn` In `7esn`[$usn2..][$123456789..] Where `7esn` Is Null|$_usn4 =~$`1esn` =~`2esn`].`6esn` =Any(#usn7 In True Contains 's_str' Contains $usn1 Where `6esn` Starts With `6esn`) =~Single(#usn7 In $999 In 1e1 Where _usn4 Contains `` Contains 1.e1),@usn6+='s_str',Extract(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0 Ends With 12.0 Ends With `5esn`)._usn4! =Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|123.654 Is Not Null) Ends With usn2(01 Is Null) Ends With [$@usn6 Ends With 123456789 Ends With 12.0,12.e12 =~.0 =~usn1] Remove None(#usn7 In $999 In 1e1 Where _usn4 Is Not Null Is Not Null).`5esn` Unwind @usn6[123.654..][0x0..] As usn1 Union Return Distinct 01[$`7esn`..$@usn6] As `2esn`,(#usn7 {_usn4:1.e1[`8esn`]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) =~Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12) =~{usn2:#usn8[`8esn`..]} Skip Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 12.e12[0..0.12][123.654..9e12]) Is Not Null Is Not Null Return Distinct `2esn` Starts With 12.e12 Starts With 12.0 As _usn3 Order By None(#usn8 In `7esn` Where 9e1 Starts With Count ( * ))[..Any(usn2 In 7[12] Where 9e1 Is Not Null Is Not Null)] Desc,0xabc In .12 In 0Xa Descending,.0 Contains .e12 Contains 0 Desc Unwind 0x0[usn1..usn1] As `1esn` Union All Unwind 0Xa =~False =~@usn5 As `8esn`"),
    octest:ct_string("Optional Match (_usn3 :`4esn`:`6esn`{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3})<-[`2esn`? *01..123456789]-(`2esn` :@usn6)<-[?{`6esn`:$0[0Xa..$123456789],``:.e1[..\"d_str\"][..$123456789]}]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`}) Where $`7esn`[.e1][12.0] Union All Detach Delete `3esn` Starts With 9e0 Starts With usn1 Remove All(`6esn` In $`6esn`[``..][Count(*)..] Where 0X7['s_str'..][01..]).`2esn`!,(`3esn` {usn2:$usn2[`4esn`..9e12]})<-[`6esn`? *01234567..]->({`3esn`:`5esn` Contains `1esn` Contains usn1,`1esn`:999[@usn5..][Null..]})<-[_usn4?:@usn6|:`7esn`]->(_usn3 :`2esn`{@usn5:`4esn` Is Not Null Is Not Null}).`4esn` Merge ((@usn6 {`7esn`:999 In 0e0})<-[? *1000..0X0123456789ABCDEF{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}]-(`6esn` {`2esn`:$`3esn` Ends With 01234567})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)) On Create Set [`5esn` In `7esn`[$usn2..][$123456789..] Where `7esn` Is Null|$_usn4 =~$`1esn` =~`2esn`].`6esn` =Any(#usn7 In True Contains 's_str' Contains $usn1 Where `6esn` Starts With `6esn`) =~Single(#usn7 In $999 In 1e1 Where _usn4 Contains `` Contains 1.e1),@usn6+='s_str',Extract(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0 Ends With 12.0 Ends With `5esn`)._usn4! =Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|123.654 Is Not Null) Ends With usn2(01 Is Null) Ends With [$@usn6 Ends With 123456789 Ends With 12.0,12.e12 =~.0 =~usn1] On Create Set `6esn` ={`3esn`:12 Starts With #usn7 Starts With 0Xa} Is Null Is Null,usn1+=`4esn`[$_usn3..$`7esn`] Union All Return Distinct 12.e12 =~0X0123456789ABCDEF =~1.e1 As `6esn`,0.e0[..$7] As _usn3,usn1 Ends With 0.0 Skip usn2 =~$`` =~$`8esn` Limit (usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})-[? *0Xa{usn1:`3esn`[0x0..]}]->(:`5esn`{`1esn`:0.e0}) Is Not Null Is Not Null Delete 07[_usn3..][`6esn`..] Unwind 9e12 =~@usn6 As usn1"),
    octest:ct_string("With  *,010 Is Not Null Is Not Null As `1esn`,0 =~1.e1 =~$#usn7 Order By Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|0 Ends With 12.e12 Ends With usn2)[..123.654][..Any(#usn7 In $999 In 1e1 Where `4esn`[$_usn3..$`7esn`])] Ascending Skip $`5esn`[0X7..010][`7esn`..'s_str'] Where $#usn8[12.e12..`8esn`][12.0..0.0] Optional Match `2esn`=((`6esn` :#usn7:`5esn`)<-[?:#usn7|@usn5 *01234567..{`5esn`:$`4esn` In 1.e1 In #usn7}]->(:#usn8:`1esn`$`7esn`)),((_usn3 {#usn7:12.e12 Ends With `` Ends With 0,``:$@usn6 In @usn6 In 1e1})<-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(:`8esn`{``:$`1esn` =~999})) Union Return Distinct *,$`7esn`[0.12] Skip _usn4 Starts With 1000 Starts With $usn2"),
    octest:ct_string("Unwind $`1esn` In .e0 As #usn7 Union Optional Match @usn6=(#usn7 {_usn4:1.e1[`8esn`]})<-[usn2{`2esn`:$12 Starts With $usn1}]->(:`5esn`{`8esn`:$`7esn`[0.12],_usn4:`1esn`})-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->(@usn6 :`4esn`:`6esn`{``:999 Contains 0 Contains $`5esn`,`6esn`:_usn3[12.e12..][`5esn`..]}) Where `6esn`[$1000][`3esn`] Union All Match usn1=(((:`1esn`:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null})<-[ *7..{#usn7:$`8esn`[12.e12][_usn4],`2esn`:$0[123.654..0.e0]}]-(`` :#usn8:`1esn`{`8esn`:12[$`5esn`..][False..]})-[@usn6:`7esn`|:`2esn` *..07{`6esn`:$_usn4 Is Null Is Null,``:1e1 Ends With $`7esn` Ends With .0}]-(`5esn` :`3esn`{``:`` Is Null,`8esn`:$@usn6[$0..9e12][.e12..Null]}))),(`2esn` :`1esn`:_usn4)-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-({`6esn`:9e12 =~@usn6}) Create @usn5=(:`6esn`:_usn3{`6esn`:`2esn` Starts With $`7esn`})<-[:`2esn`|`4esn` *12..]->({`7esn`:`4esn` Is Not Null Is Not Null,`4esn`:`4esn` Ends With 12 Ends With .12})<-[?:#usn8|:`3esn`{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]-(:usn1:`3esn`{_usn4:$#usn7 Contains $`7esn` Contains .e12}) Merge ((@usn5 :`4esn`:`6esn`)<-[`3esn` *7..]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]})) On Create Set `2esn`+=0X0123456789ABCDEF In .12,`1esn` =$`7esn` In False In $`1esn`"),
    octest:ct_string("Merge ((@usn6 :_usn4{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]})<-[_usn4? *12..{`1esn`:$`6esn` Starts With .e12 Starts With $`1esn`,`3esn`:`8esn`[0.e0..]}]->(_usn4 )-[#usn7?:`7esn`|:`2esn` *01234567..{@usn5:0xabc =~$@usn5,usn1:0Xa[$`8esn`..][$_usn4..]}]->(#usn8 :usn1:`3esn`{`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})) On Create Set #usn7 =[$`3esn` Ends With 01234567][..{`3esn`:`6esn` Starts With `6esn`}][...e1],@usn6+=0.12[$0..$usn2] On Create Set `4esn` =(usn2 :_usn3)-[`6esn`?:`6esn`|:#usn8]-(`1esn` {_usn4:`8esn` Is Null})<-[`7esn`?:#usn8|:`3esn`]-(_usn4 :`3esn`)[Any(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null)..],usn1 =(`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})-[_usn3?:_usn4 *00..0Xa{_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})-[`4esn`:`1esn`|`3esn` *12..]->(usn2 :`1esn`:_usn4{usn2:999 Contains $1000}) Contains Filter(usn2 In False[$usn1][0x0] Where $`6esn`[``..][Count(*)..]) Detach Delete `7esn` Ends With $7 Ends With $@usn5,0X0123456789ABCDEF Is Not Null Is Not Null,All(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 1e1 Contains 0.e0 Contains 9e1)[None(@usn6 In 010[`5esn`] Where 00[1.e1..])..[$12[$usn1..][Count(*)..],$@usn5 Contains 's_str' Contains \"d_str\"]][Extract(`3esn` In 9e1 Contains $999 Where 0e0 Starts With 999 Starts With `2esn`|9e1 Ends With Count(*) Ends With $7).._usn4(`1esn`[0.12..][@usn6..],#usn8 =~0.e0)] Detach Delete @usn6 Is Not Null Is Not Null,01 Contains usn2 Contains 0X0123456789ABCDEF,None(#usn7 In $999 In 1e1 Where 1000[12e12][`5esn`])[Any(`3esn` In `2esn`[..01][..True] Where $`3esn`[..0xabc][..$7])][$#usn7]"),
    octest:ct_string("Return usn2 =~$`` =~$`8esn` As `2esn`,'s_str'[0x0..1.e1] As `6esn`,$`5esn`[\"d_str\"..] As `5esn` Limit 01[07..][1.e1..] With Distinct $_usn3[$12] As #usn8,_usn4(Distinct usn2[07..][.0..]) Ends With Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 12[$`5esn`..][False..]|$`2esn` Starts With `4esn` Starts With $usn1) Ends With Extract(@usn5 In 9e0 Ends With $#usn8 Where $`3esn` In $usn2) As #usn7 Skip Single(#usn7 In $999 In 1e1 Where 07 In `6esn`) Is Null Is Null Limit .0 Contains .e12 Contains 0 Remove Extract(#usn7 In True Contains 's_str' Contains $usn1).#usn8!,#usn7().#usn7 Union Create ((`4esn` :`4esn`:`6esn`)-[`3esn`:`2esn`|`4esn`]-({#usn8:False Starts With 0X7 Starts With 01234567})<-[#usn7?:`5esn`|:usn2{`7esn`:123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]}]-(`` {``:$@usn6 Ends With 12.e12 Ends With @usn5,`2esn`:$`3esn` Ends With 01234567})),#usn8=(:`7esn`{_usn3:@usn5[0.0..0X7]}) Optional Match (_usn3 :`4esn`:`6esn`{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3})<-[`2esn`? *01..123456789]-(`2esn` :@usn6)<-[?{`6esn`:$0[0Xa..$123456789],``:.e1[..\"d_str\"][..$123456789]}]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`}) Return *,$`5esn` Is Not Null,usn2 Contains $0 Contains .0 Order By 0.e0[$`4esn`..`2esn`] Descending,$123456789[12e12..9e0] Asc,$_usn3[_usn4..] Asc Skip $`7esn`[$_usn4][.e0] Limit Any(@usn5 In 9e0 Ends With $#usn8 Where 12.e12 =~0X0123456789ABCDEF =~1.e1)[(`5esn` :#usn8:`1esn`{_usn3:`6esn` Is Null Is Null})<-[?{@usn6:$0[0Xa..$123456789],`4esn`:`7esn` Contains 9e0}]->({_usn3:0X0123456789ABCDEF Contains 12e12 Contains 12.e12})-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})..][Filter(#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`])..] Union All Remove {`5esn`:1.e1[`8esn`],`1esn`:.e0}.`1esn`,{`6esn`:12.e12 Is Not Null Is Not Null,`1esn`:#usn7[0.12..]}.`3esn`?,`6esn`(`1esn`[`3esn`..],01[..01234567][..$_usn3]).`1esn`? Unwind None(#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[`8esn`]) Ends With [_usn4 In 12e12 In 123456789 Where 1.e1 =~$_usn4|0x0[0X7]] As usn1 Remove [_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $`8esn`[123456789..][$@usn5..]|#usn8 Is Not Null Is Not Null].#usn7"),
    octest:ct_string("With  *,12[``...e12] As _usn4,0X0123456789ABCDEF In $7 Order By 123.654 Starts With usn2 Starts With Count ( * ) Descending,01234567[Null..$_usn3] Asc Skip #usn8 Is Not Null Limit 9e12[_usn4..$`5esn`][_usn4...e1] Where 00[False..0e0]"),
    octest:ct_string("Merge (((_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]->(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]})-[?:`8esn`*]-(`7esn` :usn2{`3esn`:12.0 In 123.654 In _usn4}))) Union All With Distinct 07[$_usn4][usn2] Order By `4esn` In 010 Asc,Single(#usn7 In 9e1[$`1esn`..] Where usn2 Is Not Null)[[07[_usn3..][`6esn`..],999[123.654..$usn2][Count ( * )..0x0]]..][Single(usn2 In 7[12] Where $@usn5[..0xabc][..$`3esn`])..] Descending Skip `` Is Not Null Is Not Null Where 9e12 Starts With 1e1"),
    octest:ct_string("Merge `7esn`=(((`7esn` {usn2:0X7[..$`8esn`],`1esn`:123.654 Is Not Null})<-[ *12..{`8esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}]-(`5esn` :`1esn`:_usn4)-[:`6esn`|:#usn8{``:`1esn` Starts With 0xabc Starts With $usn2}]-(_usn3 :`2esn`{@usn5:`4esn` Is Not Null Is Not Null}))) On Create Set Single(`5esn` In 0X7 In $#usn7 Where 123456789 =~$999).`5esn` =0[01234567..][0X0123456789ABCDEF..],All(`6esn` In $`6esn`[``..][Count(*)..]).`6esn` =1.e1 Starts With 9e12 With Distinct 0.0[$usn2..] As ``,1e1[_usn3] As `3esn`,(:`6esn`:_usn3{@usn6:7 =~`4esn`,_usn3:`6esn`[$1000][`3esn`]})-[_usn4:_usn4 *0X7..{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]}]-(:`6esn`:_usn3{`4esn`:#usn7 Contains $0 Contains $usn2})[[$`6esn`[1.e1][$_usn3]]][usn2(0xabc In Null)] Skip $`8esn`[999] Remove (:`1esn`:_usn4{`8esn`:#usn8 Is Null Is Null})<-[? *0X7..{``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]}]-(_usn3 :`4esn`:`6esn`{usn2:`4esn` Starts With 0e0,`3esn`:7[12]})-[`2esn`?:@usn6|:`7esn`]->(#usn8 :@usn5{_usn4:$#usn7 Contains $`7esn` Contains .e12}).`7esn`? Union Return 01234567 In 123456789 In 12 As usn1,Count ( * ) In 123456789 In $@usn5 As _usn3 Order By #usn7 In 0.e0 Desc Skip [$#usn7 Ends With 's_str' Ends With 0X7,12e12 Ends With 0.0 Ends With usn1][Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $`6esn`[``..][Count(*)..])..Extract(#usn7 In 9e0[$1000] Where @usn6 Contains .12 Contains $usn1|``[$`3esn`])][(#usn8 :`5esn`)<-[usn2?:`3esn` *00..0Xa]-(`2esn` {``:$0 =~9e1 =~$`2esn`,`8esn`:`5esn`[..123.654][...e12]})..{_usn3:_usn4 Is Null Is Null}] Union All Create (:`5esn`{`4esn`:$`5esn` =~$0 =~``,_usn3:$``[..$#usn7][..`6esn`]})<-[#usn8? *1000..0X0123456789ABCDEF{`7esn`:Count ( * )[$`5esn`..][$7..],`6esn`:`6esn` Ends With _usn4 Ends With False}]->(`8esn` :@usn5{`5esn`:_usn3 In $`8esn` In @usn6,_usn4:$@usn6 Ends With 12.e12 Ends With @usn5})-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]->(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]}),`6esn`=((`4esn` :_usn4)-[`5esn`?:_usn3|:`7esn`]->({@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]})<-[?:`5esn`|:usn2]->(usn2 :`5esn`)) With Distinct $#usn8 Ends With `` Ends With 999 As `5esn`,Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 12.e12[0..0.12][123.654..9e12]) Is Not Null Is Not Null As _usn3 Order By _usn4(Distinct $@usn6[$`8esn`..][123456789..],$`` Starts With $1000 Starts With @usn6)[[#usn7 In True Contains 's_str' Contains $usn1 Where $usn2 =~1.e1 =~usn1]..][All(#usn7 In True Contains 's_str' Contains $usn1 Where $`2esn` Contains Count(*))..] Desc,{#usn8:0.0 =~9e0 =~$0,`5esn`:Count ( * ) Ends With $123456789} Is Not Null Desc,9e0 Ends With $#usn8 Desc Limit 12.0 Starts With $`2esn` Starts With .e1 Where 9e1 Ends With Count(*) Ends With $7"),
    octest:ct_string("Merge ((:@usn6)) On Create Set {`3esn`:07[_usn3..][`6esn`..],@usn6:``[usn1][`5esn`]}.@usn6 =Count(*)[``..#usn8][`3esn`..0xabc] On Create Set #usn7+=`6esn`[$`8esn`][9e1] Detach Delete (usn2 :usn1:`3esn`{`3esn`:`2esn` Is Null})<-[:`8esn` *999..{@usn6:`7esn` Ends With $7 Ends With $@usn5,``:0e0 Starts With 999 Starts With `2esn`}]->(`6esn` :#usn7:`5esn`)<-[usn1:`1esn`|`3esn`]->(`1esn` {#usn8:$#usn7[..9e0][..123.654],`5esn`:9e12 Starts With 1e1}) =~(`7esn` {#usn7:$@usn6 Ends With `1esn`})<-[#usn8 *0x0..]->(_usn3 :usn2{#usn8:$`2esn` Is Null,_usn3:123.654 Is Not Null})-[? *0X0123456789ABCDEF..]-(usn2 :_usn3),{@usn5:`6esn`[$1000][`3esn`]}[All(`3esn` In `2esn`[..01][..True] Where 0Xa =~False =~@usn5)..] Union Return 0X7[`2esn`..] Order By 0[@usn5..$#usn7] Ascending Remove `8esn`:@usn5,Single(#usn7 In 9e0[$1000] Where $1000 Is Not Null).`5esn` Match (@usn6 :`4esn`:`6esn`)-[ *0..01{@usn6:$0[123.654..0.e0]}]->(usn1 :`1esn`:_usn4{_usn3:@usn6[999..$_usn3][0.12..$@usn5],`1esn`:9e12[..1e1][..'s_str']})<-[`2esn`?:`6esn`|:#usn8{`2esn`:12.e12 Contains 9e1,`5esn`:.e1 Starts With 12.e12 Starts With `2esn`}]-(_usn3 {_usn3:0.12 Starts With $`8esn` Starts With @usn5}),usn1=((:`6esn`:_usn3{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})-[`2esn`?:usn1|`4esn` *00..0Xa]->({usn2:_usn3[`2esn`..0X7][0.e0..$`3esn`]}))"),
    octest:ct_string("With  $usn1,`1esn` Contains $999 Contains 0.0 As @usn6,$`6esn`[0e0..][010..] Order By 12.0 =~@usn6 =~$`2esn` Ascending Skip 123.654 In $999 In _usn3 Union All Unwind (`1esn` :`3esn`{#usn7:12[..0e0][...e1]})<-[`6esn`:``]->({@usn6:$1000 Is Not Null})[(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})<-[?:`7esn`|:`2esn`]->(#usn8 :usn1:`3esn`{`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[ *01234567..]->(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})..Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|123.654 Is Not Null)][{`2esn`:$999 Ends With .e0}..[@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``|.e0 =~Null]] As `8esn` Return *,0Xa[Count(*)..],[#usn8 In `7esn` Where @usn5 Contains 9e0] Contains [$usn1 Ends With _usn4 Ends With `2esn`] Order By None(#usn8 In `7esn` Where 9e1 Starts With Count ( * ))[..Any(usn2 In 7[12] Where 9e1 Is Not Null Is Not Null)] Desc,0xabc In .12 In 0Xa Descending,.0 Contains .e12 Contains 0 Desc Skip All(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 1e1 Contains 0.e0 Contains 9e1)[None(@usn6 In 010[`5esn`] Where 00[1.e1..])..[$12[$usn1..][Count(*)..],$@usn5 Contains 's_str' Contains \"d_str\"]][Extract(`3esn` In 9e1 Contains $999 Where 0e0 Starts With 999 Starts With `2esn`|9e1 Ends With Count(*) Ends With $7).._usn4(`1esn`[0.12..][@usn6..],#usn8 =~0.e0)] Limit `1esn` Starts With 9e1 Merge `4esn`=(((:`6esn`:_usn3{`8esn`:.e12[..999][..@usn5],`3esn`:$_usn3 Is Null})<-[? *0X7..]->(`5esn` :``:usn2{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3})-[_usn4]->(:`6esn`:_usn3{_usn3:usn1 Is Null Is Null,#usn8:9e1[$``..][0.e0..]})))"),
    octest:ct_string("Remove None(_usn4 In 12e12 In 123456789 Where True Contains 's_str' Contains $usn1).``?,[@usn6 In False Contains 0 Contains $`6esn` Where `1esn` Starts With 0xabc Starts With $usn2].`1esn` Return Distinct `1esn`[0Xa] As usn1,$`` Contains $`2esn` Contains $usn2 Order By $usn1 Ends With _usn4 Ends With `2esn` Descending,$``[..$#usn7][..`6esn`] Asc Skip 07[999]"),
    octest:ct_string("Remove Any(@usn6 In False Contains 0 Contains $`6esn` Where $`5esn`[..00]).#usn7?,[#usn7 In True Contains 's_str' Contains $usn1 Where $@usn6 In @usn6 In 1e1]._usn3,Extract(#usn7 In True Contains 's_str' Contains $usn1 Where 9e1[$#usn8][$1000]|_usn3[`2esn`..0X7][0.e0..$`3esn`]).`7esn`? Remove {``:.e12 Ends With 0Xa Ends With 0xabc}.usn2? With Distinct 010 Starts With $`` Starts With 0e0,$#usn8 Ends With `` Ends With 999 As _usn3,$@usn5 Ends With @usn5 Ends With 0xabc Skip None(#usn7 In $999 In 1e1 Where 01234567[Null..$_usn3]) Ends With Extract(#usn8 In `7esn` Where $`5esn` Is Not Null Is Not Null) Limit `6esn` In .12 Where $``[7] Union Merge `7esn`=(:_usn4{_usn3:$#usn7[..0Xa],@usn5:12e12 In 123456789})"),
    octest:ct_string("Return Distinct None(#usn7 In $999 In 1e1 Where _usn3 Contains 9e12 Contains `8esn`)[..Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 0xabc In 123456789 In 0x0|Count(*)[..@usn6][..`7esn`])] As `3esn`,9e1[@usn5][$usn1] As `5esn`,`4esn` Starts With 0e0 As `7esn` Order By 1.e1 Contains `6esn` Contains 0.e0 Descending,07[..07][..0X7] Descending Limit Single(_usn4 In 12e12 In 123456789 Where 0e0 =~7 =~12.0) Starts With Extract(#usn7 In 9e0[$1000] Where 123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]|9e12 =~@usn6) With  .e1 In 0,Any(#usn7 In 9e1[$`1esn`..] Where #usn7[0])[[00[12..$`6esn`],$`4esn`['s_str'..]]..] Order By (:#usn7:`5esn`{usn1:.e1[..$`3esn`][..01],`4esn`:$`5esn` In .12})<-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]-(:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) Is Not Null Descending"),
    octest:ct_string("Detach Delete 12.0[0X0123456789ABCDEF..] Optional Match ((@usn6 {`7esn`:999 In 0e0})<-[? *1000..0X0123456789ABCDEF{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}]-(`6esn` {`2esn`:$`3esn` Ends With 01234567})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)),((usn2 :`6esn`:_usn3)-[?:#usn7|@usn5 *0X0123456789ABCDEF..{_usn3:@usn5 Is Not Null}]-(#usn8 {`5esn`:$12[$usn1..][Count(*)..],`7esn`:0e0[``..$1000][$7..12.e12]})) Union Match (`3esn` :``:usn2)<-[?:`4esn`|@usn5 *1000..0X0123456789ABCDEF{`8esn`:0x0[0.0],`8esn`:12.e12 Starts With \"d_str\" Starts With 9e1}]-(`` :`3esn`{`6esn`:Count(*)[9e12..12.0]})"),
    octest:ct_string("Merge ((usn2 :``:usn2)<-[usn1?:`1esn`|`3esn`{`7esn`:`6esn`,`4esn`:'s_str' Starts With 9e0 Starts With usn2}]->(:#usn8:`1esn`{_usn3:9e0[0X7..$`6esn`][123456789..0],`3esn`:123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]})<-[`1esn`?:usn1|`4esn` *00..0Xa]-(`6esn` )) On Create Set None(`8esn` In 123456789 =~@usn6 Where Count(*) Ends With usn1).`7esn`! =All(usn2 In 7[12] Where #usn8 Is Null Is Null)[[usn2 In 7[12] Where #usn7[.e0]]..]"),
    octest:ct_string("Return #usn7[`8esn`..usn1][$999..`7esn`] As _usn3,All(#usn7 In 9e1[$`1esn`..] Where 12 =~usn1)[Extract(#usn7 In $999 In 1e1)..][1.e1..],12e12 Starts With $0 Starts With $`2esn` Order By `6esn`(`4esn` Ends With 12 Ends With .12,@usn5 Is Not Null)[Extract(`3esn` In 9e1 Contains $999 Where .e12 Ends With 0Xa Ends With 0xabc|1e1 Is Not Null Is Not Null)..Filter(usn2 In 7[12] Where usn2[12.e12..])] Desc Limit $_usn4[$_usn4] Union All With  @usn6 Is Not Null Is Not Null,(@usn6 :`8esn`)<-[`4esn`?:`4esn`|@usn5 *01..123456789]-(:usn1:`3esn`{`8esn`:12 Starts With True Starts With 12e12,`8esn`:`2esn` Starts With $`7esn`}) Ends With #usn8(Distinct 12.e12 Contains #usn7 Contains $_usn4,01[`3esn`..][Count(*)..]) Ends With [`5esn`[..True][..0.e0],12 In $usn1 In 7,$`8esn`[123456789..][$@usn5..]] Skip [_usn3 In _usn3 Contains _usn4 Contains $@usn5] Contains [_usn4[$usn1..01234567][123.654..`5esn`]] Contains `4esn`(Distinct 07 In `6esn`) Limit {@usn6:$`3esn`[.e1][_usn4]}[`8esn`(Distinct $``[True])..] Union Remove [$@usn5 In 12e12 In 01,$_usn4[..$_usn4][..`7esn`]].`3esn`?,[$_usn4 =~$`1esn` =~`2esn`,#usn7[`8esn`..usn1][$999..`7esn`],$@usn5[..0xabc][..$`3esn`]].`8esn`!"),
    octest:ct_string("Remove All(@usn6 In False Contains 0 Contains $`6esn` Where $@usn5 In 12e12 In 01).usn2! Create (((:usn1:`3esn`{`8esn`:12 Starts With True Starts With 12e12,`8esn`:`2esn` Starts With $`7esn`})<-[`7esn`?:`2esn`|`4esn` *..010{usn1:0e0[``..$1000][$7..12.e12],`5esn`:0x0 Starts With $`6esn`}]->(@usn5 {_usn4:`5esn` Contains #usn7 Contains 9e12})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]}))) Union All Return Distinct *,`3esn`(#usn8 =~0.e0,1000[0e0][1e1])[[12[..0e0][...e1]]..Single(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $123456789 Contains $#usn8 Contains ``)] As #usn8 Order By Extract(`8esn` In 123456789 =~@usn6 Where .e12 Starts With $12 Starts With .e12) Ends With [#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4] Ends With [False[$`4esn`..],$#usn7[..0Xa]] Asc,@usn6[..$@usn5] Ascending Limit `1esn`[usn1][0xabc] Delete `1esn`(Distinct $`3esn`[..0X0123456789ABCDEF][..7],`4esn`[$_usn3..$`7esn`]) Is Null Return 0e0[``],0X7 In $#usn7 Order By Extract(#usn7 In 9e0[$1000] Where @usn6 Contains .12 Contains $usn1|``[$`3esn`])[(:`6esn`:_usn3$usn2)<-[ *0Xa{`3esn`:9e1 Ends With Count(*) Ends With $7}]-(`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[usn1?:`2esn`|`4esn`{#usn7:$#usn7[..9e0][..123.654],usn2:.e0 Is Not Null Is Not Null}]-(`8esn` :@usn6)..All(_usn3 In _usn3 Contains _usn4 Contains $@usn5)] Desc,`5esn`[$`7esn`..$@usn5] Ascending"),
    octest:ct_string("Return Distinct 0.e0 Is Not Null Is Not Null As _usn4,0X0123456789ABCDEF In $usn2 In `4esn`,$usn1 Is Not Null Is Not Null Order By Count(*) Starts With usn2 Starts With `7esn` Desc"),
    octest:ct_string("Create ((:`3esn`{`1esn`:`7esn`,`8esn`:12e12 =~$`7esn`})-[ *7..{usn1:0x0[0X7],@usn5:`4esn`[.12][$@usn6]}]->(`7esn` {#usn8:False Starts With 0X7 Starts With 01234567})<-[?:usn1|`4esn` *1000..0X0123456789ABCDEF{`6esn`:.e0[999..1000][1e1..$`8esn`],`4esn`:00 Ends With `` Ends With 12.e12}]-({`1esn`:usn2 Contains $0 Contains .0,_usn4:$@usn6[.0..][0e0..]})),(`5esn` {`2esn`:`1esn`[0.0..1e1][0x0..7],#usn8:.e0}) Union With  *,{`5esn`:`6esn`[$`8esn`][9e1]} Is Not Null Is Not Null Order By [0.12 Contains False Contains 1.e1,$12[$usn1..][Count(*)..]][{usn2:$@usn6 Ends With `1esn`,_usn3:`7esn`}..][{@usn6:1e1 Is Not Null Is Not Null,`8esn`:$`1esn` Starts With $`4esn` Starts With $_usn3}..] Desc,0.0[usn1..] Desc Delete 0X0123456789ABCDEF[0X7..$`2esn`][$`5esn`..$usn2],$`3esn` Ends With 1000,[$`5esn` =~usn1,True[`3esn`],@usn6[9e12]][Single(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null)..]"),
    octest:ct_string("Unwind $`4esn`[..$`8esn`][..Null] As `7esn`"),
    octest:ct_string("Delete ``[$`1esn`],All(#usn7 In $999 In 1e1 Where 1.e1 In 1000 In _usn3) Contains (`6esn` :`8esn`{@usn6:12.e12 Contains #usn7 Contains $_usn4})-[`8esn`{`7esn`:9e12 Starts With 1e1}]-(_usn3 :_usn4) Contains [`8esn` Is Not Null Is Not Null,12 Starts With #usn7 Starts With 0Xa,.0 Starts With `1esn`] With Distinct usn2 =~$`` =~$`8esn` As `2esn`,'s_str'[0x0..1.e1] As `6esn`,$`5esn`[\"d_str\"..] As `5esn` Order By 1.e1 Contains `6esn` Contains 0.e0 Descending,07[..07][..0X7] Descending Skip usn1[False..] Limit `6esn`[$1000][`3esn`] Where 0x0[0X7] Union Create (_usn3 :`4esn`:`6esn`)-[?:@usn6|:`7esn`]-(:#usn8:`1esn`)-[_usn3?]-(`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]}) Remove (_usn4 {`7esn`:#usn7[0.e0..]['s_str'..]})-[usn2{``:$`1esn` =~999}]-(:usn1:`3esn`{``:$#usn7 In $@usn5 In $`1esn`,#usn7:999[@usn5..][Null..]}).`2esn` Union Create `2esn`=(_usn3 {`8esn`:0e0 =~7 =~12.0,_usn4:.e1[..$`3esn`][..01]})<-[_usn4{`2esn`:#usn8[`8esn`..],`2esn`:@usn6[9e12]}]-(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-(`2esn` :@usn5{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3}),(({@usn6:`7esn` Ends With $7 Ends With $@usn5,``:0e0 Starts With 999 Starts With `2esn`})<-[usn2?:`5esn`|:usn2{`2esn`:`7esn`[$usn2..][$123456789..],@usn5:9e1 Starts With Count ( * )}]->({usn2:$`2esn` Is Null,#usn8:.0 Is Null Is Null}))"),
    octest:ct_string("Optional Match #usn8=((`` :`3esn`{`6esn`:Count(*)[9e12..12.0]})<-[`6esn`? *00..0Xa]->(#usn7 :#usn8:`1esn`{``:.0[$``..0X7]})-[usn2?{``:$`1esn`[``][07]}]-(`3esn` :`6esn`:_usn3{`4esn`:12.0 Starts With .12 Starts With `6esn`,#usn8:0.0 Is Null Is Null})) Merge ((($#usn8)<-[`8esn`{`1esn`:123456789 =~@usn6,`1esn`:$`5esn`[0X7..010][`7esn`..'s_str']}]-(`4esn` :#usn8:`1esn`{`7esn`:.0[..'s_str'][..01234567],@usn6:False[..$`5esn`][..1e1]})<-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->(usn2 :`5esn`))) Merge (`5esn` :`4esn`:`6esn`)<-[`5esn`?:`8esn`]->({``:12 Starts With #usn7 Starts With 0Xa,`8esn`:``[usn1][`5esn`]}) On Create Set `4esn` =(usn2 :_usn3)-[`6esn`?:`6esn`|:#usn8]-(`1esn` {_usn4:`8esn` Is Null})<-[`7esn`?:#usn8|:`3esn`]-(_usn4 :`3esn`)[Any(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null)..],usn1 =(`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})-[_usn3?:_usn4 *00..0Xa{_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})-[`4esn`:`1esn`|`3esn` *12..]->(usn2 :`1esn`:_usn4{usn2:999 Contains $1000}) Contains Filter(usn2 In False[$usn1][0x0] Where $`6esn`[``..][Count(*)..]) Union Optional Match (`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`})-[@usn6:`5esn`|:usn2 *0xabc{#usn8:999 In 0e0}]-({`1esn`:#usn7[0]}),((:`4esn`:`6esn`{`2esn`:12e12 =~1e1,``:12.e12 Contains #usn7 Contains $_usn4})) Delete {#usn8:.0 Is Null Is Null}[..(_usn3 :@usn6{usn2:0Xa =~False =~@usn5,`3esn`:0x0[Count(*)..@usn6][Count(*)..0Xa]})<-[`7esn`?:`2esn`|`4esn` *..010{usn1:0e0[``..$1000][$7..12.e12],`5esn`:0x0 Starts With $`6esn`}]->(@usn5 {_usn4:`5esn` Contains #usn7 Contains 9e12})][..{`5esn`:@usn6[9e12],`5esn`:@usn6[999..$_usn3][0.12..$@usn5]}],Count(*) Is Not Null Is Not Null"),
    octest:ct_string("Match _usn3=((@usn5 {usn2:.12[0X7..][12e12..],`6esn`:$`4esn`[`6esn`..$12]})-[@usn6:`5esn`|:usn2 *0xabc{#usn8:999 In 0e0}]-(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})-[#usn7 *01..123456789]->(usn1 {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})),``=((:`5esn`{`8esn`:$`7esn`[0.12],_usn4:`1esn`})-[`5esn`:#usn7|@usn5]-({@usn6:123.654 In 12,#usn7:12.e12 Ends With `` Ends With 0})-[`1esn`?:@usn6|:`7esn` *..010]-(:`6esn`:_usn3{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})) Where 0x0[Count(*)..@usn6][Count(*)..0Xa] Remove Any(#usn7 In $#usn7 Contains $`7esn` Contains .e12).`5esn`?,_usn3(0[$`5esn`],`2esn`[..$_usn4][...12]).`2esn`?,(usn1 :@usn6)<-[:`8esn` *0X7..]->(`2esn` :`6esn`:_usn3{usn2:0e0 =~0Xa =~$999,`4esn`:@usn6[9e12]})<-[?{`5esn`:123.654[$0..0X7][Null..#usn8],`3esn`:12.e12[0..0.12][123.654..9e12]}]-(usn2 :`7esn`).#usn8 Create _usn3=(((:usn2{`6esn`:`4esn` Starts With 0e0,`8esn`:usn2[12e12..]['s_str'..]})<-[:`2esn`|`4esn` *12..]-(_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]})))"),
    octest:ct_string("Return Distinct *,`4esn` Ends With 12 Ends With .12 As usn2 Skip `2esn`($`2esn`[..$`3esn`][..12e12])[usn1($0[123.654..0.e0])..'s_str'][.e12..Single(#usn7 In $999 In 1e1 Where _usn4 Is Not Null Is Not Null)] Limit Single(`5esn` In `7esn`[$usn2..][$123456789..] Where 999 In #usn8 In $``) In Extract(#usn7 In 9e1[$`1esn`..] Where 00 Contains Count ( * ) Contains 0x0|$`5esn` =~usn1) Detach Delete Extract(#usn8 In `7esn` Where ``[7.._usn3]|@usn5 Is Null) Is Not Null Is Not Null,010 Starts With $`` Starts With 0e0 Union Create #usn8=({#usn7:12e12 In $`5esn`}) Return *,Single(`5esn` In `7esn`[$usn2..][$123456789..] Where 12e12 Is Not Null) Is Not Null Is Not Null As usn1,00 Contains Count ( * ) Contains 0x0 As `5esn` Limit .e0 Unwind $`5esn` =~$`8esn` =~usn2 As `1esn` Union Match (`8esn` {usn1:0e0 =~7 =~12.0,`7esn`:usn2 Starts With .0})<-[:_usn4]->(_usn4 {usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})<-[ *01234567..]->(:``:usn2{`5esn`:$12 Starts With $usn1}),(@usn5 :`1esn`:_usn4)-[? *0xabc]-(`6esn` {`3esn`:.0[$``..0X7],`3esn`:$usn2 Is Not Null Is Not Null})-[? *01..123456789]-(_usn3 :`6esn`:_usn3) Where $0 =~9e1 =~$`2esn`"),
    octest:ct_string("Optional Match ((@usn5 {`4esn`:1000[12e12][`5esn`],`1esn`:07 Ends With 9e12 Ends With `2esn`})<-[?:`3esn`*..]-(usn2 :`1esn`:_usn4{usn2:999 Contains $1000})) Remove Any(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0 Ends With 12.0 Ends With `5esn`).`1esn`,Single(`3esn` In `2esn`[..01][..True]).``,{usn1:'s_str'[0..]}._usn3? With  *,00[12..$`6esn`] As _usn4,Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|0 Ends With 12.e12 Ends With usn2)[..123.654][..Any(#usn7 In $999 In 1e1 Where `4esn`[$_usn3..$`7esn`])] As `3esn` Skip `8esn` Contains `2esn` Contains .0 Limit Null[.12..12e12] Where 9e12 Starts With 1e1 Union All Match ((`4esn` :`4esn`:`6esn`)-[`3esn`:`2esn`|`4esn`]-({#usn8:False Starts With 0X7 Starts With 01234567})<-[#usn7?:`5esn`|:usn2{`7esn`:123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]}]-(`` {``:$@usn6 Ends With 12.e12 Ends With @usn5,`2esn`:$`3esn` Ends With 01234567})),#usn8=(:`7esn`{_usn3:@usn5[0.0..0X7]}) Where usn2 Contains $0 Contains .0 Merge ((`5esn` :@usn5{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})) On Match Set `` =Null[..010][..1000] On Create Set #usn8 ={_usn4:``[9e12][$999],#usn8:123.654 In 12} Starts With Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0[0.0]) Starts With Filter(`6esn` In $`6esn`[``..][Count(*)..])"),
    octest:ct_string("Match `5esn`=(`3esn` :_usn4) Remove [$123456789 Starts With 0.12 Starts With Null].`4esn`!,(:@usn6{usn2:$123456789 Contains $#usn8 Contains ``,_usn3:`3esn`[..0X0123456789ABCDEF][..0x0]})<-[`7esn`?:usn1|`4esn`]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})<-[:_usn4]->(:usn2{@usn5:07 Ends With 9e12 Ends With `2esn`}).#usn8 Union Return Distinct *,0x0[12e12..$`7esn`],.e1 In 0 Limit {`1esn`:$`2esn` Contains Count(*)}[[$`4esn`[0..][999..],@usn5 Contains #usn8 Contains 12.0]..[@usn6 In 010[`5esn`] Where 0e0[``..$1000][$7..12.e12]|@usn6[`1esn`..]]]"),
    octest:ct_string("Create (#usn7 :`4esn`:`6esn`{`1esn`:`1esn`[$@usn6][07]}),`8esn`=((`4esn` :_usn4)-[`5esn`?:_usn3|:`7esn`]->({@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]})<-[?:`5esn`|:usn2]->(usn2 :`5esn`)) Unwind 999 Contains 0 Contains $`5esn` As @usn5"),
    octest:ct_string("Create `3esn`=((:_usn3{_usn3:$`3esn`[.e1][_usn4]})-[`4esn`?:#usn8|:`3esn`{`3esn`:01 Is Null,`1esn`:123456789[12]}]-(:`5esn`)<-[ *01234567..]->(#usn8 :`8esn`)) Return `3esn`[...e1] Skip 0 Is Not Null Return Distinct *,$999[0Xa..][9e1..] As `4esn` Skip $usn2 Ends With $123456789 Limit @usn6 Contains .12 Contains $usn1"),
    octest:ct_string("With Distinct *,`2esn` In 9e0 In 7,$7 Starts With $`4esn` As _usn4 Skip Extract(#usn7 In True Contains 's_str' Contains $usn1 Where usn2 Contains $0 Contains .0) Ends With `2esn`(Distinct 123.654[`4esn`..12],_usn3[`2esn`..0X7][0.e0..$`3esn`]) Ends With [`5esn` In 0X7 In $#usn7 Where 12e12 =~1e1|0e0 =~0Xa =~$999] Where 9e0[$1000] Unwind [_usn4 In 12e12 In 123456789 Where `3esn`[0X0123456789ABCDEF..][07..]] Contains Extract(`5esn` In 0X7 In $#usn7|0[1e1][$usn1]) Contains None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07 Is Not Null Is Not Null) As `7esn` Return 999[12e12..$_usn4] Order By Count(*) In #usn8 In \"d_str\" Ascending,[#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[..$`8esn`][..Null]|$@usn5[..0xabc][..$`3esn`]] Contains (`8esn` )<-[`2esn`:`4esn`|@usn5 *01234567..]-(`5esn` :`3esn`)<-[#usn8?:`8esn`{`1esn`:999 In #usn8 In $``,`8esn`:False[$`4esn`..]}]->(`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]}) Contains Any(`5esn` In 0X7 In $#usn7 Where 01 Is Null) Descending,9e12 =~@usn6 Desc Skip [#usn7 In 9e0[$1000] Where `6esn`[$1000][`3esn`]][Extract(#usn7 In $999 In 1e1 Where 9e12 Starts With 1e1|010 Starts With $`` Starts With 0e0)..] Union Unwind 1000[..$1000] As `` Return Distinct @usn5[01][@usn5],9e0 Contains $12 Contains `3esn` As #usn8,{`4esn`:0.0[usn1..],`7esn`:12.0[$1000..][#usn7..]}[Any(`6esn` In $`6esn`[``..][Count(*)..] Where $#usn7 Ends With 's_str' Ends With 0X7)..[usn1[..$@usn6][..00],0x0[0X7],$`8esn`[123456789..][$@usn5..]]][[12.e12[..$`6esn`],999 In #usn8 In $``]..Extract(#usn7 In 9e1[$`1esn`..] Where 00 Contains Count ( * ) Contains 0x0|$`5esn` =~usn1)] Order By Null Ends With _usn4 Ends With 0.0 Asc Skip (`1esn` $`4esn`)-[@usn6?:`7esn`|:`2esn`]-({@usn6:#usn7[`8esn`..usn1][$999..`7esn`]}) =~Filter(`3esn` In 9e1 Contains $999 Where 12.0 Is Null Is Null) =~[0xabc In Null] With Distinct usn2 =~$`` =~$`8esn` As `2esn`,'s_str'[0x0..1.e1] As `6esn`,$`5esn`[\"d_str\"..] As `5esn` Order By 1.e1 Contains `6esn` Contains 0.e0 Descending,07[..07][..0X7] Descending Skip usn1[False..] Limit `6esn`[$1000][`3esn`] Where 0x0[0X7] Union Return *,1e1 Is Not Null Is Not Null"),
    octest:ct_string("Return *,00[12..$`6esn`] As _usn4,Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|0 Ends With 12.e12 Ends With usn2)[..123.654][..Any(#usn7 In $999 In 1e1 Where `4esn`[$_usn3..$`7esn`])] As `3esn` Skip `8esn` Contains `2esn` Contains .0 Limit Null[.12..12e12] Return Distinct *,`` =~.12 As #usn7 Order By Extract(`8esn` In 123456789 =~@usn6 Where .e12 Starts With $12 Starts With .e12) Ends With [#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4] Ends With [False[$`4esn`..],$#usn7[..0Xa]] Asc,@usn6[..$@usn5] Ascending Skip \"d_str\" Is Null Is Null Limit `1esn`(Distinct $`3esn`[..0X0123456789ABCDEF][..7],`4esn`[$_usn3..$`7esn`]) Is Null Optional Match usn2=(`6esn` {`2esn`:$`3esn` Ends With 01234567}) Where usn1 Contains 010 Union Unwind $@usn6[_usn3..][$999..] As `4esn` Optional Match `8esn`=(:`4esn`:`6esn`{usn2:$`8esn` Is Not Null Is Not Null})<-[@usn5? *0..01{`3esn`:$`1esn` In .e0,@usn6:12.0 =~@usn6 =~$`2esn`}]->({usn2:.0 Starts With `1esn`,`2esn`:00 Contains Count ( * ) Contains 0x0})-[? *0Xa{usn1:`3esn`[0x0..]}]->(:`5esn`{`1esn`:0.e0}) Where $999 Ends With .e0"),
    octest:ct_string("Merge ((:`3esn`{@usn5:$`5esn` In _usn3 In 0.0})-[:`1esn`|`3esn` *0Xa{_usn4:``[9e12][$999],#usn8:123.654 In 12}]->(:@usn5{#usn7:12e12 In $`5esn`})-[@usn5 *0X7..]->(`` $`6esn`)) On Match Set [`5esn` In `7esn`[$usn2..][$123456789..] Where `7esn` Is Null|$_usn4 =~$`1esn` =~`2esn`].`6esn` =Any(#usn7 In True Contains 's_str' Contains $usn1 Where `6esn` Starts With `6esn`) =~Single(#usn7 In $999 In 1e1 Where _usn4 Contains `` Contains 1.e1),@usn6+='s_str',Extract(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0 Ends With 12.0 Ends With `5esn`)._usn4! =Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|123.654 Is Not Null) Ends With usn2(01 Is Null) Ends With [$@usn6 Ends With 123456789 Ends With 12.0,12.e12 =~.0 =~usn1] With  *,All(#usn7 In $999 In 1e1 Where 1.e1 In 1000 In _usn3) Contains (`6esn` :`8esn`{@usn6:12.e12 Contains #usn7 Contains $_usn4})-[`8esn`{`7esn`:9e12 Starts With 1e1}]-(_usn3 :_usn4) Contains [`8esn` Is Not Null Is Not Null,12 Starts With #usn7 Starts With 0Xa,.0 Starts With `1esn`] As `8esn` Order By All(`5esn` In `7esn`[$usn2..][$123456789..] Where _usn4 Is Not Null) Descending,0xabc In .12 In 0Xa Desc Detach Delete 0.12 Contains False Contains 1.e1 Union Return 0.e0 Starts With .0 Starts With 123456789,$7[01..$123456789][#usn7..12.0],(#usn7 {_usn4:1.e1[`8esn`]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) Contains Extract(#usn7 In 9e0[$1000] Where _usn4 Is Not Null Is Not Null|usn2 Ends With .e1 Ends With $`5esn`) As `` Order By True Ends With $_usn3 Ends With 12 Desc,$`6esn` Starts With .e12 Starts With $`1esn` Ascending,{_usn3:usn1 Is Null Is Null,#usn8:9e1[$``..][0.e0..]} Contains ({`7esn`:`8esn` Contains Count(*) Contains $#usn7})<-[_usn3:`3esn`{`5esn`:_usn4[0]}]->(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})-[#usn7?{`5esn`:.e12 Starts With $#usn8 Starts With False}]->({`1esn`:0X7 In $#usn7,_usn3:usn1 Contains 010}) Contains None(#usn8 In `7esn`) Descending Detach Delete Extract(`6esn` In $`6esn`[``..][Count(*)..] Where $@usn5 Starts With `5esn` Starts With 01234567|0.e0[..$7]) Is Null Is Null Merge `7esn`=((:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})<-[`2esn`? *..07{`2esn`:`3esn`[0x0..]}]->(`5esn` )) On Create Set `5esn`+=_usn4[$usn1..01234567][123.654..`5esn`],`2esn`+=#usn7 In 0.e0 On Match Set Extract(@usn5 In 's_str'[0..] Where `5esn`[..123.654][...e12]|$``[..\"d_str\"][..$#usn8]).@usn6 =[$usn1[`2esn`..][$`2esn`..]][(`3esn` :usn2)-[`4esn`?:usn1|`4esn`{`3esn`:123.654[..0.e0][..'s_str'],@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]}]-({`6esn`:9e1 Is Not Null Is Not Null,`8esn`:_usn3 In $`8esn` In @usn6})..`2esn`(Distinct $@usn6 Is Not Null Is Not Null,Count ( * ) Ends With $123456789)],None(#usn8 In `7esn` Where ``[7.._usn3]).@usn6? =`6esn`,Any(#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`])._usn4! =`` Is Null Union Merge #usn7=(`1esn` :@usn6{`6esn`:00[False..0e0],`6esn`:$usn2 =~1.e1 =~usn1})<-[`7esn`:`2esn`|`4esn`{_usn4:.e1[7..][9e0..]}]-(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"})-[:_usn3|:`7esn`*{`1esn`:12[..$999][..$`2esn`],usn2:9e1}]->(:``:usn2{`5esn`:$12 Starts With $usn1}) On Match Set _usn3:`7esn` On Create Set Single(@usn6 In 010[`5esn`] Where 123.654).`6esn`? =0.e0[0X0123456789ABCDEF..],(:`4esn`:`6esn`{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7})<-[usn2?:@usn5|_usn3*{_usn4:@usn5 Starts With $`3esn`,#usn7:$`5esn` Is Not Null}]-(#usn7 :``:usn2)-[:_usn3|:`7esn` *1000..0X0123456789ABCDEF]->(:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]}).`3esn`? =999[..`1esn`][..07],[@usn6 In 010[`5esn`] Where @usn6 Contains .12 Contains $usn1].`6esn` =`7esn` Starts With @usn5 Merge ((_usn3 :usn2)) On Match Set Any(#usn8 In `7esn` Where $`5esn` In _usn3 In 0.0).`5esn`! =.e12 Ends With 0Xa Ends With 0xabc On Match Set `5esn`(Distinct .12[123.654..]).`3esn` =01234567 In 123456789 In 12,`6esn` =[@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str']|$`3esn`[..0xabc][..$7]] Is Null Return 0.e0 =~00 As `3esn`,(`2esn` {`7esn`:999 In 0e0})<-[`8esn`?:`2esn`|`4esn` *01..123456789{`8esn`:$`4esn` Is Null Is Null,usn1:$1000 Starts With $`3esn` Starts With 0.e0}]->(:#usn7:`5esn`{_usn3:0x0[Count(*)..@usn6][Count(*)..0Xa]})<-[ *0X7..{#usn8:.e0 Contains $#usn8}]->(`2esn` :`6esn`:_usn3) In (`8esn` :`6esn`:_usn3)-[`2esn`? *..07{`2esn`:`3esn`[0x0..]}]->(_usn4 {_usn4:123.654 In 12})-[?:#usn8|:`3esn` *0x0..]-(_usn3 :`4esn`:`6esn`{usn2:`4esn` Starts With 0e0,`3esn`:7[12]}) In {_usn4:.e0 Contains $#usn8,@usn6:1000[12e12][`5esn`]} As ``,#usn8[`6esn`..][$``..] As `2esn`"),
    octest:ct_string("With Distinct *,$#usn7[..0Xa] As #usn8,0X7[`2esn`..] As `5esn` Order By $7[999][usn1] Asc Union All Merge (:`6esn`:_usn3{`6esn`:`2esn` Starts With $`7esn`}) On Match Set [12e12 =~1e1,0X7[..$`8esn`]].`7esn` =1e1 Ends With $`2esn`,`8esn`+=01[$`7esn`..$@usn6] On Create Set usn1+=Extract(@usn5 In 's_str'[0..] Where 12 In $usn1 In 7) =~All(`3esn` In `2esn`[..01][..True] Where $`7esn`[.e1][12.0]),@usn6+=[$`5esn` =~usn1,True[`3esn`],@usn6[9e12]][None(#usn7 In 9e1[$`1esn`..] Where 1.e1[12.e12..])..] Match (((`2esn` :`1esn`:_usn4)<-[`5esn`?{`8esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}]->(`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})<-[`4esn`:usn2]->(:`6esn`:_usn3{`2esn`:999[123.654..$usn2][Count ( * )..0x0]}))) Where .0 Is Null Is Null Union All Unwind 07[False] As @usn5 Remove {_usn4:$``[True],`3esn`:$#usn8[@usn6..]}.@usn5!,[$@usn6[00],$@usn5 In $`6esn` In 12e12].`6esn`?,Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where _usn4 Is Not Null Is Not Null|1.e1 =~.12).usn2! Return Distinct 12 Starts With True Starts With 12e12 As _usn4 Order By None(`8esn` In 123456789 =~@usn6 Where True[`3esn`]) Is Not Null Is Not Null Desc"),
    octest:ct_string("Unwind `8esn`[0.e0..] As #usn7"),
    octest:ct_string("With Distinct $`1esn`[Null][True] As usn2,{`6esn`:$#usn7 =~`2esn`,`4esn`:True[$_usn3..]}[(:`1esn`:_usn4{#usn8:00[12..$`6esn`],@usn6:usn1[..$@usn6][..00]})-[`2esn`:`4esn`|@usn5 *01234567..]-(:`5esn`{_usn4:12 Starts With #usn7 Starts With 0Xa,#usn7:999 Is Null Is Null})-[`3esn`:`2esn`|`4esn`]-({#usn8:False Starts With 0X7 Starts With 01234567})..Filter(@usn6 In 010[`5esn`] Where `7esn`[1e1])][Any(@usn6 In 010[`5esn`] Where False[$`4esn`..])..Extract(@usn5 In 's_str'[0..] Where `7esn` In 010 In usn1)] Limit {`1esn`:$999[``],@usn5:#usn7 Starts With $123456789 Starts With 12e12}[(_usn3 :`7esn`)-[`2esn`? *1000..0X0123456789ABCDEF{`8esn`:$7 In $usn1 In 999,@usn5:00 Ends With `` Ends With 12.e12}]-(:usn2{`5esn`:True[0xabc..01234567][$`8esn`..$@usn6]})..] Return Distinct 0e0 Ends With 07 Ends With $`8esn` As `1esn`,0[01234567..][0X0123456789ABCDEF..] Order By (`1esn` :`3esn`{#usn7:12[..0e0][...e1]})<-[`6esn`:``]->({@usn6:$1000 Is Not Null})[(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})<-[?:`7esn`|:`2esn`]->(#usn8 :usn1:`3esn`{`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[ *01234567..]->(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})..Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|123.654 Is Not Null)][{`2esn`:$999 Ends With .e0}..[@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``|.e0 =~Null]] Ascending,1.e1[..`4esn`] Ascending,0xabc Is Not Null Is Not Null Descending Limit _usn4[.12..$usn2][$_usn3..123.654] Union All Unwind 00 Ends With $`1esn` Ends With `7esn` As `8esn` Merge ((:`8esn`{``:.e1 Starts With 12.e12 Starts With `2esn`})<-[?{``:00 Contains Count ( * ) Contains 0x0,#usn8:123.654 In $`7esn`}]-(:usn2{``:0.0 =~9e0 =~$0})) On Create Set usn1 =[#usn7 In True Contains 's_str' Contains $usn1 Where $@usn6 In @usn6 In 1e1|12.0[$1000..][#usn7..]][Any(_usn4 In 12e12 In 123456789 Where .e12[@usn6..][010..])..Single(usn2 In False[$usn1][0x0] Where 9e1 Is Not Null Is Not Null)],`6esn` =12.e12 =~0X0123456789ABCDEF =~1.e1 With  $usn1,`1esn` Contains $999 Contains 0.0 As @usn6,$`6esn`[0e0..][010..] Order By 0.0 Ends With $`7esn` Descending,`3esn`[7..0.e0][0.0..123456789] Asc Where ``[9e12][$999] Union Return Distinct *,$`3esn`[.e1][_usn4] Order By 12[None(#usn7 In 9e1[$`1esn`..] Where usn2 Is Not Null)..`5esn`(Distinct 00[$`1esn`..][@usn6..],@usn6[9e12])][`5esn`(`2esn`[..01][..True])..(`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]})<-[? *7..]-(#usn7 :``:usn2)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})] Descending With Distinct usn2 =~$`` =~$`8esn` As `2esn`,'s_str'[0x0..1.e1] As `6esn`,$`5esn`[\"d_str\"..] As `5esn` Limit 01[07..][1.e1..]"),
    octest:ct_string("Unwind 9e1[`1esn`..0][999..1e1] As `1esn` Unwind {usn2:$@usn6[00]}[..[123456789 =~$999,$`2esn` Ends With `6esn`,12.e12 Contains 9e1]][..[12e12 Starts With $0 Starts With $`2esn`,$_usn3 Is Null]] As `5esn` Optional Match #usn8=(`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})-[`3esn`]->(:@usn5{#usn7:12e12 In $`5esn`}),`2esn`=(`8esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})-[`6esn`?:@usn5|_usn3 *01234567..]-(`5esn` {``:_usn3 Contains 9e12 Contains `8esn`,@usn6:``[7.._usn3]})<-[`8esn`{`1esn`:123456789 =~@usn6,`1esn`:$`5esn`[0X7..010][`7esn`..'s_str']}]->(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}) Union All Optional Match @usn6=((#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})<-[``:`4esn`|@usn5 *0xabc{#usn8:9e1 Contains $999,`5esn`:0e0[01][$`7esn`]}]-(_usn3 :`6esn`:_usn3{`6esn`:0.0 Is Not Null,`6esn`:$`8esn`[..True][.._usn4]})),((`1esn` :usn2)) Where $usn2 Is Not Null Is Not Null Delete 9e0[$`8esn`] Unwind (:``:usn2{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7})-[:`2esn`|`4esn`{_usn3:@usn6[`1esn`..],@usn6:@usn6[9e12]}]->({usn1:$#usn7 =~`2esn`})-[`3esn`?{@usn6:Count(*)[..@usn6][..`7esn`],`6esn`:`2esn` In 9e0 In 7}]->(`8esn` :@usn6{`7esn`:0e0[999..$``]})[{`6esn`:$`4esn`[`6esn`..$12],usn1:00 In @usn6 In 0}..][Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 123456789[12])..] As #usn7"),
    octest:ct_string("Merge _usn3=((@usn5 {usn2:.12[0X7..][12e12..],`6esn`:$`4esn`[`6esn`..$12]})-[@usn6:`5esn`|:usn2 *0xabc{#usn8:999 In 0e0}]-(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})-[#usn7 *01..123456789]->(usn1 {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})) On Create Set (:`2esn`{`3esn`:9e1 Ends With Count(*) Ends With $7})-[#usn7?{`5esn`:.e12 Starts With $#usn8 Starts With False}]->(usn1 :`7esn`).`4esn` =1.e1[$`3esn`][0Xa],(`6esn` {`3esn`:.0[$``..0X7],`3esn`:$usn2 Is Not Null Is Not Null})<-[`5esn`?:@usn5|_usn3{``:0.0 =~9e0 =~$0}]-(:@usn5{`1esn`:999 Is Not Null Is Not Null,``:.e1[7..][9e0..]}).usn2 =$`4esn` Starts With 0 Starts With `7esn`,usn2+=`2esn`[..01][..True] Union All Remove Filter(`3esn` In 9e1 Contains $999 Where 0Xa Ends With $`3esn` Ends With $1000).`4esn`,`1esn`(Distinct $`3esn`[..0X0123456789ABCDEF][..7],`4esn`[$_usn3..$`7esn`]).#usn8!,Filter(`6esn` In $`6esn`[``..][Count(*)..] Where 7[0e0..]).`8esn`! With Distinct `7esn`(Distinct `1esn` Starts With 0xabc Starts With $usn2)[({`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12})-[`6esn`?:@usn5|_usn3 *01234567..]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})..],$`6esn`[0e0..][010..] Skip Extract(@usn6 In False Contains 0 Contains $`6esn` Where $0 Ends With $usn1 Ends With $_usn3) Limit 1.e1 Starts With 9e12 Union All Unwind Extract(#usn7 In 9e0[$1000] Where $`1esn` Starts With Count(*)|9e0 Ends With $#usn8)[(`` :`5esn`{@usn5:123456789 =~@usn6})<-[:@usn5|_usn3{#usn7:$123456789 Starts With 0.12 Starts With Null,usn1:.e1[..$`3esn`][..01]}]-(#usn7 :`3esn`{`3esn`:@usn5[0.0..0X7],@usn5:$#usn7 Starts With $`2esn`})<-[:`1esn`|`3esn` *0Xa{_usn4:``[9e12][$999],#usn8:123.654 In 12}]-(`7esn` {``:9e1 Contains $999,``:$usn2[True..0X0123456789ABCDEF]}).._usn3(Distinct 0x0 Contains $`6esn` Contains `4esn`,usn2[1.e1])][(:@usn6{usn2:$123456789 Contains $#usn8 Contains ``,_usn3:`3esn`[..0X0123456789ABCDEF][..0x0]})<-[`7esn`?:usn1|`4esn`]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})<-[:_usn4]->(:usn2{@usn5:07 Ends With 9e12 Ends With `2esn`})..[#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[`8esn`]|9e1 Is Null]] As `4esn` Unwind [$``[7],_usn3 Contains _usn4 Contains $@usn5] Starts With [`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]|usn2 =~7] Starts With Any(`3esn` In `2esn`[..01][..True] Where 12.e12 Contains #usn7 Contains $_usn4) As #usn8"),
    octest:ct_string("Match (({@usn6:#usn7[`8esn`..usn1][$999..`7esn`]})<-[@usn5:_usn4 *0x0..]->({`1esn`:0X7 In $#usn7,_usn3:usn1 Contains 010})),`7esn`=(((`2esn` {``:$0 =~9e1 =~$`2esn`,`8esn`:`5esn`[..123.654][...e12]})-[`1esn` *01234567..]->(_usn3 {#usn7:12.e12 Ends With `` Ends With 0,``:$@usn6 In @usn6 In 1e1})<-[`4esn`:`1esn`|`3esn` *12..]-(usn1 :`7esn`{`7esn`:9e12 Starts With 1e1,_usn3:$`7esn`[$_usn4][.e0]}))) Where 010 Starts With 0 Starts With 0.0 Unwind usn2[`8esn`..][0X0123456789ABCDEF..] As `5esn`"),
    octest:ct_string("Return *,`5esn`(0[1e1][$usn1],Null =~`6esn`)[usn2(Distinct)..][Single(#usn7 In 9e0[$1000] Where 01 Ends With 0Xa Ends With 0X7)..] As `1esn` Order By `3esn`(#usn8 =~0.e0,1000[0e0][1e1])[[_usn3[0x0],1e1 In 0.0 In 0X0123456789ABCDEF]] Desc Merge @usn6=((#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})<-[``:`4esn`|@usn5 *0xabc{#usn8:9e1 Contains $999,`5esn`:0e0[01][$`7esn`]}]-(_usn3 :`6esn`:_usn3{`6esn`:0.0 Is Not Null,`6esn`:$`8esn`[..True][.._usn4]})) On Match Set #usn7+=@usn6[123.654..][0x0..],`3esn`+=00 In @usn6 In 0,@usn6 =Filter(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]) Is Not Null Is Not Null On Match Set Extract(@usn5 In 's_str'[0..] Where @usn6 In .12 In `3esn`|$@usn6[00]).`8esn`? =9e0 Contains $12 Contains `3esn`,_usn4+=0x0[@usn5][$#usn8],count(Distinct $`3esn`[..0X0123456789ABCDEF][..7])._usn3! =1.e1 Is Null Is Null Unwind (#usn7 )<-[`5esn`?:@usn5|_usn3{``:0.0 =~9e0 =~$0}]-(:@usn5{`1esn`:999 Is Not Null Is Not Null,``:.e1[7..][9e0..]}) Contains Filter(#usn7 In $999 In 1e1 Where _usn4 Is Not Null Is Not Null) As `` Union All With  $@usn6[12.0][12.0] Skip `7esn`[$usn2..][$123456789..] Optional Match `3esn`=(`` {`1esn`:123456789 =~@usn6,`1esn`:$`5esn`[0X7..010][`7esn`..'s_str']})<-[`6esn`? *00..0Xa]->(_usn4 :@usn5{usn1:$#usn7 Starts With 01234567 Starts With $0})<-[:#usn8|:`3esn` *12..{`8esn`:12 Ends With Count ( * ),usn2:Count ( * ) In True In @usn5}]-(`7esn` :usn2{`3esn`:12.0 In 123.654 In _usn4}),usn1=((`1esn` {``:0.0 Is Not Null,`1esn`:``[$`3esn`]})<-[:`1esn`|`3esn`{`2esn`:$`3esn` Ends With 01234567}]->(_usn3 :`5esn`)<-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(:`5esn`{`4esn`:0Xa[..Count ( * )][..$123456789]})) Where 01234567[\"d_str\"..`4esn`] Unwind $`1esn` In .e0 As #usn8"),
    octest:ct_string("With  *,#usn8 Is Not Null Skip usn1 Ends With 9e0 Ends With 9e0 Limit `8esn` Contains Count(*) Contains $#usn7"),
    octest:ct_string("Unwind \"d_str\"[#usn8] As #usn7 Return *,$_usn4[usn2..] As @usn5,@usn5(Distinct 12e12 In 123456789,12.0 =~@usn6 =~$`2esn`)[`8esn`(123456789 =~$999)][`2esn`($`2esn`[..$`3esn`][..12e12])] Order By Extract(`8esn` In 123456789 =~@usn6 Where 123.654[`4esn`..12]|`8esn` Contains Count(*) Contains $#usn7)[..[#usn7 In True Contains 's_str' Contains $usn1 Where Count(*) Ends With usn1]][..Filter(usn2 In 7[12] Where #usn7[0.e0..]['s_str'..])] Ascending,{@usn5:`6esn`[$1000][`3esn`]}[All(`3esn` In `2esn`[..01][..True] Where 0Xa =~False =~@usn5)..] Asc,usn2[1.e1] Descending Delete `1esn`(Distinct $`3esn`[..0X0123456789ABCDEF][..7],`4esn`[$_usn3..$`7esn`]) Is Null"),
    octest:ct_string("Match (:usn2)<-[? *01..123456789{`8esn`:usn2 =~7,@usn5:`6esn` Ends With _usn4 Ends With False}]->(`` {``:$@usn6 Ends With 12.e12 Ends With @usn5,`2esn`:$`3esn` Ends With 01234567})<-[`4esn`:usn2]->(`3esn` :_usn4),(({`3esn`:_usn3[0x0],`3esn`:00[False..0e0]})<-[_usn4?:@usn6|:`7esn`]-({`3esn`:_usn3[0x0],`3esn`:00[False..0e0]})<-[_usn3?:_usn3|:`7esn`]->(`3esn` {`8esn`:`7esn` In 010 In usn1})) Where 00 Ends With `` Ends With 12.e12 Match (((`6esn` :#usn7:`5esn`)-[`6esn`?:@usn5|_usn3 *01234567..]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})-[ *0xabc{``:usn1 Contains 010,`2esn`:$0 In `3esn` In 07}]->(_usn4 :#usn7:`5esn`))),`1esn`=(`8esn` :@usn6)<-[?:usn2 *0x0..]->(:`2esn`{usn1:.0[..'s_str'][..01234567],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})-[`5esn`? *01..123456789{`5esn`:@usn6[9e12],`5esn`:@usn6[999..$_usn3][0.12..$@usn5]}]-(`1esn` {`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]}) Create (:`2esn`{usn1:.0[..'s_str'][..01234567],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})<-[#usn8? *0Xa]-(`2esn` :`6esn`:_usn3),(@usn6 :`4esn`:`6esn`)-[ *0..01{@usn6:$0[123.654..0.e0]}]->(usn1 :`1esn`:_usn4{_usn3:@usn6[999..$_usn3][0.12..$@usn5],`1esn`:9e12[..1e1][..'s_str']})<-[`2esn`?:`6esn`|:#usn8{`2esn`:12.e12 Contains 9e1,`5esn`:.e1 Starts With 12.e12 Starts With `2esn`}]-(_usn3 {_usn3:0.12 Starts With $`8esn` Starts With @usn5}) Union With Distinct (#usn7 {_usn4:1.e1[`8esn`]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) =~Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12) =~{usn2:#usn8[`8esn`..]},9e1[$#usn8][$1000] As `5esn`,$usn1 Unwind Extract(@usn6 In 010[`5esn`] Where @usn6 Contains .12 Contains $usn1) Is Not Null As `1esn` Unwind Extract(`8esn` In 123456789 =~@usn6 Where 123.654[`4esn`..12]|`8esn` Contains Count(*) Contains $#usn7)[{`7esn`:usn1[False..`5esn`][$1000..$12],`1esn`:$usn1[`2esn`..][$`2esn`..]}] As #usn8 Union All Merge ((@usn6 {`7esn`:999 In 0e0})<-[? *1000..0X0123456789ABCDEF{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}]-(`6esn` {`2esn`:$`3esn` Ends With 01234567})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)) On Create Set [`5esn` In `7esn`[$usn2..][$123456789..] Where `7esn` Is Null|$_usn4 =~$`1esn` =~`2esn`].`6esn` =Any(#usn7 In True Contains 's_str' Contains $usn1 Where `6esn` Starts With `6esn`) =~Single(#usn7 In $999 In 1e1 Where _usn4 Contains `` Contains 1.e1),@usn6+='s_str',Extract(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0 Ends With 12.0 Ends With `5esn`)._usn4! =Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|123.654 Is Not Null) Ends With usn2(01 Is Null) Ends With [$@usn6 Ends With 123456789 Ends With 12.0,12.e12 =~.0 =~usn1] On Create Set `6esn` ={`3esn`:12 Starts With #usn7 Starts With 0Xa} Is Null Is Null,usn1+=`4esn`[$_usn3..$`7esn`]"),
    octest:ct_string("Create ((#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})<-[``:`4esn`|@usn5 *0xabc{#usn8:9e1 Contains $999,`5esn`:0e0[01][$`7esn`]}]-(_usn3 :`6esn`:_usn3{`6esn`:0.0 Is Not Null,`6esn`:$`8esn`[..True][.._usn4]})),usn2=((_usn3 :_usn4)-[`3esn`:`2esn`|`4esn`]->({usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})<-[:@usn6|:`7esn` *01..123456789]->(:`6esn`:_usn3{``:usn1 Contains 010,`2esn`:$0 In `3esn` In 07})) Unwind 12 Is Not Null As `6esn` Unwind `8esn` Contains Count(*) Contains $#usn7 As _usn4 Union Return *,$@usn6 Ends With `1esn` Order By $999 Is Null Is Null Descending,0e0 =~7 =~12.0 Asc Skip `` =~.12 Union Remove Extract(#usn7 In 9e0[$1000] Where $_usn3 Is Null|@usn5 Contains 9e0)._usn4? Create ((#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0})<-[`7esn`? *0Xa{@usn5:123.654 Is Not Null}]-(#usn8 :`2esn`{`1esn`:0x0 Starts With $`6esn`}))"),
    octest:ct_string("Delete 0X0123456789ABCDEF[..0xabc],All(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where False[$usn1][0x0]) In [#usn7 In 9e1[$`1esn`..] Where @usn5 Is Null|9e12[9e1]] In [12.0 Is Null,$_usn4[..$_usn4][..`7esn`]],$`4esn` Starts With 0 Starts With `7esn` Merge ((`` {#usn7:#usn8 Is Not Null Is Not Null})<-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(`2esn` :@usn5)<-[?:`5esn`|:usn2]->(usn2 :`5esn`)) Union Return Distinct *,`5esn`(0[1e1][$usn1],Null =~`6esn`)[usn2(Distinct)..][Single(#usn7 In 9e0[$1000] Where 01 Ends With 0Xa Ends With 0X7)..] As `1esn` Order By `3esn`(#usn8 =~0.e0,1000[0e0][1e1])[[_usn3[0x0],1e1 In 0.0 In 0X0123456789ABCDEF]] Desc Delete count($`4esn`[`8esn`],`4esn` Is Not Null Is Not Null) =~Filter(@usn5 In 's_str'[0..] Where _usn3[0x0]),9e1[$`1esn`..],$usn2[`2esn`..] Unwind Extract(@usn6 In 010[`5esn`] Where @usn6 Contains .12 Contains $usn1) Is Not Null As `1esn` Union All Create @usn6=((usn2 {`5esn`:$@usn5 In 12e12 In 01})-[`8esn`:#usn7|@usn5 *00..0Xa]-(_usn3 {usn1:0x0 Starts With $`6esn`})),`2esn`=((#usn8 :_usn3{@usn5:_usn3 Starts With 12e12 Starts With `5esn`,@usn6:usn2 In _usn3})<-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->(`5esn` {``:_usn3 Contains 9e12 Contains `8esn`,@usn6:``[7.._usn3]})-[`1esn`?{`8esn`:.e0,usn2:9e1 Contains $999}]-(usn2 :_usn4))"),
    octest:ct_string("Detach Delete Any(`5esn` In 0X7 In $#usn7 Where 0.12 Contains False Contains 1.e1) Contains 0X7 Contains Extract(`8esn` In 123456789 =~@usn6 Where @usn5 Contains 9e0|9e0 Contains $12 Contains `3esn`) Create _usn4=((`1esn` :#usn7:`5esn`{`1esn`:0e0 =~0Xa =~$999})),(((`7esn` {#usn7:$@usn6 Ends With `1esn`})<-[?:usn2{@usn5:999[..`1esn`][..07],_usn4:Count ( * ) Ends With $123456789}]->(`1esn` :usn1:`3esn`{_usn3:.0[.e12..]})<-[:`2esn`|`4esn` *0X0123456789ABCDEF..{`3esn`:usn2[`8esn`..][0X0123456789ABCDEF..],_usn3:$@usn6 In @usn6 In 1e1}]-(@usn6 :`2esn`{`4esn`:$999[0Xa..][9e1..]}))) Merge ((usn2 :`6esn`:_usn3)-[?:#usn7|@usn5 *0X0123456789ABCDEF..{_usn3:@usn5 Is Not Null}]-(#usn8 {`5esn`:$12[$usn1..][Count(*)..],`7esn`:0e0[``..$1000][$7..12.e12]})) On Create Set `5esn` =$1000[$`4esn`..False],`6esn` =[#usn8 In `7esn` Where @usn5 Contains 9e0] Contains [$usn1 Ends With _usn4 Ends With `2esn`],`2esn` =12.0 Is Null"),
    octest:ct_string("With  *,9e12 =~@usn6,`4esn` Contains 9e0 Order By 1000[..$1000] Descending Skip Filter(`6esn` In $`6esn`[``..][Count(*)..]) Ends With None(`5esn` In 0X7 In $#usn7 Where 12.0 Is Null Is Null) Limit {``:123.654 In $`7esn`}[All(`3esn` In `2esn`[..01][..True] Where 0Xa =~False =~@usn5)..None(@usn6 In False Contains 0 Contains $`6esn` Where $@usn6 =~#usn7 =~True)] Where $`` Starts With $1000 Starts With @usn6 With  12.0 Ends With `2esn` Order By 0e0 =~7 =~12.0 Ascending,0Xa[Count(*)..] Ascending,7 Is Not Null Descending Skip $@usn6 Ends With 123456789 Ends With 12.0 Limit Single(`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]) Is Not Null Is Not Null Where usn1 In `` Return Distinct $@usn6 Ends With 12.e12 Ends With @usn5 As usn2,``[usn1][`5esn`],`7esn`[..$`6esn`] Order By $@usn6 In @usn6 In 1e1 Desc,.e1[..$`3esn`][..01] Desc Limit Single(`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]) Is Not Null Is Not Null"),
    octest:ct_string("Optional Match (:`3esn`{``:$@usn5 Is Null Is Null,`8esn`:.e1[..\"d_str\"][..$123456789]})<-[`7esn`:`4esn`|@usn5 *12..]->({`4esn`:.e1[..$`3esn`][..01]}),_usn4=((#usn8 {`5esn`:$12[$usn1..][Count(*)..],`7esn`:0e0[``..$1000][$7..12.e12]})-[`5esn`? *01234567..{`3esn`:usn2[`8esn`..][0X0123456789ABCDEF..],_usn3:$@usn6 In @usn6 In 1e1}]-(usn1 {``:`6esn` =~$_usn4 =~7,`7esn`:9e0[$1000]})) Where True[..#usn8] With  [.e12 Is Null Is Null] Starts With `5esn`(Distinct 00[$`1esn`..][@usn6..],@usn6[9e12]) Starts With None(`8esn` In 123456789 =~@usn6 Where `7esn`[$usn2..][$123456789..]),9e1[usn1..0x0][12.e12..12.0] As usn1,Extract(@usn6 In False Contains 0 Contains $`6esn` Where $0 Ends With $usn1 Ends With $_usn3) As `7esn` Order By [_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $12[$usn1..][Count(*)..]|0e0 =~7 =~12.0] Is Null Is Null Descending,@usn5[0..] Ascending Skip 0.0[..Count ( * )][..`1esn`] Where 12e12 In $`5esn` Union Detach Delete 9e0[$`8esn`],`5esn` Contains #usn7 Contains 9e12,12 Is Null Match @usn6=((`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})) Where 7[0e0..] Detach Delete (`4esn` :#usn7:`5esn`{_usn4:0Xa Ends With $`3esn` Ends With $1000})-[@usn6:#usn8|:`3esn`]->({@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]})[[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07[_usn3..][`6esn`..]|`1esn`[0.12..][@usn6..]]..][{``:07[$`2esn`..9e12][$`4esn`..9e12],`3esn`:$`6esn` Starts With .e12 Starts With $`1esn`}..],07 Contains `3esn` Contains `7esn`,Any(#usn7 In True Contains 's_str' Contains $usn1 Where `6esn` Starts With `6esn`) =~Single(#usn7 In $999 In 1e1 Where _usn4 Contains `` Contains 1.e1)"),
    octest:ct_string("Create (((`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null})-[`5esn`?:`7esn`|:`2esn` *0x0..]-(:_usn4{`1esn`:#usn7 Contains $0 Contains $usn2,`4esn`:999 Ends With $`` Ends With 0X0123456789ABCDEF})<-[? *12..{usn2:$`8esn`[123456789..][$@usn5..]}]->(:`1esn`:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null}))) Remove Extract(#usn8 In `7esn` Where 9e12[$`5esn`..$123456789]|`1esn` Starts With 0xabc Starts With $usn2).`5esn`,{@usn6:0e0 =~7 =~12.0}._usn3! With  *,All(@usn6 In 010[`5esn`] Where $@usn5 Ends With @usn5 Ends With 0xabc)[Extract(#usn7 In 9e1[$`1esn`..] Where 123.654 In $`7esn`)..[12.0 Starts With .12 Starts With `6esn`]],12 In $usn1 In 7 As `8esn` Skip None(#usn7 In True Contains 's_str' Contains $usn1 Where 00[12..$`6esn`]) Ends With None(#usn7 In 9e0[$1000] Where 1e1 Contains 0.e0 Contains 9e1) Limit $@usn5 Starts With .e1 Where usn1 Is Null Is Null Union All With  $999[0Xa..][9e1..] As `4esn` Skip [#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`]][[`2esn` Is Null]][Extract(#usn7 In $999 In 1e1|01234567[Null..$_usn3])] Where 1000 Ends With `7esn`"),
    octest:ct_string("Unwind `8esn`[..$#usn8] As @usn6 Union All Remove All(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $usn1 Ends With _usn4 Ends With `2esn`).`8esn`!,[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 0xabc In 123456789 In 0x0|1.e1 In 1000 In _usn3].`2esn`?"),
    octest:ct_string("Merge (`` {`8esn`:$`6esn`[``..][Count(*)..]})<-[`6esn`? *00..0Xa]->(#usn7 :#usn8:`1esn`{``:.0[$``..0X7]}) On Create Set usn1+={_usn3:usn1 Is Null Is Null,#usn8:9e1[$``..][0.e0..]} Contains ({`7esn`:`8esn` Contains Count(*) Contains $#usn7})<-[_usn3:`3esn`{`5esn`:_usn4[0]}]->(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})-[#usn7?{`5esn`:.e12 Starts With $#usn8 Starts With False}]->({`1esn`:0X7 In $#usn7,_usn3:usn1 Contains 010}) Contains None(#usn8 In `7esn`) Unwind usn2[..$usn1][..$#usn8] As `` Union Remove {@usn6:0e0 =~7 =~12.0}._usn3!,`3esn`:_usn3 Optional Match ``=(_usn3 :`4esn`:`6esn`)-[?:@usn6|:`7esn`]-(:#usn8:`1esn`)-[_usn3?]-(`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]}),#usn8=((#usn7 :_usn3$usn1)<-[`4esn`?:usn1|`4esn`{`3esn`:123.654[..0.e0][..'s_str'],@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]}]->({`3esn`:`2esn` In 9e0 In 7})) Return Single(usn2 In False[$usn1][0x0] Where $@usn6 Is Not Null Is Not Null) =~[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07 Is Not Null Is Not Null],010 Is Null Is Null As #usn8,All(`3esn` In `2esn`[..01][..True] Where usn2[12.e12..])[Any(#usn8 In `7esn` Where .e0 Is Null Is Null)..Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 1e1 Contains 0.e0 Contains 9e1|12.e12 Ends With $``)][{`5esn`:False[$usn1][0x0]}..`8esn`(Distinct .e0[01234567..$`8esn`])] As `8esn` Order By $_usn3[_usn4..] Asc,0.12 Is Null Is Null Desc,`6esn` Ends With _usn4 Ends With False Ascending Skip 1.e1 =~.12 Limit `1esn`[$@usn6][07] Union All Optional Match ((_usn3 {`6esn`:@usn5[$`6esn`..][$999..],`8esn`:$@usn5[..0xabc][..$`3esn`]})-[? *0X0123456789ABCDEF..{#usn7:$@usn6[$0..9e12][.e12..Null]}]->(#usn8 :`5esn`)-[:`6esn`|:#usn8{`4esn`:$`2esn`[..$`3esn`][..12e12],#usn8:123.654 Is Not Null}]-(_usn3 :`5esn`)) Merge ((usn2 {`5esn`:$@usn5 In 12e12 In 01})-[`8esn`:#usn7|@usn5 *00..0Xa]-(_usn3 {usn1:0x0 Starts With $`6esn`})) Remove Filter(`3esn` In `2esn`[..01][..True] Where #usn7 Starts With $123456789 Starts With 12e12).`8esn`?,@usn5:`6esn`:_usn3,#usn7:@usn6"),
    octest:ct_string("Match (:`7esn`{#usn8:$999 Ends With .e0,_usn4:`4esn`[\"d_str\"]['s_str']})<-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(`1esn` :`6esn`:_usn3{#usn7:0x0[$0][7]}) Where .0[..'s_str'][..01234567] Unwind None(#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[..$`8esn`][..Null]) Is Null As `8esn` Union Remove {`5esn`:01234567[\"d_str\"..`4esn`]}.`3esn`? Return *,$`8esn`[999] As @usn5,00 Ends With `` Ends With 12.e12 Skip All(`3esn` In `2esn`[..01][..True] Where usn2[12.e12..])[Any(#usn8 In `7esn` Where .e0 Is Null Is Null)..Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 1e1 Contains 0.e0 Contains 9e1|12.e12 Ends With $``)][{`5esn`:False[$usn1][0x0]}..`8esn`(Distinct .e0[01234567..$`8esn`])] Optional Match usn2=((usn1 {_usn3:9e0[0X7..$`6esn`][123456789..0],`3esn`:123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]})-[:`6esn`|:#usn8{_usn4:0Xa Ends With $`3esn` Ends With $1000}]->(:`5esn`{`4esn`:0Xa[..Count ( * )][..$123456789]})),({`7esn`:`4esn` Is Not Null Is Not Null,`4esn`:`4esn` Ends With 12 Ends With .12})<-[`5esn`?:`7esn`|:`2esn` *0x0..]-(`4esn` :#usn7:`5esn`{@usn5:$`` Contains $`2esn` Contains $usn2}) Where .e1[usn2..$_usn3][.0..$#usn7]"),
    octest:ct_string("With Distinct $usn2[`5esn`..][01234567..] As #usn8 Skip $`6esn`[1.e1][$_usn3] Limit False[$`4esn`..] Delete 12[..$999][..$`2esn`],Any(usn2 In 7[12] Where 0X7[.0])[Any(`6esn` In $`6esn`[``..][Count(*)..] Where $7 In $usn1 In 999)..#usn8(Distinct $_usn4 Is Null Is Null,01[`8esn`..9e12][.12..0])] Remove None(@usn5 In 's_str'[0..] Where 0.e0).`4esn`,{usn1:0[1e1][$usn1],``:`1esn`[`3esn`..]}.`6esn`! Union All Merge (@usn6 {`5esn`:.e12 Starts With $#usn8 Starts With False})<-[`6esn`:``]->({@usn6:$1000 Is Not Null}) Merge (:`5esn`{`4esn`:$`5esn` =~$0 =~``,_usn3:$``[..$#usn7][..`6esn`]})<-[#usn8? *1000..0X0123456789ABCDEF{`7esn`:Count ( * )[$`5esn`..][$7..],`6esn`:`6esn` Ends With _usn4 Ends With False}]->(`8esn` :@usn5{`5esn`:_usn3 In $`8esn` In @usn6,_usn4:$@usn6 Ends With 12.e12 Ends With @usn5})-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]->(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]}) On Match Set #usn7+=[#usn8 In `7esn` Where usn2[07..][.0..]|$usn1 Ends With _usn4 Ends With `2esn`] Contains (_usn3 {#usn7:1000[12e12][`5esn`]})-[`3esn`?:`3esn`]->(#usn8 :_usn3{_usn4:.e1[7..][9e0..]})-[? *..010{`2esn`:'s_str'[0..]}]->({`7esn`:1.e1 In 1000 In _usn3,`8esn`:010 Starts With $`` Starts With 0e0}) Contains Extract(`3esn` In `2esn`[..01][..True] Where usn1 In ``),@usn6:`8esn`,Any(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 12.0 Starts With $`2esn` Starts With .e1).`8esn`? =$`3esn`[$_usn4..0Xa]"),
    octest:ct_string("Remove All(@usn5 In 's_str'[0..] Where 12e12 Is Not Null)._usn3!,`3esn`(Distinct $@usn5 In $`6esn` In 12e12).`8esn`! Remove `5esn`($`4esn` In 1.e1 In #usn7,0Xa[Count(*)..]).`5esn`,(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"})<-[:``{``:.0[$``..0X7]}]-(#usn8 :`8esn`).`3esn`,None(#usn8 In `7esn` Where 9e12[..1e1][..'s_str'])._usn4? Union Create (@usn6 {`4esn`:9e1 Contains 12}) Return *,0X7[`2esn`..] As `6esn`,$`1esn` Contains 1e1 Contains @usn6 As `3esn` Order By $_usn3[_usn4..] Descending,9e1 Contains $999 Ascending Unwind 07[999] As @usn6 Union All Unwind 0x0[``..] As usn1"),
    octest:ct_string("With Distinct 0.e0['s_str'..][01234567..] As `1esn`,None(#usn7 In $999 In 1e1 Where _usn3 Contains 9e12 Contains `8esn`)[..Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 0xabc In 123456789 In 0x0|Count(*)[..@usn6][..`7esn`])] As `3esn`,.0[$``..0X7] Skip usn2 =~$`` =~$`8esn` With  $1000 Starts With $`3esn` Starts With 0.e0 As @usn6,.e12 In $`5esn` In 0X7 As _usn4 Where 12.e12 Ends With $`` Unwind (@usn6 :`8esn`)<-[`4esn`?:`4esn`|@usn5 *01..123456789]-(:usn1:`3esn`{`8esn`:12 Starts With True Starts With 12e12,`8esn`:`2esn` Starts With $`7esn`}) Ends With #usn8(Distinct 12.e12 Contains #usn7 Contains $_usn4,01[`3esn`..][Count(*)..]) Ends With [`5esn`[..True][..0.e0],12 In $usn1 In 7,$`8esn`[123456789..][$@usn5..]] As `6esn`"),
    octest:ct_string("Merge _usn3=(:`1esn`:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null})<-[`4esn`:usn2]->(`3esn` :_usn4) On Match Set `8esn` =[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 12.e12 Starts With \"d_str\" Starts With 9e1|$#usn7 Contains $`7esn` Contains .e12][#usn8(Distinct $_usn4 Is Null Is Null,01[`8esn`..9e12][.12..0])..[_usn4 In 12e12 In 123456789 Where Count ( * ) Ends With $123456789]][Filter(_usn4 In 12e12 In 123456789 Where $`5esn` =~usn1)..[$`5esn` In _usn3 In 0.0]] With Distinct #usn7[`8esn`..usn1][$999..`7esn`] As _usn3,All(#usn7 In 9e1[$`1esn`..] Where 12 =~usn1)[Extract(#usn7 In $999 In 1e1)..][1.e1..],12e12 Starts With $0 Starts With $`2esn` Order By Extract(`8esn` In 123456789 =~@usn6 Where 123.654[`4esn`..12]|`8esn` Contains Count(*) Contains $#usn7)[..[#usn7 In True Contains 's_str' Contains $usn1 Where Count(*) Ends With usn1]][..Filter(usn2 In 7[12] Where #usn7[0.e0..]['s_str'..])] Ascending,{@usn5:`6esn`[$1000][`3esn`]}[All(`3esn` In `2esn`[..01][..True] Where 0Xa =~False =~@usn5)..] Asc,usn2[1.e1] Descending Skip $``[01234567..][.0..] With Distinct *,$`1esn` Starts With Count(*) Limit `7esn`[..$`6esn`]"),
    octest:ct_string("Optional Match (((`2esn` :`1esn`:_usn4)<-[`5esn`?{`8esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}]->(`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})<-[`4esn`:usn2]->(:`6esn`:_usn3{`2esn`:999[123.654..$usn2][Count ( * )..0x0]}))),(_usn4 :#usn7:`5esn`)-[_usn4? *999..{_usn3:$`5esn` =~usn1}]-(`5esn` :#usn8:`1esn`) Where .e0[999..1000][1e1..$`8esn`] Match ((:@usn6)) Where 9e1[_usn3] Union All Merge ((_usn3 :`8esn`{#usn8:False Starts With 0X7 Starts With 01234567})<-[`1esn`?:@usn6|:`7esn`]-(`` {`8esn`:$`6esn`[``..][Count(*)..]})) On Match Set #usn7 =9e1[`1esn`..0][999..1e1],All(usn2 In False[$usn1][0x0] Where `2esn`[..01][..True]).`1esn`? =$usn2[`2esn`..$`1esn`],Single(_usn4 In 12e12 In 123456789 Where $`5esn` =~usn1).#usn7 =All(`5esn` In `7esn`[$usn2..][$123456789..] Where _usn4 Is Not Null) Create usn2=((usn2 :`5esn`{`7esn`:0.12 Starts With $`8esn` Starts With @usn5})<-[usn1:`7esn`|:`2esn`{`6esn`:Count(*) In #usn8 In \"d_str\",`1esn`:$`1esn` Ends With 0X0123456789ABCDEF}]-(#usn8 :usn2{@usn5:$#usn7[..9e0][..123.654],`2esn`:7[12]})<-[ *..07{`5esn`:999 In 0e0}]-(_usn4 :`8esn`))"),
    octest:ct_string("Merge ``=((@usn5 :`4esn`:`6esn`)<-[`3esn` *7..]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]})) On Create Set #usn8 =$_usn4[$`6esn`..]"),
    octest:ct_string("Unwind $#usn7 Ends With \"d_str\" As `7esn` Optional Match ((`1esn` {_usn4:`8esn` Is Null})),`2esn`=(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}) Where usn2[1.e1] Remove {@usn5:07 Ends With 9e12 Ends With `2esn`}.`2esn`!,{usn2:_usn3[`2esn`..0X7][0.e0..$`3esn`]}.`2esn` Union All Create (((`5esn` :@usn6{usn1:'s_str'[0..]})-[?:`4esn`|@usn5 *0Xa]-({`1esn`:$12 Starts With $usn1,`6esn`:123.654[`4esn`..12]})-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(`2esn` {`1esn`:$`4esn` Is Null Is Null}))),`7esn`=(({`7esn`:123.654,`6esn`:9e1 Starts With Count ( * )})-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(usn1 :_usn3{``:`6esn` =~$_usn4 =~7,`7esn`:9e0[$1000]})) Return Distinct $#usn7 =~`2esn` As `4esn` Order By (`5esn` :`4esn`:`6esn`)-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(#usn7 :``:usn2)[..Filter(#usn8 In `7esn`)] Desc Skip usn2 Is Null Is Null Limit @usn6 Is Not Null Is Not Null Union All Return Distinct *,Null[..010][..1000] As #usn7,9e12 Ends With 12e12 Ends With 12 As `` Order By 1000[$7..][_usn4..] Desc Skip $`3esn` Ends With 01234567 Limit 7 Ends With .12 Merge `1esn`=((`2esn` :`1esn`:_usn4)-[?:``]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})) Unwind usn1[..$@usn6][..00] As `4esn`"),
    octest:ct_string("Merge `7esn`=((:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})<-[`2esn`? *..07{`2esn`:`3esn`[0x0..]}]->(`5esn` )) On Create Set `5esn`+=_usn4[$usn1..01234567][123.654..`5esn`],`2esn`+=#usn7 In 0.e0 On Match Set Extract(@usn5 In 's_str'[0..] Where `5esn`[..123.654][...e12]|$``[..\"d_str\"][..$#usn8]).@usn6 =[$usn1[`2esn`..][$`2esn`..]][(`3esn` :usn2)-[`4esn`?:usn1|`4esn`{`3esn`:123.654[..0.e0][..'s_str'],@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]}]-({`6esn`:9e1 Is Not Null Is Not Null,`8esn`:_usn3 In $`8esn` In @usn6})..`2esn`(Distinct $@usn6 Is Not Null Is Not Null,Count ( * ) Ends With $123456789)],None(#usn8 In `7esn` Where ``[7.._usn3]).@usn6? =`6esn`,Any(#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`])._usn4! =`` Is Null Match (((`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`})-[?:_usn4]->(:`5esn`{`4esn`:0Xa[..Count ( * )][..$123456789]})<-[?:`` *0..01]->({`2esn`:9e12[$`5esn`..$123456789],`8esn`:$usn2 =~9e1}))),#usn7=(({_usn3:_usn3 Ends With 7 Ends With $`1esn`,``:$_usn4[$`5esn`][`7esn`]})-[:_usn4 *0..01]-(#usn8 :`2esn`{`1esn`:0x0 Starts With $`6esn`})) Where 123.654 In 12 Return [#usn7 In 9e0[$1000] Where .e1 In 123456789|.e12[..999][..@usn5]] In `5esn`(`1esn` Starts With 0X7 Starts With \"d_str\",9e1) In @usn5(Distinct `5esn` Contains $`5esn` Contains 0X7,True[..#usn8]) As usn2,(`5esn` :@usn6{usn1:'s_str'[0..]})<-[ *00..0Xa]->(`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null})[All(#usn7 In 9e1[$`1esn`..] Where ``[$`3esn`])] As `3esn` Order By @usn6 =~999 =~@usn5 Ascending,$@usn5[..$#usn7] Descending,{`4esn`:12e12 =~$`7esn`} Is Not Null Is Not Null Desc Skip Count(*)[9e12..12.0]"),
    octest:ct_string("Unwind 00[..$`8esn`][..7] As `6esn` Merge (@usn5 :@usn6{`2esn`:12e12 =~1e1,``:12.e12 Contains #usn7 Contains $_usn4})<-[`8esn` *0xabc]-(:_usn3{_usn4:.e1[7..][9e0..]}) On Match Set Single(@usn6 In 010[`5esn`] Where 123.654).`6esn`? =0.e0[0X0123456789ABCDEF..],(:`4esn`:`6esn`{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7})<-[usn2?:@usn5|_usn3*{_usn4:@usn5 Starts With $`3esn`,#usn7:$`5esn` Is Not Null}]-(#usn7 :``:usn2)-[:_usn3|:`7esn` *1000..0X0123456789ABCDEF]->(:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]}).`3esn`? =999[..`1esn`][..07],[@usn6 In 010[`5esn`] Where @usn6 Contains .12 Contains $usn1].`6esn` =`7esn` Starts With @usn5 Union Create ((`4esn` :_usn3{usn2:01[..0Xa][..12],`1esn`:999[..`1esn`][..07]})-[:`` *0..01]-({`7esn`:0xabc In Null,_usn4:.e12[0Xa..]})),((`4esn` :@usn6)<-[@usn5?:usn2 *0..01]->(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})) With  999[12e12..$_usn4] Order By Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where $usn2 =~1.e1 =~usn1|123.654[$0..0X7][Null..#usn8])[(`1esn` {_usn4:`8esn` Is Null})<-[_usn4? *12..{`1esn`:$`6esn` Starts With .e12 Starts With $`1esn`,`3esn`:`8esn`[0.e0..]}]-(:`5esn`{`1esn`:0.e0})..][All(#usn7 In True Contains 's_str' Contains $usn1 Where usn2 Contains $0 Contains .0)..] Descending,0X7[.0] Asc,$`3esn`[..0X0123456789ABCDEF][..7] Descending Limit #usn7 =~9e12 Union With  usn2 Starts With .0 Skip \"d_str\" In @usn5 In $@usn5 Limit _usn4 Starts With 1000 Starts With $usn2 Where _usn4 Is Not Null Is Not Null Merge (#usn7 {#usn7:1.e1 Starts With 9e12})<-[`5esn`?:@usn5|_usn3{``:0.0 =~9e0 =~$0}]-(:@usn5{`1esn`:999 Is Not Null Is Not Null,``:.e1[7..][9e0..]})-[@usn5?{#usn7:12e12 In $`5esn`}]->(`8esn` :`8esn`) On Match Set #usn7 =[$`3esn` Ends With 01234567][..{`3esn`:`6esn` Starts With `6esn`}][...e1],@usn6+=0.12[$0..$usn2]"),
    octest:ct_string("Return Distinct *,Any(#usn7 In 9e0[$1000] Where .e0 Is Null) In None(@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``) In Filter(@usn6 In False Contains 0 Contains $`6esn` Where $@usn5 In 12e12 In 01) As `7esn` Order By 9e0[$1000] Asc Limit (`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})-[_usn3?:_usn4 *00..0Xa{_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})-[`4esn`:`1esn`|`3esn` *12..]->(usn2 :`1esn`:_usn4{usn2:999 Contains $1000}) Contains Filter(usn2 In False[$usn1][0x0] Where $`6esn`[``..][Count(*)..]) Remove [999 Is Not Null Is Not Null,123.654 In $`7esn`].`6esn`,[#usn7 In 9e1[$`1esn`..] Where $`7esn`[$_usn4][.e0]|.0[..'s_str'][..01234567]].usn1?,[`6esn` In $`6esn`[``..][Count(*)..]|.e12 Starts With $12 Starts With .e12].`7esn`! Remove `1esn`(Distinct $`3esn`[..0X0123456789ABCDEF][..7],`4esn`[$_usn3..$`7esn`]).#usn8! Union All Merge `6esn`=((:_usn3{`7esn`:$999 Ends With .e0})<-[`3esn`?{@usn6:Count(*)[..@usn6][..`7esn`],`6esn`:`2esn` In 9e0 In 7}]-(#usn8 :_usn4)-[:`` *0..01]-(`3esn` :`1esn`:_usn4{#usn8:1e1 Is Not Null Is Not Null})) With Distinct [#usn7 In $999 In 1e1 Where 0X7['s_str'..][01..]] Contains [@usn6 In False Contains 0 Contains $`6esn` Where `1esn` Starts With 0xabc Starts With $usn2] Contains Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where 999 In #usn8 In $``|True[0xabc..01234567][$`8esn`..$@usn6]) As usn2,#usn8 =~0.e0,$usn1 Limit 00 In @usn6 In 0 Where #usn8 =~.e0 With Distinct $`4esn`[0..][999..],Filter(`8esn` In 123456789 =~@usn6 Where 123.654[`4esn`..12])[..Extract(#usn7 In $999 In 1e1 Where 1000[12e12][`5esn`])][..[@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``|.e0 =~Null]],(`3esn` {usn2:00[False..0e0]})<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(:`5esn`{#usn8:$``[True],`1esn`:@usn5 Is Null})<-[@usn6?:`8esn` *0..01]->(`5esn` :`4esn`:`6esn`)[[12.0 Starts With $`2esn` Starts With .e1]..] As `5esn` Order By .e12[`2esn`..010] Desc,0xabc In 010 In #usn7 Ascending Skip 1e1 Ends With $`7esn` Ends With .0 Where 9e1[$#usn8][$1000] Union All Unwind {_usn3:usn1 Is Null Is Null,#usn8:9e1[$``..][0.e0..]} Contains ({`7esn`:`8esn` Contains Count(*) Contains $#usn7})<-[_usn3:`3esn`{`5esn`:_usn4[0]}]->(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})-[#usn7?{`5esn`:.e12 Starts With $#usn8 Starts With False}]->({`1esn`:0X7 In $#usn7,_usn3:usn1 Contains 010}) Contains None(#usn8 In `7esn`) As `4esn`"),
    octest:ct_string("Remove All(`6esn` In $`6esn`[``..][Count(*)..] Where $#usn7 Ends With 's_str' Ends With 0X7).`2esn`!,(`3esn` {`3esn`:$@usn6 Is Not Null Is Not Null,`1esn`:12e12 =~1e1})<-[:@usn5|_usn3{#usn7:$123456789 Starts With 0.12 Starts With Null,usn1:.e1[..$`3esn`][..01]}]-(#usn7 :`3esn`{`3esn`:@usn5[0.0..0X7],@usn5:$#usn7 Starts With $`2esn`})<-[ *01234567..]->(:`8esn`{``:.e1 Starts With 12.e12 Starts With `2esn`}).usn2,@usn6:_usn4 With  *,``(Distinct 00 Ends With `` Ends With 12.e12,`6esn`[..Count ( * )][..$_usn4]) In (usn1 :#usn8:`1esn`{`3esn`:`2esn` In 9e0 In 7})<-[`7esn`?:#usn8|:`3esn`{`6esn`:'s_str'[0..]}]->(#usn8 :`8esn`$#usn8) In Filter(@usn6 In 010[`5esn`] Where 1.e1[$usn1]) As `3esn` Order By $usn2[`5esn`..][01234567..] Asc,$`7esn`[.e1][12.0] Asc,$`5esn` =~usn1 Ascending Skip @usn6(0X7 In $#usn7,_usn4 Contains `` Contains 1.e1)[Extract(#usn7 In 9e0[$1000] Where $`1esn` Starts With Count(*)|9e0 Ends With $#usn8)..Any(#usn7 In 9e1[$`1esn`..] Where $`2esn` Ends With `6esn`)] Optional Match `8esn`=((_usn3 :_usn4))"),
    octest:ct_string("Merge _usn4=(`1esn` {@usn5:`2esn` Starts With $`4esn`}) On Match Set #usn7 =9e1[`1esn`..0][999..1e1],All(usn2 In False[$usn1][0x0] Where `2esn`[..01][..True]).`1esn`? =$usn2[`2esn`..$`1esn`],Single(_usn4 In 12e12 In 123456789 Where $`5esn` =~usn1).#usn7 =All(`5esn` In `7esn`[$usn2..][$123456789..] Where _usn4 Is Not Null) Unwind 0.0 Ends With $`7esn` As #usn7"),
    octest:ct_string("With  *,$usn2 =~9e1,1e1 Is Null Is Null As usn2 Order By `1esn` Contains $999 Contains 0.0 Ascending,None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 9e12[$`5esn`..$123456789]) In Extract(@usn5 In 's_str'[0..] Where 07 Ends With 9e12 Ends With `2esn`|00[01234567][False]) In [12 =~usn1] Descending Skip 123.654[$@usn5..] Where `3esn` Starts With 9e0 Starts With usn1 Optional Match ((({`7esn`:999 In 0e0})<-[#usn7 *01..123456789]->({`2esn`:`7esn` In 010 In usn1,`8esn`:$0[123.654..0.e0]})<-[? *7..]-(usn1 {@usn5:_usn4[$usn1..01234567][123.654..`5esn`],`5esn`:1.e1 =~$_usn4}))) Delete [#usn8 In `7esn` Where @usn5 Contains 9e0] Contains [$usn1 Ends With _usn4 Ends With `2esn`] Union All Merge @usn6=((`5esn` {``:_usn3 Contains 9e12 Contains `8esn`,@usn6:``[7.._usn3]})<-[@usn5?:usn2 *00..0Xa{usn2:$usn2[`4esn`..9e12]}]->(:`3esn`{_usn3:1e1 Is Not Null Is Not Null,`2esn`:$usn1 Starts With usn1 Starts With True})-[usn2?:`5esn`|:usn2{`2esn`:`7esn`[$usn2..][$123456789..],@usn5:9e1 Starts With Count ( * )}]->(usn2 :usn1:`3esn`)) Unwind `8esn`(Distinct #usn8 Is Not Null Is Not Null,`2esn` In 9e0 In 7) Starts With None(usn2 In 7[12] Where 123456789 =~12 =~'s_str') As `` Union All Unwind 0.0 Is Not Null As `` Detach Delete 999[12.e12]"),
    octest:ct_string("Optional Match (:`4esn`:`6esn`{`4esn`:$@usn5[..0xabc][..$`3esn`],`3esn`:$usn2[`2esn`..$`1esn`]}),(((#usn8 :_usn4{@usn5:$0[0Xa..$123456789]})<-[ *..010{#usn7:``[$`3esn`]}]-(:`8esn`{#usn7:`1esn`[`3esn`..],usn2:_usn3[$usn2..][$``..]})<-[ *00..0Xa]->(:@usn6{usn2:$123456789 Contains $#usn8 Contains ``,_usn3:`3esn`[..0X0123456789ABCDEF][..0x0]}))) Detach Delete Single(`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]) Is Not Null Is Not Null,@usn5[$`7esn`..`5esn`]"),
    octest:ct_string("Create (((usn2 {`5esn`:$@usn6 Ends With `1esn`})<-[`2esn`? *01..123456789]-(@usn6 :``:usn2{usn1:0x0[0X7],@usn5:`4esn`[.12][$@usn6]})<-[? *7..{`1esn`:12[..$999][..$`2esn`],usn2:9e1}]-(#usn7 :``:usn2)))"),
    octest:ct_string("Create @usn6=(((`1esn` $`4esn`)<-[:`8esn` *999..{@usn6:`7esn` Ends With $7 Ends With $@usn5,``:0e0 Starts With 999 Starts With `2esn`}]->(`6esn` :#usn7:`5esn`)-[@usn5?{#usn7:12e12 In $`5esn`}]->(#usn8 ))),usn1=((:@usn5{@usn5:$12[9e0..$999]})<-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(`1esn` :`6esn`:_usn3{#usn7:0x0[$0][7]})-[{`4esn`:.e1 In 123456789}]-(:`3esn`{``:$@usn5 Is Null Is Null,`8esn`:.e1[..\"d_str\"][..$123456789]})) Return *,12 Ends With True Ends With @usn6,Filter(`5esn` In 0X7 In $#usn7 Where 010 Is Null) Is Not Null As `2esn` Order By Extract(@usn6 In False Contains 0 Contains $`6esn` Where $0 Ends With $usn1 Ends With $_usn3) Ascending,$@usn6 =~0xabc =~$999 Descending,[`5esn` In `7esn`[$usn2..][$123456789..] Where $@usn6 Ends With 12.e12 Ends With @usn5|`7esn`[1e1]] Contains (`4esn` :#usn8:`1esn`{`7esn`:.0[..'s_str'][..01234567],@usn6:False[..$`5esn`][..1e1]})<-[:_usn4]->(:usn2{@usn5:07 Ends With 9e12 Ends With `2esn`})<-[?{@usn6:$0[0Xa..$123456789],`4esn`:`7esn` Contains 9e0}]->(`2esn` {`1esn`:$`4esn` Is Null Is Null}) Contains Single(`5esn` In `7esn`[$usn2..][$123456789..] Where 999 In #usn8 In $``) Desc Union Remove _usn4:`2esn` Remove Any(#usn7 In 9e1[$`1esn`..] Where 999 In #usn8 In $``).`7esn` Merge `4esn`=((_usn3 {`6esn`:@usn5[$`6esn`..][$999..],`8esn`:$@usn5[..0xabc][..$`3esn`]})-[? *0X0123456789ABCDEF..{#usn7:$@usn6[$0..9e12][.e12..Null]}]->(#usn8 :`5esn`)-[:`6esn`|:#usn8{`4esn`:$`2esn`[..$`3esn`][..12e12],#usn8:123.654 Is Not Null}]-(_usn3 :`5esn`))"),
    octest:ct_string("Create `7esn`=((`6esn` :`5esn`)<-[:`1esn`|`3esn` *0Xa{_usn4:``[9e12][$999],#usn8:123.654 In 12}]-(`5esn` :`4esn`:`6esn`)) Create usn2=(:#usn8:`1esn`$`7esn`),`4esn`=(({#usn7:$@usn6[$0..9e12][.e12..Null]})) Optional Match (usn2 :_usn4),`1esn`=((`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})-[?$7]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0})) Where 0e0[01][$`7esn`]"),
    octest:ct_string("Merge `4esn`=(({#usn7:$@usn6[$0..9e12][.e12..Null]})) On Create Set count(Count(*) Is Null,`` Is Null).`8esn` =0Xa In $`6esn`"),
    octest:ct_string("Remove [00[..$`8esn`][..7],_usn4 Starts With `` Starts With 1000,.e0].`1esn`?,Filter(usn2 In False[$usn1][0x0] Where $`7esn`).`2esn`! Unwind 0e0 Is Not Null As `6esn` Union Return Distinct 999[12e12..$_usn4] Order By Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where $usn2 =~1.e1 =~usn1|123.654[$0..0X7][Null..#usn8])[(`1esn` {_usn4:`8esn` Is Null})<-[_usn4? *12..{`1esn`:$`6esn` Starts With .e12 Starts With $`1esn`,`3esn`:`8esn`[0.e0..]}]-(:`5esn`{`1esn`:0.e0})..][All(#usn7 In True Contains 's_str' Contains $usn1 Where usn2 Contains $0 Contains .0)..] Descending,0X7[.0] Asc,$`3esn`[..0X0123456789ABCDEF][..7] Descending Limit #usn7 =~9e12 Unwind @usn6[..$@usn5] As #usn7"),
    octest:ct_string("Unwind $0[0.e0] As `7esn` With Distinct Extract(usn2 In 7[12] Where $@usn5[0.0][0X0123456789ABCDEF])[[#usn7 In 9e0[$1000] Where 01 Ends With 0Xa Ends With 0X7|`2esn`[$usn2][12.0]]..][Filter(#usn8 In `7esn` Where @usn6[999..$_usn3][0.12..$@usn5])..],{#usn8:12.0 Ends With `2esn`,@usn5:usn1 Starts With 00}[Any(#usn7 In True Contains 's_str' Contains $usn1 Where usn2 Contains $0 Contains .0)..],999 In 0e0 As #usn7 Order By `1esn` Starts With 9e1 Desc Where $@usn5[..$#usn7] Return 01234567 In 123456789 In 12 As usn1,0.0 Contains #usn7 As #usn8 Order By Filter(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]) Is Not Null Is Not Null Asc,{usn1:0x0[$0][7],`5esn`:@usn5 Contains #usn8 Contains 12.0}[[@usn5 In 9e0 Ends With $#usn8 Where 00 Contains Count ( * ) Contains 0x0]] Asc,(:`2esn`)-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})-[@usn6? *0X0123456789ABCDEF..{``:0xabc[..$1000][..`5esn`],``:$`1esn` Contains 1e1 Contains @usn6}]-(`5esn` :@usn5) Is Null Is Null Ascending Skip 0e0[$999..0.0][$`8esn`..1.e1] Limit None(`5esn` In `7esn`[$usn2..][$123456789..] Where 12.e12 Starts With \"d_str\" Starts With 9e1) Contains `3esn`(Distinct $123456789[...12][..@usn6]) Contains {``:`1esn` Starts With 0xabc Starts With $usn2} Union Unwind Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where $usn2 =~1.e1 =~usn1|123.654[$0..0X7][Null..#usn8])[(`1esn` {_usn4:`8esn` Is Null})<-[_usn4? *12..{`1esn`:$`6esn` Starts With .e12 Starts With $`1esn`,`3esn`:`8esn`[0.e0..]}]-(:`5esn`{`1esn`:0.e0})..][All(#usn7 In True Contains 's_str' Contains $usn1 Where usn2 Contains $0 Contains .0)..] As @usn6 With  $#usn7 =~`2esn` As `4esn` Order By (`5esn` :`4esn`:`6esn`)-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(#usn7 :``:usn2)[..Filter(#usn8 In `7esn`)] Desc Skip usn2 Is Null Is Null Limit @usn6 Is Not Null Is Not Null Where 's_str' Ends With `7esn` Ends With 010 Union Remove ({usn2:.0 Starts With `1esn`,`2esn`:00 Contains Count ( * ) Contains 0x0})-[`4esn`?:`5esn`|:usn2]->(_usn3 :usn2{#usn8:$`2esn` Is Null,_usn3:123.654 Is Not Null})-[@usn5:usn2{`5esn`:#usn8 =~.e0}]-(_usn3 :`6esn`:_usn3{`6esn`:0.0 Is Not Null,`6esn`:$`8esn`[..True][.._usn4]}).`4esn`? Merge #usn8=(((`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[@usn6?:`7esn`|:`2esn`]->({#usn8:1e1 Is Not Null Is Not Null})-[?:@usn5|_usn3{`1esn`:`2esn` Is Null,`7esn`:`` =~.12}]-(`4esn` :#usn8:`1esn`{`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12}))) Detach Delete Extract(#usn7 In 9e0[$1000] Where _usn4 Is Not Null Is Not Null|usn2 Ends With .e1 Ends With $`5esn`)[Any(@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``)][Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where 1e1 Contains 's_str' Contains `3esn`|$`2esn` Ends With `6esn`)]"),
    octest:ct_string("Unwind True Starts With Null As usn1 Merge `4esn`=(:#usn7:`5esn`{`4esn`:$``[..\"d_str\"][..$#usn8]}) On Create Set #usn8(Distinct 0[$`5esn`],Count(*)[9e12..12.0]).`7esn`! =123.654 In $999 In _usn3 On Match Set `1esn` =0x0[@usn6..][01..],`5esn`(Distinct $#usn7 Contains $`7esn` Contains .e12).@usn6! =(usn2 :_usn3)-[`6esn`?:`6esn`|:#usn8]-(`1esn` {_usn4:`8esn` Is Null})<-[`7esn`?:#usn8|:`3esn`]-(_usn4 :`3esn`) Is Null Unwind usn1[...e12][..1.e1] As #usn8 Union All Merge ({`4esn`:.e1[..$`3esn`][..01]})-[`5esn`:#usn7|@usn5]-(`5esn` :`4esn`:`6esn`) Create (_usn3 :`7esn`) Unwind $`2esn` Starts With $@usn5 Starts With #usn7 As `4esn` Union With Distinct *,12.e12 Contains `6esn`,12[``...e12] As `6esn` Limit Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4) Ends With [$@usn6 Is Not Null Is Not Null] Optional Match `4esn`=(`` {`8esn`:@usn5 Starts With $`3esn`,_usn4:`6esn` Is Null Is Null})<-[`7esn`:`2esn`|`4esn`{_usn4:.e1[7..][9e0..]}]-(usn2 :usn1:`3esn`{`3esn`:`2esn` Is Null})<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(:`5esn`{#usn8:$``[True],`1esn`:@usn5 Is Null}),(:`6esn`:_usn3{`6esn`:`2esn` Starts With $`7esn`}) Where `2esn` =~.e12 =~0X0123456789ABCDEF Remove Extract(#usn7 In 9e0[$1000] Where $_usn3 Is Null|@usn5 Contains 9e0)._usn4?"),
    octest:ct_string("Unwind @usn6[123.654..][0x0..] As `2esn` Delete [_usn4 In 12e12 In 123456789 Where `3esn`[0X0123456789ABCDEF..][07..]] Contains Extract(`5esn` In 0X7 In $#usn7|0[1e1][$usn1]) Contains None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07 Is Not Null Is Not Null),0x0 In `8esn` Union Detach Delete (`1esn` $`4esn`)-[@usn6?:`7esn`|:`2esn`]-({@usn6:#usn7[`8esn`..usn1][$999..`7esn`]}) =~Filter(`3esn` In 9e1 Contains $999 Where 12.0 Is Null Is Null) =~[0xabc In Null],[$`1esn`[``][07],$`4esn`[`6esn`..$12],False[$usn1][0x0]] =~[.e12 Is Null Is Null],$`3esn` Merge (_usn3 :`7esn`) On Create Set [@usn6 In False Contains 0 Contains $`6esn` Where 12.e12 =~.0 =~usn1].usn2! =None(#usn7 In True Contains 's_str' Contains $usn1 Where 00[12..$`6esn`]) Ends With None(#usn7 In 9e0[$1000] Where 1e1 Contains 0.e0 Contains 9e1),`8esn` =01[07..][1.e1..] On Create Set #usn7+=Null[.12..12e12],Single(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $0[123.654..0.e0]).`1esn`! =[123456789 =~$999,$`2esn` Ends With `6esn`,12.e12 Contains 9e1][`5esn`(Distinct .e0[01234567..$`8esn`])][All(`3esn` In 9e1 Contains $999 Where $`5esn` Is Not Null Is Not Null)],@usn6 =usn2[1.e1]"),
    octest:ct_string("Delete [$`5esn` =~usn1,True[`3esn`],@usn6[9e12]][Single(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null)..],0.0[$@usn5.._usn4],7 Ends With 01234567 Ends With 0Xa Unwind .0 Ends With 999 Ends With $`5esn` As @usn5 Union All Return *,1e1 Contains 0.e0 Contains 9e1 Limit None(#usn7 In 9e0[$1000] Where $1000 Is Not Null) Is Null Is Null Return 12.e12 =~0X0123456789ABCDEF =~1.e1 As `6esn`,.e12[`2esn`..010],.e0 Starts With $@usn6 Starts With $7 As `5esn` Order By Single(@usn6 In False Contains 0 Contains $`6esn` Where 12e12 In $`5esn`) Contains Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 0[1e1][$usn1]) Contains {`4esn`:9e1 Contains 12} Ascending Skip usn1 Limit 123456789 Contains 0Xa With Distinct 0Xa Ends With $`3esn` Ends With $1000,Extract(@usn5 In 's_str'[0..] Where 12e12 Is Not Null) =~[`3esn` In 9e1 Contains $999 Where _usn3[`2esn`..0X7][0.e0..$`3esn`]],$#usn8[@usn6..] As `7esn` Order By (`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})-[_usn3?:_usn4 *00..0Xa{_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})-[`4esn`:`1esn`|`3esn` *12..]->(usn2 :`1esn`:_usn4{usn2:999 Contains $1000}) Contains Filter(usn2 In False[$usn1][0x0] Where $`6esn`[``..][Count(*)..]) Desc,$usn1[Null][`8esn`] Desc,$`5esn` In `2esn` In `2esn` Asc Limit [0.e0[..$7],$usn2[True..0X0123456789ABCDEF],`2esn` =~.e12 =~0X0123456789ABCDEF] Ends With `1esn`(Distinct $`3esn`[..0X0123456789ABCDEF][..7],`4esn`[$_usn3..$`7esn`]) Ends With [$`1esn`[``][07],`7esn`] Where _usn3[$`1esn`..]"),
    octest:ct_string("Delete $_usn4[9e0..][$1000..] Unwind 7[0e0..] As `6esn` Union Remove All(@usn6 In False Contains 0 Contains $`6esn` Where 12e12 In $`5esn`).`6esn`? Union Match ``=((:`3esn`{`5esn`:True[0xabc..01234567][$`8esn`..$@usn6]})<-[usn1:_usn4]-(`` {_usn3:`5esn` Contains `7esn`})),(((`5esn` :@usn6{usn1:'s_str'[0..]})-[?:`4esn`|@usn5 *0Xa]-({`1esn`:$12 Starts With $usn1,`6esn`:123.654[`4esn`..12]})-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(`2esn` {`1esn`:$`4esn` Is Null Is Null})))"),
    octest:ct_string("Unwind 7[0e0..] As `6esn` Optional Match ((_usn3 {`6esn`:@usn5[$`6esn`..][$999..],`8esn`:$@usn5[..0xabc][..$`3esn`]})-[? *0X0123456789ABCDEF..{#usn7:$@usn6[$0..9e12][.e12..Null]}]->(#usn8 :`5esn`)-[:`6esn`|:#usn8{`4esn`:$`2esn`[..$`3esn`][..12e12],#usn8:123.654 Is Not Null}]-(_usn3 :`5esn`)) Union With  *,00[12..$`6esn`] As _usn4,Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|0 Ends With 12.e12 Ends With usn2)[..123.654][..Any(#usn7 In $999 In 1e1 Where `4esn`[$_usn3..$`7esn`])] As `3esn` Order By (`` {`8esn`:$`6esn`[``..][Count(*)..]})<-[``? *0x0..{`6esn`:$`2esn` Contains Count(*)}]->(`6esn` :usn1:`3esn`)-[`3esn`?:`7esn`|:`2esn`]-(`3esn` {``:9e1 Is Null,usn1:9e0[Count(*)..0.12][$`1esn`..12.0]})[..{`6esn`:.e12 Is Null Is Null}] Descending,`1esn` Starts With 9e1 Asc,$`8esn` Contains 12 Contains `6esn` Asc Skip True Ends With $_usn3 Ends With 12 Limit usn1 Ends With 0.0 Unwind 010 Starts With $`` Starts With 0e0 As `3esn` Union Create ((@usn6 {`7esn`:999 In 0e0})<-[? *1000..0X0123456789ABCDEF{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}]-(`6esn` {`2esn`:$`3esn` Ends With 01234567})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)),((usn2 :`6esn`:_usn3)-[?:#usn7|@usn5 *0X0123456789ABCDEF..{_usn3:@usn5 Is Not Null}]-(#usn8 {`5esn`:$12[$usn1..][Count(*)..],`7esn`:0e0[``..$1000][$7..12.e12]})) Optional Match ((`1esn` {_usn4:`8esn` Is Null})),`2esn`=(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}) Where usn2[1.e1]"),
    octest:ct_string("Unwind $`2esn` Contains Count(*) As `4esn` Union Return $#usn7 Ends With 's_str' Ends With 0X7 As usn1,Any(#usn7 In 9e1[$`1esn`..] Where #usn7[0])[[00[12..$`6esn`],$`4esn`['s_str'..]]..] As `3esn` Order By [_usn4 In 12e12 In 123456789 Where True Contains 's_str' Contains $usn1|999 Contains $1000] Starts With Single(`5esn` In `7esn`[$usn2..][$123456789..] Where $`5esn` =~$0 =~``) Descending,01[07..][1.e1..] Ascending Skip 9e12[_usn4..$`5esn`][_usn4...e1] Unwind None(@usn5 In 9e0 Ends With $#usn8 Where `7esn`[$usn2..][$123456789..]) =~{`2esn`:7[12],usn1:.12[0X7..][12e12..]} =~Extract(#usn7 In True Contains 's_str' Contains $usn1 Where $`1esn` Starts With Count(*)|True[0xabc..01234567][$`8esn`..$@usn6]) As _usn3 With  `2esn` Starts With 12.e12 Starts With 12.0 As #usn8,$_usn3 Is Not Null Is Not Null Order By All(#usn7 In 9e0[$1000] Where 0x0[12e12..$`7esn`])[(:`5esn`{_usn4:12 Starts With #usn7 Starts With 0Xa,#usn7:999 Is Null Is Null})<-[``:`4esn`|@usn5 *0xabc{#usn8:9e1 Contains $999,`5esn`:0e0[01][$`7esn`]}]-(_usn3 :`6esn`:_usn3{`6esn`:0.0 Is Not Null,`6esn`:$`8esn`[..True][.._usn4]})][{_usn4:@usn5 Starts With $`3esn`,#usn7:$`5esn` Is Not Null}] Desc Union All Optional Match (`7esn` :usn2{`3esn`:12.0 In 123.654 In _usn4}) Return Distinct _usn3 Is Not Null Is Not Null As `` Skip 0X7[..$`8esn`] Limit {@usn5:$@usn6 Is Not Null Is Not Null} Starts With [`3esn` In `2esn`[..01][..True] Where 0x0[usn1..usn1]] Starts With Extract(`3esn` In `2esn`[..01][..True] Where usn2[12.e12..]|0X7['s_str'..][01..])"),
    octest:ct_string("Detach Delete Single(_usn4 In 12e12 In 123456789 Where False Is Null)[[$usn1,_usn4 Contains `` Contains 1.e1]][(`6esn` {_usn3:9e12 Starts With 1e1,_usn4:`2esn`[..$_usn3]})-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->({`1esn`:#usn7[0]})],0 =~1e1"),
    octest:ct_string("Match (`3esn` {usn2:$usn2[`4esn`..9e12]}),usn1=(`6esn` )<-[usn1? *0xabc{usn1:$_usn4 Starts With $1000 Starts With 12}]-(usn1 :usn1:`3esn`) Where 9e1 Ends With Count(*) Ends With $7 Delete (usn2 :usn1:`3esn`{`3esn`:`2esn` Is Null})<-[:`8esn` *999..{@usn6:`7esn` Ends With $7 Ends With $@usn5,``:0e0 Starts With 999 Starts With `2esn`}]->(`6esn` :#usn7:`5esn`)<-[usn1:`1esn`|`3esn`]->(`1esn` {#usn8:$#usn7[..9e0][..123.654],`5esn`:9e12 Starts With 1e1}) =~(`7esn` {#usn7:$@usn6 Ends With `1esn`})<-[#usn8 *0x0..]->(_usn3 :usn2{#usn8:$`2esn` Is Null,_usn3:123.654 Is Not Null})-[? *0X0123456789ABCDEF..]-(usn2 :_usn3),Single(_usn4 In 12e12 In 123456789 Where False Is Null)[[$usn1,_usn4 Contains `` Contains 1.e1]][(`6esn` {_usn3:9e12 Starts With 1e1,_usn4:`2esn`[..$_usn3]})-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->({`1esn`:#usn7[0]})] Delete \"d_str\" Is Not Null,$usn1"),
    octest:ct_string("Return Distinct $@usn6[.0..][0e0..] Order By $`8esn` Is Not Null Is Not Null Descending,Null Ends With _usn4 Ends With 0.0 Ascending Limit .e0 Create `4esn`=((`6esn` :#usn8:`1esn`{`6esn`:usn1[..$@usn6][..00]})-[@usn5:_usn4 *0x0..]-(_usn3 :`1esn`:_usn4{#usn8:$999 Ends With .e0,_usn4:`4esn`[\"d_str\"]['s_str']})),(:`4esn`:`6esn`{`2esn`:12e12 =~1e1,``:12.e12 Contains #usn7 Contains $_usn4})<-[?:`5esn`|:usn2 *123456789..{#usn7:$`1esn` =~999,`4esn`:$@usn6[00]}]-(:`6esn`:_usn3)<-[@usn5? *999..{usn1:.e12[$@usn6..00][01234567.._usn3],`1esn`:`7esn` Contains 9e0}]-({@usn6:999 Contains 0 Contains $`5esn`,#usn7:999[..`1esn`][..07]}) Union Return Distinct *,00 Ends With $`1esn` Ends With `7esn`,$@usn6 Is Not Null Is Not Null As `8esn` Order By (:@usn5{_usn3:123.654})<-[usn1:`1esn`|`3esn`]-(_usn4 :@usn5)-[:_usn3|:`7esn` *1000..0X0123456789ABCDEF]->(:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]}) Ends With Any(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn`[0..][999..]) Ends With {``:0xabc[..$1000][..`5esn`],``:$`1esn` Contains 1e1 Contains @usn6} Asc,[@usn5 In 9e0 Ends With $#usn8 Where 12.e12 =~0X0123456789ABCDEF =~1.e1|00[$`1esn`..][@usn6..]] Descending,[#usn8 In `7esn` Where $`3esn` Contains $`1esn`|$0[123.654..0.e0]][usn1(Distinct 999 Contains $1000,12[123.654..])..[.e12[..999][..@usn5],12.e12 =~.0 =~usn1,`6esn`[$1000][`3esn`]]][[@usn6 In 010[`5esn`] Where $usn2[`2esn`..$`1esn`]]..[`3esn` In 9e1 Contains $999 Where .12 In `8esn` In $#usn8]] Descending Skip [usn2 In 7[12] Where #usn7[.e0]|$usn2 =~9e1] Is Null Is Null Limit 12.e12 =~.0 =~usn1 Union All Delete [0x0 Ends With 12.0 Ends With `5esn`,12e12 Ends With 0.0 Ends With usn1,00[1.e1..]] Ends With All(#usn8 In `7esn` Where $`3esn`[..0xabc][..$7]) Ends With Any(@usn6 In False Contains 0 Contains $`6esn` Where `6esn`[$1000][`3esn`]) With Distinct *,@usn5 Contains #usn8 Contains 12.0 As `6esn`,{_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}[..Single(@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str'])][..None(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $12[9e0..$999])] Skip 0.0 Is Null Is Null Where 07 Ends With 9e12 Ends With `2esn` Unwind usn1 Starts With 00 As _usn3"),
    octest:ct_string("Return Distinct *,`5esn`[..123.654][...e12],12e12 =~$`7esn` Skip 0 =~1.e1 =~$#usn7 Union Merge (({`7esn`:0xabc In Null,_usn4:.e12[0Xa..]})<-[usn1?:`1esn`|`3esn` *01234567..{@usn5:`4esn`[\"d_str\"]['s_str']}]-({`7esn`:9e0 Contains $12 Contains `3esn`,`5esn`:.e0 Contains $#usn8})) Union Create @usn6=(((`` :`5esn`{@usn5:123456789 =~@usn6})<-[`2esn`? *01234567..]->(#usn7 :`4esn`:`6esn`{`1esn`:`1esn`[$@usn6][07]})-[_usn3:usn1|`4esn`{`6esn`:12e12 =~1e1}]-(@usn6 :_usn4{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}))) Merge @usn6=((`5esn` {``:_usn3 Contains 9e12 Contains `8esn`,@usn6:``[7.._usn3]})<-[@usn5?:usn2 *00..0Xa{usn2:$usn2[`4esn`..9e12]}]->(:`3esn`{_usn3:1e1 Is Not Null Is Not Null,`2esn`:$usn1 Starts With usn1 Starts With True})-[usn2?:`5esn`|:usn2{`2esn`:`7esn`[$usn2..][$123456789..],@usn5:9e1 Starts With Count ( * )}]->(usn2 :usn1:`3esn`)) Remove [False[$`4esn`..],$#usn7[..0Xa]].usn1?,({`7esn`:`8esn` Contains Count(*) Contains $#usn7})<-[_usn3:`3esn`{`5esn`:_usn4[0]}]->(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})-[#usn7?{`5esn`:.e12 Starts With $#usn8 Starts With False}]->({`1esn`:0X7 In $#usn7,_usn3:usn1 Contains 010}).`5esn`"),
    octest:ct_string("Remove {#usn7:`7esn`[$usn2..][$123456789..]}.usn1!,[$0 =~9e1 =~$`2esn`,\"d_str\"[True..]].``,Any(usn2 In 7[12] Where 0x0 Ends With 12.0 Ends With `5esn`).#usn8 Union All With Distinct `2esn` Starts With 12.e12 Starts With 12.0 As #usn8,$_usn3 Is Not Null Is Not Null Order By All(#usn7 In 9e0[$1000] Where 0x0[12e12..$`7esn`])[(:`5esn`{_usn4:12 Starts With #usn7 Starts With 0Xa,#usn7:999 Is Null Is Null})<-[``:`4esn`|@usn5 *0xabc{#usn8:9e1 Contains $999,`5esn`:0e0[01][$`7esn`]}]-(_usn3 :`6esn`:_usn3{`6esn`:0.0 Is Not Null,`6esn`:$`8esn`[..True][.._usn4]})][{_usn4:@usn5 Starts With $`3esn`,#usn7:$`5esn` Is Not Null}] Desc Where `7esn` In 010 In usn1 Unwind _usn3 Is Not Null Is Not Null As _usn3 Return $@usn5 In 12e12 In 01 As `2esn`,0xabc =~@usn5 =~$usn1 As `8esn` Limit $`4esn`[07..]"),
    octest:ct_string("Create ({#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})<-[:`1esn`|`3esn`{`2esn`:$`3esn` Ends With 01234567}]->(_usn3 :`5esn`)-[_usn3:usn1|`4esn`{`6esn`:12e12 =~1e1}]-(@usn6 :_usn4{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}) Remove Filter(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`).#usn7,[usn2 In 7[12] Where 12e12 Contains `2esn`].@usn5! Detach Delete $`8esn`[999],usn2 Ends With $`4esn`"),
    octest:ct_string("Merge ((:usn2{``:Count(*)[9e12..12.0],#usn7:`2esn`[$12..]})) On Match Set `4esn`+=$0 =~9e1 =~$`2esn`,_usn3 =Single(usn2 In 7[12] Where `7esn` Is Null)[..Single(`6esn` In $`6esn`[``..][Count(*)..] Where $7 In $usn1 In 999)][..Any(#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4)] On Create Set #usn7+=$999 In 1e1"),
    octest:ct_string("Unwind `2esn`[..$_usn4][...12] As `3esn`"),
    octest:ct_string("Detach Delete Single(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`)[{`5esn`:`6esn`[$`8esn`][9e1]}],Extract(usn2 In 7[12] Where usn1 Starts With 00|`8esn` Contains Count(*) Contains $#usn7) Contains None(@usn6 In False Contains 0 Contains $`6esn` Where $usn2[0.e0]) Contains Extract(@usn6 In False Contains 0 Contains $`6esn` Where $usn2[`4esn`..9e12]|$`4esn`['s_str'..]),`` Starts With $123456789"),
    octest:ct_string("Unwind Count ( * ) In True In @usn5 As usn1 Union All With  *,`2esn` In 9e0 In 7,$7 Starts With $`4esn` As _usn4 Skip (:`6esn`:_usn3{@usn6:7 =~`4esn`,_usn3:`6esn`[$1000][`3esn`]})-[_usn4:_usn4 *0X7..{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]}]-(:`6esn`:_usn3{`4esn`:#usn7 Contains $0 Contains $usn2})[[$`6esn`[1.e1][$_usn3]]][usn2(0xabc In Null)] Limit None(#usn7 In 9e0[$1000] Where $_usn3 Is Null) In (:`3esn`)<-[_usn4{`2esn`:#usn8[`8esn`..],`2esn`:@usn6[9e12]}]-({#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})<-[`4esn`:`1esn`|`3esn` *12..]-(#usn8 :`8esn`) In {`7esn`:$``[..\"d_str\"][..$#usn8],`7esn`:$`` Contains $`2esn` Contains $usn2} Where 12e12 Is Not Null Unwind 07 In 0Xa In usn1 As #usn8 Union Create `8esn`=(((`4esn` :`4esn`:`6esn`)<-[ *..07{`8esn`:.e0[999..1000][1e1..$`8esn`],`1esn`:$`3esn`[$_usn4..0Xa]}]-(:_usn3{@usn5:$1000 Starts With $`7esn`})<-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(_usn3 :`3esn`{_usn3:01[`8esn`..9e12][.12..0]}))) Delete .e12 Starts With $7 Starts With .0 Optional Match ((@usn6 {`7esn`:999 In 0e0})<-[? *1000..0X0123456789ABCDEF{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}]-(`6esn` {`2esn`:$`3esn` Ends With 01234567})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)),((usn2 :`6esn`:_usn3)-[?:#usn7|@usn5 *0X0123456789ABCDEF..{_usn3:@usn5 Is Not Null}]-(#usn8 {`5esn`:$12[$usn1..][Count(*)..],`7esn`:0e0[``..$1000][$7..12.e12]})) Where $`3esn`[..0xabc][..$7]"),
    octest:ct_string("Remove All(@usn5 In 's_str'[0..] Where 07 Ends With 9e12 Ends With `2esn`).@usn6,Extract(`3esn` In 9e1 Contains $999 Where 12.0 Is Null Is Null)._usn4,Extract(`3esn` In `2esn`[..01][..True] Where $`6esn`[1.e1][$_usn3]|`2esn`[$12..]).@usn5! Create ((`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12})<-[`8esn` *0xabc{#usn8:12.0 Starts With .12 Starts With `6esn`,@usn5:_usn3[`5esn`..][usn2..]}]->(#usn7 {`8esn`:`7esn` In 010 In usn1})-[?$7]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0})) Union All Remove [`8esn` In 123456789 =~@usn6 Where `7esn`[$usn2..][$123456789..]].@usn6?,None(@usn6 In False Contains 0 Contains $`6esn` Where $usn2[`4esn`..9e12]).``!,[1.e1[$usn1]].@usn5! Create ((`` {`7esn`:$#usn7[..0Xa]})-[_usn4{@usn5:`6esn`[$1000][`3esn`]}]-(`` :#usn8:`1esn`{``:`7esn`[$usn2..][$123456789..],_usn4:$12 Starts With $usn1}))"),
    octest:ct_string("Delete 01234567 In 123456789 In 12 Detach Delete {``:1.e1 In 1000 In _usn3}[[`5esn` In `7esn`[$usn2..][$123456789..] Where 12.e12 Starts With \"d_str\" Starts With 9e1]][Single(#usn7 In 9e1[$`1esn`..] Where `4esn` Is Not Null Is Not Null)],999[..`1esn`][..07] With  *,_usn4(#usn7 Starts With $123456789 Starts With 12e12) In None(`5esn` In `7esn`[$usn2..][$123456789..] Where 12.e12 Starts With \"d_str\" Starts With 9e1) As @usn5,#usn7[`8esn`..usn1][$999..`7esn`] Order By $@usn6[_usn3..][$999..] Asc,[$12[$usn1..][Count(*)..],usn2[1.e1],123456789[12]] Ends With [`5esn`[$`7esn`..$@usn5],$#usn7[..9e0][..123.654],1.e1 Is Null Is Null] Ends With Extract(`3esn` In 9e1 Contains $999 Where _usn4[0]|12 Starts With #usn7 Starts With 0Xa) Asc Limit @usn6[`1esn`..] Where $`1esn` Starts With Count(*)"),
    octest:ct_string("Optional Match `2esn`=(`3esn` {_usn4:123.654 In 12})-[`4esn`?:_usn4 *7..]-(`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`})<-[ *00..0Xa]->(#usn7 :usn1:`3esn`),((@usn6 :@usn6{_usn4:#usn8 Is Not Null})-[_usn4? *999..{_usn3:$`5esn` =~usn1}]-(`5esn` :#usn8:`1esn`)<-[`1esn`:`8esn` *00..0Xa{#usn8:0X7['s_str'..][01..],``:$usn2 =~1.e1 =~usn1}]->(:_usn3{_usn4:.e1[7..][9e0..]})) Where .e1[12.0..]"),
    octest:ct_string("Unwind 0xabc In 123456789 In 0x0 As usn1"),
    octest:ct_string("Return *,01[`8esn`..9e12][.12..0] As @usn6,$`1esn` =~1e1 As `4esn` Order By 9e1 =~$_usn4 =~1.e1 Desc,$@usn5[$12...e12][0X0123456789ABCDEF..$999] Asc,(:`6esn`:_usn3{@usn6:7 =~`4esn`,_usn3:`6esn`[$1000][`3esn`]})-[_usn4:_usn4 *0X7..{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]}]-(:`6esn`:_usn3{`4esn`:#usn7 Contains $0 Contains $usn2})[[$`6esn`[1.e1][$_usn3]]][usn2(0xabc In Null)] Ascending Skip $1000 Is Not Null With  $_usn3[$12] Match usn1=((`6esn` :`5esn`)),#usn8=((:@usn5{`5esn`:`4esn` Starts With 0e0})) Where $usn2[`4esn`..9e12]"),
    octest:ct_string("Remove All(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`)._usn3?,`3esn`:`5esn`,Single(`8esn` In 123456789 =~@usn6 Where ``[9e12][$999])._usn4! Unwind [#usn7 In $999 In 1e1 Where 0X7['s_str'..][01..]] Contains [@usn6 In False Contains 0 Contains $`6esn` Where `1esn` Starts With 0xabc Starts With $usn2] Contains Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where 999 In #usn8 In $``|True[0xabc..01234567][$`8esn`..$@usn6]) As #usn8 Return Distinct `` Is Not Null Is Not Null As `6esn`,`7esn`[$usn1..]['s_str'..] As usn1,$#usn8 Starts With .e12 Starts With 1.e1 Limit Single(usn2 In 7[12]) Ends With {_usn3:123.654[`4esn`..12]} Ends With Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where `1esn`[usn1][0xabc]) Union Optional Match `1esn`=((`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})-[?$7]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0})) Where #usn8 =~.e0"),
    octest:ct_string("Match _usn4=(`5esn` :``:usn2)-[?{_usn3:`4esn`[$_usn3..$`7esn`]}]-({usn2:.12[0X7..][12e12..],`6esn`:$`4esn`[`6esn`..$12]}),`2esn`=(:#usn8:`1esn`$`7esn`) Where `2esn`[..$_usn3] Unwind $@usn5[..$#usn7] As #usn8 Union All Detach Delete $#usn7 Ends With 's_str' Ends With 0X7,[#usn8 In `7esn` Where .e0 Starts With $@usn6 Starts With $7|1000[12e12][`5esn`]] Ends With [`3esn` In 9e1 Contains $999 Where .12 In `8esn` In $#usn8] Ends With [$``[..\"d_str\"][..$#usn8],$_usn4 Starts With $1000 Starts With 12,#usn7[.e0]] Union All Unwind 1.e1 Ends With $#usn7 As `5esn`"),
    octest:ct_string("Unwind [#usn8 In `7esn` Where usn2[07..][.0..]|$usn1 Ends With _usn4 Ends With `2esn`] Contains (_usn3 {#usn7:1000[12e12][`5esn`]})-[`3esn`?:`3esn`]->(#usn8 :_usn3{_usn4:.e1[7..][9e0..]})-[? *..010{`2esn`:'s_str'[0..]}]->({`7esn`:1.e1 In 1000 In _usn3,`8esn`:010 Starts With $`` Starts With 0e0}) Contains Extract(`3esn` In `2esn`[..01][..True] Where usn1 In ``) As usn1 Return *,9e0[..123456789][..$`3esn`] As #usn7 Order By 999 In 0e0 Ascending Merge ((({usn2:_usn3[`2esn`..0X7][0.e0..$`3esn`]})<-[``?{usn2:$7 In 0.e0 In 999,usn1:'s_str' Starts With 9e0 Starts With usn2}]-(_usn3 )<-[? *..010{usn1:9e1[_usn3]}]->(`5esn` {`4esn`:0x0[usn1..usn1],usn1:$`5esn`[0X7..010][`7esn`..'s_str']}))) Union With  *,All(#usn7 In True Contains 's_str' Contains $usn1 Where #usn8 Is Null Is Null)[..[0x0[0X7]]][..(:`7esn`{`3esn`:$`3esn` Contains $`1esn`,#usn7:$usn2[`4esn`..9e12]})-[ *..07]->(_usn3 :`3esn`{_usn3:01[`8esn`..9e12][.12..0]})] As `3esn`,All(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $0[123.654..0.e0])[usn2(Distinct #usn7 Contains $0 Contains $usn2,0.e0)..] As @usn6 Order By [`5esn` In 0X7 In $#usn7 Where 0.e0['s_str'..][01234567..]][(`6esn` {_usn4:$`5esn` Is Not Null Is Not Null})-[ *999..{`3esn`:123456789 =~$999,_usn4:`4esn` Is Not Null Is Not Null}]-(usn1 :_usn4{`4esn`:`7esn` Is Null})] Ascending,{usn2:`7esn`[$usn1..]['s_str'..],usn2:_usn4 Contains `` Contains 1.e1} Is Not Null Is Not Null Ascending,None(#usn7 In 9e0[$1000] Where $``[True]) Ends With None(#usn8 In `7esn` Where $1000 Starts With $`7esn`) Ends With Single(#usn8 In `7esn` Where @usn5 Contains 9e0) Ascending Skip $`8esn`[999] Union All Optional Match ((:#usn8:`1esn`)-[ *..07]->(`4esn` {``:.e1 Starts With 12.e12 Starts With `2esn`})-[`5esn`?:_usn3|:`7esn`]->({@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]})),`8esn`=(usn1 {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})<-[`4esn`?:`4esn`|@usn5 *01..123456789]-(#usn7 :`4esn`:`6esn`{`1esn`:`1esn`[$@usn6][07]}) Where @usn6[9e12]"),
    octest:ct_string("Remove All(@usn5 In 9e0 Ends With $#usn8 Where False Contains 0 Contains $`6esn`).@usn6 Remove (:``:usn2{`3esn`:12.0 Starts With .12 Starts With `6esn`,``:$`4esn`[0..][999..]})-[@usn6?{`4esn`:12.0 Starts With .12 Starts With `6esn`,#usn8:0.0 Is Null Is Null}]->(:`7esn`{`2esn`:$`3esn` Ends With 01234567}).`6esn`,(`8esn` :@usn5{`5esn`:_usn3 In $`8esn` In @usn6,_usn4:$@usn6 Ends With 12.e12 Ends With @usn5})<-[:`2esn`|`4esn` *1000..0X0123456789ABCDEF]-(usn2 :`6esn`:_usn3{@usn5:$0[0Xa..$123456789]}).`3esn`!,Any(#usn7 In 9e1[$`1esn`..] Where $`2esn` Ends With `6esn`).usn1!"),
    octest:ct_string("Unwind Extract(@usn6 In 010[`5esn`] Where @usn6 Contains .12 Contains $usn1) Is Not Null As `1esn` Union All Detach Delete None(usn2 In 7[12] Where 123456789 =~12 =~'s_str')[{@usn5:$`` Contains $`2esn` Contains $usn2}..][(`2esn` :`6esn`:_usn3)-[?:#usn8|:`3esn` *7..]-({`7esn`:9e12 =~@usn6})..],`7esn` Contains 9e0"),
    octest:ct_string("With Distinct Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where 12.e12 Starts With \"d_str\" Starts With 9e1|$@usn5 In $`6esn` In 12e12) Ends With (:`7esn`{#usn7:0 =~1.e1 =~$#usn7})<-[`1esn`:`8esn` *7..]->(`` {#usn8:.e12 Is Null Is Null,@usn6:`1esn` Is Not Null Is Not Null}) As @usn5,.e0 Is Not Null Is Not Null As `7esn`,Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|0 Ends With 12.e12 Ends With usn2)[..123.654][..Any(#usn7 In $999 In 1e1 Where `4esn`[$_usn3..$`7esn`])] As `3esn` Limit _usn4 In #usn7 With  *,0.e0 =~00 As `3esn` Order By 's_str'[0x0..1.e1] Asc,usn1[False..`5esn`][$1000..$12] Ascending Where 9e1[$#usn8][$1000] Union Return Distinct *,#usn7[.e0] As `8esn` Order By 9e1 =~123456789 =~999 Asc Skip .e1[12.0..] Limit $@usn6 Ends With `1esn` Create `4esn`=(`` {`8esn`:@usn5 Starts With $`3esn`,_usn4:`6esn` Is Null Is Null})<-[`7esn`:`2esn`|`4esn`{_usn4:.e1[7..][9e0..]}]-(usn2 :usn1:`3esn`{`3esn`:`2esn` Is Null})<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(:`5esn`{#usn8:$``[True],`1esn`:@usn5 Is Null}) Unwind [#usn7 In True Contains 's_str' Contains $usn1 Where $`1esn` Starts With Count(*)] Contains (:`2esn`)-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(`3esn` {`4esn`:False Is Null}) Contains Filter(`8esn` In 123456789 =~@usn6 Where $`6esn` Starts With .e12 Starts With $`1esn`) As `1esn` Union Remove All(@usn6 In 010[`5esn`] Where 1.e1[$usn1]).`6esn`!,Extract(@usn6 In 010[`5esn`]|False[$`4esn`..]).@usn5 Detach Delete 0xabc[$999..][$usn1..],12[..$999][..$`2esn`],Extract(#usn7 In 9e0[$1000] Where $`1esn` Starts With Count(*)|$`8esn`[..True][.._usn4]) Ends With Single(_usn4 In 12e12 In 123456789 Where $usn2 Is Not Null Is Not Null) Create (({@usn6:#usn7[`8esn`..usn1][$999..`7esn`]})<-[@usn5:_usn4 *0x0..]->({`1esn`:0X7 In $#usn7,_usn3:usn1 Contains 010})),`7esn`=(((`2esn` {``:$0 =~9e1 =~$`2esn`,`8esn`:`5esn`[..123.654][...e12]})-[`1esn` *01234567..]->(_usn3 {#usn7:12.e12 Ends With `` Ends With 0,``:$@usn6 In @usn6 In 1e1})<-[`4esn`:`1esn`|`3esn` *12..]-(usn1 :`7esn`{`7esn`:9e12 Starts With 1e1,_usn3:$`7esn`[$_usn4][.e0]})))"),
    octest:ct_string("Match (`6esn` {`3esn`:$`2esn`[0..123456789][``..`1esn`],`7esn`:$0[0Xa..$123456789]}),`7esn`=((:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})<-[`2esn`? *..07{`2esn`:`3esn`[0x0..]}]->(`5esn` )) Delete $@usn6[123.654..00] Union Merge (`8esn` :@usn6)<-[?:usn2 *0x0..]->(:`2esn`{usn1:.0[..'s_str'][..01234567],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})-[`5esn`? *01..123456789{`5esn`:@usn6[9e12],`5esn`:@usn6[999..$_usn3][0.12..$@usn5]}]-(`1esn` {`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]}) Return *,`6esn` =~Null As `4esn`,.e0 Starts With $@usn6 Starts With $7 As `5esn` Order By [`3esn` In 9e1 Contains $999 Where _usn3[`2esn`..0X7][0.e0..$`3esn`]] In (`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[ *0xabc{``:usn1 Contains 010,`2esn`:$0 In `3esn` In 07}]->(:#usn7:`5esn`)-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(:#usn8:`1esn`$`7esn`) In {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]} Asc,{`2esn`:'s_str'[0..],`7esn`:0Xa[Count(*)..]}[..None(#usn7 In $999 In 1e1 Where 123456789 =~@usn6)] Desc Skip $`3esn`[$_usn4..0Xa] Union All With Distinct $@usn6 Ends With 12.e12 Ends With @usn5 As usn2,``[usn1][`5esn`],`7esn`[..$`6esn`] Skip `3esn`[7..0.e0][0.0..123456789] With Distinct [#usn7 In 9e1[$`1esn`..] Where $@usn5 In $`6esn` In 12e12|12.0 Is Null Is Null] Contains [`3esn` In `2esn`[..01][..True] Where $0 Ends With $usn1 Ends With $_usn3] As #usn8 Order By [#usn7 In $999 In 1e1 Where 0X7['s_str'..][01..]] Is Not Null Is Not Null Desc Limit Any(`5esn` In 0X7 In $#usn7 Where 0.12 Contains False Contains 1.e1) Contains 0X7 Contains Extract(`8esn` In 123456789 =~@usn6 Where @usn5 Contains 9e0|9e0 Contains $12 Contains `3esn`)"),
    octest:ct_string("Return *,00[$usn1..] Limit `4esn`(Distinct 0.0 Contains #usn7)[(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})<-[?:`7esn`|:`2esn`]->(#usn8 :usn1:`3esn`{`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[ *01234567..]->(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})..][None(@usn5 In 's_str'[0..] Where #usn7[0.12..])..]"),
    octest:ct_string("Unwind .0 Contains .e12 Contains 0 As `6esn` Detach Delete `4esn` Contains 9e0,$`1esn` =~999,$@usn5 Is Null Is Null"),
    octest:ct_string("Remove None(#usn8 In `7esn` Where $`5esn` Is Not Null Is Not Null).`1esn`! Union Create _usn4=(:`5esn`{`4esn`:$`5esn` =~$0 =~``,_usn3:$``[..$#usn7][..`6esn`]})<-[#usn8? *1000..0X0123456789ABCDEF{`7esn`:Count ( * )[$`5esn`..][$7..],`6esn`:`6esn` Ends With _usn4 Ends With False}]->(`8esn` :@usn5{`5esn`:_usn3 In $`8esn` In @usn6,_usn4:$@usn6 Ends With 12.e12 Ends With @usn5})-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]->(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]}),((:`3esn`{`7esn`:0.e0['s_str'..][01234567..]})<-[#usn8 *0x0..]->(_usn3 :usn2{#usn8:$`2esn` Is Null,_usn3:123.654 Is Not Null})<-[?:usn1|`4esn` *1000..0X0123456789ABCDEF{`6esn`:.e0[999..1000][1e1..$`8esn`],`4esn`:00 Ends With `` Ends With 12.e12}]-({`1esn`:usn2 Contains $0 Contains .0,_usn4:$@usn6[.0..][0e0..]})) Return Distinct [#usn7 In $999 In 1e1 Where 0X7['s_str'..][01..]] Contains [@usn6 In False Contains 0 Contains $`6esn` Where `1esn` Starts With 0xabc Starts With $usn2] Contains Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where 999 In #usn8 In $``|True[0xabc..01234567][$`8esn`..$@usn6]) As usn2,#usn8 =~0.e0,$usn1 Limit 00 In @usn6 In 0 Merge `8esn`=(({_usn3:_usn3 Ends With 7 Ends With $`1esn`,``:$_usn4[$`5esn`][`7esn`]})-[:_usn4 *0..01]-(#usn8 :`2esn`{`1esn`:0x0 Starts With $`6esn`})) Union Create usn1=((`` )<-[usn2?:`6esn`|:#usn8 *999..]-(`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})<-[?:usn2{usn2:@usn5 Is Not Null}]-(`7esn` {#usn8:False Starts With 0X7 Starts With 01234567}))"),
    octest:ct_string("Create usn1=(`6esn` )<-[usn1? *0xabc{usn1:$_usn4 Starts With $1000 Starts With 12}]-(usn1 :usn1:`3esn`) Union Delete Extract(`8esn` In 123456789 =~@usn6 Where 123.654[`4esn`..12]|`8esn` Contains Count(*) Contains $#usn7) =~usn2(1.e1 =~.12) =~Filter(`3esn` In `2esn`[..01][..True] Where #usn8 =~.e0) Remove {_usn3:_usn4 Is Null Is Null}.``,``(@usn6[`1esn`..]).`7esn`! Union All With  *,All(#usn7 In True Contains 's_str' Contains $usn1 Where #usn8 Is Null Is Null)[..[0x0[0X7]]][..(:`7esn`{`3esn`:$`3esn` Contains $`1esn`,#usn7:$usn2[`4esn`..9e12]})-[ *..07]->(_usn3 :`3esn`{_usn3:01[`8esn`..9e12][.12..0]})] As `3esn`,All(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $0[123.654..0.e0])[usn2(Distinct #usn7 Contains $0 Contains $usn2,0.e0)..] As @usn6 Order By $`1esn` Ends With 0X0123456789ABCDEF Ascending Limit `4esn` Contains 9e0 Remove [#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[`8esn`]|Count(*) Is Null].#usn7,{``:0Xa =~False =~@usn5,`8esn`:.12[123.654..]}.`6esn`!,Any(#usn7 In $999 In 1e1 Where usn1 =~$`7esn`).`1esn`!"),
    octest:ct_string("With Distinct Single(usn2 In False[$usn1][0x0] Where $@usn6 Is Not Null Is Not Null) =~[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07 Is Not Null Is Not Null],010 Is Null Is Null As #usn8,All(`3esn` In `2esn`[..01][..True] Where usn2[12.e12..])[Any(#usn8 In `7esn` Where .e0 Is Null Is Null)..Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 1e1 Contains 0.e0 Contains 9e1|12.e12 Ends With $``)][{`5esn`:False[$usn1][0x0]}..`8esn`(Distinct .e0[01234567..$`8esn`])] As `8esn` Skip usn2 Is Not Null Limit `2esn` =~.e12 =~0X0123456789ABCDEF"),
    octest:ct_string("Delete $999[0Xa..][9e1..],[`3esn` In 9e1 Contains $999 Where .12 In `8esn` In $#usn8|12.e12[..$`6esn`]][({`5esn`:`2esn` Is Null,`4esn`:usn2[1.e1]})-[`8esn`?:`5esn`|:usn2 *01..123456789{`7esn`:`6esn`,`4esn`:'s_str' Starts With 9e0 Starts With usn2}]-({`7esn`:9e12 =~@usn6})..[$`3esn` Ends With 01234567]] Union All Detach Delete 0.e0,\"d_str\"[True..],$`3esn` Ends With 01234567 Return Distinct @usn5[01][@usn5],9e0 Contains $12 Contains `3esn` As #usn8,{`4esn`:0.0[usn1..],`7esn`:12.0[$1000..][#usn7..]}[Any(`6esn` In $`6esn`[``..][Count(*)..] Where $#usn7 Ends With 's_str' Ends With 0X7)..[usn1[..$@usn6][..00],0x0[0X7],$`8esn`[123456789..][$@usn5..]]][[12.e12[..$`6esn`],999 In #usn8 In $``]..Extract(#usn7 In 9e1[$`1esn`..] Where 00 Contains Count ( * ) Contains 0x0|$`5esn` =~usn1)] Skip {`3esn`:$@usn6 Is Not Null Is Not Null,`1esn`:12e12 =~1e1}[[@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str']|$`3esn`[..0xabc][..$7]]..][(_usn4 {`6esn`:$_usn4 =~$`1esn` =~`2esn`,_usn3:#usn8 Is Null})-[?:#usn7|@usn5 *0X0123456789ABCDEF..{_usn3:@usn5 Is Not Null}]-(#usn8 {`5esn`:$12[$usn1..][Count(*)..],`7esn`:0e0[``..$1000][$7..12.e12]})-[_usn4?{_usn3:.e1[.e1..`1esn`],@usn6:.12 In `8esn` In $#usn8}]->(usn2 :@usn5)..] Delete 01 Ends With 123456789"),
    octest:ct_string("With Distinct #usn7[`8esn`..usn1][$999..`7esn`] As _usn3,All(#usn7 In 9e1[$`1esn`..] Where 12 =~usn1)[Extract(#usn7 In $999 In 1e1)..][1.e1..],12e12 Starts With $0 Starts With $`2esn` Skip `8esn`[$12][123456789] Limit Extract(#usn7 In 9e0[$1000] Where $`1esn` Starts With Count(*)|9e0 Ends With $#usn8)[(`` :`5esn`{@usn5:123456789 =~@usn6})<-[:@usn5|_usn3{#usn7:$123456789 Starts With 0.12 Starts With Null,usn1:.e1[..$`3esn`][..01]}]-(#usn7 :`3esn`{`3esn`:@usn5[0.0..0X7],@usn5:$#usn7 Starts With $`2esn`})<-[:`1esn`|`3esn` *0Xa{_usn4:``[9e12][$999],#usn8:123.654 In 12}]-(`7esn` {``:9e1 Contains $999,``:$usn2[True..0X0123456789ABCDEF]}).._usn3(Distinct 0x0 Contains $`6esn` Contains `4esn`,usn2[1.e1])][(:@usn6{usn2:$123456789 Contains $#usn8 Contains ``,_usn3:`3esn`[..0X0123456789ABCDEF][..0x0]})<-[`7esn`?:usn1|`4esn`]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})<-[:_usn4]->(:usn2{@usn5:07 Ends With 9e12 Ends With `2esn`})..[#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[`8esn`]|9e1 Is Null]] Merge #usn7=(((:`7esn`{`2esn`:$`3esn` Ends With 01234567})<-[`7esn`:#usn7|@usn5*{`8esn`:$`3esn`[$_usn4..0Xa]}]-(`` :`3esn`{`8esn`:.e1[12.0..],`6esn`:0e0[999..$``]})<-[? *0X7..{``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]}]-(:`6esn`:_usn3{`8esn`:.e12[..999][..@usn5],`3esn`:$_usn3 Is Null})))"),
    octest:ct_string("Detach Delete None(`5esn` In `7esn`[$usn2..][$123456789..] Where 12.e12 Starts With \"d_str\" Starts With 9e1) Contains `3esn`(Distinct $123456789[...12][..@usn6]) Contains {``:`1esn` Starts With 0xabc Starts With $usn2} Create ``=((:`5esn`{`8esn`:$`7esn`[0.12],_usn4:`1esn`})-[`5esn`:#usn7|@usn5]-({@usn6:123.654 In 12,#usn7:12.e12 Ends With `` Ends With 0})-[`1esn`?:@usn6|:`7esn` *..010]-(:`6esn`:_usn3{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})),#usn8=(`1esn` {#usn8:$#usn7[..9e0][..123.654],`5esn`:9e12 Starts With 1e1})<-[ *7..{#usn7:$`8esn`[12.e12][_usn4],`2esn`:$0[123.654..0.e0]}]-(`6esn` :`1esn`:_usn4{@usn5:07 Ends With 9e12 Ends With `2esn`}) Union All Optional Match ((`1esn` {_usn4:`8esn` Is Null})),`2esn`=(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}) Where usn2[1.e1] Union All Delete _usn4(Distinct $@usn6[$`8esn`..][123456789..],$`` Starts With $1000 Starts With @usn6)[[#usn7 In True Contains 's_str' Contains $usn1 Where $usn2 =~1.e1 =~usn1]..][All(#usn7 In True Contains 's_str' Contains $usn1 Where $`2esn` Contains Count(*))..],``(Distinct 00 Ends With `` Ends With 12.e12,`6esn`[..Count ( * )][..$_usn4]) In (usn1 :#usn8:`1esn`{`3esn`:`2esn` In 9e0 In 7})<-[`7esn`?:#usn8|:`3esn`{`6esn`:'s_str'[0..]}]->(#usn8 :`8esn`$#usn8) In Filter(@usn6 In 010[`5esn`] Where 1.e1[$usn1]) Return Distinct @usn5[01][@usn5],9e0 Contains $12 Contains `3esn` As #usn8,{`4esn`:0.0[usn1..],`7esn`:12.0[$1000..][#usn7..]}[Any(`6esn` In $`6esn`[``..][Count(*)..] Where $#usn7 Ends With 's_str' Ends With 0X7)..[usn1[..$@usn6][..00],0x0[0X7],$`8esn`[123456789..][$@usn5..]]][[12.e12[..$`6esn`],999 In #usn8 In $``]..Extract(#usn7 In 9e1[$`1esn`..] Where 00 Contains Count ( * ) Contains 0x0|$`5esn` =~usn1)] Skip {`3esn`:$@usn6 Is Not Null Is Not Null,`1esn`:12e12 =~1e1}[[@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str']|$`3esn`[..0xabc][..$7]]..][(_usn4 {`6esn`:$_usn4 =~$`1esn` =~`2esn`,_usn3:#usn8 Is Null})-[?:#usn7|@usn5 *0X0123456789ABCDEF..{_usn3:@usn5 Is Not Null}]-(#usn8 {`5esn`:$12[$usn1..][Count(*)..],`7esn`:0e0[``..$1000][$7..12.e12]})-[_usn4?{_usn3:.e1[.e1..`1esn`],@usn6:.12 In `8esn` In $#usn8}]->(usn2 :@usn5)..]"),
    octest:ct_string("Detach Delete False[..$`5esn`][..1e1],`4esn` Contains 9e0,12[$`5esn`..][False..] Unwind .e0 Ends With $123456789 Ends With 0xabc As #usn7 Union All Delete True Starts With Null,`4esn`(Distinct Count(*) In 12 In `6esn`,Count(*) In 12 In `6esn`) =~{`7esn`:$@usn6[00]} =~[0.12 Contains False Contains 1.e1,$12[$usn1..][Count(*)..]]"),
    octest:ct_string("Create @usn5=(((:usn2{`6esn`:`4esn` Starts With 0e0,`8esn`:usn2[12e12..]['s_str'..]})<-[:`2esn`|`4esn` *12..]-(_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]}))),({`4esn`:.e1[..$`3esn`][..01]})-[`5esn`:#usn7|@usn5]-(`5esn` :`4esn`:`6esn`) Union All Delete 12 Contains 01234567,[@usn5[$`6esn`..][$999..],`` Starts With $123456789] Is Null,`6esn` Is Null Is Null"),
    octest:ct_string("With Distinct `2esn`($`2esn`[..$`3esn`][..12e12])[usn1($0[123.654..0.e0])..'s_str'][.e12..Single(#usn7 In $999 In 1e1 Where _usn4 Is Not Null Is Not Null)] As `3esn`,usn1 Ends With 0.0 Order By $`3esn`[$_usn4..0Xa] Desc,$`1esn` Ends With 0X0123456789ABCDEF Ascending,$@usn5 Ends With @usn5 Ends With 0xabc Descending"),
    octest:ct_string("Delete {#usn8:1.e1 Is Null Is Null,_usn4:0xabc In 123456789 In 0x0}[All(@usn6 In 010[`5esn`] Where 00[1.e1..])..],{`1esn`:$999[``],@usn5:#usn7 Starts With $123456789 Starts With 12e12}[(_usn3 :`7esn`)-[`2esn`? *1000..0X0123456789ABCDEF{`8esn`:$7 In $usn1 In 999,@usn5:00 Ends With `` Ends With 12.e12}]-(:usn2{`5esn`:True[0xabc..01234567][$`8esn`..$@usn6]})..],[`3esn` In 9e1 Contains $999 Where .12 In `8esn` In $#usn8|12.e12[..$`6esn`]][({`5esn`:`2esn` Is Null,`4esn`:usn2[1.e1]})-[`8esn`?:`5esn`|:usn2 *01..123456789{`7esn`:`6esn`,`4esn`:'s_str' Starts With 9e0 Starts With usn2}]-({`7esn`:9e12 =~@usn6})..[$`3esn` Ends With 01234567]] Remove [@usn5 In 's_str'[0..] Where 0Xa[..Count ( * )][..$123456789]|9e12[$`5esn`..$123456789]].`6esn`,All(_usn4 In 12e12 In 123456789 Where 999 Contains $1000).``?,[`3esn` In `2esn`[..01][..True] Where 0x0[usn1..usn1]|0Xa =~False =~@usn5]._usn3! With Distinct *,``(Distinct 00 Ends With `` Ends With 12.e12,`6esn`[..Count ( * )][..$_usn4]) In (usn1 :#usn8:`1esn`{`3esn`:`2esn` In 9e0 In 7})<-[`7esn`?:#usn8|:`3esn`{`6esn`:'s_str'[0..]}]->(#usn8 :`8esn`$#usn8) In Filter(@usn6 In 010[`5esn`] Where 1.e1[$usn1]) As `3esn` Order By $usn2[`5esn`..][01234567..] Asc,$`7esn`[.e1][12.0] Asc,$`5esn` =~usn1 Ascending Skip @usn6(0X7 In $#usn7,_usn4 Contains `` Contains 1.e1)[Extract(#usn7 In 9e0[$1000] Where $`1esn` Starts With Count(*)|9e0 Ends With $#usn8)..Any(#usn7 In 9e1[$`1esn`..] Where $`2esn` Ends With `6esn`)] Where 9e1[$``..][0.e0..] Union All Create _usn4=(((_usn4 :_usn4{_usn3:$`3esn`[.e1][_usn4]})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)<-[usn1:`7esn`|:`2esn`{`6esn`:Count(*) In #usn8 In \"d_str\",`1esn`:$`1esn` Ends With 0X0123456789ABCDEF}]-(`6esn` :`1esn`:_usn4))),usn1=(_usn4 :_usn4{`2esn`:`6esn` Starts With `6esn`,`8esn`:1000[0e0][1e1]}) With Distinct [`5esn`[$`7esn`..$@usn5],$#usn7[..9e0][..123.654],1.e1 Is Null Is Null] Ends With Any(`6esn` In $`6esn`[``..][Count(*)..] Where 07 Contains `3esn` Contains `7esn`),usn2[usn2..0X7] As `1esn` Order By 's_str'[0x0..1.e1] Asc Limit 0xabc[..$1000][..`5esn`] Where `2esn` Starts With 12.e12 Starts With 12.0 Merge #usn8=((`4esn` :@usn6)<-[@usn5?:usn2 *0..01]->(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`}))"),
    octest:ct_string("Create #usn7=(#usn8 :_usn3)-[`7esn`{#usn8:01 Is Null,`6esn`:#usn7[0]}]-({`2esn`:Count(*) Ends With usn1,`6esn`:1000 Ends With `7esn`})<-[:_usn3|:`7esn` *00..0Xa]-(#usn7 :`4esn`:`6esn`$usn2),(((:_usn4{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]})<-[`2esn`? *01..123456789]-(`2esn` :@usn6)))"),
    octest:ct_string("Return Distinct *,1e1 Contains 0.e0 Contains 9e1 Limit None(#usn7 In 9e0[$1000] Where $1000 Is Not Null) Is Null Is Null Merge ((`7esn` {#usn8:False Starts With 0X7 Starts With 01234567})-[? *0xabc]-(`6esn` {`3esn`:.0[$``..0X7],`3esn`:$usn2 Is Not Null Is Not Null})) With  's_str' Order By $12[9e0..$999] Asc,{`3esn`:.e1[..\"d_str\"][..$123456789]} Descending Skip #usn8[`8esn`..] Limit .12 In `8esn` In $#usn8 Where 12.e12 Contains #usn7 Contains $_usn4 Union All Merge ((`1esn` {_usn4:`8esn` Is Null})) On Create Set All(usn2 In False[$usn1][0x0] Where 0.0[usn1..]).`8esn`? =_usn4 Starts With 1000 Starts With $usn2,`7esn`+=12 In $usn1 In 7,Any(#usn7 In 9e0[$1000] Where 1e1 Contains 0.e0 Contains 9e1).`2esn`! ={_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}[..Single(@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str'])][..None(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $12[9e0..$999])] On Match Set @usn6+=0.0[..Count ( * )][..`1esn`],usn2 =1.e1 Starts With 9e12,Single(usn2 In 7[12] Where $@usn6 Ends With 12.e12 Ends With @usn5).@usn5! =0xabc[$999..][$usn1..]"),
    octest:ct_string("With  $usn1,`1esn` Contains $999 Contains 0.0 As @usn6,$`6esn`[0e0..][010..] Order By 0.0 Ends With $`7esn` Descending,`3esn`[7..0.e0][0.0..123456789] Asc Return `2esn` Starts With 12.e12 Starts With 12.0 As _usn3 Order By $1000[$@usn6][$_usn4] Desc Unwind True Ends With $_usn3 Ends With 12 As #usn7"),
    octest:ct_string("Create usn1=((#usn7 :#usn8:`1esn`{``:.0[$``..0X7]})-[`6esn`?:@usn5|_usn3 *01234567..]-(`5esn` {``:_usn3 Contains 9e12 Contains `8esn`,@usn6:``[7.._usn3]})) Union Delete `2esn`[$usn2][12.0],{`1esn`:`2esn` Is Null,`7esn`:`` =~.12}[Single(#usn7 In True Contains 's_str' Contains $usn1 Where `5esn` Contains $`5esn` Contains 0X7)..],(:``:usn2{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7})-[:`2esn`|`4esn`{_usn3:@usn6[`1esn`..],@usn6:@usn6[9e12]}]->({usn1:$#usn7 =~`2esn`})-[`3esn`?{@usn6:Count(*)[..@usn6][..`7esn`],`6esn`:`2esn` In 9e0 In 7}]->(`8esn` :@usn6{`7esn`:0e0[999..$``]})[{`6esn`:$`4esn`[`6esn`..$12],usn1:00 In @usn6 In 0}..][Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 123456789[12])..] Unwind [$`3esn` Ends With 01234567][..{`3esn`:`6esn` Starts With `6esn`}][...e1] As `1esn`"),
    octest:ct_string("Delete .12 In `8esn` In $#usn8 Unwind .e0[9e12..] As @usn5 Remove `4esn`($`4esn` Contains _usn3 Contains `8esn`).`4esn`! Union Detach Delete _usn4(Distinct 0X0123456789ABCDEF Ends With 01 Ends With ``,$`3esn`[..0xabc][..$7]) In Single(`3esn` In 9e1 Contains $999 Where `2esn` Starts With 12.e12 Starts With 12.0) In Extract(usn2 In False[$usn1][0x0] Where .e1[usn2..$_usn3][.0..$#usn7]),Count(*) Ends With usn1 Union With Distinct `5esn`[..123.654][...e12] As @usn6,(`6esn` {_usn3:9e12 Starts With 1e1,_usn4:`2esn`[..$_usn3]})-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->({`1esn`:#usn7[0]}) Starts With Extract(`6esn` In $`6esn`[``..][Count(*)..] Where @usn5 Is Null|0xabc In 010 In #usn7) As `2esn`,{`2esn`:'s_str'[0..],`7esn`:0Xa[Count(*)..]}[..None(#usn7 In $999 In 1e1 Where 123456789 =~@usn6)] As `1esn` Skip $`3esn`[..0X0123456789ABCDEF][..7] Limit 12.0 Starts With .12 Starts With `6esn` Where ``[usn1][`5esn`] Delete `2esn`(Distinct 12.e12 =~.0 =~usn1,00 Ends With $`1esn` Ends With `7esn`)[[_usn4 In 12e12 In 123456789 Where 0x0 Starts With $`6esn`|`2esn` In 7]] Return _usn4 Contains $_usn3 Contains .e1,$`4esn`['s_str'..] As `` Limit None(#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[`8esn`])[Single(`6esn` In $`6esn`[``..][Count(*)..] Where 07 Is Not Null Is Not Null)]"),
    octest:ct_string("With Distinct *,`5esn` Contains `5esn` Contains $_usn3 Limit False Starts With 0X7 Starts With 01234567 Where 9e1[_usn3] Unwind _usn3 Contains _usn4 Contains $@usn5 As `2esn` Union Unwind Count ( * ) Ends With $123456789 As `` Union Optional Match `2esn`=(_usn3 {`8esn`:0e0 =~7 =~12.0,_usn4:.e1[..$`3esn`][..01]})<-[_usn4{`2esn`:#usn8[`8esn`..],`2esn`:@usn6[9e12]}]-(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-(`2esn` :@usn5{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3}),(({@usn6:`7esn` Ends With $7 Ends With $@usn5,``:0e0 Starts With 999 Starts With `2esn`})<-[usn2?:`5esn`|:usn2{`2esn`:`7esn`[$usn2..][$123456789..],@usn5:9e1 Starts With Count ( * )}]->({usn2:$`2esn` Is Null,#usn8:.0 Is Null Is Null})) Where $`3esn`[.e1][_usn4] Merge ``=(`6esn` )<-[usn1? *0xabc{usn1:$_usn4 Starts With $1000 Starts With 12}]-(usn1 :usn1:`3esn`) On Create Set [12e12 =~1e1,0X7[..$`8esn`]].`7esn` =1e1 Ends With $`2esn`,`8esn`+=01[$`7esn`..$@usn6] On Create Set Filter(`6esn` In $`6esn`[``..][Count(*)..] Where 0x0[$0][7])._usn4 =count(Distinct $@usn6 Ends With 123456789 Ends With 12.0,$`2esn`[.0..][0.0..]) Is Not Null Is Not Null,`1esn`+=@usn5[..\"d_str\"],_usn4 =`2esn` =~.e12 =~0X0123456789ABCDEF"),
    octest:ct_string("Detach Delete 00[False..0e0] Merge ((`2esn` :_usn3)-[? *0xabc{`6esn`:$0[0Xa..$123456789],``:.e1[..\"d_str\"][..$123456789]}]-({@usn6:123.654 In 12,#usn7:12.e12 Ends With `` Ends With 0})) Delete Null[..0] Union All Create (((usn2 :#usn8:`1esn`)-[`5esn`?:`7esn`|:`2esn` *0x0..]->(`8esn` :`8esn`)<-[_usn4:_usn4 *0X7..{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]}]-(#usn7 :`2esn`))),((@usn6 {`7esn`:999 In 0e0})<-[? *1000..0X0123456789ABCDEF{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}]-(`6esn` {`2esn`:$`3esn` Ends With 01234567})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)) Unwind 9e1 =~123456789 =~999 As `` Union Match (((`5esn` :@usn6{usn1:'s_str'[0..]})-[?:`4esn`|@usn5 *0Xa]-({`1esn`:$12 Starts With $usn1,`6esn`:123.654[`4esn`..12]})-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(`2esn` {`1esn`:$`4esn` Is Null Is Null}))),@usn6=(:usn2{`6esn`:#usn7[$`3esn`..$1000][0.0..`2esn`],``:010 Starts With 0 Starts With 0.0}) Where `7esn` In 010 In usn1 Create @usn6=(((`` :`5esn`{@usn5:123456789 =~@usn6})<-[`2esn`? *01234567..]->(#usn7 :`4esn`:`6esn`{`1esn`:`1esn`[$@usn6][07]})-[_usn3:usn1|`4esn`{`6esn`:12e12 =~1e1}]-(@usn6 :_usn4{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}))),(({`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}))"),
    octest:ct_string("With  999[12e12..$_usn4] Order By Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where $usn2 =~1.e1 =~usn1|123.654[$0..0X7][Null..#usn8])[(`1esn` {_usn4:`8esn` Is Null})<-[_usn4? *12..{`1esn`:$`6esn` Starts With .e12 Starts With $`1esn`,`3esn`:`8esn`[0.e0..]}]-(:`5esn`{`1esn`:0.e0})..][All(#usn7 In True Contains 's_str' Contains $usn1 Where usn2 Contains $0 Contains .0)..] Descending,0X7[.0] Asc,$`3esn`[..0X0123456789ABCDEF][..7] Descending Limit #usn7 =~9e12 Unwind $`5esn`[$`6esn`][`2esn`] As _usn4"),
    octest:ct_string("Remove [usn2 In 7[12] Where 9e1 Is Not Null Is Not Null]._usn4?,Any(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where `2esn` Starts With .e1 Starts With 9e12).`3esn`! With  *,_usn3[12.e12..][`5esn`..] As @usn6,999[..`1esn`][..07] Order By 7 Is Null Is Null Ascending,Count ( * ) =~0e0 =~`8esn` Descending,#usn7[0.e0..][$#usn8..] Descending Where $999 Ends With .e0 Union Delete 12.e12 Starts With 1000,Filter(`5esn` In 0X7 In $#usn7 Where 010 Is Null) Is Not Null,Single(#usn8 In `7esn` Where 12.0 Starts With $`2esn` Starts With .e1) Ends With [0X7 In $#usn7,`4esn` Is Not Null Is Not Null,.0[.e12..]] Ends With {`6esn`:0xabc[..$1000][..`5esn`],`4esn`:$@usn5 In 12e12 In 01}"),
    octest:ct_string("Create @usn5=(:@usn5{#usn7:12e12 In $`5esn`})<-[?{``:00 Contains Count ( * ) Contains 0x0,#usn8:123.654 In $`7esn`}]-(:usn2{``:0.0 =~9e0 =~$0})-[?*]-({`8esn`:`5esn` Contains #usn7 Contains 9e12}) Union Unwind {`1esn`:$`2esn` Contains Count(*)}[[$`4esn`[0..][999..],@usn5 Contains #usn8 Contains 12.0]..[@usn6 In 010[`5esn`] Where 0e0[``..$1000][$7..12.e12]|@usn6[`1esn`..]]] As `5esn`"),
    octest:ct_string("Remove [`5esn` In 0X7 In $#usn7 Where 01 Is Null]._usn4?,Any(`5esn` In `7esn`[$usn2..][$123456789..] Where 12.e12 Starts With \"d_str\" Starts With 9e1).`3esn` Unwind `3esn`(#usn8 =~0.e0,1000[0e0][1e1])[[_usn3[0x0],1e1 In 0.0 In 0X0123456789ABCDEF]] As `8esn`"),
    octest:ct_string("Merge `1esn`=(`6esn` {``:$@usn5 Contains 's_str' Contains \"d_str\",_usn3:$#usn8[12.e12..`8esn`][12.0..0.0]})-[:`5esn`|:usn2 *01234567..]-(:`2esn`{_usn3:@usn5[0.0..0X7]})-[#usn7:#usn8|:`3esn`{`6esn`:0.e0[$`4esn`..`2esn`],_usn3:7[12]}]-(`3esn` :usn2{`6esn`:#usn8 Is Null}) On Match Set `` =$``[..\"d_str\"][..$#usn8],Any(#usn7 In 9e0[$1000] Where 's_str'[0x0..1.e1]).usn2? =9e1[..123456789],@usn5+=[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 12.e12 Starts With \"d_str\" Starts With 9e1|$#usn7 Contains $`7esn` Contains .e12][#usn8(Distinct $_usn4 Is Null Is Null,01[`8esn`..9e12][.12..0])..[_usn4 In 12e12 In 123456789 Where Count ( * ) Ends With $123456789]][Filter(_usn4 In 12e12 In 123456789 Where $`5esn` =~usn1)..[$`5esn` In _usn3 In 0.0]] Union All Merge `1esn`=((#usn8 :`6esn`:_usn3)<-[@usn5?:``{`3esn`:010 Is Null Is Null,`5esn`:_usn4 Contains `` Contains 1.e1}]-(:@usn6{`7esn`:$`6esn`[``..][Count(*)..]})) On Create Set _usn3+=`5esn`(Distinct .12[123.654..]) On Match Set _usn3 =$``[01234567..][.0..] Union All Return Distinct 12.e12 =~0X0123456789ABCDEF =~1.e1 As `6esn`,0.e0[..$7] As _usn3,usn1 Ends With 0.0 Order By None(`3esn` In 9e1 Contains $999 Where 0xabc In Null) Is Not Null Descending,.e0 Starts With $@usn6 Starts With $7 Descending Limit $@usn6[..12] Merge `3esn`=(((:`6esn`:_usn3{`8esn`:.e12[..999][..@usn5],`3esn`:$_usn3 Is Null})<-[? *0X7..]->(`5esn` :``:usn2{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3})-[_usn4]->(:`6esn`:_usn3{_usn3:usn1 Is Null Is Null,#usn8:9e1[$``..][0.e0..]}))) On Match Set `1esn` =[#usn7 In 9e0[$1000] Where .e1 In 123456789|.e12[..999][..@usn5]] In `5esn`(`1esn` Starts With 0X7 Starts With \"d_str\",9e1) In @usn5(Distinct `5esn` Contains $`5esn` Contains 0X7,True[..#usn8]) Detach Delete 999 Is Not Null Is Not Null"),
    octest:ct_string("Merge _usn4=(:usn1:`3esn`{@usn6:0.e0 Starts With .0 Starts With 123456789,`4esn`:.e1[7..][9e0..]})-[#usn8:`4esn`|@usn5]-(:#usn7:`5esn`{`3esn`:Null[..0]})<-[:`6esn`|:#usn8{``:`1esn` Starts With 0xabc Starts With $usn2}]-(`2esn` :`1esn`:_usn4) On Match Set @usn6+=$`1esn` =~1e1 On Create Set `6esn` =Single(`5esn` In `7esn`[$usn2..][$123456789..] Where 12e12 Is Not Null) Is Not Null Is Not Null Union All Optional Match (_usn3 :`4esn`:`6esn`{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3})<-[`2esn`? *01..123456789]-(`2esn` :@usn6)<-[?{`6esn`:$0[0Xa..$123456789],``:.e1[..\"d_str\"][..$123456789]}]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`}) Where $`7esn`[.e1][12.0]"),
    octest:ct_string("Optional Match ((`1esn` {usn1:12e12 In $`5esn`})<-[`8esn`?:#usn7|@usn5{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3}]-(:usn1:`3esn`{@usn6:.0 Ends With Count ( * )})),#usn8=({`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}) Delete `2esn`(Distinct 12.e12 =~.0 =~usn1,00 Ends With $`1esn` Ends With `7esn`)[[_usn4 In 12e12 In 123456789 Where 0x0 Starts With $`6esn`|`2esn` In 7]] With Distinct *,$@usn6 Ends With 12.e12 Ends With @usn5 As `3esn` Order By .e0 Starts With $@usn6 Starts With $7 Descending Limit All(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where False[$usn1][0x0]) In [#usn7 In 9e1[$`1esn`..] Where @usn5 Is Null|9e12[9e1]] In [12.0 Is Null,$_usn4[..$_usn4][..`7esn`]] Union All Merge (_usn3 :`7esn`) On Create Set [@usn6 In False Contains 0 Contains $`6esn` Where 12.e12 =~.0 =~usn1].usn2! =None(#usn7 In True Contains 's_str' Contains $usn1 Where 00[12..$`6esn`]) Ends With None(#usn7 In 9e0[$1000] Where 1e1 Contains 0.e0 Contains 9e1),`8esn` =01[07..][1.e1..] On Create Set #usn7+=Null[.12..12e12],Single(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $0[123.654..0.e0]).`1esn`! =[123456789 =~$999,$`2esn` Ends With `6esn`,12.e12 Contains 9e1][`5esn`(Distinct .e0[01234567..$`8esn`])][All(`3esn` In 9e1 Contains $999 Where $`5esn` Is Not Null Is Not Null)],@usn6 =usn2[1.e1] Merge `2esn`=(:#usn8:`1esn`$`7esn`) On Match Set `8esn`+=`2esn`(0e0 =~0Xa =~$999,@usn5 Contains 9e0)[(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[usn2? *0..01{`6esn`:#usn8 Is Null}]->(`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12})..][Any(`3esn` In `2esn`[..01][..True] Where 0.e0[..$7])..]"),
    octest:ct_string("Merge (((_usn4 :#usn7:`5esn`)<-[#usn8 *0x0..]->(#usn8 :_usn3{_usn4:.e1[7..][9e0..]})<-[`2esn`?:usn1|`4esn` *00..0Xa]->(`6esn` :#usn8:`1esn`{`6esn`:usn1[..$@usn6][..00]})))"),
    octest:ct_string("Match @usn6=((usn1 :_usn3{`4esn`:$`6esn`[1.e1][$_usn3]})<-[:_usn4]->(:usn2{@usn5:07 Ends With 9e12 Ends With `2esn`})<-[ *00..0Xa]->(`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null})) Where 1e1 In 0.0 In 0X0123456789ABCDEF Detach Delete ``[$`3esn`],Filter(_usn4 In 12e12 In 123456789 Where 1.e1 =~$_usn4) Is Null Is Null,010[...12] Return Distinct *,$#usn7 Ends With \"d_str\" As `7esn` Union Unwind $`1esn` In .e0 As #usn8 Delete 0x0[``..],Any(usn2 In 7[12] Where $_usn3 Is Null) Is Not Null Is Not Null,[`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]|usn2 =~7] Contains Any(`3esn` In 9e1 Contains $999 Where _usn4[0]) Union Remove Any(`6esn` In $`6esn`[``..][Count(*)..] Where $0[123.654..0.e0]).`4esn`?,Single(`5esn` In `7esn`[$usn2..][$123456789..] Where `2esn` =~.e12 =~0X0123456789ABCDEF).usn1 Merge `1esn`=((`2esn` :`1esn`:_usn4)-[?:``]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})) On Create Set #usn7+=.e0[..9e12][..07],`4esn`(True[$_usn3..],$999[``]).usn2 =123456789 Is Null Is Null,@usn5 =01[07..][1.e1..] On Create Set `5esn`+={#usn7:12e12 In $`5esn`} Ends With {`6esn`:12 =~usn1,_usn3:`6esn`[$`8esn`][9e1]},usn2 =True Contains 0x0 Contains $_usn3 With  *,$`5esn`[0X7..010][`7esn`..'s_str'] As `4esn`,999 In 0e0 As #usn7 Skip Extract(usn2 In 7[12] Where $@usn5[0.0][0X0123456789ABCDEF])[[#usn7 In 9e0[$1000] Where 01 Ends With 0Xa Ends With 0X7|`2esn`[$usn2][12.0]]..][Filter(#usn8 In `7esn` Where @usn6[999..$_usn3][0.12..$@usn5])..] Limit (`5esn` :`6esn`:_usn3)-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->({#usn8:False Starts With 0X7 Starts With 01234567})<-[usn2?{``:$`1esn`[``][07]}]->(#usn7 {`7esn`:`8esn` Contains Count(*) Contains $#usn7}) Is Null Is Null"),
    octest:ct_string("With Distinct 0.e0[$`4esn`..`2esn`],12.e12 Starts With \"d_str\" Starts With 9e1,{``:00 In @usn6 In 0}[(_usn3 :`4esn`:`6esn`{usn2:`4esn` Starts With 0e0,`3esn`:7[12]})<-[ *7..{#usn7:$`8esn`[12.e12][_usn4],`2esn`:$0[123.654..0.e0]}]-(`` :#usn8:`1esn`{`8esn`:12[$`5esn`..][False..]})-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-({`6esn`:9e12 =~@usn6})] As `5esn` Skip Extract(#usn7 In $999 In 1e1 Where `5esn`[..True][..0.e0]|$`5esn` =~$0 =~``) In (:`7esn`{#usn8:0Xa Ends With $`3esn` Ends With $1000})-[:`5esn`|:usn2 *01234567..]-(:`2esn`{_usn3:@usn5[0.0..0X7]}) In Extract(#usn7 In True Contains 's_str' Contains $usn1 Where 9e1[$#usn8][$1000]|999 Contains 0 Contains $`5esn`) Where $`3esn` Ends With 01234567 Union Return 0.e0[..$7] As _usn3,0xabc =~@usn5 =~$usn1 Skip $@usn6[00] Limit `2esn`(0e0 =~0Xa =~$999,@usn5 Contains 9e0)[(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[usn2? *0..01{`6esn`:#usn8 Is Null}]->(`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12})..][Any(`3esn` In `2esn`[..01][..True] Where 0.e0[..$7])..] Union All Return Single(usn2 In False[$usn1][0x0] Where $@usn6 Is Not Null Is Not Null) =~[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07 Is Not Null Is Not Null],010 Is Null Is Null As #usn8,All(`3esn` In `2esn`[..01][..True] Where usn2[12.e12..])[Any(#usn8 In `7esn` Where .e0 Is Null Is Null)..Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 1e1 Contains 0.e0 Contains 9e1|12.e12 Ends With $``)][{`5esn`:False[$usn1][0x0]}..`8esn`(Distinct .e0[01234567..$`8esn`])] As `8esn` Order By $_usn3[_usn4..] Asc,0.12 Is Null Is Null Desc,`6esn` Ends With _usn4 Ends With False Ascending Skip 1.e1 =~.12 Limit `1esn`[$@usn6][07]"),
    octest:ct_string("Detach Delete $0[010..]"),
    octest:ct_string("Delete `6esn` Starts With `6esn` With Distinct `6esn` In .12,None(#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[`8esn`]) Ends With [_usn4 In 12e12 In 123456789 Where 1.e1 =~$_usn4|0x0[0X7]],`6esn` Starts With `6esn` Remove ({usn2:.0 Starts With `1esn`,`2esn`:00 Contains Count ( * ) Contains 0x0})-[`4esn`?:`5esn`|:usn2]->(_usn3 :usn2{#usn8:$`2esn` Is Null,_usn3:123.654 Is Not Null})-[@usn5:usn2{`5esn`:#usn8 =~.e0}]-(_usn3 :`6esn`:_usn3{`6esn`:0.0 Is Not Null,`6esn`:$`8esn`[..True][.._usn4]}).`4esn`? Union All Create (((#usn7 :usn2{`2esn`:#usn8[`8esn`..],`2esn`:@usn6[9e12]})<-[@usn5?:usn2 *00..0Xa{usn2:$usn2[`4esn`..9e12]}]->(:`3esn`{_usn3:1e1 Is Not Null Is Not Null,`2esn`:$usn1 Starts With usn1 Starts With True})<-[ *..07{`5esn`:999 In 0e0}]->(:@usn6$usn1))) Create (((:usn1:`3esn`{`8esn`:12 Starts With True Starts With 12e12,`8esn`:`2esn` Starts With $`7esn`})<-[`7esn`?:`2esn`|`4esn` *..010{usn1:0e0[``..$1000][$7..12.e12],`5esn`:0x0 Starts With $`6esn`}]->(@usn5 {_usn4:`5esn` Contains #usn7 Contains 9e12})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]}))) With Distinct $`1esn`[Null][True] As `8esn` Order By 9e0[..123456789][..$`3esn`] Asc,Filter(@usn5 In 's_str'[0..] Where $@usn6 =~#usn7 =~True)[Extract(@usn5 In 's_str'[0..] Where _usn3[0x0])..All(_usn4 In 12e12 In 123456789 Where $usn2 Is Not Null Is Not Null)][(`4esn` :#usn8:`1esn`{`7esn`:.0[..'s_str'][..01234567],@usn6:False[..$`5esn`][..1e1]})<-[:`8esn`]-(:@usn6)-[? *0X0123456789ABCDEF..]-(usn2 :_usn3)..(#usn8 :_usn3{@usn5:_usn3 Starts With 12e12 Starts With `5esn`,@usn6:usn2 In _usn3})-[`1esn`?{`8esn`:.e0,usn2:9e1 Contains $999}]->(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})-[? *..010{`2esn`:'s_str'[0..]}]->({`7esn`:1.e1 In 1000 In _usn3,`8esn`:010 Starts With $`` Starts With 0e0})] Descending,.e1 Is Null Is Null Descending Limit {_usn3:$`6esn`[1.e1][$_usn3]} Contains Extract(#usn7 In 9e1[$`1esn`..] Where $`7esn`[$_usn4][.e0]|7 Ends With 01234567 Ends With 0Xa)"),
    octest:ct_string("Optional Match ({@usn6:999 Contains 0 Contains $`5esn`,#usn7:999[..`1esn`][..07]}),((:#usn7:`5esn`{_usn4:$usn2 =~9e1})<-[@usn5?:usn2 *0..01]->(`8esn` :`2esn`{@usn5:$`4esn` Contains _usn3 Contains `8esn`,`7esn`:$`4esn`[`4esn`][Count(*)]})) Where False[$usn1][0x0] Union Return *,usn1 Contains 010 As `6esn`,(:@usn5{@usn5:999[..`1esn`][..07],_usn4:Count ( * ) Ends With $123456789})<-[`2esn`? *01..123456789]-(`2esn` :@usn6)[[`2esn`[..$_usn4][...12],False Contains 0 Contains $`6esn`,.e1[12.0..]]..[#usn7 In 9e0[$1000] Where #usn8 =~0.e0|12.e12 =~0X0123456789ABCDEF =~1.e1]] As `5esn` Skip [`5esn` In 0X7 In $#usn7 Where 0.e0['s_str'..][01234567..]][(`6esn` {_usn4:$`5esn` Is Not Null Is Not Null})-[ *999..{`3esn`:123456789 =~$999,_usn4:`4esn` Is Not Null Is Not Null}]-(usn1 :_usn4{`4esn`:`7esn` Is Null})] Limit .e0[...0][..$`2esn`] Union Merge #usn7=((@usn5 :`4esn`:`6esn`)<-[`3esn` *7..]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]})) On Match Set `5esn`(Distinct .12[123.654..]).`3esn` =01234567 In 123456789 In 12,`6esn` =[@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str']|$`3esn`[..0xabc][..$7]] Is Null On Match Set usn2+=`6esn`[$`8esn`][9e1]"),
    octest:ct_string("Return *,'s_str' Starts With 9e0 Starts With usn2 As `8esn` Optional Match `8esn`=((_usn4 :`6esn`:_usn3)<-[`3esn`?:`2esn`|`4esn` *123456789..{_usn4:1.e1[`8esn`]}]->(`6esn` )<-[`5esn`?:`8esn`]->({``:12 Starts With #usn7 Starts With 0Xa,`8esn`:``[usn1][`5esn`]})),(`2esn` $`6esn`) Where 7 =~`4esn` Optional Match `6esn`=(((_usn4 :_usn4{`2esn`:`6esn` Starts With `6esn`,`8esn`:1000[0e0][1e1]})<-[`4esn`:`1esn`|`3esn` *12..]-(usn1 :`7esn`{`7esn`:9e12 Starts With 1e1,_usn3:$`7esn`[$_usn4][.e0]})-[``?:_usn4]-(_usn4 :_usn4))) Union With  *,#usn7[.e0] As `8esn` Order By 9e1 =~123456789 =~999 Asc Skip .e1[12.0..] Limit $@usn6 Ends With `1esn` Where ``[$`3esn`] Return Distinct *,All(#usn7 In True Contains 's_str' Contains $usn1 Where $`1esn` Starts With Count(*)) In Any(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn`[0..][999..]) In Filter(`3esn` In 9e1 Contains $999 Where .e0 Is Not Null Is Not Null) As `8esn` Order By 12.0 Ends With `2esn` Descending,$`4esn`[`4esn`][Count(*)] Descending,$`1esn`[07..] Desc Skip 9e12[..123.654][..999] Optional Match `6esn`=(((:@usn6{`6esn`:01 Ends With 0Xa Ends With 0X7})-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->({#usn8:False Starts With 0X7 Starts With 01234567})<-[ *..07{_usn3:0e0 =~7 =~12.0,usn2:123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]}]->(`4esn` :@usn5)))"),
    octest:ct_string("Match (({@usn6:#usn7[`8esn`..usn1][$999..`7esn`]})<-[@usn5:_usn4 *0x0..]->({`1esn`:0X7 In $#usn7,_usn3:usn1 Contains 010})),`7esn`=(((`2esn` {``:$0 =~9e1 =~$`2esn`,`8esn`:`5esn`[..123.654][...e12]})-[`1esn` *01234567..]->(_usn3 {#usn7:12.e12 Ends With `` Ends With 0,``:$@usn6 In @usn6 In 1e1})<-[`4esn`:`1esn`|`3esn` *12..]-(usn1 :`7esn`{`7esn`:9e12 Starts With 1e1,_usn3:$`7esn`[$_usn4][.e0]})))"),
    octest:ct_string("Create ((`1esn` :usn2)),`2esn`=(`5esn` :``:usn2)<-[`8esn` *0xabc{#usn8:12.0 Starts With .12 Starts With `6esn`,@usn5:_usn3[`5esn`..][usn2..]}]->(@usn6 :usn1:`3esn`{@usn5:999 Starts With `2esn` Starts With .e1,``:0xabc In Null})<-[usn2?:@usn5|_usn3*{_usn4:@usn5 Starts With $`3esn`,#usn7:$`5esn` Is Not Null}]-(#usn7 :``:usn2) Union Optional Match ((:@usn5{usn2:$#usn7[..$`4esn`][..01],#usn7:False Is Null})<-[``?{usn2:$7 In 0.e0 In 999,usn1:'s_str' Starts With 9e0 Starts With usn2}]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0})),(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}) Where _usn3 Starts With 12e12 Starts With `5esn` Delete 9e1[$`1esn`..] With  (#usn7 {_usn4:1.e1[`8esn`]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) =~Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12) =~{usn2:#usn8[`8esn`..]},9e1[$#usn8][$1000] As `5esn`,$usn1 Order By usn1 Ends With 9e0 Ends With 9e0 Descending,None(usn2 In 7[12] Where 123456789 =~12 =~'s_str')[{@usn5:$`` Contains $`2esn` Contains $usn2}..][(`2esn` :`6esn`:_usn3)-[?:#usn8|:`3esn` *7..]-({`7esn`:9e12 =~@usn6})..] Descending Skip (:`6esn`:_usn3{@usn6:7 =~`4esn`,_usn3:`6esn`[$1000][`3esn`]})-[_usn4:_usn4 *0X7..{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]}]-(:`6esn`:_usn3{`4esn`:#usn7 Contains $0 Contains $usn2})[[$`6esn`[1.e1][$_usn3]]][usn2(0xabc In Null)] Union Remove None(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]).`1esn`?,Extract(#usn7 In $999 In 1e1 Where _usn4 Is Not Null Is Not Null|0 =~1.e1 =~$#usn7).@usn5!,(`1esn` {`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]})-[_usn3:usn1|`4esn`{`6esn`:12e12 =~1e1}]-(@usn6 :_usn4{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}).@usn5 Delete `2esn`[$usn2][12.0],{`1esn`:`2esn` Is Null,`7esn`:`` =~.12}[Single(#usn7 In True Contains 's_str' Contains $usn1 Where `5esn` Contains $`5esn` Contains 0X7)..],(:``:usn2{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7})-[:`2esn`|`4esn`{_usn3:@usn6[`1esn`..],@usn6:@usn6[9e12]}]->({usn1:$#usn7 =~`2esn`})-[`3esn`?{@usn6:Count(*)[..@usn6][..`7esn`],`6esn`:`2esn` In 9e0 In 7}]->(`8esn` :@usn6{`7esn`:0e0[999..$``]})[{`6esn`:$`4esn`[`6esn`..$12],usn1:00 In @usn6 In 0}..][Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 123456789[12])..] Return Distinct *,1.e1 Ends With $#usn7 As usn2,@usn5[01][@usn5] Order By $`4esn`[..$`8esn`][..Null] Descending Skip `6esn` Is Null Is Null"),
    octest:ct_string("With  *,#usn8[`6esn`..][$``..] As usn1,Any(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 00[$usn1..]) Contains None(@usn5 In 's_str'[0..] Where 010 Is Null) Contains `2esn`(Distinct $`3esn`[$_usn4..0Xa],$`8esn`[123456789..][$@usn5..]) Order By 0x0[Count(*)..@usn6][Count(*)..0Xa] Desc Limit `6esn` Unwind 9e0 Is Not Null Is Not Null As `5esn` Union Detach Delete #usn7[0.e0..]['s_str'..],$0 Starts With @usn5 Create ((:`5esn`{`8esn`:$`1esn` Starts With Count(*),_usn3:usn1[...e12][..1.e1]})) Union Create usn1=((#usn8 :_usn3)<-[? *12..{#usn7:`6esn` Ends With _usn4 Ends With False,usn1:1000[12e12][`5esn`]}]->(:`6esn`:_usn3{``:usn1 Contains 010,`2esn`:$0 In `3esn` In 07})),`1esn`=((`6esn` {`3esn`:$`2esn`[0..123456789][``..`1esn`],`7esn`:$0[0Xa..$123456789]})<-[? *00..0Xa]->(usn2 :@usn5)-[?:`2esn`|`4esn` *0Xa{#usn7:1.e1 Starts With 9e12}]-(:`4esn`:`6esn`{@usn5:$#usn7[..9e0][..123.654],`2esn`:7[12]})) Remove Extract(`3esn` In 9e1 Contains $999 Where usn1[False..`5esn`][$1000..$12]|True Starts With Null).`4esn`! With  $usn2 Is Not Null Is Not Null Skip 999[@usn5..][Null..] Limit $@usn6 Ends With `1esn` Where 9e12[$`5esn`..$123456789]"),
    octest:ct_string("Detach Delete @usn5 Starts With $`3esn`,12 Is Not Null,07 Contains `3esn` Contains `7esn` Union All Match (((:`6esn`:_usn3{@usn5:0.e0[..$7],@usn6:.12 In `8esn` In $#usn8})-[?*..]-(usn2 :`5esn`{`7esn`:0.12 Starts With $`8esn` Starts With @usn5})-[:@usn6|:`7esn`{#usn7:.0[.e12..],usn2:usn2 =~usn1 =~Count ( * )}]->(#usn8 :`8esn`))) Merge (:_usn4{_usn3:$#usn7[..0Xa],@usn5:12e12 In 123456789})"),
    octest:ct_string("Remove [`5esn` In `7esn`[$usn2..][$123456789..] Where $@usn6 Ends With 12.e12 Ends With @usn5|`5esn`[..True][..0.e0]].`2esn`!,None(`8esn` In 123456789 =~@usn6 Where $`5esn` =~$`8esn` =~usn2)._usn3? Union All Remove Extract(@usn6 In False Contains 0 Contains $`6esn` Where 12.e12 =~.0 =~usn1|True Contains 's_str' Contains $usn1)._usn4?,All(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 12[$`5esn`..][False..]).`4esn`"),
    octest:ct_string("Detach Delete `5esn` Contains $`5esn` Contains 0X7 Remove Single(#usn7 In $999 In 1e1 Where _usn4 Is Not Null Is Not Null).usn1 Union Match (`8esn` :#usn8:`1esn`{usn1:0x0 Starts With $`6esn`}) Create ((`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`})),@usn5=(({@usn5:$`5esn` Is Not Null Is Not Null})-[`1esn`?:@usn6|:`7esn` *..010]-(:`6esn`:_usn3{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})<-[?:`` *0..01]->({`2esn`:9e12[$`5esn`..$123456789],`8esn`:$usn2 =~9e1})) Return Distinct .e0 Ends With $123456789 Ends With 0xabc Limit 's_str' Starts With 1e1 Starts With $0"),
    octest:ct_string("Create _usn3=(((:usn2{`6esn`:`4esn` Starts With 0e0,`8esn`:usn2[12e12..]['s_str'..]})<-[:`2esn`|`4esn` *12..]-(_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]}))),_usn4=(({usn2:`2esn`[..$_usn3]})) Union All Optional Match ``=(`5esn` {`2esn`:`1esn`[0.0..1e1][0x0..7],#usn8:.e0}) Remove Any(#usn7 In 9e1[$`1esn`..] Where 1.e1[12.e12..]).@usn6?,@usn5(Distinct Count ( * ) Ends With $123456789).`6esn`? Unwind 00[False..0e0] As `6esn`"),
    octest:ct_string("Match (({`8esn`:.e0[999..1000][1e1..$`8esn`],`1esn`:$`3esn`[$_usn4..0Xa]})-[usn2?:`3esn`]->(`8esn` :@usn6{`7esn`:0e0[999..$``]})),((#usn7 {`6esn`:$`2esn` Contains Count(*)})-[?:_usn4]->(`2esn` :usn2)) Where 12e12 Contains `2esn` With  $@usn6[..12] As #usn8,Single(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`)[{`5esn`:`6esn`[$`8esn`][9e1]}] As `7esn` Order By $@usn5 In 12e12 In 01 Ascending Limit Any(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null)[..`4esn`][..(usn2 :_usn3)-[`6esn`?:`6esn`|:#usn8]-(`1esn` {_usn4:`8esn` Is Null})<-[`7esn`?:#usn8|:`3esn`]-(_usn4 :`3esn`)] Where _usn3 Starts With 12e12 Starts With `5esn` Optional Match `8esn`=((@usn6 {usn1:$`1esn` Starts With $`4esn` Starts With $_usn3}))"),
    octest:ct_string("Unwind {usn2:$@usn6[00]}[..[123456789 =~$999,$`2esn` Ends With `6esn`,12.e12 Contains 9e1]][..[12e12 Starts With $0 Starts With $`2esn`,$_usn3 Is Null]] As `5esn` Union All Create ((`2esn` {`7esn`:999 In 0e0})<-[? *0X7..{`2esn`:$@usn5 In $`6esn` In 12e12}]-(:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]})<-[`7esn`?:#usn8|:`3esn`]-(_usn4 :`3esn`)),#usn8=((:@usn5{`5esn`:`4esn` Starts With 0e0})) Create ((:`3esn`{`7esn`:0.e0['s_str'..][01234567..]})<-[#usn8 *0x0..]->(_usn3 :usn2{#usn8:$`2esn` Is Null,_usn3:123.654 Is Not Null})<-[?:usn1|`4esn` *1000..0X0123456789ABCDEF{`6esn`:.e0[999..1000][1e1..$`8esn`],`4esn`:00 Ends With `` Ends With 12.e12}]-({`1esn`:usn2 Contains $0 Contains .0,_usn4:$@usn6[.0..][0e0..]})) With  `2esn`[$12..] As @usn6 Order By 0x0[``..] Asc,None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where @usn6 In .12 In `3esn`) Is Null Descending,usn1[_usn3..] Descending Skip $7 Starts With $`4esn` Where `1esn` Starts With 0xabc Starts With $usn2 Union Remove @usn6(Distinct .12[123.654..],`2esn` In 7).``,All(#usn7 In $999 In 1e1 Where _usn4 Contains `` Contains 1.e1).`5esn`!,@usn5:`8esn`"),
    octest:ct_string("Unwind 07 =~`4esn` =~$`1esn` As usn1 Remove [#usn7 In True Contains 's_str' Contains $usn1 Where $#usn7[..$`4esn`][..01]|1.e1 Is Null Is Null].#usn7?,(#usn8 :`2esn`)<-[usn1:`7esn`|:`2esn`{`6esn`:Count(*) In #usn8 In \"d_str\",`1esn`:$`1esn` Ends With 0X0123456789ABCDEF}]-(`6esn` :`1esn`:_usn4)-[#usn7:#usn8|:`3esn`{`6esn`:0.e0[$`4esn`..`2esn`],_usn3:7[12]}]-(:`6esn`:_usn3{`6esn`:`2esn` Starts With $`7esn`}).`8esn`!,`1esn`(Distinct `3esn`[7..0.e0][0.0..123456789],`1esn` Starts With 0xabc Starts With $usn2)._usn4! Unwind Extract(#usn7 In 9e1[$`1esn`..] Where $999[``]) Starts With (`6esn` :@usn6)<-[ *..07]-(:_usn3{`7esn`:9e0 Ends With $#usn8}) Starts With (#usn7 :@usn6)<-[? *01..123456789]-(`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]}) As usn1 Union All Detach Delete _usn4(Distinct 0X0123456789ABCDEF Ends With 01 Ends With ``,$`3esn`[..0xabc][..$7]) Contains `1esn`(999 Is Null Is Null) Contains (:`2esn`{usn1:.0[..'s_str'][..01234567],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})<-[usn1:_usn4]-(#usn7 :@usn6) Union All Create `7esn`=(((`7esn` {usn2:0X7[..$`8esn`],`1esn`:123.654 Is Not Null})<-[ *12..{`8esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}]-(`5esn` :`1esn`:_usn4)-[:`6esn`|:#usn8{``:`1esn` Starts With 0xabc Starts With $usn2}]-(_usn3 :`2esn`{@usn5:`4esn` Is Not Null Is Not Null}))),`2esn`=((`6esn` :#usn7:`5esn`)<-[?:#usn7|@usn5 *01234567..{`5esn`:$`4esn` In 1.e1 In #usn7}]->(:#usn8:`1esn`$`7esn`)) Create `6esn`=(`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null})<-[@usn6:`1esn`|`3esn` *0X7..]->(_usn3 :`4esn`:`6esn`{usn2:`4esn` Starts With 0e0,`3esn`:7[12]}),(:`8esn`{#usn7:`1esn`[`3esn`..],usn2:_usn3[$usn2..][$``..]})<-[`7esn`:`2esn`|`4esn`{_usn4:.e1[7..][9e0..]}]-(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"})<-[? *0X7..{`2esn`:$@usn5 In $`6esn` In 12e12}]-(`3esn` :_usn4{`3esn`:12[..0e0][...e1],`4esn`:.0 Is Null Is Null})"),
    octest:ct_string("Unwind (:`2esn`)-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})-[@usn6? *0X0123456789ABCDEF..{``:0xabc[..$1000][..`5esn`],``:$`1esn` Contains 1e1 Contains @usn6}]-(`5esn` :@usn5) Is Null Is Null As `4esn` Union Delete $`3esn`[.e1][_usn4],None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 9e12[$`5esn`..$123456789]) In Extract(@usn5 In 's_str'[0..] Where 07 Ends With 9e12 Ends With `2esn`|00[01234567][False]) In [12 =~usn1] Create @usn6=((({`2esn`:9e12[$`5esn`..$123456789],`8esn`:$usn2 =~9e1})<-[_usn3:`3esn`{`5esn`:_usn4[0]}]->(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]-(`8esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07}))),`6esn`=((_usn3 {`6esn`:@usn5[$`6esn`..][$999..],`8esn`:$@usn5[..0xabc][..$`3esn`]})<-[``:`5esn`|:usn2{`5esn`:_usn4[0]}]-(`2esn` {``:$0 =~9e1 =~$`2esn`,`8esn`:`5esn`[..123.654][...e12]}))"),
    octest:ct_string("Merge `1esn`=((`6esn` {`3esn`:$`2esn`[0..123456789][``..`1esn`],`7esn`:$0[0Xa..$123456789]})<-[? *00..0Xa]->(usn2 :@usn5)-[?:`2esn`|`4esn` *0Xa{#usn7:1.e1 Starts With 9e12}]-(:`4esn`:`6esn`{@usn5:$#usn7[..9e0][..123.654],`2esn`:7[12]})) On Create Set `3esn`+=$@usn6 Is Not Null Is Not Null,[$usn2 Is Not Null Is Not Null,0 =~1e1].`3esn`? =$1000[0X0123456789ABCDEF][12] On Match Set `2esn` =`3esn`[..0X0123456789ABCDEF][..0x0]"),
    octest:ct_string("Detach Delete Extract(`6esn` In $`6esn`[``..][Count(*)..] Where $@usn5 Starts With `5esn` Starts With 01234567|0.e0[..$7]) Is Null Is Null Optional Match `1esn`=(`5esn` :`5esn`{#usn7:``[$`3esn`]}) Where $`8esn`[..True][.._usn4]"),
    octest:ct_string("Delete `2esn`[$usn2][12.0],{`1esn`:`2esn` Is Null,`7esn`:`` =~.12}[Single(#usn7 In True Contains 's_str' Contains $usn1 Where `5esn` Contains $`5esn` Contains 0X7)..],(:``:usn2{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7})-[:`2esn`|`4esn`{_usn3:@usn6[`1esn`..],@usn6:@usn6[9e12]}]->({usn1:$#usn7 =~`2esn`})-[`3esn`?{@usn6:Count(*)[..@usn6][..`7esn`],`6esn`:`2esn` In 9e0 In 7}]->(`8esn` :@usn6{`7esn`:0e0[999..$``]})[{`6esn`:$`4esn`[`6esn`..$12],usn1:00 In @usn6 In 0}..][Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 123456789[12])..] Unwind [$`3esn` Ends With 01234567][..{`3esn`:`6esn` Starts With `6esn`}][...e1] As `1esn`"),
    octest:ct_string("With  12.e12[..$`6esn`] As `7esn`,Extract(usn2 In 7[12] Where $@usn5[0.0][0X0123456789ABCDEF])[[#usn7 In 9e0[$1000] Where 01 Ends With 0Xa Ends With 0X7|`2esn`[$usn2][12.0]]..][Filter(#usn8 In `7esn` Where @usn6[999..$_usn3][0.12..$@usn5])..] As ``,1.e1 Contains `6esn` Contains 0.e0 Skip Any(usn2 In 7[12] Where 0X7[.0])[Any(`6esn` In $`6esn`[``..][Count(*)..] Where $7 In $usn1 In 999)..#usn8(Distinct $_usn4 Is Null Is Null,01[`8esn`..9e12][.12..0])] Where 999 Contains $1000 Detach Delete Extract(#usn8 In `7esn` Where ``[7.._usn3]|@usn5 Is Null) Is Not Null Is Not Null,010 Starts With $`` Starts With 0e0"),
    octest:ct_string("Return 010 Starts With $`` Starts With 0e0,$#usn8 Ends With `` Ends With 999 As _usn3,$@usn5 Ends With @usn5 Ends With 0xabc Skip None(#usn7 In $999 In 1e1 Where 01234567[Null..$_usn3]) Ends With Extract(#usn8 In `7esn` Where $`5esn` Is Not Null Is Not Null) Limit `6esn` In .12"),
    octest:ct_string("Merge (@usn5 :@usn6{`2esn`:12e12 =~1e1,``:12.e12 Contains #usn7 Contains $_usn4})<-[`8esn` *0xabc]-(:_usn3{_usn4:.e1[7..][9e0..]}) On Match Set Single(@usn6 In 010[`5esn`] Where 123.654).`6esn`? =0.e0[0X0123456789ABCDEF..],(:`4esn`:`6esn`{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7})<-[usn2?:@usn5|_usn3*{_usn4:@usn5 Starts With $`3esn`,#usn7:$`5esn` Is Not Null}]-(#usn7 :``:usn2)-[:_usn3|:`7esn` *1000..0X0123456789ABCDEF]->(:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]}).`3esn`? =999[..`1esn`][..07],[@usn6 In 010[`5esn`] Where @usn6 Contains .12 Contains $usn1].`6esn` =`7esn` Starts With @usn5 Detach Delete 0.12 Contains False Contains 1.e1 Union All Unwind 01 Contains usn2 Contains 0X0123456789ABCDEF As usn2 Detach Delete All(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07[_usn3..][`6esn`..]) =~All(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where .e12[..999][..@usn5]) =~Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4),`4esn`[.12][$@usn6]"),
    octest:ct_string("Unwind $0 Ends With $usn1 Ends With $_usn3 As `` Return Distinct Filter(`6esn` In $`6esn`[``..][Count(*)..]) Ends With None(`5esn` In 0X7 In $#usn7 Where 12.0 Is Null Is Null),9e1[usn1..0x0][12.e12..12.0] Order By 00[12e12][$`7esn`] Ascending,@usn5[0..] Descending,Single(`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]) Is Not Null Is Not Null Descending Limit 0.e0[$`4esn`..`2esn`] With Distinct *,`5esn`[$`7esn`..$@usn5],`7esn`(Distinct `1esn` Starts With 0xabc Starts With $usn2)[({`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12})-[`6esn`?:@usn5|_usn3 *01234567..]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})..] As #usn7 Order By 1000[..$1000] Asc,`7esn` Is Null Asc,#usn7 Desc Limit 010 Is Null Union All Delete $_usn4[..123456789],.e1 In 123456789 Union All Remove Filter(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $#usn7 Starts With 01234567 Starts With $0).usn2! Unwind Extract(`8esn` In 123456789 =~@usn6 Where 123.654[`4esn`..12]|`8esn` Contains Count(*) Contains $#usn7)[{`7esn`:usn1[False..`5esn`][$1000..$12],`1esn`:$usn1[`2esn`..][$`2esn`..]}] As #usn8 Match `6esn`=(`` :`5esn`{@usn5:123456789 =~@usn6})"),
    octest:ct_string("Merge usn2=(`3esn` {usn2:$usn2[`4esn`..9e12]}) Union All Merge _usn3=(:`1esn`:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null})<-[`4esn`:usn2]->(`3esn` :_usn4) On Match Set `8esn` =[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 12.e12 Starts With \"d_str\" Starts With 9e1|$#usn7 Contains $`7esn` Contains .e12][#usn8(Distinct $_usn4 Is Null Is Null,01[`8esn`..9e12][.12..0])..[_usn4 In 12e12 In 123456789 Where Count ( * ) Ends With $123456789]][Filter(_usn4 In 12e12 In 123456789 Where $`5esn` =~usn1)..[$`5esn` In _usn3 In 0.0]] With Distinct #usn7[`8esn`..usn1][$999..`7esn`] As _usn3,All(#usn7 In 9e1[$`1esn`..] Where 12 =~usn1)[Extract(#usn7 In $999 In 1e1)..][1.e1..],12e12 Starts With $0 Starts With $`2esn` Order By Extract(`8esn` In 123456789 =~@usn6 Where 123.654[`4esn`..12]|`8esn` Contains Count(*) Contains $#usn7)[..[#usn7 In True Contains 's_str' Contains $usn1 Where Count(*) Ends With usn1]][..Filter(usn2 In 7[12] Where #usn7[0.e0..]['s_str'..])] Ascending,{@usn5:`6esn`[$1000][`3esn`]}[All(`3esn` In `2esn`[..01][..True] Where 0Xa =~False =~@usn5)..] Asc,usn2[1.e1] Descending Skip $``[01234567..][.0..] With Distinct *,$`1esn` Starts With Count(*) Limit `7esn`[..$`6esn`] Union All Merge ((:_usn4{`1esn`:0e0 =~0Xa =~$999})<-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]-(`` :`5esn`{@usn5:123456789 =~@usn6})<-[`1esn`?:usn1|`4esn` *..010]-(usn1 :_usn4{`4esn`:`7esn` Is Null})) Merge (_usn4 :_usn4{`2esn`:`6esn` Starts With `6esn`,`8esn`:1000[0e0][1e1]}) On Create Set `7esn` ={usn2:_usn3[0x0]} In Extract(#usn7 In 9e0[$1000] Where $_usn3 Is Null|010 Starts With 0 Starts With 0.0) In {`7esn`:False[$`4esn`..]} On Match Set [_usn4 In 12e12 In 123456789 Where Count ( * ) Ends With $123456789|9e1 Ends With Count(*) Ends With $7]._usn4 =$`5esn`[0X7..010][`7esn`..'s_str'],@usn5+=(#usn7 {_usn4:1.e1[`8esn`]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) =~Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12) =~{usn2:#usn8[`8esn`..]},usn2+=999[12e12..$_usn4] Create (((usn2 {`5esn`:$@usn6 Ends With `1esn`})<-[`2esn`? *01..123456789]-(@usn6 :``:usn2{usn1:0x0[0X7],@usn5:`4esn`[.12][$@usn6]})<-[? *7..{`1esn`:12[..$999][..$`2esn`],usn2:9e1}]-(#usn7 :``:usn2)))"),
    octest:ct_string("Create ((:@usn5{usn2:$#usn7[..$`4esn`][..01],#usn7:False Is Null})<-[``?{usn2:$7 In 0.e0 In 999,usn1:'s_str' Starts With 9e0 Starts With usn2}]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0})),(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}) Optional Match @usn5=(:@usn5{#usn7:12e12 In $`5esn`})<-[?{``:00 Contains Count ( * ) Contains 0x0,#usn8:123.654 In $`7esn`}]-(:usn2{``:0.0 =~9e0 =~$0})-[?*]-({`8esn`:`5esn` Contains #usn7 Contains 9e12}) Where 9e1 Contains 12 Return Distinct *,.0 Contains .e12 Contains 0,1e1 Is Null Is Null As usn2 Union Detach Delete 9e0[$`8esn`],`5esn` Contains #usn7 Contains 9e12,12 Is Null Match @usn6=((`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})) Where 7[0e0..] Detach Delete (`4esn` :#usn7:`5esn`{_usn4:0Xa Ends With $`3esn` Ends With $1000})-[@usn6:#usn8|:`3esn`]->({@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]})[[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07[_usn3..][`6esn`..]|`1esn`[0.12..][@usn6..]]..][{``:07[$`2esn`..9e12][$`4esn`..9e12],`3esn`:$`6esn` Starts With .e12 Starts With $`1esn`}..],07 Contains `3esn` Contains `7esn`,Any(#usn7 In True Contains 's_str' Contains $usn1 Where `6esn` Starts With `6esn`) =~Single(#usn7 In $999 In 1e1 Where _usn4 Contains `` Contains 1.e1) Union Create _usn3=((:`1esn`:_usn4{_usn3:0x0 Contains $`6esn` Contains `4esn`,@usn6:0Xa In #usn7 In 's_str'})-[#usn8:#usn7|@usn5 *123456789..{@usn5:usn2[12.e12..]}]->(`` )<-[:`2esn`|`4esn` *12..]-(_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})),usn2=((`` :`3esn`{`6esn`:Count(*)[9e12..12.0]})<-[`6esn`? *00..0Xa]->(#usn7 :#usn8:`1esn`{``:.0[$``..0X7]})-[usn2?{``:$`1esn`[``][07]}]-(`3esn` :`6esn`:_usn3{`4esn`:12.0 Starts With .12 Starts With `6esn`,#usn8:0.0 Is Null Is Null})) Create usn1=((`` )<-[usn2?:`6esn`|:#usn8 *999..]-(`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})<-[?:usn2{usn2:@usn5 Is Not Null}]-(`7esn` {#usn8:False Starts With 0X7 Starts With 01234567})),((`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})) Merge (({`7esn`:0xabc In Null,_usn4:.e12[0Xa..]})<-[usn1?:`1esn`|`3esn` *01234567..{@usn5:`4esn`[\"d_str\"]['s_str']}]-({`7esn`:9e0 Contains $12 Contains `3esn`,`5esn`:.e0 Contains $#usn8}))"),
    octest:ct_string("Delete $0 =~9e1 =~$`2esn` Remove [$`4esn`[0..][999..],$usn2 Is Not Null Is Not Null,$`5esn` In _usn3 In 0.0].`2esn`! Create `3esn`=((:#usn8:`1esn`$`7esn`)<-[`1esn` *999..{`1esn`:1e1 Contains 's_str' Contains `3esn`}]-(usn1 {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(#usn7 :``:usn2)),usn2=(`3esn` {usn2:$usn2[`4esn`..9e12]})"),
    octest:ct_string("Remove Filter(`8esn` In 123456789 =~@usn6 Where True[`3esn`]).`8esn`?,Single(`8esn` In 123456789 =~@usn6 Where @usn6 Is Not Null Is Not Null).`1esn`?,Single(#usn7 In 9e1[$`1esn`..] Where 1.e1[12.e12..]).`6esn`! Optional Match (({`3esn`:_usn3[0x0],`3esn`:00[False..0e0]})<-[_usn4?:@usn6|:`7esn`]-({`3esn`:_usn3[0x0],`3esn`:00[False..0e0]})<-[_usn3?:_usn3|:`7esn`]->(`3esn` {`8esn`:`7esn` In 010 In usn1})) Where _usn3 Ends With 7 Ends With $`1esn` Merge (@usn6 :`2esn`{_usn3:$``[7],`7esn`:_usn3 Ends With 7 Ends With $`1esn`}) On Create Set All(usn2 In 7[12] Where `2esn`[$12..]).#usn8? =[#usn7 In 9e1[$`1esn`..] Where $@usn5 In $`6esn` In 12e12|12.0 Is Null Is Null] Contains [`3esn` In `2esn`[..01][..True] Where $0 Ends With $usn1 Ends With $_usn3],Extract(@usn6 In False Contains 0 Contains $`6esn` Where $0 Ends With $usn1 Ends With $_usn3|01 In $@usn6).`7esn`? ={`3esn`:.e1[..\"d_str\"][..$123456789]},[$`5esn` =~usn1,@usn6 Contains .12 Contains $usn1,999 In #usn8 In $``]._usn3 =[9e1 Ends With Count(*) Ends With $7,False[$usn1][0x0]] =~`2esn`(Distinct .12[01][@usn5],Count ( * ) Ends With $123456789) =~[@usn6 In False Contains 0 Contains $`6esn` Where $`8esn`[12.e12][_usn4]|12 Ends With Count ( * )] On Match Set `5esn` =0.e0[0X0123456789ABCDEF..]"),
    octest:ct_string("Remove {`6esn`:Null =~`6esn`}._usn3!,[usn2 In False[$usn1][0x0] Where `4esn` Starts With 0e0].`6esn`!,[010[`5esn`],0Xa[..Count ( * )][..$123456789]]._usn3 Unwind [#usn8 In `7esn` Where .e0 Starts With $@usn6 Starts With $7|1000[12e12][`5esn`]] Ends With [`3esn` In 9e1 Contains $999 Where .12 In `8esn` In $#usn8] Ends With [$``[..\"d_str\"][..$#usn8],$_usn4 Starts With $1000 Starts With 12,#usn7[.e0]] As `8esn`"),
    octest:ct_string("Unwind usn2[12.e12..] As usn2 Create `7esn`=((`6esn` :`5esn`)<-[:`1esn`|`3esn` *0Xa{_usn4:``[9e12][$999],#usn8:123.654 In 12}]-(`5esn` :`4esn`:`6esn`)) Union Optional Match ``=(((_usn3 {`6esn`:@usn5[$`6esn`..][$999..],`8esn`:$@usn5[..0xabc][..$`3esn`]})<-[`2esn`? *01234567..]->(:`2esn`)-[`2esn`? *..07{`2esn`:`3esn`[0x0..]}]->({`7esn`:999 In 0e0}))) Create #usn8=((_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})<-[`8esn`?:`` *01234567..$usn1]->(:_usn4)),`5esn`=(({`7esn`:1.e1 In 1000 In _usn3,`8esn`:010 Starts With $`` Starts With 0e0})<-[:#usn8|:`3esn` *12..{`8esn`:12 Ends With Count ( * ),usn2:Count ( * ) In True In @usn5}]->(#usn8 :``:usn2)-[:_usn3|:`7esn`*{`1esn`:12[..$999][..$`2esn`],usn2:9e1}]->(:``:usn2{`5esn`:$12 Starts With $usn1}))"),
    octest:ct_string("Remove {@usn5:0e0 Starts With 999 Starts With `2esn`,#usn7:Count ( * ) In 0.12}._usn4,Any(usn2 In 7[12] Where 123456789 =~12 =~'s_str').`3esn`?,{`2esn`:`7esn` Is Null}.`6esn`! With Distinct [#usn7 In 9e1[$`1esn`..] Where $@usn5 In $`6esn` In 12e12|12.0 Is Null Is Null] Contains [`3esn` In `2esn`[..01][..True] Where $0 Ends With $usn1 Ends With $_usn3] As #usn8 Order By [#usn7 In $999 In 1e1 Where 0X7['s_str'..][01..]] Is Not Null Is Not Null Desc Limit Any(`5esn` In 0X7 In $#usn7 Where 0.12 Contains False Contains 1.e1) Contains 0X7 Contains Extract(`8esn` In 123456789 =~@usn6 Where @usn5 Contains 9e0|9e0 Contains $12 Contains `3esn`) Optional Match usn2=(`8esn` :`6esn`:_usn3),#usn8=(((`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[@usn6?:`7esn`|:`2esn`]->({#usn8:1e1 Is Not Null Is Not Null})-[?:@usn5|_usn3{`1esn`:`2esn` Is Null,`7esn`:`` =~.12}]-(`4esn` :#usn8:`1esn`{`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12}))) Union Optional Match `1esn`=((#usn8 :`6esn`:_usn3)<-[@usn5?:``{`3esn`:010 Is Null Is Null,`5esn`:_usn4 Contains `` Contains 1.e1}]-(:@usn6{`7esn`:$`6esn`[``..][Count(*)..]})),usn2=((#usn7 {`8esn`:`7esn` In 010 In usn1})<-[usn1]->(:`6esn`:_usn3{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})<-[:`8esn` *999..{@usn6:`7esn` Ends With $7 Ends With $@usn5,``:0e0 Starts With 999 Starts With `2esn`}]->(`1esn` :@usn6{`6esn`:00[False..0e0],`6esn`:$usn2 =~1.e1 =~usn1})) Create (#usn7 {`6esn`:$`2esn` Contains Count(*)})<-[?:`7esn`|:`2esn`]->(#usn8 :usn1:`3esn`{`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[usn1:_usn4]-(`` {_usn3:`5esn` Contains `7esn`}) Union All Create (_usn4 :@usn5{usn1:$#usn7 Starts With 01234567 Starts With $0})<-[`8esn` *0xabc{#usn8:12.0 Starts With .12 Starts With `6esn`,@usn5:_usn3[`5esn`..][usn2..]}]->(#usn7 {`8esn`:`7esn` In 010 In usn1})"),
    octest:ct_string("Match ({_usn3:$12[9e0..$999],#usn7:0.0 Contains `3esn` Contains @usn5})-[#usn7?:`7esn`|:`2esn` *..07]-(#usn7 {#usn7:1.e1 Starts With 9e12}),#usn8=((#usn7 :_usn3$usn1)<-[`4esn`?:usn1|`4esn`{`3esn`:123.654[..0.e0][..'s_str'],@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]}]->({`3esn`:`2esn` In 9e0 In 7})) Create ((:`1esn`:_usn4{_usn3:0x0 Contains $`6esn` Contains `4esn`,@usn6:0Xa In #usn7 In 's_str'})<-[:@usn6|:`7esn`{usn2:0x0 Starts With $`6esn`,_usn4:$`4esn`[`8esn`]}]-(@usn6 {@usn6:0e0 =~7 =~12.0})<-[:`8esn` *0X7..]->(`2esn` :`6esn`:_usn3{usn2:0e0 =~0Xa =~$999,`4esn`:@usn6[9e12]})),(((`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`})-[?:_usn4]->(:`5esn`{`4esn`:0Xa[..Count ( * )][..$123456789]})<-[?:`` *0..01]->({`2esn`:9e12[$`5esn`..$123456789],`8esn`:$usn2 =~9e1}))) Unwind #usn7[0.12..] As `8esn` Union All Merge `1esn`=((`2esn` {`4esn`:1000[12e12][`5esn`],`1esn`:07 Ends With 9e12 Ends With `2esn`})) On Match Set (:``:usn2{`4esn`:#usn7 Contains $0 Contains $usn2})<-[:`8esn` *0X7..]->(`4esn` :#usn7:`5esn`{@usn5:$`` Contains $`2esn` Contains $usn2})<-[`2esn`? *01..123456789]-(`2esn` :@usn6).`8esn` =`7esn`[1e1] Delete True Contains 's_str' Contains $usn1 Unwind 12['s_str'][01] As `6esn`"),
    octest:ct_string("Detach Delete 0.0 Ends With $`7esn`,123.654 Is Null Is Null,1000 Contains [True Contains 0x0 Contains $_usn3,_usn3 Contains 9e12 Contains `8esn`] Contains [12.0 In 123.654 In _usn4] Detach Delete (`2esn` :usn1:`3esn`)-[@usn5:`5esn`|:usn2 *0Xa{#usn7:`7esn`[$usn2..][$123456789..]}]-({`7esn`:9e0 Contains $12 Contains `3esn`,`5esn`:.e0 Contains $#usn8})<-[?:`3esn`]-(`8esn` :#usn8:`1esn`{usn2:12.e12 Ends With $``,`2esn`:1e1 Contains 's_str' Contains `3esn`})[({usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]})],0X7 In $#usn7,Single(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 999 Contains $1000)[(`6esn` :@usn6)<-[ *..07]-(:_usn3{`7esn`:9e0 Ends With $#usn8})][#usn8($1000 Is Not Null,$`5esn`[0X7..010][`7esn`..'s_str'])]"),
    octest:ct_string("Return Distinct 9e1 Ends With Count(*) Ends With $7 As `6esn` Limit _usn3 Contains 9e12 Contains `8esn` Union All Detach Delete `2esn`($`2esn`[..$`3esn`][..12e12])[usn1($0[123.654..0.e0])..'s_str'][.e12..Single(#usn7 In $999 In 1e1 Where _usn4 Is Not Null Is Not Null)],$0 In `3esn` In 07 Unwind .0[$``..0X7] As usn1"),
    octest:ct_string("Unwind True[$_usn3..] As usn2 Union Return Distinct $`3esn`[$_usn4..0Xa] As #usn7,Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn` Contains .e0 Contains 0Xa) As `3esn`,$`5esn`[$`3esn`..] As `4esn` Limit $`` Is Not Null Is Not Null Union All Merge (((:#usn8:`1esn`{_usn3:9e0[0X7..$`6esn`][123456789..0],`3esn`:123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]})-[#usn7?{`5esn`:.e12 Starts With $#usn8 Starts With False}]->(`5esn` {`4esn`:0x0[usn1..usn1],usn1:$`5esn`[0X7..010][`7esn`..'s_str']})<-[? *..010{#usn8:False Is Null}]->(#usn7 {#usn7:1.e1 Starts With 9e12}))) On Create Set {usn1:$_usn4 Starts With $1000 Starts With 12}.@usn6! =[1e1 Is Not Null Is Not Null,``[$`3esn`],$`8esn` Is Not Null Is Not Null][..[$usn1 Ends With _usn4 Ends With `2esn`]][..Extract(usn2 In False[$usn1][0x0] Where .e1[usn2..$_usn3][.0..$#usn7])] On Match Set [$usn2 =~9e1,$`6esn` Is Null].`8esn`? =(usn2 :usn1:`3esn`{`3esn`:`2esn` Is Null})<-[:`8esn` *999..{@usn6:`7esn` Ends With $7 Ends With $@usn5,``:0e0 Starts With 999 Starts With `2esn`}]->(`6esn` :#usn7:`5esn`)<-[usn1:`1esn`|`3esn`]->(`1esn` {#usn8:$#usn7[..9e0][..123.654],`5esn`:9e12 Starts With 1e1}) =~(`7esn` {#usn7:$@usn6 Ends With `1esn`})<-[#usn8 *0x0..]->(_usn3 :usn2{#usn8:$`2esn` Is Null,_usn3:123.654 Is Not Null})-[? *0X0123456789ABCDEF..]-(usn2 :_usn3),usn2 =$@usn5 Ends With @usn5 Ends With 0xabc,#usn8+=$`1esn` Starts With Count(*) With  `1esn`[`3esn`..],(`3esn` {usn2:00[False..0e0]})<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(:`5esn`{#usn8:$``[True],`1esn`:@usn5 Is Null})<-[@usn6?:`8esn` *0..01]->(`5esn` :`4esn`:`6esn`)[[12.0 Starts With $`2esn` Starts With .e1]..] Skip 07 In 0Xa In usn1 Limit 010 Is Null With Distinct 0X0123456789ABCDEF[0X7..$`2esn`][$`5esn`..$usn2] As #usn8,(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})<-[?:`7esn`|:`2esn`]->(#usn8 :usn1:`3esn`{`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[ *01234567..]->(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12}) Contains [7[12],00[$`1esn`..][@usn6..],`5esn` Contains #usn7 Contains 9e12] Contains {_usn3:$@usn6[00],`2esn`:0.12 Is Null Is Null},$#usn7 =~`2esn` As `4esn` Limit Filter(`6esn` In $`6esn`[``..][Count(*)..]) Ends With None(`5esn` In 0X7 In $#usn7 Where 12.0 Is Null Is Null)"),
    octest:ct_string("Unwind 9e1 In $#usn7 In Count(*) As #usn7 Remove #usn8(Distinct 0X0123456789ABCDEF Contains 12e12 Contains 12.e12,Count(*) Starts With usn2 Starts With `7esn`).usn1,Single(@usn5 In 9e0 Ends With $#usn8 Where 0Xa[$`8esn`..][$_usn4..]).#usn7?,Any(_usn4 In 12e12 In 123456789 Where `3esn`[7..0.e0][0.0..123456789]).`8esn`! Merge `6esn`=(:@usn5{`1esn`:999 Is Not Null Is Not Null,``:.e1[7..][9e0..]})<-[? *0X7..{`2esn`:$@usn5 In $`6esn` In 12e12}]-(:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]}) Union All Remove [00[..$`8esn`][..7],_usn4 Starts With `` Starts With 1000,.e0].`1esn`?,_usn3:``:usn2 With Distinct 0X0123456789ABCDEF[0X7..$`2esn`][$`5esn`..$usn2] As #usn8,(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})<-[?:`7esn`|:`2esn`]->(#usn8 :usn1:`3esn`{`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[ *01234567..]->(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12}) Contains [7[12],00[$`1esn`..][@usn6..],`5esn` Contains #usn7 Contains 9e12] Contains {_usn3:$@usn6[00],`2esn`:0.12 Is Null Is Null},$#usn7 =~`2esn` As `4esn` Limit Filter(`6esn` In $`6esn`[``..][Count(*)..]) Ends With None(`5esn` In 0X7 In $#usn7 Where 12.0 Is Null Is Null) Return *,1e1 Contains 0.e0 Contains 9e1,`1esn` Starts With 9e1 As `6esn` Order By 010 Contains .e1 Asc,(:`6esn`:_usn3{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]})<-[#usn7 *01..123456789]->(`6esn` :usn1:`3esn`) Ends With Extract(#usn8 In `7esn` Where 9e12[..1e1][..'s_str']) Ends With [_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 123.654 Is Not Null|$`2esn`[.0..][0.0..]] Descending"),
    octest:ct_string("Detach Delete `7esn`[$usn1..]['s_str'..],None(#usn8 In `7esn` Where $`3esn` Contains $`1esn`) Starts With #usn8(0x0[Count(*)..@usn6][Count(*)..0Xa]),(usn2 :_usn3)-[`6esn`?:`6esn`|:#usn8]-(`1esn` {_usn4:`8esn` Is Null})<-[`7esn`?:#usn8|:`3esn`]-(_usn4 :`3esn`) Is Null Merge ({`7esn`:`4esn` Is Not Null Is Not Null,`4esn`:`4esn` Ends With 12 Ends With .12})<-[`5esn`?:`7esn`|:`2esn` *0x0..]-(`4esn` :#usn7:`5esn`{@usn5:$`` Contains $`2esn` Contains $usn2}) On Match Set _usn3 =Single(usn2 In 7[12] Where `7esn` Is Null)[..Single(`6esn` In $`6esn`[``..][Count(*)..] Where $7 In $usn1 In 999)][..Any(#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4)] Remove Any(`6esn` In $`6esn`[``..][Count(*)..] Where False Contains 0 Contains $`6esn`).usn1!,{`1esn`:`1esn`[$@usn6][07]}.`1esn` Union Unwind $@usn6[_usn3..][$999..] As `4esn` Optional Match `8esn`=(:`4esn`:`6esn`{usn2:$`8esn` Is Not Null Is Not Null})<-[@usn5? *0..01{`3esn`:$`1esn` In .e0,@usn6:12.0 =~@usn6 =~$`2esn`}]->({usn2:.0 Starts With `1esn`,`2esn`:00 Contains Count ( * ) Contains 0x0})-[? *0Xa{usn1:`3esn`[0x0..]}]->(:`5esn`{`1esn`:0.e0}) Where $999 Ends With .e0 Union All Unwind $123456789[.0..] As `7esn`"),
    octest:ct_string("Merge @usn6=((({`2esn`:9e12[$`5esn`..$123456789],`8esn`:$usn2 =~9e1})<-[_usn3:`3esn`{`5esn`:_usn4[0]}]->(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]-(`8esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07}))) On Match Set `1esn` =Filter(`8esn` In 123456789 =~@usn6 Where 123.654[`4esn`..12])[..Extract(#usn7 In $999 In 1e1 Where 1000[12e12][`5esn`])][..[@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``|.e0 =~Null]],#usn8(Distinct 12.0[$1000..][#usn7..],0xabc In Null).`2esn` =0.e0 Starts With usn1 Union All Create #usn7=(`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12}),({`1esn`:1.e1[`8esn`]})<-[#usn8?:`8esn`{`1esn`:999 In #usn8 In $``,`8esn`:False[$`4esn`..]}]->({usn1:$123456789 In 0.12}) Return Distinct `2esn` Starts With 12.e12 Starts With 12.0 As #usn8,$_usn3 Is Not Null Is Not Null Skip `1esn`[$@usn6][07] Limit $1000 Is Not Null"),
    octest:ct_string("Delete 0xabc =~@usn5 =~$usn1,[$usn1 Ends With _usn4 Ends With `2esn`][@usn5(Distinct 12e12 In 123456789,12.0 =~@usn6 =~$`2esn`)..[#usn7 In $999 In 1e1 Where 9e12 Starts With 1e1]][Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 12[$`5esn`..][False..])..Extract(#usn7 In 9e1[$`1esn`..] Where $999[``])],1000[$7..][_usn4..] With  $1000 Starts With $`3esn` Starts With 0.e0 As @usn6,.e12 In $`5esn` In 0X7 As _usn4 Order By 1.e1 In 1000 In _usn3 Desc,None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 9e12[$`5esn`..$123456789]) In Extract(@usn5 In 's_str'[0..] Where 07 Ends With 9e12 Ends With `2esn`|00[01234567][False]) In [12 =~usn1] Descending,123.654 Is Null Is Null Asc Where _usn4[`7esn`] Union All Unwind Filter(@usn5 In 's_str'[0..] Where #usn7[0.12..]) =~[_usn4 In 12e12 In 123456789 Where .0 Ends With Count ( * )|$`1esn` In .e0] As @usn5 Merge @usn6=((`5esn` {``:_usn3 Contains 9e12 Contains `8esn`,@usn6:``[7.._usn3]})<-[@usn5?:usn2 *00..0Xa{usn2:$usn2[`4esn`..9e12]}]->(:`3esn`{_usn3:1e1 Is Not Null Is Not Null,`2esn`:$usn1 Starts With usn1 Starts With True})-[usn2?:`5esn`|:usn2{`2esn`:`7esn`[$usn2..][$123456789..],@usn5:9e1 Starts With Count ( * )}]->(usn2 :usn1:`3esn`)) On Match Set [#usn8 In `7esn` Where 01 Ends With 0Xa Ends With 0X7|`8esn` Contains Count(*) Contains $#usn7].``? ={`5esn`:$`1esn` In .e0,``:`6esn` Ends With Count ( * ) Ends With Count ( * )} Is Null Is Null,`8esn`+=$7 Is Null,`7esn` =_usn4 In #usn7"),
    octest:ct_string("Match `4esn`=((@usn5 {`4esn`:1000[12e12][`5esn`],`1esn`:07 Ends With 9e12 Ends With `2esn`})<-[?:`3esn`*..]-(usn2 :`1esn`:_usn4{usn2:999 Contains $1000})),_usn3=(`8esn` :`2esn`)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})<-[`6esn`]->({#usn8:.e12 Is Null Is Null,@usn6:`1esn` Is Not Null Is Not Null}) Union With Distinct 9e0[..123456789][..$`3esn`] As usn1 Limit 0x0[12e12..$`7esn`] Where usn1 Starts With 00 Merge (((`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null})-[`5esn`?:`7esn`|:`2esn` *0x0..]-(:_usn4{`1esn`:#usn7 Contains $0 Contains $usn2,`4esn`:999 Ends With $`` Ends With 0X0123456789ABCDEF})<-[? *12..{usn2:$`8esn`[123456789..][$@usn5..]}]->(:`1esn`:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null}))) Union All Match usn1=(({usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})-[:`6esn`|:#usn8{`4esn`:$`2esn`[..$`3esn`][..12e12],#usn8:123.654 Is Not Null}]-(_usn3 :`5esn`)-[`4esn`?:#usn8|:`3esn`{`3esn`:01 Is Null,`1esn`:123456789[12]}]-(:_usn4{#usn7:1000[..`2esn`][..$@usn6],`1esn`:12e12 Starts With $0 Starts With $`2esn`})) With  $`1esn` Contains 1e1 Contains @usn6,`2esn`(Distinct $`3esn`[$_usn4..0Xa],$`8esn`[123456789..][$@usn5..]) Contains Single(`3esn` In 9e1 Contains $999 Where 0Xa Ends With $`3esn` Ends With $1000) Order By `3esn`[0X0123456789ABCDEF..][07..] Descending,{_usn4:0.0 Is Not Null,`3esn`:`5esn`[..True][..0.e0]}[(`` {#usn8:$12[9e0..$999]})-[`3esn`?:`7esn`|:`2esn`]-(`3esn` {``:9e1 Is Null,usn1:9e0[Count(*)..0.12][$`1esn`..12.0]})..All(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789])] Descending Skip {`6esn`:$#usn7 =~`2esn`,`4esn`:True[$_usn3..]}[(:`1esn`:_usn4{#usn8:00[12..$`6esn`],@usn6:usn1[..$@usn6][..00]})-[`2esn`:`4esn`|@usn5 *01234567..]-(:`5esn`{_usn4:12 Starts With #usn7 Starts With 0Xa,#usn7:999 Is Null Is Null})-[`3esn`:`2esn`|`4esn`]-({#usn8:False Starts With 0X7 Starts With 01234567})..Filter(@usn6 In 010[`5esn`] Where `7esn`[1e1])][Any(@usn6 In 010[`5esn`] Where False[$`4esn`..])..Extract(@usn5 In 's_str'[0..] Where `7esn` In 010 In usn1)] With Distinct *,``[..False][..`3esn`],(@usn6 :`8esn`)<-[`4esn`?:`4esn`|@usn5 *01..123456789]-(:usn1:`3esn`{`8esn`:12 Starts With True Starts With 12e12,`8esn`:`2esn` Starts With $`7esn`}) Ends With #usn8(Distinct 12.e12 Contains #usn7 Contains $_usn4,01[`3esn`..][Count(*)..]) Ends With [`5esn`[..True][..0.e0],12 In $usn1 In 7,$`8esn`[123456789..][$@usn5..]] As `5esn` Order By $`1esn` Starts With $`4esn` Starts With $_usn3 Asc,01234567 In $@usn6 In $#usn7 Desc Skip 1000 Ends With `7esn` Limit usn2 Starts With .0"),
    octest:ct_string("Create ((:`5esn`{`8esn`:$`1esn` Starts With Count(*),_usn3:usn1[...e12][..1.e1]})<-[? *0X7..{`2esn`:$@usn5 In $`6esn` In 12e12}]-(:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(`4esn` :_usn4)) With  *,Filter(`5esn` In 0X7 In $#usn7 Where $@usn5 Starts With `5esn` Starts With 01234567) Is Null Is Null,$@usn6[$`8esn`..][123456789..] As @usn6 Order By 0X0123456789ABCDEF In $usn2 In `4esn` Descending,.e0 Ends With $#usn7 Ends With False Desc Where .12[..usn2][..12e12] Create `3esn`=((:_usn3{_usn3:$`3esn`[.e1][_usn4]})-[`4esn`?:#usn8|:`3esn`{`3esn`:01 Is Null,`1esn`:123456789[12]}]-(:`5esn`)<-[ *01234567..]->(#usn8 :`8esn`))"),
    octest:ct_string("With Distinct $#usn7[..9e0][..123.654] Order By 0.0[..Count ( * )][..`1esn`] Desc Limit 0x0 In 0.e0 In #usn8 Union Unwind {`6esn`:0xabc[..$1000][..`5esn`],`4esn`:$@usn5 In 12e12 In 01}[#usn8(False Contains 0 Contains $`6esn`,'s_str' Starts With 1e1 Starts With $0)..(`5esn` )-[ *00..0Xa]->(usn1 :#usn7:`5esn`{`5esn`:$@usn5 In 12e12 In 01})-[usn1?:`2esn`|`4esn`{#usn7:$#usn7[..9e0][..123.654],usn2:.e0 Is Not Null Is Not Null}]-(`1esn` :usn1:`3esn`{_usn3:.0[.e12..]})][(:`3esn`{#usn7:$#usn7 In $@usn5 In $`1esn`})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(`4esn` :`6esn`:_usn3)..[#usn7 In True Contains 's_str' Contains $usn1 Where $@usn6 In @usn6 In 1e1|12.0[$1000..][#usn7..]]] As `4esn` Create (((`7esn` )<-[`4esn` *0Xa{@usn6:999 Starts With `2esn` Starts With .e1,`4esn`:$@usn5[..0xabc][..$`3esn`]}]->(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"})<-[usn2?:@usn5|_usn3*{_usn4:@usn5 Starts With $`3esn`,#usn7:$`5esn` Is Not Null}]-(#usn7 :``:usn2))),`5esn`=(({@usn5:``[9e12][$999]})-[usn2{``:$`1esn` =~999}]-(:#usn7:`5esn`{`2esn`:12.e12 Contains 9e1,`5esn`:.e1 Starts With 12.e12 Starts With `2esn`})<-[:@usn6|:`7esn`{usn2:0x0 Starts With $`6esn`,_usn4:$`4esn`[`8esn`]}]-(@usn6 {@usn6:0e0 =~7 =~12.0})) Create _usn3=(:#usn7:`5esn`{@usn5:999 Starts With `2esn` Starts With .e1,``:0xabc In Null})-[`6esn` *0Xa]-(usn1 :`1esn`:_usn4{_usn3:@usn6[999..$_usn3][0.12..$@usn5],`1esn`:9e12[..1e1][..'s_str']})"),
    octest:ct_string("Delete (usn2 :usn1:`3esn`{`3esn`:`2esn` Is Null})<-[:`8esn` *999..{@usn6:`7esn` Ends With $7 Ends With $@usn5,``:0e0 Starts With 999 Starts With `2esn`}]->(`6esn` :#usn7:`5esn`)<-[usn1:`1esn`|`3esn`]->(`1esn` {#usn8:$#usn7[..9e0][..123.654],`5esn`:9e12 Starts With 1e1}) =~(`7esn` {#usn7:$@usn6 Ends With `1esn`})<-[#usn8 *0x0..]->(_usn3 :usn2{#usn8:$`2esn` Is Null,_usn3:123.654 Is Not Null})-[? *0X0123456789ABCDEF..]-(usn2 :_usn3),Single(_usn4 In 12e12 In 123456789 Where False Is Null)[[$usn1,_usn4 Contains `` Contains 1.e1]][(`6esn` {_usn3:9e12 Starts With 1e1,_usn4:`2esn`[..$_usn3]})-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->({`1esn`:#usn7[0]})] With Distinct *,$`1esn`[07..] As ``,`` Is Null As `7esn` Skip $1000 Is Not Null Unwind @usn6[123.654..][0x0..] As usn1 Union With  $999 =~.0 As usn2 Limit 's_str' Ends With _usn4 Ends With 0e0 Where 0Xa[$`8esn`..][$_usn4..] With Distinct *,@usn6[9e12],$`3esn`[..0xabc][..$7] Skip All(#usn7 In True Contains 's_str' Contains $usn1 Where $`1esn` Starts With Count(*)) In Any(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn`[0..][999..]) In Filter(`3esn` In 9e1 Contains $999 Where .e0 Is Not Null Is Not Null) Limit Single(`5esn` In `7esn`[$usn2..][$123456789..] Where 12e12 Is Not Null) Is Not Null Is Not Null Where 1000[12e12][`5esn`] Union Delete 0X0123456789ABCDEF[0X7..$`2esn`][$`5esn`..$usn2],$`3esn` Ends With 1000,[$`5esn` =~usn1,True[`3esn`],@usn6[9e12]][Single(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null)..] Remove All(@usn6 In False Contains 0 Contains $`6esn` Where usn1[False..])._usn3! Remove `8esn`:``:usn2"),
    octest:ct_string("With  *,[#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`]][[`2esn` Is Null]][Extract(#usn7 In $999 In 1e1|01234567[Null..$_usn3])] Where .e1[12.0..] Create @usn6=((`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})) Return Distinct (:@usn5{@usn5:999[..`1esn`][..07],_usn4:Count ( * ) Ends With $123456789})<-[`2esn`? *01..123456789]-(`2esn` :@usn6)[[`2esn`[..$_usn4][...12],False Contains 0 Contains $`6esn`,.e1[12.0..]]..[#usn7 In 9e0[$1000] Where #usn8 =~0.e0|12.e12 =~0X0123456789ABCDEF =~1.e1]],`1esn`[0Xa] As usn1,usn1 Contains 010 As @usn5 Order By 1000[$`2esn`..] Asc"),
    octest:ct_string("Remove [Count(*) Starts With usn2 Starts With `7esn`,07[$`2esn`..9e12][$`4esn`..9e12],9e1 Is Not Null Is Not Null].`2esn`?"),
    octest:ct_string("Remove Any(_usn4 In 12e12 In 123456789 Where 9e1 Is Not Null Is Not Null).#usn7?,Single(usn2 In 7[12]).@usn5 Union All Merge (`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`})-[@usn6:`5esn`|:usn2 *0xabc{#usn8:999 In 0e0}]-({`1esn`:#usn7[0]}) On Match Set `1esn` =0x0[@usn6..][01..],`5esn`(Distinct $#usn7 Contains $`7esn` Contains .e12).@usn6! =(usn2 :_usn3)-[`6esn`?:`6esn`|:#usn8]-(`1esn` {_usn4:`8esn` Is Null})<-[`7esn`?:#usn8|:`3esn`]-(_usn4 :`3esn`) Is Null Create (((`` :#usn8:`1esn`{``:`7esn`[$usn2..][$123456789..],_usn4:$12 Starts With $usn1})<-[_usn3?:_usn3|:`7esn`]->(#usn7 )<-[:`1esn`|`3esn`{`2esn`:$`3esn` Ends With 01234567}]->(`5esn` :`3esn`))),((#usn7 :_usn3)<-[ *0Xa{`3esn`:9e1 Ends With Count(*) Ends With $7}]-(:@usn6{`7esn`:$`6esn`[``..][Count(*)..]})) Match (((`7esn` {usn2:0X7[..$`8esn`],`1esn`:123.654 Is Not Null})<-[ *12..{`8esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}]-(`5esn` :`1esn`:_usn4)-[:`6esn`|:#usn8{``:`1esn` Starts With 0xabc Starts With $usn2}]-(_usn3 :`2esn`{@usn5:`4esn` Is Not Null Is Not Null})))"),
    octest:ct_string("Remove [_usn4 In 12e12 In 123456789 Where 1.e1 =~.12|.12 Contains $999].#usn7 Create `2esn`=(((`6esn` :`4esn`:`6esn`)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})<-[`4esn` *0Xa{@usn6:999 Starts With `2esn` Starts With .e1,`4esn`:$@usn5[..0xabc][..$`3esn`]}]->(@usn6 :``:usn2))),({_usn3:@usn6 Contains .12 Contains $usn1}) Create (#usn7 :@usn6),`7esn`=(((:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})<-[`1esn`?:usn1|`4esn` *00..0Xa]-(`6esn` )<-[? *12..{#usn7:`6esn` Ends With _usn4 Ends With False,usn1:1000[12e12][`5esn`]}]->(:`6esn`:_usn3{``:usn1 Contains 010,`2esn`:$0 In `3esn` In 07}))) Union All Merge `1esn`=(`` {#usn7:#usn8 Is Not Null Is Not Null})<-[`5esn` *0xabc]-(:_usn4{_usn3:$#usn7[..0Xa],@usn5:12e12 In 123456789}) Unwind $1000[$@usn6][$_usn4] As `6esn` Detach Delete Null Ends With _usn4 Ends With 0.0 Union All Remove None(`5esn` In `7esn`[$usn2..][$123456789..] Where _usn4 Is Not Null).`3esn`? Unwind \"d_str\"[#usn8] As @usn5"),
    octest:ct_string("Create `4esn`=(({#usn7:$@usn6[$0..9e12][.e12..Null]})) Return Distinct $@usn6[.0..][0e0..] Order By $`8esn` Is Not Null Is Not Null Descending,Null Ends With _usn4 Ends With 0.0 Ascending Limit .e0"),
    octest:ct_string("Create ``=({usn2:$`2esn` Is Null,#usn8:.0 Is Null Is Null})-[`6esn`?:@usn5|_usn3 *01234567..]-(`5esn` {``:_usn3 Contains 9e12 Contains `8esn`,@usn6:``[7.._usn3]}),`8esn`=(((`4esn` :`4esn`:`6esn`)<-[ *..07{`8esn`:.e0[999..1000][1e1..$`8esn`],`1esn`:$`3esn`[$_usn4..0Xa]}]-(:_usn3{@usn5:$1000 Starts With $`7esn`})<-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(_usn3 :`3esn`{_usn3:01[`8esn`..9e12][.12..0]}))) With  *,$`5esn` Is Not Null,usn2 Contains $0 Contains .0 Order By 12.0 Ends With `2esn` Ascending,01234567[$0..][0..] Descending,$12 In True In 1.e1 Desc Skip 9e0[Count(*)..0.12][$`1esn`..12.0] Where `7esn` Union All Unwind ({`6esn`:usn1[..$@usn6][..00]})-[`6esn`?:`1esn`|`3esn` *01..123456789]-({`2esn`:`7esn` In 010 In usn1,`8esn`:$0[123.654..0.e0]}) In [$``[7]] In `6esn`(#usn8 Is Not Null Is Not Null) As usn1"),
    octest:ct_string("Delete [@usn5 In 9e0 Ends With $#usn8 Where 12.e12 =~0X0123456789ABCDEF =~1.e1|00[$`1esn`..][@usn6..]],[$`6esn`[1.e1][$_usn3],0Xa Ends With $`3esn` Ends With $1000] Ends With (usn2 :_usn4)-[_usn4? *999..{_usn3:$`5esn` =~usn1}]-({`8esn`:usn2 Starts With .0,@usn5:Count(*) In 12 In `6esn`}),12.e12 Is Not Null Is Not Null Unwind Count ( * ) Ends With `6esn` Ends With 's_str' As _usn3 With  *,0xabc Is Null Is Null,usn2 =~$`` =~$`8esn` As `2esn` Skip 0 Ends With Count(*) Ends With False"),
    octest:ct_string("Return Distinct $7 Ends With Count ( * ),`6esn` =~Null As `4esn` Order By None(#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[`8esn`]) Ends With [_usn4 In 12e12 In 123456789 Where 1.e1 =~$_usn4|0x0[0X7]] Asc,12 Starts With #usn7 Starts With 0Xa Desc Skip .12[01][@usn5] Union Return Distinct `2esn` Starts With 12.e12 Starts With 12.0 As _usn3 Order By None(#usn8 In `7esn` Where 9e1 Starts With Count ( * ))[..Any(usn2 In 7[12] Where 9e1 Is Not Null Is Not Null)] Desc,0xabc In .12 In 0Xa Descending,.0 Contains .e12 Contains 0 Desc Delete _usn3[12.e12..][`5esn`..]"),
    octest:ct_string("Remove Extract(@usn6 In False Contains 0 Contains $`6esn` Where $`5esn`[..00]).usn2 Create (_usn4 :`8esn`{usn1:12.e12[..$`6esn`]}),@usn6=(`2esn` :`1esn`:_usn4)-[?*..]-({`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}) Remove Filter(usn2 In 7[12] Where $#usn8[12.e12..`8esn`][12.0..0.0]).``,[`8esn` In 123456789 =~@usn6 Where ``[9e12][$999]].@usn5?,`4esn`:`7esn` Union All Merge `7esn`=((:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})<-[`2esn`? *..07{`2esn`:`3esn`[0x0..]}]->(`5esn` )) On Create Set `5esn`+=_usn4[$usn1..01234567][123.654..`5esn`],`2esn`+=#usn7 In 0.e0 On Match Set Extract(@usn5 In 's_str'[0..] Where `5esn`[..123.654][...e12]|$``[..\"d_str\"][..$#usn8]).@usn6 =[$usn1[`2esn`..][$`2esn`..]][(`3esn` :usn2)-[`4esn`?:usn1|`4esn`{`3esn`:123.654[..0.e0][..'s_str'],@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]}]-({`6esn`:9e1 Is Not Null Is Not Null,`8esn`:_usn3 In $`8esn` In @usn6})..`2esn`(Distinct $@usn6 Is Not Null Is Not Null,Count ( * ) Ends With $123456789)],None(#usn8 In `7esn` Where ``[7.._usn3]).@usn6? =`6esn`,Any(#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`])._usn4! =`` Is Null Match (((`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`})-[?:_usn4]->(:`5esn`{`4esn`:0Xa[..Count ( * )][..$123456789]})<-[?:`` *0..01]->({`2esn`:9e12[$`5esn`..$123456789],`8esn`:$usn2 =~9e1}))),#usn7=(({_usn3:_usn3 Ends With 7 Ends With $`1esn`,``:$_usn4[$`5esn`][`7esn`]})-[:_usn4 *0..01]-(#usn8 :`2esn`{`1esn`:0x0 Starts With $`6esn`})) Where 123.654 In 12 Return [#usn7 In 9e0[$1000] Where .e1 In 123456789|.e12[..999][..@usn5]] In `5esn`(`1esn` Starts With 0X7 Starts With \"d_str\",9e1) In @usn5(Distinct `5esn` Contains $`5esn` Contains 0X7,True[..#usn8]) As usn2,(`5esn` :@usn6{usn1:'s_str'[0..]})<-[ *00..0Xa]->(`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null})[All(#usn7 In 9e1[$`1esn`..] Where ``[$`3esn`])] As `3esn` Order By @usn6 =~999 =~@usn5 Ascending,$@usn5[..$#usn7] Descending,{`4esn`:12e12 =~$`7esn`} Is Not Null Is Not Null Desc Skip Count(*)[9e12..12.0] Union Merge @usn6=((`1esn` :`6esn`:_usn3{#usn7:0x0[$0][7]})) On Match Set [`6esn` In $`6esn`[``..][Count(*)..] Where 0x0[$0][7]|$`4esn`[`8esn`]].usn1 =Any(_usn4 In 12e12 In 123456789 Where _usn3 In $`8esn` In @usn6)[Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789])][All(@usn5 In 9e0 Ends With $#usn8)] Return Distinct $@usn6 Ends With 12.e12 Ends With @usn5 As usn2,``[usn1][`5esn`],`7esn`[..$`6esn`] Order By $@usn6 In @usn6 In 1e1 Desc,.e1[..$`3esn`][..01] Desc Limit Single(`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]) Is Not Null Is Not Null Merge #usn8=((#usn7 :_usn3$usn1)<-[`4esn`?:usn1|`4esn`{`3esn`:123.654[..0.e0][..'s_str'],@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]}]->({`3esn`:`2esn` In 9e0 In 7})) On Create Set @usn6+=$`1esn` =~1e1 On Create Set Extract(_usn4 In 12e12 In 123456789 Where Count ( * ) Ends With $123456789).`8esn` =None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 9e12[$`5esn`..$123456789]) In Extract(@usn5 In 's_str'[0..] Where 07 Ends With 9e12 Ends With `2esn`|00[01234567][False]) In [12 =~usn1]"),
    octest:ct_string("Match ((#usn7 :usn1:`3esn`)-[`3esn`?:`7esn`|:`2esn`]-(`5esn` :#usn8:`1esn`{_usn3:`6esn` Is Null Is Null})-[@usn5:`5esn`|:usn2 *0Xa{#usn7:`7esn`[$usn2..][$123456789..]}]-({`7esn`:9e0 Contains $12 Contains `3esn`,`5esn`:.e0 Contains $#usn8})),`2esn`=(((`` :`5esn`{@usn5:123456789 =~@usn6})<-[`2esn`? *01234567..]->(#usn7 :`4esn`:`6esn`{`1esn`:`1esn`[$@usn6][07]})-[_usn3:usn1|`4esn`{`6esn`:12e12 =~1e1}]-(@usn6 :_usn4{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}))) With  `2esn` Starts With 12.e12 Starts With 12.0 As _usn3 Order By $999 Is Null Is Null Descending,0e0 =~7 =~12.0 Asc Skip 0.e0 Is Not Null Is Not Null Limit Extract(@usn5 In 's_str'[0..] Where usn1 Starts With 00)[..Any(@usn5 In 9e0 Ends With $#usn8 Where $7 In 0.e0 In 999)][..[$`5esn`[0X7..010][`7esn`..'s_str']]] Where .e0 Union All Merge ((`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12})) On Create Set `6esn` =0e0 Is Not Null,_usn3 =@usn5(Distinct 1e1 Is Not Null Is Not Null,`1esn` Starts With 0xabc Starts With $usn2)[..Extract(`3esn` In 9e1 Contains $999 Where usn2[12.e12..]|.12[01][@usn5])],`7esn`+=12.e12 Contains 9e1 On Match Set {usn2:$@usn6 =~#usn7 =~True,_usn3:07 In `6esn`}.`3esn` =$`5esn`[$`6esn`][`2esn`] Delete [$`5esn` =~usn1,True[`3esn`],@usn6[9e12]][Single(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null)..],0.0[$@usn5.._usn4],7 Ends With 01234567 Ends With 0Xa Remove [`6esn` In $`6esn`[``..][Count(*)..]|$`4esn`['s_str'..]].@usn6?,(usn2 {`5esn`:$@usn5 In 12e12 In 01})<-[:`2esn`|`4esn` *12..]->({`7esn`:`4esn` Is Not Null Is Not Null,`4esn`:`4esn` Ends With 12 Ends With .12})-[`7esn`:`4esn`|@usn5 *12..]-(`` :`3esn`{`6esn`:Count(*)[9e12..12.0]}).`5esn`"),
    octest:ct_string("Delete Any(@usn6 In False Contains 0 Contains $`6esn` Where 12e12 In $`5esn`) =~[#usn7 In 9e1[$`1esn`..] Where 0Xa Ends With $`3esn` Ends With $1000|$@usn5 Contains 's_str' Contains \"d_str\"] =~Extract(@usn6 In False Contains 0 Contains $`6esn` Where $`6esn` Starts With .e12 Starts With $`1esn`|12e12 In 123456789),.e0 =~Null,12.e12[..9e1][..$_usn3] Remove None(#usn7 In 9e1[$`1esn`..]).`5esn` Union Optional Match usn1=((`` )<-[usn2?:`6esn`|:#usn8 *999..]-(`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})<-[?:usn2{usn2:@usn5 Is Not Null}]-(`7esn` {#usn8:False Starts With 0X7 Starts With 01234567})),((`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})) Where $123456789[...12][..@usn6] Detach Delete `2esn`[$@usn6..][Null..],$1000 Starts With $`7esn` Union Merge ``=(`5esn` {`2esn`:`1esn`[0.0..1e1][0x0..7],#usn8:.e0}) On Create Set `8esn` =[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 12.e12 Starts With \"d_str\" Starts With 9e1|$#usn7 Contains $`7esn` Contains .e12][#usn8(Distinct $_usn4 Is Null Is Null,01[`8esn`..9e12][.12..0])..[_usn4 In 12e12 In 123456789 Where Count ( * ) Ends With $123456789]][Filter(_usn4 In 12e12 In 123456789 Where $`5esn` =~usn1)..[$`5esn` In _usn3 In 0.0]] On Match Set Any(#usn8 In `7esn` Where $`3esn` Contains $`1esn`).`8esn`? =0x0 Contains $`6esn` Contains `4esn`,Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where False[$usn1][0x0]|@usn5[0.0..0X7]).usn2! =Single(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where @usn6 In .12 In `3esn`) Contains {usn2:.12[123.654..],`2esn`:`8esn`[$`4esn`..$#usn8]} Contains All(#usn7 In $999 In 1e1 Where 9e12 Starts With 1e1),`3esn` =12.e12[..$999][..07] Create (((`6esn` :#usn7:`5esn`)-[`6esn`?:@usn5|_usn3 *01234567..]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})-[ *0xabc{``:usn1 Contains 010,`2esn`:$0 In `3esn` In 07}]->(_usn4 :#usn7:`5esn`))),usn2=((#usn7 {`6esn`:$`2esn` Contains Count(*)})-[?:_usn4]->(`2esn` :usn2))"),
    octest:ct_string("Remove `5esn`(Distinct .12[123.654..]).`3esn`,{``:0Xa =~False =~@usn5,`8esn`:.12[123.654..]}._usn4!,Extract(`3esn` In `2esn`[..01][..True] Where 00[01234567][False]|12[$`5esn`..][False..]).`2esn`! Return Distinct [`5esn`[$`7esn`..$@usn5],$#usn7[..9e0][..123.654],1.e1 Is Null Is Null] Ends With Any(`6esn` In $`6esn`[``..][Count(*)..] Where 07 Contains `3esn` Contains `7esn`) Order By None(`8esn` In 123456789 =~@usn6 Where True[`3esn`]) Is Not Null Is Not Null Desc Skip {`4esn`:999 In 0e0,`6esn`:0.e0['s_str'..][01234567..]} Contains Single(`8esn` In 123456789 =~@usn6 Where 12.e12 Ends With `` Ends With 0) Limit `6esn` Is Null Is Null Union Merge ((usn2 :`6esn`:_usn3)-[?:#usn7|@usn5 *0X0123456789ABCDEF..{_usn3:@usn5 Is Not Null}]-(#usn8 {`5esn`:$12[$usn1..][Count(*)..],`7esn`:0e0[``..$1000][$7..12.e12]})) Union All Match (((:`1esn`:_usn4)-[?:#usn7|@usn5 *0X0123456789ABCDEF..{_usn3:@usn5 Is Not Null}]-(#usn8 {`5esn`:$12[$usn1..][Count(*)..],`7esn`:0e0[``..$1000][$7..12.e12]})-[``? *0x0..{`6esn`:$`2esn` Contains Count(*)}]-(`8esn` ))),usn1=((`1esn` {``:0.0 Is Not Null,`1esn`:``[$`3esn`]})<-[:`1esn`|`3esn`{`2esn`:$`3esn` Ends With 01234567}]->(_usn3 :`5esn`)<-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(:`5esn`{`4esn`:0Xa[..Count ( * )][..$123456789]}))"),
    octest:ct_string("Detach Delete All(@usn5 In 's_str'[0..] Where 0Xa[..Count ( * )][..$123456789]) Is Not Null Is Not Null,@usn6[`1esn`..],$#usn7 Ends With 's_str' Ends With 0X7 Match (((`` :#usn8:`1esn`{``:`7esn`[$usn2..][$123456789..],_usn4:$12 Starts With $usn1})<-[_usn3?:_usn3|:`7esn`]->(#usn7 )<-[:`1esn`|`3esn`{`2esn`:$`3esn` Ends With 01234567}]->(`5esn` :`3esn`))),((#usn7 :_usn3)<-[ *0Xa{`3esn`:9e1 Ends With Count(*) Ends With $7}]-(:@usn6{`7esn`:$`6esn`[``..][Count(*)..]})) Union Remove {_usn4:``[9e12][$999],#usn8:123.654 In 12}.`5esn`?,{``:`1esn` Starts With 0xabc Starts With $usn2}.`8esn` Optional Match ((:`3esn`{`4esn`:$999[0Xa..][9e1..]})-[`7esn`?:`2esn`|`4esn` *..010{usn1:0e0[``..$1000][$7..12.e12],`5esn`:0x0 Starts With $`6esn`}]-(:`3esn`{`4esn`:$999[0Xa..][9e1..]})),_usn4=((`1esn` {usn1:12e12 In $`5esn`})<-[`8esn`?:#usn7|@usn5{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3}]-(:usn1:`3esn`{@usn6:.0 Ends With Count ( * )})) Where @usn5 Is Null"),
    octest:ct_string("Create ((_usn3 :`8esn`{#usn8:False Starts With 0X7 Starts With 01234567})),((`6esn` {_usn3:9e12 Starts With 1e1,_usn4:`2esn`[..$_usn3]})<-[? *12..{#usn7:`6esn` Ends With _usn4 Ends With False,usn1:1000[12e12][`5esn`]}]->(:`6esn`:_usn3{``:usn1 Contains 010,`2esn`:$0 In `3esn` In 07})<-[?{`5esn`:123.654[$0..0X7][Null..#usn8],`3esn`:12.e12[0..0.12][123.654..9e12]}]-(#usn7 {`3esn`:1.e1 In 1000 In _usn3,#usn7:`2esn` Starts With .e1 Starts With 9e12})) Delete Count ( * ) Ends With `6esn` Ends With 's_str',Count(*)[$@usn5] Return *,`2esn`(Distinct 12.e12 =~.0 =~usn1,00 Ends With $`1esn` Ends With `7esn`)[[_usn4 In 12e12 In 123456789 Where 0x0 Starts With $`6esn`|`2esn` In 7]] Order By $`2esn` Starts With 0.12 Starts With $12 Ascending,07 In `6esn` Desc,12[..0e0][...e1] Desc Skip #usn8[`6esn`..][$``..] Limit `3esn`[..0X0123456789ABCDEF][..0x0] Union Match usn1=(#usn7 :`3esn`{`3esn`:@usn5[0.0..0X7],@usn5:$#usn7 Starts With $`2esn`})<-[usn1:_usn4]-(:`4esn`:`6esn`),(({`3esn`:_usn3[0x0],`3esn`:00[False..0e0]})<-[_usn4?:@usn6|:`7esn`]-({`3esn`:_usn3[0x0],`3esn`:00[False..0e0]})<-[_usn3?:_usn3|:`7esn`]->(`3esn` {`8esn`:`7esn` In 010 In usn1})) Where .0[..'s_str'][..01234567] Merge (((`` :#usn8:`1esn`{``:`7esn`[$usn2..][$123456789..],_usn4:$12 Starts With $usn1})<-[_usn3?:_usn3|:`7esn`]->(#usn7 )<-[:`1esn`|`3esn`{`2esn`:$`3esn` Ends With 01234567}]->(`5esn` :`3esn`))) Create ((:`5esn`{`8esn`:$`1esn` Starts With Count(*),_usn3:usn1[...e12][..1.e1]})<-[? *0X7..{`2esn`:$@usn5 In $`6esn` In 12e12}]-(:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(`4esn` :_usn4)) Union Return Distinct usn2[12.e12..] As `2esn`,$`2esn`[0..123456789][``..`1esn`],#usn8[`6esn`..][$``..] As `2esn` Skip $@usn6 Ends With `1esn` Limit 9e1 Ends With Count(*) Ends With $7 Merge _usn4=(`5esn` :``:usn2)-[?{_usn3:`4esn`[$_usn3..$`7esn`]}]-({usn2:.12[0X7..][12e12..],`6esn`:$`4esn`[`6esn`..$12]}) Match @usn6=(usn2 :_usn4) Where `4esn`[$_usn3..$`7esn`]"),
    octest:ct_string("Optional Match ((:`3esn`{@usn5:$`5esn` In _usn3 In 0.0})-[:`1esn`|`3esn` *0Xa{_usn4:``[9e12][$999],#usn8:123.654 In 12}]->(:@usn5{#usn7:12e12 In $`5esn`})-[@usn5 *0X7..]->(`` $`6esn`)) Remove [usn2 In 7[12] Where 12e12 =~$`7esn`|.e1[12.0..]].@usn5! Unwind Extract(@usn6 In 010[`5esn`] Where @usn6 Contains .12 Contains $usn1) Is Not Null As `1esn` Union All With  `4esn`[$_usn3..$`7esn`],0e0[``..$1000][$7..12.e12],0X0123456789ABCDEF[0X7..$`2esn`][$`5esn`..$usn2] Order By $_usn4[01..][$_usn4..] Ascending,$@usn5[..$#usn7] Descending With Distinct *,`2esn`(Distinct 12.e12 =~.0 =~usn1,00 Ends With $`1esn` Ends With `7esn`)[[_usn4 In 12e12 In 123456789 Where 0x0 Starts With $`6esn`|`2esn` In 7]] Order By $`2esn` Starts With 0.12 Starts With $12 Ascending,07 In `6esn` Desc,12[..0e0][...e1] Desc Skip #usn8[`6esn`..][$``..] Limit `3esn`[..0X0123456789ABCDEF][..0x0] Remove (@usn6 :usn1:`3esn`{@usn5:999 Starts With `2esn` Starts With .e1,``:0xabc In Null})-[? *12..{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7}]->(#usn7 :usn1:`3esn`).`6esn`,[`6esn` In $`6esn`[``..][Count(*)..] Where @usn6 Is Not Null Is Not Null|123.654].`4esn`,_usn3._usn4?"),
    octest:ct_string("Merge `7esn`=((:#usn8:`1esn`$`7esn`)<-[`1esn` *999..{`1esn`:1e1 Contains 's_str' Contains `3esn`}]-(usn1 {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(#usn7 :``:usn2)) Detach Delete 12[0e0],$``[01234567..][.0..] Return Distinct Filter(#usn7 In True Contains 's_str' Contains $usn1 Where `2esn`[..$_usn3]) In ({_usn3:_usn3 Ends With 7 Ends With $`1esn`,``:$_usn4[$`5esn`][`7esn`]})-[? *12..{usn2:$`8esn`[123456789..][$@usn5..]}]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]})<-[_usn4? *12..{`1esn`:$`6esn` Starts With .e12 Starts With $`1esn`,`3esn`:`8esn`[0.e0..]}]-({#usn8:.e12 Is Null Is Null,@usn6:`1esn` Is Not Null Is Not Null}) In Any(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 0xabc In 123456789 In 0x0),.e0 Is Not Null Is Not Null As `7esn`,$`2esn` Ends With `6esn` As usn1 Order By `` Is Null Descending,_usn4(Distinct usn2[07..][.0..]) Ends With Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 12[$`5esn`..][False..]|$`2esn` Starts With `4esn` Starts With $usn1) Ends With Extract(@usn5 In 9e0 Ends With $#usn8 Where $`3esn` In $usn2) Desc Limit 0.e0 Is Not Null Is Not Null"),
    octest:ct_string("Match (`3esn` {`3esn`:$@usn6 Is Not Null Is Not Null,`1esn`:12e12 =~1e1})<-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]-(#usn8 :`6esn`:_usn3)-[`6esn`?:@usn5|_usn3 *01234567..]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]}),`4esn`=((`` {#usn7:#usn8 Is Not Null Is Not Null})-[#usn7?{`5esn`:.e12 Starts With $#usn8 Starts With False}]->(#usn7 :`4esn`:`6esn`{`1esn`:`1esn`[$@usn6][07]})-[{`4esn`:.e1 In 123456789}]-(:`3esn`{``:$@usn5 Is Null Is Null,`8esn`:.e1[..\"d_str\"][..$123456789]})) Where 1.e1 Starts With 9e12 Union All Detach Delete usn1 Ends With 0.0,Count(*)[..@usn6][..`7esn`] With  $@usn6[12.0][12.0] Skip `7esn`[$usn2..][$123456789..] Return Distinct @usn5[01][@usn5],9e0 Contains $12 Contains `3esn` As #usn8,{`4esn`:0.0[usn1..],`7esn`:12.0[$1000..][#usn7..]}[Any(`6esn` In $`6esn`[``..][Count(*)..] Where $#usn7 Ends With 's_str' Ends With 0X7)..[usn1[..$@usn6][..00],0x0[0X7],$`8esn`[123456789..][$@usn5..]]][[12.e12[..$`6esn`],999 In #usn8 In $``]..Extract(#usn7 In 9e1[$`1esn`..] Where 00 Contains Count ( * ) Contains 0x0|$`5esn` =~usn1)] Order By Null Ends With _usn4 Ends With 0.0 Asc Skip (`1esn` $`4esn`)-[@usn6?:`7esn`|:`2esn`]-({@usn6:#usn7[`8esn`..usn1][$999..`7esn`]}) =~Filter(`3esn` In 9e1 Contains $999 Where 12.0 Is Null Is Null) =~[0xabc In Null] Union Unwind 01[07..][1.e1..] As _usn3 Match `4esn`=((`3esn` {usn2:$usn2[`4esn`..9e12]})<-[?{@usn5:_usn3 Ends With 7 Ends With $`1esn`}]->(_usn3 :_usn4)<-[_usn4?:`3esn`]-(:_usn3{_usn4:.e1[7..][9e0..]})) Merge `2esn`=(:`1esn`:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null})<-[`4esn`:usn2]->(`3esn` :_usn4) On Create Set #usn7+=@usn6[123.654..][0x0..],`3esn`+=00 In @usn6 In 0,@usn6 =Filter(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]) Is Not Null Is Not Null On Create Set #usn7+=`6esn`[$`8esn`][9e1]"),
    octest:ct_string("Return Distinct 1.e1[$`3esn`][0Xa] As @usn5 Limit {`1esn`:1e1 Contains 's_str' Contains `3esn`} =~None(#usn7 In 9e0[$1000] Where `6esn`[$1000][`3esn`])"),
    octest:ct_string("With  (`7esn` {#usn8:False Starts With 0X7 Starts With 01234567})<-[`8esn`? *0Xa{#usn8:$``[True]}]->(:`7esn`{usn2:@usn5 Is Not Null}) Is Null Is Null,$#usn8 Ends With `3esn` Ends With $`` As #usn7,{``:`6esn` =~$_usn4 =~7,`7esn`:9e0[$1000]}[#usn7(Distinct $`1esn`[``][07])..None(@usn6 In 010[`5esn`] Where $`3esn` Ends With 01234567)] As _usn3 Order By @usn6 =~999 =~@usn5 Ascending,``[7.._usn3] Descending,All(#usn7 In 9e0[$1000] Where 's_str'[0x0..1.e1]) Is Not Null Is Not Null Ascending Skip #usn8 Ends With $@usn5 Ends With $7 Limit #usn8[`8esn`..] Create ((_usn3 {`6esn`:@usn5[$`6esn`..][$999..],`8esn`:$@usn5[..0xabc][..$`3esn`]})-[? *0X0123456789ABCDEF..{#usn7:$@usn6[$0..9e12][.e12..Null]}]->(#usn8 :`5esn`)-[:`6esn`|:#usn8{`4esn`:$`2esn`[..$`3esn`][..12e12],#usn8:123.654 Is Not Null}]-(_usn3 :`5esn`)) Optional Match ((:`4esn`:`6esn`{@usn5:$#usn7[..9e0][..123.654],`2esn`:7[12]})) Where 12.e12 Starts With \"d_str\" Starts With 9e1 Union All Merge @usn5=(({`8esn`:`5esn` Contains #usn7 Contains 9e12})<-[usn1:_usn4]-(`` {_usn3:`5esn` Contains `7esn`})<-[`3esn`?:`2esn`|`4esn` *123456789..{_usn4:1.e1[`8esn`]}]->(`1esn` :`3esn`{#usn8:$usn2[0.e0],`8esn`:$`4esn`['s_str'..]})) On Match Set `4esn`+=@usn5 Is Not Null,@usn6+=.e12[`2esn`..010],#usn7 =$999[``] On Match Set [$0[123.654..0.e0],01234567[Null..$_usn3]]._usn4! ={`3esn`:12 Starts With #usn7 Starts With 0Xa} Is Null Is Null,None(#usn7 In 9e0[$1000] Where 00[12..$`6esn`]).`7esn`? =`4esn`(Distinct)[`2esn`($`2esn`[..$`3esn`][..12e12])][Extract(@usn6 In 010[`5esn`] Where 1.e1[$usn1]|.e12[..999][..@usn5])],`5esn`+={`7esn`:usn1[False..`5esn`][$1000..$12],`1esn`:$usn1[`2esn`..][$`2esn`..]}[Extract(@usn5 In 's_str'[0..] Where 0Xa[..Count ( * )][..$123456789]|.e1[..$`3esn`][..01])..] Delete $usn1 Starts With 0x0 Starts With #usn8,$@usn6 Ends With `1esn`,Extract(`3esn` In `2esn`[..01][..True] Where 00[01234567][False]|$`3esn` Ends With 01234567) Starts With (_usn4 :_usn4)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07}) Starts With Extract(@usn6 In 010[`5esn`] Where $`2esn` Starts With `4esn` Starts With $usn1) Union Return _usn3 Is Not Null Is Not Null As `` Order By Extract(`3esn` In `2esn`[..01][..True] Where 0.0 Is Null Is Null|$usn2[0.e0])[{usn2:@usn5 Is Null,`8esn`:$@usn6 Ends With 123456789 Ends With 12.0}..] Descending,(:_usn4$12)-[`1esn`?:`6esn`|:#usn8 *0Xa]-(usn1 :#usn8:`1esn`)[{`7esn`:$usn2 =~9e1}..] Desc,.12 In `8esn` In $#usn8 Desc Limit 9e1 Contains 12 Detach Delete 0.e0,\"d_str\"[True..],$`3esn` Ends With 01234567"),
    octest:ct_string("Optional Match (:`2esn`{usn1:.0[..'s_str'][..01234567],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})<-[#usn8? *0Xa]-(`2esn` :`6esn`:_usn3) Where $`4esn`[..$`8esn`][..Null] Remove {`6esn`:Null =~`6esn`}._usn3!,[usn2 In False[$usn1][0x0] Where `4esn` Starts With 0e0].`6esn`!,[010[`5esn`],0Xa[..Count ( * )][..$123456789]]._usn3 Unwind Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4) Ends With [$@usn6 Is Not Null Is Not Null] As #usn7 Union With  $`3esn` Ends With 1000,999[..`1esn`][..07] Skip [123456789 =~$999,$`2esn` Ends With `6esn`,12.e12 Contains 9e1][`5esn`(Distinct .e0[01234567..$`8esn`])][All(`3esn` In 9e1 Contains $999 Where $`5esn` Is Not Null Is Not Null)] Limit [#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 12.e12 Starts With \"d_str\" Starts With 9e1|$#usn7 Contains $`7esn` Contains .e12] Starts With usn2(01 Is Null) Starts With Filter(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789]) Remove _usn4:`2esn` Union All Remove All(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 00[$usn1..]).@usn6!,Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12).@usn6!,[`8esn` In 123456789 =~@usn6 Where @usn6 Is Not Null Is Not Null|$`5esn` =~$`8esn` =~usn2].`7esn`? Remove (`3esn` {`8esn`:`7esn` In 010 In usn1})<-[:`1esn`|`3esn`{_usn3:0e0 =~7 =~12.0,usn2:123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]}]-(:`6esn`:_usn3{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]}).@usn5,[`8esn` In 123456789 =~@usn6 Where ``[9e12][$999]].@usn5?,(`1esn` :#usn7:`5esn`{`1esn`:0e0 =~0Xa =~$999})<-[@usn5?:``{`3esn`:010 Is Null Is Null,`5esn`:_usn4 Contains `` Contains 1.e1}]-(:@usn6{`7esn`:$`6esn`[``..][Count(*)..]})-[`2esn`? *1000..0X0123456789ABCDEF{`8esn`:$7 In $usn1 In 999,@usn5:00 Ends With `` Ends With 12.e12}]-(:usn2{`5esn`:True[0xabc..01234567][$`8esn`..$@usn6]}).`6esn` With  _usn3 Is Not Null Is Not Null As `` Skip [$`5esn` =~usn1,True[`3esn`],@usn6[9e12]][None(#usn7 In 9e1[$`1esn`..] Where 1.e1[12.e12..])..] Where .e1[12.0..]"),
    octest:ct_string("With  $#usn7 =~`2esn` As #usn7,usn1 Ends With 9e0 Ends With 9e0 As @usn5,{`2esn`:Count(*) Ends With usn1,`6esn`:1000 Ends With `7esn`}[Any(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 00[$usn1..])] Order By 0xabc In .12 In 0Xa Descending,$@usn5 Descending Detach Delete [_usn4 In 12e12 In 123456789 Where `3esn`[0X0123456789ABCDEF..][07..]] Contains Extract(`5esn` In 0X7 In $#usn7|0[1e1][$usn1]) Contains None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07 Is Not Null Is Not Null),07 Ends With 9e12 Ends With `2esn`,usn1 In `` Match ((:usn2)-[usn2:#usn8|:`3esn`{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null}]->(`1esn` {`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]})<-[#usn8? *1000..0X0123456789ABCDEF{`7esn`:Count ( * )[$`5esn`..][$7..],`6esn`:`6esn` Ends With _usn4 Ends With False}]->(`2esn` :usn2)),_usn4=((@usn6 {`7esn`:999 In 0e0})<-[? *1000..0X0123456789ABCDEF{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}]-(`6esn` {`2esn`:$`3esn` Ends With 01234567})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)) Union All Merge ((@usn6 {`7esn`:999 In 0e0})<-[? *1000..0X0123456789ABCDEF{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}]-(`6esn` {`2esn`:$`3esn` Ends With 01234567})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)) Union Return Distinct *,All(#usn7 In $999 In 1e1 Where 1.e1 In 1000 In _usn3) Contains (`6esn` :`8esn`{@usn6:12.e12 Contains #usn7 Contains $_usn4})-[`8esn`{`7esn`:9e12 Starts With 1e1}]-(_usn3 :_usn4) Contains [`8esn` Is Not Null Is Not Null,12 Starts With #usn7 Starts With 0Xa,.0 Starts With `1esn`] As `8esn` Optional Match (:`7esn`{#usn8:$999 Ends With .e0,_usn4:`4esn`[\"d_str\"]['s_str']})<-[:`1esn`|`3esn`{`2esn`:$`3esn` Ends With 01234567}]->(_usn3 :`5esn`)-[:_usn3|:`7esn` *1000..0X0123456789ABCDEF]->(:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]}) Where 123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8] Unwind (`1esn` :`3esn`{#usn7:12[..0e0][...e1]})<-[`6esn`:``]->({@usn6:$1000 Is Not Null})[(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})<-[?:`7esn`|:`2esn`]->(#usn8 :usn1:`3esn`{`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[ *01234567..]->(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})..Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|123.654 Is Not Null)][{`2esn`:$999 Ends With .e0}..[@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``|.e0 =~Null]] As `8esn`"),
    octest:ct_string("Create (((`4esn` :``:usn2)<-[`3esn`?{@usn6:Count(*)[..@usn6][..`7esn`],`6esn`:`2esn` In 9e0 In 7}]-({`6esn`:@usn5[$`6esn`..][$999..],`8esn`:$@usn5[..0xabc][..$`3esn`]})-[:_usn4{`8esn`:12.e12 Is Not Null Is Not Null,#usn7:@usn6[Null...0][\"d_str\"..Count(*)]}]-(@usn6 {`5esn`:.e12 Starts With $#usn8 Starts With False}))),usn2=(`6esn` {`2esn`:$`3esn` Ends With 01234567})"),
    octest:ct_string("Merge `7esn`=((:`1esn`:_usn4{_usn3:0x0 Contains $`6esn` Contains `4esn`,@usn6:0Xa In #usn7 In 's_str'})-[#usn8:#usn7|@usn5 *123456789..{@usn5:usn2[12.e12..]}]->(`` )<-[:`2esn`|`4esn` *12..]-(_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})) Union All With  *,$#usn7 Ends With \"d_str\" As `7esn` Where 12.e12 Contains 9e1"),
    octest:ct_string("Optional Match _usn4=(((_usn4 :_usn4{_usn3:$`3esn`[.e1][_usn4]})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)<-[usn1:`7esn`|:`2esn`{`6esn`:Count(*) In #usn8 In \"d_str\",`1esn`:$`1esn` Ends With 0X0123456789ABCDEF}]-(`6esn` :`1esn`:_usn4))),usn1=(_usn4 :_usn4{`2esn`:`6esn` Starts With `6esn`,`8esn`:1000[0e0][1e1]}) Union Return *,$`1esn` Contains 1e1 Contains @usn6 Skip 07[_usn3..][`6esn`..] Optional Match _usn4=((:`3esn`{#usn7:$#usn7 In $@usn5 In $`1esn`})),(`2esn` :`1esn`:_usn4)-[?*..]-({`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}) Delete _usn4[$usn1..01234567][123.654..`5esn`] Union All Create ((`7esn` :`2esn`{`4esn`:0[1e1][$usn1],usn2:`8esn`[..$#usn8]})<-[_usn4?:usn2]-(@usn6 :`6esn`:_usn3{@usn5:0xabc =~$@usn5,usn1:0Xa[$`8esn`..][$_usn4..]})-[`3esn`?:`7esn`|:`2esn`]-(`5esn` :#usn8:`1esn`{_usn3:`6esn` Is Null Is Null})) Remove `2esn`(#usn7[0.12..])._usn4?"),
    octest:ct_string("Return Distinct 010[12.0..`4esn`][``..Count(*)],$`7esn`[123456789..$1000][Count ( * )..$7],$`2esn` Contains Count(*) As `3esn` Order By [$``[7],_usn3 Contains _usn4 Contains $@usn5] Starts With [`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]|usn2 =~7] Starts With Any(`3esn` In `2esn`[..01][..True] Where 12.e12 Contains #usn7 Contains $_usn4) Ascending,[usn2 In 7[12] Where #usn7[.e0]|$usn2 =~9e1] Is Null Is Null Ascending Limit 0.e0 Ends With 1.e1"),
    octest:ct_string("Unwind usn1 Starts With 00 As _usn3 Union Delete 12.e12 Contains `6esn`,$1000 Is Not Null,`1esn`[$@usn6][07] Optional Match usn1=(({usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})-[:`6esn`|:#usn8{`4esn`:$`2esn`[..$`3esn`][..12e12],#usn8:123.654 Is Not Null}]-(_usn3 :`5esn`)-[`4esn`?:#usn8|:`3esn`{`3esn`:01 Is Null,`1esn`:123456789[12]}]-(:_usn4{#usn7:1000[..`2esn`][..$@usn6],`1esn`:12e12 Starts With $0 Starts With $`2esn`})) Unwind 12 Is Not Null As `6esn`"),
    octest:ct_string("Create (@usn5 :`1esn`:_usn4) Detach Delete $_usn3,[Count(*)[9e12..12.0]] Starts With [`5esn` In 0X7 In $#usn7 Where 123456789 =~$999|$`8esn` Is Not Null Is Not Null] Starts With [$usn2 Is Not Null Is Not Null,0 =~1e1] Union Unwind 9e1[$``..][0.e0..] As @usn6"),
    octest:ct_string("Match `2esn`=(((`6esn` :`4esn`:`6esn`)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})<-[`4esn` *0Xa{@usn6:999 Starts With `2esn` Starts With .e1,`4esn`:$@usn5[..0xabc][..$`3esn`]}]->(@usn6 :``:usn2))),`7esn`=((:#usn7:`5esn`{`3esn`:Null[..0]})<-[@usn5? *0..01{`3esn`:$`1esn` In .e0,@usn6:12.0 =~@usn6 =~$`2esn`}]->(`6esn` :#usn7:`5esn`{_usn3:_usn4 Is Null Is Null})) Where $#usn8 Starts With .e12 Starts With 1.e1 Detach Delete [#usn8 In `7esn` Where .e0 Is Null Is Null] Ends With {usn1:$`4esn`[`6esn`..$12],`4esn`:usn1 Contains 010} Ends With (:``:usn2{``:True[$_usn3..]})<-[`2esn`? *01..123456789]-(`1esn` {#usn8:$#usn7[..9e0][..123.654],`5esn`:9e12 Starts With 1e1})<-[?:#usn8|:`3esn`{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]-(`1esn` $`4esn`),Extract(`6esn` In $`6esn`[``..][Count(*)..] Where 1.e1 Ends With $_usn4 Ends With #usn7|0xabc =~$@usn5) Contains {`5esn`:1.e1[`8esn`],`1esn`:.e0} Contains {usn1:$123456789 In 0.12} With  01234567 Starts With True Starts With $999 As `6esn`,usn2[..$usn1][..$#usn8] As `8esn` Limit $`5esn` Is Not Null Is Not Null Where usn1 Starts With 00 Union Create ((:`5esn`{`8esn`:$`1esn` Starts With Count(*),_usn3:usn1[...e12][..1.e1]})<-[? *0X7..{`2esn`:$@usn5 In $`6esn` In 12e12}]-(:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(`4esn` :_usn4)) With  *,Filter(`5esn` In 0X7 In $#usn7 Where $@usn5 Starts With `5esn` Starts With 01234567) Is Null Is Null,$@usn6[$`8esn`..][123456789..] As @usn6 Order By 0X0123456789ABCDEF In $usn2 In `4esn` Descending,.e0 Ends With $#usn7 Ends With False Desc Where .12[..usn2][..12e12] Create `3esn`=((:_usn3{_usn3:$`3esn`[.e1][_usn4]})-[`4esn`?:#usn8|:`3esn`{`3esn`:01 Is Null,`1esn`:123456789[12]}]-(:`5esn`)<-[ *01234567..]->(#usn8 :`8esn`))"),
    octest:ct_string("Unwind 9e1 =~123456789 =~999 As @usn5 Union Unwind 123.654 Starts With 0X7 Starts With $`4esn` As `2esn`"),
    octest:ct_string("With Distinct *,$7[$12..12e12][1.e1..9e1],12[..Count(*)][..$`2esn`] As `4esn` Remove All(`8esn` In 123456789 =~@usn6 Where ``[9e12][$999]).``? Union With  `1esn`[`3esn`..],(`3esn` {usn2:00[False..0e0]})<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(:`5esn`{#usn8:$``[True],`1esn`:@usn5 Is Null})<-[@usn6?:`8esn` *0..01]->(`5esn` :`4esn`:`6esn`)[[12.0 Starts With $`2esn` Starts With .e1]..] Skip 07 In 0Xa In usn1 Limit 010 Is Null Where Count ( * )[$`5esn`..][$7..] Return Extract(#usn7 In 9e1[$`1esn`..] Where @usn5 Is Null)[All(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789])..] As `1esn`,$`6esn`[1.e1][$_usn3] As usn1 Order By [#usn7 In 9e1[$`1esn`..] Where @usn5 Is Null] Is Not Null Desc Limit Count ( * ) In 0.12"),
    octest:ct_string("Merge @usn5=((:``:usn2{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7})) Detach Delete 12.e12 =~.0 =~usn1 Union Unwind 9e1 =~123456789 =~999 As @usn5 Union All Optional Match `4esn`=((({#usn7:$`3esn` Ends With 01234567,_usn3:usn1 =~$`7esn`})-[`7esn`?:usn1|`4esn` *00..0Xa{`3esn`:usn1 In ``}]-(usn1 {usn1:$#usn7 Starts With 01234567 Starts With $0})<-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(_usn3 :`3esn`{_usn3:01[`8esn`..9e12][.12..0]}))),#usn8=(({usn2:`2esn`[..$_usn3]})) Where `2esn`[..$_usn3] Return `6esn`[`5esn`..00],$1000 Is Null Is Null,0.0[usn1..] As `3esn` Limit All(#usn7 In $999 In 1e1 Where 1.e1 In 1000 In _usn3) Contains (`6esn` :`8esn`{@usn6:12.e12 Contains #usn7 Contains $_usn4})-[`8esn`{`7esn`:9e12 Starts With 1e1}]-(_usn3 :_usn4) Contains [`8esn` Is Not Null Is Not Null,12 Starts With #usn7 Starts With 0Xa,.0 Starts With `1esn`]"),
    octest:ct_string("Delete {#usn8:.0 Is Null Is Null}[..(_usn3 :@usn6{usn2:0Xa =~False =~@usn5,`3esn`:0x0[Count(*)..@usn6][Count(*)..0Xa]})<-[`7esn`?:`2esn`|`4esn` *..010{usn1:0e0[``..$1000][$7..12.e12],`5esn`:0x0 Starts With $`6esn`}]->(@usn5 {_usn4:`5esn` Contains #usn7 Contains 9e12})][..{`5esn`:@usn6[9e12],`5esn`:@usn6[999..$_usn3][0.12..$@usn5]}],Count(*) Is Not Null Is Not Null Remove {`8esn`:$`3esn`[$_usn4..0Xa]}._usn3,@usn5:`6esn`:_usn3,[0.e0[1000.._usn4][.e1..usn1],$`1esn` =~999,07[_usn3..][`6esn`..]].usn1! Union All Detach Delete Single(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`)[{`5esn`:`6esn`[$`8esn`][9e1]}],Extract(usn2 In 7[12] Where usn1 Starts With 00|`8esn` Contains Count(*) Contains $#usn7) Contains None(@usn6 In False Contains 0 Contains $`6esn` Where $usn2[0.e0]) Contains Extract(@usn6 In False Contains 0 Contains $`6esn` Where $usn2[`4esn`..9e12]|$`4esn`['s_str'..]),`` Starts With $123456789"),
    octest:ct_string("Match _usn3=((@usn5 {usn2:.12[0X7..][12e12..],`6esn`:$`4esn`[`6esn`..$12]})-[@usn6:`5esn`|:usn2 *0xabc{#usn8:999 In 0e0}]-(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})-[#usn7 *01..123456789]->(usn1 {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})),``=((:`5esn`{`8esn`:$`7esn`[0.12],_usn4:`1esn`})-[`5esn`:#usn7|@usn5]-({@usn6:123.654 In 12,#usn7:12.e12 Ends With `` Ends With 0})-[`1esn`?:@usn6|:`7esn` *..010]-(:`6esn`:_usn3{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})) Remove None(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`).@usn6?,[Count ( * ) In True In @usn5,#usn7[0.12..],1000[0e0][1e1]].`3esn`? Union Merge (_usn3 {`8esn`:0e0 =~7 =~12.0,_usn4:.e1[..$`3esn`][..01]})<-[_usn4{`2esn`:#usn8[`8esn`..],`2esn`:@usn6[9e12]}]-(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-(`2esn` :@usn5{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3}) Merge @usn6=(:`7esn`)<-[`1esn`?:usn1|`4esn` *..010]-(usn1 :_usn4{`4esn`:`7esn` Is Null}) Match (({@usn6:#usn7[`8esn`..usn1][$999..`7esn`]})<-[@usn5:_usn4 *0x0..]->({`1esn`:0X7 In $#usn7,_usn3:usn1 Contains 010})),`7esn`=(((`2esn` {``:$0 =~9e1 =~$`2esn`,`8esn`:`5esn`[..123.654][...e12]})-[`1esn` *01234567..]->(_usn3 {#usn7:12.e12 Ends With `` Ends With 0,``:$@usn6 In @usn6 In 1e1})<-[`4esn`:`1esn`|`3esn` *12..]-(usn1 :`7esn`{`7esn`:9e12 Starts With 1e1,_usn3:$`7esn`[$_usn4][.e0]}))) Where 010 Starts With 0 Starts With 0.0"),
    octest:ct_string("Return 12 Contains 1.e1 As `5esn`,Extract(usn2 In 7[12] Where 12e12 Contains `2esn`|`5esn`[$`7esn`..$@usn5])[`7esn`(Distinct `1esn` Starts With 0xabc Starts With $usn2)..],usn2(0X7[.0])[{#usn8:0Xa Ends With $`3esn` Ends With $1000}..][[Null =~`6esn`]..] As `6esn` Merge `8esn`=(usn1 {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})<-[`4esn`?:`4esn`|@usn5 *01..123456789]-(#usn7 :`4esn`:`6esn`{`1esn`:`1esn`[$@usn6][07]}) Union All Remove #usn7:usn2,[07[_usn3..][`6esn`..],$usn1 Ends With _usn4 Ends With `2esn`,False[$`4esn`..]].`3esn`?,[`6esn` Ends With _usn4 Ends With False].`4esn`! Merge ((`1esn` :`2esn`)<-[`1esn`:`8esn` *999..{`4esn`:$123456789 Starts With 0.12 Starts With Null,usn2:.e1[7..][9e0..]}]->(`1esn` :`3esn`{#usn7:12[..0e0][...e1]})-[@usn6?:#usn8|:`3esn`{usn1:.e1[..$`3esn`][..01],`4esn`:$`5esn` In .12}]->(usn2 :_usn4)) On Create Set #usn8+=[#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[..$`8esn`][..Null]|$@usn5[..0xabc][..$`3esn`]] Contains (`8esn` )<-[`2esn`:`4esn`|@usn5 *01234567..]-(`5esn` :`3esn`)<-[#usn8?:`8esn`{`1esn`:999 In #usn8 In $``,`8esn`:False[$`4esn`..]}]->(`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]}) Contains Any(`5esn` In 0X7 In $#usn7 Where 01 Is Null),@usn5+=.e0 =~$`7esn` =~0X0123456789ABCDEF,``+=(`6esn` {_usn3:9e12 Starts With 1e1,_usn4:`2esn`[..$_usn3]})-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->({`1esn`:#usn7[0]}) Starts With Extract(`6esn` In $`6esn`[``..][Count(*)..] Where @usn5 Is Null|0xabc In 010 In #usn7) On Match Set `6esn`(Distinct 0Xa[$`8esn`..][$_usn4..],0xabc In Null).`2esn`! =(`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null})<-[? *..010{#usn8:False Is Null}]->(#usn7 {#usn7:1.e1 Starts With 9e12})<-[:_usn3|:`7esn` *00..0Xa]-(`1esn` $`4esn`)[..[0X7 In $#usn7,`4esn` Is Not Null Is Not Null,.0[.e12..]]][..(:`2esn`{_usn3:@usn5[0.0..0X7]})<-[`7esn`?:`2esn`|`4esn` *..010{usn1:0e0[``..$1000][$7..12.e12],`5esn`:0x0 Starts With $`6esn`}]->(@usn5 {_usn4:`5esn` Contains #usn7 Contains 9e12})],Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null).`7esn`? =Filter(#usn7 In $999 In 1e1 Where 9e12[..1e1][..'s_str'])[..Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|0 Ends With 12.e12 Ends With usn2)][..None(#usn7 In $999 In 1e1 Where `1esn`[0.12..][@usn6..])],Extract(`3esn` In 9e1 Contains $999 Where _usn3[`2esn`..0X7][0.e0..$`3esn`]).@usn5 =$@usn6 Ends With 123456789 Ends With 12.0 Return Distinct _usn4(Distinct usn2[07..][.0..]) Ends With Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 12[$`5esn`..][False..]|$`2esn` Starts With `4esn` Starts With $usn1) Ends With Extract(@usn5 In 9e0 Ends With $#usn8 Where $`3esn` In $usn2),usn1[..$@usn6][..00] As #usn7,(#usn8 :_usn3{@usn5:_usn3 Starts With 12e12 Starts With `5esn`,@usn6:usn2 In _usn3})-[`1esn`?{`8esn`:.e0,usn2:9e1 Contains $999}]->(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})-[? *..010{`2esn`:'s_str'[0..]}]->({`7esn`:1.e1 In 1000 In _usn3,`8esn`:010 Starts With $`` Starts With 0e0})[..(`5esn` )-[ *00..0Xa]->(usn1 :#usn7:`5esn`{`5esn`:$@usn5 In 12e12 In 01})-[usn1?:`2esn`|`4esn`{#usn7:$#usn7[..9e0][..123.654],usn2:.e0 Is Not Null Is Not Null}]-(`1esn` :usn1:`3esn`{_usn3:.0[.e12..]})] As `7esn` Order By 0X7[..$`8esn`] Desc,$123456789[12e12..9e0] Descending Union All Return Distinct *,$`7esn`[0.12] Limit 12[..0e0][...e1] Return *,`2esn`[..$_usn4][...12] As `6esn`,`1esn` Starts With 9e1 As `6esn` Order By 01 Ends With 123456789 Desc,1.e1[12.e12..] Desc,\"d_str\" Is Not Null Ascending Skip [#usn7 In 9e0[$1000] Where `6esn`[$1000][`3esn`]][Extract(#usn7 In $999 In 1e1 Where 9e12 Starts With 1e1|010 Starts With $`` Starts With 0e0)..] Limit @usn6 =~999 =~@usn5 Unwind 01 Ends With 123456789 As usn1"),
    octest:ct_string("Delete #usn7[``],$`2esn`[.0..][0.0..],999 Ends With 999 Ends With `3esn` Union All Unwind 01 Ends With 123456789 As `7esn`"),
    octest:ct_string("With Distinct 0[$#usn8..][0x0..]"),
    octest:ct_string("With  *,_usn4(#usn7 Starts With $123456789 Starts With 12e12) In None(`5esn` In `7esn`[$usn2..][$123456789..] Where 12.e12 Starts With \"d_str\" Starts With 9e1) As @usn5,#usn7[`8esn`..usn1][$999..`7esn`] Order By $@usn6[_usn3..][$999..] Asc,[$12[$usn1..][Count(*)..],usn2[1.e1],123456789[12]] Ends With [`5esn`[$`7esn`..$@usn5],$#usn7[..9e0][..123.654],1.e1 Is Null Is Null] Ends With Extract(`3esn` In 9e1 Contains $999 Where _usn4[0]|12 Starts With #usn7 Starts With 0Xa) Asc Limit @usn6[`1esn`..] Where $`1esn` Starts With Count(*) Return *,Single(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`)[{`5esn`:`6esn`[$`8esn`][9e1]}] As `7esn` Skip $0 =~9e1 =~$`2esn` Limit Any(@usn5 In 9e0 Ends With $#usn8 Where 12.e12 =~0X0123456789ABCDEF =~1.e1)[(`5esn` :#usn8:`1esn`{_usn3:`6esn` Is Null Is Null})<-[?{@usn6:$0[0Xa..$123456789],`4esn`:`7esn` Contains 9e0}]->({_usn3:0X0123456789ABCDEF Contains 12e12 Contains 12.e12})-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})..][Filter(#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`])..] Match ((`4esn` :`4esn`:`6esn`)-[`3esn`:`2esn`|`4esn`]-({#usn8:False Starts With 0X7 Starts With 01234567})<-[#usn7?:`5esn`|:usn2{`7esn`:123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]}]-(`` {``:$@usn6 Ends With 12.e12 Ends With @usn5,`2esn`:$`3esn` Ends With 01234567})),#usn8=(:`7esn`{_usn3:@usn5[0.0..0X7]}) Where usn2 Contains $0 Contains .0"),
    octest:ct_string("Delete None(#usn7 In $999 In 1e1 Where `1esn`[0.12..][@usn6..])[..[_usn4 In 12e12 In 123456789 Where 1.e1 =~$_usn4]] Remove {``:.e12 Ends With 0Xa Ends With 0xabc}.usn2? Union Unwind 999[..`1esn`][..07] As `8esn` Optional Match ((:@usn5{`1esn`:999 Is Not Null Is Not Null,``:.e1[7..][9e0..]})<-[_usn4?:`3esn`]-(:_usn3{_usn4:.e1[7..][9e0..]})-[`5esn`?{_usn4:$usn2 =~9e1}]->(`8esn` :#usn8:`1esn`{usn2:12.e12 Ends With $``,`2esn`:1e1 Contains 's_str' Contains `3esn`})) Optional Match ``=(((#usn7 :#usn8:`1esn`{``:.0[$``..0X7]})<-[? *0xabc]-(:@usn6{`6esn`:01 Ends With 0Xa Ends With 0X7})<-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->(usn2 :`5esn`))),_usn4=(((_usn4 :_usn4{_usn3:$`3esn`[.e1][_usn4]})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)<-[usn1:`7esn`|:`2esn`{`6esn`:Count(*) In #usn8 In \"d_str\",`1esn`:$`1esn` Ends With 0X0123456789ABCDEF}]-(`6esn` :`1esn`:_usn4))) Union All Optional Match `8esn`=(@usn6 {`5esn`:.e12 Starts With $#usn8 Starts With False})<-[`6esn`:``]->({@usn6:$1000 Is Not Null}),`8esn`=(:`4esn`:`6esn`{usn2:$`8esn` Is Not Null Is Not Null})<-[@usn5? *0..01{`3esn`:$`1esn` In .e0,@usn6:12.0 =~@usn6 =~$`2esn`}]->({usn2:.0 Starts With `1esn`,`2esn`:00 Contains Count ( * ) Contains 0x0})-[? *0Xa{usn1:`3esn`[0x0..]}]->(:`5esn`{`1esn`:0.e0}) Where `7esn` In 010 In usn1 Merge #usn8=((`1esn` {usn1:12e12 In $`5esn`})<-[`8esn`?:#usn7|@usn5{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3}]-(:usn1:`3esn`{@usn6:.0 Ends With Count ( * )})) On Match Set [12e12 =~1e1,0X7[..$`8esn`]].`7esn` =1e1 Ends With $`2esn`,`8esn`+=01[$`7esn`..$@usn6] On Create Set [`5esn` In `7esn`[$usn2..][$123456789..] Where $`5esn` =~$0 =~``|.12 In `8esn` In $#usn8]._usn4? =7 =~0.12,`6esn` =Single(`5esn` In `7esn`[$usn2..][$123456789..] Where 12e12 Is Not Null) Is Not Null Is Not Null,Any(#usn7 In $999 In 1e1 Where 0X7['s_str'..][01..]).`3esn`! =(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})-[? *0Xa{usn1:`3esn`[0x0..]}]->(:`5esn`{`1esn`:0.e0}) Is Not Null Is Not Null"),
    octest:ct_string("Merge ((:usn2{``:Count(*)[9e12..12.0],#usn7:`2esn`[$12..]})) Merge `4esn`=(:#usn7:`5esn`{`4esn`:$``[..\"d_str\"][..$#usn8]}) On Create Set #usn8(Distinct 0[$`5esn`],Count(*)[9e12..12.0]).`7esn`! =123.654 In $999 In _usn3 On Match Set `1esn` =0x0[@usn6..][01..],`5esn`(Distinct $#usn7 Contains $`7esn` Contains .e12).@usn6! =(usn2 :_usn3)-[`6esn`?:`6esn`|:#usn8]-(`1esn` {_usn4:`8esn` Is Null})<-[`7esn`?:#usn8|:`3esn`]-(_usn4 :`3esn`) Is Null Union All Return Distinct *,[usn2 In 7[12] Where #usn7[.e0]|$usn2 =~9e1] Is Null Is Null As #usn8 Order By @usn5(Distinct) =~[_usn3[`5esn`..][usn2..],$#usn7 =~`2esn`] =~1.e1 Ascending Skip (:``:usn2{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7})-[:`2esn`|`4esn`{_usn3:@usn6[`1esn`..],@usn6:@usn6[9e12]}]->({usn1:$#usn7 =~`2esn`})-[`3esn`?{@usn6:Count(*)[..@usn6][..`7esn`],`6esn`:`2esn` In 9e0 In 7}]->(`8esn` :@usn6{`7esn`:0e0[999..$``]})[{`6esn`:$`4esn`[`6esn`..$12],usn1:00 In @usn6 In 0}..][Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 123456789[12])..] Limit 0Xa[010..$0][$`2esn`..999]"),
    octest:ct_string("Return Distinct *,00[12e12][$`7esn`],@usn5(Distinct) =~[_usn3[`5esn`..][usn2..],$#usn7 =~`2esn`] =~1.e1 As #usn8 Order By Extract(`3esn` In `2esn`[..01][..True] Where 0.0 Is Null Is Null|$usn2[0.e0])[{usn2:@usn5 Is Null,`8esn`:$@usn6 Ends With 123456789 Ends With 12.0}..] Descending,(:_usn4$12)-[`1esn`?:`6esn`|:#usn8 *0Xa]-(usn1 :#usn8:`1esn`)[{`7esn`:$usn2 =~9e1}..] Desc,.12 In `8esn` In $#usn8 Desc Skip Extract(`8esn` In 123456789 =~@usn6 Where 123.654[`4esn`..12]|`8esn` Contains Count(*) Contains $#usn7)[{`7esn`:usn1[False..`5esn`][$1000..$12],`1esn`:$usn1[`2esn`..][$`2esn`..]}] Limit `6esn` In .0 In $`` Unwind {`8esn`:usn2 =~7,@usn5:`6esn` Ends With _usn4 Ends With False} Ends With [0X7 In $#usn7,`4esn` Is Not Null Is Not Null,.0[.e12..]] Ends With (_usn4 :_usn4)<-[`7esn`:_usn4]->(`5esn` {``:_usn3 Contains 9e12 Contains `8esn`,@usn6:``[7.._usn3]})-[ *..07{`6esn`:Count(*)[9e12..12.0]}]->(:usn1:`3esn`{_usn4:$#usn7 Contains $`7esn` Contains .e12}) As _usn4 Union All Optional Match #usn7=(`1esn` :@usn6{`6esn`:00[False..0e0],`6esn`:$usn2 =~1.e1 =~usn1})<-[`7esn`:`2esn`|`4esn`{_usn4:.e1[7..][9e0..]}]-(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"})-[:_usn3|:`7esn`*{`1esn`:12[..$999][..$`2esn`],usn2:9e1}]->(:``:usn2{`5esn`:$12 Starts With $usn1}),((:#usn7:`5esn`{_usn4:$usn2 =~9e1})<-[@usn5?:usn2 *0..01]->(`8esn` :`2esn`{@usn5:$`4esn` Contains _usn3 Contains `8esn`,`7esn`:$`4esn`[`4esn`][Count(*)]})) Where 9e1 Starts With Count ( * ) Merge (`2esn` :`1esn`:_usn4)-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-({`6esn`:9e12 =~@usn6}) On Match Set `5esn`+=010[..7][..`4esn`],(`2esn` :@usn5)-[`5esn`? *01..123456789{`5esn`:@usn6[9e12],`5esn`:@usn6[999..$_usn3][0.12..$@usn5]}]-(`1esn` {`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]}).`4esn`! =$@usn6 Ends With `1esn`,`6esn` =.0[$``..0X7] Detach Delete 01[`3esn`..][Count(*)..],usn2[07..][.0..] Union All Unwind 0x0[Count(*)..@usn6][Count(*)..0Xa] As _usn3"),
    octest:ct_string("Match `2esn`=({@usn5:$`5esn` Is Not Null Is Not Null})<-[#usn8?:`8esn`{`1esn`:999 In #usn8 In $``,`8esn`:False[$`4esn`..]}]->(`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]}) Create `8esn`=(usn2 :`7esn`)-[? *7..{#usn7:`4esn`[123456789]}]-(:usn1:`3esn`{@usn6:.0 Ends With Count ( * )}),_usn4=((`2esn` {`4esn`:1000[12e12][`5esn`],`1esn`:07 Ends With 9e12 Ends With `2esn`})-[:@usn6|:`7esn`{#usn7:.0[.e12..],usn2:usn2 =~usn1 =~Count ( * )}]-(`1esn` :``:usn2{@usn5:`4esn`[\"d_str\"]['s_str']})-[:`6esn`|:#usn8{_usn4:0Xa Ends With $`3esn` Ends With $1000}]->(:`5esn`{`4esn`:0Xa[..Count ( * )][..$123456789]})) Optional Match usn1=(`6esn` )<-[usn1? *0xabc{usn1:$_usn4 Starts With $1000 Starts With 12}]-(usn1 :usn1:`3esn`),`6esn`=(:@usn5{`1esn`:999 Is Not Null Is Not Null,``:.e1[7..][9e0..]})<-[? *0X7..{`2esn`:$@usn5 In $`6esn` In 12e12}]-(:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]}) Union All Delete [#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 12.e12 Starts With \"d_str\" Starts With 9e1|$#usn7 Contains $`7esn` Contains .e12] Starts With usn2(01 Is Null) Starts With Filter(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789]),All(`5esn` In `7esn`[$usn2..][$123456789..] Where _usn4 Is Not Null) Contains [@usn5 In 's_str'[0..] Where `6esn`[..Count ( * )][..$_usn4]] Contains ({usn1:$123456789 In 0.12})<-[`8esn`?:#usn7|@usn5{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3}]-(usn2 ) Create _usn3=((:`1esn`:_usn4{_usn3:0x0 Contains $`6esn` Contains `4esn`,@usn6:0Xa In #usn7 In 's_str'})-[#usn8:#usn7|@usn5 *123456789..{@usn5:usn2[12.e12..]}]->(`` )<-[:`2esn`|`4esn` *12..]-(_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})),usn2=((`` :`3esn`{`6esn`:Count(*)[9e12..12.0]})<-[`6esn`? *00..0Xa]->(#usn7 :#usn8:`1esn`{``:.0[$``..0X7]})-[usn2?{``:$`1esn`[``][07]}]-(`3esn` :`6esn`:_usn3{`4esn`:12.0 Starts With .12 Starts With `6esn`,#usn8:0.0 Is Null Is Null})) Merge `1esn`=(((_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]->(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]})-[?:`8esn`*]-(`7esn` :usn2{`3esn`:12.0 In 123.654 In _usn4}))) On Match Set _usn4 =0Xa In #usn7 In 's_str',`5esn`+=$#usn8 Starts With .e12 Starts With 1.e1,`1esn`+=usn2 In _usn3 On Match Set _usn3+=`6esn`[$``..$_usn3][1000...0],[usn2 In 7[12] Where $@usn6 Ends With 12.e12 Ends With @usn5|0 Ends With 12.e12 Ends With usn2].`1esn` =123.654 Is Null Is Null Union With  *,All(#usn7 In $999 In 1e1 Where 1.e1 In 1000 In _usn3) Contains (`6esn` :`8esn`{@usn6:12.e12 Contains #usn7 Contains $_usn4})-[`8esn`{`7esn`:9e12 Starts With 1e1}]-(_usn3 :_usn4) Contains [`8esn` Is Not Null Is Not Null,12 Starts With #usn7 Starts With 0Xa,.0 Starts With `1esn`] As `8esn` Where $`7esn`[.e1][12.0]"),
    octest:ct_string("Optional Match `8esn`=((_usn4 :`6esn`:_usn3)<-[`3esn`?:`2esn`|`4esn` *123456789..{_usn4:1.e1[`8esn`]}]->(`6esn` )<-[`5esn`?:`8esn`]->({``:12 Starts With #usn7 Starts With 0Xa,`8esn`:``[usn1][`5esn`]})),(`2esn` $`6esn`) Where 7 =~`4esn` Merge ((@usn6 {_usn4:0X0123456789ABCDEF Contains 12e12 Contains 12.e12})<-[`6esn`:``]->({@usn6:$1000 Is Not Null})-[?:`5esn`|:usn2 *123456789..{#usn7:$`1esn` =~999,`4esn`:$@usn6[00]}]->(`` {#usn8:.e12 Is Null Is Null,@usn6:`1esn` Is Not Null Is Not Null})) On Match Set `8esn` =Count(*)[9e12..12.0],@usn5+=9e0[Count(*)..0.12][$`1esn`..12.0] Create (`8esn` :#usn8:`1esn`{usn1:0x0 Starts With $`6esn`})"),
    octest:ct_string("Detach Delete 0Xa[Count(*)..],$`1esn` =~1e1 Optional Match usn1=((`` )<-[usn2?:`6esn`|:#usn8 *999..]-(`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})<-[?:usn2{usn2:@usn5 Is Not Null}]-(`7esn` {#usn8:False Starts With 0X7 Starts With 01234567})),((`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})) Where $123456789[...12][..@usn6] Detach Delete (`3esn` :usn2)-[? *0xabc]-(`6esn` {`3esn`:.0[$``..0X7],`3esn`:$usn2 Is Not Null Is Not Null}) Is Null,(#usn7 {_usn4:1.e1[`8esn`]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) Contains Extract(#usn7 In 9e0[$1000] Where _usn4 Is Not Null Is Not Null|usn2 Ends With .e1 Ends With $`5esn`),Any(#usn7 In 9e0[$1000] Where .e0 Is Null) =~Extract(`3esn` In 9e1 Contains $999 Where `2esn` Starts With 12.e12 Starts With 12.0|$`3esn` In $usn2) =~{#usn8:0.0 =~9e0 =~$0,`5esn`:Count ( * ) Ends With $123456789}"),
    octest:ct_string("Remove Extract(#usn7 In True Contains 's_str' Contains $usn1 Where 0 =~1e1).`8esn`!,[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $0[123.654..0.e0]|_usn3 Contains _usn4 Contains $@usn5].usn2!,{`4esn`:_usn4[@usn6..][$0..],@usn5:$@usn6 In @usn6 In 1e1}.`3esn`!"),
    octest:ct_string("Remove ``:`5esn` Merge `8esn`=(@usn6 {`5esn`:.e12 Starts With $#usn8 Starts With False})<-[`6esn`:``]->({@usn6:$1000 Is Not Null}) On Match Set `3esn`+=[_usn4 In 12e12 In 123456789 Where True Contains 's_str' Contains $usn1|999 Contains $1000] Starts With Single(`5esn` In `7esn`[$usn2..][$123456789..] Where $`5esn` =~$0 =~``),`2esn`+=\"d_str\" In @usn5 In $@usn5 On Create Set `7esn` ={usn2:_usn3[0x0]} In Extract(#usn7 In 9e0[$1000] Where $_usn3 Is Null|010 Starts With 0 Starts With 0.0) In {`7esn`:False[$`4esn`..]} Unwind usn1 Starts With 00 As _usn3 Union All Remove usn1:`1esn`:_usn4,[#usn8 In `7esn` Where 12.0 Starts With $`2esn` Starts With .e1|$`6esn`[1.e1][$_usn3]].usn1?,[`5esn` In `7esn`[$usn2..][$123456789..]].``? Optional Match (`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]}),`4esn`=({`7esn`:`8esn`[$`4esn`..$#usn8]}) Where $`2esn` =~9e12 Union Unwind 0x0[0.0] As `3esn`"),
    octest:ct_string("Create (((`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-({`6esn`:9e12 =~@usn6})<-[?:usn1|`4esn` *01..123456789{usn1:.e12[$@usn6..00][01234567.._usn3],`1esn`:`7esn` Contains 9e0}]-(_usn3 :@usn5{`8esn`:1e1 Contains 's_str' Contains `3esn`}))),`6esn`=(:`3esn`{@usn6:$`5esn` =~$`8esn` =~usn2,`8esn`:12[..0e0][...e1]}) Create usn2=((`` )<-[usn2?:`6esn`|:#usn8 *999..]-(`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})<-[?:usn2{usn2:@usn5 Is Not Null}]-(`7esn` {#usn8:False Starts With 0X7 Starts With 01234567})),`8esn`=((`1esn` :``:usn2{@usn5:`4esn`[\"d_str\"]['s_str']})) Union Merge @usn5=(:#usn8:`1esn`{`3esn`:123.654[..0.e0][..'s_str']}) On Create Set usn1+=@usn5 Is Null,usn2 =`8esn` =~@usn6 =~$`2esn`,@usn5 =count($`4esn`[`8esn`],`4esn` Is Not Null Is Not Null) =~Filter(@usn5 In 's_str'[0..] Where _usn3[0x0]) Union All Match ((:`4esn`:`6esn`{@usn5:$#usn7[..9e0][..123.654],`2esn`:7[12]})) Remove Extract(@usn6 In 010[`5esn`]|False[$`4esn`..]).@usn5,{`3esn`:9e1 Ends With Count(*) Ends With $7}._usn4! Detach Delete {usn1:0x0[$0][7],`5esn`:@usn5 Contains #usn8 Contains 12.0}[[@usn5 In 9e0 Ends With $#usn8 Where 00 Contains Count ( * ) Contains 0x0]]"),
    octest:ct_string("Return Distinct (`5esn` :`4esn`:`6esn`)-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(#usn7 :``:usn2)[..Filter(#usn8 In `7esn`)] As #usn7,1e1 Is Null Is Null As usn2,{`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]}[..`2esn`(Distinct 0 Ends With 12.e12 Ends With usn2)][..Filter(_usn4 In 12e12 In 123456789 Where .e1 In 123456789)] As usn1 Match ``=(:_usn3{`7esn`:$999 Ends With .e0})<-[`8esn`?:`2esn`|`4esn`{usn2:#usn8[`6esn`..][$``..]}]-(@usn6 {`6esn`:$`5esn` =~usn1,`5esn`:$`` Starts With $1000 Starts With @usn6})-[?{_usn3:010[`5esn`],_usn4:#usn8 =~.e0}]-(#usn8 :`3esn`{`5esn`:$@usn6 Ends With `1esn`}),`3esn`=((`8esn` :@usn5{`5esn`:_usn3 In $`8esn` In @usn6,_usn4:$@usn6 Ends With 12.e12 Ends With @usn5})-[?:#usn7|@usn5 *0X0123456789ABCDEF..{_usn3:@usn5 Is Not Null}]-(#usn8 {`5esn`:$12[$usn1..][Count(*)..],`7esn`:0e0[``..$1000][$7..12.e12]})-[`4esn`?:#usn8|:`3esn`{`3esn`:01 Is Null,`1esn`:123456789[12]}]-(:_usn4{#usn7:1000[..`2esn`][..$@usn6],`1esn`:12e12 Starts With $0 Starts With $`2esn`})) With  *,count(Distinct $@usn6 Ends With 123456789 Ends With 12.0,$`2esn`[.0..][0.0..]) Is Not Null Is Not Null Order By .e0 Starts With $@usn6 Starts With $7 Descending Skip [$12[$usn1..][Count(*)..],usn2[1.e1],123456789[12]] Ends With [`5esn`[$`7esn`..$@usn5],$#usn7[..9e0][..123.654],1.e1 Is Null Is Null] Ends With Extract(`3esn` In 9e1 Contains $999 Where _usn4[0]|12 Starts With #usn7 Starts With 0Xa) Union Merge ((usn2 :`6esn`:_usn3)-[?:#usn7|@usn5 *0X0123456789ABCDEF..{_usn3:@usn5 Is Not Null}]-(#usn8 {`5esn`:$12[$usn1..][Count(*)..],`7esn`:0e0[``..$1000][$7..12.e12]})) On Create Set `5esn` =$1000[$`4esn`..False],`6esn` =[#usn8 In `7esn` Where @usn5 Contains 9e0] Contains [$usn1 Ends With _usn4 Ends With `2esn`],`2esn` =12.0 Is Null Create (`6esn` {`2esn`:$`3esn` Ends With 01234567}),usn2=({`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})<-[`4esn` *0Xa{@usn6:999 Starts With `2esn` Starts With .e1,`4esn`:$@usn5[..0xabc][..$`3esn`]}]->(@usn6 :``:usn2)<-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->(_usn4 :@usn5) Delete (usn2 :usn1:`3esn`{`3esn`:`2esn` Is Null})<-[:`8esn` *999..{@usn6:`7esn` Ends With $7 Ends With $@usn5,``:0e0 Starts With 999 Starts With `2esn`}]->(`6esn` :#usn7:`5esn`)<-[usn1:`1esn`|`3esn`]->(`1esn` {#usn8:$#usn7[..9e0][..123.654],`5esn`:9e12 Starts With 1e1}) =~(`7esn` {#usn7:$@usn6 Ends With `1esn`})<-[#usn8 *0x0..]->(_usn3 :usn2{#usn8:$`2esn` Is Null,_usn3:123.654 Is Not Null})-[? *0X0123456789ABCDEF..]-(usn2 :_usn3)"),
    octest:ct_string("Remove [@usn6 In False Contains 0 Contains $`6esn` Where $@usn6[$`8esn`..][123456789..]|$`3esn` In $usn2].`5esn`?,[$usn2[0.e0],#usn8 Is Not Null Is Not Null,.12[01][@usn5]].`7esn`! Optional Match ((:`3esn`{`4esn`:$999[0Xa..][9e1..]})-[`7esn`?:`2esn`|`4esn` *..010{usn1:0e0[``..$1000][$7..12.e12],`5esn`:0x0 Starts With $`6esn`}]-(:`3esn`{`4esn`:$999[0Xa..][9e1..]})),_usn4=((`1esn` {usn1:12e12 In $`5esn`})<-[`8esn`?:#usn7|@usn5{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3}]-(:usn1:`3esn`{@usn6:.0 Ends With Count ( * )})) Where @usn5 Is Null Remove Any(usn2 In 7[12] Where 0x0 Ends With 12.0 Ends With `5esn`).#usn8,Filter(#usn7 In 9e0[$1000] Where .e0 Is Null).`2esn`! Union All Match _usn4=((:`3esn`{#usn7:$#usn7 In $@usn5 In $`1esn`})) Where 123456789[12] Merge #usn7=(`1esn` :@usn6{`6esn`:00[False..0e0],`6esn`:$usn2 =~1.e1 =~usn1})<-[`7esn`:`2esn`|`4esn`{_usn4:.e1[7..][9e0..]}]-(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"})-[:_usn3|:`7esn`*{`1esn`:12[..$999][..$`2esn`],usn2:9e1}]->(:``:usn2{`5esn`:$12 Starts With $usn1}) On Match Set _usn3:`7esn` On Create Set Single(@usn6 In 010[`5esn`] Where 123.654).`6esn`? =0.e0[0X0123456789ABCDEF..],(:`4esn`:`6esn`{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7})<-[usn2?:@usn5|_usn3*{_usn4:@usn5 Starts With $`3esn`,#usn7:$`5esn` Is Not Null}]-(#usn7 :``:usn2)-[:_usn3|:`7esn` *1000..0X0123456789ABCDEF]->(:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]}).`3esn`? =999[..`1esn`][..07],[@usn6 In 010[`5esn`] Where @usn6 Contains .12 Contains $usn1].`6esn` =`7esn` Starts With @usn5 With Distinct 0Xa In #usn7 In 's_str',`4esn` Starts With 0e0 As `7esn` Skip (#usn7 {_usn4:1.e1[`8esn`]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) Contains Extract(#usn7 In 9e0[$1000] Where _usn4 Is Not Null Is Not Null|usn2 Ends With .e1 Ends With $`5esn`) Where .e0 Union Detach Delete `` =~.12,[1e1 Is Not Null Is Not Null,``[$`3esn`],$`8esn` Is Not Null Is Not Null][..[$usn1 Ends With _usn4 Ends With `2esn`]][..Extract(usn2 In False[$usn1][0x0] Where .e1[usn2..$_usn3][.0..$#usn7])],123456789[12] With Distinct $#usn8 Ends With `` Ends With 999 As `5esn`,Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 12.e12[0..0.12][123.654..9e12]) Is Not Null Is Not Null As _usn3 Order By _usn4(Distinct $@usn6[$`8esn`..][123456789..],$`` Starts With $1000 Starts With @usn6)[[#usn7 In True Contains 's_str' Contains $usn1 Where $usn2 =~1.e1 =~usn1]..][All(#usn7 In True Contains 's_str' Contains $usn1 Where $`2esn` Contains Count(*))..] Desc,{#usn8:0.0 =~9e0 =~$0,`5esn`:Count ( * ) Ends With $123456789} Is Not Null Desc,9e0 Ends With $#usn8 Desc Limit 12.0 Starts With $`2esn` Starts With .e1 Where 9e1 Ends With Count(*) Ends With $7 Merge `1esn`=(`6esn` {``:$@usn5 Contains 's_str' Contains \"d_str\",_usn3:$#usn8[12.e12..`8esn`][12.0..0.0]})-[:`5esn`|:usn2 *01234567..]-(:`2esn`{_usn3:@usn5[0.0..0X7]})-[#usn7:#usn8|:`3esn`{`6esn`:0.e0[$`4esn`..`2esn`],_usn3:7[12]}]-(`3esn` :usn2{`6esn`:#usn8 Is Null}) On Match Set `` =$``[..\"d_str\"][..$#usn8],Any(#usn7 In 9e0[$1000] Where 's_str'[0x0..1.e1]).usn2? =9e1[..123456789],@usn5+=[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 12.e12 Starts With \"d_str\" Starts With 9e1|$#usn7 Contains $`7esn` Contains .e12][#usn8(Distinct $_usn4 Is Null Is Null,01[`8esn`..9e12][.12..0])..[_usn4 In 12e12 In 123456789 Where Count ( * ) Ends With $123456789]][Filter(_usn4 In 12e12 In 123456789 Where $`5esn` =~usn1)..[$`5esn` In _usn3 In 0.0]]"),
    octest:ct_string("With Distinct [#usn7 In 9e1[$`1esn`..] Where $@usn5 In $`6esn` In 12e12|12.0 Is Null Is Null] Contains [`3esn` In `2esn`[..01][..True] Where $0 Ends With $usn1 Ends With $_usn3] As #usn8 Order By [#usn7 In $999 In 1e1 Where 0X7['s_str'..][01..]] Is Not Null Is Not Null Desc Limit Any(`5esn` In 0X7 In $#usn7 Where 0.12 Contains False Contains 1.e1) Contains 0X7 Contains Extract(`8esn` In 123456789 =~@usn6 Where @usn5 Contains 9e0|9e0 Contains $12 Contains `3esn`) Merge (_usn3 :`7esn`) On Create Set [@usn6 In False Contains 0 Contains $`6esn` Where 12.e12 =~.0 =~usn1].usn2! =None(#usn7 In True Contains 's_str' Contains $usn1 Where 00[12..$`6esn`]) Ends With None(#usn7 In 9e0[$1000] Where 1e1 Contains 0.e0 Contains 9e1),`8esn` =01[07..][1.e1..] On Create Set #usn7+=Null[.12..12e12],Single(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $0[123.654..0.e0]).`1esn`! =[123456789 =~$999,$`2esn` Ends With `6esn`,12.e12 Contains 9e1][`5esn`(Distinct .e0[01234567..$`8esn`])][All(`3esn` In 9e1 Contains $999 Where $`5esn` Is Not Null Is Not Null)],@usn6 =usn2[1.e1] Union All Remove (`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})<-[usn1? *01234567..{@usn5:01[`3esn`..][Count(*)..]}]->(`3esn` :`6esn`:_usn3{`4esn`:12.0 Starts With .12 Starts With `6esn`,#usn8:0.0 Is Null Is Null}).#usn7,[`8esn` In 123456789 =~@usn6 Where 0x0[@usn6..][01..]|#usn7[.e0]].usn2?,Extract(#usn7 In True Contains 's_str' Contains $usn1 Where `8esn`[..$#usn8]).`2esn`! Unwind 9e1 =~123456789 =~999 As @usn5 Create #usn7=(`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12}),({`1esn`:1.e1[`8esn`]})<-[#usn8?:`8esn`{`1esn`:999 In #usn8 In $``,`8esn`:False[$`4esn`..]}]->({usn1:$123456789 In 0.12}) Union Unwind Any(@usn6 In False Contains 0 Contains $`6esn` Where 12e12 In $`5esn`) =~[#usn7 In 9e1[$`1esn`..] Where 0Xa Ends With $`3esn` Ends With $1000|$@usn5 Contains 's_str' Contains \"d_str\"] =~Extract(@usn6 In False Contains 0 Contains $`6esn` Where $`6esn` Starts With .e12 Starts With $`1esn`|12e12 In 123456789) As #usn7 Remove Extract(#usn7 In $999 In 1e1 Where 9e12 Starts With 1e1|010 Starts With $`` Starts With 0e0)._usn3!,1000.`2esn`? Remove None(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`).@usn6?,[Count ( * ) In True In @usn5,#usn7[0.12..],1000[0e0][1e1]].`3esn`?"),
    octest:ct_string("Return *,1e1 Is Not Null Is Not Null"),
    octest:ct_string("Remove All(@usn6 In 010[`5esn`] Where 1.e1[$usn1]).`6esn`!,Extract(@usn6 In 010[`5esn`]|False[$`4esn`..]).@usn5 Detach Delete 0xabc[$999..][$usn1..],12[..$999][..$`2esn`],Extract(#usn7 In 9e0[$1000] Where $`1esn` Starts With Count(*)|$`8esn`[..True][.._usn4]) Ends With Single(_usn4 In 12e12 In 123456789 Where $usn2 Is Not Null Is Not Null) Create (({@usn6:#usn7[`8esn`..usn1][$999..`7esn`]})<-[@usn5:_usn4 *0x0..]->({`1esn`:0X7 In $#usn7,_usn3:usn1 Contains 010})),`7esn`=(((`2esn` {``:$0 =~9e1 =~$`2esn`,`8esn`:`5esn`[..123.654][...e12]})-[`1esn` *01234567..]->(_usn3 {#usn7:12.e12 Ends With `` Ends With 0,``:$@usn6 In @usn6 In 1e1})<-[`4esn`:`1esn`|`3esn` *12..]-(usn1 :`7esn`{`7esn`:9e12 Starts With 1e1,_usn3:$`7esn`[$_usn4][.e0]})))"),
    octest:ct_string("Return Distinct `1esn` Starts With 0X7 Starts With \"d_str\",$`4esn`[..$`8esn`][..Null] As #usn7,None(`8esn` In 123456789 =~@usn6 Where .e12 Starts With $12 Starts With .e12) Ends With Filter(`5esn` In 0X7 In $#usn7 Where 0x0[0X7]) Ends With Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12) As `4esn` Order By [123456789 =~12 =~'s_str',`2esn` Starts With 12.e12 Starts With 12.0,$`8esn`[..True][.._usn4]] Contains Filter(#usn7 In 9e0[$1000] Where `7esn`) Asc,None(#usn8 In `7esn` Where $`3esn` Contains $`1esn`) Starts With #usn8(0x0[Count(*)..@usn6][Count(*)..0Xa]) Ascending,_usn4 Contains $_usn3 Contains .e1 Asc With  usn2[12.e12..] As `2esn`,$`2esn`[0..123456789][``..`1esn`],#usn8[`6esn`..][$``..] As `2esn` Skip $@usn6 Ends With `1esn` Limit 9e1 Ends With Count(*) Ends With $7 Delete $`6esn` Is Not Null Is Not Null,@usn5 Starts With 9e0 Starts With 010 Union All Create (:#usn8:`1esn`{`3esn`:123.654[..0.e0][..'s_str']}),((#usn7 :usn1:`3esn`)-[`3esn`?:`7esn`|:`2esn`]-(`5esn` :#usn8:`1esn`{_usn3:`6esn` Is Null Is Null})-[@usn5:`5esn`|:usn2 *0Xa{#usn7:`7esn`[$usn2..][$123456789..]}]-({`7esn`:9e0 Contains $12 Contains `3esn`,`5esn`:.e0 Contains $#usn8}))"),
    octest:ct_string("Unwind 0.0 Contains `3esn` Contains @usn5 As @usn5 Union All Remove Single(#usn7 In 9e1[$`1esn`..] Where 999 In #usn8 In $``).``,Extract(@usn5 In 9e0 Ends With $#usn8 Where $`3esn`[..0X0123456789ABCDEF][..7]|#usn8 =~.e0).`2esn`?,{usn2:Count ( * )[@usn6],`3esn`:$_usn4[$`5esn`][`7esn`]}.`7esn`? Delete 12 Contains 01234567,[@usn5[$`6esn`..][$999..],`` Starts With $123456789] Is Null,`6esn` Is Null Is Null Remove [0x0[0X7]].``!,(:`1esn`:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null})-[#usn7?{`5esn`:.e12 Starts With $#usn8 Starts With False}]->(#usn7 :`4esn`:`6esn`{`1esn`:`1esn`[$@usn6][07]})-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(`2esn` {`1esn`:$`4esn` Is Null Is Null}).`4esn`,{@usn5:01[`3esn`..][Count(*)..]}.`8esn`? Union Return $123456789 Starts With 0.12 Starts With Null As _usn3 Order By #usn7[``] Desc,{`5esn`:`6esn`[$`8esn`][9e1]} Is Not Null Is Not Null Ascending,`` Is Null Descending Skip 0X0123456789ABCDEF In $7 Limit All(`8esn` In 123456789 =~@usn6 Where @usn5 Contains 9e0)[(:#usn7:`5esn`)<-[#usn8? *0Xa]-(`5esn` :`5esn`{#usn7:``[$`3esn`]})<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(usn2 {usn1:.e12 Ends With 0Xa Ends With 0xabc})..] With Distinct Count(*) In #usn8 In \"d_str\" As ``,$`4esn` Starts With 0 Starts With `7esn` As usn2 Order By $7 Starts With 12.e12 Starts With $@usn6 Desc,1.e1 Is Null Is Null Descending Skip $`1esn`[``][07] Limit `5esn` Contains 1.e1 Contains .e12 Where 9e1 Contains $999 Detach Delete All(#usn7 In $999 In 1e1 Where 1.e1 In 1000 In _usn3) Contains (`6esn` :`8esn`{@usn6:12.e12 Contains #usn7 Contains $_usn4})-[`8esn`{`7esn`:9e12 Starts With 1e1}]-(_usn3 :_usn4) Contains [`8esn` Is Not Null Is Not Null,12 Starts With #usn7 Starts With 0Xa,.0 Starts With `1esn`],usn2 Ends With $`4esn`"),
    octest:ct_string("Return *,All(#usn7 In True Contains 's_str' Contains $usn1 Where $`1esn` Starts With Count(*)) In Any(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn`[0..][999..]) In Filter(`3esn` In 9e1 Contains $999 Where .e0 Is Not Null Is Not Null) As `8esn` Order By 12.0 Ends With `2esn` Descending,$`4esn`[`4esn`][Count(*)] Descending,$`1esn`[07..] Desc Skip 9e12[..123.654][..999] Merge @usn6=((`1esn` :`6esn`:_usn3{#usn7:0x0[$0][7]})) On Match Set [`6esn` In $`6esn`[``..][Count(*)..] Where 0x0[$0][7]|$`4esn`[`8esn`]].usn1 =Any(_usn4 In 12e12 In 123456789 Where _usn3 In $`8esn` In @usn6)[Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789])][All(@usn5 In 9e0 Ends With $#usn8)] Union Merge usn2=(@usn5 :@usn6{`2esn`:12e12 =~1e1,``:12.e12 Contains #usn7 Contains $_usn4})<-[`8esn` *0xabc]-(:_usn3{_usn4:.e1[7..][9e0..]}) On Match Set None(`6esn` In $`6esn`[``..][Count(*)..] Where 07 Contains `3esn` Contains `7esn`).`7esn`! =07[..07][..0X7],`4esn`:`1esn`:_usn4 Merge `6esn`=(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]})"),
    octest:ct_string("Merge _usn3=(_usn3 {`8esn`:0e0 =~7 =~12.0,_usn4:.e1[..$`3esn`][..01]})<-[_usn4{`2esn`:#usn8[`8esn`..],`2esn`:@usn6[9e12]}]-(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-(`2esn` :@usn5{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3}) Optional Match _usn4=({#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]}) Where 0x0[@usn6..][01..] Unwind $12 Starts With $usn1 As `4esn`"),
    octest:ct_string("Match ((:`1esn`:_usn4{_usn3:0x0 Contains $`6esn` Contains `4esn`,@usn6:0Xa In #usn7 In 's_str'})<-[:@usn6|:`7esn`{usn2:0x0 Starts With $`6esn`,_usn4:$`4esn`[`8esn`]}]-(@usn6 {@usn6:0e0 =~7 =~12.0})<-[:`8esn` *0X7..]->(`2esn` :`6esn`:_usn3{usn2:0e0 =~0Xa =~$999,`4esn`:@usn6[9e12]})),(((`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`})-[?:_usn4]->(:`5esn`{`4esn`:0Xa[..Count ( * )][..$123456789]})<-[?:`` *0..01]->({`2esn`:9e12[$`5esn`..$123456789],`8esn`:$usn2 =~9e1}))) Optional Match (:`4esn`:`6esn`{`4esn`:$@usn5[..0xabc][..$`3esn`],`3esn`:$usn2[`2esn`..$`1esn`]}) Where 12e12 In $`5esn` Union All Return $_usn4 Starts With $1000 Starts With 12,_usn4 Starts With `` Starts With 1000,Extract(#usn8 In `7esn` Where ``[7.._usn3]|@usn5 Is Null) Is Not Null Is Not Null As usn1 Order By [`5esn` Contains `1esn` Contains usn1,$@usn5 Ends With @usn5 Ends With 0xabc] Is Null Is Null Asc Create ((({`6esn`:`6esn`[..Count ( * )][..$_usn4],`7esn`:#usn7 Contains $0 Contains $usn2})<-[_usn4{`2esn`:#usn8[`8esn`..],`2esn`:@usn6[9e12]}]-({#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})-[`7esn`?]->(#usn8 :@usn5{_usn4:$#usn7 Contains $`7esn` Contains .e12}))),usn2=(_usn4 {_usn4:Null[..010][..1000],_usn3:.0 Is Null Is Null})-[`2esn`?:usn2{_usn3:0Xa In #usn7 In 's_str'}]-(usn1 :`1esn`:_usn4{_usn3:@usn6[999..$_usn3][0.12..$@usn5],`1esn`:9e12[..1e1][..'s_str']})<-[`7esn`:`2esn`|`4esn`{_usn4:.e1[7..][9e0..]}]-(usn2 :usn1:`3esn`{`3esn`:`2esn` Is Null}) Union All With Distinct {`8esn`:9e12 =~@usn6,`1esn`:999 Contains 0 Contains $`5esn`}[`4esn`()],(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})<-[?:`7esn`|:`2esn`]->(#usn8 :usn1:`3esn`{`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[ *01234567..]->(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12}) Contains [7[12],00[$`1esn`..][@usn6..],`5esn` Contains #usn7 Contains 9e12] Contains {_usn3:$@usn6[00],`2esn`:0.12 Is Null Is Null} Order By [`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]|usn2 =~7] Contains Any(`3esn` In 9e1 Contains $999 Where _usn4[0]) Desc Limit $7 Starts With $`4esn` Merge (({`1esn`:0X7 In $#usn7,_usn3:usn1 Contains 010})) Merge @usn6=(:`7esn`)<-[`1esn`?:usn1|`4esn` *..010]-(usn1 :_usn4{`4esn`:`7esn` Is Null})"),
    octest:ct_string("Create (:`2esn`{usn1:.0[..'s_str'][..01234567],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})<-[#usn8? *0Xa]-(`2esn` :`6esn`:_usn3) Remove ``:`5esn` Detach Delete True Contains 's_str' Contains $usn1,$`5esn`[..00] Union All Unwind 7 =~0.12 As `3esn` Remove (#usn7 {_usn3:0.e0 Starts With .0 Starts With 123456789,_usn4:'s_str' Ends With `7esn` Ends With 010})<-[#usn7? *0X7..{`1esn`:$1000 Starts With $`7esn`}]->({`5esn`:'s_str'[0x0..1.e1],@usn6:.e0[01234567..$`8esn`]})<-[:`1esn`|`3esn`{`6esn`:9e1 Is Not Null Is Not Null,`8esn`:_usn3 In $`8esn` In @usn6}]-(`` :`6esn`:_usn3{_usn3:$`6esn`[1.e1][$_usn3]}).`3esn`? Unwind True[$_usn3..] As usn2 Union Optional Match `8esn`=(:_usn3{usn1:#usn7[..07]})-[?:`7esn`|:`2esn`{@usn5:usn2[1.e1],@usn6:$#usn8 Starts With .e12 Starts With 1.e1}]->({`1esn`:$12 Starts With $usn1,`6esn`:123.654[`4esn`..12]})-[?:@usn5|_usn3{`1esn`:`2esn` Is Null,`7esn`:`` =~.12}]-(:`4esn`:`6esn`{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7}) Remove (:#usn8:`1esn`{usn2:$`7esn`[.e1][12.0],``:$`1esn` Contains 1e1 Contains @usn6})-[`` *1000..0X0123456789ABCDEF]-(`` :`7esn`)<-[?{`6esn`:$0[0Xa..$123456789],``:.e1[..\"d_str\"][..$123456789]}]-(:usn2{`6esn`:#usn7[$`3esn`..$1000][0.0..`2esn`],``:010 Starts With 0 Starts With 0.0}).`4esn`!,Extract(`5esn` In 0X7 In $#usn7 Where @usn6 Is Not Null Is Not Null).@usn5?,Any(usn2 In False[$usn1][0x0] Where 010 Starts With 0 Starts With 0.0).#usn7! Return 0.e0[..$7] As _usn3,0xabc =~@usn5 =~$usn1 Skip $@usn6[00] Limit `2esn`(0e0 =~0Xa =~$999,@usn5 Contains 9e0)[(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[usn2? *0..01{`6esn`:#usn8 Is Null}]->(`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12})..][Any(`3esn` In `2esn`[..01][..True] Where 0.e0[..$7])..]"),
    octest:ct_string("Unwind $@usn6 Ends With 123456789 Ends With 12.0 As `3esn` Merge ((@usn6 :@usn6{_usn4:#usn8 Is Not Null})-[_usn4? *999..{_usn3:$`5esn` =~usn1}]-(`5esn` :#usn8:`1esn`)<-[`1esn`:`8esn` *00..0Xa{#usn8:0X7['s_str'..][01..],``:$usn2 =~1.e1 =~usn1}]->(:_usn3{_usn4:.e1[7..][9e0..]})) On Match Set (:``:usn2{`4esn`:#usn7 Contains $0 Contains $usn2})<-[:`8esn` *0X7..]->(`4esn` :#usn7:`5esn`{@usn5:$`` Contains $`2esn` Contains $usn2})<-[`2esn`? *01..123456789]-(`2esn` :@usn6).`8esn` =`7esn`[1e1] On Create Set `7esn` ={usn2:_usn3[0x0]} In Extract(#usn7 In 9e0[$1000] Where $_usn3 Is Null|010 Starts With 0 Starts With 0.0) In {`7esn`:False[$`4esn`..]} Create `4esn`=((`6esn` :#usn8:`1esn`{`6esn`:usn1[..$@usn6][..00]})-[@usn5:_usn4 *0x0..]-(_usn3 :`1esn`:_usn4{#usn8:$999 Ends With .e0,_usn4:`4esn`[\"d_str\"]['s_str']})),(:`4esn`:`6esn`{`2esn`:12e12 =~1e1,``:12.e12 Contains #usn7 Contains $_usn4})<-[?:`5esn`|:usn2 *123456789..{#usn7:$`1esn` =~999,`4esn`:$@usn6[00]}]-(:`6esn`:_usn3)<-[@usn5? *999..{usn1:.e12[$@usn6..00][01234567.._usn3],`1esn`:`7esn` Contains 9e0}]-({@usn6:999 Contains 0 Contains $`5esn`,#usn7:999[..`1esn`][..07]}) Union Merge usn1=(#usn7 :`3esn`{`3esn`:@usn5[0.0..0X7],@usn5:$#usn7 Starts With $`2esn`})<-[usn1:_usn4]-(:`4esn`:`6esn`) On Match Set _usn3 =$``[01234567..][.0..] Union All Remove #usn7:@usn6,[#usn7 In 9e1[$`1esn`..] Where 00 Contains Count ( * ) Contains 0x0]._usn4?"),
    octest:ct_string("Return Distinct *,1.e1 Ends With $#usn7 As usn2,@usn5[01][@usn5] Skip $`5esn` Limit (`7esn` :`2esn`{`4esn`:0[1e1][$usn1],usn2:`8esn`[..$#usn8]})-[:`6esn`|:#usn8{``:`1esn` Starts With 0xabc Starts With $usn2}]-(_usn3 :`2esn`{@usn5:`4esn` Is Not Null Is Not Null})-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01}) Is Not Null Union Unwind 9e12 =~@usn6 As usn1 Merge _usn3=((`2esn` {``:$0 =~9e1 =~$`2esn`,`8esn`:`5esn`[..123.654][...e12]})-[_usn3?{``:$@usn5 Contains 's_str' Contains \"d_str\",_usn3:$#usn8[12.e12..`8esn`][12.0..0.0]}]-(_usn3 :usn1:`3esn`)<-[`7esn`? *..010{usn2:12 Ends With Count ( * ),#usn8:`8esn` Contains `2esn` Contains .0}]->({`6esn`:'s_str' Contains 12.e12 Contains $`4esn`})) On Match Set #usn8+=Count(*)[$@usn5],@usn6 =0 =~1e1,`2esn`+=Extract(#usn7 In 9e1[$`1esn`..] Where $999[``]) Starts With (`6esn` :@usn6)<-[ *..07]-(:_usn3{`7esn`:9e0 Ends With $#usn8}) Starts With (#usn7 :@usn6)<-[? *01..123456789]-(`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]}) On Match Set `8esn`+=#usn8[..`8esn`],_usn4 =0e0 Ends With 07 Ends With $`8esn`"),
    octest:ct_string("Create ((_usn3 {#usn7:12.e12 Ends With `` Ends With 0,``:$@usn6 In @usn6 In 1e1})<-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(:`8esn`{``:$`1esn` =~999})) Union All With Distinct [`8esn`[..$#usn8],$1000 Starts With $`7esn`,0xabc In 010 In #usn7] Is Null Is Null As #usn7,9e1[@usn5][$usn1],None(`3esn` In `2esn`[..01][..True] Where usn1 In ``)[None(usn2 In 7[12] Where 12e12 =~$`7esn`)..] Limit None(@usn5 In 's_str'[0..] Where 1000[..`2esn`][..$@usn6])[{usn2:`2esn` =~.e12 =~0X0123456789ABCDEF,@usn6:`2esn` Is Null}][(#usn7 {_usn3:0.e0 Starts With .0 Starts With 123456789,_usn4:'s_str' Ends With `7esn` Ends With 010})<-[`7esn`{`4esn`:$_usn4[$`6esn`..],`4esn`:Count(*) In #usn8 In \"d_str\"}]->(#usn8 :``:usn2)<-[`1esn`:`8esn` *00..0Xa{#usn8:0X7['s_str'..][01..],``:$usn2 =~1.e1 =~usn1}]->(:_usn3{_usn4:.e1[7..][9e0..]})] Where $`5esn` =~usn1"),
    octest:ct_string("Unwind @usn5(Distinct 12e12 In 123456789,12.0 =~@usn6 =~$`2esn`)[`8esn`(123456789 =~$999)][`2esn`($`2esn`[..$`3esn`][..12e12])] As usn2 Return Distinct *,False Is Null Order By 0X7[..$`8esn`] Desc,[@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str']|$`3esn`[..0xabc][..$7]] Is Null Ascending,12.e12 Ends With `` Ends With 0 Desc Skip Any(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 0xabc In 123456789 In 0x0)[..{`5esn`:0Xa[$`8esn`..][$_usn4..],_usn3:00[$usn1..]}][..Any(@usn6 In 010[`5esn`] Where 1.e1[$usn1])] Union With Distinct [#usn7 In 9e1[$`1esn`..] Where $@usn5 In $`6esn` In 12e12|12.0 Is Null Is Null] Contains [`3esn` In `2esn`[..01][..True] Where $0 Ends With $usn1 Ends With $_usn3] As #usn8 Order By [#usn7 In $999 In 1e1 Where 0X7['s_str'..][01..]] Is Not Null Is Not Null Desc Limit Any(`5esn` In 0X7 In $#usn7 Where 0.12 Contains False Contains 1.e1) Contains 0X7 Contains Extract(`8esn` In 123456789 =~@usn6 Where @usn5 Contains 9e0|9e0 Contains $12 Contains `3esn`) Merge (_usn3 :`7esn`) On Create Set [@usn6 In False Contains 0 Contains $`6esn` Where 12.e12 =~.0 =~usn1].usn2! =None(#usn7 In True Contains 's_str' Contains $usn1 Where 00[12..$`6esn`]) Ends With None(#usn7 In 9e0[$1000] Where 1e1 Contains 0.e0 Contains 9e1),`8esn` =01[07..][1.e1..] On Create Set #usn7+=Null[.12..12e12],Single(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $0[123.654..0.e0]).`1esn`! =[123456789 =~$999,$`2esn` Ends With `6esn`,12.e12 Contains 9e1][`5esn`(Distinct .e0[01234567..$`8esn`])][All(`3esn` In 9e1 Contains $999 Where $`5esn` Is Not Null Is Not Null)],@usn6 =usn2[1.e1]"),
    octest:ct_string("Create #usn8=(`5esn` :`7esn`)<-[{_usn4:1.e1[`8esn`]}]->(:@usn6$usn1)<-[`4esn`:`1esn`|`3esn` *12..]-(usn1 :`7esn`{`7esn`:9e12 Starts With 1e1,_usn3:$`7esn`[$_usn4][.e0]}) Union Create usn2=((_usn3 :_usn4)-[`3esn`:`2esn`|`4esn`]->({usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})<-[:@usn6|:`7esn` *01..123456789]->(:`6esn`:_usn3{``:usn1 Contains 010,`2esn`:$0 In `3esn` In 07}))"),
    octest:ct_string("Unwind .0 Is Null Is Null As @usn6 Unwind 999[..`1esn`][..07] As `8esn`"),
    octest:ct_string("Remove [`8esn` Is Not Null Is Not Null,12 Starts With #usn7 Starts With 0Xa,.0 Starts With `1esn`].@usn6?,[usn2 In False[$usn1][0x0] Where 999[@usn5..][Null..]|0.e0['s_str'..][01234567..]].``!,(:`1esn`:_usn4{usn2:0x0 Starts With $`6esn`,_usn4:$`4esn`[`8esn`]})<-[@usn5:`3esn` *0Xa{#usn7:1000[..`2esn`][..$@usn6],`1esn`:12e12 Starts With $0 Starts With $`2esn`}]->(:``:usn2{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7})._usn4? Unwind [#usn7 In 9e1[$`1esn`..] Where @usn5 Is Null] Is Not Null As `3esn` Remove [#usn7 In True Contains 's_str' Contains $usn1 Where `2esn`[..$_usn3]|1.e1 Starts With 9e12].#usn8?,usn1:usn2,Single(#usn8 In `7esn` Where 07 Contains `3esn` Contains `7esn`).@usn5! Union Create `3esn`=((`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`})),((`5esn` :@usn5{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})) Create (usn2 :``:usn2) Union All Merge ((`1esn` :`2esn`)<-[`1esn`:`8esn` *999..{`4esn`:$123456789 Starts With 0.12 Starts With Null,usn2:.e1[7..][9e0..]}]->(`1esn` :`3esn`{#usn7:12[..0e0][...e1]})-[@usn6?:#usn8|:`3esn`{usn1:.e1[..$`3esn`][..01],`4esn`:$`5esn` In .12}]->(usn2 :_usn4)) On Create Set #usn8+=[#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[..$`8esn`][..Null]|$@usn5[..0xabc][..$`3esn`]] Contains (`8esn` )<-[`2esn`:`4esn`|@usn5 *01234567..]-(`5esn` :`3esn`)<-[#usn8?:`8esn`{`1esn`:999 In #usn8 In $``,`8esn`:False[$`4esn`..]}]->(`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]}) Contains Any(`5esn` In 0X7 In $#usn7 Where 01 Is Null),@usn5+=.e0 =~$`7esn` =~0X0123456789ABCDEF,``+=(`6esn` {_usn3:9e12 Starts With 1e1,_usn4:`2esn`[..$_usn3]})-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->({`1esn`:#usn7[0]}) Starts With Extract(`6esn` In $`6esn`[``..][Count(*)..] Where @usn5 Is Null|0xabc In 010 In #usn7) On Match Set `6esn`(Distinct 0Xa[$`8esn`..][$_usn4..],0xabc In Null).`2esn`! =(`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null})<-[? *..010{#usn8:False Is Null}]->(#usn7 {#usn7:1.e1 Starts With 9e12})<-[:_usn3|:`7esn` *00..0Xa]-(`1esn` $`4esn`)[..[0X7 In $#usn7,`4esn` Is Not Null Is Not Null,.0[.e12..]]][..(:`2esn`{_usn3:@usn5[0.0..0X7]})<-[`7esn`?:`2esn`|`4esn` *..010{usn1:0e0[``..$1000][$7..12.e12],`5esn`:0x0 Starts With $`6esn`}]->(@usn5 {_usn4:`5esn` Contains #usn7 Contains 9e12})],Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null).`7esn`? =Filter(#usn7 In $999 In 1e1 Where 9e12[..1e1][..'s_str'])[..Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|0 Ends With 12.e12 Ends With usn2)][..None(#usn7 In $999 In 1e1 Where `1esn`[0.12..][@usn6..])],Extract(`3esn` In 9e1 Contains $999 Where _usn3[`2esn`..0X7][0.e0..$`3esn`]).@usn5 =$@usn6 Ends With 123456789 Ends With 12.0 Return *,Single(`5esn` In `7esn`[$usn2..][$123456789..] Where 12e12 Is Not Null) Is Not Null Is Not Null As usn1,00 Contains Count ( * ) Contains 0x0 As `5esn` Limit .e0"),
    octest:ct_string("Remove Single(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 1.e1[12..][$`4esn`..]).`7esn`? Detach Delete `2esn`[$@usn6..][Null..],$1000 Starts With $`7esn` Unwind Count ( * ) =~0e0 =~`8esn` As `8esn`"),
    octest:ct_string("Unwind 010 Starts With 0 Starts With 0.0 As `5esn` Unwind 07[_usn3..][`6esn`..] As #usn8 Return Distinct Extract(`6esn` In $`6esn`[``..][Count(*)..] Where $@usn5 Starts With `5esn` Starts With 01234567|0.e0[..$7]) Is Null Is Null,`7esn`[1e1] Order By `2esn`[$12..] Desc,usn2 Is Null Is Null Ascending Skip [$@usn6 =~#usn7 =~True,$`1esn` Contains 1e1 Contains @usn6,9e1[..123456789]] Is Null Limit 0Xa =~False =~@usn5"),
    octest:ct_string("Unwind 9e1 Contains $999 As `8esn` Union Merge ((#usn7 :usn1:`3esn`)-[`3esn`?:`7esn`|:`2esn`]-(`5esn` :#usn8:`1esn`{_usn3:`6esn` Is Null Is Null})-[@usn5:`5esn`|:usn2 *0Xa{#usn7:`7esn`[$usn2..][$123456789..]}]-({`7esn`:9e0 Contains $12 Contains `3esn`,`5esn`:.e0 Contains $#usn8})) On Match Set `6esn`+=[@usn5 In 's_str'[0..] Where @usn6 In .12 In `3esn`] Ends With Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $`5esn` Is Not Null) On Match Set {#usn8:$`5esn` =~$`8esn` =~usn2}.`4esn`! =999[@usn5..][Null..],`4esn`:`1esn`:_usn4 Unwind 9e1 =~123456789 =~999 As ``"),
    octest:ct_string("With Distinct $usn2,[#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`]][[`2esn` Is Null]][Extract(#usn7 In $999 In 1e1|01234567[Null..$_usn3])] Order By 's_str' Contains 12.e12 Contains $`4esn` Descending,.e12 Ends With 0Xa Ends With 0xabc Descending Skip #usn7 =~9e12 Union Remove [#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 1.e1 Ends With $_usn4 Ends With #usn7|False Starts With 0X7 Starts With 01234567]._usn4! Remove Any(@usn5 In 9e0 Ends With $#usn8 Where $`3esn`[..0X0123456789ABCDEF][..7])._usn3,`7esn`:@usn5"),
    octest:ct_string("Unwind #usn8(1000[12e12][`5esn`],9e1 Contains 12)[Extract(#usn8 In `7esn` Where $`5esn` In _usn3 In 0.0)..`1esn`(Distinct `3esn`[7..0.e0][0.0..123456789],`1esn` Starts With 0xabc Starts With $usn2)][Filter(`6esn` In $`6esn`[``..][Count(*)..] Where 9e0[Count(*)..0.12][$`1esn`..12.0])..Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12)] As @usn6 Remove None(`5esn` In 0X7 In $#usn7 Where usn1 =~$`7esn`).`3esn`!,Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $123456789 In 0.12)._usn3?,(:`3esn`{#usn7:$#usn7 In $@usn5 In $`1esn`})<-[:`8esn` *0X7..]->(`2esn` :`6esn`:_usn3{usn2:0e0 =~0Xa =~$999,`4esn`:@usn6[9e12]}).`6esn`? With  *,count(Distinct $@usn6 Ends With 123456789 Ends With 12.0,$`2esn`[.0..][0.0..]) Is Not Null Is Not Null Order By .e0 Starts With $@usn6 Starts With $7 Descending Skip [$12[$usn1..][Count(*)..],usn2[1.e1],123456789[12]] Ends With [`5esn`[$`7esn`..$@usn5],$#usn7[..9e0][..123.654],1.e1 Is Null Is Null] Ends With Extract(`3esn` In 9e1 Contains $999 Where _usn4[0]|12 Starts With #usn7 Starts With 0Xa) Union Remove #usn8(Distinct 0X0123456789ABCDEF Contains 12e12 Contains 12.e12,Count(*) Starts With usn2 Starts With `7esn`).usn1,Single(@usn5 In 9e0 Ends With $#usn8 Where 0Xa[$`8esn`..][$_usn4..]).#usn7?,Any(_usn4 In 12e12 In 123456789 Where `3esn`[7..0.e0][0.0..123456789]).`8esn`! Return $`4esn`[`4esn`][Count(*)] As `8esn`,$usn1[`2esn`..][$`2esn`..] As _usn3,_usn4[`7esn`] As usn2 Skip 01[..$`8esn`][..9e0] Limit 0X7[.0] Union All Create ((`1esn` :usn2)),`2esn`=(`5esn` :``:usn2)<-[`8esn` *0xabc{#usn8:12.0 Starts With .12 Starts With `6esn`,@usn5:_usn3[`5esn`..][usn2..]}]->(@usn6 :usn1:`3esn`{@usn5:999 Starts With `2esn` Starts With .e1,``:0xabc In Null})<-[usn2?:@usn5|_usn3*{_usn4:@usn5 Starts With $`3esn`,#usn7:$`5esn` Is Not Null}]-(#usn7 :``:usn2)"),
    octest:ct_string("Match (((`` :#usn8:`1esn`{``:`7esn`[$usn2..][$123456789..],_usn4:$12 Starts With $usn1})<-[_usn3?:_usn3|:`7esn`]->(#usn7 )<-[:`1esn`|`3esn`{`2esn`:$`3esn` Ends With 01234567}]->(`5esn` :`3esn`))),((#usn7 :_usn3)<-[ *0Xa{`3esn`:9e1 Ends With Count(*) Ends With $7}]-(:@usn6{`7esn`:$`6esn`[``..][Count(*)..]})) Union All Unwind _usn3[`5esn`..][usn2..] As #usn7 Unwind $1000 Starts With $`3esn` Starts With 0.e0 As usn1"),
    octest:ct_string("With  (:@usn5{@usn5:999[..`1esn`][..07],_usn4:Count ( * ) Ends With $123456789})<-[`2esn`? *01..123456789]-(`2esn` :@usn6)[[`2esn`[..$_usn4][...12],False Contains 0 Contains $`6esn`,.e1[12.0..]]..[#usn7 In 9e0[$1000] Where #usn8 =~0.e0|12.e12 =~0X0123456789ABCDEF =~1.e1]],`1esn`[0Xa] As usn1,usn1 Contains 010 As @usn5 Order By 1000[$`2esn`..] Asc Where .e0 Contains $#usn8"),
    octest:ct_string("Unwind $_usn3 Is Not Null As _usn3 Union All Delete Count ( * ) Ends With `6esn` Ends With 's_str',Count(*)[$@usn5] Optional Match @usn6=(`` :`3esn`{`6esn`:Count(*)[9e12..12.0]})-[:@usn5|_usn3 *00..0Xa]-(:usn2{`6esn`:`4esn` Starts With 0e0,`8esn`:usn2[12e12..]['s_str'..]})<-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->(_usn4 :@usn5) Merge (#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0})<-[?:`7esn`|:`2esn`]->(`1esn` :`3esn`{#usn7:12[..0e0][...e1]}) On Match Set `2esn` =`3esn`[..0X0123456789ABCDEF][..0x0] On Create Set `2esn` =$@usn5[0.0][0X0123456789ABCDEF],@usn6+=[`5esn` In 0X7 In $#usn7 Where 0.e0['s_str'..][01234567..]][(`6esn` {_usn4:$`5esn` Is Not Null Is Not Null})-[ *999..{`3esn`:123456789 =~$999,_usn4:`4esn` Is Not Null Is Not Null}]-(usn1 :_usn4{`4esn`:`7esn` Is Null})]"),
    octest:ct_string("With Distinct 123.654[$0..0X7][Null..#usn8] As `3esn` Order By (`5esn` :`4esn`:`6esn`)-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(#usn7 :``:usn2)[..Filter(#usn8 In `7esn`)] Desc,Count ( * )[$`5esn`..][$7..] Desc Skip Extract(@usn5 In 9e0 Ends With $#usn8 Where $7 In 0.e0 In 999)[..Filter(@usn6 In 010[`5esn`] Where 1.e1[$usn1])] Limit None(#usn7 In 9e0[$1000] Where $_usn3 Is Null)[[0 =~1e1,$#usn8[12.e12..`8esn`][12.0..0.0],$1000 Is Not Null]..] Where $123456789 Contains $#usn8 Contains `` Merge _usn3=({`4esn`:.e1[..$`3esn`][..01]})-[`5esn`:#usn7|@usn5]-(`5esn` :`4esn`:`6esn`) On Create Set usn1 =`3esn`[123456789],`3esn` =9e1[.12][`7esn`]"),
    octest:ct_string("Optional Match (_usn3 :`5esn`{#usn8:0xabc In 010 In #usn7}),`3esn`=(((:`6esn`:_usn3{`8esn`:.e12[..999][..@usn5],`3esn`:$_usn3 Is Null})<-[? *0X7..]->(`5esn` :``:usn2{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3})-[_usn4]->(:`6esn`:_usn3{_usn3:usn1 Is Null Is Null,#usn8:9e1[$``..][0.e0..]}))) Where $#usn7[..9e0][..123.654] Merge usn2=(#usn7 {_usn4:1.e1[`8esn`]})<-[usn2{`2esn`:$12 Starts With $usn1}]->(:`5esn`{`8esn`:$`7esn`[0.12],_usn4:`1esn`})-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->(@usn6 :`4esn`:`6esn`{``:999 Contains 0 Contains $`5esn`,`6esn`:_usn3[12.e12..][`5esn`..]}) With Distinct *,{`5esn`:`6esn`[$`8esn`][9e1]} Is Not Null Is Not Null Skip (`2esn` :_usn3{`8esn`:01234567[Null..$_usn3]})<-[?:usn2{usn2:@usn5 Is Not Null}]-(`7esn` {#usn8:False Starts With 0X7 Starts With 01234567}) =~[12 In $usn1 In 7] =~Filter(@usn5 In 's_str'[0..] Where 0.e0) Limit `2esn` =~.e12 =~0X0123456789ABCDEF Where 0.12[..$_usn3][..0Xa]"),
    octest:ct_string("With Distinct 0Xa Ends With $`3esn` Ends With $1000,Extract(@usn5 In 's_str'[0..] Where 12e12 Is Not Null) =~[`3esn` In 9e1 Contains $999 Where _usn3[`2esn`..0X7][0.e0..$`3esn`]],$#usn8[@usn6..] As `7esn` Order By (`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})-[_usn3?:_usn4 *00..0Xa{_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})-[`4esn`:`1esn`|`3esn` *12..]->(usn2 :`1esn`:_usn4{usn2:999 Contains $1000}) Contains Filter(usn2 In False[$usn1][0x0] Where $`6esn`[``..][Count(*)..]) Desc,$usn1[Null][`8esn`] Desc,$`5esn` In `2esn` In `2esn` Asc Limit [0.e0[..$7],$usn2[True..0X0123456789ABCDEF],`2esn` =~.e12 =~0X0123456789ABCDEF] Ends With `1esn`(Distinct $`3esn`[..0X0123456789ABCDEF][..7],`4esn`[$_usn3..$`7esn`]) Ends With [$`1esn`[``][07],`7esn`] Where _usn3[$`1esn`..] Unwind $_usn4[9e0..][$1000..] As `5esn` Merge (:_usn4{_usn3:$#usn7[..0Xa],@usn5:12e12 In 123456789}) Union All Detach Delete @usn5 Starts With $`3esn`,12 Is Not Null,07 Contains `3esn` Contains `7esn`"),
    octest:ct_string("Return _usn3 Is Not Null Is Not Null As `` Order By Extract(`3esn` In `2esn`[..01][..True] Where 0.0 Is Null Is Null|$usn2[0.e0])[{usn2:@usn5 Is Null,`8esn`:$@usn6 Ends With 123456789 Ends With 12.0}..] Descending,(:_usn4$12)-[`1esn`?:`6esn`|:#usn8 *0Xa]-(usn1 :#usn8:`1esn`)[{`7esn`:$usn2 =~9e1}..] Desc,.12 In `8esn` In $#usn8 Desc Limit 9e1 Contains 12 Detach Delete 0.e0,\"d_str\"[True..],$`3esn` Ends With 01234567 Union All Remove {``:0Xa =~False =~@usn5,`6esn`:$`2esn` Starts With `4esn` Starts With $usn1}.@usn5,All(#usn7 In 9e0[$1000] Where 12e12 Starts With $0 Starts With $`2esn`).#usn7?"),
    octest:ct_string("Create _usn4=((_usn3 :`8esn`{#usn8:False Starts With 0X7 Starts With 01234567})),((`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12}))"),
    octest:ct_string("Delete 0X7[.0] Match @usn6=(_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})<-[?:usn1|`4esn` *1000..0X0123456789ABCDEF{`6esn`:.e0[999..1000][1e1..$`8esn`],`4esn`:00 Ends With `` Ends With 12.e12}]-(:`5esn`{@usn6:1000[0e0][1e1]})<-[:`8esn`]-(:@usn6) Where $7 In $usn1 In 999 Union Merge ((usn2 :`5esn`{`7esn`:0.12 Starts With $`8esn` Starts With @usn5})<-[usn1:`7esn`|:`2esn`{`6esn`:Count(*) In #usn8 In \"d_str\",`1esn`:$`1esn` Ends With 0X0123456789ABCDEF}]-(#usn8 :usn2{@usn5:$#usn7[..9e0][..123.654],`2esn`:7[12]})<-[ *..07{`5esn`:999 In 0e0}]-(_usn4 :`8esn`)) Remove (@usn5 :`6esn`:_usn3{`7esn`:`8esn`[..$#usn8],`3esn`:12.e12[0..0.12][123.654..9e12]})-[`3esn`:`2esn`|`4esn`]->(`` {``:$@usn6 Ends With 12.e12 Ends With @usn5,`2esn`:$`3esn` Ends With 01234567})<-[usn1:_usn4]-(#usn7 :@usn6).#usn8"),
    octest:ct_string("Delete 9e0[$`8esn`] Merge (_usn3 :`7esn`) On Create Set [@usn6 In False Contains 0 Contains $`6esn` Where 12.e12 =~.0 =~usn1].usn2! =None(#usn7 In True Contains 's_str' Contains $usn1 Where 00[12..$`6esn`]) Ends With None(#usn7 In 9e0[$1000] Where 1e1 Contains 0.e0 Contains 9e1),`8esn` =01[07..][1.e1..] On Create Set #usn7+=Null[.12..12e12],Single(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $0[123.654..0.e0]).`1esn`! =[123456789 =~$999,$`2esn` Ends With `6esn`,12.e12 Contains 9e1][`5esn`(Distinct .e0[01234567..$`8esn`])][All(`3esn` In 9e1 Contains $999 Where $`5esn` Is Not Null Is Not Null)],@usn6 =usn2[1.e1] Union With Distinct 0.e0['s_str'..][01234567..] As `1esn`,None(#usn7 In $999 In 1e1 Where _usn3 Contains 9e12 Contains `8esn`)[..Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 0xabc In 123456789 In 0x0|Count(*)[..@usn6][..`7esn`])] As `3esn`,.0[$``..0X7] Skip usn2 =~$`` =~$`8esn` Where `4esn`[.12][$@usn6] Union All Create (:`5esn`{`4esn`:$`5esn` =~$0 =~``,_usn3:$``[..$#usn7][..`6esn`]})<-[#usn8? *1000..0X0123456789ABCDEF{`7esn`:Count ( * )[$`5esn`..][$7..],`6esn`:`6esn` Ends With _usn4 Ends With False}]->(`8esn` :@usn5{`5esn`:_usn3 In $`8esn` In @usn6,_usn4:$@usn6 Ends With 12.e12 Ends With @usn5})-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]->(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]}),`6esn`=((`4esn` :_usn4)-[`5esn`?:_usn3|:`7esn`]->({@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]})<-[?:`5esn`|:usn2]->(usn2 :`5esn`)) With Distinct $#usn8 Ends With `` Ends With 999 As `5esn`,Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 12.e12[0..0.12][123.654..9e12]) Is Not Null Is Not Null As _usn3 Order By _usn4(Distinct $@usn6[$`8esn`..][123456789..],$`` Starts With $1000 Starts With @usn6)[[#usn7 In True Contains 's_str' Contains $usn1 Where $usn2 =~1.e1 =~usn1]..][All(#usn7 In True Contains 's_str' Contains $usn1 Where $`2esn` Contains Count(*))..] Desc,{#usn8:0.0 =~9e0 =~$0,`5esn`:Count ( * ) Ends With $123456789} Is Not Null Desc,9e0 Ends With $#usn8 Desc Limit 12.0 Starts With $`2esn` Starts With .e1 Where 9e1 Ends With Count(*) Ends With $7"),
    octest:ct_string("With  *,Single(#usn7 In True Contains 's_str' Contains $usn1 Where `2esn`[..$_usn3])[..{`8esn`:usn2 =~7,`5esn`:.e0[01234567..$`8esn`]}][..Any(@usn6 In 010[`5esn`] Where False[$`4esn`..])] As #usn8,$#usn7 Contains $`7esn` Contains .e12 As @usn5 Limit (:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[usn2? *0..01{`6esn`:#usn8 Is Null}]->(`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12}) Where 's_str' Is Not Null Merge (_usn3 {`8esn`:0e0 =~7 =~12.0,_usn4:.e1[..$`3esn`][..01]})<-[_usn4{`2esn`:#usn8[`8esn`..],`2esn`:@usn6[9e12]}]-(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-(`2esn` :@usn5{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3})"),
    octest:ct_string("Remove Extract(`8esn` In 123456789 =~@usn6 Where @usn5 Contains 9e0|9e0 Contains $12 Contains `3esn`).`8esn` Union Merge (`` {`8esn`:$`6esn`[``..][Count(*)..]})<-[`6esn`? *00..0Xa]->(#usn7 :#usn8:`1esn`{``:.0[$``..0X7]}) On Create Set usn1+={_usn3:usn1 Is Null Is Null,#usn8:9e1[$``..][0.e0..]} Contains ({`7esn`:`8esn` Contains Count(*) Contains $#usn7})<-[_usn3:`3esn`{`5esn`:_usn4[0]}]->(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})-[#usn7?{`5esn`:.e12 Starts With $#usn8 Starts With False}]->({`1esn`:0X7 In $#usn7,_usn3:usn1 Contains 010}) Contains None(#usn8 In `7esn`) Unwind usn2[..$usn1][..$#usn8] As ``"),
    octest:ct_string("Optional Match `8esn`=(@usn6 {`5esn`:.e12 Starts With $#usn8 Starts With False})<-[`6esn`:``]->({@usn6:$1000 Is Not Null}),`8esn`=(:`4esn`:`6esn`{usn2:$`8esn` Is Not Null Is Not Null})<-[@usn5? *0..01{`3esn`:$`1esn` In .e0,@usn6:12.0 =~@usn6 =~$`2esn`}]->({usn2:.0 Starts With `1esn`,`2esn`:00 Contains Count ( * ) Contains 0x0})-[? *0Xa{usn1:`3esn`[0x0..]}]->(:`5esn`{`1esn`:0.e0}) Where `7esn` In 010 In usn1 Merge #usn8=((`1esn` {usn1:12e12 In $`5esn`})<-[`8esn`?:#usn7|@usn5{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3}]-(:usn1:`3esn`{@usn6:.0 Ends With Count ( * )})) On Match Set [12e12 =~1e1,0X7[..$`8esn`]].`7esn` =1e1 Ends With $`2esn`,`8esn`+=01[$`7esn`..$@usn6] On Create Set [`5esn` In `7esn`[$usn2..][$123456789..] Where $`5esn` =~$0 =~``|.12 In `8esn` In $#usn8]._usn4? =7 =~0.12,`6esn` =Single(`5esn` In `7esn`[$usn2..][$123456789..] Where 12e12 Is Not Null) Is Not Null Is Not Null,Any(#usn7 In $999 In 1e1 Where 0X7['s_str'..][01..]).`3esn`! =(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})-[? *0Xa{usn1:`3esn`[0x0..]}]->(:`5esn`{`1esn`:0.e0}) Is Not Null Is Not Null Union Remove All(#usn8 In `7esn`).`1esn` With Distinct *,999 Contains [@usn6 In False Contains 0 Contains $`6esn` Where `1esn` Starts With 0xabc Starts With $usn2] Contains {_usn3:123.654 In $`7esn`} As `6esn`,.e0 Is Not Null Is Not Null As `7esn` Order By _usn3 In $`8esn` In @usn6 Desc Return Distinct [$#usn7 Ends With 's_str' Ends With 0X7] Starts With (usn1 :@usn6)<-[?:#usn7|@usn5 *0..01]->(:`1esn`:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null})<-[_usn4? *12..{`1esn`:$`6esn` Starts With .e12 Starts With $`1esn`,`3esn`:`8esn`[0.e0..]}]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0}) Starts With [`5esn` In `7esn`[$usn2..][$123456789..] Where $`1esn` Starts With Count(*)] As #usn8,0.12 Is Null Is Null As _usn3,_usn4[0] As `2esn` Skip `1esn`[$@usn6][07] Union All Delete [#usn7 In True Contains 's_str' Contains $usn1 Where $`1esn` Starts With Count(*)] Contains (:`2esn`)-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(`3esn` {`4esn`:False Is Null}) Contains Filter(`8esn` In 123456789 =~@usn6 Where $`6esn` Starts With .e12 Starts With $`1esn`),(_usn4 :_usn4)<-[`7esn`:_usn4]->(`5esn` {``:_usn3 Contains 9e12 Contains `8esn`,@usn6:``[7.._usn3]})-[ *..07{`6esn`:Count(*)[9e12..12.0]}]->(:usn1:`3esn`{_usn4:$#usn7 Contains $`7esn` Contains .e12})[[0[$`5esn`],$999 In 1e1,$`6esn` Is Null]] Remove Single(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 1.e1[12..][$`4esn`..]).`7esn`?"),
    octest:ct_string("Match ((:@usn6)) Where 9e1[_usn3] Return Distinct $#usn7[..9e0][..123.654],1e1 Contains 0.e0 Contains 9e1 As `8esn` Order By 01234567[Null..$_usn3] Descending,.e12 Starts With $12 Starts With .e12 Descending,0[01234567..][0X0123456789ABCDEF..] Ascending Remove Any(`3esn` In 9e1 Contains $999 Where `2esn` Starts With 12.e12 Starts With 12.0).usn1,All(usn2 In 7[12] Where $@usn5[..0xabc][..$`3esn`])._usn4!,7._usn4 Union All Remove All(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 12.e12[0..0.12][123.654..9e12]).`2esn`,[1000[..`2esn`][..$@usn6],Count(*) Is Null].`4esn`!,`8esn`:`5esn` Remove Any(`3esn` In `2esn`[..01][..True] Where $0 =~9e1 =~$`2esn`).usn1 Detach Delete (`3esn` :usn2)-[? *0xabc]-(`6esn` {`3esn`:.0[$``..0X7],`3esn`:$usn2 Is Not Null Is Not Null}) Is Null,(#usn7 {_usn4:1.e1[`8esn`]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) Contains Extract(#usn7 In 9e0[$1000] Where _usn4 Is Not Null Is Not Null|usn2 Ends With .e1 Ends With $`5esn`),Any(#usn7 In 9e0[$1000] Where .e0 Is Null) =~Extract(`3esn` In 9e1 Contains $999 Where `2esn` Starts With 12.e12 Starts With 12.0|$`3esn` In $usn2) =~{#usn8:0.0 =~9e0 =~$0,`5esn`:Count ( * ) Ends With $123456789} Union All Return 0.12 Starts With $`8esn` Starts With @usn5 As @usn5,#usn7 Is Null Is Null As `1esn`,[@usn5[$`6esn`..][$999..],`` Starts With $123456789] Is Null Order By Any(#usn7 In 9e0[$1000] Where .e0 Is Null) In None(@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``) In Filter(@usn6 In False Contains 0 Contains $`6esn` Where $@usn5 In 12e12 In 01) Ascending,'s_str' Starts With 1e1 Starts With $0 Desc"),
    octest:ct_string("Remove #usn7:usn2,[07[_usn3..][`6esn`..],$usn1 Ends With _usn4 Ends With `2esn`,False[$`4esn`..]].`3esn`?,[`6esn` Ends With _usn4 Ends With False].`4esn`! Merge ((`1esn` :`2esn`)<-[`1esn`:`8esn` *999..{`4esn`:$123456789 Starts With 0.12 Starts With Null,usn2:.e1[7..][9e0..]}]->(`1esn` :`3esn`{#usn7:12[..0e0][...e1]})-[@usn6?:#usn8|:`3esn`{usn1:.e1[..$`3esn`][..01],`4esn`:$`5esn` In .12}]->(usn2 :_usn4)) On Create Set #usn8+=[#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[..$`8esn`][..Null]|$@usn5[..0xabc][..$`3esn`]] Contains (`8esn` )<-[`2esn`:`4esn`|@usn5 *01234567..]-(`5esn` :`3esn`)<-[#usn8?:`8esn`{`1esn`:999 In #usn8 In $``,`8esn`:False[$`4esn`..]}]->(`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]}) Contains Any(`5esn` In 0X7 In $#usn7 Where 01 Is Null),@usn5+=.e0 =~$`7esn` =~0X0123456789ABCDEF,``+=(`6esn` {_usn3:9e12 Starts With 1e1,_usn4:`2esn`[..$_usn3]})-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->({`1esn`:#usn7[0]}) Starts With Extract(`6esn` In $`6esn`[``..][Count(*)..] Where @usn5 Is Null|0xabc In 010 In #usn7) On Match Set `6esn`(Distinct 0Xa[$`8esn`..][$_usn4..],0xabc In Null).`2esn`! =(`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null})<-[? *..010{#usn8:False Is Null}]->(#usn7 {#usn7:1.e1 Starts With 9e12})<-[:_usn3|:`7esn` *00..0Xa]-(`1esn` $`4esn`)[..[0X7 In $#usn7,`4esn` Is Not Null Is Not Null,.0[.e12..]]][..(:`2esn`{_usn3:@usn5[0.0..0X7]})<-[`7esn`?:`2esn`|`4esn` *..010{usn1:0e0[``..$1000][$7..12.e12],`5esn`:0x0 Starts With $`6esn`}]->(@usn5 {_usn4:`5esn` Contains #usn7 Contains 9e12})],Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null).`7esn`? =Filter(#usn7 In $999 In 1e1 Where 9e12[..1e1][..'s_str'])[..Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|0 Ends With 12.e12 Ends With usn2)][..None(#usn7 In $999 In 1e1 Where `1esn`[0.12..][@usn6..])],Extract(`3esn` In 9e1 Contains $999 Where _usn3[`2esn`..0X7][0.e0..$`3esn`]).@usn5 =$@usn6 Ends With 123456789 Ends With 12.0 Return Distinct _usn4(Distinct usn2[07..][.0..]) Ends With Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 12[$`5esn`..][False..]|$`2esn` Starts With `4esn` Starts With $usn1) Ends With Extract(@usn5 In 9e0 Ends With $#usn8 Where $`3esn` In $usn2),usn1[..$@usn6][..00] As #usn7,(#usn8 :_usn3{@usn5:_usn3 Starts With 12e12 Starts With `5esn`,@usn6:usn2 In _usn3})-[`1esn`?{`8esn`:.e0,usn2:9e1 Contains $999}]->(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})-[? *..010{`2esn`:'s_str'[0..]}]->({`7esn`:1.e1 In 1000 In _usn3,`8esn`:010 Starts With $`` Starts With 0e0})[..(`5esn` )-[ *00..0Xa]->(usn1 :#usn7:`5esn`{`5esn`:$@usn5 In 12e12 In 01})-[usn1?:`2esn`|`4esn`{#usn7:$#usn7[..9e0][..123.654],usn2:.e0 Is Not Null Is Not Null}]-(`1esn` :usn1:`3esn`{_usn3:.0[.e12..]})] As `7esn` Order By 0X7[..$`8esn`] Desc,$123456789[12e12..9e0] Descending Union All Match _usn3=(`2esn` $`6esn`)-[`2esn`{``:Null[..010][..1000]}]-(#usn7 :``:usn2),@usn5=((#usn7 :@usn6{`8esn`:0x0[0.0],#usn7:`7esn`[$usn1..]['s_str'..]})) Where usn2[12e12..]['s_str'..] Union All Return #usn7[`8esn`..usn1][$999..`7esn`] As _usn3,All(#usn7 In 9e1[$`1esn`..] Where 12 =~usn1)[Extract(#usn7 In $999 In 1e1)..][1.e1..],12e12 Starts With $0 Starts With $`2esn` Order By Extract(`8esn` In 123456789 =~@usn6 Where 123.654[`4esn`..12]|`8esn` Contains Count(*) Contains $#usn7)[..[#usn7 In True Contains 's_str' Contains $usn1 Where Count(*) Ends With usn1]][..Filter(usn2 In 7[12] Where #usn7[0.e0..]['s_str'..])] Ascending,{@usn5:`6esn`[$1000][`3esn`]}[All(`3esn` In `2esn`[..01][..True] Where 0Xa =~False =~@usn5)..] Asc,usn2[1.e1] Descending Skip $``[01234567..][.0..] Return Distinct $#usn7 In $@usn5 In $`1esn` As `4esn` Remove Filter(#usn7 In 9e0[$1000] Where 12['s_str'][01])._usn3?,[@usn5 In 's_str'[0..] Where usn1 Starts With 00|True Contains .e12].`6esn`!,None(@usn5 In 's_str'[0..] Where 0.e0).`4esn`"),
    octest:ct_string("Unwind $0 Ends With Count ( * ) Ends With @usn5 As `8esn` Create `6esn`=(`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null})<-[@usn6:`1esn`|`3esn` *0X7..]->(_usn3 :`4esn`:`6esn`{usn2:`4esn` Starts With 0e0,`3esn`:7[12]}),(:`8esn`{#usn7:`1esn`[`3esn`..],usn2:_usn3[$usn2..][$``..]})<-[`7esn`:`2esn`|`4esn`{_usn4:.e1[7..][9e0..]}]-(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"})<-[? *0X7..{`2esn`:$@usn5 In $`6esn` In 12e12}]-(`3esn` :_usn4{`3esn`:12[..0e0][...e1],`4esn`:.0 Is Null Is Null}) Union Optional Match `4esn`=({#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})<-[:`1esn`|`3esn`{`2esn`:$`3esn` Ends With 01234567}]->(_usn3 :`5esn`)-[_usn3:usn1|`4esn`{`6esn`:12e12 =~1e1}]-(@usn6 :_usn4{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}),@usn5=(({@usn5:$`5esn` Is Not Null Is Not Null})-[`1esn`?:@usn6|:`7esn` *..010]-(:`6esn`:_usn3{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})<-[?:`` *0..01]->({`2esn`:9e12[$`5esn`..$123456789],`8esn`:$usn2 =~9e1})) Where `8esn` Is Null Match (`7esn` :usn2{`3esn`:12.0 In 123.654 In _usn4}),`7esn`=(((`` :`5esn`)-[ *0..01{@usn6:$0[123.654..0.e0]}]->(usn1 :`1esn`:_usn4{_usn3:@usn6[999..$_usn3][0.12..$@usn5],`1esn`:9e12[..1e1][..'s_str']})<-[`8esn`{`8esn`:usn1 Contains 010,_usn4:`5esn` Contains $`5esn` Contains 0X7}]-({#usn8:0xabc In 010 In #usn7}))) Optional Match `2esn`=(((`6esn` :`4esn`:`6esn`)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})<-[`4esn` *0Xa{@usn6:999 Starts With `2esn` Starts With .e1,`4esn`:$@usn5[..0xabc][..$`3esn`]}]->(@usn6 :``:usn2))),`7esn`=((`6esn` :`5esn`)<-[:`1esn`|`3esn` *0Xa{_usn4:``[9e12][$999],#usn8:123.654 In 12}]-(`5esn` :`4esn`:`6esn`)) Where 07 Is Not Null Is Not Null"),
    octest:ct_string("With Distinct $`4esn`[0..][999..],Filter(`8esn` In 123456789 =~@usn6 Where 123.654[`4esn`..12])[..Extract(#usn7 In $999 In 1e1 Where 1000[12e12][`5esn`])][..[@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``|.e0 =~Null]],(`3esn` {usn2:00[False..0e0]})<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(:`5esn`{#usn8:$``[True],`1esn`:@usn5 Is Null})<-[@usn6?:`8esn` *0..01]->(`5esn` :`4esn`:`6esn`)[[12.0 Starts With $`2esn` Starts With .e1]..] As `5esn` Order By .e12[`2esn`..010] Desc,0xabc In 010 In #usn7 Ascending Skip 1e1 Ends With $`7esn` Ends With .0 Where 9e1[$#usn8][$1000] Return Distinct `2esn` Starts With 12.e12 Starts With 12.0 As _usn3 Order By $1000[$@usn6][$_usn4] Desc Union All Detach Delete [`4esn`[.12][$@usn6],.0[..'s_str'][..01234567],1.e1 =~.12][Any(usn2 In False[$usn1][0x0] Where False Is Null)..],{#usn7:$usn2[0.e0],`6esn`:.e1[..\"d_str\"][..$123456789]}[..Extract(@usn5 In 9e0 Ends With $#usn8 Where $7 In 0.e0 In 999|Count ( * ) In 0.12)][..[@usn6 In 010[`5esn`] Where 's_str' Starts With 9e0 Starts With usn2|$`5esn` =~$0 =~``]],Count(*) In #usn8 In \"d_str\" Create (((`5esn` :@usn6{usn1:'s_str'[0..]})-[?:`4esn`|@usn5 *0Xa]-({`1esn`:$12 Starts With $usn1,`6esn`:123.654[`4esn`..12]})-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(`2esn` {`1esn`:$`4esn` Is Null Is Null}))),`7esn`=(({`7esn`:123.654,`6esn`:9e1 Starts With Count ( * )})-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(usn1 :_usn3{``:`6esn` =~$_usn4 =~7,`7esn`:9e0[$1000]})) Unwind Single(#usn7 In 9e0[$1000] Where @usn6 Contains .12 Contains $usn1)[Filter(usn2 In 7[12] Where $@usn5[..0xabc][..$`3esn`])..][Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 12.0 In 123.654 In _usn4)..] As _usn4 Union Optional Match `5esn`=((({`7esn`:123.654,`6esn`:9e1 Starts With Count ( * )})-[:#usn7|@usn5*..]-(`3esn` :usn2{`6esn`:#usn8 Is Null})<-[?:#usn7|@usn5 *0..01]->(:`1esn`:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null}))) Optional Match `2esn`=((`6esn` :#usn7:`5esn`)<-[?:#usn7|@usn5 *01234567..{`5esn`:$`4esn` In 1.e1 In #usn7}]->(:#usn8:`1esn`$`7esn`)),((_usn3 {#usn7:12.e12 Ends With `` Ends With 0,``:$@usn6 In @usn6 In 1e1})<-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(:`8esn`{``:$`1esn` =~999}))"),
    octest:ct_string("Detach Delete 9e0[$`8esn`],`5esn` Contains #usn7 Contains 9e12,12 Is Null Match @usn6=((`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})) Where 7[0e0..] Detach Delete (`4esn` :#usn7:`5esn`{_usn4:0Xa Ends With $`3esn` Ends With $1000})-[@usn6:#usn8|:`3esn`]->({@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]})[[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07[_usn3..][`6esn`..]|`1esn`[0.12..][@usn6..]]..][{``:07[$`2esn`..9e12][$`4esn`..9e12],`3esn`:$`6esn` Starts With .e12 Starts With $`1esn`}..],07 Contains `3esn` Contains `7esn`,Any(#usn7 In True Contains 's_str' Contains $usn1 Where `6esn` Starts With `6esn`) =~Single(#usn7 In $999 In 1e1 Where _usn4 Contains `` Contains 1.e1) Union All Return *,`2esn`(Distinct 12.e12 =~.0 =~usn1,00 Ends With $`1esn` Ends With `7esn`)[[_usn4 In 12e12 In 123456789 Where 0x0 Starts With $`6esn`|`2esn` In 7]] Order By $`2esn` Starts With 0.12 Starts With $12 Ascending,07 In `6esn` Desc,12[..0e0][...e1] Desc Skip #usn8[`6esn`..][$``..] Limit `3esn`[..0X0123456789ABCDEF][..0x0] Merge (((:`7esn`{_usn3:@usn5[0.0..0X7]})-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]->(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]})-[? *12..{usn2:$`8esn`[123456789..][$@usn5..]}]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]}))) On Match Set @usn5+=$0[123.654..0.e0],Any(`8esn` In 123456789 =~@usn6 Where .e1 =~_usn4 =~_usn4)._usn3? =01[..$`8esn`][..9e0],usn1 ={_usn4:``[9e12][$999],#usn8:123.654 In 12} Starts With Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0[0.0]) Starts With Filter(`6esn` In $`6esn`[``..][Count(*)..]) On Create Set [#usn7 In 9e1[$`1esn`..] Where 00 Ends With $`1esn` Ends With `7esn`].`2esn` =All(#usn7 In True Contains 's_str' Contains $usn1 Where $`1esn` Starts With Count(*)) In Any(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn`[0..][999..]) In Filter(`3esn` In 9e1 Contains $999 Where .e0 Is Not Null Is Not Null),``:@usn5,@usn5+=12.e12[_usn4..$1000][$7..$999] Remove `3esn`(Distinct 123.654 Starts With 0X7 Starts With $`4esn`).``!,Any(_usn4 In 12e12 In 123456789 Where True Contains 's_str' Contains $usn1).`2esn`,Filter(`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]).@usn5? Union Detach Delete 1e1 Contains 's_str' Contains `3esn`,12[``...e12]"),
    octest:ct_string("Merge _usn3=(:#usn7:`5esn`{@usn5:999 Starts With `2esn` Starts With .e1,``:0xabc In Null})-[`6esn` *0Xa]-(usn1 :`1esn`:_usn4{_usn3:@usn6[999..$_usn3][0.12..$@usn5],`1esn`:9e12[..1e1][..'s_str']}) On Match Set Extract(@usn5 In 's_str'[0..] Where `5esn`[..123.654][...e12]|$``[..\"d_str\"][..$#usn8]).@usn6 =[$usn1[`2esn`..][$`2esn`..]][(`3esn` :usn2)-[`4esn`?:usn1|`4esn`{`3esn`:123.654[..0.e0][..'s_str'],@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]}]-({`6esn`:9e1 Is Not Null Is Not Null,`8esn`:_usn3 In $`8esn` In @usn6})..`2esn`(Distinct $@usn6 Is Not Null Is Not Null,Count ( * ) Ends With $123456789)],None(#usn8 In `7esn` Where ``[7.._usn3]).@usn6? =`6esn`,Any(#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`])._usn4! =`` Is Null Union Unwind False[$usn1][0x0] As usn2 Delete $_usn4 Starts With $1000 Starts With 12,@usn5[$`7esn`..`5esn`],usn1 Unwind 12['s_str'][01] As `6esn`"),
    octest:ct_string("Return Distinct Filter(#usn7 In True Contains 's_str' Contains $usn1 Where `2esn`[..$_usn3]) In ({_usn3:_usn3 Ends With 7 Ends With $`1esn`,``:$_usn4[$`5esn`][`7esn`]})-[? *12..{usn2:$`8esn`[123456789..][$@usn5..]}]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]})<-[_usn4? *12..{`1esn`:$`6esn` Starts With .e12 Starts With $`1esn`,`3esn`:`8esn`[0.e0..]}]-({#usn8:.e12 Is Null Is Null,@usn6:`1esn` Is Not Null Is Not Null}) In Any(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 0xabc In 123456789 In 0x0),.e0 Is Not Null Is Not Null As `7esn`,$`2esn` Ends With `6esn` As usn1 Merge ((:@usn5{usn2:$#usn7[..$`4esn`][..01],#usn7:False Is Null})<-[*..{`7esn`:$``[..\"d_str\"][..$#usn8],`7esn`:$`` Contains $`2esn` Contains $usn2}]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})) Merge @usn5=({`2esn`:Count(*) Ends With usn1,`6esn`:1000 Ends With `7esn`}) Union With Distinct (:@usn5{@usn5:999[..`1esn`][..07],_usn4:Count ( * ) Ends With $123456789})<-[`2esn`? *01..123456789]-(`2esn` :@usn6)[[`2esn`[..$_usn4][...12],False Contains 0 Contains $`6esn`,.e1[12.0..]]..[#usn7 In 9e0[$1000] Where #usn8 =~0.e0|12.e12 =~0X0123456789ABCDEF =~1.e1]],`1esn`[0Xa] As usn1,usn1 Contains 010 As @usn5 Order By [Count(*)[9e12..12.0]] Starts With [`5esn` In 0X7 In $#usn7 Where 123456789 =~$999|$`8esn` Is Not Null Is Not Null] Starts With [$usn2 Is Not Null Is Not Null,0 =~1e1] Ascending,None(`3esn` In 9e1 Contains $999 Where 0xabc In Null) Is Not Null Descending,Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $12[9e0..$999]|.12 Starts With _usn3 Starts With $``) Descending Limit Filter(`6esn` In $`6esn`[``..][Count(*)..] Where $7 In $usn1 In 999) Ends With Any(usn2 In 7[12] Where 0X7[.0]) Where @usn6 Is Not Null Is Not Null Create (`3esn` )-[#usn8:`4esn`|@usn5]-(:#usn7:`5esn`{`3esn`:Null[..0]}) Remove Any(`3esn` In 9e1 Contains $999 Where `2esn` Starts With 12.e12 Starts With 12.0).usn1,All(usn2 In 7[12] Where $@usn5[..0xabc][..$`3esn`])._usn4!,7._usn4"),
    octest:ct_string("Detach Delete 9e1[_usn3] Delete [usn2 In 7[12] Where #usn7[.e0]|$usn2 =~9e1] Is Null Is Null,$`2esn` Starts With .0 Starts With `1esn`,0x0[0.0] Optional Match _usn3=(`` {`7esn`:.e0 Is Not Null Is Not Null,@usn6:.e1[..$`3esn`][..01]})-[usn1?:`2esn`|`4esn`{#usn7:$#usn7[..9e0][..123.654],usn2:.e0 Is Not Null Is Not Null}]-(`8esn` :@usn6)<-[ *01234567..]->(:``:usn2{`5esn`:$12 Starts With $usn1}) Where 0.e0 Starts With .0 Starts With 123456789"),
    octest:ct_string("Delete (@usn6 :`2esn`{_usn3:$``[7],`7esn`:_usn3 Ends With 7 Ends With $`1esn`})<-[_usn4:_usn4 *0X7..{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]}]-(#usn7 :`2esn`)-[`4esn`?{`1esn`:0xabc =~$@usn5}]->(usn2 {`5esn`:$@usn5 In 12e12 In 01}) Ends With `4esn`,[$usn1[`2esn`..][$`2esn`..]] Contains Extract(usn2 In 7[12] Where $_usn3 Is Null|.e12 Is Null Is Null),`1esn`[`3esn`..]"),
    octest:ct_string("Delete Filter(#usn7 In True Contains 's_str' Contains $usn1 Where `2esn`[..$_usn3]) In ({_usn3:_usn3 Ends With 7 Ends With $`1esn`,``:$_usn4[$`5esn`][`7esn`]})-[? *12..{usn2:$`8esn`[123456789..][$@usn5..]}]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]})<-[_usn4? *12..{`1esn`:$`6esn` Starts With .e12 Starts With $`1esn`,`3esn`:`8esn`[0.e0..]}]-({#usn8:.e12 Is Null Is Null,@usn6:`1esn` Is Not Null Is Not Null}) In Any(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 0xabc In 123456789 In 0x0),{`1esn`:1e1 Contains 's_str' Contains `3esn`} =~None(#usn7 In 9e0[$1000] Where `6esn`[$1000][`3esn`]) Union All Return $@usn5,0.12[0Xa][$`7esn`] As `4esn`,All(#usn7 In $999 In 1e1 Where 1.e1 In 1000 In _usn3) Contains (`6esn` :`8esn`{@usn6:12.e12 Contains #usn7 Contains $_usn4})-[`8esn`{`7esn`:9e12 Starts With 1e1}]-(_usn3 :_usn4) Contains [`8esn` Is Not Null Is Not Null,12 Starts With #usn7 Starts With 0Xa,.0 Starts With `1esn`] As _usn3 Create `2esn`=((`6esn` :#usn7:`5esn`)<-[?:#usn7|@usn5 *01234567..{`5esn`:$`4esn` In 1.e1 In #usn7}]->(:#usn8:`1esn`$`7esn`)),((_usn3 {#usn7:12.e12 Ends With `` Ends With 0,``:$@usn6 In @usn6 In 1e1})<-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(:`8esn`{``:$`1esn` =~999})) Remove [`8esn` Contains Count(*) Contains $#usn7,$12[$usn1..][Count(*)..],_usn4 Is Not Null].@usn6 Union With  $usn2 Is Not Null Is Not Null Skip 999[@usn5..][Null..] Limit $@usn6 Ends With `1esn` Where 9e12[$`5esn`..$123456789] Match ((({`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12})<-[ *7..{#usn7:$`8esn`[12.e12][_usn4],`2esn`:$0[123.654..0.e0]}]-(`` :#usn8:`1esn`{`8esn`:12[$`5esn`..][False..]})-[`3esn` *..07{usn2:True Contains 0x0 Contains $_usn3}]-({``:``[$`3esn`],#usn8:$@usn6[00]}))) Where #usn7 =~9e12 Detach Delete 0Xa In #usn7 In 's_str',0.e0[1000.._usn4][.e1..usn1]"),
    octest:ct_string("Match ((:`6esn`:_usn3{@usn6:7 =~`4esn`,_usn3:`6esn`[$1000][`3esn`]})),usn1=((`` )<-[usn2?:`6esn`|:#usn8 *999..]-(`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})<-[?:usn2{usn2:@usn5 Is Not Null}]-(`7esn` {#usn8:False Starts With 0X7 Starts With 01234567})) Where 0x0 Contains $`6esn` Contains `4esn` Merge @usn6=(({usn2:.0 Starts With `1esn`,`2esn`:00 Contains Count ( * ) Contains 0x0})<-[usn1?:`1esn`|`3esn` *01234567..{@usn5:`4esn`[\"d_str\"]['s_str']}]-({`7esn`:9e0 Contains $12 Contains `3esn`,`5esn`:.e0 Contains $#usn8})) On Create Set usn2 =(`1esn` $`4esn`)-[@usn6?:`7esn`|:`2esn`]-({@usn6:#usn7[`8esn`..usn1][$999..`7esn`]}) =~Filter(`3esn` In 9e1 Contains $999 Where 12.0 Is Null Is Null) =~[0xabc In Null],Single(#usn7 In True Contains 's_str' Contains $usn1 Where .e12[$@usn6..00][01234567.._usn3]).@usn5? =(`2esn` :_usn3{`8esn`:01234567[Null..$_usn3]})<-[?:usn2{usn2:@usn5 Is Not Null}]-(`7esn` {#usn8:False Starts With 0X7 Starts With 01234567}) =~[12 In $usn1 In 7] =~Filter(@usn5 In 's_str'[0..] Where 0.e0),`1esn` =None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $0[123.654..0.e0])[Extract(#usn7 In 9e0[$1000] Where .e1 In 123456789)][{_usn3:01[`8esn`..9e12][.12..0]}] On Create Set Extract(`3esn` In `2esn`[..01][..True] Where 00[01234567][False]|12[$`5esn`..][False..]).`2esn`! =12.e12 Ends With $``"),
    octest:ct_string("Remove None(#usn7 In 9e0[$1000] Where 123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]).`1esn`! Remove [0.e0[1000.._usn4][.e1..usn1],$`1esn` =~999,07[_usn3..][`6esn`..]].usn1!,usn2:`4esn`:`6esn`,Extract(usn2 In False[$usn1][0x0] Where $`7esn`|07 Is Null).#usn7! Union Delete Any(@usn5 In 9e0 Ends With $#usn8 Where 12.e12 =~0X0123456789ABCDEF =~1.e1)[(`5esn` :#usn8:`1esn`{_usn3:`6esn` Is Null Is Null})<-[?{@usn6:$0[0Xa..$123456789],`4esn`:`7esn` Contains 9e0}]->({_usn3:0X0123456789ABCDEF Contains 12e12 Contains 12.e12})-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})..][Filter(#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`])..],None(`5esn` In 0X7 In $#usn7 Where 0.12 Contains False Contains 1.e1)[..{@usn5:$@usn6 Is Not Null Is Not Null}][..{`3esn`:1e1 In 0.0 In 0X0123456789ABCDEF}] Unwind $_usn3 Is Not Null Is Not Null As `3esn` Create (((:`1esn`:_usn4{usn2:0x0 Starts With $`6esn`,_usn4:$`4esn`[`8esn`]})<-[@usn6?:_usn3|:`7esn`{@usn6:$`3esn`[.e1][_usn4]}]-(`` {`7esn`:$#usn7[..0Xa]})<-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(`3esn` {`3esn`:$@usn6 Is Not Null Is Not Null,`1esn`:12e12 =~1e1}))),_usn3=(`` {`7esn`:.e0 Is Not Null Is Not Null,@usn6:.e1[..$`3esn`][..01]})-[usn1?:`2esn`|`4esn`{#usn7:$#usn7[..9e0][..123.654],usn2:.e0 Is Not Null Is Not Null}]-(`8esn` :@usn6)<-[ *01234567..]->(:``:usn2{`5esn`:$12 Starts With $usn1}) Union Match ((`1esn` :`2esn`)<-[`1esn`:`8esn` *999..{`4esn`:$123456789 Starts With 0.12 Starts With Null,usn2:.e1[7..][9e0..]}]->(`1esn` :`3esn`{#usn7:12[..0e0][...e1]})-[@usn6?:#usn8|:`3esn`{usn1:.e1[..$`3esn`][..01],`4esn`:$`5esn` In .12}]->(usn2 :_usn4))"),
    octest:ct_string("Create @usn5=()-[:@usn6|:`7esn`{#usn7:.0[.e12..],usn2:usn2 =~usn1 =~Count ( * )}]-(:`4esn`:`6esn`{usn1:0 =~1e1,`7esn`:$#usn8[12.e12..`8esn`][12.0..0.0]})-[_usn3:`5esn`|:usn2 *999..{`3esn`:`5esn` Contains $`5esn` Contains 0X7}]-(`8esn` {`1esn`:$`4esn` Is Null Is Null}) Detach Delete (`5esn` :`6esn`:_usn3)-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->({#usn8:False Starts With 0X7 Starts With 01234567})<-[usn2?{``:$`1esn`[``][07]}]->(#usn7 {`7esn`:`8esn` Contains Count(*) Contains $#usn7}) Is Null Is Null,[`5esn` Contains `1esn` Contains usn1,$@usn5 Ends With @usn5 Ends With 0xabc] Is Null Is Null"),
    octest:ct_string("Unwind usn1[$@usn5] As _usn4 Return {`1esn`:1e1 Contains 's_str' Contains `3esn`} =~None(#usn7 In 9e0[$1000] Where `6esn`[$1000][`3esn`]) As `7esn`,(`2esn` $`6esn`)<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(usn2 {usn1:.e12 Ends With 0Xa Ends With 0xabc}) Ends With Extract(@usn6 In False Contains 0 Contains $`6esn` Where .e1[usn2..$_usn3][.0..$#usn7]) Ends With Single(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]) Order By {`4esn`:999 In 0e0,`6esn`:0.e0['s_str'..][01234567..]} Contains Single(`8esn` In 123456789 =~@usn6 Where 12.e12 Ends With `` Ends With 0) Ascending,`1esn` Starts With 0xabc Starts With $usn2 Desc Skip Single(`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]) Is Not Null Is Not Null Limit $usn1[Null][`8esn`] With  *,.e12[.12..],_usn4 Ends With _usn4 Ends With 9e0 As `` Skip None(`3esn` In `2esn`[..01][..True] Where usn1 In ``)[None(usn2 In 7[12] Where 12e12 =~$`7esn`)..] Limit Null[..0] Union All Merge #usn8=((`` :`3esn`{`6esn`:Count(*)[9e12..12.0]})<-[`6esn`? *00..0Xa]->(#usn7 :#usn8:`1esn`{``:.0[$``..0X7]})-[usn2?{``:$`1esn`[``][07]}]-(`3esn` :`6esn`:_usn3{`4esn`:12.0 Starts With .12 Starts With `6esn`,#usn8:0.0 Is Null Is Null})) On Create Set `4esn`+=$`4esn`[07..],`1esn` =123.654[`4esn`..12] On Match Set `6esn`(Distinct 0Xa[$`8esn`..][$_usn4..],0xabc In Null).`2esn`! =(`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null})<-[? *..010{#usn8:False Is Null}]->(#usn7 {#usn7:1.e1 Starts With 9e12})<-[:_usn3|:`7esn` *00..0Xa]-(`1esn` $`4esn`)[..[0X7 In $#usn7,`4esn` Is Not Null Is Not Null,.0[.e12..]]][..(:`2esn`{_usn3:@usn5[0.0..0X7]})<-[`7esn`?:`2esn`|`4esn` *..010{usn1:0e0[``..$1000][$7..12.e12],`5esn`:0x0 Starts With $`6esn`}]->(@usn5 {_usn4:`5esn` Contains #usn7 Contains 9e12})],Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null).`7esn`? =Filter(#usn7 In $999 In 1e1 Where 9e12[..1e1][..'s_str'])[..Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|0 Ends With 12.e12 Ends With usn2)][..None(#usn7 In $999 In 1e1 Where `1esn`[0.12..][@usn6..])],Extract(`3esn` In 9e1 Contains $999 Where _usn3[`2esn`..0X7][0.e0..$`3esn`]).@usn5 =$@usn6 Ends With 123456789 Ends With 12.0 Remove [0[$`5esn`],$999 In 1e1,$`6esn` Is Null].`5esn`,(:usn1:`3esn`{`6esn`:0.e0[$`4esn`..`2esn`],_usn3:7[12]})<-[@usn6?:_usn3|:`7esn`{@usn6:$`3esn`[.e1][_usn4]}]-(`` {`7esn`:$#usn7[..0Xa]})-[`1esn` *01234567..]->(_usn3 {#usn7:12.e12 Ends With `` Ends With 0,``:$@usn6 In @usn6 In 1e1}).`3esn`,{`6esn`:$`7esn`[0.12]}._usn3! Union Return Distinct *,$`6esn`[0e0..][010..],.e12 Is Null Is Null Skip 's_str' Ends With _usn4 Ends With 0e0 Return Distinct @usn6[9e12],usn2 =~$`` =~$`8esn` Order By All(#usn7 In 9e0[$1000] Where 's_str'[0x0..1.e1]) Is Not Null Is Not Null Descending Limit `5esn` Contains `7esn` Remove Extract(`3esn` In 9e1 Contains $999 Where usn1[False..`5esn`][$1000..$12]|True Starts With Null).`4esn`!"),
    octest:ct_string("Detach Delete `1esn` Starts With 0X7 Starts With \"d_str\",\"d_str\" Is Not Null Is Not Null,_usn4 Starts With `` Starts With 1000 Union All Remove Single(`5esn` In 0X7 In $#usn7 Where 123456789 =~$999).`5esn`,[`6esn` In $`6esn`[``..][Count(*)..]|.e1[12.0..]]._usn4? Union Detach Delete `4esn`[..$@usn6][..@usn6],$_usn4 Is Null Is Null"),
    octest:ct_string("Create usn1=(({#usn7:12e12 In $`5esn`})<-[?{`6esn`:$0[0Xa..$123456789],``:.e1[..\"d_str\"][..$123456789]}]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]-(`8esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})) Union Optional Match usn1=(({#usn7:12e12 In $`5esn`})<-[?{`6esn`:$0[0Xa..$123456789],``:.e1[..\"d_str\"][..$123456789]}]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]-(`8esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})),``=({`6esn`:@usn5[$`6esn`..][$999..],`8esn`:$@usn5[..0xabc][..$`3esn`]})<-[? *..010{usn1:9e1[_usn3]}]->(`5esn` {`4esn`:0x0[usn1..usn1],usn1:$`5esn`[0X7..010][`7esn`..'s_str']}) Where $usn2 Is Not Null Is Not Null Union All With  's_str' Where 's_str'[0..] Unwind 12e12 In 123456789 As `7esn` Detach Delete $12 Starts With $0 Starts With $`8esn`"),
    octest:ct_string("Unwind {usn2:`7esn`[$usn1..]['s_str'..],usn2:_usn4 Contains `` Contains 1.e1} Is Not Null Is Not Null As _usn3 Union Match ((:`4esn`:`6esn`{`4esn`:$@usn5[..0xabc][..$`3esn`],`3esn`:$usn2[`2esn`..$`1esn`]})<-[@usn5?{`7esn`:0.0 Contains #usn7,`6esn`:@usn5[0.0..0X7]}]->(#usn7 :#usn8:`1esn`{``:.0[$``..0X7]})-[ *12..{`8esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}]->({`8esn`:usn2[`8esn`..][0X0123456789ABCDEF..]})),usn2=(_usn3 {`8esn`:0e0 =~7 =~12.0,_usn4:.e1[..$`3esn`][..01]})<-[_usn4{`2esn`:#usn8[`8esn`..],`2esn`:@usn6[9e12]}]-(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-(`2esn` :@usn5{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3}) Where 0.12 Starts With $`8esn` Starts With @usn5 Merge (`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`})-[@usn6:`5esn`|:usn2 *0xabc{#usn8:999 In 0e0}]-({`1esn`:#usn7[0]}) On Match Set `1esn` =0x0[@usn6..][01..],`5esn`(Distinct $#usn7 Contains $`7esn` Contains .e12).@usn6! =(usn2 :_usn3)-[`6esn`?:`6esn`|:#usn8]-(`1esn` {_usn4:`8esn` Is Null})<-[`7esn`?:#usn8|:`3esn`]-(_usn4 :`3esn`) Is Null Create ((#usn7 {`1esn`:$`4esn` Is Null Is Null})<-[ *999..{`3esn`:123456789 =~$999,_usn4:`4esn` Is Not Null Is Not Null}]-(`6esn` :`8esn`))"),
    octest:ct_string("Merge ((:`4esn`:`6esn`{@usn5:$#usn7[..9e0][..123.654],`2esn`:7[12]})) On Create Set [12 =~usn1,7 =~`4esn`,``[9e12][$999]].`1esn` =Extract(#usn7 In $999 In 1e1 Where `5esn`[..True][..0.e0]|$`5esn` =~$0 =~``) In (:`7esn`{#usn8:0Xa Ends With $`3esn` Ends With $1000})-[:`5esn`|:usn2 *01234567..]-(:`2esn`{_usn3:@usn5[0.0..0X7]}) In Extract(#usn7 In True Contains 's_str' Contains $usn1 Where 9e1[$#usn8][$1000]|999 Contains 0 Contains $`5esn`) On Create Set {usn1:0x0[$0][7],`5esn`:@usn5 Contains #usn8 Contains 12.0}.#usn8 =[@usn6 In False Contains 0 Contains $`6esn` Where 12.e12 =~.0 =~usn1] Is Null,`4esn`:#usn7:`5esn`,({usn2:.12[0X7..][12e12..],`6esn`:$`4esn`[`6esn`..$12]})<-[`8esn` *0xabc]-(:_usn3{_usn4:.e1[7..][9e0..]})-[_usn3?{``:$@usn5 Contains 's_str' Contains \"d_str\",_usn3:$#usn8[12.e12..`8esn`][12.0..0.0]}]-({`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}).usn2 =123.654[..0.e0][..'s_str'] Create (:usn1:`3esn`{`8esn`:12 Starts With True Starts With 12e12,`8esn`:`2esn` Starts With $`7esn`})<-[`7esn`:#usn7|@usn5*{`8esn`:$`3esn`[$_usn4..0Xa]}]-(:_usn4{_usn3:$#usn7[..0Xa],@usn5:12e12 In 123456789}) Union All Unwind `` =~.12 As _usn3 Unwind 0x0[12e12..$`7esn`] As `7esn`"),
    octest:ct_string("Unwind 9e1 =~123456789 =~999 As `` Union All Delete 7 =~0.12 Match #usn7=(#usn8 :_usn3)-[`7esn`{#usn8:01 Is Null,`6esn`:#usn7[0]}]-({`2esn`:Count(*) Ends With usn1,`6esn`:1000 Ends With `7esn`})<-[:_usn3|:`7esn` *00..0Xa]-(#usn7 :`4esn`:`6esn`$usn2),`2esn`=({@usn5:$`5esn` Is Not Null Is Not Null})<-[#usn8?:`8esn`{`1esn`:999 In #usn8 In $``,`8esn`:False[$`4esn`..]}]->(`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]}) Where $_usn4[$`5esn`][`7esn`]"),
    octest:ct_string("Merge ((@usn5 {usn2:.12[0X7..][12e12..],`6esn`:$`4esn`[`6esn`..$12]})<-[usn1? *01234567..{@usn5:01[`3esn`..][Count(*)..]}]->(`3esn` :`6esn`:_usn3{`4esn`:12.0 Starts With .12 Starts With `6esn`,#usn8:0.0 Is Null Is Null})-[`4esn`?*..{``:`` =~.12,usn1:123.654 Is Not Null}]-(:@usn5{`1esn`:999 Is Not Null Is Not Null,``:.e1[7..][9e0..]})) On Create Set [`3esn` In 9e1 Contains $999 Where .e12 Ends With 0Xa Ends With 0xabc].@usn6? =[`4esn`[.12][$@usn6],.0[..'s_str'][..01234567],1.e1 =~.12][Any(usn2 In False[$usn1][0x0] Where False Is Null)..],{#usn8:Count(*) Starts With usn2 Starts With `7esn`}.`1esn`! =`4esn`($_usn4 Starts With $1000 Starts With 12) =~Any(@usn5 In 's_str'[0..] Where 1000[..`2esn`][..$@usn6]) =~[`3esn` In `2esn`[..01][..True] Where usn1 In ``|01[`8esn`..9e12][.12..0]] On Create Set `1esn` =(`4esn` :#usn7:`5esn`{_usn4:0Xa Ends With $`3esn` Ends With $1000})-[@usn6:#usn8|:`3esn`]->({@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]})[[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07[_usn3..][`6esn`..]|`1esn`[0.12..][@usn6..]]..][{``:07[$`2esn`..9e12][$`4esn`..9e12],`3esn`:$`6esn` Starts With .e12 Starts With $`1esn`}..] Detach Delete [#usn7 In $999 In 1e1 Where 0X7['s_str'..][01..]] Is Not Null Is Not Null,00[False..0e0],0.e0[1000.._usn4][.e1..usn1]"),
    octest:ct_string("With Distinct $@usn6 Ends With 12.e12 Ends With @usn5 As usn2,``[usn1][`5esn`],`7esn`[..$`6esn`] Skip `3esn`[7..0.e0][0.0..123456789] With Distinct [#usn7 In 9e1[$`1esn`..] Where $@usn5 In $`6esn` In 12e12|12.0 Is Null Is Null] Contains [`3esn` In `2esn`[..01][..True] Where $0 Ends With $usn1 Ends With $_usn3] As #usn8 Order By [#usn7 In $999 In 1e1 Where 0X7['s_str'..][01..]] Is Not Null Is Not Null Desc Limit Any(`5esn` In 0X7 In $#usn7 Where 0.12 Contains False Contains 1.e1) Contains 0X7 Contains Extract(`8esn` In 123456789 =~@usn6 Where @usn5 Contains 9e0|9e0 Contains $12 Contains `3esn`) Union All Create (:`5esn`{`4esn`:$`5esn` =~$0 =~``,_usn3:$``[..$#usn7][..`6esn`]})<-[#usn8? *1000..0X0123456789ABCDEF{`7esn`:Count ( * )[$`5esn`..][$7..],`6esn`:`6esn` Ends With _usn4 Ends With False}]->(`8esn` :@usn5{`5esn`:_usn3 In $`8esn` In @usn6,_usn4:$@usn6 Ends With 12.e12 Ends With @usn5})-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]->(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]}),`6esn`=((`4esn` :_usn4)-[`5esn`?:_usn3|:`7esn`]->({@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]})<-[?:`5esn`|:usn2]->(usn2 :`5esn`)) With Distinct $#usn8 Ends With `` Ends With 999 As `5esn`,Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 12.e12[0..0.12][123.654..9e12]) Is Not Null Is Not Null As _usn3 Order By _usn4(Distinct $@usn6[$`8esn`..][123456789..],$`` Starts With $1000 Starts With @usn6)[[#usn7 In True Contains 's_str' Contains $usn1 Where $usn2 =~1.e1 =~usn1]..][All(#usn7 In True Contains 's_str' Contains $usn1 Where $`2esn` Contains Count(*))..] Desc,{#usn8:0.0 =~9e0 =~$0,`5esn`:Count ( * ) Ends With $123456789} Is Not Null Desc,9e0 Ends With $#usn8 Desc Limit 12.0 Starts With $`2esn` Starts With .e1 Where 9e1 Ends With Count(*) Ends With $7"),
    octest:ct_string("Create (((:usn1:`3esn`{`8esn`:12 Starts With True Starts With 12e12,`8esn`:`2esn` Starts With $`7esn`})<-[`7esn`?:`2esn`|`4esn` *..010{usn1:0e0[``..$1000][$7..12.e12],`5esn`:0x0 Starts With $`6esn`}]->(@usn5 {_usn4:`5esn` Contains #usn7 Contains 9e12})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]})))"),
    octest:ct_string("Merge usn2=(({`7esn`:`8esn` Contains Count(*) Contains $#usn7})<-[usn1? *0xabc{usn1:$_usn4 Starts With $1000 Starts With 12}]-(usn1 :usn1:`3esn`)) Unwind Filter(`5esn` In `7esn`[$usn2..][$123456789..] Where $usn2 =~1.e1 =~usn1) Contains {@usn5:07 Is Not Null Is Not Null} Contains None(@usn5 In 's_str'[0..] Where usn1 Starts With 00) As @usn6"),
    octest:ct_string("Remove Any(@usn6 In False Contains 0 Contains $`6esn` Where $usn2[0.e0])._usn3!,[usn2 Contains $0 Contains .0,$`5esn`[0X7..010][`7esn`..'s_str'],123.654[$0..0X7][Null..#usn8]]._usn4?,(`` {`1esn`:123456789 =~@usn6,`1esn`:$`5esn`[0X7..010][`7esn`..'s_str']})<-[`1esn`?:`8esn` *7..]-(:``:usn2{``:True[$_usn3..]})<-[#usn8? *0Xa]-(`2esn` :`6esn`:_usn3).usn2 Detach Delete usn1[False..`5esn`][$1000..$12] Return $7[999][usn1] As `6esn`,0 Ends With Count(*) Ends With False As `7esn` Order By Any(#usn7 In 9e0[$1000] Where .e0 Is Null) =~Extract(`3esn` In 9e1 Contains $999 Where `2esn` Starts With 12.e12 Starts With 12.0|$`3esn` In $usn2) =~{#usn8:0.0 =~9e0 =~$0,`5esn`:Count ( * ) Ends With $123456789} Descending Skip 010[...12] Limit $`1esn` In .e0"),
    octest:ct_string("Optional Match (:`2esn`{usn1:.0[..'s_str'][..01234567],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})<-[#usn8? *0Xa]-(`2esn` :`6esn`:_usn3),(@usn6 :`4esn`:`6esn`)-[ *0..01{@usn6:$0[123.654..0.e0]}]->(usn1 :`1esn`:_usn4{_usn3:@usn6[999..$_usn3][0.12..$@usn5],`1esn`:9e12[..1e1][..'s_str']})<-[`2esn`?:`6esn`|:#usn8{`2esn`:12.e12 Contains 9e1,`5esn`:.e1 Starts With 12.e12 Starts With `2esn`}]-(_usn3 {_usn3:0.12 Starts With $`8esn` Starts With @usn5}) Unwind [#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 9e1[usn1..0x0][12.e12..12.0]][..{usn2:0x0[0X7]}][..[12.e12 Is Not Null Is Not Null,$@usn6[.0..][0e0..]]] As _usn4"),
    octest:ct_string("Match (((`7esn` {usn2:0X7[..$`8esn`],`1esn`:123.654 Is Not Null})<-[ *12..{`8esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}]-(`5esn` :`1esn`:_usn4)-[:`6esn`|:#usn8{``:`1esn` Starts With 0xabc Starts With $usn2}]-(_usn3 :`2esn`{@usn5:`4esn` Is Not Null Is Not Null}))) Union Detach Delete 999 Is Not Null Is Not Null Union Remove Any(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $123456789 In 0.12).#usn8?,[`5esn` In `7esn`[$usn2..][$123456789..] Where 12e12 Is Not Null|$#usn7 Starts With 01234567 Starts With $0].`7esn`,(`4esn` :@usn6)-[`8esn`{`7esn`:9e12 Starts With 1e1}]-(_usn3 :_usn4).`4esn`"),
    octest:ct_string("Merge (:_usn4{_usn3:$#usn7[..0Xa],@usn5:12e12 In 123456789}) Union With Distinct 0X7[`2esn`..] As `6esn`,Single(usn2 In False[$usn1][0x0])[All(@usn6 In 010[`5esn`] Where 00[1.e1..])][(:`2esn`{``:07[$`2esn`..9e12][$`4esn`..9e12],`3esn`:$`6esn` Starts With .e12 Starts With $`1esn`})-[?{`5esn`:$`2esn`[.0..][0.0..]}]->(:usn2{@usn5:07 Ends With 9e12 Ends With `2esn`})-[`` *1000..0X0123456789ABCDEF]->(:_usn4{`8esn`:01234567[Null..$_usn3]})] Order By $0 Starts With @usn5 Desc,Filter(@usn5 In 9e0 Ends With $#usn8) Contains {@usn6:#usn7[`8esn`..usn1][$999..`7esn`]} Contains (:#usn7:`5esn`)-[?$7]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0})<-[@usn5? *01..123456789{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`}]->(`` :usn2{@usn5:$`4esn` Contains _usn3 Contains `8esn`,`7esn`:$`4esn`[`4esn`][Count(*)]}) Asc Limit [@usn5 In 's_str'[0..] Where 01234567[\"d_str\"..`4esn`]|usn1 In ``] Is Null Is Null"),
    octest:ct_string("Optional Match #usn7=((`7esn` :`1esn`:_usn4{@usn5:0x0[usn1..usn1],`6esn`:`4esn`[$_usn3..$`7esn`]})-[usn2?:`5esn`|:usn2{`2esn`:`7esn`[$usn2..][$123456789..],@usn5:9e1 Starts With Count ( * )}]->({`3esn`:`5esn` Contains $`5esn` Contains 0X7})-[`6esn` *00..0Xa{usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01}]->(:usn1:`3esn`{@usn6:0.e0 Starts With .0 Starts With 123456789,`4esn`:.e1[7..][9e0..]})) Where 999 Is Null Is Null Remove (:`5esn`{@usn6:1000[0e0][1e1]})-[:`` *0..01]-(:`8esn`{usn2:$123456789 Contains $#usn8 Contains ``,_usn3:`3esn`[..0X0123456789ABCDEF][..0x0]})-[?:#usn7|@usn5 *01234567..{`5esn`:$`4esn` In 1.e1 In #usn7}]-(`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]}).@usn6!,[123456789 Contains 0.0 Contains $@usn6,usn1 =~$`7esn`,9e12[9e1]].`8esn`,Filter(@usn6 In 010[`5esn`] Where @usn6[9e12]).usn2 Union All Detach Delete $@usn5 Contains 's_str' Contains \"d_str\",010 Is Null,Count(*)[..@usn6][..`7esn`]"),
    octest:ct_string("Detach Delete `2esn`[$@usn6..][Null..],$1000 Starts With $`7esn`"),
    octest:ct_string("Match #usn7=((`7esn` :`1esn`:_usn4{@usn5:0x0[usn1..usn1],`6esn`:`4esn`[$_usn3..$`7esn`]})-[usn2?:`5esn`|:usn2{`2esn`:`7esn`[$usn2..][$123456789..],@usn5:9e1 Starts With Count ( * )}]->({`3esn`:`5esn` Contains $`5esn` Contains 0X7})-[`6esn` *00..0Xa{usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01}]->(:usn1:`3esn`{@usn6:0.e0 Starts With .0 Starts With 123456789,`4esn`:.e1[7..][9e0..]})) Where 0.0 Contains #usn7 With  $@usn6 Ends With 12.e12 Ends With @usn5 As usn2 Where 12.0 Is Null Delete 12.e12 Contains `6esn`,$1000 Is Not Null,`1esn`[$@usn6][07] Union All With  *,`` =~.12 As #usn7 Skip usn2 =~7 Limit 0x0 In 0.e0 In #usn8 Where $999[0Xa..][9e1..] Create (:_usn4)<-[`5esn` *0xabc]->(`` :`6esn`:_usn3)-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01}),`7esn`=((_usn3 :`7esn`)) Return Distinct 12 Starts With True Starts With 12e12 As _usn4 Skip .e1 In 123456789 Limit $7 Starts With $`4esn`"),
    octest:ct_string("Match _usn3=(`1esn` )<-[? *0xabc]-(:@usn6{`6esn`:01 Ends With 0Xa Ends With 0X7}) Where @usn5 Starts With 9e0 Starts With 010 Return `2esn` Starts With 12.e12 Starts With 12.0 As _usn3 Skip 0e0[``] Limit .e0 =~Null Return *,#usn7[0.12..],$`3esn`[.e1][_usn4] As _usn4 Skip (`2esn` $`6esn`)<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(usn2 {usn1:.e12 Ends With 0Xa Ends With 0xabc}) Ends With Extract(@usn6 In False Contains 0 Contains $`6esn` Where .e1[usn2..$_usn3][.0..$#usn7]) Ends With Single(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]) Limit \"d_str\" Is Not Null Is Not Null Union Detach Delete `7esn`[0x0][$`4esn`],0.0[$usn2..] Return (usn2 :usn1:`3esn`{`3esn`:`2esn` Is Null})<-[:`8esn` *999..{@usn6:`7esn` Ends With $7 Ends With $@usn5,``:0e0 Starts With 999 Starts With `2esn`}]->(`6esn` :#usn7:`5esn`)<-[usn1:`1esn`|`3esn`]->(`1esn` {#usn8:$#usn7[..9e0][..123.654],`5esn`:9e12 Starts With 1e1}) =~(`7esn` {#usn7:$@usn6 Ends With `1esn`})<-[#usn8 *0x0..]->(_usn3 :usn2{#usn8:$`2esn` Is Null,_usn3:123.654 Is Not Null})-[? *0X0123456789ABCDEF..]-(usn2 :_usn3) Skip Extract(#usn8 In `7esn` Where ``[7.._usn3]|@usn5 Is Null) Is Not Null Is Not Null Limit $`1esn` Starts With Count(*)"),
    octest:ct_string("With Distinct `2esn`[$usn2][12.0],Single(#usn7 In 9e0[$1000] Where $123456789[...12][..@usn6])[Filter(@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str'])..] As _usn4 Limit `4esn` In 010 Union All Delete $0[12.0...e1],_usn4[.12..$usn2][$_usn3..123.654],07[..07][..0X7] Remove [#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where _usn4[`7esn`]|$#usn7 In $@usn5 In $`1esn`].@usn6 Return Distinct .0 Starts With `1esn` As #usn7,Single(#usn7 In True Contains 's_str' Contains $usn1 Where `7esn`) Ends With [0Xa Ends With $`3esn` Ends With $1000] Ends With {usn1:0x0[0X7],@usn5:`4esn`[.12][$@usn6]} As usn2,$@usn5[..$#usn7] Limit None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $0[123.654..0.e0])[Extract(#usn7 In 9e0[$1000] Where .e1 In 123456789)][{_usn3:01[`8esn`..9e12][.12..0]}]"),
    octest:ct_string("Merge (`1esn` :@usn6{`6esn`:00[False..0e0],`6esn`:$usn2 =~1.e1 =~usn1})<-[`7esn`:`2esn`|`4esn`{_usn4:.e1[7..][9e0..]}]-(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"})-[:_usn3|:`7esn`*{`1esn`:12[..$999][..$`2esn`],usn2:9e1}]->(:``:usn2{`5esn`:$12 Starts With $usn1}) On Create Set _usn3+=`5esn`(Distinct .12[123.654..]) On Match Set `2esn` =`3esn`[..0X0123456789ABCDEF][..0x0] With Distinct .e1 In 0,Any(#usn7 In 9e1[$`1esn`..] Where #usn7[0])[[00[12..$`6esn`],$`4esn`['s_str'..]]..] Order By .12 In `8esn` In $#usn8 Asc,12.e12[..9e1][..$_usn3] Descending Skip (`2esn` $`6esn`)<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(usn2 {usn1:.e12 Ends With 0Xa Ends With 0xabc}) Ends With Extract(@usn6 In False Contains 0 Contains $`6esn` Where .e1[usn2..$_usn3][.0..$#usn7]) Ends With Single(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]) Where $`1esn`[``][07] Union Detach Delete All(@usn5 In 's_str'[0..] Where 0Xa[..Count ( * )][..$123456789]) Is Not Null Is Not Null,@usn6[`1esn`..],$#usn7 Ends With 's_str' Ends With 0X7 Match (((`` :#usn8:`1esn`{``:`7esn`[$usn2..][$123456789..],_usn4:$12 Starts With $usn1})<-[_usn3?:_usn3|:`7esn`]->(#usn7 )<-[:`1esn`|`3esn`{`2esn`:$`3esn` Ends With 01234567}]->(`5esn` :`3esn`))),((#usn7 :_usn3)<-[ *0Xa{`3esn`:9e1 Ends With Count(*) Ends With $7}]-(:@usn6{`7esn`:$`6esn`[``..][Count(*)..]})) Union All Remove [`5esn` In `7esn`[$usn2..][$123456789..] Where $@usn6 Ends With 12.e12 Ends With @usn5|`5esn`[..True][..0.e0]].`2esn`!,None(`8esn` In 123456789 =~@usn6 Where $`5esn` =~$`8esn` =~usn2)._usn3?"),
    octest:ct_string("Merge usn2=(`3esn` {``:9e1 Is Null,usn1:9e0[Count(*)..0.12][$`1esn`..12.0]})-[?:`7esn`|:`2esn`{@usn5:usn2[1.e1],@usn6:$#usn8 Starts With .e12 Starts With 1.e1}]->({`1esn`:$12 Starts With $usn1,`6esn`:123.654[`4esn`..12]}) On Create Set {`3esn`:$@usn6 Is Not Null Is Not Null,`1esn`:12e12 =~1e1}.usn1 =[`4esn`[.12][$@usn6],.0[..'s_str'][..01234567],1.e1 =~.12][Any(usn2 In False[$usn1][0x0] Where False Is Null)..],`5esn`+={`7esn`:usn1[False..`5esn`][$1000..$12],`1esn`:$usn1[`2esn`..][$`2esn`..]}[Extract(@usn5 In 's_str'[0..] Where 0Xa[..Count ( * )][..$123456789]|.e1[..$`3esn`][..01])..],`2esn` =0e0[.12..7][12...e12] Match @usn6=((`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})) Where 7[0e0..] Union Merge `2esn`=(((:`6esn`:_usn3)<-[`1esn`:`8esn` *7..]->(`` {#usn8:.e12 Is Null Is Null,@usn6:`1esn` Is Not Null Is Not Null})-[#usn7?:`7esn`|:`2esn` *..07]-(#usn7 {#usn7:1.e1 Starts With 9e12}))) On Create Set usn2+=$12 Starts With $0 Starts With $`8esn`,`1esn`+=12.0 Starts With .12 Starts With `6esn`"),
    octest:ct_string("With Distinct $7[999][usn1] As `6esn`,[Null[..0]][[#usn7 In 9e1[$`1esn`..] Where Count ( * ) In 0.12|$`6esn`[1.e1][$_usn3]]..] As @usn5 Skip None(#usn8 In `7esn` Where $`3esn` Contains $`1esn`) Starts With #usn8(0x0[Count(*)..@usn6][Count(*)..0Xa]) Create ((:#usn8:`1esn`)-[ *..07]->(`4esn` {``:.e1 Starts With 12.e12 Starts With `2esn`})-[`5esn`?:_usn3|:`7esn`]->({@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]})),`8esn`=(usn1 {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})<-[`4esn`?:`4esn`|@usn5 *01..123456789]-(#usn7 :`4esn`:`6esn`{`1esn`:`1esn`[$@usn6][07]}) Merge (({@usn6:010 Starts With 0 Starts With 0.0,_usn4:07[$`2esn`..9e12][$`4esn`..9e12]})<-[:@usn6|:`7esn` *0..01{``:`1esn`[0.0..1e1][0x0..7],usn2:01[`3esn`..][Count(*)..]}]->(`5esn` :``:usn2{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3})) On Create Set [12 =~usn1,7 =~`4esn`,``[9e12][$999]].`1esn` =Extract(#usn7 In $999 In 1e1 Where `5esn`[..True][..0.e0]|$`5esn` =~$0 =~``) In (:`7esn`{#usn8:0Xa Ends With $`3esn` Ends With $1000})-[:`5esn`|:usn2 *01234567..]-(:`2esn`{_usn3:@usn5[0.0..0X7]}) In Extract(#usn7 In True Contains 's_str' Contains $usn1 Where 9e1[$#usn8][$1000]|999 Contains 0 Contains $`5esn`) Union All Create _usn4=(((_usn4 :_usn4{_usn3:$`3esn`[.e1][_usn4]})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)<-[usn1:`7esn`|:`2esn`{`6esn`:Count(*) In #usn8 In \"d_str\",`1esn`:$`1esn` Ends With 0X0123456789ABCDEF}]-(`6esn` :`1esn`:_usn4))),usn1=(_usn4 :_usn4{`2esn`:`6esn` Starts With `6esn`,`8esn`:1000[0e0][1e1]}) With Distinct [`5esn`[$`7esn`..$@usn5],$#usn7[..9e0][..123.654],1.e1 Is Null Is Null] Ends With Any(`6esn` In $`6esn`[``..][Count(*)..] Where 07 Contains `3esn` Contains `7esn`),usn2[usn2..0X7] As `1esn` Order By 's_str'[0x0..1.e1] Asc Limit 0xabc[..$1000][..`5esn`] Where `2esn` Starts With 12.e12 Starts With 12.0 Merge #usn8=((`4esn` :@usn6)<-[@usn5?:usn2 *0..01]->(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})) Union All Remove Any(#usn7 In 9e0[$1000] Where 1e1 Contains 0.e0 Contains 9e1).`2esn`!,None(@usn5 In 9e0 Ends With $#usn8 Where $`3esn` In $usn2).``"),
    octest:ct_string("Detach Delete `6esn` =~`3esn` =~@usn6,(:_usn4$12)-[`1esn`?:`6esn`|:#usn8 *0Xa]-(usn1 :#usn8:`1esn`)[{`7esn`:$usn2 =~9e1}..] Create `2esn`=(_usn3 {`8esn`:0e0 =~7 =~12.0,_usn4:.e1[..$`3esn`][..01]})<-[_usn4{`2esn`:#usn8[`8esn`..],`2esn`:@usn6[9e12]}]-(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-(`2esn` :@usn5{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3}) Remove (`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})<-[usn1? *01234567..{@usn5:01[`3esn`..][Count(*)..]}]->(`3esn` :`6esn`:_usn3{`4esn`:12.0 Starts With .12 Starts With `6esn`,#usn8:0.0 Is Null Is Null}).#usn7,[`8esn` In 123456789 =~@usn6 Where 0x0[@usn6..][01..]|#usn7[.e0]].usn2?,Extract(#usn7 In True Contains 's_str' Contains $usn1 Where `8esn`[..$#usn8]).`2esn`! Union All Unwind 0.e0[$`4esn`..`2esn`] As @usn5 Optional Match (_usn4 :#usn7:`5esn`)-[_usn4? *999..{_usn3:$`5esn` =~usn1}]-(`5esn` :#usn8:`1esn`) Where 9e1[`1esn`..0][999..1e1]"),
    octest:ct_string("With  *,`2esn` In 9e0 In 7,$7 Starts With $`4esn` As _usn4 Skip (:`6esn`:_usn3{@usn6:7 =~`4esn`,_usn3:`6esn`[$1000][`3esn`]})-[_usn4:_usn4 *0X7..{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]}]-(:`6esn`:_usn3{`4esn`:#usn7 Contains $0 Contains $usn2})[[$`6esn`[1.e1][$_usn3]]][usn2(0xabc In Null)] Limit None(#usn7 In 9e0[$1000] Where $_usn3 Is Null) In (:`3esn`)<-[_usn4{`2esn`:#usn8[`8esn`..],`2esn`:@usn6[9e12]}]-({#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})<-[`4esn`:`1esn`|`3esn` *12..]-(#usn8 :`8esn`) In {`7esn`:$``[..\"d_str\"][..$#usn8],`7esn`:$`` Contains $`2esn` Contains $usn2} Where 12e12 Is Not Null Unwind 07 In 0Xa In usn1 As #usn8 Union Unwind 9e1 =~$_usn4 =~1.e1 As `7esn`"),
    octest:ct_string("Unwind Extract(#usn7 In 9e0[$1000] Where $`1esn` Starts With Count(*)|9e0 Ends With $#usn8)[(`` :`5esn`{@usn5:123456789 =~@usn6})<-[:@usn5|_usn3{#usn7:$123456789 Starts With 0.12 Starts With Null,usn1:.e1[..$`3esn`][..01]}]-(#usn7 :`3esn`{`3esn`:@usn5[0.0..0X7],@usn5:$#usn7 Starts With $`2esn`})<-[:`1esn`|`3esn` *0Xa{_usn4:``[9e12][$999],#usn8:123.654 In 12}]-(`7esn` {``:9e1 Contains $999,``:$usn2[True..0X0123456789ABCDEF]}).._usn3(Distinct 0x0 Contains $`6esn` Contains `4esn`,usn2[1.e1])][(:@usn6{usn2:$123456789 Contains $#usn8 Contains ``,_usn3:`3esn`[..0X0123456789ABCDEF][..0x0]})<-[`7esn`?:usn1|`4esn`]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})<-[:_usn4]->(:usn2{@usn5:07 Ends With 9e12 Ends With `2esn`})..[#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[`8esn`]|9e1 Is Null]] As usn1 Union All Create _usn3=(`1esn` )<-[? *0xabc]-(:@usn6{`6esn`:01 Ends With 0Xa Ends With 0X7}) With  *,Any(#usn7 In 9e0[$1000] Where .e0 Is Null) In None(@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``) In Filter(@usn6 In False Contains 0 Contains $`6esn` Where $@usn5 In 12e12 In 01) As `7esn` Order By (:@usn5{_usn3:123.654})<-[usn1:`1esn`|`3esn`]-(_usn4 :@usn5)-[:_usn3|:`7esn` *1000..0X0123456789ABCDEF]->(:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]}) Ends With Any(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn`[0..][999..]) Ends With {``:0xabc[..$1000][..`5esn`],``:$`1esn` Contains 1e1 Contains @usn6} Asc Where 1.e1 In 1000 In _usn3 Delete 0x0[``..],Any(usn2 In 7[12] Where $_usn3 Is Null) Is Not Null Is Not Null,[`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]|usn2 =~7] Contains Any(`3esn` In 9e1 Contains $999 Where _usn4[0]) Union Unwind 01[07..][1.e1..] As _usn3 Match `4esn`=((`3esn` {usn2:$usn2[`4esn`..9e12]})<-[?{@usn5:_usn3 Ends With 7 Ends With $`1esn`}]->(_usn3 :_usn4)<-[_usn4?:`3esn`]-(:_usn3{_usn4:.e1[7..][9e0..]})) Merge `2esn`=(:`1esn`:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null})<-[`4esn`:usn2]->(`3esn` :_usn4) On Create Set #usn7+=@usn6[123.654..][0x0..],`3esn`+=00 In @usn6 In 0,@usn6 =Filter(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]) Is Not Null Is Not Null On Create Set #usn7+=`6esn`[$`8esn`][9e1]"),
    octest:ct_string("Unwind True Ends With $_usn3 Ends With 12 As #usn7 Return Distinct 0X0123456789ABCDEF[0X7..$`2esn`][$`5esn`..$usn2] As #usn8,(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})<-[?:`7esn`|:`2esn`]->(#usn8 :usn1:`3esn`{`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[ *01234567..]->(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12}) Contains [7[12],00[$`1esn`..][@usn6..],`5esn` Contains #usn7 Contains 9e12] Contains {_usn3:$@usn6[00],`2esn`:0.12 Is Null Is Null},$#usn7 =~`2esn` As `4esn` Limit Filter(`6esn` In $`6esn`[``..][Count(*)..]) Ends With None(`5esn` In 0X7 In $#usn7 Where 12.0 Is Null Is Null) Union All Merge ``=(@usn5 :`6esn`:_usn3{`7esn`:`8esn`[..$#usn8],`3esn`:12.e12[0..0.12][123.654..9e12]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) Union Return _usn4 Contains $_usn3 Contains .e1,$`4esn`['s_str'..] As `` Limit None(#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[`8esn`])[Single(`6esn` In $`6esn`[``..][Count(*)..] Where 07 Is Not Null Is Not Null)] Delete (`2esn` $`6esn`)<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(usn2 {usn1:.e12 Ends With 0Xa Ends With 0xabc}) Ends With Extract(@usn6 In False Contains 0 Contains $`6esn` Where .e1[usn2..$_usn3][.0..$#usn7]) Ends With Single(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]) Remove Filter(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $#usn7 Starts With 01234567 Starts With $0).usn2!"),
    octest:ct_string("Unwind Count ( * ) In 123456789 In $@usn5 As usn1 Unwind $1000[$@usn6][$_usn4] As `6esn` With  9e12[..`3esn`][..0X0123456789ABCDEF] As `5esn`,`3esn`(#usn8 =~0.e0,1000[0e0][1e1])[[_usn3[0x0],1e1 In 0.0 In 0X0123456789ABCDEF]] As usn1 Order By .e1[..$`3esn`][..01] Ascending,'s_str' Is Not Null Descending Where $#usn7[..$`4esn`][..01]"),
    octest:ct_string("Remove Extract(@usn6 In False Contains 0 Contains $`6esn` Where 12.e12 =~.0 =~usn1|True Contains 's_str' Contains $usn1)._usn4?,All(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 12[$`5esn`..][False..]).`4esn` Union All Optional Match (_usn3 :`4esn`:`6esn`{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3})<-[`2esn`? *01..123456789]-(`2esn` :@usn6)<-[?{`6esn`:$0[0Xa..$123456789],``:.e1[..\"d_str\"][..$123456789]}]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`}) Where $`7esn`[.e1][12.0]"),
    octest:ct_string("Optional Match ``=(((#usn7 :#usn8:`1esn`{``:.0[$``..0X7]})<-[? *0xabc]-(:@usn6{`6esn`:01 Ends With 0Xa Ends With 0X7})<-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->(usn2 :`5esn`))),_usn4=(((_usn4 :_usn4{_usn3:$`3esn`[.e1][_usn4]})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)<-[usn1:`7esn`|:`2esn`{`6esn`:Count(*) In #usn8 In \"d_str\",`1esn`:$`1esn` Ends With 0X0123456789ABCDEF}]-(`6esn` :`1esn`:_usn4))) Create @usn6=((({`2esn`:9e12[$`5esn`..$123456789],`8esn`:$usn2 =~9e1})<-[_usn3:`3esn`{`5esn`:_usn4[0]}]->(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]-(`8esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07}))),@usn5=()-[:@usn6|:`7esn`{#usn7:.0[.e12..],usn2:usn2 =~usn1 =~Count ( * )}]-(:`4esn`:`6esn`{usn1:0 =~1e1,`7esn`:$#usn8[12.e12..`8esn`][12.0..0.0]})-[_usn3:`5esn`|:usn2 *999..{`3esn`:`5esn` Contains $`5esn` Contains 0X7}]-(`8esn` {`1esn`:$`4esn` Is Null Is Null}) Return *,'s_str' Ends With `7esn` Ends With 010 Order By #usn7[``] Desc,`7esn` Starts With @usn5 Ascending Skip @usn6 =~999 =~@usn5"),
    octest:ct_string("Optional Match ((`1esn` {usn1:12e12 In $`5esn`})<-[`8esn`?:#usn7|@usn5{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3}]-(:usn1:`3esn`{@usn6:.0 Ends With Count ( * )})) Unwind 's_str' Is Not Null As `4esn` Return 01[$`7esn`..$@usn6] As `2esn`,(#usn7 {_usn4:1.e1[`8esn`]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) =~Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12) =~{usn2:#usn8[`8esn`..]} Order By `4esn` Contains 9e0 Desc,$12 =~0X7 =~0x0 Ascending,Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 1.e1 Ends With $_usn4 Ends With #usn7|$7 Starts With 12.e12 Starts With $@usn6) Starts With (:``:usn2)<-[`2esn`:`8esn`{`7esn`:$`4esn` Is Null Is Null}]-(:@usn5{`1esn`:999 Is Not Null Is Not Null,``:.e1[7..][9e0..]}) Starts With [01234567[Null..$_usn3],0[1e1][$usn1],False[..$`5esn`][..1e1]] Descending Limit None(#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[..$`8esn`][..Null]) Is Null Union Unwind $`4esn`[..$`8esn`][..Null] As #usn8 Union All Optional Match ((`1esn` {usn1:12e12 In $`5esn`})<-[`8esn`?:#usn7|@usn5{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3}]-(:usn1:`3esn`{@usn6:.0 Ends With Count ( * )})),#usn8=({`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}) Delete `2esn`(Distinct 12.e12 =~.0 =~usn1,00 Ends With $`1esn` Ends With `7esn`)[[_usn4 In 12e12 In 123456789 Where 0x0 Starts With $`6esn`|`2esn` In 7]] With Distinct *,$@usn6 Ends With 12.e12 Ends With @usn5 As `3esn` Order By .e0 Starts With $@usn6 Starts With $7 Descending Limit All(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where False[$usn1][0x0]) In [#usn7 In 9e1[$`1esn`..] Where @usn5 Is Null|9e12[9e1]] In [12.0 Is Null,$_usn4[..$_usn4][..`7esn`]]"),
    octest:ct_string("Optional Match (`7esn` :usn2{`3esn`:12.0 In 123.654 In _usn4}),`7esn`=(((`` :`5esn`)-[ *0..01{@usn6:$0[123.654..0.e0]}]->(usn1 :`1esn`:_usn4{_usn3:@usn6[999..$_usn3][0.12..$@usn5],`1esn`:9e12[..1e1][..'s_str']})<-[`8esn`{`8esn`:usn1 Contains 010,_usn4:`5esn` Contains $`5esn` Contains 0X7}]-({#usn8:0xabc In 010 In #usn7}))) With Distinct Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where 12.e12 Starts With \"d_str\" Starts With 9e1|$@usn5 In $`6esn` In 12e12) Ends With (:`7esn`{#usn7:0 =~1.e1 =~$#usn7})<-[`1esn`:`8esn` *7..]->(`` {#usn8:.e12 Is Null Is Null,@usn6:`1esn` Is Not Null Is Not Null}) As @usn5,.e0 Is Not Null Is Not Null As `7esn`,Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|0 Ends With 12.e12 Ends With usn2)[..123.654][..Any(#usn7 In $999 In 1e1 Where `4esn`[$_usn3..$`7esn`])] As `3esn` Limit _usn4 In #usn7 Union All Detach Delete usn1 Ends With 9e0 Ends With 9e0,999 Is Null Is Null,[_usn4 In 12e12 In 123456789 Where True Contains 's_str' Contains $usn1|999 Contains $1000] Starts With Single(`5esn` In `7esn`[$usn2..][$123456789..] Where $`5esn` =~$0 =~``) Merge ``=(((_usn3 {`6esn`:@usn5[$`6esn`..][$999..],`8esn`:$@usn5[..0xabc][..$`3esn`]})<-[`2esn`? *01234567..]->(:`2esn`)-[`2esn`? *..07{`2esn`:`3esn`[0x0..]}]->({`7esn`:999 In 0e0}))) Merge `1esn`=((`2esn` :`1esn`:_usn4)-[?:``]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})) On Create Set #usn7+=.e0[..9e12][..07],`4esn`(True[$_usn3..],$999[``]).usn2 =123456789 Is Null Is Null,@usn5 =01[07..][1.e1..] On Create Set `5esn`+={#usn7:12e12 In $`5esn`} Ends With {`6esn`:12 =~usn1,_usn3:`6esn`[$`8esn`][9e1]},usn2 =True Contains 0x0 Contains $_usn3 Union Merge `2esn`=(((`7esn` )<-[`4esn` *0Xa{@usn6:999 Starts With `2esn` Starts With .e1,`4esn`:$@usn5[..0xabc][..$`3esn`]}]->(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"})<-[usn2?:@usn5|_usn3*{_usn4:@usn5 Starts With $`3esn`,#usn7:$`5esn` Is Not Null}]-(#usn7 :``:usn2))) On Match Set #usn8 =[`5esn` Contains `1esn` Contains usn1,$@usn5 Ends With @usn5 Ends With 0xabc] Is Null Is Null,`8esn` =[$@usn6 =~#usn7 =~True,$`1esn` Contains 1e1 Contains @usn6,9e1[..123456789]] Is Null On Create Set @usn6+=$#usn7 Ends With 's_str' Ends With 0X7,`6esn` ={`3esn`:12 Starts With #usn7 Starts With 0Xa} Is Null Is Null,usn2 =$@usn5 Ends With @usn5 Ends With 0xabc"),
    octest:ct_string("With Distinct `6esn`[..$`4esn`],0xabc Is Not Null Is Not Null,[`2esn` Is Null] Is Null Is Null As `4esn` Union Return *,`8esn` =~@usn6 =~$`2esn` As _usn3 Optional Match @usn5=(`7esn` :`3esn`{`2esn`:999[123.654..$usn2][Count ( * )..0x0]})-[`2esn`?:usn1|`4esn` *00..0Xa]-(`4esn` :`4esn`:`6esn`),usn2=(`3esn` {usn2:$usn2[`4esn`..9e12]}) Where 12 Starts With #usn7 Starts With 0Xa Return $7 Ends With Count ( * ),`6esn` =~Null As `4esn` Skip 1e1[_usn3] Limit [`2esn` Is Null] Is Null Is Null Union All Return Distinct $#usn7 In $@usn5 In $`1esn` As `4esn` Merge ((:`6esn`:_usn3)) On Match Set `` =Extract(@usn5 In 's_str'[0..] Where 12e12 Is Not Null) =~[`3esn` In 9e1 Contains $999 Where _usn3[`2esn`..0X7][0.e0..$`3esn`]]"),
    octest:ct_string("Unwind {`6esn`:0xabc[..$1000][..`5esn`],`4esn`:$@usn5 In 12e12 In 01}[#usn8(False Contains 0 Contains $`6esn`,'s_str' Starts With 1e1 Starts With $0)..(`5esn` )-[ *00..0Xa]->(usn1 :#usn7:`5esn`{`5esn`:$@usn5 In 12e12 In 01})-[usn1?:`2esn`|`4esn`{#usn7:$#usn7[..9e0][..123.654],usn2:.e0 Is Not Null Is Not Null}]-(`1esn` :usn1:`3esn`{_usn3:.0[.e12..]})][(:`3esn`{#usn7:$#usn7 In $@usn5 In $`1esn`})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(`4esn` :`6esn`:_usn3)..[#usn7 In True Contains 's_str' Contains $usn1 Where $@usn6 In @usn6 In 1e1|12.0[$1000..][#usn7..]]] As `4esn` Create (((`7esn` )<-[`4esn` *0Xa{@usn6:999 Starts With `2esn` Starts With .e1,`4esn`:$@usn5[..0xabc][..$`3esn`]}]->(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"})<-[usn2?:@usn5|_usn3*{_usn4:@usn5 Starts With $`3esn`,#usn7:$`5esn` Is Not Null}]-(#usn7 :``:usn2))),`5esn`=(({@usn5:``[9e12][$999]})-[usn2{``:$`1esn` =~999}]-(:#usn7:`5esn`{`2esn`:12.e12 Contains 9e1,`5esn`:.e1 Starts With 12.e12 Starts With `2esn`})<-[:@usn6|:`7esn`{usn2:0x0 Starts With $`6esn`,_usn4:$`4esn`[`8esn`]}]-(@usn6 {@usn6:0e0 =~7 =~12.0})) Create _usn3=(:#usn7:`5esn`{@usn5:999 Starts With `2esn` Starts With .e1,``:0xabc In Null})-[`6esn` *0Xa]-(usn1 :`1esn`:_usn4{_usn3:@usn6[999..$_usn3][0.12..$@usn5],`1esn`:9e12[..1e1][..'s_str']}) Union All Merge (`2esn` :`1esn`:_usn4)-[?*..]-({`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}) On Create Set @usn6+=$#usn7 Ends With 's_str' Ends With 0X7,`6esn` ={`3esn`:12 Starts With #usn7 Starts With 0Xa} Is Null Is Null,usn2 =$@usn5 Ends With @usn5 Ends With 0xabc Merge ((@usn6 {`7esn`:999 In 0e0})<-[? *1000..0X0123456789ABCDEF{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}]-(`6esn` {`2esn`:$`3esn` Ends With 01234567})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)) On Create Set [`5esn` In `7esn`[$usn2..][$123456789..] Where `7esn` Is Null|$_usn4 =~$`1esn` =~`2esn`].`6esn` =Any(#usn7 In True Contains 's_str' Contains $usn1 Where `6esn` Starts With `6esn`) =~Single(#usn7 In $999 In 1e1 Where _usn4 Contains `` Contains 1.e1),@usn6+='s_str',Extract(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0 Ends With 12.0 Ends With `5esn`)._usn4! =Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|123.654 Is Not Null) Ends With usn2(01 Is Null) Ends With [$@usn6 Ends With 123456789 Ends With 12.0,12.e12 =~.0 =~usn1] On Create Set `6esn` ={`3esn`:12 Starts With #usn7 Starts With 0Xa} Is Null Is Null,usn1+=`4esn`[$_usn3..$`7esn`] Unwind $`5esn`[`7esn`] As @usn5"),
    octest:ct_string("Optional Match usn1=((:@usn5{@usn5:$12[9e0..$999]})<-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(`1esn` :`6esn`:_usn3{#usn7:0x0[$0][7]})-[{`4esn`:.e1 In 123456789}]-(:`3esn`{``:$@usn5 Is Null Is Null,`8esn`:.e1[..\"d_str\"][..$123456789]})) Return @usn5(Distinct 12e12 In 123456789,12.0 =~@usn6 =~$`2esn`)[`8esn`(123456789 =~$999)][`2esn`($`2esn`[..$`3esn`][..12e12])],Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where 12.e12 Starts With \"d_str\" Starts With 9e1|$@usn5 In $`6esn` In 12e12) Ends With (:`7esn`{#usn7:0 =~1.e1 =~$#usn7})<-[`1esn`:`8esn` *7..]->(`` {#usn8:.e12 Is Null Is Null,@usn6:`1esn` Is Not Null Is Not Null}),`1esn`($`4esn`[`4esn`][Count(*)],`2esn` Starts With $`7esn`) =~Extract(@usn5 In 9e0 Ends With $#usn8 Where .e0 Starts With $@usn6 Starts With $7) =~{`3esn`:_usn3[`2esn`..0X7][0.e0..$`3esn`]} Union With Distinct Count(*)[$@usn5] As `6esn`,[#usn8 In `7esn` Where usn2[07..][.0..]|$usn1 Ends With _usn4 Ends With `2esn`] Contains (_usn3 {#usn7:1000[12e12][`5esn`]})-[`3esn`?:`3esn`]->(#usn8 :_usn3{_usn4:.e1[7..][9e0..]})-[? *..010{`2esn`:'s_str'[0..]}]->({`7esn`:1.e1 In 1000 In _usn3,`8esn`:010 Starts With $`` Starts With 0e0}) Contains Extract(`3esn` In `2esn`[..01][..True] Where usn1 In ``) As `2esn`,All(#usn7 In 9e1[$`1esn`..] Where 12 =~usn1)[Extract(#usn7 In $999 In 1e1)..][1.e1..] Order By ``[$`1esn`] Desc,123456789 Contains 0Xa Asc,[$`8esn` Is Not Null Is Not Null,0xabc In Null] =~Single(#usn7 In 9e0[$1000] Where .e0 Is Null) Descending Where 9e1[_usn3] Unwind Single(`5esn` In `7esn`[$usn2..][$123456789..] Where 12e12 Is Not Null) Is Not Null Is Not Null As #usn7"),
    octest:ct_string("Create ((`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12})<-[`8esn` *0xabc{#usn8:12.0 Starts With .12 Starts With `6esn`,@usn5:_usn3[`5esn`..][usn2..]}]->(#usn7 {`8esn`:`7esn` In 010 In usn1})-[?$7]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0})) Delete 0e0 Is Null Is Null,@usn6(0X7 In $#usn7,_usn4 Contains `` Contains 1.e1)[Extract(#usn7 In 9e0[$1000] Where $`1esn` Starts With Count(*)|9e0 Ends With $#usn8)..Any(#usn7 In 9e1[$`1esn`..] Where $`2esn` Ends With `6esn`)],`1esn`[0.12..][@usn6..] Union All Detach Delete $12[9e0..$999] With  $#usn7 =~`2esn` As `4esn` Order By (`5esn` :`4esn`:`6esn`)-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(#usn7 :``:usn2)[..Filter(#usn8 In `7esn`)] Desc Skip usn2 Is Null Is Null Limit @usn6 Is Not Null Is Not Null Where 's_str' Ends With `7esn` Ends With 010 Merge `8esn`=((_usn3 :_usn4))"),
    octest:ct_string("Return $7[999][usn1] As `6esn`,0 Ends With Count(*) Ends With False As `7esn` Order By Any(#usn7 In 9e0[$1000] Where .e0 Is Null) =~Extract(`3esn` In 9e1 Contains $999 Where `2esn` Starts With 12.e12 Starts With 12.0|$`3esn` In $usn2) =~{#usn8:0.0 =~9e0 =~$0,`5esn`:Count ( * ) Ends With $123456789} Descending Skip 010[...12] Limit $`1esn` In .e0 Remove {`4esn`:`7esn` Is Null}.`4esn`! Union Remove [12e12 =~1e1].`2esn`!"),
    octest:ct_string("Remove [$12[$usn1..][Count(*)..]].`8esn`?,{`2esn`:.e12 Starts With $12 Starts With .e12,usn2:0e0 =~7 =~12.0}.`3esn`? Merge ``=(:_usn3{`7esn`:$999 Ends With .e0})<-[`8esn`?:`2esn`|`4esn`{usn2:#usn8[`6esn`..][$``..]}]-(@usn6 {`6esn`:$`5esn` =~usn1,`5esn`:$`` Starts With $1000 Starts With @usn6})-[?{_usn3:010[`5esn`],_usn4:#usn8 =~.e0}]-(#usn8 :`3esn`{`5esn`:$@usn6 Ends With `1esn`}) On Match Set `7esn`+=$`5esn` Is Not Null,Any(@usn5 In 9e0 Ends With $#usn8 Where $`3esn`[..0X0123456789ABCDEF][..7])._usn3 =.e12[`2esn`..010],`8esn` =Single(`5esn` In `7esn`[$usn2..][$123456789..] Where 12e12 Is Not Null) Is Not Null Is Not Null Union All Match #usn7=(`1esn` :@usn6{`6esn`:00[False..0e0],`6esn`:$usn2 =~1.e1 =~usn1})<-[`7esn`:`2esn`|`4esn`{_usn4:.e1[7..][9e0..]}]-(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"})-[:_usn3|:`7esn`*{`1esn`:12[..$999][..$`2esn`],usn2:9e1}]->(:``:usn2{`5esn`:$12 Starts With $usn1}),((:#usn7:`5esn`{_usn4:$usn2 =~9e1})<-[@usn5?:usn2 *0..01]->(`8esn` :`2esn`{@usn5:$`4esn` Contains _usn3 Contains `8esn`,`7esn`:$`4esn`[`4esn`][Count(*)]})) Where 9e1[usn1..0x0][12.e12..12.0] Optional Match `6esn`=(((_usn4 :_usn4{`2esn`:`6esn` Starts With `6esn`,`8esn`:1000[0e0][1e1]})<-[`4esn`:`1esn`|`3esn` *12..]-(usn1 :`7esn`{`7esn`:9e12 Starts With 1e1,_usn3:$`7esn`[$_usn4][.e0]})-[``?:_usn4]-(_usn4 :_usn4))) Create `8esn`=(`4esn` :usn1:`3esn`) Union All Remove [0.e0[1000.._usn4][.e1..usn1],$`1esn` =~999,07[_usn3..][`6esn`..]].usn1!,usn2:`4esn`:`6esn`,Extract(usn2 In False[$usn1][0x0] Where $`7esn`|07 Is Null).#usn7! Return Distinct $0[010..] As `` Order By `5esn`(Distinct .e0[01234567..$`8esn`]) =~All(#usn7 In 9e0[$1000] Where 's_str'[0x0..1.e1]) =~[999 In #usn8 In $``,.e0 Is Null Is Null] Ascending Skip count(Distinct 0X0123456789ABCDEF Contains 12e12 Contains 12.e12)[..{usn2:.12[123.654..],`2esn`:`8esn`[$`4esn`..$#usn8]}][..(:#usn7:`5esn`{usn1:.e1[..$`3esn`][..01],`4esn`:$`5esn` In .12})<-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]-(:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null})] Remove `4esn`:`8esn`,[`1esn`].#usn8?,All(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where `1esn`[0.12..][@usn6..]).usn2!"),
    octest:ct_string("Return Distinct `` Is Not Null Is Not Null As `6esn`,`7esn`[$usn1..]['s_str'..] As usn1,$#usn8 Starts With .e12 Starts With 1.e1 Limit Single(usn2 In 7[12]) Ends With {_usn3:123.654[`4esn`..12]} Ends With Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where `1esn`[usn1][0xabc]) Remove Filter(@usn6 In False Contains 0 Contains $`6esn` Where $@usn5 In 12e12 In 01).`3esn`,`5esn`(Distinct).usn1! Unwind 0 Is Not Null As `6esn` Union Match `3esn`=(_usn3 {`8esn`:_usn3[0x0],#usn8:$usn1 Contains 0}),usn1=(({usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})-[:`6esn`|:#usn8{`4esn`:$`2esn`[..$`3esn`][..12e12],#usn8:123.654 Is Not Null}]-(_usn3 :`5esn`)-[`4esn`?:#usn8|:`3esn`{`3esn`:01 Is Null,`1esn`:123456789[12]}]-(:_usn4{#usn7:1000[..`2esn`][..$@usn6],`1esn`:12e12 Starts With $0 Starts With $`2esn`})) Where \"d_str\"[True..] Union All Optional Match `1esn`=((`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})-[?$7]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0}))"),
    octest:ct_string("Unwind 9e1[$1000][7] As `8esn` Create (((:_usn4{`8esn`:01234567[Null..$_usn3]})<-[`8esn`?:`5esn`|:usn2 *01..123456789{`7esn`:`6esn`,`4esn`:'s_str' Starts With 9e0 Starts With usn2}]->(`5esn` :`3esn`{``:`` Is Null,`8esn`:$@usn6[$0..9e12][.e12..Null]})<-[`7esn`:`4esn`|@usn5 *12..]->({`4esn`:.e1[..$`3esn`][..01]}))),_usn4=(:`3esn`{#usn7:$#usn7 In $@usn5 In $`1esn`})<-[?:usn1|`4esn` *1000..0X0123456789ABCDEF{`6esn`:.e0[999..1000][1e1..$`8esn`],`4esn`:00 Ends With `` Ends With 12.e12}]-(:#usn8:`1esn`{`6esn`:$`4esn`[`6esn`..$12],usn1:00 In @usn6 In 0}) Return $_usn3[_usn4..] Skip (:`6esn`:_usn3{@usn6:7 =~`4esn`,_usn3:`6esn`[$1000][`3esn`]})-[_usn4:_usn4 *0X7..{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]}]-(:`6esn`:_usn3{`4esn`:#usn7 Contains $0 Contains $usn2})[[$`6esn`[1.e1][$_usn3]]][usn2(0xabc In Null)] Union Unwind .12[..usn2][..12e12] As `5esn` Unwind {#usn8:.0 Is Null Is Null}[..(_usn3 :@usn6{usn2:0Xa =~False =~@usn5,`3esn`:0x0[Count(*)..@usn6][Count(*)..0Xa]})<-[`7esn`?:`2esn`|`4esn` *..010{usn1:0e0[``..$1000][$7..12.e12],`5esn`:0x0 Starts With $`6esn`}]->(@usn5 {_usn4:`5esn` Contains #usn7 Contains 9e12})][..{`5esn`:@usn6[9e12],`5esn`:@usn6[999..$_usn3][0.12..$@usn5]}] As `2esn`"),
    octest:ct_string("With  9e0[..123456789][..$`3esn`] Order By 01 Contains usn2 Contains 0X0123456789ABCDEF Desc Limit 00 =~Count ( * ) Union All Optional Match ((`4esn` :@usn6)-[:`` *0..01]-({`7esn`:0xabc In Null,_usn4:.e12[0Xa..]})) Where 0Xa Ends With $`3esn` Ends With $1000 Union Create _usn3=(((:usn2{`6esn`:`4esn` Starts With 0e0,`8esn`:usn2[12e12..]['s_str'..]})<-[:`2esn`|`4esn` *12..]-(_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]}))) Remove {#usn8:`1esn`[usn1][0xabc],_usn3:$`6esn`[1.e1][$_usn3]}.`3esn`,{usn1:@usn6[9e12]}.`4esn`! Return 12[$`5esn`..][False..] As `4esn`,0e0 Ends With 07 Ends With $`8esn` As `1esn` Limit All(@usn5 In 's_str'[0..] Where 07 Ends With 9e12 Ends With `2esn`)[Filter(`3esn` In 9e1 Contains $999 Where .e0 Is Not Null Is Not Null)..][Filter(@usn5 In 's_str'[0..] Where #usn7[0.12..])..]"),
    octest:ct_string("Create `1esn`=((`2esn` :`1esn`:_usn4)-[?:``]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})),usn2=(#usn7 {_usn4:1.e1[`8esn`]})<-[usn2{`2esn`:$12 Starts With $usn1}]->(:`5esn`{`8esn`:$`7esn`[0.12],_usn4:`1esn`})-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->(@usn6 :`4esn`:`6esn`{``:999 Contains 0 Contains $`5esn`,`6esn`:_usn3[12.e12..][`5esn`..]})"),
    octest:ct_string("Unwind .e12[`2esn`..010] As `1esn`"),
    octest:ct_string("Unwind Extract(@usn5 In 9e0 Ends With $#usn8 Where $`8esn`[123456789..][$@usn5..]) =~None(#usn7 In True Contains 's_str' Contains $usn1 Where 's_str' Starts With 9e0 Starts With usn2) As `2esn` Union Return Distinct *,None(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $`5esn` In _usn3 In 0.0) Is Not Null Is Not Null As @usn5 Order By 0.0[$usn2..] Asc,All(@usn5 In 9e0 Ends With $#usn8 Where _usn4[`7esn`]) In {`6esn`:9e1 Is Not Null Is Not Null,`8esn`:_usn3 In $`8esn` In @usn6} In (:`6esn`:_usn3$usn2)-[:`3esn` *0Xa{`2esn`:`7esn`[$usn2..][$123456789..],@usn5:9e1 Starts With Count ( * )}]->(usn1 {usn1:$#usn7 Starts With 01234567 Starts With $0})-[?:#usn8|:`3esn` *0x0..]-(_usn3 :`4esn`:`6esn`{usn2:`4esn` Starts With 0e0,`3esn`:7[12]}) Asc,12e12 Starts With $0 Starts With $`2esn` Ascending Unwind (`1esn` :`3esn`{#usn7:12[..0e0][...e1]})<-[`6esn`:``]->({@usn6:$1000 Is Not Null})[(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})<-[?:`7esn`|:`2esn`]->(#usn8 :usn1:`3esn`{`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[ *01234567..]->(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})..Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|123.654 Is Not Null)][{`2esn`:$999 Ends With .e0}..[@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``|.e0 =~Null]] As `8esn`"),
    octest:ct_string("Merge @usn5=(((:`7esn`{#usn7:0 =~1.e1 =~$#usn7})-[?:`2esn`|`4esn`{@usn5:0.e0}]-(`1esn` $`4esn`)-[_usn3?{``:$@usn5 Contains 's_str' Contains \"d_str\",_usn3:$#usn8[12.e12..`8esn`][12.0..0.0]}]-({`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}))) On Match Set #usn7:_usn3,`` =None(#usn7 In $999 In 1e1 Where 123456789 =~@usn6) =~Single(`3esn` In 9e1 Contains $999 Where .12 In `8esn` In $#usn8) =~(`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[`5esn`?{_usn4:$usn2 =~9e1}]->(`8esn` :#usn8:`1esn`{usn2:12.e12 Ends With $``,`2esn`:1e1 Contains 's_str' Contains `3esn`})-[`` *1000..0X0123456789ABCDEF]-(:usn1:`3esn`{_usn3:$`6esn`[1.e1][$_usn3]}) Return Distinct *,$#usn7[..0Xa] As #usn8,0X7[`2esn`..] As `5esn` Order By $7[999][usn1] Asc Create usn1=((`` )<-[usn2?:`6esn`|:#usn8 *999..]-(`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})<-[?:usn2{usn2:@usn5 Is Not Null}]-(`7esn` {#usn8:False Starts With 0X7 Starts With 01234567})),((`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'}))"),
    octest:ct_string("Create (@usn6 {`4esn`:9e1 Contains 12}) Return *,0X7[`2esn`..] As `6esn`,$`1esn` Contains 1e1 Contains @usn6 As `3esn` Order By $_usn3[_usn4..] Descending,9e1 Contains $999 Ascending Unwind 07[999] As @usn6 Union Remove All(@usn5 In 's_str'[0..] Where 12e12 Is Not Null)._usn3!,`3esn`(Distinct $@usn5 In $`6esn` In 12e12).`8esn`! Remove `5esn`($`4esn` In 1.e1 In #usn7,0Xa[Count(*)..]).`5esn`,(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"})<-[:``{``:.0[$``..0X7]}]-(#usn8 :`8esn`).`3esn`,None(#usn8 In `7esn` Where 9e12[..1e1][..'s_str'])._usn4?"),
    octest:ct_string("With  *,``(Distinct 00 Ends With `` Ends With 12.e12,`6esn`[..Count ( * )][..$_usn4]) In (usn1 :#usn8:`1esn`{`3esn`:`2esn` In 9e0 In 7})<-[`7esn`?:#usn8|:`3esn`{`6esn`:'s_str'[0..]}]->(#usn8 :`8esn`$#usn8) In Filter(@usn6 In 010[`5esn`] Where 1.e1[$usn1]) As `3esn` Order By $usn2[`5esn`..][01234567..] Asc,$`7esn`[.e1][12.0] Asc,$`5esn` =~usn1 Ascending Skip @usn6(0X7 In $#usn7,_usn4 Contains `` Contains 1.e1)[Extract(#usn7 In 9e0[$1000] Where $`1esn` Starts With Count(*)|9e0 Ends With $#usn8)..Any(#usn7 In 9e1[$`1esn`..] Where $`2esn` Ends With `6esn`)] Where 00[$usn1..] With Distinct {`8esn`:9e12 =~@usn6,`1esn`:999 Contains 0 Contains $`5esn`}[`4esn`()],(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12})<-[?:`7esn`|:`2esn`]->(#usn8 :usn1:`3esn`{`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[ *01234567..]->(#usn7 :usn2{usn1:`4esn` Ends With 12 Ends With .12}) Contains [7[12],00[$`1esn`..][@usn6..],`5esn` Contains #usn7 Contains 9e12] Contains {_usn3:$@usn6[00],`2esn`:0.12 Is Null Is Null} Order By [`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]|usn2 =~7] Contains Any(`3esn` In 9e1 Contains $999 Where _usn4[0]) Desc Limit $7 Starts With $`4esn` Merge `6esn`=(((:`6esn`:_usn3)<-[? *0X7..{`2esn`:$@usn5 In $`6esn` In 12e12}]-(`3esn` :_usn4{`3esn`:12[..0e0][...e1],`4esn`:.0 Is Null Is Null})-[usn2 *..07]->(`` {_usn3:`5esn` Contains `7esn`}))) On Match Set (:_usn3)<-[`2esn`? *01..123456789]-(@usn6 :``:usn2{usn1:0x0[0X7],@usn5:`4esn`[.12][$@usn6]}).#usn8! =Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $12[9e0..$999]|.12 Starts With _usn3 Starts With $``),{`1esn`:`8esn` Is Not Null Is Not Null}.`4esn`? =$@usn5 Starts With `5esn` Starts With 01234567,{`7esn`:0X7['s_str'..][01..],`8esn`:0.e0[0X0123456789ABCDEF..]}.``? =12 In $usn1 In 7"),
    octest:ct_string("Create (:usn2)<-[? *01..123456789{`8esn`:usn2 =~7,@usn5:`6esn` Ends With _usn4 Ends With False}]->(`` {``:$@usn6 Ends With 12.e12 Ends With @usn5,`2esn`:$`3esn` Ends With 01234567})<-[`4esn`:usn2]->(`3esn` :_usn4),(`8esn` :`2esn`{@usn5:$`4esn` Contains _usn3 Contains `8esn`,`7esn`:$`4esn`[`4esn`][Count(*)]}) With Distinct *,`3esn`(`7esn`,0x0 Contains $`6esn` Contains `4esn`) Is Null Is Null Limit usn2[..$usn1][..$#usn8] Union All Delete $0 =~9e1 =~$`2esn` Remove [$`4esn`[0..][999..],$usn2 Is Not Null Is Not Null,$`5esn` In _usn3 In 0.0].`2esn`! Create `3esn`=((:#usn8:`1esn`$`7esn`)<-[`1esn` *999..{`1esn`:1e1 Contains 's_str' Contains `3esn`}]-(usn1 {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(#usn7 :``:usn2)),usn2=(`3esn` {usn2:$usn2[`4esn`..9e12]}) Union All Detach Delete 9e1[$1000][7],.e0[999..1000][1e1..$`8esn`],(:`2esn`)-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})-[@usn6? *0X0123456789ABCDEF..{``:0xabc[..$1000][..`5esn`],``:$`1esn` Contains 1e1 Contains @usn6}]-(`5esn` :@usn5) Is Null Is Null Return Distinct *,'s_str' Order By `5esn`(Distinct .e0[01234567..$`8esn`]) =~All(#usn7 In 9e0[$1000] Where 's_str'[0x0..1.e1]) =~[999 In #usn8 In $``,.e0 Is Null Is Null] Ascending Skip 123456789 Is Null Is Null Limit `4esn`[123456789] Merge ({`7esn`:`4esn` Is Not Null Is Not Null,`4esn`:`4esn` Ends With 12 Ends With .12})<-[`5esn`?:`7esn`|:`2esn` *0x0..]-(`4esn` :#usn7:`5esn`{@usn5:$`` Contains $`2esn` Contains $usn2}) On Match Set _usn3 =Single(usn2 In 7[12] Where `7esn` Is Null)[..Single(`6esn` In $`6esn`[``..][Count(*)..] Where $7 In $usn1 In 999)][..Any(#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4)]"),
    octest:ct_string("With Distinct 999[12e12..$_usn4] Order By Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where $usn2 =~1.e1 =~usn1|123.654[$0..0X7][Null..#usn8])[(`1esn` {_usn4:`8esn` Is Null})<-[_usn4? *12..{`1esn`:$`6esn` Starts With .e12 Starts With $`1esn`,`3esn`:`8esn`[0.e0..]}]-(:`5esn`{`1esn`:0.e0})..][All(#usn7 In True Contains 's_str' Contains $usn1 Where usn2 Contains $0 Contains .0)..] Descending,0X7[.0] Asc,$`3esn`[..0X0123456789ABCDEF][..7] Descending Limit #usn7 =~9e12 Where _usn4 Contains `` Contains 1.e1 Union All Merge `7esn`=(((#usn7 :usn2{`2esn`:#usn8[`8esn`..],`2esn`:@usn6[9e12]})<-[@usn5?:usn2 *00..0Xa{usn2:$usn2[`4esn`..9e12]}]->(:`3esn`{_usn3:1e1 Is Not Null Is Not Null,`2esn`:$usn1 Starts With usn1 Starts With True})<-[ *..07{`5esn`:999 In 0e0}]->(:@usn6$usn1))) Return Distinct *,`2esn`[..$_usn4][...12] As `6esn`,$999 Is Null Is Null Order By 12.0 Ends With `2esn` Descending,.0 Ends With 999 Ends With $`5esn` Ascending Match _usn4=((`1esn` :#usn7:`5esn`{`1esn`:0e0 =~0Xa =~$999})),#usn8=(:`7esn`{_usn3:@usn5[0.0..0X7]}) Where 010 Is Null Is Null Union Unwind 0.0 Contains `3esn` Contains @usn5 As @usn5"),
    octest:ct_string("Optional Match ``=(((_usn3 :`6esn`:_usn3)<-[:`1esn`|`3esn`{`2esn`:$`3esn` Ends With 01234567}]-(`3esn` :`1esn`:_usn4{#usn8:1e1 Is Not Null Is Not Null})-[`6esn`?:`6esn`|:#usn8]-(`1esn` {_usn4:`8esn` Is Null}))) Where 0.e0[1000.._usn4][.e1..usn1] Detach Delete _usn3 Ends With 7 Ends With $`1esn`,(`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[`5esn`?{_usn4:$usn2 =~9e1}]->(`8esn` :#usn8:`1esn`{usn2:12.e12 Ends With $``,`2esn`:1e1 Contains 's_str' Contains `3esn`})-[`` *1000..0X0123456789ABCDEF]-(:usn1:`3esn`{_usn3:$`6esn`[1.e1][$_usn3]})[..Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where 999 In #usn8 In $``|Count ( * )[$`5esn`..][$7..])][..$usn2] Union All Unwind 12.e12 Starts With 1000 As @usn5"),
    octest:ct_string("Create `5esn`=((`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})<-[ *..07{_usn3:0e0 =~7 =~12.0,usn2:123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]}]->(`4esn` :@usn5)),(:`1esn`:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null})<-[`4esn`:usn2]->(`3esn` :_usn4) Detach Delete $@usn6[_usn3..][$999..],$usn2 =~0.e0 =~@usn6 Match (((`7esn` {usn2:0X7[..$`8esn`],`1esn`:123.654 Is Not Null})<-[ *12..{`8esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}]-(`5esn` :`1esn`:_usn4)-[:`6esn`|:#usn8{``:`1esn` Starts With 0xabc Starts With $usn2}]-(_usn3 :`2esn`{@usn5:`4esn` Is Not Null Is Not Null})))"),
    octest:ct_string("Merge ((usn1 {_usn4:#usn8 Is Not Null})<-[:`8esn` *0X7..]->(:`8esn`{@usn5:usn2 Ends With .e1 Ends With $`5esn`})<-[_usn3:usn1|`4esn`{`6esn`:12e12 =~1e1}]->({`8esn`:usn2 Starts With .0,@usn5:Count(*) In 12 In `6esn`})) On Match Set @usn5 =$`2esn` Is Null,usn2+=`4esn` Starts With 0e0,``+={_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}[[$`2esn` =~9e12,`6esn` Is Null Is Null,usn2 Is Not Null]..[$`1esn` Starts With $`4esn` Starts With $_usn3]] Optional Match _usn3=(`` {`7esn`:.e0 Is Not Null Is Not Null,@usn6:.e1[..$`3esn`][..01]})-[usn1?:`2esn`|`4esn`{#usn7:$#usn7[..9e0][..123.654],usn2:.e0 Is Not Null Is Not Null}]-(`8esn` :@usn6)<-[ *01234567..]->(:``:usn2{`5esn`:$12 Starts With $usn1}) Where 0.e0 Starts With .0 Starts With 123456789 Delete 999[..`1esn`][..07],0x0[@usn5][$#usn8]"),
    octest:ct_string("With  $@usn6[..12] As #usn8,Single(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`)[{`5esn`:`6esn`[$`8esn`][9e1]}] As `7esn` Order By $@usn5 In 12e12 In 01 Ascending Limit Any(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null)[..`4esn`][..(usn2 :_usn3)-[`6esn`?:`6esn`|:#usn8]-(`1esn` {_usn4:`8esn` Is Null})<-[`7esn`?:#usn8|:`3esn`]-(_usn4 :`3esn`)] Where _usn3 Starts With 12e12 Starts With `5esn` Union All Merge _usn4=(((:`4esn`:`6esn`{usn1:0 =~1e1,`7esn`:$#usn8[12.e12..`8esn`][12.0..0.0]})<-[`6esn`? *..010{usn2:Null[..0]}]-(_usn3 {`8esn`:_usn3[0x0],#usn8:$usn1 Contains 0})<-[:_usn4]->(:usn2{@usn5:07 Ends With 9e12 Ends With `2esn`}))) On Create Set [12 =~usn1,7 =~`4esn`,``[9e12][$999]].`1esn` =Extract(#usn7 In $999 In 1e1 Where `5esn`[..True][..0.e0]|$`5esn` =~$0 =~``) In (:`7esn`{#usn8:0Xa Ends With $`3esn` Ends With $1000})-[:`5esn`|:usn2 *01234567..]-(:`2esn`{_usn3:@usn5[0.0..0X7]}) In Extract(#usn7 In True Contains 's_str' Contains $usn1 Where 9e1[$#usn8][$1000]|999 Contains 0 Contains $`5esn`)"),
    octest:ct_string("Detach Delete $usn2[`2esn`..],`8esn`(Distinct #usn8 Is Not Null Is Not Null,`2esn` In 9e0 In 7) Starts With None(usn2 In 7[12] Where 123456789 =~12 =~'s_str') Match #usn7=(#usn8 :_usn3)-[`7esn`{#usn8:01 Is Null,`6esn`:#usn7[0]}]-({`2esn`:Count(*) Ends With usn1,`6esn`:1000 Ends With `7esn`})<-[:_usn3|:`7esn` *00..0Xa]-(#usn7 :`4esn`:`6esn`$usn2),(((:_usn4{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]})<-[`2esn`? *01..123456789]-(`2esn` :@usn6))) Where 999[123.654..$usn2][Count ( * )..0x0] Merge (((@usn6 :`2esn`{_usn3:$``[7],`7esn`:_usn3 Ends With 7 Ends With $`1esn`})<-[`3esn` *7..]->(`1esn` :@usn6{`6esn`:00[False..0e0],`6esn`:$usn2 =~1.e1 =~usn1})<-[? *01..123456789]-(usn1 :_usn4{`4esn`:`7esn` Is Null}))) On Match Set usn1(True Contains 's_str' Contains $usn1,.e0 Is Not Null Is Not Null).@usn5! ={usn2:_usn3[0x0]} In Extract(#usn7 In 9e0[$1000] Where $_usn3 Is Null|010 Starts With 0 Starts With 0.0) In {`7esn`:False[$`4esn`..]}"),
    octest:ct_string("Create #usn7=(`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12}),({`1esn`:1.e1[`8esn`]})<-[#usn8?:`8esn`{`1esn`:999 In #usn8 In $``,`8esn`:False[$`4esn`..]}]->({usn1:$123456789 In 0.12}) Return Distinct `2esn` Starts With 12.e12 Starts With 12.0 As #usn8,$_usn3 Is Not Null Is Not Null Skip `1esn`[$@usn6][07] Limit $1000 Is Not Null Union All Unwind 0 =~1e1 As usn2 Match #usn8=(`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})-[`3esn`]->(:@usn5{#usn7:12e12 In $`5esn`}),(:#usn8:`1esn`{usn2:$`7esn`[.e1][12.0],``:$`1esn` Contains 1e1 Contains @usn6}) Where $_usn4 Starts With $1000 Starts With 12 Detach Delete (`3esn` :usn2)-[? *0xabc]-(`6esn` {`3esn`:.0[$``..0X7],`3esn`:$usn2 Is Not Null Is Not Null}) Is Null,(#usn7 {_usn4:1.e1[`8esn`]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) Contains Extract(#usn7 In 9e0[$1000] Where _usn4 Is Not Null Is Not Null|usn2 Ends With .e1 Ends With $`5esn`),Any(#usn7 In 9e0[$1000] Where .e0 Is Null) =~Extract(`3esn` In 9e1 Contains $999 Where `2esn` Starts With 12.e12 Starts With 12.0|$`3esn` In $usn2) =~{#usn8:0.0 =~9e0 =~$0,`5esn`:Count ( * ) Ends With $123456789} Union Optional Match ((:`6esn`:_usn3{usn1:`3esn`[0x0..]})<-[? *1000..0X0123456789ABCDEF{usn2:$7 In 0.e0 In 999,usn1:'s_str' Starts With 9e0 Starts With usn2}]->({`4esn`:.e1[..$`3esn`][..01]})<-[usn2?{``:$`1esn`[``][07]}]->(#usn7 {`7esn`:`8esn` Contains Count(*) Contains $#usn7})),(@usn6 {`5esn`:.e12 Starts With $#usn8 Starts With False})<-[`6esn`:``]->({@usn6:$1000 Is Not Null}) Create (((:_usn4{`8esn`:01234567[Null..$_usn3]})<-[`8esn`?:`5esn`|:usn2 *01..123456789{`7esn`:`6esn`,`4esn`:'s_str' Starts With 9e0 Starts With usn2}]->(`5esn` :`3esn`{``:`` Is Null,`8esn`:$@usn6[$0..9e12][.e12..Null]})<-[`7esn`:`4esn`|@usn5 *12..]->({`4esn`:.e1[..$`3esn`][..01]}))),_usn4=(:`3esn`{#usn7:$#usn7 In $@usn5 In $`1esn`})<-[?:usn1|`4esn` *1000..0X0123456789ABCDEF{`6esn`:.e0[999..1000][1e1..$`8esn`],`4esn`:00 Ends With `` Ends With 12.e12}]-(:#usn8:`1esn`{`6esn`:$`4esn`[`6esn`..$12],usn1:00 In @usn6 In 0})"),
    octest:ct_string("Create ``=((@usn5 {`5esn`:@usn6[9e12],`5esn`:@usn6[999..$_usn3][0.12..$@usn5]})<-[`2esn`:`8esn`{`7esn`:$`4esn` Is Null Is Null}]->(usn1 :@usn6)-[#usn7:#usn8|:`3esn`{`6esn`:0.e0[$`4esn`..`2esn`],_usn3:7[12]}]-(`8esn` :`8esn`)),(:_usn3{usn1:#usn7[..07]})<-[`3esn` *7..]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]}) Return 010 Starts With $`` Starts With 0e0 As @usn5 Unwind True Starts With Null As usn1 Union With Distinct *,.e0 Is Null As `2esn`,[#usn7 In 9e0[$1000] Where .e1 In 123456789|.e12[..999][..@usn5]] In `5esn`(`1esn` Starts With 0X7 Starts With \"d_str\",9e1) In @usn5(Distinct `5esn` Contains $`5esn` Contains 0X7,True[..#usn8]) Order By _usn4(Distinct $@usn6[$`8esn`..][123456789..],$`` Starts With $1000 Starts With @usn6)[[#usn7 In True Contains 's_str' Contains $usn1 Where $usn2 =~1.e1 =~usn1]..][All(#usn7 In True Contains 's_str' Contains $usn1 Where $`2esn` Contains Count(*))..] Descending,[.e12 Is Null Is Null] Starts With `5esn`(Distinct 00[$`1esn`..][@usn6..],@usn6[9e12]) Starts With None(`8esn` In 123456789 =~@usn6 Where `7esn`[$usn2..][$123456789..]) Descending With  {``:07[$`2esn`..9e12][$`4esn`..9e12],`3esn`:$`6esn` Starts With .e12 Starts With $`1esn`}[..Single(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null)][..Any(#usn7 In $999 In 1e1 Where 07 In `6esn`)] As usn1,`8esn` Is Not Null Is Not Null As `4esn` Skip (`2esn` $`6esn`)<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(usn2 {usn1:.e12 Ends With 0Xa Ends With 0xabc}) Ends With Extract(@usn6 In False Contains 0 Contains $`6esn` Where .e1[usn2..$_usn3][.0..$#usn7]) Ends With Single(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]) Limit Any(@usn6 In False Contains 0 Contains $`6esn` Where $usn2[`4esn`..9e12]) =~[9e12 =~@usn6,01 Ends With 0Xa Ends With 0X7,$@usn6[$0..9e12][.e12..Null]] Delete _usn4 Is Null Is Null,010[`5esn`],#usn8 Starts With $1000 Starts With $@usn5 Union Match (`8esn` :#usn8:`1esn`{usn1:0x0 Starts With $`6esn`}) Create ((`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`})),@usn5=(({@usn5:$`5esn` Is Not Null Is Not Null})-[`1esn`?:@usn6|:`7esn` *..010]-(:`6esn`:_usn3{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})<-[?:`` *0..01]->({`2esn`:9e12[$`5esn`..$123456789],`8esn`:$usn2 =~9e1})) Return Distinct .e0 Ends With $123456789 Ends With 0xabc Limit 's_str' Starts With 1e1 Starts With $0"),
    octest:ct_string("Unwind #usn8 Is Null Is Null As `8esn`"),
    octest:ct_string("Detach Delete @usn5[0..],$#usn7 =~`2esn` Remove Filter(#usn8 In `7esn` Where 07 Ends With 9e12 Ends With `2esn`).@usn6?,`5esn`:`1esn`:_usn4 Match #usn7=(`1esn` :@usn6{`6esn`:00[False..0e0],`6esn`:$usn2 =~1.e1 =~usn1})<-[`7esn`:`2esn`|`4esn`{_usn4:.e1[7..][9e0..]}]-(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"})-[:_usn3|:`7esn`*{`1esn`:12[..$999][..$`2esn`],usn2:9e1}]->(:``:usn2{`5esn`:$12 Starts With $usn1}),((:#usn7:`5esn`{_usn4:$usn2 =~9e1})<-[@usn5?:usn2 *0..01]->(`8esn` :`2esn`{@usn5:$`4esn` Contains _usn3 Contains `8esn`,`7esn`:$`4esn`[`4esn`][Count(*)]})) Where 9e1[usn1..0x0][12.e12..12.0] Union All Merge @usn5=(({`8esn`:`5esn` Contains #usn7 Contains 9e12})<-[usn1:_usn4]-(`` {_usn3:`5esn` Contains `7esn`})<-[`3esn`?:`2esn`|`4esn` *123456789..{_usn4:1.e1[`8esn`]}]->(`1esn` :`3esn`{#usn8:$usn2[0.e0],`8esn`:$`4esn`['s_str'..]})) On Match Set `4esn`+=@usn5 Is Not Null,@usn6+=.e12[`2esn`..010],#usn7 =$999[``] On Match Set [$0[123.654..0.e0],01234567[Null..$_usn3]]._usn4! ={`3esn`:12 Starts With #usn7 Starts With 0Xa} Is Null Is Null,None(#usn7 In 9e0[$1000] Where 00[12..$`6esn`]).`7esn`? =`4esn`(Distinct)[`2esn`($`2esn`[..$`3esn`][..12e12])][Extract(@usn6 In 010[`5esn`] Where 1.e1[$usn1]|.e12[..999][..@usn5])],`5esn`+={`7esn`:usn1[False..`5esn`][$1000..$12],`1esn`:$usn1[`2esn`..][$`2esn`..]}[Extract(@usn5 In 's_str'[0..] Where 0Xa[..Count ( * )][..$123456789]|.e1[..$`3esn`][..01])..] Delete $usn1 Starts With 0x0 Starts With #usn8,$@usn6 Ends With `1esn`,Extract(`3esn` In `2esn`[..01][..True] Where 00[01234567][False]|$`3esn` Ends With 01234567) Starts With (_usn4 :_usn4)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07}) Starts With Extract(@usn6 In 010[`5esn`] Where $`2esn` Starts With `4esn` Starts With $usn1) Union With  [#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[..$`8esn`][..Null]|$@usn5[..0xabc][..$`3esn`]] Contains (`8esn` )<-[`2esn`:`4esn`|@usn5 *01234567..]-(`5esn` :`3esn`)<-[#usn8?:`8esn`{`1esn`:999 In #usn8 In $``,`8esn`:False[$`4esn`..]}]->(`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]}) Contains Any(`5esn` In 0X7 In $#usn7 Where 01 Is Null) Order By `2esn` Starts With $`4esn` Ascending Where 12.0 In 123.654 In _usn4"),
    octest:ct_string("Delete $0[12.0...e1],_usn4[.12..$usn2][$_usn3..123.654],07[..07][..0X7] Remove [#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where _usn4[`7esn`]|$#usn7 In $@usn5 In $`1esn`].@usn6 Return Distinct .0 Starts With `1esn` As #usn7,Single(#usn7 In True Contains 's_str' Contains $usn1 Where `7esn`) Ends With [0Xa Ends With $`3esn` Ends With $1000] Ends With {usn1:0x0[0X7],@usn5:`4esn`[.12][$@usn6]} As usn2,$@usn5[..$#usn7] Limit None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $0[123.654..0.e0])[Extract(#usn7 In 9e0[$1000] Where .e1 In 123456789)][{_usn3:01[`8esn`..9e12][.12..0]}] Union All Unwind (#usn8 :_usn3{@usn5:_usn3 Starts With 12e12 Starts With `5esn`,@usn6:usn2 In _usn3})-[`1esn`?{`8esn`:.e0,usn2:9e1 Contains $999}]->(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})-[? *..010{`2esn`:'s_str'[0..]}]->({`7esn`:1.e1 In 1000 In _usn3,`8esn`:010 Starts With $`` Starts With 0e0})[..(`5esn` )-[ *00..0Xa]->(usn1 :#usn7:`5esn`{`5esn`:$@usn5 In 12e12 In 01})-[usn1?:`2esn`|`4esn`{#usn7:$#usn7[..9e0][..123.654],usn2:.e0 Is Not Null Is Not Null}]-(`1esn` :usn1:`3esn`{_usn3:.0[.e12..]})] As #usn7"),
    octest:ct_string("With  *,[#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`]][[`2esn` Is Null]][Extract(#usn7 In $999 In 1e1|01234567[Null..$_usn3])] Return Distinct `` Starts With $123456789,$`4esn` Starts With $`4esn` Starts With $_usn3,9e1[$#usn8][$1000] Order By .e12[.12..] Desc,{@usn5:01[`3esn`..][Count(*)..]} Starts With Filter(#usn7 In $999 In 1e1 Where 9e12[..1e1][..'s_str']) Desc,``[$`3esn`] Descending Skip {@usn5:\"d_str\"[True..]} In _usn4(0 =~1e1,$123456789 Contains $#usn8 Contains ``) In [999 Contains $1000,`2esn` =~.e12 =~0X0123456789ABCDEF,_usn4[@usn6..][$0..]] Union All Return Distinct *,count(Distinct $@usn6 Ends With 123456789 Ends With 12.0,$`2esn`[.0..][0.0..]) Is Not Null Is Not Null Order By .e0 Starts With $@usn6 Starts With $7 Descending Skip [$12[$usn1..][Count(*)..],usn2[1.e1],123456789[12]] Ends With [`5esn`[$`7esn`..$@usn5],$#usn7[..9e0][..123.654],1.e1 Is Null Is Null] Ends With Extract(`3esn` In 9e1 Contains $999 Where _usn4[0]|12 Starts With #usn7 Starts With 0Xa) With Distinct _usn3[0x0],$@usn6 Is Null Is Null As `5esn` Where 12.0[$1000..][#usn7..] Remove [#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 9e12[$`5esn`..$123456789]|12[..$999][..$`2esn`]].`1esn`?,#usn7:`4esn`:`6esn`,Any(#usn7 In $#usn7 Contains $`7esn` Contains .e12).`5esn`?"),
    octest:ct_string("Create (:`4esn`:`6esn`{`4esn`:$@usn5[..0xabc][..$`3esn`],`3esn`:$usn2[`2esn`..$`1esn`]}),(((#usn8 :_usn4{@usn5:$0[0Xa..$123456789]})<-[ *..010{#usn7:``[$`3esn`]}]-(:`8esn`{#usn7:`1esn`[`3esn`..],usn2:_usn3[$usn2..][$``..]})<-[ *00..0Xa]->(:@usn6{usn2:$123456789 Contains $#usn8 Contains ``,_usn3:`3esn`[..0X0123456789ABCDEF][..0x0]})))"),
    octest:ct_string("Return *,Any(#usn7 In 9e0[$1000] Where .e0 Is Null) In None(@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``) In Filter(@usn6 In False Contains 0 Contains $`6esn` Where $@usn5 In 12e12 In 01) As `7esn` Order By 9e0[$1000] Asc Limit (`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})-[_usn3?:_usn4 *00..0Xa{_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})-[`4esn`:`1esn`|`3esn` *12..]->(usn2 :`1esn`:_usn4{usn2:999 Contains $1000}) Contains Filter(usn2 In False[$usn1][0x0] Where $`6esn`[``..][Count(*)..])"),
    octest:ct_string("Create #usn8=((_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})<-[`8esn`?:`` *01234567..$usn1]->(:_usn4)),`5esn`=(({`7esn`:1.e1 In 1000 In _usn3,`8esn`:010 Starts With $`` Starts With 0e0})<-[:#usn8|:`3esn` *12..{`8esn`:12 Ends With Count ( * ),usn2:Count ( * ) In True In @usn5}]->(#usn8 :``:usn2)-[:_usn3|:`7esn`*{`1esn`:12[..$999][..$`2esn`],usn2:9e1}]->(:``:usn2{`5esn`:$12 Starts With $usn1})) Unwind $_usn4 Starts With $1000 Starts With 12 As #usn7 Unwind $_usn3 Is Not Null Is Not Null As `1esn`"),
    octest:ct_string("Optional Match (`7esn` :usn2{`3esn`:12.0 In 123.654 In _usn4}) Return Distinct _usn3 Is Not Null Is Not Null As `` Skip 0X7[..$`8esn`] Limit {@usn5:$@usn6 Is Not Null Is Not Null} Starts With [`3esn` In `2esn`[..01][..True] Where 0x0[usn1..usn1]] Starts With Extract(`3esn` In `2esn`[..01][..True] Where usn2[12.e12..]|0X7['s_str'..][01..]) Union All Merge (`1esn` :`3esn`{#usn8:$usn2[0.e0],`8esn`:$`4esn`['s_str'..]})<-[`7esn`:_usn4]->(`5esn` {``:_usn3 Contains 9e12 Contains `8esn`,@usn6:``[7.._usn3]}) On Create Set `2esn`+=0X0123456789ABCDEF In .12,`1esn` =$`7esn` In False In $`1esn` On Create Set usn1+=_usn3 Starts With 12e12 Starts With `5esn`,`4esn`+=(`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[`5esn`?{_usn4:$usn2 =~9e1}]->(`8esn` :#usn8:`1esn`{usn2:12.e12 Ends With $``,`2esn`:1e1 Contains 's_str' Contains `3esn`})-[`` *1000..0X0123456789ABCDEF]-(:usn1:`3esn`{_usn3:$`6esn`[1.e1][$_usn3]})[..Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where 999 In #usn8 In $``|Count ( * )[$`5esn`..][$7..])][..$usn2],#usn7+=.e0 Is Null Optional Match #usn8=(`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})-[`3esn`]->(:@usn5{#usn7:12e12 In $`5esn`}),`2esn`=(`8esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})-[`6esn`?:@usn5|_usn3 *01234567..]-(`5esn` {``:_usn3 Contains 9e12 Contains `8esn`,@usn6:``[7.._usn3]})<-[`8esn`{`1esn`:123456789 =~@usn6,`1esn`:$`5esn`[0X7..010][`7esn`..'s_str']}]->(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})"),
    octest:ct_string("Create ((@usn6 {_usn4:0X0123456789ABCDEF Contains 12e12 Contains 12.e12})<-[`6esn`:``]->({@usn6:$1000 Is Not Null})-[?:`5esn`|:usn2 *123456789..{#usn7:$`1esn` =~999,`4esn`:$@usn6[00]}]->(`` {#usn8:.e12 Is Null Is Null,@usn6:`1esn` Is Not Null Is Not Null})) Delete [#usn8 In `7esn` Where @usn5 Contains 9e0] Contains [$usn1 Ends With _usn4 Ends With `2esn`] Union All Optional Match @usn5=(((:usn2{`6esn`:`4esn` Starts With 0e0,`8esn`:usn2[12e12..]['s_str'..]})<-[:`2esn`|`4esn` *12..]-(_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]}))),#usn7=(((:`6esn`:_usn3{``:usn1 Ends With 9e0 Ends With 9e0,`5esn`:$`7esn`[.e1][12.0]})-[`3esn`?:`5esn`|:usn2{`7esn`:0X7['s_str'..][01..],`8esn`:0.e0[0X0123456789ABCDEF..]}]-(usn2 :usn1:`3esn`)-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->({usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]}))) Merge (`1esn` :`3esn`{#usn8:$usn2[0.e0],`8esn`:$`4esn`['s_str'..]})<-[`7esn`:_usn4]->(`5esn` {``:_usn3 Contains 9e12 Contains `8esn`,@usn6:``[7.._usn3]}) Union Match @usn5=(((:usn2{`6esn`:`4esn` Starts With 0e0,`8esn`:usn2[12e12..]['s_str'..]})<-[:`2esn`|`4esn` *12..]-(_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]}))),#usn7=(((:`6esn`:_usn3{``:usn1 Ends With 9e0 Ends With 9e0,`5esn`:$`7esn`[.e1][12.0]})-[`3esn`?:`5esn`|:usn2{`7esn`:0X7['s_str'..][01..],`8esn`:0.e0[0X0123456789ABCDEF..]}]-(usn2 :usn1:`3esn`)-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->({usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})))"),
    octest:ct_string("Remove `8esn`:@usn5,Single(#usn7 In 9e0[$1000] Where $1000 Is Not Null).`5esn` Merge `1esn`=((#usn8 :`6esn`:_usn3)<-[@usn5?:``{`3esn`:010 Is Null Is Null,`5esn`:_usn4 Contains `` Contains 1.e1}]-(:@usn6{`7esn`:$`6esn`[``..][Count(*)..]})) On Match Set `` =$``[..\"d_str\"][..$#usn8],Any(#usn7 In 9e0[$1000] Where 's_str'[0x0..1.e1]).usn2? =9e1[..123456789],@usn5+=[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 12.e12 Starts With \"d_str\" Starts With 9e1|$#usn7 Contains $`7esn` Contains .e12][#usn8(Distinct $_usn4 Is Null Is Null,01[`8esn`..9e12][.12..0])..[_usn4 In 12e12 In 123456789 Where Count ( * ) Ends With $123456789]][Filter(_usn4 In 12e12 In 123456789 Where $`5esn` =~usn1)..[$`5esn` In _usn3 In 0.0]] On Match Set (`3esn` {usn2:$usn2[`4esn`..9e12]})<-[{_usn4:1.e1[`8esn`]}]->(:@usn6$usn1).#usn7! =_usn4 Starts With `` Starts With 1000,Extract(`3esn` In `2esn`[..01][..True] Where 0X7[..$`8esn`]|$#usn7 Starts With 01234567 Starts With $0).`5esn`! =@usn6(Count ( * ) In True In @usn5)[None(#usn7 In True Contains 's_str' Contains $usn1 Where usn2 Contains $0 Contains .0)..Single(#usn7 In $999 In 1e1 Where _usn4 Contains `` Contains 1.e1)] Merge ((@usn6 :_usn4{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]})<-[_usn4? *12..{`1esn`:$`6esn` Starts With .e12 Starts With $`1esn`,`3esn`:`8esn`[0.e0..]}]->(_usn4 )-[#usn7?:`7esn`|:`2esn` *01234567..{@usn5:0xabc =~$@usn5,usn1:0Xa[$`8esn`..][$_usn4..]}]->(#usn8 :usn1:`3esn`{`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})) On Create Set #usn7 =[$`3esn` Ends With 01234567][..{`3esn`:`6esn` Starts With `6esn`}][...e1],@usn6+=0.12[$0..$usn2] On Create Set `4esn` =(usn2 :_usn3)-[`6esn`?:`6esn`|:#usn8]-(`1esn` {_usn4:`8esn` Is Null})<-[`7esn`?:#usn8|:`3esn`]-(_usn4 :`3esn`)[Any(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null)..],usn1 =(`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})-[_usn3?:_usn4 *00..0Xa{_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})-[`4esn`:`1esn`|`3esn` *12..]->(usn2 :`1esn`:_usn4{usn2:999 Contains $1000}) Contains Filter(usn2 In False[$usn1][0x0] Where $`6esn`[``..][Count(*)..]) Union Match (((`` $`6esn`)<-[usn2*{_usn3:0.e0[0X0123456789ABCDEF..],`8esn`:$`5esn` In 07 In 00}]-(`3esn` {`8esn`:`5esn` Contains #usn7 Contains 9e12})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]}))),(((`` $`6esn`)<-[usn2*{_usn3:0.e0[0X0123456789ABCDEF..],`8esn`:$`5esn` In 07 In 00}]-(`3esn` {`8esn`:`5esn` Contains #usn7 Contains 9e12})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]}))) Where $@usn6 In @usn6 In 1e1 Create usn1=(`6esn` )<-[usn1? *0xabc{usn1:$_usn4 Starts With $1000 Starts With 12}]-(usn1 :usn1:`3esn`) Merge `6esn`=((:_usn3{`7esn`:$999 Ends With .e0})<-[`3esn`?{@usn6:Count(*)[..@usn6][..`7esn`],`6esn`:`2esn` In 9e0 In 7}]-(#usn8 :_usn4)-[:`` *0..01]-(`3esn` :`1esn`:_usn4{#usn8:1e1 Is Not Null Is Not Null}))"),
    octest:ct_string("Unwind [#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 9e1[usn1..0x0][12.e12..12.0]][..{usn2:0x0[0X7]}][..[12.e12 Is Not Null Is Not Null,$@usn6[.0..][0e0..]]] As _usn4 Union All With Distinct 1.e1[$`3esn`][0Xa] As @usn5 Order By (:`6esn`:_usn3{@usn6:7 =~`4esn`,_usn3:`6esn`[$1000][`3esn`]})-[_usn4:_usn4 *0X7..{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]}]-(:`6esn`:_usn3{`4esn`:#usn7 Contains $0 Contains $usn2})[[$`6esn`[1.e1][$_usn3]]][usn2(0xabc In Null)] Ascending,{_usn4:`1esn` Is Not Null Is Not Null,@usn5:0.12[$0..$usn2]} Is Not Null Is Not Null Descending,9e12 =~@usn6 Asc Skip usn1[$@usn5] Where $@usn6[00]"),
    octest:ct_string("Remove [$``[7],`7esn` Ends With $7 Ends With $@usn5].`8esn` Union Return *,(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})-[? *0Xa{usn1:`3esn`[0x0..]}]->(:`5esn`{`1esn`:0.e0}) Is Not Null Is Not Null As `3esn` Order By 1e1 Ends With $`2esn` Descending,$usn1 Starts With 0x0 Starts With #usn8 Descending Skip #usn8 Ends With $@usn5 Ends With $7 Limit $`5esn`[$`3esn`..] Unwind $usn1 Starts With usn1 Starts With True As `8esn` Detach Delete `1esn`[$@usn6][07],``[$`3esn`]"),
    octest:ct_string("Merge `1esn`=(`` {#usn7:#usn8 Is Not Null Is Not Null})<-[`5esn` *0xabc]-(:_usn4{_usn3:$#usn7[..0Xa],@usn5:12e12 In 123456789}) Unwind $1000[$@usn6][$_usn4] As `6esn` Detach Delete Null Ends With _usn4 Ends With 0.0 Union Detach Delete [0x0 Ends With 12.0 Ends With `5esn`,12e12 Ends With 0.0 Ends With usn1,00[1.e1..]] Ends With All(#usn8 In `7esn` Where $`3esn`[..0xabc][..$7]) Ends With Any(@usn6 In False Contains 0 Contains $`6esn` Where `6esn`[$1000][`3esn`]),@usn5(Distinct 12e12 In 123456789,12.0 =~@usn6 =~$`2esn`)[`8esn`(123456789 =~$999)][`2esn`($`2esn`[..$`3esn`][..12e12])] Union Merge (((_usn4 :#usn7:`5esn`)<-[#usn8 *0x0..]->(#usn8 :_usn3{_usn4:.e1[7..][9e0..]})<-[`2esn`?:usn1|`4esn` *00..0Xa]->(`6esn` :#usn8:`1esn`{`6esn`:usn1[..$@usn6][..00]})))"),
    octest:ct_string("Unwind `6esn`[$`8esn`][9e1] As `7esn` Merge ({`1esn`:1.e1[`8esn`]})<-[:``{``:.0[$``..0X7]}]-(#usn8 :`8esn`) On Create Set All(usn2 In False[$usn1][0x0] Where `2esn`[..01][..True]).`1esn`? =$usn2[`2esn`..$`1esn`],{usn1:#usn8 =~.e0,_usn3:$_usn4 Is Null Is Null}.`1esn` =$`7esn`[.e1][12.0] Optional Match ((`6esn` {_usn4:$`5esn` Is Not Null Is Not Null})),`5esn`=(((`2esn` :`1esn`:_usn4)<-[`5esn`?{`8esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}]->(`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})<-[`4esn`:usn2]->(:`6esn`:_usn3{`2esn`:999[123.654..$usn2][Count ( * )..0x0]}))) Union Optional Match usn1=((`3esn` {usn2:$usn2[`4esn`..9e12]})<-[?{@usn5:_usn3 Ends With 7 Ends With $`1esn`}]->(_usn3 :_usn4)<-[_usn4?:`3esn`]-(:_usn3{_usn4:.e1[7..][9e0..]})),`7esn`=(usn1 :`7esn`) Return Distinct Filter(`6esn` In $`6esn`[``..][Count(*)..]) Ends With None(`5esn` In 0X7 In $#usn7 Where 12.0 Is Null Is Null),9e1[usn1..0x0][12.e12..12.0] Order By 00[12e12][$`7esn`] Ascending,@usn5[0..] Descending,Single(`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]) Is Not Null Is Not Null Descending Limit 0.e0[$`4esn`..`2esn`] Merge `5esn`=(({`7esn`:1.e1 In 1000 In _usn3,`8esn`:010 Starts With $`` Starts With 0e0})<-[:#usn8|:`3esn` *12..{`8esn`:12 Ends With Count ( * ),usn2:Count ( * ) In True In @usn5}]->(#usn8 :``:usn2)-[:_usn3|:`7esn`*{`1esn`:12[..$999][..$`2esn`],usn2:9e1}]->(:``:usn2{`5esn`:$12 Starts With $usn1}))"),
    octest:ct_string("Unwind $`6esn` Is Not Null Is Not Null As `4esn` Remove Single(#usn7 In 9e1[$`1esn`..] Where ``[$`3esn`]).#usn7!,Any(#usn7 In True Contains 's_str' Contains $usn1 Where `2esn`[..$_usn3])._usn3?,{usn2:`2esn`[..$_usn3]}.usn2? Unwind $`3esn` Contains $`1esn` As `6esn` Union Unwind 0x0[12e12..$`7esn`] As `7esn` Union All Detach Delete $0[123.654..0.e0],123.654"),
    octest:ct_string("Remove [#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[`8esn`]|Count(*) Is Null].#usn7,{``:0Xa =~False =~@usn5,`8esn`:.12[123.654..]}.`6esn`!,Any(#usn7 In $999 In 1e1 Where usn1 =~$`7esn`).`1esn`! Match (_usn3 :`5esn`{#usn8:0xabc In 010 In #usn7}),`3esn`=(((:`6esn`:_usn3{`8esn`:.e12[..999][..@usn5],`3esn`:$_usn3 Is Null})<-[? *0X7..]->(`5esn` :``:usn2{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3})-[_usn4]->(:`6esn`:_usn3{_usn3:usn1 Is Null Is Null,#usn8:9e1[$``..][0.e0..]}))) Union All With  12 Starts With True Starts With 12e12 As _usn4 Order By None(`8esn` In 123456789 =~@usn6 Where True[`3esn`]) Is Not Null Is Not Null Desc Union Remove None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 9e12[$`5esn`..$123456789]).`4esn`,[@usn6 In 010[`5esn`] Where 9e1 Ends With Count(*) Ends With $7|`1esn` Is Not Null Is Not Null].`` Match `6esn`=((`4esn` :_usn4)-[`5esn`?:_usn3|:`7esn`]->({@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]})<-[?:`5esn`|:usn2]->(usn2 :`5esn`)) Where `` Is Null Create (_usn4 :_usn4{`2esn`:`6esn` Starts With `6esn`,`8esn`:1000[0e0][1e1]}),`2esn`=(:#usn8:`1esn`$`7esn`)"),
    octest:ct_string("Return #usn7[`8esn`..usn1][$999..`7esn`] As _usn3,All(#usn7 In 9e1[$`1esn`..] Where 12 =~usn1)[Extract(#usn7 In $999 In 1e1)..][1.e1..],12e12 Starts With $0 Starts With $`2esn` Order By Extract(`8esn` In 123456789 =~@usn6 Where 123.654[`4esn`..12]|`8esn` Contains Count(*) Contains $#usn7)[..[#usn7 In True Contains 's_str' Contains $usn1 Where Count(*) Ends With usn1]][..Filter(usn2 In 7[12] Where #usn7[0.e0..]['s_str'..])] Ascending,{@usn5:`6esn`[$1000][`3esn`]}[All(`3esn` In `2esn`[..01][..True] Where 0Xa =~False =~@usn5)..] Asc,usn2[1.e1] Descending Skip $``[01234567..][.0..] Return Distinct $#usn7 In $@usn5 In $`1esn` As `4esn` Remove Filter(#usn7 In 9e0[$1000] Where 12['s_str'][01])._usn3?,[@usn5 In 's_str'[0..] Where usn1 Starts With 00|True Contains .e12].`6esn`!,None(@usn5 In 's_str'[0..] Where 0.e0).`4esn`"),
    octest:ct_string("Detach Delete Single(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where @usn6 In .12 In `3esn`) Contains {usn2:.12[123.654..],`2esn`:`8esn`[$`4esn`..$#usn8]} Contains All(#usn7 In $999 In 1e1 Where 9e12 Starts With 1e1) With  *,`7esn`(Distinct `1esn` Starts With 0xabc Starts With $usn2)[({`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12})-[`6esn`?:@usn5|_usn3 *01234567..]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})..] As @usn5 Where 07 Contains `3esn` Contains `7esn` Unwind False[$usn1][0x0] As usn2"),
    octest:ct_string("Match _usn4=((:`3esn`{#usn7:$#usn7 In $@usn5 In $`1esn`})) Where 123456789[12] Merge #usn7=(`1esn` :@usn6{`6esn`:00[False..0e0],`6esn`:$usn2 =~1.e1 =~usn1})<-[`7esn`:`2esn`|`4esn`{_usn4:.e1[7..][9e0..]}]-(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"})-[:_usn3|:`7esn`*{`1esn`:12[..$999][..$`2esn`],usn2:9e1}]->(:``:usn2{`5esn`:$12 Starts With $usn1}) On Match Set _usn3:`7esn` On Create Set Single(@usn6 In 010[`5esn`] Where 123.654).`6esn`? =0.e0[0X0123456789ABCDEF..],(:`4esn`:`6esn`{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7})<-[usn2?:@usn5|_usn3*{_usn4:@usn5 Starts With $`3esn`,#usn7:$`5esn` Is Not Null}]-(#usn7 :``:usn2)-[:_usn3|:`7esn` *1000..0X0123456789ABCDEF]->(:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]}).`3esn`? =999[..`1esn`][..07],[@usn6 In 010[`5esn`] Where @usn6 Contains .12 Contains $usn1].`6esn` =`7esn` Starts With @usn5 With Distinct 0Xa In #usn7 In 's_str',`4esn` Starts With 0e0 As `7esn` Skip (#usn7 {_usn4:1.e1[`8esn`]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) Contains Extract(#usn7 In 9e0[$1000] Where _usn4 Is Not Null Is Not Null|usn2 Ends With .e1 Ends With $`5esn`) Where .e0 Union Remove [0x0[0X7]].``!,(:`1esn`:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null})-[#usn7?{`5esn`:.e12 Starts With $#usn8 Starts With False}]->(#usn7 :`4esn`:`6esn`{`1esn`:`1esn`[$@usn6][07]})-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(`2esn` {`1esn`:$`4esn` Is Null Is Null}).`4esn`,{@usn5:01[`3esn`..][Count(*)..]}.`8esn`? Unwind 07[False] As @usn6 Union Remove [Null[..010][..1000]]._usn4!"),
    octest:ct_string("Unwind #usn8 Is Null As `8esn` Merge ((_usn3 :usn2))"),
    octest:ct_string("Create (#usn7 {`6esn`:$`2esn` Contains Count(*)})<-[?:`7esn`|:`2esn`]->(#usn8 :usn1:`3esn`{`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[usn1:_usn4]-(`` {_usn3:`5esn` Contains `7esn`}) Return Distinct *,1e1 Contains 0.e0 Contains 9e1 Limit None(#usn7 In 9e0[$1000] Where $1000 Is Not Null) Is Null Is Null Create ((#usn7 {`1esn`:$`4esn` Is Null Is Null})<-[ *999..{`3esn`:123456789 =~$999,_usn4:`4esn` Is Not Null Is Not Null}]-(`6esn` :`8esn`)) Union Merge `1esn`=((`6esn` {`3esn`:$`2esn`[0..123456789][``..`1esn`],`7esn`:$0[0Xa..$123456789]})<-[? *00..0Xa]->(usn2 :@usn5)-[?:`2esn`|`4esn` *0Xa{#usn7:1.e1 Starts With 9e12}]-(:`4esn`:`6esn`{@usn5:$#usn7[..9e0][..123.654],`2esn`:7[12]})) On Create Set `3esn`+=$@usn6 Is Not Null Is Not Null,[$usn2 Is Not Null Is Not Null,0 =~1e1].`3esn`? =$1000[0X0123456789ABCDEF][12] On Match Set `2esn` =`3esn`[..0X0123456789ABCDEF][..0x0]"),
    octest:ct_string("Merge (#usn7 :`4esn`:`6esn`{`1esn`:`1esn`[$@usn6][07]}) Return Distinct *,9e1[$``..][0.e0..] Order By Count ( * )[$`5esn`..][$7..] Desc"),
    octest:ct_string("Unwind $12[$usn1..][Count(*)..] As usn2 Return $1000 Starts With $`3esn` Starts With 0.e0 As @usn6,.e12 In $`5esn` In 0X7 As _usn4 Order By 1.e1 In 1000 In _usn3 Desc,None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 9e12[$`5esn`..$123456789]) In Extract(@usn5 In 's_str'[0..] Where 07 Ends With 9e12 Ends With `2esn`|00[01234567][False]) In [12 =~usn1] Descending,123.654 Is Null Is Null Asc Union Delete True Contains 's_str' Contains $usn1 Union Optional Match ((_usn3 {`6esn`:@usn5[$`6esn`..][$999..],`8esn`:$@usn5[..0xabc][..$`3esn`]})-[? *0X0123456789ABCDEF..{#usn7:$@usn6[$0..9e12][.e12..Null]}]->(#usn8 :`5esn`)-[:`6esn`|:#usn8{`4esn`:$`2esn`[..$`3esn`][..12e12],#usn8:123.654 Is Not Null}]-(_usn3 :`5esn`)) Where 010 Starts With 0 Starts With 0.0 With  _usn4 Contains $_usn3 Contains .e1,$`4esn`['s_str'..] As `` Limit .e12[..999][..@usn5] Where .12 In `8esn` In $#usn8 Return 0x0[12e12..$`7esn`] As #usn7 Order By .e12[`2esn`..010] Desc,0xabc In 010 In #usn7 Ascending Skip $999 In 1e1"),
    octest:ct_string("With  usn1[False..] As usn2 Order By 0 Ends With 12.e12 Ends With usn2 Asc,\"d_str\" In @usn5 In $@usn5 Ascending,$usn2 Desc Skip $usn2[`2esn`..$`1esn`] Delete [`3esn` In `2esn`[..01][..True] Where $0 Ends With $usn1 Ends With $_usn3] In [12e12 In 123456789,`1esn`] In All(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789]),$999 Is Null Is Null Return *,'s_str' Starts With 9e0 Starts With usn2 As `8esn` Union All Create ((:_usn4{`4esn`:.e1 In 123456789})<-[ *999..{`3esn`:123456789 =~$999,_usn4:`4esn` Is Not Null Is Not Null}]-(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})) With Distinct (#usn7 {_usn4:1.e1[`8esn`]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) =~Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12) =~{usn2:#usn8[`8esn`..]},9e1[$#usn8][$1000] As `5esn`,$usn1 Union Return Distinct usn2[12.e12..] As `2esn`,$`2esn`[0..123456789][``..`1esn`],#usn8[`6esn`..][$``..] As `2esn` Skip $@usn6 Ends With `1esn` Limit 9e1 Ends With Count(*) Ends With $7 Merge _usn4=(`5esn` :``:usn2)-[?{_usn3:`4esn`[$_usn3..$`7esn`]}]-({usn2:.12[0X7..][12e12..],`6esn`:$`4esn`[`6esn`..$12]}) Match @usn6=(usn2 :_usn4) Where `4esn`[$_usn3..$`7esn`]"),
    octest:ct_string("Unwind 9e0 Is Not Null Is Not Null As `4esn`"),
    octest:ct_string("Remove Extract(@usn5 In 9e0 Ends With $#usn8 Where 0Xa[$`8esn`..][$_usn4..]|`2esn`[$@usn6..][Null..]).``,Single(#usn7 In $#usn7 Contains $`7esn` Contains .e12).@usn6 Unwind #usn8(1000[12e12][`5esn`],9e1 Contains 12)[Extract(#usn8 In `7esn` Where $`5esn` In _usn3 In 0.0)..`1esn`(Distinct `3esn`[7..0.e0][0.0..123456789],`1esn` Starts With 0xabc Starts With $usn2)][Filter(`6esn` In $`6esn`[``..][Count(*)..] Where 9e0[Count(*)..0.12][$`1esn`..12.0])..Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12)] As @usn6 Remove [@usn6 In False Contains 0 Contains $`6esn` Where $@usn6[$`8esn`..][123456789..]|$`3esn` In $usn2].usn1,[#usn8 In `7esn` Where $`5esn` Is Not Null Is Not Null].#usn8 Union Return Distinct $`3esn`[$_usn4..0Xa] As #usn7,Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn` Contains .e0 Contains 0Xa) As `3esn`,$`5esn`[$`3esn`..] As `4esn` Limit $`` Is Not Null Is Not Null"),
    octest:ct_string("Delete 12.e12 Starts With \"d_str\" Starts With 9e1 Union All Return 123456789 =~$999 Order By $7[01..$123456789][#usn7..12.0] Descending,.12[..usn2][..12e12] Descending Merge `8esn`=((#usn8 :_usn3)<-[`8esn`?:#usn7|@usn5{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3}]-(`` :usn1:`3esn`)) Union All Unwind $_usn3 Is Not Null As _usn3"),
    octest:ct_string("Optional Match @usn5=(:@usn5{#usn7:12e12 In $`5esn`})<-[?{``:00 Contains Count ( * ) Contains 0x0,#usn8:123.654 In $`7esn`}]-(:usn2{``:0.0 =~9e0 =~$0})-[?*]-({`8esn`:`5esn` Contains #usn7 Contains 9e12}) Where 9e1 Contains 12 Remove Extract(#usn7 In True Contains 's_str' Contains $usn1 Where 00[12..$`6esn`]|$``[..\"d_str\"][..$#usn8]).`6esn`!"),
    octest:ct_string("With  *,$@usn5 In 12e12 In 01 Order By 0.12 Starts With $`8esn` Starts With @usn5 Ascending Limit $7 Starts With $`4esn` Return Distinct *,00 Ends With $`1esn` Ends With `7esn`,$@usn6 Is Not Null Is Not Null As `8esn` Order By (:@usn5{_usn3:123.654})<-[usn1:`1esn`|`3esn`]-(_usn4 :@usn5)-[:_usn3|:`7esn` *1000..0X0123456789ABCDEF]->(:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]}) Ends With Any(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn`[0..][999..]) Ends With {``:0xabc[..$1000][..`5esn`],``:$`1esn` Contains 1e1 Contains @usn6} Asc,[@usn5 In 9e0 Ends With $#usn8 Where 12.e12 =~0X0123456789ABCDEF =~1.e1|00[$`1esn`..][@usn6..]] Descending,[#usn8 In `7esn` Where $`3esn` Contains $`1esn`|$0[123.654..0.e0]][usn1(Distinct 999 Contains $1000,12[123.654..])..[.e12[..999][..@usn5],12.e12 =~.0 =~usn1,`6esn`[$1000][`3esn`]]][[@usn6 In 010[`5esn`] Where $usn2[`2esn`..$`1esn`]]..[`3esn` In 9e1 Contains $999 Where .12 In `8esn` In $#usn8]] Descending Skip [usn2 In 7[12] Where #usn7[.e0]|$usn2 =~9e1] Is Null Is Null Limit 12.e12 =~.0 =~usn1 Return Distinct (`5esn` :`4esn`:`6esn`)-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(#usn7 :``:usn2)[..Filter(#usn8 In `7esn`)] As #usn7,1e1 Is Null Is Null As usn2,{`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]}[..`2esn`(Distinct 0 Ends With 12.e12 Ends With usn2)][..Filter(_usn4 In 12e12 In 123456789 Where .e1 In 123456789)] As usn1"),
    octest:ct_string("Remove #usn8(1000[12e12][`5esn`],9e1 Contains 12).@usn5?,({@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]})<-[?:#usn7|@usn5 *01234567..{`5esn`:$`4esn` In 1.e1 In #usn7}]->(:#usn8:`1esn`$`7esn`).`6esn`?,[#usn7 In 9e0[$1000] Where .e0 Is Null|Count(*)[9e12..12.0]].``! Return *,`2esn`($`2esn`[..$`3esn`][..12e12])[usn1($0[123.654..0.e0])..'s_str'][.e12..Single(#usn7 In $999 In 1e1 Where _usn4 Is Not Null Is Not Null)] As `3esn`,``[$`1esn`] Skip None(#usn7 In $999 In 1e1 Where _usn3 Contains 9e12 Contains `8esn`)[..Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 0xabc In 123456789 In 0x0|Count(*)[..@usn6][..`7esn`])] Limit True Ends With $_usn3 Ends With 12 Union Optional Match @usn5=(`7esn` :`3esn`{`2esn`:999[123.654..$usn2][Count ( * )..0x0]})-[`2esn`?:usn1|`4esn` *00..0Xa]-(`4esn` :`4esn`:`6esn`),usn2=(`3esn` {usn2:$usn2[`4esn`..9e12]}) Where 12 Starts With #usn7 Starts With 0Xa Union With  [#usn7 In 9e1[$`1esn`..] Where $@usn5 In $`6esn` In 12e12|12.0 Is Null Is Null] Contains [`3esn` In `2esn`[..01][..True] Where $0 Ends With $usn1 Ends With $_usn3] As #usn8 Order By [#usn7 In $999 In 1e1 Where 0X7['s_str'..][01..]] Is Not Null Is Not Null Desc Limit Any(`5esn` In 0X7 In $#usn7 Where 0.12 Contains False Contains 1.e1) Contains 0X7 Contains Extract(`8esn` In 123456789 =~@usn6 Where @usn5 Contains 9e0|9e0 Contains $12 Contains `3esn`)"),
    octest:ct_string("With  12 Starts With True Starts With 12e12 As _usn4 Order By None(`8esn` In 123456789 =~@usn6 Where True[`3esn`]) Is Not Null Is Not Null Desc Union All Merge `1esn`=((#usn8 :`6esn`:_usn3)<-[@usn5?:``{`3esn`:010 Is Null Is Null,`5esn`:_usn4 Contains `` Contains 1.e1}]-(:@usn6{`7esn`:$`6esn`[``..][Count(*)..]})) On Match Set `` =$``[..\"d_str\"][..$#usn8],Any(#usn7 In 9e0[$1000] Where 's_str'[0x0..1.e1]).usn2? =9e1[..123456789],@usn5+=[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 12.e12 Starts With \"d_str\" Starts With 9e1|$#usn7 Contains $`7esn` Contains .e12][#usn8(Distinct $_usn4 Is Null Is Null,01[`8esn`..9e12][.12..0])..[_usn4 In 12e12 In 123456789 Where Count ( * ) Ends With $123456789]][Filter(_usn4 In 12e12 In 123456789 Where $`5esn` =~usn1)..[$`5esn` In _usn3 In 0.0]] On Match Set (`3esn` {usn2:$usn2[`4esn`..9e12]})<-[{_usn4:1.e1[`8esn`]}]->(:@usn6$usn1).#usn7! =_usn4 Starts With `` Starts With 1000,Extract(`3esn` In `2esn`[..01][..True] Where 0X7[..$`8esn`]|$#usn7 Starts With 01234567 Starts With $0).`5esn`! =@usn6(Count ( * ) In True In @usn5)[None(#usn7 In True Contains 's_str' Contains $usn1 Where usn2 Contains $0 Contains .0)..Single(#usn7 In $999 In 1e1 Where _usn4 Contains `` Contains 1.e1)]"),
    octest:ct_string("Remove Single(#usn7 In 9e1[$`1esn`..] Where `3esn`[7..0.e0][0.0..123456789]).`7esn`?,{usn1:$123456789 In 0.12}.`1esn`!,`3esn`(9e0[0X7..$`6esn`][123456789..0]).@usn5 With Distinct *,999 Contains [@usn6 In False Contains 0 Contains $`6esn` Where `1esn` Starts With 0xabc Starts With $usn2] Contains {_usn3:123.654 In $`7esn`} As `6esn`,.e0 Is Not Null Is Not Null As `7esn` Order By _usn3 In $`8esn` In @usn6 Desc Where `8esn` Contains Count(*) Contains $#usn7 Merge `3esn`=(usn1 :#usn8:`1esn`{`3esn`:`2esn` In 9e0 In 7})-[@usn5?{#usn7:12e12 In $`5esn`}]->(`8esn` :`8esn`)"),
    octest:ct_string("Delete @usn5(Distinct 12e12 In 123456789,12.0 =~@usn6 =~$`2esn`)[`8esn`(123456789 =~$999)][`2esn`($`2esn`[..$`3esn`][..12e12])] Delete 's_str' Starts With 1e1 Starts With $0 Remove `7esn`:@usn6 Union With  `3esn`[7..0.e0][0.0..123456789] As _usn4,$usn2[0.e0] As _usn3 Limit 9e1 Contains $999 Where @usn5 Is Not Null Unwind [@usn5 In 9e0 Ends With $#usn8 Where 12.e12 =~0X0123456789ABCDEF =~1.e1|00[$`1esn`..][@usn6..]] As #usn8"),
    octest:ct_string("Delete $7[$12..12e12][1.e1..9e1],Filter(@usn5 In 's_str'[0..] Where #usn7[0.12..]) =~[_usn4 In 12e12 In 123456789 Where .0 Ends With Count ( * )|$`1esn` In .e0]"),
    octest:ct_string("Match ({`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12})<-[:@usn6|:`7esn` *0..01{``:`1esn`[0.0..1e1][0x0..7],usn2:01[`3esn`..][Count(*)..]}]->(`5esn` :``:usn2{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3})<-[:@usn6|:`7esn` *0..01{``:`1esn`[0.0..1e1][0x0..7],usn2:01[`3esn`..][Count(*)..]}]->(`5esn` :``:usn2{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3}),`4esn`=(:#usn7:`5esn`{`4esn`:$``[..\"d_str\"][..$#usn8]}) Remove None(#usn7 In $999 In 1e1 Where _usn4 Is Not Null Is Not Null).`5esn` Union All Optional Match ((({`7esn`:999 In 0e0})<-[#usn7 *01..123456789]->({`2esn`:`7esn` In 010 In usn1,`8esn`:$0[123.654..0.e0]})<-[? *7..]-(usn1 {@usn5:_usn4[$usn1..01234567][123.654..`5esn`],`5esn`:1.e1 =~$_usn4}))) With Distinct *,0Xa[Count(*)..],[#usn8 In `7esn` Where @usn5 Contains 9e0] Contains [$usn1 Ends With _usn4 Ends With `2esn`] Order By None(#usn8 In `7esn` Where 9e1 Starts With Count ( * ))[..Any(usn2 In 7[12] Where 9e1 Is Not Null Is Not Null)] Desc,0xabc In .12 In 0Xa Descending,.0 Contains .e12 Contains 0 Desc Skip All(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 1e1 Contains 0.e0 Contains 9e1)[None(@usn6 In 010[`5esn`] Where 00[1.e1..])..[$12[$usn1..][Count(*)..],$@usn5 Contains 's_str' Contains \"d_str\"]][Extract(`3esn` In 9e1 Contains $999 Where 0e0 Starts With 999 Starts With `2esn`|9e1 Ends With Count(*) Ends With $7).._usn4(`1esn`[0.12..][@usn6..],#usn8 =~0.e0)] Limit `1esn` Starts With 9e1 Create ``=((@usn5 :`4esn`:`6esn`)<-[`3esn` *7..]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]})),(`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12})"),
    octest:ct_string("Unwind .e1 In 123456789 As `4esn` Unwind .e1[7..][9e0..] As `4esn` With  *,Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 1e1 Contains 0.e0 Contains 9e1|12.e12 Ends With $``) Is Null Is Null"),
    octest:ct_string("Return Distinct *,[`3esn` In `2esn`[..01][..True] Where 0.e0[1000.._usn4][.e1..usn1]|`5esn`[..123.654][...e12]] As `6esn`,$#usn8 Starts With .e12 Starts With 1.e1 As `8esn` Return _usn4 Is Null Is Null As @usn5,.e12[$@usn6..00][01234567.._usn3],Extract(@usn5 In 9e0 Ends With $#usn8 Where $`8esn`[123456789..][$@usn5..]) =~None(#usn7 In True Contains 's_str' Contains $usn1 Where 's_str' Starts With 9e0 Starts With usn2) As @usn5 Skip 9e12 Ends With 12e12 Ends With 12 Limit (:@usn5{_usn3:123.654})<-[usn1:`1esn`|`3esn`]-(_usn4 :@usn5)-[:_usn3|:`7esn` *1000..0X0123456789ABCDEF]->(:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]}) Ends With Any(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn`[0..][999..]) Ends With {``:0xabc[..$1000][..`5esn`],``:$`1esn` Contains 1e1 Contains @usn6} Union Unwind 07 =~`4esn` =~$`1esn` As _usn3 Create `4esn`=(:`3esn`{``:$@usn5 Is Null Is Null,`8esn`:.e1[..\"d_str\"][..$123456789]})<-[`7esn`:`4esn`|@usn5 *12..]->({`4esn`:.e1[..$`3esn`][..01]}),@usn5=(_usn3 :`7esn`)"),
    octest:ct_string("Unwind _usn3 =~00 As `4esn` With Distinct #usn7[`8esn`..usn1][$999..`7esn`] As _usn3,All(#usn7 In 9e1[$`1esn`..] Where 12 =~usn1)[Extract(#usn7 In $999 In 1e1)..][1.e1..],12e12 Starts With $0 Starts With $`2esn` Skip `8esn`[$12][123456789] Limit Extract(#usn7 In 9e0[$1000] Where $`1esn` Starts With Count(*)|9e0 Ends With $#usn8)[(`` :`5esn`{@usn5:123456789 =~@usn6})<-[:@usn5|_usn3{#usn7:$123456789 Starts With 0.12 Starts With Null,usn1:.e1[..$`3esn`][..01]}]-(#usn7 :`3esn`{`3esn`:@usn5[0.0..0X7],@usn5:$#usn7 Starts With $`2esn`})<-[:`1esn`|`3esn` *0Xa{_usn4:``[9e12][$999],#usn8:123.654 In 12}]-(`7esn` {``:9e1 Contains $999,``:$usn2[True..0X0123456789ABCDEF]}).._usn3(Distinct 0x0 Contains $`6esn` Contains `4esn`,usn2[1.e1])][(:@usn6{usn2:$123456789 Contains $#usn8 Contains ``,_usn3:`3esn`[..0X0123456789ABCDEF][..0x0]})<-[`7esn`?:usn1|`4esn`]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})<-[:_usn4]->(:usn2{@usn5:07 Ends With 9e12 Ends With `2esn`})..[#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[`8esn`]|9e1 Is Null]]"),
    octest:ct_string("Optional Match @usn6=(_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})<-[?:usn1|`4esn` *1000..0X0123456789ABCDEF{`6esn`:.e0[999..1000][1e1..$`8esn`],`4esn`:00 Ends With `` Ends With 12.e12}]-(:`5esn`{@usn6:1000[0e0][1e1]})<-[:`8esn`]-(:@usn6) Where .e1[..$`3esn`][..01] Delete 9e0[Count(*)..0.12][$`1esn`..12.0],`7esn` Is Null Unwind _usn3[`5esn`..][usn2..] As #usn7 Union All Return Distinct *,`4esn` Ends With 12 Ends With .12 As usn2 Skip `2esn`($`2esn`[..$`3esn`][..12e12])[usn1($0[123.654..0.e0])..'s_str'][.e12..Single(#usn7 In $999 In 1e1 Where _usn4 Is Not Null Is Not Null)] Limit Single(`5esn` In `7esn`[$usn2..][$123456789..] Where 999 In #usn8 In $``) In Extract(#usn7 In 9e1[$`1esn`..] Where 00 Contains Count ( * ) Contains 0x0|$`5esn` =~usn1) Detach Delete Extract(#usn8 In `7esn` Where ``[7.._usn3]|@usn5 Is Null) Is Not Null Is Not Null,010 Starts With $`` Starts With 0e0 Union All Unwind #usn7[..07] As usn1"),
    octest:ct_string("Unwind `7esn`[1e1] As `6esn` Match ((@usn5 )),(`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`})-[@usn6:`5esn`|:usn2 *0xabc{#usn8:999 In 0e0}]-({`1esn`:#usn7[0]}) Return Distinct *,#usn8 =~.e0,Count ( * ) Ends With $123456789 Skip $#usn8[True][9e0] Union All Optional Match usn1=((:@usn5{@usn5:$12[9e0..$999]})<-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(`1esn` :`6esn`:_usn3{#usn7:0x0[$0][7]})-[{`4esn`:.e1 In 123456789}]-(:`3esn`{``:$@usn5 Is Null Is Null,`8esn`:.e1[..\"d_str\"][..$123456789]})) Return @usn5(Distinct 12e12 In 123456789,12.0 =~@usn6 =~$`2esn`)[`8esn`(123456789 =~$999)][`2esn`($`2esn`[..$`3esn`][..12e12])],Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where 12.e12 Starts With \"d_str\" Starts With 9e1|$@usn5 In $`6esn` In 12e12) Ends With (:`7esn`{#usn7:0 =~1.e1 =~$#usn7})<-[`1esn`:`8esn` *7..]->(`` {#usn8:.e12 Is Null Is Null,@usn6:`1esn` Is Not Null Is Not Null}),`1esn`($`4esn`[`4esn`][Count(*)],`2esn` Starts With $`7esn`) =~Extract(@usn5 In 9e0 Ends With $#usn8 Where .e0 Starts With $@usn6 Starts With $7) =~{`3esn`:_usn3[`2esn`..0X7][0.e0..$`3esn`]}"),
    octest:ct_string("Detach Delete Filter(#usn7 In $999 In 1e1 Where 9e12[..1e1][..'s_str'])[..Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|0 Ends With 12.e12 Ends With usn2)][..None(#usn7 In $999 In 1e1 Where `1esn`[0.12..][@usn6..])],[$usn1 Ends With _usn4 Ends With `2esn`][@usn5(Distinct 12e12 In 123456789,12.0 =~@usn6 =~$`2esn`)..[#usn7 In $999 In 1e1 Where 9e12 Starts With 1e1]][Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 12[$`5esn`..][False..])..Extract(#usn7 In 9e1[$`1esn`..] Where $999[``])],{`3esn`:$@usn6 Is Not Null Is Not Null,`1esn`:12e12 =~1e1}[[@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str']|$`3esn`[..0xabc][..$7]]..][(_usn4 {`6esn`:$_usn4 =~$`1esn` =~`2esn`,_usn3:#usn8 Is Null})-[?:#usn7|@usn5 *0X0123456789ABCDEF..{_usn3:@usn5 Is Not Null}]-(#usn8 {`5esn`:$12[$usn1..][Count(*)..],`7esn`:0e0[``..$1000][$7..12.e12]})-[_usn4?{_usn3:.e1[.e1..`1esn`],@usn6:.12 In `8esn` In $#usn8}]->(usn2 :@usn5)..] With  *,12 Ends With True Ends With @usn6,Filter(`5esn` In 0X7 In $#usn7 Where 010 Is Null) Is Not Null As `2esn` Order By Extract(@usn6 In False Contains 0 Contains $`6esn` Where $0 Ends With $usn1 Ends With $_usn3) Ascending,$@usn6 =~0xabc =~$999 Descending,[`5esn` In `7esn`[$usn2..][$123456789..] Where $@usn6 Ends With 12.e12 Ends With @usn5|`7esn`[1e1]] Contains (`4esn` :#usn8:`1esn`{`7esn`:.0[..'s_str'][..01234567],@usn6:False[..$`5esn`][..1e1]})<-[:_usn4]->(:usn2{@usn5:07 Ends With 9e12 Ends With `2esn`})<-[?{@usn6:$0[0Xa..$123456789],`4esn`:`7esn` Contains 9e0}]->(`2esn` {`1esn`:$`4esn` Is Null Is Null}) Contains Single(`5esn` In `7esn`[$usn2..][$123456789..] Where 999 In #usn8 In $``) Desc With  *,$`7esn`[$_usn4][.e0],`5esn` Contains `1esn` Contains usn1 As `2esn` Order By `4esn` Contains 9e0 Desc,[@usn5 In 9e0 Ends With $#usn8 Where 12.e12 =~0X0123456789ABCDEF =~1.e1|00[$`1esn`..][@usn6..]] Is Not Null Asc Skip [`8esn`[0.e0..],1e1 Contains 's_str' Contains `3esn`] In [`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]] Limit $@usn6 =~#usn7 =~True Where 12.0 Is Null Union All With Distinct *,``[..False][..`3esn`],(@usn6 :`8esn`)<-[`4esn`?:`4esn`|@usn5 *01..123456789]-(:usn1:`3esn`{`8esn`:12 Starts With True Starts With 12e12,`8esn`:`2esn` Starts With $`7esn`}) Ends With #usn8(Distinct 12.e12 Contains #usn7 Contains $_usn4,01[`3esn`..][Count(*)..]) Ends With [`5esn`[..True][..0.e0],12 In $usn1 In 7,$`8esn`[123456789..][$@usn5..]] As `5esn` Order By $`1esn` Starts With $`4esn` Starts With $_usn3 Asc,01234567 In $@usn6 In $#usn7 Desc Skip 1000 Ends With `7esn` Limit usn2 Starts With .0 Return Distinct #usn7[`8esn`..usn1][$999..`7esn`] As #usn8,[#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`]][[`2esn` Is Null]][Extract(#usn7 In $999 In 1e1|01234567[Null..$_usn3])] As `8esn`,999 In #usn8 In $`` Order By 999[12.e12] Desc,07 Ascending,[`6esn` In $`6esn`[``..][Count(*)..] Where $`6esn`[1.e1][$_usn3]|$`5esn` Is Not Null Is Not Null][{`6esn`:usn2 =~usn1 =~Count ( * ),@usn5:999 Is Not Null Is Not Null}..] Desc Merge ``=(usn1 {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})<-[`4esn`?:`4esn`|@usn5 *01..123456789]-(#usn7 :`4esn`:`6esn`{`1esn`:`1esn`[$@usn6][07]}) On Match Set @usn5 ={`2esn`:'s_str'[0..],`7esn`:0Xa[Count(*)..]}[..None(#usn7 In $999 In 1e1 Where 123456789 =~@usn6)],`7esn` =None(usn2 In 7[12] Where 123456789 =~12 =~'s_str')[{@usn5:$`` Contains $`2esn` Contains $usn2}..][(`2esn` :`6esn`:_usn3)-[?:#usn8|:`3esn` *7..]-({`7esn`:9e12 =~@usn6})..]"),
    octest:ct_string("Unwind Any(@usn6 In False Contains 0 Contains $`6esn` Where 0.0 Is Null Is Null) =~{``:$`2esn`[0..123456789][``..`1esn`]} As `` Delete $`3esn`[.e1][_usn4],None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 9e12[$`5esn`..$123456789]) In Extract(@usn5 In 's_str'[0..] Where 07 Ends With 9e12 Ends With `2esn`|00[01234567][False]) In [12 =~usn1] Union Delete 123.654 In $`7esn` Return Distinct *,12.e12 Contains `6esn`,12[``...e12] As `6esn` Order By 's_str' Is Not Null Descending,123.654[`4esn`..12] Asc,[_usn3 In _usn3 Contains _usn4 Contains $@usn5] Contains [_usn4[$usn1..01234567][123.654..`5esn`]] Contains `4esn`(Distinct 07 In `6esn`) Ascending Union Unwind `4esn` Starts With 0e0 As `1esn` Remove {_usn3:_usn4 Is Null Is Null}.``,``(@usn6[`1esn`..]).`7esn`! Return Distinct 1.e1[..123456789][..999],_usn3[12.e12..][`5esn`..] As @usn6,[_usn3 In _usn3 Contains _usn4 Contains $@usn5] Contains [_usn4[$usn1..01234567][123.654..`5esn`]] Contains `4esn`(Distinct 07 In `6esn`) As `5esn` Order By 123456789 Contains 0Xa Descending,[@usn6 In False Contains 0 Contains $`6esn` Where usn1 Starts With 00|`5esn`[$`7esn`..$@usn5]] Is Not Null Is Not Null Desc,00[False..0e0] Ascending"),
    octest:ct_string("Return 010 Starts With $`` Starts With 0e0 As @usn5"),
    octest:ct_string("With  *,{`5esn`:`6esn`[$`8esn`][9e1]} Is Not Null Is Not Null Order By [0.12 Contains False Contains 1.e1,$12[$usn1..][Count(*)..]][{usn2:$@usn6 Ends With `1esn`,_usn3:`7esn`}..][{@usn6:1e1 Is Not Null Is Not Null,`8esn`:$`1esn` Starts With $`4esn` Starts With $_usn3}..] Desc,0.0[usn1..] Desc Delete 0X0123456789ABCDEF[0X7..$`2esn`][$`5esn`..$usn2],$`3esn` Ends With 1000,[$`5esn` =~usn1,True[`3esn`],@usn6[9e12]][Single(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null)..] Union All Return Distinct 12.e12 =~0X0123456789ABCDEF =~1.e1 As `6esn`,0.e0[..$7] As _usn3,usn1 Ends With 0.0 Order By None(`3esn` In 9e1 Contains $999 Where 0xabc In Null) Is Not Null Descending,.e0 Starts With $@usn6 Starts With $7 Descending Limit $@usn6[..12] Merge `3esn`=(((:`6esn`:_usn3{`8esn`:.e12[..999][..@usn5],`3esn`:$_usn3 Is Null})<-[? *0X7..]->(`5esn` :``:usn2{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3})-[_usn4]->(:`6esn`:_usn3{_usn3:usn1 Is Null Is Null,#usn8:9e1[$``..][0.e0..]}))) On Match Set `1esn` =[#usn7 In 9e0[$1000] Where .e1 In 123456789|.e12[..999][..@usn5]] In `5esn`(`1esn` Starts With 0X7 Starts With \"d_str\",9e1) In @usn5(Distinct `5esn` Contains $`5esn` Contains 0X7,True[..#usn8]) Detach Delete 999 Is Not Null Is Not Null"),
    octest:ct_string("Delete $#usn7[..0Xa],01 In $@usn6 With  `5esn`[..123.654][...e12] As @usn6,(`6esn` {_usn3:9e12 Starts With 1e1,_usn4:`2esn`[..$_usn3]})-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->({`1esn`:#usn7[0]}) Starts With Extract(`6esn` In $`6esn`[``..][Count(*)..] Where @usn5 Is Null|0xabc In 010 In #usn7) As `2esn`,{`2esn`:'s_str'[0..],`7esn`:0Xa[Count(*)..]}[..None(#usn7 In $999 In 1e1 Where 123456789 =~@usn6)] As `1esn` Order By None(#usn7 In 9e0[$1000] Where $``[True]) Ends With None(#usn8 In `7esn` Where $1000 Starts With $`7esn`) Ends With Single(#usn8 In `7esn` Where @usn5 Contains 9e0) Descending,@usn5[$`7esn`..`5esn`] Ascending,.0 Contains .e12 Contains 0 Asc Skip usn1 Limit `6esn`[$`8esn`][9e1] Where False Starts With 0X7 Starts With 01234567"),
    octest:ct_string("With  0x0[..9e0],Filter(`5esn` In 0X7 In $#usn7 Where 010 Is Null) Is Not Null As `2esn` Order By 1.e1[12..][$`4esn`..] Asc,Null[..010][..1000] Descending,Any(_usn4 In 12e12 In 123456789 Where _usn3 In $`8esn` In @usn6)[Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789])][All(@usn5 In 9e0 Ends With $#usn8)] Descending Limit 1.e1[12..][$`4esn`..] Where 07[$`2esn`..9e12][$`4esn`..9e12] Union All Create ((:`3esn`{`7esn`:0.e0['s_str'..][01234567..]})<-[#usn8 *0x0..]->(_usn3 :usn2{#usn8:$`2esn` Is Null,_usn3:123.654 Is Not Null})<-[?:usn1|`4esn` *1000..0X0123456789ABCDEF{`6esn`:.e0[999..1000][1e1..$`8esn`],`4esn`:00 Ends With `` Ends With 12.e12}]-({`1esn`:usn2 Contains $0 Contains .0,_usn4:$@usn6[.0..][0e0..]})),`2esn`=(((@usn6 :``:usn2{usn1:0x0[0X7],@usn5:`4esn`[.12][$@usn6]})<-[? *7..{`1esn`:.e12 Ends With 0Xa Ends With 0xabc}]->(#usn7 {`7esn`:`8esn` Contains Count(*) Contains $#usn7})<-[ *..07]->(`8esn` {`8esn`:$_usn4 Starts With 12.e12}))) Match (({`7esn`:usn1[False..`5esn`][$1000..$12],`1esn`:$usn1[`2esn`..][$`2esn`..]})) Unwind `4esn` Contains 9e0 As `8esn`"),
    octest:ct_string("Unwind $#usn8[@usn6..] As usn2 Merge ((`2esn` :_usn3{`8esn`:0.e0 Starts With .0 Starts With 123456789,usn2:$`4esn`[`8esn`]})) On Match Set `1esn` =All(@usn6 In 010[`5esn`] Where $@usn5 Ends With @usn5 Ends With 0xabc)[Extract(#usn7 In 9e1[$`1esn`..] Where 123.654 In $`7esn`)..[12.0 Starts With .12 Starts With `6esn`]],count(Distinct $`3esn`[..0X0123456789ABCDEF][..7])._usn3! =1.e1 Is Null Is Null With  0Xa In #usn7 In 's_str',`4esn` Starts With 0e0 As `7esn` Skip $1000 Is Not Null Limit 0X7['s_str'..][01..] Union All Unwind $@usn6 In @usn6 In 1e1 As #usn7 With  usn2[12.e12..] As `2esn`,$`2esn`[0..123456789][``..`1esn`],#usn8[`6esn`..][$``..] As `2esn` Skip $@usn6 Ends With `1esn` Limit 9e1 Ends With Count(*) Ends With $7 Delete $0[12.0...e1],_usn4[.12..$usn2][$_usn3..123.654],07[..07][..0X7] Union Detach Delete $@usn6 Ends With `1esn`,$123456789[0X0123456789ABCDEF],12[..0e0][...e1] Remove None(_usn4 In 12e12 In 123456789 Where 0x0 Starts With $`6esn`).`2esn`,(`5esn` :``:usn2)<-[?:`4esn`|@usn5{usn2:$@usn6[$`8esn`..][123456789..]}]->(:_usn4{`8esn`:01234567[Null..$_usn3]}).``?,Extract(usn2 In 7[12] Where .12[0X7..][12e12..]|0.0 Contains #usn7).`1esn` Optional Match @usn6=(`` :`3esn`{`6esn`:Count(*)[9e12..12.0]})-[:@usn5|_usn3 *00..0Xa]-(:usn2{`6esn`:`4esn` Starts With 0e0,`8esn`:usn2[12e12..]['s_str'..]})<-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->(_usn4 :@usn5) Where \"d_str\"[True..]"),
    octest:ct_string("With Distinct Extract(usn2 In 7[12] Where $@usn5[0.0][0X0123456789ABCDEF])[[#usn7 In 9e0[$1000] Where 01 Ends With 0Xa Ends With 0X7|`2esn`[$usn2][12.0]]..][Filter(#usn8 In `7esn` Where @usn6[999..$_usn3][0.12..$@usn5])..],{#usn8:12.0 Ends With `2esn`,@usn5:usn1 Starts With 00}[Any(#usn7 In True Contains 's_str' Contains $usn1 Where usn2 Contains $0 Contains .0)..],999 In 0e0 As #usn7 Order By `1esn` Starts With 9e1 Desc Where $@usn5[..$#usn7] Unwind Extract(@usn5 In 's_str'[0..] Where 12 In $usn1 In 7) =~All(`3esn` In `2esn`[..01][..True] Where $`7esn`[.e1][12.0]) As @usn5 Return Distinct Count ( * ) In True In @usn5 Skip 01234567[\"d_str\"..`4esn`] Limit 123.654 In $`6esn` Union Match _usn4=((`1esn` :#usn7:`5esn`{`1esn`:0e0 =~0Xa =~$999})),#usn8=(:`7esn`{_usn3:@usn5[0.0..0X7]}) Where 010 Is Null Is Null Union Unwind usn2 =~usn1 =~Count ( * ) As @usn6 Remove `6esn`:`6esn`:_usn3"),
    octest:ct_string("Create (`3esn` {_usn4:123.654 In 12})-[`4esn`?:_usn4 *7..]-(`1esn` :#usn8:`1esn`{`7esn`:@usn5 Starts With 9e0 Starts With 010,`6esn`:$#usn7 =~`2esn`})<-[ *00..0Xa]->(#usn7 :usn1:`3esn`),(:`8esn`{``:.e1 Starts With 12.e12 Starts With `2esn`})<-[?:`3esn`*..]-(usn2 :`1esn`:_usn4{usn2:999 Contains $1000})<-[`5esn`?{`8esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}]->(`3esn` :usn1:`3esn`{`1esn`:0X7[.0]}) Merge #usn7=({usn2:.12[0X7..][12e12..],`6esn`:$`4esn`[`6esn`..$12]})-[? *12..{usn2:$`8esn`[123456789..][$@usn5..]}]->(`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]}) Union Optional Match (`5esn` {`2esn`:`1esn`[0.0..1e1][0x0..7],#usn8:.e0}) Where #usn7[0.e0..]['s_str'..] Merge ((@usn6 :_usn4{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]})) On Match Set #usn7+=`1esn` Remove None(_usn4 In 12e12 In 123456789 Where 0x0 Starts With $`6esn`).`2esn`,(`5esn` :``:usn2)<-[?:`4esn`|@usn5{usn2:$@usn6[$`8esn`..][123456789..]}]->(:_usn4{`8esn`:01234567[Null..$_usn3]}).``?,Extract(usn2 In 7[12] Where .12[0X7..][12e12..]|0.0 Contains #usn7).`1esn` Union Delete 9e1[$`1esn`..]"),
    octest:ct_string("Remove `5esn`(.0 Is Null Is Null).usn1,Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5).@usn5?,{``:12 In $usn1 In 7,`1esn`:Count(*) Ends With usn1}.usn2? Union Merge `1esn`=((`2esn` :`1esn`:_usn4)-[?:``]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})) On Create Set #usn7+=.e0[..9e12][..07],`4esn`(True[$_usn3..],$999[``]).usn2 =123456789 Is Null Is Null,@usn5 =01[07..][1.e1..] On Create Set `5esn`+={#usn7:12e12 In $`5esn`} Ends With {`6esn`:12 =~usn1,_usn3:`6esn`[$`8esn`][9e1]},usn2 =True Contains 0x0 Contains $_usn3"),
    octest:ct_string("Merge #usn8=(`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})-[`3esn`]->(:@usn5{#usn7:12e12 In $`5esn`}) On Create Set Filter(usn2 In 7[12] Where $`6esn`[1.e1][$_usn3]).``? =0Xa[$`8esn`..][$_usn4..],_usn4+=0X0123456789ABCDEF In $7 On Match Set #usn7 =9e1[`1esn`..0][999..1e1],All(usn2 In False[$usn1][0x0] Where `2esn`[..01][..True]).`1esn`? =$usn2[`2esn`..$`1esn`],Single(_usn4 In 12e12 In 123456789 Where $`5esn` =~usn1).#usn7 =All(`5esn` In `7esn`[$usn2..][$123456789..] Where _usn4 Is Not Null) Detach Delete $`5esn` Starts With 0.0 Starts With .e0,Extract(#usn7 In 9e0[$1000] Where $`1esn` Starts With Count(*)|9e0 Ends With $#usn8)[(`` :`5esn`{@usn5:123456789 =~@usn6})<-[:@usn5|_usn3{#usn7:$123456789 Starts With 0.12 Starts With Null,usn1:.e1[..$`3esn`][..01]}]-(#usn7 :`3esn`{`3esn`:@usn5[0.0..0X7],@usn5:$#usn7 Starts With $`2esn`})<-[:`1esn`|`3esn` *0Xa{_usn4:``[9e12][$999],#usn8:123.654 In 12}]-(`7esn` {``:9e1 Contains $999,``:$usn2[True..0X0123456789ABCDEF]}).._usn3(Distinct 0x0 Contains $`6esn` Contains `4esn`,usn2[1.e1])][(:@usn6{usn2:$123456789 Contains $#usn8 Contains ``,_usn3:`3esn`[..0X0123456789ABCDEF][..0x0]})<-[`7esn`?:usn1|`4esn`]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})<-[:_usn4]->(:usn2{@usn5:07 Ends With 9e12 Ends With `2esn`})..[#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[`8esn`]|9e1 Is Null]],usn1[False..`5esn`][$1000..$12] Union Remove Extract(_usn4 In 12e12 In 123456789 Where .e1 Starts With 12.e12 Starts With `2esn`|$@usn5 Is Null Is Null).@usn5!,Extract(@usn6 In 010[`5esn`] Where $0[0Xa..$123456789]|#usn7[0.e0..]['s_str'..]).`8esn`?,(:#usn8:`1esn`$`7esn`)-[?:@usn6|:`7esn` *0X0123456789ABCDEF..{_usn4:0x0[12e12..$`7esn`]}]->({@usn5:Count(*) Is Not Null Is Not Null}).`5esn`?"),
    octest:ct_string("Delete 07 =~`4esn` =~$`1esn`,9e1 In 0X7 In Count(*) Delete 07[_usn3..][`6esn`..] Detach Delete [#usn7 In 9e1[$`1esn`..] Where $@usn5 In $`6esn` In 12e12|12.0 Is Null Is Null] Contains [`3esn` In `2esn`[..01][..True] Where $0 Ends With $usn1 Ends With $_usn3] Union All Delete Filter(`6esn` In $`6esn`[``..][Count(*)..] Where $7 In $usn1 In 999) Ends With Any(usn2 In 7[12] Where 0X7[.0]),$_usn3 Is Null Create @usn5=(((:usn2{`6esn`:`4esn` Starts With 0e0,`8esn`:usn2[12e12..]['s_str'..]})<-[:`2esn`|`4esn` *12..]-(_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]}))),_usn4=({usn2:.12[0X7..][12e12..],`6esn`:$`4esn`[`6esn`..$12]})-[? *12..{usn2:$`8esn`[123456789..][$@usn5..]}]->(`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]}) Unwind Extract(#usn7 In $999 In 1e1 Where `5esn`[..True][..0.e0]|$`5esn` =~$0 =~``) In (:`7esn`{#usn8:0Xa Ends With $`3esn` Ends With $1000})-[:`5esn`|:usn2 *01234567..]-(:`2esn`{_usn3:@usn5[0.0..0X7]}) In Extract(#usn7 In True Contains 's_str' Contains $usn1 Where 9e1[$#usn8][$1000]|999 Contains 0 Contains $`5esn`) As usn1 Union All Create `5esn`=(({@usn5:``[9e12][$999]})-[usn2{``:$`1esn` =~999}]-(:#usn7:`5esn`{`2esn`:12.e12 Contains 9e1,`5esn`:.e1 Starts With 12.e12 Starts With `2esn`})<-[:@usn6|:`7esn`{usn2:0x0 Starts With $`6esn`,_usn4:$`4esn`[`8esn`]}]-(@usn6 {@usn6:0e0 =~7 =~12.0})),((_usn3 :@usn5{`8esn`:1e1 Contains 's_str' Contains `3esn`})<-[? *..010{`2esn`:'s_str'[0..]}]->(_usn3 :`5esn`))"),
    octest:ct_string("Create ((({`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12})<-[ *7..{#usn7:$`8esn`[12.e12][_usn4],`2esn`:$0[123.654..0.e0]}]-(`` :#usn8:`1esn`{`8esn`:12[$`5esn`..][False..]})-[`3esn` *..07{usn2:True Contains 0x0 Contains $_usn3}]-({``:``[$`3esn`],#usn8:$@usn6[00]}))),`5esn`=(({usn2:.0 Starts With `1esn`,`2esn`:00 Contains Count ( * ) Contains 0x0})<-[usn1?:`1esn`|`3esn` *01234567..{@usn5:`4esn`[\"d_str\"]['s_str']}]-({`7esn`:9e0 Contains $12 Contains `3esn`,`5esn`:.e0 Contains $#usn8})) Optional Match `3esn`=(((:`6esn`:_usn3{`8esn`:.e12[..999][..@usn5],`3esn`:$_usn3 Is Null})<-[? *0X7..]->(`5esn` :``:usn2{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3})-[_usn4]->(:`6esn`:_usn3{_usn3:usn1 Is Null Is Null,#usn8:9e1[$``..][0.e0..]}))),usn2=(:#usn8:`1esn`$`7esn`) Where 123456789 Is Null Is Null Merge `8esn`=(((#usn8 :``:usn2)-[`3esn`:`2esn`|`4esn`]-({#usn8:False Starts With 0X7 Starts With 01234567})<-[@usn5? *0xabc{`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]}]->(@usn6 :``:usn2{usn1:0x0[0X7],@usn5:`4esn`[.12][$@usn6]}))) On Match Set Any(#usn8 In `7esn` Where $`3esn` Contains $`1esn`).`8esn`? =0x0 Contains $`6esn` Contains `4esn`,Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where False[$usn1][0x0]|@usn5[0.0..0X7]).usn2! =Single(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where @usn6 In .12 In `3esn`) Contains {usn2:.12[123.654..],`2esn`:`8esn`[$`4esn`..$#usn8]} Contains All(#usn7 In $999 In 1e1 Where 9e12 Starts With 1e1),`3esn` =12.e12[..$999][..07] On Match Set usn1 =_usn4 Is Not Null,`3esn` =usn1[...e12][..1.e1] Union Remove Any(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $123456789 In 0.12).#usn8?,[`5esn` In `7esn`[$usn2..][$123456789..] Where 12e12 Is Not Null|$#usn7 Starts With 01234567 Starts With $0].`7esn`,(`4esn` :@usn6)-[`8esn`{`7esn`:9e12 Starts With 1e1}]-(_usn3 :_usn4).`4esn`"),
    octest:ct_string("Remove Single(`3esn` In `2esn`[..01][..True] Where 9e12[9e1]).`2esn`?,`2esn`($7 In $usn1 In 999,'s_str' Contains 12.e12 Contains $`4esn`).`3esn`! Unwind 0X7[..$`8esn`] As `1esn` With Distinct `2esn`($`2esn`[..$`3esn`][..12e12])[usn1($0[123.654..0.e0])..'s_str'][.e12..Single(#usn7 In $999 In 1e1 Where _usn4 Is Not Null Is Not Null)] As `3esn`,usn1 Ends With 0.0 Order By $`3esn`[$_usn4..0Xa] Desc,$`1esn` Ends With 0X0123456789ABCDEF Ascending,$@usn5 Ends With @usn5 Ends With 0xabc Descending Where #usn8 =~0.e0"),
    octest:ct_string("With Distinct *,{@usn6:$`3esn`[.e1][_usn4]}[`8esn`(Distinct $``[True])..] As #usn8,999[12e12..$_usn4] As usn2 Where `6esn`[$1000][`3esn`] Detach Delete `1esn` Starts With 0X7 Starts With \"d_str\",\"d_str\" Is Not Null Is Not Null,_usn4 Starts With `` Starts With 1000 Unwind $`6esn`[0e0..][010..] As `7esn` Union Detach Delete Extract(#usn8 In `7esn` Where ``[7.._usn3]|@usn5 Is Null) Is Not Null Is Not Null,010 Starts With $`` Starts With 0e0 Return 12e12[0x0..12.e12] As `1esn`,.e1[7..][9e0..] As `4esn`,$#usn8 Starts With .e12 Starts With 1.e1 As `8esn` Order By $`5esn` In `2esn` In `2esn` Asc,0.0[..Count ( * )][..`1esn`] Ascending,[9e1 Ends With Count(*) Ends With $7,False[$usn1][0x0]] =~`2esn`(Distinct .12[01][@usn5],Count ( * ) Ends With $123456789) =~[@usn6 In False Contains 0 Contains $`6esn` Where $`8esn`[12.e12][_usn4]|12 Ends With Count ( * )] Ascending Union Detach Delete [#usn8 In `7esn` Where .e0 Is Null Is Null] Ends With {usn1:$`4esn`[`6esn`..$12],`4esn`:usn1 Contains 010} Ends With (:``:usn2{``:True[$_usn3..]})<-[`2esn`? *01..123456789]-(`1esn` {#usn8:$#usn7[..9e0][..123.654],`5esn`:9e12 Starts With 1e1})<-[?:#usn8|:`3esn`{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]-(`1esn` $`4esn`),Extract(`6esn` In $`6esn`[``..][Count(*)..] Where 1.e1 Ends With $_usn4 Ends With #usn7|0xabc =~$@usn5) Contains {`5esn`:1.e1[`8esn`],`1esn`:.e0} Contains {usn1:$123456789 In 0.12} Match _usn4=((`1esn` :#usn7:`5esn`{`1esn`:0e0 =~0Xa =~$999})),#usn8=(:`7esn`{_usn3:@usn5[0.0..0X7]}) Where 010 Is Null Is Null Remove `3esn`(Distinct 123.654 Starts With 0X7 Starts With $`4esn`).``!,Any(_usn4 In 12e12 In 123456789 Where True Contains 's_str' Contains $usn1).`2esn`,Filter(`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]).@usn5?"),
    octest:ct_string("With  *,12 Ends With True Ends With @usn6,Filter(`5esn` In 0X7 In $#usn7 Where 010 Is Null) Is Not Null As `2esn` Order By $#usn8[True][9e0] Asc,All(#usn7 In 9e0[$1000] Where 01 Ends With 0Xa Ends With 0X7) Contains `2esn`(Distinct 0x0[0.0],0Xa =~False =~@usn5) Contains Single(#usn7 In $999 In 1e1 Where $@usn6 =~#usn7 =~True) Descending Limit $`5esn`[$`3esn`..] Union Return Distinct .0 Starts With `1esn` As #usn7,Single(#usn7 In True Contains 's_str' Contains $usn1 Where `7esn`) Ends With [0Xa Ends With $`3esn` Ends With $1000] Ends With {usn1:0x0[0X7],@usn5:`4esn`[.12][$@usn6]} As usn2,$@usn5[..$#usn7] Limit None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $0[123.654..0.e0])[Extract(#usn7 In 9e0[$1000] Where .e1 In 123456789)][{_usn3:01[`8esn`..9e12][.12..0]}] Unwind `7esn` Is Null As @usn5 Union All With Distinct *,$@usn6 Ends With 12.e12 Ends With @usn5 As `3esn` Order By .e0 Starts With $@usn6 Starts With $7 Descending Limit All(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where False[$usn1][0x0]) In [#usn7 In 9e1[$`1esn`..] Where @usn5 Is Null|9e12[9e1]] In [12.0 Is Null,$_usn4[..$_usn4][..`7esn`]] Detach Delete $`8esn`[999],usn2 Ends With $`4esn` Return Distinct *,True In (#usn8 :`6esn`:_usn3)<-[`2esn`?:_usn4{#usn8:$12[9e0..$999]}]->({``:.e1 Starts With 12.e12 Starts With `2esn`}) As `5esn`,Single(usn2 In False[$usn1][0x0] Where $@usn6 Is Not Null Is Not Null) =~[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07 Is Not Null Is Not Null]"),
    octest:ct_string("Remove (:`8esn`{@usn5:usn2 Ends With .e1 Ends With $`5esn`})<-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->(usn2 :`5esn`).`8esn`!,{#usn8:$`2esn` Is Null,_usn3:123.654 Is Not Null}.``,{``:0Xa =~False =~@usn5,`6esn`:$`2esn` Starts With `4esn` Starts With $usn1}.@usn5 Unwind [`8esn`[0.e0..],1e1 Contains 's_str' Contains `3esn`] In [`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]] As usn2 Match #usn7=(`1esn` :@usn6{`6esn`:00[False..0e0],`6esn`:$usn2 =~1.e1 =~usn1})<-[`7esn`:`2esn`|`4esn`{_usn4:.e1[7..][9e0..]}]-(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"})-[:_usn3|:`7esn`*{`1esn`:12[..$999][..$`2esn`],usn2:9e1}]->(:``:usn2{`5esn`:$12 Starts With $usn1}),((_usn3 :usn2)) Union Delete $`6esn` Is Not Null Is Not Null,@usn5 Starts With 9e0 Starts With 010 Return Extract(#usn8 In `7esn` Where $`5esn` In _usn3 In 0.0),None(#usn7 In True Contains 's_str' Contains $usn1 Where 00[12..$`6esn`]) Ends With None(#usn7 In 9e0[$1000] Where 1e1 Contains 0.e0 Contains 9e1) Order By 123456789 =~$999 Asc Skip $`4esn`[..$`8esn`][..Null] Unwind {``:0.0 =~9e0 =~$0} Contains [@usn5 In 9e0 Ends With $#usn8 Where `7esn`[$usn2..][$123456789..]|0Xa[Count(*)..]] As ``"),
    octest:ct_string("Merge @usn6=(:`7esn`)<-[`1esn`?:usn1|`4esn` *..010]-(usn1 :_usn4{`4esn`:`7esn` Is Null}) Create `3esn`=((:#usn8:`1esn`$`7esn`)<-[`1esn` *999..{`1esn`:1e1 Contains 's_str' Contains `3esn`}]-(usn1 {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(#usn7 :``:usn2)),usn2=(`3esn` {usn2:$usn2[`4esn`..9e12]}) Union All Delete $`1esn` Contains 1e1 Contains @usn6,{_usn4:`1esn` Is Not Null Is Not Null,@usn5:0.12[$0..$usn2]} Is Not Null Is Not Null,`7esn`(Distinct `1esn` Starts With 0xabc Starts With $usn2)[({`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12})-[`6esn`?:@usn5|_usn3 *01234567..]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})..]"),
    octest:ct_string("Match (:_usn4)<-[`5esn` *0xabc]->(`` :`6esn`:_usn3)-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01}),`7esn`=((_usn3 :`7esn`)) Where 12 Starts With True Starts With 12e12 Union Unwind None(#usn7 In $999 In 1e1 Where `1esn`[0.12..][@usn6..])[..[_usn4 In 12e12 In 123456789 Where 1.e1 =~$_usn4]] As `4esn`"),
    octest:ct_string("Return *,None(#usn8 In `7esn` Where 9e1 Starts With Count ( * )) In (:`2esn`{``:07[$`2esn`..9e12][$`4esn`..9e12],`3esn`:$`6esn` Starts With .e12 Starts With $`1esn`})-[?{`5esn`:$`2esn`[.0..][0.0..]}]->(:usn2{@usn5:07 Ends With 9e12 Ends With `2esn`})-[`` *1000..0X0123456789ABCDEF]->(:_usn4{`8esn`:01234567[Null..$_usn3]}),Extract(#usn8 In `7esn` Where $`5esn` In _usn3 In 0.0) As #usn8 Order By .e12 In $`5esn` In 0X7 Descending,$usn2[`2esn`..$`1esn`] Desc Limit $123456789[0.12..] Delete usn2 Is Not Null,{`1esn`:$999[``],@usn5:#usn7 Starts With $123456789 Starts With 12e12}[(_usn3 :`7esn`)-[`2esn`? *1000..0X0123456789ABCDEF{`8esn`:$7 In $usn1 In 999,@usn5:00 Ends With `` Ends With 12.e12}]-(:usn2{`5esn`:True[0xabc..01234567][$`8esn`..$@usn6]})..] Union Optional Match usn2=((usn1 {_usn3:9e0[0X7..$`6esn`][123456789..0],`3esn`:123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]})-[:`6esn`|:#usn8{_usn4:0Xa Ends With $`3esn` Ends With $1000}]->(:`5esn`{`4esn`:0Xa[..Count ( * )][..$123456789]})),`2esn`=(((_usn3 :`1esn`:_usn4{#usn8:$999 Ends With .e0,_usn4:`4esn`[\"d_str\"]['s_str']})-[`4esn`?*..{``:`` =~.12,usn1:123.654 Is Not Null}]-(@usn6 :`4esn`:`6esn`{``:999 Contains 0 Contains $`5esn`,`6esn`:_usn3[12.e12..][`5esn`..]})-[:@usn6|:`7esn`{#usn7:.0[.e12..],usn2:usn2 =~usn1 =~Count ( * )}]->({usn2:@usn6 In .12 In `3esn`,`1esn`:usn2[12e12..]['s_str'..]}))) Where 00 Ends With `` Ends With 12.e12 Remove `5esn`:_usn4 Union With Distinct Single(usn2 In False[$usn1][0x0] Where $@usn6 Is Not Null Is Not Null) =~[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07 Is Not Null Is Not Null],010 Is Null Is Null As #usn8,All(`3esn` In `2esn`[..01][..True] Where usn2[12.e12..])[Any(#usn8 In `7esn` Where .e0 Is Null Is Null)..Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 1e1 Contains 0.e0 Contains 9e1|12.e12 Ends With $``)][{`5esn`:False[$usn1][0x0]}..`8esn`(Distinct .e0[01234567..$`8esn`])] As `8esn` Order By $_usn3[_usn4..] Asc,0.12 Is Null Is Null Desc,`6esn` Ends With _usn4 Ends With False Ascending Skip 1.e1 =~.12 Limit `1esn`[$@usn6][07] Create ``=(`3esn` :_usn4),((_usn3 :@usn5{`8esn`:1e1 Contains 's_str' Contains `3esn`})-[?:`2esn`|`4esn`{@usn5:0.e0}]-(`1esn` $`4esn`))"),
    octest:ct_string("Unwind $_usn3 Is Not Null Is Not Null As `1esn` Merge (((:`5esn`{`4esn`:0Xa[..Count ( * )][..$123456789]})-[`8esn`?:`5esn`|:usn2 *01..123456789{`7esn`:`6esn`,`4esn`:'s_str' Starts With 9e0 Starts With usn2}]-({`7esn`:9e12 =~@usn6})<-[ *0x0..]->(`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12}))) Union All Detach Delete @usn6[..$@usn5]"),
    octest:ct_string("Delete [_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $12[$usn1..][Count(*)..]|0e0 =~7 =~12.0] Is Null Is Null,$7[999][usn1] Optional Match (({`3esn`:_usn3[0x0],`3esn`:00[False..0e0]})<-[_usn4?:@usn6|:`7esn`]-({`3esn`:_usn3[0x0],`3esn`:00[False..0e0]})<-[_usn3?:_usn3|:`7esn`]->(`3esn` {`8esn`:`7esn` In 010 In usn1})) Return _usn4[@usn6..][$0..],[$usn2 =~1.e1 =~usn1,$usn1 Starts With usn1 Starts With True,$1000 Starts With $`3esn` Starts With 0.e0] In (`3esn` {`8esn`:`5esn` Contains #usn7 Contains 9e12})<-[`8esn`{`1esn`:123456789 =~@usn6,`1esn`:$`5esn`[0X7..010][`7esn`..'s_str']}]-(`4esn` :#usn8:`1esn`{`7esn`:.0[..'s_str'][..01234567],@usn6:False[..$`5esn`][..1e1]}) In None(`3esn` In 9e1 Contains $999 Where 12.0 Starts With .12 Starts With `6esn`),@usn5 Contains #usn8 Contains 12.0 As `4esn` Limit Any(#usn7 In $999 In 1e1 Where _usn4 Is Not Null Is Not Null) Is Null Union With  9e1[usn1..0x0][12.e12..12.0] Order By $@usn6[$0..9e12][.e12..Null] Desc,.e0 Is Not Null Is Not Null Desc,usn2[..$usn1][..$#usn8] Asc Skip $7 Ends With Count ( * ) Where 's_str' Starts With 9e0 Starts With usn2 Unwind `` Is Not Null Is Not Null As _usn4 Optional Match (usn2 :``:usn2) Where @usn6 Is Not Null Is Not Null"),
    octest:ct_string("Match ((_usn3 {#usn7:12.e12 Ends With `` Ends With 0,``:$@usn6 In @usn6 In 1e1})<-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(:`8esn`{``:$`1esn` =~999})),`8esn`=(:`3esn`{_usn3:1e1 Is Not Null Is Not Null,`2esn`:$usn1 Starts With usn1 Starts With True})-[_usn4 *01234567..{@usn5:0xabc =~$@usn5,usn1:0Xa[$`8esn`..][$_usn4..]}]->(`5esn` :`4esn`:`6esn`)-[?:usn2{#usn7:0 =~1.e1 =~$#usn7}]->(`8esn` $12) Create ((`7esn` :`2esn`{`4esn`:0[1e1][$usn1],usn2:`8esn`[..$#usn8]})<-[_usn4?:usn2]-(@usn6 :`6esn`:_usn3{@usn5:0xabc =~$@usn5,usn1:0Xa[$`8esn`..][$_usn4..]})-[`3esn`?:`7esn`|:`2esn`]-(`5esn` :#usn8:`1esn`{_usn3:`6esn` Is Null Is Null})),(:_usn4{_usn3:$#usn7[..0Xa],@usn5:12e12 In 123456789}) Unwind $_usn3 Is Not Null Is Not Null As `3esn` Union Unwind 123.654 Contains @usn5 Contains $`5esn` As `6esn` Detach Delete 123.654[..0.e0][..'s_str']"),
    octest:ct_string("Unwind 12.e12 Starts With 1000 As `` Union All Merge (_usn3 :`7esn`)-[*..{``:.e1 Starts With 12.e12 Starts With `2esn`}]-(#usn7 :_usn3) On Create Set Extract(`3esn` In `2esn`[..01][..True] Where 00[01234567][False]|12[$`5esn`..][False..]).`2esn`! =12.e12 Ends With $``"),
    octest:ct_string("Optional Match ``=(`5esn` {`2esn`:`1esn`[0.0..1e1][0x0..7],#usn8:.e0}) Remove Any(#usn7 In 9e1[$`1esn`..] Where 1.e1[12.e12..]).@usn6?,@usn5(Distinct Count ( * ) Ends With $123456789).`6esn`? Unwind 00[False..0e0] As `6esn`"),
    octest:ct_string("Create `7esn`=((:#usn8:`1esn`$`7esn`)<-[`1esn` *999..{`1esn`:1e1 Contains 's_str' Contains `3esn`}]-(usn1 {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(#usn7 :``:usn2)) Delete $_usn4[9e0..][$1000..] Union All Return 123456789 =~$999 Order By $7[01..$123456789][#usn7..12.0] Descending,.12[..usn2][..12e12] Descending Merge `8esn`=((#usn8 :_usn3)<-[`8esn`?:#usn7|@usn5{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3}]-(`` :usn1:`3esn`))"),
    octest:ct_string("Delete $#usn7[..$`4esn`][..01],Filter(@usn5 In 9e0 Ends With $#usn8 Where 07 Is Null) =~{#usn7:1000[12e12][`5esn`]} Union All Unwind $#usn7 Ends With 's_str' Ends With 0X7 As usn1 Remove All(`6esn` In $`6esn`[``..][Count(*)..] Where $#usn7 Ends With 's_str' Ends With 0X7).`2esn`!,(`3esn` {`3esn`:$@usn6 Is Not Null Is Not Null,`1esn`:12e12 =~1e1})<-[:@usn5|_usn3{#usn7:$123456789 Starts With 0.12 Starts With Null,usn1:.e1[..$`3esn`][..01]}]-(#usn7 :`3esn`{`3esn`:@usn5[0.0..0X7],@usn5:$#usn7 Starts With $`2esn`})<-[ *01234567..]->(:`8esn`{``:.e1 Starts With 12.e12 Starts With `2esn`}).usn2,@usn6:_usn4 Unwind $@usn6 Ends With 123456789 Ends With 12.0 As _usn3 Union All With  *,$`5esn` Is Not Null,usn2 Contains $0 Contains .0 Order By 12.0 Ends With `2esn` Ascending,01234567[$0..][0..] Descending,$12 In True In 1.e1 Desc Skip 9e0[Count(*)..0.12][$`1esn`..12.0] Where `7esn` Return *,0e0 Ends With 07 Ends With $`8esn` As `6esn` Order By {`4esn`:999 In 0e0,`6esn`:0.e0['s_str'..][01234567..]} Contains Single(`8esn` In 123456789 =~@usn6 Where 12.e12 Ends With `` Ends With 0) Ascending,$`4esn` In 1.e1 In #usn7 Desc Skip 0X0123456789ABCDEF In $usn2 In `4esn` Limit Extract(`3esn` In `2esn`[..01][..True] Where 0.0 Is Null Is Null|$usn2[0.e0])[{usn2:@usn5 Is Null,`8esn`:$@usn6 Ends With 123456789 Ends With 12.0}..]"),
    octest:ct_string("With  01234567 Starts With True Starts With $999 As `6esn`,usn2[..$usn1][..$#usn8] As `8esn` Limit $`5esn` Is Not Null Is Not Null Where usn1 Starts With 00 Create `8esn`=(((#usn7 {`6esn`:$`2esn` Contains Count(*)})<-[#usn8{`5esn`:$@usn5 In 12e12 In 01}]->(@usn6 {`5esn`:.e12 Starts With $#usn8 Starts With False})<-[`8esn`{`1esn`:123456789 =~@usn6,`1esn`:$`5esn`[0X7..010][`7esn`..'s_str']}]->(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}))) Union All With  *,#usn7[``] As usn1,None(#usn7 In $999 In 1e1 Where 123456789 =~@usn6) =~Single(`3esn` In 9e1 Contains $999 Where .12 In `8esn` In $#usn8) =~(`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[`5esn`?{_usn4:$usn2 =~9e1}]->(`8esn` :#usn8:`1esn`{usn2:12.e12 Ends With $``,`2esn`:1e1 Contains 's_str' Contains `3esn`})-[`` *1000..0X0123456789ABCDEF]-(:usn1:`3esn`{_usn3:$`6esn`[1.e1][$_usn3]}) Order By $@usn6 In @usn6 In 1e1 Desc,.e1[..$`3esn`][..01] Desc Limit _usn3 Is Null Is Null Merge ((usn2 :`5esn`{`7esn`:0.12 Starts With $`8esn` Starts With @usn5})<-[usn1:`7esn`|:`2esn`{`6esn`:Count(*) In #usn8 In \"d_str\",`1esn`:$`1esn` Ends With 0X0123456789ABCDEF}]-(#usn8 :usn2{@usn5:$#usn7[..9e0][..123.654],`2esn`:7[12]})<-[ *..07{`5esn`:999 In 0e0}]-(_usn4 :`8esn`)) Return Distinct *,Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 1e1 Contains 0.e0 Contains 9e1|12.e12 Ends With $``) Is Null Is Null Order By Extract(#usn7 In 9e1[$`1esn`..] Where $999[``]) Starts With (`6esn` :@usn6)<-[ *..07]-(:_usn3{`7esn`:9e0 Ends With $#usn8}) Starts With (#usn7 :@usn6)<-[? *01..123456789]-(`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]}) Ascending,$@usn5[..$#usn7] Descending,{`3esn`:.e1[..\"d_str\"][..$123456789]} Descending Skip 9e1 Starts With Count ( * ) Limit {`1esn`:$999[``],@usn5:#usn7 Starts With $123456789 Starts With 12e12}[(_usn3 :`7esn`)-[`2esn`? *1000..0X0123456789ABCDEF{`8esn`:$7 In $usn1 In 999,@usn5:00 Ends With `` Ends With 12.e12}]-(:usn2{`5esn`:True[0xabc..01234567][$`8esn`..$@usn6]})..] Union All With  `1esn`[`3esn`..],(`3esn` {usn2:00[False..0e0]})<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(:`5esn`{#usn8:$``[True],`1esn`:@usn5 Is Null})<-[@usn6?:`8esn` *0..01]->(`5esn` :`4esn`:`6esn`)[[12.0 Starts With $`2esn` Starts With .e1]..] Skip 07 In 0Xa In usn1 Limit 010 Is Null Remove {_usn3:_usn4 Is Null Is Null}.``,(`1esn` )<-[@usn5?{`7esn`:0.0 Contains #usn7,`6esn`:@usn5[0.0..0X7]}]->(`` {`7esn`:.e0 Is Not Null Is Not Null,@usn6:.e1[..$`3esn`][..01]})<-[usn2 *0X0123456789ABCDEF..]->(usn2 :`7esn`).#usn7?,[$#usn8[@usn6..]].`6esn`? Merge _usn3=((@usn5 {usn2:.12[0X7..][12e12..],`6esn`:$`4esn`[`6esn`..$12]})-[@usn6:`5esn`|:usn2 *0xabc{#usn8:999 In 0e0}]-(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]})-[#usn7 *01..123456789]->(usn1 {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})) On Create Set (:`2esn`{`3esn`:9e1 Ends With Count(*) Ends With $7})-[#usn7?{`5esn`:.e12 Starts With $#usn8 Starts With False}]->(usn1 :`7esn`).`4esn` =1.e1[$`3esn`][0Xa],(`6esn` {`3esn`:.0[$``..0X7],`3esn`:$usn2 Is Not Null Is Not Null})<-[`5esn`?:@usn5|_usn3{``:0.0 =~9e0 =~$0}]-(:@usn5{`1esn`:999 Is Not Null Is Not Null,``:.e1[7..][9e0..]}).usn2 =$`4esn` Starts With 0 Starts With `7esn`,usn2+=`2esn`[..01][..True]"),
    octest:ct_string("With Distinct *,12e12[12e12][$#usn7] Order By {`3esn`:.e1[..\"d_str\"][..$123456789]} Descending,010[..7][..`4esn`] Desc,12e12 Is Not Null Ascending Skip None(#usn7 In 9e1[$`1esn`..] Where 1.e1[12.e12..]) Contains [$`2esn` Ends With `6esn`,9e1[..123456789]] Contains [12.0 In 123.654 In _usn4] Where False[..$`5esn`][..1e1] Union All With Distinct 12e12 Is Not Null Order By Any(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $`6esn`[``..][Count(*)..])[[$`2esn` =~9e12,`6esn` Is Null Is Null,usn2 Is Not Null]] Descending Skip 12 Contains 01234567 Limit @usn5 Is Not Null Optional Match (((`` $`6esn`)<-[usn2*{_usn3:0.e0[0X0123456789ABCDEF..],`8esn`:$`5esn` In 07 In 00}]-(`3esn` {`8esn`:`5esn` Contains #usn7 Contains 9e12})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]}))),(((`` $`6esn`)<-[usn2*{_usn3:0.e0[0X0123456789ABCDEF..],`8esn`:$`5esn` In 07 In 00}]-(`3esn` {`8esn`:`5esn` Contains #usn7 Contains 9e12})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(usn1 :`5esn`{#usn7:0.12[$0..$usn2],`2esn`:.e12[$@usn6..00][01234567.._usn3]}))) Where 9e12 Starts With 1e1 Merge `8esn`=((_usn3 :_usn4))"),
    octest:ct_string("Optional Match _usn4=(((`2esn` )-[?{_usn3:01[`8esn`..9e12][.12..0]}]->(`8esn` {@usn5:#usn7[..07],usn2:999 Contains 0 Contains $`5esn`})<-[``?{usn2:$7 In 0.e0 In 999,usn1:'s_str' Starts With 9e0 Starts With usn2}]->(_usn3 :`5esn`))),((:`4esn`:`6esn`{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7})<-[`8esn`?:`5esn`|:usn2 *01..123456789{`7esn`:`6esn`,`4esn`:'s_str' Starts With 9e0 Starts With usn2}]->({@usn6:12.e12 Contains #usn7 Contains $_usn4,usn2:$`5esn` =~$0 =~``})-[#usn7 *01..123456789]->(:`6esn`:_usn3{``:usn1 Ends With 9e0 Ends With 9e0,`5esn`:$`7esn`[.e1][12.0]})) With Distinct 0Xa In $`6esn` As `2esn`,count(Distinct $@usn6 Ends With 123456789 Ends With 12.0,$`2esn`[.0..][0.0..]) Is Not Null Is Not Null,12[0e0] As `5esn` Skip (`2esn` :_usn3{`8esn`:01234567[Null..$_usn3]})<-[?:usn2{usn2:@usn5 Is Not Null}]-(`7esn` {#usn8:False Starts With 0X7 Starts With 01234567}) =~[12 In $usn1 In 7] =~Filter(@usn5 In 's_str'[0..] Where 0.e0) Limit .e0[$`8esn`..][1000..] Union All Merge `1esn`=((#usn8 :`6esn`:_usn3)<-[@usn5?:``{`3esn`:010 Is Null Is Null,`5esn`:_usn4 Contains `` Contains 1.e1}]-(:@usn6{`7esn`:$`6esn`[``..][Count(*)..]})) On Match Set `` =$``[..\"d_str\"][..$#usn8],Any(#usn7 In 9e0[$1000] Where 's_str'[0x0..1.e1]).usn2? =9e1[..123456789],@usn5+=[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 12.e12 Starts With \"d_str\" Starts With 9e1|$#usn7 Contains $`7esn` Contains .e12][#usn8(Distinct $_usn4 Is Null Is Null,01[`8esn`..9e12][.12..0])..[_usn4 In 12e12 In 123456789 Where Count ( * ) Ends With $123456789]][Filter(_usn4 In 12e12 In 123456789 Where $`5esn` =~usn1)..[$`5esn` In _usn3 In 0.0]] On Match Set (`3esn` {usn2:$usn2[`4esn`..9e12]})<-[{_usn4:1.e1[`8esn`]}]->(:@usn6$usn1).#usn7! =_usn4 Starts With `` Starts With 1000,Extract(`3esn` In `2esn`[..01][..True] Where 0X7[..$`8esn`]|$#usn7 Starts With 01234567 Starts With $0).`5esn`! =@usn6(Count ( * ) In True In @usn5)[None(#usn7 In True Contains 's_str' Contains $usn1 Where usn2 Contains $0 Contains .0)..Single(#usn7 In $999 In 1e1 Where _usn4 Contains `` Contains 1.e1)] Union All Return *,False Is Null Order By 0X7[..$`8esn`] Desc,[@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str']|$`3esn`[..0xabc][..$7]] Is Null Ascending,12.e12 Ends With `` Ends With 0 Desc Skip Any(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 0xabc In 123456789 In 0x0)[..{`5esn`:0Xa[$`8esn`..][$_usn4..],_usn3:00[$usn1..]}][..Any(@usn6 In 010[`5esn`] Where 1.e1[$usn1])] Unwind 9e1 =~123456789 =~999 As @usn5 Merge ((_usn3 :usn2)) On Match Set Any(#usn8 In `7esn` Where $`5esn` In _usn3 In 0.0).`5esn`! =.e12 Ends With 0Xa Ends With 0xabc On Match Set `5esn`(Distinct .12[123.654..]).`3esn` =01234567 In 123456789 In 12,`6esn` =[@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str']|$`3esn`[..0xabc][..$7]] Is Null"),
    octest:ct_string("With Distinct [`5esn`[$`7esn`..$@usn5],$#usn7[..9e0][..123.654],1.e1 Is Null Is Null] Ends With Any(`6esn` In $`6esn`[``..][Count(*)..] Where 07 Contains `3esn` Contains `7esn`) Order By None(`8esn` In 123456789 =~@usn6 Where True[`3esn`]) Is Not Null Is Not Null Desc Skip {`4esn`:999 In 0e0,`6esn`:0.e0['s_str'..][01234567..]} Contains Single(`8esn` In 123456789 =~@usn6 Where 12.e12 Ends With `` Ends With 0) Limit `6esn` Is Null Is Null Merge (`2esn` :`1esn`:_usn4)-[?*..]-({`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}) On Create Set @usn6+=$#usn7 Ends With 's_str' Ends With 0X7,`6esn` ={`3esn`:12 Starts With #usn7 Starts With 0Xa} Is Null Is Null,usn2 =$@usn5 Ends With @usn5 Ends With 0xabc With Distinct $12 Starts With $0 Starts With $`8esn`,9e1[usn1..0x0][12.e12..12.0] As usn1,$``[..\"d_str\"][..$#usn8] As `6esn` Union Merge (({`7esn`:0xabc In Null,_usn4:.e12[0Xa..]})<-[usn1?:`1esn`|`3esn` *01234567..{@usn5:`4esn`[\"d_str\"]['s_str']}]-({`7esn`:9e0 Contains $12 Contains `3esn`,`5esn`:.e0 Contains $#usn8})) Union All Return *,[`8esn`[..$#usn8],1.e1 Starts With 9e12] Ends With [`6esn` In $`6esn`[``..][Count(*)..]|.e1[12.0..]] Ends With Any(usn2 In 7[12]),$`6esn` Starts With .e12 Starts With $`1esn` As @usn6 Skip $`5esn`[$`3esn`..] Limit Single(@usn6 In 010[`5esn`] Where Count(*)[9e12..12.0])[(`2esn` {``:$0 =~9e1 =~$`2esn`,`8esn`:`5esn`[..123.654][...e12]})<-[:`1esn`|`3esn`{`2esn`:$`3esn` Ends With 01234567}]->(_usn3 :`5esn`)][`7esn`] Remove count(Distinct .e12[..999][..@usn5]).usn2!,[@usn6 In 010[`5esn`] Where 010 Is Null Is Null].`3esn`,Single(@usn6 In False Contains 0 Contains $`6esn` Where $`8esn`[12.e12][_usn4]).`7esn`"),
    octest:ct_string("With  *,'s_str'[0x0..1.e1] As `6esn` Where 07[_usn3..][`6esn`..]"),
    octest:ct_string("With Distinct Filter(#usn7 In $999 In 1e1 Where 9e12[..1e1][..'s_str'])[..Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|0 Ends With 12.e12 Ends With usn2)][..None(#usn7 In $999 In 1e1 Where `1esn`[0.12..][@usn6..])] As @usn6,$`1esn`[Null][True] As usn2,0X7 In $#usn7 Order By 01 Ends With 0Xa Ends With 0X7 Desc,$12 =~0X7 =~0x0 Ascending Skip `7esn`(Distinct `1esn` Starts With 0xabc Starts With $usn2)[({`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12})-[`6esn`?:@usn5|_usn3 *01234567..]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})..] Where 00[01234567][False] Unwind `` Is Not Null Is Not Null As _usn4"),
    octest:ct_string("Merge (({`7esn`:0xabc In Null,_usn4:.e12[0Xa..]})<-[usn1?:`1esn`|`3esn` *01234567..{@usn5:`4esn`[\"d_str\"]['s_str']}]-({`7esn`:9e0 Contains $12 Contains `3esn`,`5esn`:.e0 Contains $#usn8})) Union All With Distinct *,0X7[`2esn`..] As `6esn`,$`1esn` Contains 1e1 Contains @usn6 As `3esn` Order By 0xabc In .12 In 0Xa Descending Limit [#usn8 In `7esn` Where @usn5 Contains 9e0] Contains [$usn1 Ends With _usn4 Ends With `2esn`] Optional Match ((:`6esn`:_usn3{usn1:`3esn`[0x0..]})<-[? *1000..0X0123456789ABCDEF{usn2:$7 In 0.e0 In 999,usn1:'s_str' Starts With 9e0 Starts With usn2}]->({`4esn`:.e1[..$`3esn`][..01]})<-[usn2?{``:$`1esn`[``][07]}]->(#usn7 {`7esn`:`8esn` Contains Count(*) Contains $#usn7})),(@usn6 {`5esn`:.e12 Starts With $#usn8 Starts With False})<-[`6esn`:``]->({@usn6:$1000 Is Not Null}) Where $`3esn` In $usn2"),
    octest:ct_string("Create (:#usn8:`1esn`{`3esn`:123.654[..0.e0][..'s_str']}),((#usn7 :usn1:`3esn`)-[`3esn`?:`7esn`|:`2esn`]-(`5esn` :#usn8:`1esn`{_usn3:`6esn` Is Null Is Null})-[@usn5:`5esn`|:usn2 *0Xa{#usn7:`7esn`[$usn2..][$123456789..]}]-({`7esn`:9e0 Contains $12 Contains `3esn`,`5esn`:.e0 Contains $#usn8})) Union All Detach Delete {`2esn`:12.e12 Is Not Null Is Not Null,``:Count ( * ) In True In @usn5} Ends With {`7esn`:$1000 Starts With $`3esn` Starts With 0.e0,``:$`2esn` Is Null} Ends With [0X7 In $#usn7,`4esn` Is Not Null Is Not Null,.0[.e12..]],$`5esn`[0X7..010][`7esn`..'s_str'] Union All Merge @usn5=((:``:usn2{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7})) Detach Delete 12.e12 =~.0 =~usn1"),
    octest:ct_string("With  0.0 Contains #usn7 As #usn8,Extract(@usn6 In False Contains 0 Contains $`6esn` Where $@usn6[$`8esn`..][123456789..]|.e1[usn2..$_usn3][.0..$#usn7]) Order By Any(`6esn` In $`6esn`[``..][Count(*)..] Where 1e1 Ends With $`7esn` Ends With .0) Is Not Null Descending,#usn8 Ends With $@usn5 Ends With $7 Desc,usn2[12.e12..] Asc Skip 12.0[$1000..][#usn7..] Limit $`2esn`[0..123456789][``..`1esn`] Optional Match (_usn3 :`5esn`{#usn8:0xabc In 010 In #usn7}),`3esn`=(((:`6esn`:_usn3{`8esn`:.e12[..999][..@usn5],`3esn`:$_usn3 Is Null})<-[? *0X7..]->(`5esn` :``:usn2{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3})-[_usn4]->(:`6esn`:_usn3{_usn3:usn1 Is Null Is Null,#usn8:9e1[$``..][0.e0..]}))) Where $#usn7[..9e0][..123.654] With Distinct *,01[`8esn`..9e12][.12..0] As @usn6,$`1esn` =~1e1 As `4esn` Order By 9e1 =~$_usn4 =~1.e1 Desc,$@usn5[$12...e12][0X0123456789ABCDEF..$999] Asc,(:`6esn`:_usn3{@usn6:7 =~`4esn`,_usn3:`6esn`[$1000][`3esn`]})-[_usn4:_usn4 *0X7..{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]}]-(:`6esn`:_usn3{`4esn`:#usn7 Contains $0 Contains $usn2})[[$`6esn`[1.e1][$_usn3]]][usn2(0xabc In Null)] Ascending Skip $1000 Is Not Null Union All Match ((`4esn` :`4esn`:`6esn`)-[`3esn`:`2esn`|`4esn`]-({#usn8:False Starts With 0X7 Starts With 01234567})<-[#usn7?:`5esn`|:usn2{`7esn`:123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]}]-(`` {``:$@usn6 Ends With 12.e12 Ends With @usn5,`2esn`:$`3esn` Ends With 01234567})),#usn8=(:`7esn`{_usn3:@usn5[0.0..0X7]}) Where usn2 Contains $0 Contains .0 Merge ((`5esn` :@usn5{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})) On Match Set `` =Null[..010][..1000] On Create Set #usn8 ={_usn4:``[9e12][$999],#usn8:123.654 In 12} Starts With Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0[0.0]) Starts With Filter(`6esn` In $`6esn`[``..][Count(*)..])"),
    octest:ct_string("Return $#usn8 Starts With .e12 Starts With 1.e1,999 Starts With `4esn` Starts With 1000 Order By [$`1esn`[``][07],$`4esn`[`6esn`..$12],False[$usn1][0x0]] =~[.e12 Is Null Is Null] Descending Skip All(#usn7 In $999 In 1e1 Where 123456789 =~@usn6)[Extract(`3esn` In `2esn`[..01][..True] Where #usn7 Starts With $123456789 Starts With 12e12)][Extract(_usn4 In 12e12 In 123456789 Where .e1 Starts With 12.e12 Starts With `2esn`|$@usn5 Is Null Is Null)] Return Distinct `1esn` Starts With 0X7 Starts With \"d_str\",$`4esn`[..$`8esn`][..Null] As #usn7,None(`8esn` In 123456789 =~@usn6 Where .e12 Starts With $12 Starts With .e12) Ends With Filter(`5esn` In 0X7 In $#usn7 Where 0x0[0X7]) Ends With Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12) As `4esn` Order By [123456789 =~12 =~'s_str',`2esn` Starts With 12.e12 Starts With 12.0,$`8esn`[..True][.._usn4]] Contains Filter(#usn7 In 9e0[$1000] Where `7esn`) Asc,None(#usn8 In `7esn` Where $`3esn` Contains $`1esn`) Starts With #usn8(0x0[Count(*)..@usn6][Count(*)..0Xa]) Ascending,_usn4 Contains $_usn3 Contains .e1 Asc Unwind $@usn6 In @usn6 In 1e1 As `5esn`"),
    octest:ct_string("With Distinct #usn8[`6esn`..][$``..] As `2esn` Match (`1esn` {#usn7:$`1esn` Ends With 0X0123456789ABCDEF,`3esn`:.12 Starts With _usn3 Starts With $``}) Where True Starts With Null Remove (:`3esn`{`7esn`:0.e0['s_str'..][01234567..]})-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]}).`6esn`!,[01 Is Null,9e1[..123456789],010 Starts With $`` Starts With 0e0].`6esn`?,(:#usn7:`5esn`{`2esn`:12.e12 Contains 9e1,`5esn`:.e1 Starts With 12.e12 Starts With `2esn`})<-[usn2 *0X0123456789ABCDEF..]->(usn2 :`7esn`)<-[? *01..123456789]-(`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]}).`5esn`? Union All Return Distinct .0[$``..0X7],(#usn8 :_usn3{@usn5:_usn3 Starts With 12e12 Starts With `5esn`,@usn6:usn2 In _usn3})-[`1esn`?{`8esn`:.e0,usn2:9e1 Contains $999}]->(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})-[? *..010{`2esn`:'s_str'[0..]}]->({`7esn`:1.e1 In 1000 In _usn3,`8esn`:010 Starts With $`` Starts With 0e0})[..(`5esn` )-[ *00..0Xa]->(usn1 :#usn7:`5esn`{`5esn`:$@usn5 In 12e12 In 01})-[usn1?:`2esn`|`4esn`{#usn7:$#usn7[..9e0][..123.654],usn2:.e0 Is Not Null Is Not Null}]-(`1esn` :usn1:`3esn`{_usn3:.0[.e12..]})] As #usn8,01234567[$`2esn`][0Xa] As `5esn` Order By True[0xabc..01234567][$`8esn`..$@usn6] Descending,(usn2 :_usn3)-[`6esn`?:`6esn`|:#usn8]-(`1esn` {_usn4:`8esn` Is Null})<-[`7esn`?:#usn8|:`3esn`]-(_usn4 :`3esn`)[Any(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null)..] Desc,(:`2esn`)-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})-[@usn6? *0X0123456789ABCDEF..{``:0xabc[..$1000][..`5esn`],``:$`1esn` Contains 1e1 Contains @usn6}]-(`5esn` :@usn5) Is Null Is Null Ascending Skip Filter(@usn5 In 9e0 Ends With $#usn8 Where 07 Is Null) =~{#usn7:1000[12e12][`5esn`]}"),
    octest:ct_string("Delete $usn1[Null][`8esn`],`5esn`[..True][..0.e0] Merge @usn6=((`3esn` :usn1:`3esn`{`1esn`:0X7[.0]})) On Match Set `1esn`+=Any(@usn5 In 9e0 Ends With $#usn8 Where 12.e12 =~0X0123456789ABCDEF =~1.e1)[(`5esn` :#usn8:`1esn`{_usn3:`6esn` Is Null Is Null})<-[?{@usn6:$0[0Xa..$123456789],`4esn`:`7esn` Contains 9e0}]->({_usn3:0X0123456789ABCDEF Contains 12e12 Contains 12.e12})-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})..][Filter(#usn7 In $999 In 1e1 Where $_usn4[$`5esn`][`7esn`])..]"),
    octest:ct_string("Detach Delete 123.654[..0.e0][..'s_str'] Delete 01234567[$0..][0..],`1esn`[0.0..1e1][0x0..7]"),
    octest:ct_string("Merge `5esn`=({usn2:.0 Starts With `1esn`,`2esn`:00 Contains Count ( * ) Contains 0x0})<-[_usn4?:@usn6|:`7esn`]->(_usn3 :`2esn`{@usn5:`4esn` Is Not Null Is Not Null})<-[`8esn`:usn1|`4esn` *0Xa{`6esn`:Count(*) In #usn8 In \"d_str\",`1esn`:$`1esn` Ends With 0X0123456789ABCDEF}]->(:`8esn`) On Create Set {usn1:$_usn4 Starts With $1000 Starts With 12}.@usn6! =[1e1 Is Not Null Is Not Null,``[$`3esn`],$`8esn` Is Not Null Is Not Null][..[$usn1 Ends With _usn4 Ends With `2esn`]][..Extract(usn2 In False[$usn1][0x0] Where .e1[usn2..$_usn3][.0..$#usn7])] On Create Set `5esn`+=All(#usn7 In 9e1[$`1esn`..] Where 12 =~usn1)[Extract(#usn7 In $999 In 1e1)..][1.e1..],`2esn` =False Starts With 0X7 Starts With 01234567"),
    octest:ct_string("Optional Match `2esn`=(((`6esn` :`4esn`:`6esn`)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})<-[`4esn` *0Xa{@usn6:999 Starts With `2esn` Starts With .e1,`4esn`:$@usn5[..0xabc][..$`3esn`]}]->(@usn6 :``:usn2))),`7esn`=((`6esn` :`5esn`)<-[:`1esn`|`3esn` *0Xa{_usn4:``[9e12][$999],#usn8:123.654 In 12}]-(`5esn` :`4esn`:`6esn`)) Where 07 Is Not Null Is Not Null Merge @usn5=(((_usn3 :`6esn`:_usn3)-[_usn3?{``:$@usn5 Contains 's_str' Contains \"d_str\",_usn3:$#usn8[12.e12..`8esn`][12.0..0.0]}]-({`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})-[`1esn`?{`8esn`:.e0,usn2:9e1 Contains $999}]->(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})))"),
    octest:ct_string("Optional Match ((({`7esn`:999 In 0e0})<-[#usn7 *01..123456789]->({`2esn`:`7esn` In 010 In usn1,`8esn`:$0[123.654..0.e0]})<-[? *7..]-(usn1 {@usn5:_usn4[$usn1..01234567][123.654..`5esn`],`5esn`:1.e1 =~$_usn4}))) With Distinct *,0Xa[Count(*)..],[#usn8 In `7esn` Where @usn5 Contains 9e0] Contains [$usn1 Ends With _usn4 Ends With `2esn`] Order By None(#usn8 In `7esn` Where 9e1 Starts With Count ( * ))[..Any(usn2 In 7[12] Where 9e1 Is Not Null Is Not Null)] Desc,0xabc In .12 In 0Xa Descending,.0 Contains .e12 Contains 0 Desc Skip All(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 1e1 Contains 0.e0 Contains 9e1)[None(@usn6 In 010[`5esn`] Where 00[1.e1..])..[$12[$usn1..][Count(*)..],$@usn5 Contains 's_str' Contains \"d_str\"]][Extract(`3esn` In 9e1 Contains $999 Where 0e0 Starts With 999 Starts With `2esn`|9e1 Ends With Count(*) Ends With $7).._usn4(`1esn`[0.12..][@usn6..],#usn8 =~0.e0)] Limit `1esn` Starts With 9e1 Create ``=((@usn5 :`4esn`:`6esn`)<-[`3esn` *7..]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]})),(`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12}) Union Create `2esn`=(_usn3 {`8esn`:0e0 =~7 =~12.0,_usn4:.e1[..$`3esn`][..01]})<-[_usn4{`2esn`:#usn8[`8esn`..],`2esn`:@usn6[9e12]}]-(:`8esn`{#usn7:$#usn7 Contains $`7esn` Contains .e12,`6esn`:0xabc In 010 In #usn7})-[{_usn3:1000[12e12][`5esn`],`6esn`:.12[..usn2][..12e12]}]-(`2esn` :@usn5{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3}),(({@usn6:`7esn` Ends With $7 Ends With $@usn5,``:0e0 Starts With 999 Starts With `2esn`})<-[usn2?:`5esn`|:usn2{`2esn`:`7esn`[$usn2..][$123456789..],@usn5:9e1 Starts With Count ( * )}]->({usn2:$`2esn` Is Null,#usn8:.0 Is Null Is Null})) Union Merge `8esn`=(@usn6 {`5esn`:.e12 Starts With $#usn8 Starts With False})<-[`6esn`:``]->({@usn6:$1000 Is Not Null})"),
    octest:ct_string("Unwind $7 In $usn1 In 999 As `2esn` Create (`3esn` )-[#usn8:`4esn`|@usn5]-(:#usn7:`5esn`{`3esn`:Null[..0]})"),
    octest:ct_string("Remove Any(#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[..$`8esn`][..Null]).`4esn`! Optional Match (_usn3 :`4esn`:`6esn`{_usn3:$@usn5[..$#usn7],@usn6:$`1esn` Starts With $`4esn` Starts With $_usn3})<-[`2esn`? *01..123456789]-(`2esn` :@usn6)<-[?{`6esn`:$0[0Xa..$123456789],``:.e1[..\"d_str\"][..$123456789]}]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`}) Where $`7esn`[.e1][12.0] Union All Unwind _usn3 In $`8esn` In @usn6 As #usn7 Union Delete 123.654 In $`7esn` Return Distinct *,12.e12 Contains `6esn`,12[``...e12] As `6esn` Order By 's_str' Is Not Null Descending,123.654[`4esn`..12] Asc,[_usn3 In _usn3 Contains _usn4 Contains $@usn5] Contains [_usn4[$usn1..01234567][123.654..`5esn`]] Contains `4esn`(Distinct 07 In `6esn`) Ascending"),
    octest:ct_string("Match #usn8=((`2esn` :_usn3{`8esn`:01234567[Null..$_usn3]})<-[ *0Xa{`3esn`:9e1 Ends With Count(*) Ends With $7}]-(`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})<-[usn1:`1esn`|`3esn`]-(_usn4 :@usn5)) Union Remove None(@usn5 In 's_str'[0..] Where 01234567[\"d_str\"..`4esn`])._usn4! Union All Merge ((`2esn` :_usn3)-[? *0xabc{`6esn`:$0[0Xa..$123456789],``:.e1[..\"d_str\"][..$123456789]}]-({@usn6:123.654 In 12,#usn7:12.e12 Ends With `` Ends With 0})) With Distinct *,{@usn6:$`3esn`[.e1][_usn4]}[`8esn`(Distinct $``[True])..] As #usn8,999[12e12..$_usn4] As usn2 Where `6esn`[$1000][`3esn`] Unwind `6esn`[$`8esn`][9e1] As `7esn`"),
    octest:ct_string("Merge @usn5=(({@usn6:#usn7[`8esn`..usn1][$999..`7esn`]})) On Create Set [@usn5 In 9e0 Ends With $#usn8 Where 07 Is Null|Count(*) Starts With usn2 Starts With `7esn`].`3esn` =[@usn5 In 's_str'[0..] Where 123456789 =~12 =~'s_str'|0Xa In #usn7 In 's_str'] Is Not Null Union All Match _usn4=((:`3esn`{#usn7:$#usn7 In $@usn5 In $`1esn`})) Where 123456789[12] Merge #usn7=(`1esn` :@usn6{`6esn`:00[False..0e0],`6esn`:$usn2 =~1.e1 =~usn1})<-[`7esn`:`2esn`|`4esn`{_usn4:.e1[7..][9e0..]}]-(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"})-[:_usn3|:`7esn`*{`1esn`:12[..$999][..$`2esn`],usn2:9e1}]->(:``:usn2{`5esn`:$12 Starts With $usn1}) On Match Set _usn3:`7esn` On Create Set Single(@usn6 In 010[`5esn`] Where 123.654).`6esn`? =0.e0[0X0123456789ABCDEF..],(:`4esn`:`6esn`{`8esn`:07 Is Not Null Is Not Null,_usn3:0xabc In 010 In #usn7})<-[usn2?:@usn5|_usn3*{_usn4:@usn5 Starts With $`3esn`,#usn7:$`5esn` Is Not Null}]-(#usn7 :``:usn2)-[:_usn3|:`7esn` *1000..0X0123456789ABCDEF]->(:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]}).`3esn`? =999[..`1esn`][..07],[@usn6 In 010[`5esn`] Where @usn6 Contains .12 Contains $usn1].`6esn` =`7esn` Starts With @usn5 With Distinct 0Xa In #usn7 In 's_str',`4esn` Starts With 0e0 As `7esn` Skip (#usn7 {_usn4:1.e1[`8esn`]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) Contains Extract(#usn7 In 9e0[$1000] Where _usn4 Is Not Null Is Not Null|usn2 Ends With .e1 Ends With $`5esn`) Where .e0"),
    octest:ct_string("Remove [7 =~`4esn`,`2esn` Starts With $`7esn`].`8esn`! Delete `6esn` Starts With `6esn` Union All Create @usn6=(:`7esn`)<-[`1esn`?:usn1|`4esn` *..010]-(usn1 :_usn4{`4esn`:`7esn` Is Null}),((:#usn8:`1esn`$`7esn`)-[`6esn`?:usn2]-(@usn6 {@usn6:0e0 =~7 =~12.0})-[`7esn`:`4esn`|@usn5 *12..]-(`` :`3esn`{`6esn`:Count(*)[9e12..12.0]})) With Distinct #usn8 Is Not Null,.e0[..9e12][..07] Skip usn1 Limit 1000 Contains [True Contains 0x0 Contains $_usn3,_usn3 Contains 9e12 Contains `8esn`] Contains [12.0 In 123.654 In _usn4] Where $``[..\"d_str\"][..$#usn8] Union Unwind 0x0[12e12..$`7esn`] As `7esn`"),
    octest:ct_string("Match @usn5=(((:usn2{`6esn`:`4esn` Starts With 0e0,`8esn`:usn2[12e12..]['s_str'..]})<-[:`2esn`|`4esn` *12..]-(_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]}))),({`4esn`:.e1[..$`3esn`][..01]})-[`5esn`:#usn7|@usn5]-(`5esn` :`4esn`:`6esn`) Delete 7 Is Not Null Union All Create ((`1esn` :`2esn`)<-[`1esn`:`8esn` *999..{`4esn`:$123456789 Starts With 0.12 Starts With Null,usn2:.e1[7..][9e0..]}]->(`1esn` :`3esn`{#usn7:12[..0e0][...e1]})-[@usn6?:#usn8|:`3esn`{usn1:.e1[..$`3esn`][..01],`4esn`:$`5esn` In .12}]->(usn2 :_usn4)) Unwind 123.654 Contains @usn5 Contains $`5esn` As `6esn` Union Remove All(#usn8 In `7esn`).`1esn` With Distinct *,999 Contains [@usn6 In False Contains 0 Contains $`6esn` Where `1esn` Starts With 0xabc Starts With $usn2] Contains {_usn3:123.654 In $`7esn`} As `6esn`,.e0 Is Not Null Is Not Null As `7esn` Order By _usn3 In $`8esn` In @usn6 Desc Return Distinct [$#usn7 Ends With 's_str' Ends With 0X7] Starts With (usn1 :@usn6)<-[?:#usn7|@usn5 *0..01]->(:`1esn`:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null})<-[_usn4? *12..{`1esn`:$`6esn` Starts With .e12 Starts With $`1esn`,`3esn`:`8esn`[0.e0..]}]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0}) Starts With [`5esn` In `7esn`[$usn2..][$123456789..] Where $`1esn` Starts With Count(*)] As #usn8,0.12 Is Null Is Null As _usn3,_usn4[0] As `2esn` Skip `1esn`[$@usn6][07]"),
    octest:ct_string("Merge ((:`3esn`{`1esn`:`7esn`,`8esn`:12e12 =~$`7esn`})-[ *7..{usn1:0x0[0X7],@usn5:`4esn`[.12][$@usn6]}]->(`7esn` {#usn8:False Starts With 0X7 Starts With 01234567})<-[?:usn1|`4esn` *1000..0X0123456789ABCDEF{`6esn`:.e0[999..1000][1e1..$`8esn`],`4esn`:00 Ends With `` Ends With 12.e12}]-({`1esn`:usn2 Contains $0 Contains .0,_usn4:$@usn6[.0..][0e0..]})) On Create Set _usn3 =@usn6 Is Not Null Is Not Null,`5esn` =[#usn7 In True Contains 's_str' Contains $usn1 Where $@usn6 In @usn6 In 1e1|12.0[$1000..][#usn7..]][Any(_usn4 In 12e12 In 123456789 Where .e12[@usn6..][010..])..Single(usn2 In False[$usn1][0x0] Where 9e1 Is Not Null Is Not Null)] On Match Set #usn8 =None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where @usn6 In .12 In `3esn`) Is Null Match (`3esn` {usn2:$usn2[`4esn`..9e12]}),usn1=(`6esn` )<-[usn1? *0xabc{usn1:$_usn4 Starts With $1000 Starts With 12}]-(usn1 :usn1:`3esn`) Where $`4esn` Contains _usn3 Contains `8esn` Union With  010 Starts With $`` Starts With 0e0 As @usn5 Where $`3esn`[$_usn4..0Xa] Union All Merge (`5esn` :`4esn`:`6esn`)<-[`5esn`?:`8esn`]->({``:12 Starts With #usn7 Starts With 0Xa,`8esn`:``[usn1][`5esn`]}) On Create Set `4esn` =(usn2 :_usn3)-[`6esn`?:`6esn`|:#usn8]-(`1esn` {_usn4:`8esn` Is Null})<-[`7esn`?:#usn8|:`3esn`]-(_usn4 :`3esn`)[Any(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null)..],usn1 =(`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})-[_usn3?:_usn4 *00..0Xa{_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})-[`4esn`:`1esn`|`3esn` *12..]->(usn2 :`1esn`:_usn4{usn2:999 Contains $1000}) Contains Filter(usn2 In False[$usn1][0x0] Where $`6esn`[``..][Count(*)..])"),
    octest:ct_string("With Distinct 0e0[``],0X7 In $#usn7 Limit 12e12[12e12][$#usn7]"),
    octest:ct_string("Remove count(@usn5[$`6esn`..][$999..],_usn4[0]).`7esn`,_usn4(.12[0X7..][12e12..],9e1).#usn7! Remove {@usn6:`7esn` Ends With $7 Ends With $@usn5,``:0e0 Starts With 999 Starts With `2esn`}.`8esn`!,{`4esn`:12[$`5esn`..][False..]}.``? Union All With Distinct *,[1000[0e0][1e1],12.0 Is Null Is Null] Is Not Null Is Not Null Order By $`5esn`[$`6esn`][`2esn`] Descending,`6esn`[..$`4esn`] Descending,12 Starts With $123456789 Starts With .e12 Ascending Limit [`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]|usn2 =~7] Contains Any(`3esn` In 9e1 Contains $999 Where _usn4[0]) Detach Delete usn1 Ends With 0.0,$999 In 1e1,`7esn`(Distinct `1esn` Starts With 0xabc Starts With $usn2)[({`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12})-[`6esn`?:@usn5|_usn3 *01234567..]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})..]"),
    octest:ct_string("Merge (((`6esn` :#usn7:`5esn`)-[`6esn`?:@usn5|_usn3 *01234567..]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})-[ *0xabc{``:usn1 Contains 010,`2esn`:$0 In `3esn` In 07}]->(_usn4 :#usn7:`5esn`))) Remove [`3esn` In `2esn`[..01][..True] Where 00[01234567][False]].`7esn`!,Any(usn2 In False[$usn1][0x0] Where 12.e12 =~0X0123456789ABCDEF =~1.e1)._usn3,Extract(#usn7 In 9e1[$`1esn`..] Where $`7esn`[$_usn4][.e0]|$`3esn`[..$1000][..$123456789]).`1esn`?"),
    octest:ct_string("With Distinct *,Count ( * ) In True In @usn5 As `2esn` Skip `7esn`(Distinct `1esn` Starts With 0xabc Starts With $usn2)[({`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12})-[`6esn`?:@usn5|_usn3 *01234567..]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})..] Union All Delete _usn4[$usn1..01234567][123.654..`5esn`] With  *,1.e1 Ends With $#usn7 As usn2,@usn5[01][@usn5] Skip $`5esn` Limit (`7esn` :`2esn`{`4esn`:0[1e1][$usn1],usn2:`8esn`[..$#usn8]})-[:`6esn`|:#usn8{``:`1esn` Starts With 0xabc Starts With $usn2}]-(_usn3 :`2esn`{@usn5:`4esn` Is Not Null Is Not Null})-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01}) Is Not Null"),
    octest:ct_string("Delete 12.e12 Ends With $``,{_usn4:`1esn` Is Not Null Is Not Null,@usn5:0.12[$0..$usn2]} Is Not Null Is Not Null,{#usn7:usn1 In ``}[None(`3esn` In `2esn`[..01][..True])..Extract(@usn5 In 9e0 Ends With $#usn8 Where 0Xa[$`8esn`..][$_usn4..])]"),
    octest:ct_string("Merge _usn4=(#usn8 :`6esn`:_usn3)<-[#usn7?:`5esn`|:usn2{`7esn`:123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]}]->(`2esn` :usn2)-[?:#usn7|@usn5 *0X0123456789ABCDEF..{_usn3:@usn5 Is Not Null}]-(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) On Create Set Single(`5esn` In `7esn`[$usn2..][$123456789..] Where $@usn6 Ends With 12.e12 Ends With @usn5).usn1? =`6esn`[9e12..],`7esn`+=$0[0.e0] Merge `2esn`=(:`1esn`:_usn4{#usn7:$_usn4[$`5esn`][`7esn`],`3esn`:$`6esn` Is Null})<-[`4esn`:usn2]->(`3esn` :_usn4) On Create Set #usn7+=@usn6[123.654..][0x0..],`3esn`+=00 In @usn6 In 0,@usn6 =Filter(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]) Is Not Null Is Not Null On Create Set #usn7+=`6esn`[$`8esn`][9e1]"),
    octest:ct_string("Unwind Extract(#usn7 In 9e1[$`1esn`..] Where @usn5 Is Null)[All(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789])..] As `7esn` With  *,.e0 Is Null As `2esn`,(:`6esn`:_usn3{@usn6:7 =~`4esn`,_usn3:`6esn`[$1000][`3esn`]})-[_usn4:_usn4 *0X7..{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]}]-(:`6esn`:_usn3{`4esn`:#usn7 Contains $0 Contains $usn2})[[$`6esn`[1.e1][$_usn3]]][usn2(0xabc In Null)] Skip True Contains 0x0 Contains $_usn3 Limit 's_str' Ends With _usn4 Ends With 0e0 Where 1.e1[$usn1]"),
    octest:ct_string("Merge (({`1esn`:0X7 In $#usn7,_usn3:usn1 Contains 010})) Union Remove None(@usn6 In False Contains 0 Contains $`6esn` Where #usn8 Is Not Null)._usn4!,Extract(`3esn` In 9e1 Contains $999 Where .e12 Ends With 0Xa Ends With 0xabc).`1esn`!,{`7esn`:0X7['s_str'..][01..],`8esn`:0.e0[0X0123456789ABCDEF..]}.``? Remove Single(#usn7 In 9e1[$`1esn`..] Where ``[$`3esn`]).#usn7!,Any(#usn7 In True Contains 's_str' Contains $usn1 Where `2esn`[..$_usn3])._usn3?,{usn2:`2esn`[..$_usn3]}.usn2? Optional Match (`1esn` {`5esn`:usn1 In ``,`7esn`:0Xa[$`8esn`..][$_usn4..]})<-[`4esn`?:`4esn`|@usn5 *01..123456789]-(:usn1:`3esn`{`8esn`:12 Starts With True Starts With 12e12,`8esn`:`2esn` Starts With $`7esn`})-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]->(_usn4 {_usn4:Null[..010][..1000],_usn3:.0 Is Null Is Null}) Where 00 Ends With `` Ends With 12.e12"),
    octest:ct_string("With Distinct *,usn1 Contains 010 As `6esn` Skip 999[@usn5..][Null..] Where `5esn` Contains `1esn` Contains usn1 Return 12.e12 =~0X0123456789ABCDEF =~1.e1 As `6esn`,.e12[`2esn`..010],.e0 Starts With $@usn6 Starts With $7 As `5esn` Order By Single(@usn6 In False Contains 0 Contains $`6esn` Where 12e12 In $`5esn`) Contains Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 0[1e1][$usn1]) Contains {`4esn`:9e1 Contains 12} Ascending Skip usn1 Limit 123456789 Contains 0Xa Union All Merge #usn8=(((`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[@usn6?:`7esn`|:`2esn`]->({#usn8:1e1 Is Not Null Is Not Null})-[?:@usn5|_usn3{`1esn`:`2esn` Is Null,`7esn`:`` =~.12}]-(`4esn` :#usn8:`1esn`{`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12})))"),
    octest:ct_string("Merge `7esn`=({@usn6:`7esn` Ends With $7 Ends With $@usn5,``:0e0 Starts With 999 Starts With `2esn`})<-[`5esn` *0xabc]->(_usn4 :_usn4{_usn3:$`3esn`[.e1][_usn4]}) Union All Unwind `8esn` Contains Count(*) Contains $#usn7 As _usn4 With  {``:07[$`2esn`..9e12][$`4esn`..9e12],`3esn`:$`6esn` Starts With .e12 Starts With $`1esn`}[..Single(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null)][..Any(#usn7 In $999 In 1e1 Where 07 In `6esn`)] As usn1,`8esn` Is Not Null Is Not Null As `4esn` Skip (`2esn` $`6esn`)<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(usn2 {usn1:.e12 Ends With 0Xa Ends With 0xabc}) Ends With Extract(@usn6 In False Contains 0 Contains $`6esn` Where .e1[usn2..$_usn3][.0..$#usn7]) Ends With Single(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]) Limit Any(@usn6 In False Contains 0 Contains $`6esn` Where $usn2[`4esn`..9e12]) =~[9e12 =~@usn6,01 Ends With 0Xa Ends With 0X7,$@usn6[$0..9e12][.e12..Null]] Union All Create (((usn2 :#usn8:`1esn`)-[`5esn`?:`7esn`|:`2esn` *0x0..]->(`8esn` :`8esn`)<-[_usn4:_usn4 *0X7..{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]}]-(#usn7 :`2esn`))),((@usn6 {`7esn`:999 In 0e0})<-[? *1000..0X0123456789ABCDEF{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}]-(`6esn` {`2esn`:$`3esn` Ends With 01234567})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)) Unwind 9e1 =~123456789 =~999 As ``"),
    octest:ct_string("Delete $usn1[1000][.12] Union With Distinct $usn2[`5esn`..][01234567..] As #usn8 Order By .0 Ends With 999 Ends With $`5esn` Ascending,01234567 In $@usn6 In $#usn7 Desc Where .e0[01234567..$`8esn`] Remove Any(#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[..$`8esn`][..Null]).`4esn`! Match (((`6esn` :`4esn`:`6esn`)-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})<-[`4esn` *0Xa{@usn6:999 Starts With `2esn` Starts With .e1,`4esn`:$@usn5[..0xabc][..$`3esn`]}]->(@usn6 :``:usn2)))"),
    octest:ct_string("With Distinct *,True[$_usn3..] As usn1 Order By (`5esn` :`4esn`:`6esn`)-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(#usn7 :``:usn2)[..Filter(#usn8 In `7esn`)] Descending Limit [0.12 Contains False Contains 1.e1,$12[$usn1..][Count(*)..]][{usn2:$@usn6 Ends With `1esn`,_usn3:`7esn`}..][{@usn6:1e1 Is Not Null Is Not Null,`8esn`:$`1esn` Starts With $`4esn` Starts With $_usn3}..] With Distinct [`5esn`[$`7esn`..$@usn5],$#usn7[..9e0][..123.654],1.e1 Is Null Is Null] Ends With Any(`6esn` In $`6esn`[``..][Count(*)..] Where 07 Contains `3esn` Contains `7esn`),usn2[usn2..0X7] As `1esn` Order By 's_str'[0x0..1.e1] Asc Limit 0xabc[..$1000][..`5esn`] Where `2esn` Starts With 12.e12 Starts With 12.0 With  *,0.0 Contains `3esn` Contains @usn5 As #usn8,[`8esn`[0.e0..],1e1 Contains 's_str' Contains `3esn`] In [`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]] As `4esn` Order By [#usn8 In `7esn` Where $`3esn` Contains $`1esn`|$0[123.654..0.e0]][usn1(Distinct 999 Contains $1000,12[123.654..])..[.e12[..999][..@usn5],12.e12 =~.0 =~usn1,`6esn`[$1000][`3esn`]]][[@usn6 In 010[`5esn`] Where $usn2[`2esn`..$`1esn`]]..[`3esn` In 9e1 Contains $999 Where .12 In `8esn` In $#usn8]] Descending,0x0[usn1..usn1] Asc,`2esn` Starts With $`7esn` Descending Union Return *,`8esn` =~@usn6 =~$`2esn` As _usn3 Optional Match @usn5=(`7esn` :`3esn`{`2esn`:999[123.654..$usn2][Count ( * )..0x0]})-[`2esn`?:usn1|`4esn` *00..0Xa]-(`4esn` :`4esn`:`6esn`),usn2=(`3esn` {usn2:$usn2[`4esn`..9e12]}) Where 12 Starts With #usn7 Starts With 0Xa Return $7 Ends With Count ( * ),`6esn` =~Null As `4esn` Skip 1e1[_usn3] Limit [`2esn` Is Null] Is Null Is Null Union All Match ``=(:_usn3{`7esn`:$999 Ends With .e0})<-[`8esn`?:`2esn`|`4esn`{usn2:#usn8[`6esn`..][$``..]}]-(@usn6 {`6esn`:$`5esn` =~usn1,`5esn`:$`` Starts With $1000 Starts With @usn6})-[?{_usn3:010[`5esn`],_usn4:#usn8 =~.e0}]-(#usn8 :`3esn`{`5esn`:$@usn6 Ends With `1esn`}),`3esn`=((`8esn` :@usn5{`5esn`:_usn3 In $`8esn` In @usn6,_usn4:$@usn6 Ends With 12.e12 Ends With @usn5})-[?:#usn7|@usn5 *0X0123456789ABCDEF..{_usn3:@usn5 Is Not Null}]-(#usn8 {`5esn`:$12[$usn1..][Count(*)..],`7esn`:0e0[``..$1000][$7..12.e12]})-[`4esn`?:#usn8|:`3esn`{`3esn`:01 Is Null,`1esn`:123456789[12]}]-(:_usn4{#usn7:1000[..`2esn`][..$@usn6],`1esn`:12e12 Starts With $0 Starts With $`2esn`})) Optional Match ((({`7esn`:999 In 0e0})<-[#usn7 *01..123456789]->({`2esn`:`7esn` In 010 In usn1,`8esn`:$0[123.654..0.e0]})<-[? *7..]-(usn1 {@usn5:_usn4[$usn1..01234567][123.654..`5esn`],`5esn`:1.e1 =~$_usn4})))"),
    octest:ct_string("Delete 12.e12 Starts With \"d_str\" Starts With 9e1,'s_str' Starts With 9e0 Starts With usn2,$`4esn`[..$`8esn`][..Null] Optional Match (`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]}) Return Distinct *,00 Ends With $`1esn` Ends With `7esn`,$@usn6 Is Not Null Is Not Null As `8esn` Order By (:@usn5{_usn3:123.654})<-[usn1:`1esn`|`3esn`]-(_usn4 :@usn5)-[:_usn3|:`7esn` *1000..0X0123456789ABCDEF]->(:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]}) Ends With Any(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn`[0..][999..]) Ends With {``:0xabc[..$1000][..`5esn`],``:$`1esn` Contains 1e1 Contains @usn6} Asc,[@usn5 In 9e0 Ends With $#usn8 Where 12.e12 =~0X0123456789ABCDEF =~1.e1|00[$`1esn`..][@usn6..]] Descending,[#usn8 In `7esn` Where $`3esn` Contains $`1esn`|$0[123.654..0.e0]][usn1(Distinct 999 Contains $1000,12[123.654..])..[.e12[..999][..@usn5],12.e12 =~.0 =~usn1,`6esn`[$1000][`3esn`]]][[@usn6 In 010[`5esn`] Where $usn2[`2esn`..$`1esn`]]..[`3esn` In 9e1 Contains $999 Where .12 In `8esn` In $#usn8]] Descending Skip [usn2 In 7[12] Where #usn7[.e0]|$usn2 =~9e1] Is Null Is Null Limit 12.e12 =~.0 =~usn1 Union All Detach Delete 0.e0 =~00 Unwind 9e1 =~123456789 =~999 As @usn5"),
    octest:ct_string("Remove {`8esn`:usn2 =~7,`5esn`:.e0[01234567..$`8esn`]}.#usn8 Remove #usn7:`1esn`:_usn4,[`4esn` Ends With 12 Ends With .12,`5esn` Contains `1esn` Contains usn1,$`2esn` =~9e12].@usn5! Union All With  0.e0 Is Not Null Is Not Null As _usn4,0X0123456789ABCDEF In $usn2 In `4esn`,$usn1 Is Not Null Is Not Null Order By 01234567[$@usn6..$#usn7][123456789..12e12] Desc,Single(#usn7 In 9e0[$1000] Where @usn6 Contains .12 Contains $usn1)[Filter(usn2 In 7[12] Where $@usn5[..0xabc][..$`3esn`])..][Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 12.0 In 123.654 In _usn4)..] Ascending Skip Null[..0] Limit Filter(`6esn` In $`6esn`[``..][Count(*)..] Where $7 In $usn1 In 999) Ends With Any(usn2 In 7[12] Where 0X7[.0]) Where 9e12 Starts With 1e1 Unwind `3esn`(Distinct $123456789[...12][..@usn6])[{usn2:$`2esn` Is Null,#usn8:.0 Is Null Is Null}][#usn7(Distinct $@usn6 Is Not Null Is Not Null,``[7.._usn3])] As `` Create (`8esn` :`2esn`{@usn5:$`4esn` Contains _usn3 Contains `8esn`,`7esn`:$`4esn`[`4esn`][Count(*)]}),(`8esn` {usn1:0e0 =~7 =~12.0,`7esn`:usn2 Starts With .0})<-[:_usn4]->(_usn4 {usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})<-[ *01234567..]->(:``:usn2{`5esn`:$12 Starts With $usn1}) Union All Remove {``:0Xa =~False =~@usn5,`6esn`:$`2esn` Starts With `4esn` Starts With $usn1}.@usn5,All(#usn7 In 9e0[$1000] Where 12e12 Starts With $0 Starts With $`2esn`).#usn7?"),
    octest:ct_string("Unwind 0.12[$0..$usn2] As `4esn` Union Remove `5esn`:#usn8:`1esn`,[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 0xabc In 123456789 In 0x0|.e0 Contains $#usn8].@usn6!,[123.654 Starts With 0X7 Starts With $`4esn`,`6esn` Is Null Is Null].@usn5 Optional Match `6esn`=(((:@usn6{`6esn`:01 Ends With 0Xa Ends With 0X7})-[ *0..01{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]->({#usn8:False Starts With 0X7 Starts With 01234567})<-[ *..07{_usn3:0e0 =~7 =~12.0,usn2:123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]}]->(`4esn` :@usn5))) With Distinct 0Xa Ends With $`3esn` Ends With $1000,Extract(@usn5 In 's_str'[0..] Where 12e12 Is Not Null) =~[`3esn` In 9e1 Contains $999 Where _usn3[`2esn`..0X7][0.e0..$`3esn`]],$#usn8[@usn6..] As `7esn` Order By (`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})-[_usn3?:_usn4 *00..0Xa{_usn4:`6esn` =~$_usn4 =~7,`7esn`:07 In `6esn`}]-(_usn4 {@usn6:$12 Starts With $usn1,`6esn`:.e12[..999][..@usn5]})-[`4esn`:`1esn`|`3esn` *12..]->(usn2 :`1esn`:_usn4{usn2:999 Contains $1000}) Contains Filter(usn2 In False[$usn1][0x0] Where $`6esn`[``..][Count(*)..]) Desc,$usn1[Null][`8esn`] Desc,$`5esn` In `2esn` In `2esn` Asc Limit [0.e0[..$7],$usn2[True..0X0123456789ABCDEF],`2esn` =~.e12 =~0X0123456789ABCDEF] Ends With `1esn`(Distinct $`3esn`[..0X0123456789ABCDEF][..7],`4esn`[$_usn3..$`7esn`]) Ends With [$`1esn`[``][07],`7esn`] Where _usn3[$`1esn`..] Union All Unwind [#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 12.e12 Starts With \"d_str\" Starts With 9e1|$#usn7 Contains $`7esn` Contains .e12][#usn8(Distinct $_usn4 Is Null Is Null,01[`8esn`..9e12][.12..0])..[_usn4 In 12e12 In 123456789 Where Count ( * ) Ends With $123456789]][Filter(_usn4 In 12e12 In 123456789 Where $`5esn` =~usn1)..[$`5esn` In _usn3 In 0.0]] As `4esn` Return #usn7[`8esn`..usn1][$999..`7esn`] As _usn3,All(#usn7 In 9e1[$`1esn`..] Where 12 =~usn1)[Extract(#usn7 In $999 In 1e1)..][1.e1..],12e12 Starts With $0 Starts With $`2esn` Order By `6esn`(`4esn` Ends With 12 Ends With .12,@usn5 Is Not Null)[Extract(`3esn` In 9e1 Contains $999 Where .e12 Ends With 0Xa Ends With 0xabc|1e1 Is Not Null Is Not Null)..Filter(usn2 In 7[12] Where usn2[12.e12..])] Desc Limit $_usn4[$_usn4] Remove None(`5esn` In 0X7 In $#usn7 Where usn1 =~$`7esn`).`3esn`!,Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $123456789 In 0.12)._usn3?,(:`3esn`{#usn7:$#usn7 In $@usn5 In $`1esn`})<-[:`8esn` *0X7..]->(`2esn` :`6esn`:_usn3{usn2:0e0 =~0Xa =~$999,`4esn`:@usn6[9e12]}).`6esn`?"),
    octest:ct_string("Unwind .e0 Ends With $123456789 Ends With 0xabc As #usn7 Match `3esn`=(_usn3 {`8esn`:_usn3[0x0],#usn8:$usn1 Contains 0}),usn1=(({usn2:7[0e0..],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})-[:`6esn`|:#usn8{`4esn`:$`2esn`[..$`3esn`][..12e12],#usn8:123.654 Is Not Null}]-(_usn3 :`5esn`)-[`4esn`?:#usn8|:`3esn`{`3esn`:01 Is Null,`1esn`:123456789[12]}]-(:_usn4{#usn7:1000[..`2esn`][..$@usn6],`1esn`:12e12 Starts With $0 Starts With $`2esn`})) Where \"d_str\"[True..]"),
    octest:ct_string("Remove {_usn3:_usn4 Is Null Is Null}.``,``(@usn6[`1esn`..]).`7esn`! With Distinct 0e0[``],0X7 In $#usn7 Order By Extract(#usn7 In 9e0[$1000] Where @usn6 Contains .12 Contains $usn1|``[$`3esn`])[(:`6esn`:_usn3$usn2)<-[ *0Xa{`3esn`:9e1 Ends With Count(*) Ends With $7}]-(`8esn` {@usn6:0x0[0X7],@usn6:0x0[@usn6..][01..]})-[usn1?:`2esn`|`4esn`{#usn7:$#usn7[..9e0][..123.654],usn2:.e0 Is Not Null Is Not Null}]-(`8esn` :@usn6)..All(_usn3 In _usn3 Contains _usn4 Contains $@usn5)] Desc,`5esn`[$`7esn`..$@usn5] Ascending Where 01 Ends With 0Xa Ends With 0X7 Union All With  *,.e0 Is Null As `2esn`,(:`6esn`:_usn3{@usn6:7 =~`4esn`,_usn3:`6esn`[$1000][`3esn`]})-[_usn4:_usn4 *0X7..{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]}]-(:`6esn`:_usn3{`4esn`:#usn7 Contains $0 Contains $usn2})[[$`6esn`[1.e1][$_usn3]]][usn2(0xabc In Null)] Skip True Contains 0x0 Contains $_usn3 Limit 's_str' Ends With _usn4 Ends With 0e0 Where 1.e1[$usn1] Union With Distinct @usn5(Distinct 12e12 In 123456789,12.0 =~@usn6 =~$`2esn`)[`8esn`(123456789 =~$999)][`2esn`($`2esn`[..$`3esn`][..12e12])],Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where 12.e12 Starts With \"d_str\" Starts With 9e1|$@usn5 In $`6esn` In 12e12) Ends With (:`7esn`{#usn7:0 =~1.e1 =~$#usn7})<-[`1esn`:`8esn` *7..]->(`` {#usn8:.e12 Is Null Is Null,@usn6:`1esn` Is Not Null Is Not Null}),`1esn`($`4esn`[`4esn`][Count(*)],`2esn` Starts With $`7esn`) =~Extract(@usn5 In 9e0 Ends With $#usn8 Where .e0 Starts With $@usn6 Starts With $7) =~{`3esn`:_usn3[`2esn`..0X7][0.e0..$`3esn`]} Where False Is Null Return #usn7[`8esn`..usn1][$999..`7esn`] As _usn3,All(#usn7 In 9e1[$`1esn`..] Where 12 =~usn1)[Extract(#usn7 In $999 In 1e1)..][1.e1..],12e12 Starts With $0 Starts With $`2esn` Order By `6esn`(`4esn` Ends With 12 Ends With .12,@usn5 Is Not Null)[Extract(`3esn` In 9e1 Contains $999 Where .e12 Ends With 0Xa Ends With 0xabc|1e1 Is Not Null Is Not Null)..Filter(usn2 In 7[12] Where usn2[12.e12..])] Desc Limit $_usn4[$_usn4]"),
    octest:ct_string("Detach Delete [$12[$usn1..][Count(*)..],usn2[1.e1],123456789[12]] Ends With [`5esn`[$`7esn`..$@usn5],$#usn7[..9e0][..123.654],1.e1 Is Null Is Null] Ends With Extract(`3esn` In 9e1 Contains $999 Where _usn4[0]|12 Starts With #usn7 Starts With 0Xa),`8esn` Is Null,.0 Starts With `1esn` Merge ((#usn7 :usn1:`3esn`)-[`3esn`?:`7esn`|:`2esn`]-(`5esn` :#usn8:`1esn`{_usn3:`6esn` Is Null Is Null})-[@usn5:`5esn`|:usn2 *0Xa{#usn7:`7esn`[$usn2..][$123456789..]}]-({`7esn`:9e0 Contains $12 Contains `3esn`,`5esn`:.e0 Contains $#usn8})) On Create Set [@usn6 In False Contains 0 Contains $`6esn` Where 12.e12 =~.0 =~usn1].usn2! =None(#usn7 In True Contains 's_str' Contains $usn1 Where 00[12..$`6esn`]) Ends With None(#usn7 In 9e0[$1000] Where 1e1 Contains 0.e0 Contains 9e1),`8esn` =01[07..][1.e1..] Union With Distinct *,12.e12 Contains `6esn`,12[``...e12] As `6esn` Limit Filter(#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4) Ends With [$@usn6 Is Not Null Is Not Null] Optional Match `4esn`=(`` {`8esn`:@usn5 Starts With $`3esn`,_usn4:`6esn` Is Null Is Null})<-[`7esn`:`2esn`|`4esn`{_usn4:.e1[7..][9e0..]}]-(usn2 :usn1:`3esn`{`3esn`:`2esn` Is Null})<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(:`5esn`{#usn8:$``[True],`1esn`:@usn5 Is Null}),(:`6esn`:_usn3{`6esn`:`2esn` Starts With $`7esn`}) Where `2esn` =~.e12 =~0X0123456789ABCDEF Remove Extract(#usn7 In 9e0[$1000] Where $_usn3 Is Null|@usn5 Contains 9e0)._usn4?"),
    octest:ct_string("Match `8esn`=((_usn4 :`6esn`:_usn3)<-[`3esn`?:`2esn`|`4esn` *123456789..{_usn4:1.e1[`8esn`]}]->(`6esn` )<-[`5esn`?:`8esn`]->({``:12 Starts With #usn7 Starts With 0Xa,`8esn`:``[usn1][`5esn`]})),`8esn`=((_usn3 {`6esn`:@usn5[$`6esn`..][$999..],`8esn`:$@usn5[..0xabc][..$`3esn`]})<-[``:`5esn`|:usn2{`5esn`:_usn4[0]}]-(`2esn` {``:$0 =~9e1 =~$`2esn`,`8esn`:`5esn`[..123.654][...e12]})) Where 1000[12e12][`5esn`] Union Merge @usn5=((`2esn` {`7esn`:999 In 0e0})<-[? *0X7..{`2esn`:$@usn5 In $`6esn` In 12e12}]-(:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]})<-[`7esn`?:#usn8|:`3esn`]-(_usn4 :`3esn`)) On Create Set `8esn` =$#usn8[True][9e0],`1esn`+=@usn6 Contains .12 Contains $usn1 On Create Set [`5esn` In `7esn`[$usn2..][$123456789..] Where `7esn` Is Null|$_usn4 =~$`1esn` =~`2esn`].`6esn` =Any(#usn7 In True Contains 's_str' Contains $usn1 Where `6esn` Starts With `6esn`) =~Single(#usn7 In $999 In 1e1 Where _usn4 Contains `` Contains 1.e1),@usn6+='s_str',Extract(#usn7 In True Contains 's_str' Contains $usn1 Where 0x0 Ends With 12.0 Ends With `5esn`)._usn4! =Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|123.654 Is Not Null) Ends With usn2(01 Is Null) Ends With [$@usn6 Ends With 123456789 Ends With 12.0,12.e12 =~.0 =~usn1]"),
    octest:ct_string("Return Distinct `1esn`(.0 Starts With `1esn`,01[`3esn`..][Count(*)..]) In [@usn6 In False Contains 0 Contains $`6esn` Where `1esn` Starts With 0xabc Starts With $usn2] As `4esn`,`7esn`[$usn1..]['s_str'..] Detach Delete 00[12e12][$`7esn`],\"d_str\" Is Null Is Null,usn2[1.e1] Delete {``:`6esn` =~$_usn4 =~7,`7esn`:9e0[$1000]}[#usn7(Distinct $`1esn`[``][07])..None(@usn6 In 010[`5esn`] Where $`3esn` Ends With 01234567)]"),
    octest:ct_string("Return 0x0[0.0] As ``,Any(@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``) Contains [_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where .0 Is Null Is Null|`3esn`[0x0..]] Contains [999[12.e12],#usn8 Is Null Is Null,1.e1 =~$_usn4] As `1esn` Skip 0X0123456789ABCDEF Ends With `2esn` Ends With $`7esn` With Distinct $@usn6[12.0][12.0] Skip `7esn`[$usn2..][$123456789..] Where 0xabc =~$@usn5 Return $_usn4 Is Null Is Null,usn2 Starts With .0 Order By 9e1[$#usn8][$1000] Descending Limit #usn7 =~9e12 Union Unwind `4esn` Starts With 0e0 As `1esn` Remove {_usn3:_usn4 Is Null Is Null}.``,``(@usn6[`1esn`..]).`7esn`! Return Distinct 1.e1[..123456789][..999],_usn3[12.e12..][`5esn`..] As @usn6,[_usn3 In _usn3 Contains _usn4 Contains $@usn5] Contains [_usn4[$usn1..01234567][123.654..`5esn`]] Contains `4esn`(Distinct 07 In `6esn`) As `5esn` Order By 123456789 Contains 0Xa Descending,[@usn6 In False Contains 0 Contains $`6esn` Where usn1 Starts With 00|`5esn`[$`7esn`..$@usn5]] Is Not Null Is Not Null Desc,00[False..0e0] Ascending"),
    octest:ct_string("Return $_usn3[_usn4..] Skip (:`6esn`:_usn3{@usn6:7 =~`4esn`,_usn3:`6esn`[$1000][`3esn`]})-[_usn4:_usn4 *0X7..{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]}]-(:`6esn`:_usn3{`4esn`:#usn7 Contains $0 Contains $usn2})[[$`6esn`[1.e1][$_usn3]]][usn2(0xabc In Null)] Create @usn5=(({`7esn`:123.654,`6esn`:9e1 Starts With Count ( * )})-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(usn1 :_usn3{``:`6esn` =~$_usn4 =~7,`7esn`:9e0[$1000]})),(_usn4 :`8esn`{usn1:12.e12[..$`6esn`]}) Union With  $#usn7 =~`2esn` As `4esn` Order By (`5esn` :`4esn`:`6esn`)-[:``{_usn4:9e1 Is Null,`7esn`:.0[..'s_str'][..01234567]}]->(#usn7 :``:usn2)[..Filter(#usn8 In `7esn`)] Desc Skip usn2 Is Null Is Null Limit @usn6 Is Not Null Is Not Null Where 's_str' Ends With `7esn` Ends With 010 With Distinct *,(usn2 :usn1:`3esn`{`3esn`:`2esn` Is Null})<-[:`8esn` *999..{@usn6:`7esn` Ends With $7 Ends With $@usn5,``:0e0 Starts With 999 Starts With `2esn`}]->(`6esn` :#usn7:`5esn`)<-[usn1:`1esn`|`3esn`]->(`1esn` {#usn8:$#usn7[..9e0][..123.654],`5esn`:9e12 Starts With 1e1}) Is Not Null As `3esn`,$0 Starts With @usn5 As @usn5 Order By 's_str' Contains 12.e12 Contains $`4esn` Descending,False Contains 0 Contains $`6esn` Ascending,9e1 =~$_usn4 =~1.e1 Desc Limit 01234567 Starts With True Starts With $999"),
    octest:ct_string("With  $@usn5 Ends With @usn5 Ends With 0xabc Union With Distinct (:@usn5{@usn5:999[..`1esn`][..07],_usn4:Count ( * ) Ends With $123456789})<-[`2esn`? *01..123456789]-(`2esn` :@usn6)[[`2esn`[..$_usn4][...12],False Contains 0 Contains $`6esn`,.e1[12.0..]]..[#usn7 In 9e0[$1000] Where #usn8 =~0.e0|12.e12 =~0X0123456789ABCDEF =~1.e1]],`1esn`[0Xa] As usn1,usn1 Contains 010 As @usn5 Order By [Count(*)[9e12..12.0]] Starts With [`5esn` In 0X7 In $#usn7 Where 123456789 =~$999|$`8esn` Is Not Null Is Not Null] Starts With [$usn2 Is Not Null Is Not Null,0 =~1e1] Ascending,None(`3esn` In 9e1 Contains $999 Where 0xabc In Null) Is Not Null Descending,Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $12[9e0..$999]|.12 Starts With _usn3 Starts With $``) Descending Limit Filter(`6esn` In $`6esn`[``..][Count(*)..] Where $7 In $usn1 In 999) Ends With Any(usn2 In 7[12] Where 0X7[.0]) Where @usn6 Is Not Null Is Not Null Create (`3esn` )-[#usn8:`4esn`|@usn5]-(:#usn7:`5esn`{`3esn`:Null[..0]}) Remove Any(`3esn` In 9e1 Contains $999 Where `2esn` Starts With 12.e12 Starts With 12.0).usn1,All(usn2 In 7[12] Where $@usn5[..0xabc][..$`3esn`])._usn4!,7._usn4 Union All Merge #usn8=((`` :`3esn`{`6esn`:Count(*)[9e12..12.0]})<-[`6esn`? *00..0Xa]->(#usn7 :#usn8:`1esn`{``:.0[$``..0X7]})-[usn2?{``:$`1esn`[``][07]}]-(`3esn` :`6esn`:_usn3{`4esn`:12.0 Starts With .12 Starts With `6esn`,#usn8:0.0 Is Null Is Null})) On Create Set `4esn`+=$`4esn`[07..],`1esn` =123.654[`4esn`..12] On Match Set `6esn`(Distinct 0Xa[$`8esn`..][$_usn4..],0xabc In Null).`2esn`! =(`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null})<-[? *..010{#usn8:False Is Null}]->(#usn7 {#usn7:1.e1 Starts With 9e12})<-[:_usn3|:`7esn` *00..0Xa]-(`1esn` $`4esn`)[..[0X7 In $#usn7,`4esn` Is Not Null Is Not Null,.0[.e12..]]][..(:`2esn`{_usn3:@usn5[0.0..0X7]})<-[`7esn`?:`2esn`|`4esn` *..010{usn1:0e0[``..$1000][$7..12.e12],`5esn`:0x0 Starts With $`6esn`}]->(@usn5 {_usn4:`5esn` Contains #usn7 Contains 9e12})],Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where #usn8 Is Not Null).`7esn`? =Filter(#usn7 In $999 In 1e1 Where 9e12[..1e1][..'s_str'])[..Extract(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`|0 Ends With 12.e12 Ends With usn2)][..None(#usn7 In $999 In 1e1 Where `1esn`[0.12..][@usn6..])],Extract(`3esn` In 9e1 Contains $999 Where _usn3[`2esn`..0X7][0.e0..$`3esn`]).@usn5 =$@usn6 Ends With 123456789 Ends With 12.0 Remove [0[$`5esn`],$999 In 1e1,$`6esn` Is Null].`5esn`,(:usn1:`3esn`{`6esn`:0.e0[$`4esn`..`2esn`],_usn3:7[12]})<-[@usn6?:_usn3|:`7esn`{@usn6:$`3esn`[.e1][_usn4]}]-(`` {`7esn`:$#usn7[..0Xa]})-[`1esn` *01234567..]->(_usn3 {#usn7:12.e12 Ends With `` Ends With 0,``:$@usn6 In @usn6 In 1e1}).`3esn`,{`6esn`:$`7esn`[0.12]}._usn3!"),
    octest:ct_string("Create @usn6=(:`7esn`)<-[`1esn`?:usn1|`4esn` *..010]-(usn1 :_usn4{`4esn`:`7esn` Is Null}),(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0})<-[?:`7esn`|:`2esn`]->(`1esn` :`3esn`{#usn7:12[..0e0][...e1]}) Union Merge ``=(`5esn` {`2esn`:`1esn`[0.0..1e1][0x0..7],#usn8:.e0}) On Match Set usn2+=`6esn`[$`8esn`][9e1] On Match Set Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn` Contains .e0 Contains 0Xa).@usn6! =0.e0 Is Not Null Is Not Null,`1esn` =07 In `6esn` Remove `4esn`:`3esn` Create (usn1 :usn1:`3esn`),((:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})<-[`2esn`? *..07{`2esn`:`3esn`[0x0..]}]->(`5esn` ))"),
    octest:ct_string("With Distinct _usn4 Contains `` Contains 1.e1,1000[..`2esn`][..$@usn6] As @usn6,0x0[@usn5][$#usn8] Order By $usn2[`5esn`..][01234567..] Asc,$`7esn`[.e1][12.0] Asc,$`5esn` =~usn1 Ascending Skip Count(*) Ends With usn1 Unwind 07 In 0Xa In usn1 As #usn8 Unwind 0x0[12e12..$`7esn`] As `7esn` Union All Detach Delete `4esn`[..$@usn6][..@usn6] Detach Delete @usn6[999..$_usn3][0.12..$@usn5] Union Create `3esn`=(((:`6esn`:_usn3{`8esn`:.e12[..999][..@usn5],`3esn`:$_usn3 Is Null})<-[? *0X7..]->(`5esn` :``:usn2{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3})-[_usn4]->(:`6esn`:_usn3{_usn3:usn1 Is Null Is Null,#usn8:9e1[$``..][0.e0..]}))),usn2=(:#usn8:`1esn`$`7esn`) Return *,$@usn5 Order By ``[$`3esn`] Asc,[1000[0e0][1e1],12.0 Is Null Is Null] Is Not Null Is Not Null Asc,.e0 =~$`7esn` =~0X0123456789ABCDEF Descending Limit {`8esn`:usn2 =~7,@usn5:`6esn` Ends With _usn4 Ends With False} Ends With [0X7 In $#usn7,`4esn` Is Not Null Is Not Null,.0[.e12..]] Ends With (_usn4 :_usn4)<-[`7esn`:_usn4]->(`5esn` {``:_usn3 Contains 9e12 Contains `8esn`,@usn6:``[7.._usn3]})-[ *..07{`6esn`:Count(*)[9e12..12.0]}]->(:usn1:`3esn`{_usn4:$#usn7 Contains $`7esn` Contains .e12})"),
    octest:ct_string("Remove `8esn`:``:usn2 Return Distinct *,`1esn` Contains `2esn` Order By (:`2esn`)-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01})-[@usn6? *0X0123456789ABCDEF..{``:0xabc[..$1000][..`5esn`],``:$`1esn` Contains 1e1 Contains @usn6}]-(`5esn` :@usn5) Is Null Is Null Asc,7 Is Not Null Ascending Delete None(`3esn` In `2esn`[..01][..True] Where usn1 In ``)[None(usn2 In 7[12] Where 12e12 =~$`7esn`)..],$`1esn` =~1e1 Union Optional Match `1esn`=((#usn8 :`6esn`:_usn3)<-[@usn5?:``{`3esn`:010 Is Null Is Null,`5esn`:_usn4 Contains `` Contains 1.e1}]-(:@usn6{`7esn`:$`6esn`[``..][Count(*)..]})),usn2=((#usn7 {`8esn`:`7esn` In 010 In usn1})<-[usn1]->(:`6esn`:_usn3{@usn6:usn1 In ``,`8esn`:Null[..010][..1000]})<-[:`8esn` *999..{@usn6:`7esn` Ends With $7 Ends With $@usn5,``:0e0 Starts With 999 Starts With `2esn`}]->(`1esn` :@usn6{`6esn`:00[False..0e0],`6esn`:$usn2 =~1.e1 =~usn1})) Create (#usn7 {`6esn`:$`2esn` Contains Count(*)})<-[?:`7esn`|:`2esn`]->(#usn8 :usn1:`3esn`{`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[usn1:_usn4]-(`` {_usn3:`5esn` Contains `7esn`})"),
    octest:ct_string("Delete 01234567[$0..][0..],`1esn`[0.0..1e1][0x0..7] With Distinct Extract(usn2 In 7[12] Where $@usn5[0.0][0X0123456789ABCDEF])[[#usn7 In 9e0[$1000] Where 01 Ends With 0Xa Ends With 0X7|`2esn`[$usn2][12.0]]..][Filter(#usn8 In `7esn` Where @usn6[999..$_usn3][0.12..$@usn5])..],{#usn8:12.0 Ends With `2esn`,@usn5:usn1 Starts With 00}[Any(#usn7 In True Contains 's_str' Contains $usn1 Where usn2 Contains $0 Contains .0)..],999 In 0e0 As #usn7 Order By `1esn` Starts With 9e1 Desc Where $@usn5[..$#usn7]"),
    octest:ct_string("Delete [#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 12.e12 Starts With \"d_str\" Starts With 9e1|$#usn7 Contains $`7esn` Contains .e12] Starts With usn2(01 Is Null) Starts With Filter(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789]),12[0e0] Union Delete 's_str' Is Not Null,.e1[..$`3esn`][..01],0.e0[$`4esn`..`2esn`] Match ((_usn3 :`8esn`{#usn8:False Starts With 0X7 Starts With 01234567})) Merge ((:_usn4{`1esn`:0e0 =~0Xa =~$999})<-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]-(`` :`5esn`{@usn5:123456789 =~@usn6})<-[`1esn`?:usn1|`4esn` *..010]-(usn1 :_usn4{`4esn`:`7esn` Is Null}))"),
    octest:ct_string("Remove usn2($usn1[`2esn`..][$`2esn`..])._usn3!,[@usn5 In 9e0 Ends With $#usn8 Where $`3esn`[..0X0123456789ABCDEF][..7]|1e1 In 0.0 In 0X0123456789ABCDEF].#usn7!,[#usn7 In $999 In 1e1 Where .e12 Starts With $12 Starts With .e12|$usn2[`4esn`..9e12]].`6esn` Unwind 12.e12 Starts With 1000 As @usn5"),
    octest:ct_string("Create ((@usn6 {`7esn`:999 In 0e0})<-[? *1000..0X0123456789ABCDEF{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}]-(`6esn` {`2esn`:$`3esn` Ends With 01234567})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)),((usn2 :`6esn`:_usn3)-[?:#usn7|@usn5 *0X0123456789ABCDEF..{_usn3:@usn5 Is Not Null}]-(#usn8 {`5esn`:$12[$usn1..][Count(*)..],`7esn`:0e0[``..$1000][$7..12.e12]})) Optional Match ((`1esn` {_usn4:`8esn` Is Null})),`2esn`=(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}) Where usn2[1.e1] Union All Remove {`4esn`:$123456789 Starts With 0.12 Starts With Null,usn2:.e1[7..][9e0..]}.`2esn`!,(_usn4 :`3esn`)-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->({`1esn`:#usn7[0]}).`4esn`,All(_usn4 In 12e12 In 123456789 Where .0 Ends With Count ( * )).`3esn` Remove (`` :`3esn`{`6esn`:Count(*)[9e12..12.0]})<-[ *0..01]-(@usn6 :_usn3{@usn6:07 Is Not Null Is Not Null,`5esn`:0e0 =~7 =~12.0}).`2esn`?,Extract(@usn6 In False Contains 0 Contains $`6esn` Where usn1 Starts With 00).@usn5!"),
    octest:ct_string("Return Distinct *,None(usn2 In 7[12] Where 123456789 =~12 =~'s_str')[{@usn5:$`` Contains $`2esn` Contains $usn2}..][(`2esn` :`6esn`:_usn3)-[?:#usn8|:`3esn` *7..]-({`7esn`:9e12 =~@usn6})..] As `1esn` Union All Create _usn3=(`1esn` )<-[? *0xabc]-(:@usn6{`6esn`:01 Ends With 0Xa Ends With 0X7}) With  *,Any(#usn7 In 9e0[$1000] Where .e0 Is Null) In None(@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``) In Filter(@usn6 In False Contains 0 Contains $`6esn` Where $@usn5 In 12e12 In 01) As `7esn` Order By (:@usn5{_usn3:123.654})<-[usn1:`1esn`|`3esn`]-(_usn4 :@usn5)-[:_usn3|:`7esn` *1000..0X0123456789ABCDEF]->(:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]}) Ends With Any(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn`[0..][999..]) Ends With {``:0xabc[..$1000][..`5esn`],``:$`1esn` Contains 1e1 Contains @usn6} Asc Where 1.e1 In 1000 In _usn3 Delete 0x0[``..],Any(usn2 In 7[12] Where $_usn3 Is Null) Is Not Null Is Not Null,[`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]|usn2 =~7] Contains Any(`3esn` In 9e1 Contains $999 Where _usn4[0]) Union Remove All(@usn6 In 010[`5esn`] Where 1.e1[$usn1]).`6esn`!,Extract(@usn6 In 010[`5esn`]|False[$`4esn`..]).@usn5 Detach Delete 0xabc[$999..][$usn1..],12[..$999][..$`2esn`],Extract(#usn7 In 9e0[$1000] Where $`1esn` Starts With Count(*)|$`8esn`[..True][.._usn4]) Ends With Single(_usn4 In 12e12 In 123456789 Where $usn2 Is Not Null Is Not Null) Create (({@usn6:#usn7[`8esn`..usn1][$999..`7esn`]})<-[@usn5:_usn4 *0x0..]->({`1esn`:0X7 In $#usn7,_usn3:usn1 Contains 010})),`7esn`=(((`2esn` {``:$0 =~9e1 =~$`2esn`,`8esn`:`5esn`[..123.654][...e12]})-[`1esn` *01234567..]->(_usn3 {#usn7:12.e12 Ends With `` Ends With 0,``:$@usn6 In @usn6 In 1e1})<-[`4esn`:`1esn`|`3esn` *12..]-(usn1 :`7esn`{`7esn`:9e12 Starts With 1e1,_usn3:$`7esn`[$_usn4][.e0]})))"),
    octest:ct_string("Unwind $``[..\"d_str\"][..$#usn8] As _usn4 Union All Merge _usn3=((@usn6 :`8esn`)<-[`4esn`?:usn1|`4esn`{`3esn`:123.654[..0.e0][..'s_str'],@usn5:#usn7[$`3esn`..$1000][0.0..`2esn`]}]->({`3esn`:`2esn` In 9e0 In 7})-[`3esn`? *12..]-(`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})) Union All Remove {`6esn`:Null =~`6esn`}._usn3!,[usn2 In False[$usn1][0x0] Where `4esn` Starts With 0e0].`6esn`!,[010[`5esn`],0Xa[..Count ( * )][..$123456789]]._usn3 Unwind [#usn8 In `7esn` Where .e0 Starts With $@usn6 Starts With $7|1000[12e12][`5esn`]] Ends With [`3esn` In 9e1 Contains $999 Where .12 In `8esn` In $#usn8] Ends With [$``[..\"d_str\"][..$#usn8],$_usn4 Starts With $1000 Starts With 12,#usn7[.e0]] As `8esn`"),
    octest:ct_string("Remove [`1esn`[$@usn6][07],123.654 Starts With 0X7 Starts With $`4esn`,$`5esn` =~$`8esn` =~usn2].`8esn`,Filter(_usn3 In _usn3 Contains _usn4 Contains $@usn5)._usn4?,[@usn6 In 010[`5esn`] Where 12e12 In 123456789].`7esn`? With Distinct 0X0123456789ABCDEF Is Not Null Is Not Null Order By #usn8[`8esn`..] Descending,9e1[`1esn`..0][999..1e1] Desc Create @usn6=((#usn8 :_usn3)<-[?:`1esn`|`3esn` *00..0Xa{`1esn`:9e12[..`3esn`][..0X0123456789ABCDEF],@usn5:usn1[False..]}]->(usn2 :`5esn`)-[{`4esn`:.e1 In 123456789}]-(:`3esn`{``:$@usn5 Is Null Is Null,`8esn`:.e1[..\"d_str\"][..$123456789]})) Union Delete ``[$`1esn`],All(#usn7 In $999 In 1e1 Where 1.e1 In 1000 In _usn3) Contains (`6esn` :`8esn`{@usn6:12.e12 Contains #usn7 Contains $_usn4})-[`8esn`{`7esn`:9e12 Starts With 1e1}]-(_usn3 :_usn4) Contains [`8esn` Is Not Null Is Not Null,12 Starts With #usn7 Starts With 0Xa,.0 Starts With `1esn`] With Distinct usn2 =~$`` =~$`8esn` As `2esn`,'s_str'[0x0..1.e1] As `6esn`,$`5esn`[\"d_str\"..] As `5esn` Order By 1.e1 Contains `6esn` Contains 0.e0 Descending,07[..07][..0X7] Descending Skip usn1[False..] Limit `6esn`[$1000][`3esn`] Where 0x0[0X7]"),
    octest:ct_string("Unwind 12['s_str'][01] As `6esn` With  $999 =~.0 As usn2 Limit 's_str' Ends With _usn4 Ends With 0e0 Where 0Xa[$`8esn`..][$_usn4..] Create ``=((:`3esn`{`5esn`:True[0xabc..01234567][$`8esn`..$@usn6]})<-[usn1:_usn4]-(`` {_usn3:`5esn` Contains `7esn`})),(((`5esn` :@usn6{usn1:'s_str'[0..]})-[?:`4esn`|@usn5 *0Xa]-({`1esn`:$12 Starts With $usn1,`6esn`:123.654[`4esn`..12]})-[ *..010{@usn5:_usn3 In $`8esn` In @usn6}]-(`2esn` {`1esn`:$`4esn` Is Null Is Null}))) Union All Remove {_usn4:$``[True],`3esn`:$#usn8[@usn6..]}.@usn5!,[$@usn6[00],$@usn5 In $`6esn` In 12e12].`6esn`?,Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where _usn4 Is Not Null Is Not Null|1.e1 =~.12).usn2! Optional Match @usn5=(:`6esn`:_usn3{`6esn`:`2esn` Starts With $`7esn`})<-[:`2esn`|`4esn` *12..]->({`7esn`:`4esn` Is Not Null Is Not Null,`4esn`:`4esn` Ends With 12 Ends With .12})<-[?:#usn8|:`3esn`{`2esn`:.e1 In 123456789,usn2:$12[$usn1..][Count(*)..]}]-(:usn1:`3esn`{_usn4:$#usn7 Contains $`7esn` Contains .e12}) Where Count ( * )[@usn6] Union Create `6esn`=((:`4esn`:`6esn`{`4esn`:$@usn5[..0xabc][..$`3esn`],`3esn`:$usn2[`2esn`..$`1esn`]})),`3esn`=(:_usn4)<-[`5esn` *0xabc]->(`` :`6esn`:_usn3)-[`` *1000..0X0123456789ABCDEF]->(`8esn` {usn2:\"d_str\" Is Not Null,`3esn`:$@usn5 In 12e12 In 01}) Match ((_usn3 {#usn7:12.e12 Ends With `` Ends With 0,``:$@usn6 In @usn6 In 1e1})<-[?:`1esn`|`3esn`{#usn8:`2esn`[..01][..True]}]-(:`8esn`{``:$`1esn` =~999})),`8esn`=(:`3esn`{_usn3:1e1 Is Not Null Is Not Null,`2esn`:$usn1 Starts With usn1 Starts With True})-[_usn4 *01234567..{@usn5:0xabc =~$@usn5,usn1:0Xa[$`8esn`..][$_usn4..]}]->(`5esn` :`4esn`:`6esn`)-[?:usn2{#usn7:0 =~1.e1 =~$#usn7}]->(`8esn` $12) Detach Delete 0X7[..$`8esn`]"),
    octest:ct_string("Detach Delete None(#usn7 In True Contains 's_str' Contains $usn1 Where $`4esn`[`8esn`])[Single(`6esn` In $`6esn`[``..][Count(*)..] Where 07 Is Not Null Is Not Null)],`1esn` Is Not Null Is Not Null With  *,{@usn6:$`3esn`[.e1][_usn4]}[`8esn`(Distinct $``[True])..] As #usn8,999[12e12..$_usn4] As usn2 Where 01 Ends With 0Xa Ends With 0X7 With  `2esn`[$usn2][12.0],Single(#usn7 In 9e0[$1000] Where $123456789[...12][..@usn6])[Filter(@usn6 In 010[`5esn`] Where $`5esn`[0X7..010][`7esn`..'s_str'])..] As _usn4 Order By $`7esn`[..@usn6] Ascending Limit [`2esn` Is Null] Is Null Is Null Where usn1[...e12][..1.e1] Union Optional Match ((:@usn5{usn2:$#usn7[..$`4esn`][..01],#usn7:False Is Null})<-[``?{usn2:$7 In 0.e0 In 999,usn1:'s_str' Starts With 9e0 Starts With usn2}]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0})),(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``}) Where _usn3 Starts With 12e12 Starts With `5esn` Delete 9e1[$`1esn`..] With  (#usn7 {_usn4:1.e1[`8esn`]})-[? *0x0..{usn2:9e12 Contains $_usn3 Contains \"d_str\",@usn5:$`4esn` Starts With 0 Starts With `7esn`}]->(:`7esn`{`4esn`:True[0xabc..01234567][$`8esn`..$@usn6],#usn8:.e12 Is Null Is Null}) =~Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12) =~{usn2:#usn8[`8esn`..]},9e1[$#usn8][$1000] As `5esn`,$usn1 Order By usn1 Ends With 9e0 Ends With 9e0 Descending,None(usn2 In 7[12] Where 123456789 =~12 =~'s_str')[{@usn5:$`` Contains $`2esn` Contains $usn2}..][(`2esn` :`6esn`:_usn3)-[?:#usn8|:`3esn` *7..]-({`7esn`:9e12 =~@usn6})..] Descending Skip (:`6esn`:_usn3{@usn6:7 =~`4esn`,_usn3:`6esn`[$1000][`3esn`]})-[_usn4:_usn4 *0X7..{@usn6:0[$`5esn`],``:9e12[_usn4..$`5esn`][_usn4...e1]}]-(:`6esn`:_usn3{`4esn`:#usn7 Contains $0 Contains $usn2})[[$`6esn`[1.e1][$_usn3]]][usn2(0xabc In Null)] Union All Delete [_usn4 In 12e12 In 123456789 Where `3esn`[0X0123456789ABCDEF..][07..]] Contains Extract(`5esn` In 0X7 In $#usn7|0[1e1][$usn1]) Contains None(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07 Is Not Null Is Not Null),0x0 In `8esn` Detach Delete usn1[..$@usn6][..00] Match _usn4=({_usn3:_usn3 Ends With 7 Ends With $`1esn`,``:$_usn4[$`5esn`][`7esn`]})<-[#usn7 *01..123456789]->({`2esn`:`7esn` In 010 In usn1,`8esn`:$0[123.654..0.e0]})"),
    octest:ct_string("Return Distinct False[$usn1][0x0] As #usn7 Limit $`8esn` Is Null Union Unwind usn2[12e12..]['s_str'..] As @usn6 Union Detach Delete $999 In 12 In 1.e1,usn2 Is Not Null"),
    octest:ct_string("With Distinct *,123.654[`4esn`..12] Order By 0.0[$usn2..] Asc,$7 Starts With 12.e12 Starts With $@usn6 Asc Limit $``[..\"d_str\"][..$#usn8] Where .e1[..\"d_str\"][..$123456789] Optional Match `1esn`=(`5esn` :`5esn`{#usn7:``[$`3esn`]}) Where $`8esn`[..True][.._usn4] Detach Delete None(`5esn` In `7esn`[$usn2..][$123456789..] Where 999 In #usn8 In $``)[[`5esn` In 0X7 In $#usn7 Where $@usn5 Starts With `5esn` Starts With 01234567|$``[..$#usn7][..`6esn`]]..Single(@usn5 In 9e0 Ends With $#usn8 Where `7esn`[$usn1..]['s_str'..])] Union Optional Match (:`4esn`:`6esn`{`4esn`:$@usn5[..0xabc][..$`3esn`],`3esn`:$usn2[`2esn`..$`1esn`]}) Where 12e12 In $`5esn` Union All Return Distinct $usn2 =~0.e0 =~@usn6,{`2esn`:'s_str'[0..],`7esn`:0Xa[Count(*)..]}[..None(#usn7 In $999 In 1e1 Where 123456789 =~@usn6)] As _usn3,0X7[`2esn`..] As `5esn` Skip `1esn` Contains $999 Contains 0.0 Limit ``[..False][..`3esn`] With  *,`` =~.12 As #usn7 Skip usn2 =~7 Limit 0x0 In 0.e0 In #usn8 Where `2esn`[..01][..True] With  Any(#usn7 In 9e0[$1000] Where 123456789[0X0123456789ABCDEF..$`1esn`][Count(*)..#usn8]) Contains [$`4esn` In 1.e1 In #usn7,usn1[False..]] Contains Extract(@usn5 In 9e0 Ends With $#usn8 Where $`3esn` In $usn2) As #usn7 Order By @usn5[0..] Ascending,$@usn5 In $`6esn` In 12e12 Desc,#usn7 In 0.e0 Desc Skip {`8esn`:$_usn4 Starts With 12.e12} Is Null Is Null Limit 999 Contains $1000 Where 999 In #usn8 In $``"),
    octest:ct_string("Unwind $@usn6[_usn3..][$999..] As `4esn` Optional Match `8esn`=(:`4esn`:`6esn`{usn2:$`8esn` Is Not Null Is Not Null})<-[@usn5? *0..01{`3esn`:$`1esn` In .e0,@usn6:12.0 =~@usn6 =~$`2esn`}]->({usn2:.0 Starts With `1esn`,`2esn`:00 Contains Count ( * ) Contains 0x0})-[? *0Xa{usn1:`3esn`[0x0..]}]->(:`5esn`{`1esn`:0.e0}) Where $999 Ends With .e0 Union All Delete `1esn` Contains $999 Contains 0.0,999[..`1esn`][..07] Union All Detach Delete True Contains 's_str' Contains $usn1,$`5esn`[..00] Delete .e1[7..][9e0..],$`5esn` In _usn3 In 0.0"),
    octest:ct_string("Merge _usn3=(`1esn` )<-[? *0xabc]-(:@usn6{`6esn`:01 Ends With 0Xa Ends With 0X7}) On Create Set `6esn` =0e0 Is Not Null,_usn3 =@usn5(Distinct 1e1 Is Not Null Is Not Null,`1esn` Starts With 0xabc Starts With $usn2)[..Extract(`3esn` In 9e1 Contains $999 Where usn2[12.e12..]|.12[01][@usn5])],`7esn`+=12.e12 Contains 9e1 Union Optional Match usn1=((`3esn` {usn2:$usn2[`4esn`..9e12]})<-[?{@usn5:_usn3 Ends With 7 Ends With $`1esn`}]->(_usn3 :_usn4)<-[_usn4?:`3esn`]-(:_usn3{_usn4:.e1[7..][9e0..]})),`7esn`=(usn1 :`7esn`) Return Distinct Filter(`6esn` In $`6esn`[``..][Count(*)..]) Ends With None(`5esn` In 0X7 In $#usn7 Where 12.0 Is Null Is Null),9e1[usn1..0x0][12.e12..12.0] Order By 00[12e12][$`7esn`] Ascending,@usn5[0..] Descending,Single(`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]) Is Not Null Is Not Null Descending Limit 0.e0[$`4esn`..`2esn`] Merge `5esn`=(({`7esn`:1.e1 In 1000 In _usn3,`8esn`:010 Starts With $`` Starts With 0e0})<-[:#usn8|:`3esn` *12..{`8esn`:12 Ends With Count ( * ),usn2:Count ( * ) In True In @usn5}]->(#usn8 :``:usn2)-[:_usn3|:`7esn`*{`1esn`:12[..$999][..$`2esn`],usn2:9e1}]->(:``:usn2{`5esn`:$12 Starts With $usn1}))"),
    octest:ct_string("Detach Delete `` Is Null,12 Starts With $123456789 Starts With .e12,#usn7[$`3esn`..$1000][0.0..`2esn`] Union Merge (`3esn` :`6esn`:_usn3{`4esn`:12.0 Starts With .12 Starts With `6esn`,#usn8:0.0 Is Null Is Null}) Create `1esn`=((@usn6 {`8esn`:@usn5 Starts With $`3esn`,_usn4:`6esn` Is Null Is Null})-[:``{``:.0[$``..0X7]}]->(:@usn6{`7esn`:$`6esn`[``..][Count(*)..]})-[ *..07]->(`4esn` {``:.e1 Starts With 12.e12 Starts With `2esn`})) Remove {#usn8:`1esn`[usn1][0xabc],_usn3:$`6esn`[1.e1][$_usn3]}.`3esn`,{usn1:@usn6[9e12]}.`4esn`!"),
    octest:ct_string("Match ((({`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12})<-[ *7..{#usn7:$`8esn`[12.e12][_usn4],`2esn`:$0[123.654..0.e0]}]-(`` :#usn8:`1esn`{`8esn`:12[$`5esn`..][False..]})-[`3esn` *..07{usn2:True Contains 0x0 Contains $_usn3}]-({``:``[$`3esn`],#usn8:$@usn6[00]}))) Unwind $_usn3 Is Not Null As _usn3 With Distinct _usn4 Is Null Is Null As @usn5,.e12[$@usn6..00][01234567.._usn3],Extract(@usn5 In 9e0 Ends With $#usn8 Where $`8esn`[123456789..][$@usn5..]) =~None(#usn7 In True Contains 's_str' Contains $usn1 Where 's_str' Starts With 9e0 Starts With usn2) As @usn5 Skip 9e12 Ends With 12e12 Ends With 12 Limit (:@usn5{_usn3:123.654})<-[usn1:`1esn`|`3esn`]-(_usn4 :@usn5)-[:_usn3|:`7esn` *1000..0X0123456789ABCDEF]->(:_usn4{@usn5:$@usn5[..0xabc][..$`3esn`],`6esn`:0x0[0.0]}) Ends With Any(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn`[0..][999..]) Ends With {``:0xabc[..$1000][..`5esn`],``:$`1esn` Contains 1e1 Contains @usn6} Where 's_str'[0..] Union All Return Distinct *,07 As `4esn` Order By 1000[0e0][1e1] Asc,Filter(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]) Is Not Null Is Not Null Asc Skip 9e12[..1e1][..'s_str'] Detach Delete [9e12[9e1]][[_usn3[`2esn`..0X7][0.e0..$`3esn`]]..] Union All Create ``=((@usn5 :`4esn`:`6esn`)<-[`3esn` *7..]->(:`5esn`{usn2:#usn8[`6esn`..][$``..]})),(`2esn` {`1esn`:0.e0[..$999][..0Xa],`7esn`:$`2esn` =~9e12}) Delete Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where $`2esn` =~9e12) Is Null Is Null,0Xa Contains `8esn` Contains 0xabc,Single(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where @usn6 In .12 In `3esn`) Contains {usn2:.12[123.654..],`2esn`:`8esn`[$`4esn`..$#usn8]} Contains All(#usn7 In $999 In 1e1 Where 9e12 Starts With 1e1)"),
    octest:ct_string("Remove [#usn7 In True Contains 's_str' Contains $usn1 Where $#usn7[..$`4esn`][..01]|1.e1 Is Null Is Null].#usn7?,(#usn8 :`2esn`)<-[usn1:`7esn`|:`2esn`{`6esn`:Count(*) In #usn8 In \"d_str\",`1esn`:$`1esn` Ends With 0X0123456789ABCDEF}]-(`6esn` :`1esn`:_usn4)-[#usn7:#usn8|:`3esn`{`6esn`:0.e0[$`4esn`..`2esn`],_usn3:7[12]}]-(:`6esn`:_usn3{`6esn`:`2esn` Starts With $`7esn`}).`8esn`!,`1esn`(Distinct `3esn`[7..0.e0][0.0..123456789],`1esn` Starts With 0xabc Starts With $usn2)._usn4!"),
    octest:ct_string("Unwind $@usn6 Ends With `1esn` As usn1 Detach Delete [$usn1[`2esn`..][$`2esn`..]] Contains Extract(usn2 In 7[12] Where $_usn3 Is Null|.e12 Is Null Is Null),12e12 Ends With 0.0 Ends With usn1 Unwind `6esn`[..Count ( * )][..$_usn4] As usn2 Union All Delete None(`5esn` In 0X7 In $#usn7 Where 0.12 Contains False Contains 1.e1)[..{@usn5:$@usn6 Is Not Null Is Not Null}][..{`3esn`:1e1 In 0.0 In 0X0123456789ABCDEF}] Union With  0.e0 =~00 As `3esn`,(`2esn` {`7esn`:999 In 0e0})<-[`8esn`?:`2esn`|`4esn` *01..123456789{`8esn`:$`4esn` Is Null Is Null,usn1:$1000 Starts With $`3esn` Starts With 0.e0}]->(:#usn7:`5esn`{_usn3:0x0[Count(*)..@usn6][Count(*)..0Xa]})<-[ *0X7..{#usn8:.e0 Contains $#usn8}]->(`2esn` :`6esn`:_usn3) In (`8esn` :`6esn`:_usn3)-[`2esn`? *..07{`2esn`:`3esn`[0x0..]}]->(_usn4 {_usn4:123.654 In 12})-[?:#usn8|:`3esn` *0x0..]-(_usn3 :`4esn`:`6esn`{usn2:`4esn` Starts With 0e0,`3esn`:7[12]}) In {_usn4:.e0 Contains $#usn8,@usn6:1000[12e12][`5esn`]} As ``,#usn8[`6esn`..][$``..] As `2esn` Where 00 In @usn6 In 0"),
    octest:ct_string("Delete 999 Starts With `4esn` Starts With 1000,Filter(`8esn` In 123456789 =~@usn6 Where 123.654[`4esn`..12])[..Extract(#usn7 In $999 In 1e1 Where 1000[12e12][`5esn`])][..[@usn5 In 9e0 Ends With $#usn8 Where $123456789 Contains $#usn8 Contains ``|.e0 =~Null]],Filter(_usn4 In 12e12 In 123456789 Where 1.e1 =~$_usn4) Is Null Is Null"),
    octest:ct_string("Optional Match ((_usn4 :#usn7:`5esn`)-[`4esn`:`1esn`|`3esn` *12..]->({`7esn`:9e12 =~@usn6})),((:`5esn`{`4esn`:$`5esn` =~$0 =~``,_usn3:$``[..$#usn7][..`6esn`]})<-[`1esn`:`8esn` *7..]-(`8esn` :@usn5{`5esn`:_usn3 In $`8esn` In @usn6,_usn4:$@usn6 Ends With 12.e12 Ends With @usn5})<-[?:usn2{@usn5:999[..`1esn`][..07],_usn4:Count ( * ) Ends With $123456789}]->(`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})) Where Count ( * )[$`5esn`..][$7..] Merge #usn7=(((:usn1:`3esn`{_usn3:$`6esn`[1.e1][$_usn3]})-[:`` *123456789..{`1esn`:`8esn` Is Not Null Is Not Null}]-(#usn8 :`2esn`)<-[ *00..0Xa]->(`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null}))) On Create Set [`6esn` In $`6esn`[``..][Count(*)..] Where 0x0[$0][7]|$`4esn`[`8esn`]].usn1 =Any(_usn4 In 12e12 In 123456789 Where _usn3 In $`8esn` In @usn6)[Single(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789])][All(@usn5 In 9e0 Ends With $#usn8)] On Match Set Extract(`5esn` In `7esn`[$usn2..][$123456789..] Where $`4esn` Contains .e0 Contains 0Xa).@usn6! =0.e0 Is Not Null Is Not Null,`1esn` =07 In `6esn` Union All With  *,Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 1e1 Contains 0.e0 Contains 9e1|12.e12 Ends With $``) Is Null Is Null Remove Any(@usn5 In 's_str'[0..] Where #usn7[0.12..])._usn3,[`6esn` In $`6esn`[``..][Count(*)..] Where @usn5[0.0..0X7]].``! Delete 0x0[usn1..usn1],`2esn` Starts With .e1 Starts With 9e12"),
    octest:ct_string("With Distinct 12.e12 =~0X0123456789ABCDEF =~1.e1 As `6esn`,0.e0[..$7] As _usn3,usn1 Ends With 0.0 Order By None(`3esn` In 9e1 Contains $999 Where 0xabc In Null) Is Not Null Descending,.e0 Starts With $@usn6 Starts With $7 Descending Limit $@usn6[..12] Where `3esn` Starts With 9e0 Starts With usn1 Match ((usn1 :_usn4{`4esn`:`7esn` Is Null})<-[`8esn`?:`2esn`|`4esn` *01..123456789{`8esn`:$`4esn` Is Null Is Null,usn1:$1000 Starts With $`3esn` Starts With 0.e0}]->(:#usn7:`5esn`{_usn3:0x0[Count(*)..@usn6][Count(*)..0Xa]})) Union Merge ((`7esn` :`2esn`{`4esn`:0[1e1][$usn1],usn2:`8esn`[..$#usn8]})<-[_usn4?:usn2]-(@usn6 :`6esn`:_usn3{@usn5:0xabc =~$@usn5,usn1:0Xa[$`8esn`..][$_usn4..]})-[`3esn`?:`7esn`|:`2esn`]-(`5esn` :#usn8:`1esn`{_usn3:`6esn` Is Null Is Null})) On Create Set usn1 =`3esn`[123456789],`3esn` =9e1[.12][`7esn`] On Match Set All(usn2 In False[$usn1][0x0] Where 010 Starts With 0 Starts With 0.0).`3esn`! =12.0[$12..$_usn4] Union All Create `7esn`=(((`7esn` {usn2:0X7[..$`8esn`],`1esn`:123.654 Is Not Null})<-[ *12..{`8esn`:#usn7[$`3esn`..$1000][0.0..`2esn`]}]-(`5esn` :`1esn`:_usn4)-[:`6esn`|:#usn8{``:`1esn` Starts With 0xabc Starts With $usn2}]-(_usn3 :`2esn`{@usn5:`4esn` Is Not Null Is Not Null}))),`2esn`=((`6esn` :#usn7:`5esn`)<-[?:#usn7|@usn5 *01234567..{`5esn`:$`4esn` In 1.e1 In #usn7}]->(:#usn8:`1esn`$`7esn`)) Create `6esn`=(`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null})<-[@usn6:`1esn`|`3esn` *0X7..]->(_usn3 :`4esn`:`6esn`{usn2:`4esn` Starts With 0e0,`3esn`:7[12]}),(:`8esn`{#usn7:`1esn`[`3esn`..],usn2:_usn3[$usn2..][$``..]})<-[`7esn`:`2esn`|`4esn`{_usn4:.e1[7..][9e0..]}]-(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"})<-[? *0X7..{`2esn`:$@usn5 In $`6esn` In 12e12}]-(`3esn` :_usn4{`3esn`:12[..0e0][...e1],`4esn`:.0 Is Null Is Null})"),
    octest:ct_string("With  $1000 Starts With $`3esn` Starts With 0.e0 As @usn6,.e12 In $`5esn` In 0X7 As _usn4 Where Count ( * ) In 0.12 Delete $@usn5[_usn4] Create `1esn`=((`1esn` :#usn8:`1esn`{``:_usn3[0x0],``:$0 In `3esn` In 07})-[?$7]-(#usn7 {`8esn`:`5esn`[..123.654][...e12],`3esn`:$@usn6 Ends With 123456789 Ends With 12.0}))"),
    octest:ct_string("Optional Match `6esn`=((`6esn` :#usn8:`1esn`{`6esn`:usn1[..$@usn6][..00]})-[@usn5:_usn4 *0x0..]-(_usn3 :`1esn`:_usn4{#usn8:$999 Ends With .e0,_usn4:`4esn`[\"d_str\"]['s_str']})) Return Extract(#usn7 In 9e1[$`1esn`..] Where @usn5 Is Null)[All(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 9e1[..123456789])..] As `1esn`,$`6esn`[1.e1][$_usn3] As usn1 Order By [#usn7 In 9e1[$`1esn`..] Where @usn5 Is Null] Is Not Null Desc Limit Count ( * ) In 0.12 Detach Delete `6esn` =~`3esn` =~@usn6,(:_usn4$12)-[`1esn`?:`6esn`|:#usn8 *0Xa]-(usn1 :#usn8:`1esn`)[{`7esn`:$usn2 =~9e1}..] Union All Create #usn7=(((:usn1:`3esn`{_usn3:$`6esn`[1.e1][$_usn3]})-[:`` *123456789..{`1esn`:`8esn` Is Not Null Is Not Null}]-(#usn8 :`2esn`)<-[ *00..0Xa]->(`5esn` :`4esn`:`6esn`{usn2:$`5esn` Is Not Null Is Not Null,`7esn`:\"d_str\" Is Not Null}))),#usn8=(((`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]})<-[@usn6?:`7esn`|:`2esn`]->({#usn8:1e1 Is Not Null Is Not Null})-[?:@usn5|_usn3{`1esn`:`2esn` Is Null,`7esn`:`` =~.12}]-(`4esn` :#usn8:`1esn`{`8esn`:$@usn6 Ends With `1esn`,@usn5:1.e1 =~.12}))) Create ((@usn6 {`7esn`:999 In 0e0})<-[? *1000..0X0123456789ABCDEF{`3esn`:07 In `6esn`,`2esn`:$#usn8[12.e12..`8esn`][12.0..0.0]}]-(`6esn` {`2esn`:$`3esn` Ends With 01234567})-[?{`7esn`:9e0 Ends With $#usn8}]->(`` :`7esn`)),((usn2 :`6esn`:_usn3)-[?:#usn7|@usn5 *0X0123456789ABCDEF..{_usn3:@usn5 Is Not Null}]-(#usn8 {`5esn`:$12[$usn1..][Count(*)..],`7esn`:0e0[``..$1000][$7..12.e12]})) Optional Match ``=((usn2 :`5esn`{`7esn`:0.12 Starts With $`8esn` Starts With @usn5})<-[usn1:`7esn`|:`2esn`{`6esn`:Count(*) In #usn8 In \"d_str\",`1esn`:$`1esn` Ends With 0X0123456789ABCDEF}]-(#usn8 :usn2{@usn5:$#usn7[..9e0][..123.654],`2esn`:7[12]})<-[ *..07{`5esn`:999 In 0e0}]-(_usn4 :`8esn`)) Where 010 Is Null Is Null Union All Unwind Filter(`5esn` In 0X7 In $#usn7 Where $@usn5 Starts With `5esn` Starts With 01234567) Is Null Is Null As `8esn` Return Distinct .e12 Starts With $7 Starts With .0,[$``[7],_usn3 Contains _usn4 Contains $@usn5] Starts With [`3esn` In 9e1 Contains $999 Where _usn4[@usn6..][$0..]|usn2 =~7] Starts With Any(`3esn` In `2esn`[..01][..True] Where 12.e12 Contains #usn7 Contains $_usn4) As #usn7,01 Contains usn2 Contains 0X0123456789ABCDEF As `8esn` Order By 0Xa =~False =~@usn5 Descending,12.0 In 010 Ascending,`4esn`[123456789] Ascending"),
    octest:ct_string("Return Distinct _usn4(Distinct usn2[07..][.0..]) Ends With Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 12[$`5esn`..][False..]|$`2esn` Starts With `4esn` Starts With $usn1) Ends With Extract(@usn5 In 9e0 Ends With $#usn8 Where $`3esn` In $usn2),usn1[..$@usn6][..00] As #usn7,(#usn8 :_usn3{@usn5:_usn3 Starts With 12e12 Starts With `5esn`,@usn6:usn2 In _usn3})-[`1esn`?{`8esn`:.e0,usn2:9e1 Contains $999}]->(usn1 :usn2{`3esn`:True[0xabc..01234567][$`8esn`..$@usn6],_usn4:999 In #usn8 In $``})-[? *..010{`2esn`:'s_str'[0..]}]->({`7esn`:1.e1 In 1000 In _usn3,`8esn`:010 Starts With $`` Starts With 0e0})[..(`5esn` )-[ *00..0Xa]->(usn1 :#usn7:`5esn`{`5esn`:$@usn5 In 12e12 In 01})-[usn1?:`2esn`|`4esn`{#usn7:$#usn7[..9e0][..123.654],usn2:.e0 Is Not Null Is Not Null}]-(`1esn` :usn1:`3esn`{_usn3:.0[.e12..]})] As `7esn` Order By 0X7[..$`8esn`] Desc,$123456789[12e12..9e0] Descending Create (:`2esn`{usn1:.0[..'s_str'][..01234567],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})<-[#usn8? *0Xa]-(`2esn` :`6esn`:_usn3)"),
    octest:ct_string("Remove All(`6esn` In $`6esn`[``..][Count(*)..] Where 0X7['s_str'..][01..]).`2esn`!,(`3esn` {usn2:$usn2[`4esn`..9e12]})<-[`6esn`? *01234567..]->({`3esn`:`5esn` Contains `1esn` Contains usn1,`1esn`:999[@usn5..][Null..]})<-[_usn4?:@usn6|:`7esn`]->(_usn3 :`2esn`{@usn5:`4esn` Is Not Null Is Not Null}).`4esn` Merge `1esn`=((`2esn` :`1esn`:_usn4)-[?:``]-(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})) On Create Set #usn7+=.e0[..9e12][..07],`4esn`(True[$_usn3..],$999[``]).usn2 =123456789 Is Null Is Null,@usn5 =01[07..][1.e1..] On Create Set `5esn`+={#usn7:12e12 In $`5esn`} Ends With {`6esn`:12 =~usn1,_usn3:`6esn`[$`8esn`][9e1]},usn2 =True Contains 0x0 Contains $_usn3 Remove All(@usn6 In False Contains 0 Contains $`6esn` Where 12e12 In $`5esn`).`6esn`?"),
    octest:ct_string("With Distinct $7[999][usn1] As `6esn`,0 Ends With Count(*) Ends With False As `7esn` Order By Any(#usn7 In 9e0[$1000] Where .e0 Is Null) =~Extract(`3esn` In 9e1 Contains $999 Where `2esn` Starts With 12.e12 Starts With 12.0|$`3esn` In $usn2) =~{#usn8:0.0 =~9e0 =~$0,`5esn`:Count ( * ) Ends With $123456789} Descending Skip 010[...12] Limit $`1esn` In .e0 Return Distinct `3esn`[$123456789..][$usn2..] Order By `3esn`[7..0.e0][0.0..123456789] Asc,``[$`1esn`] Desc Skip Extract(#usn7 In $#usn7 Contains $`7esn` Contains .e12|1.e1 =~.12) Starts With [12 In $usn1 In 7,`6esn` Ends With Count ( * ) Ends With Count ( * ),`2esn` Starts With $`7esn`] Starts With usn2(Distinct .0[..'s_str'][..01234567],Count(*) In 12 In `6esn`) Limit `3esn`(#usn8 =~0.e0,1000[0e0][1e1])[[12[..0e0][...e1]]..Single(#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where $123456789 Contains $#usn8 Contains ``)] Union With  *,00[False..0e0] As _usn3 Order By None(`8esn` In 123456789 =~@usn6 Where True[`3esn`]) Is Not Null Is Not Null Desc Skip (`2esn` :_usn3{`8esn`:01234567[Null..$_usn3]})<-[?:usn2{usn2:@usn5 Is Not Null}]-(`7esn` {#usn8:False Starts With 0X7 Starts With 01234567}) =~[12 In $usn1 In 7] =~Filter(@usn5 In 's_str'[0..] Where 0.e0) Limit [_usn3 Ends With 7 Ends With $`1esn`,True Contains .e12,usn2 Is Not Null] Contains [$`2esn`[.0..][0.0..]] Contains (`6esn` :`8esn`)<-[_usn3 *0X0123456789ABCDEF..]-(#usn8 :`2esn`)-[`7esn`:#usn8|:`3esn` *0..01{`3esn`:07[_usn3..][`6esn`..],@usn6:``[usn1][`5esn`]}]->(:_usn3{_usn4:.e1[7..][9e0..]}) Where `2esn` Starts With $`7esn` With Distinct 999[@usn5..][Null..] Limit None(usn2 In 7[12] Where 123456789 =~12 =~'s_str')[{@usn5:$`` Contains $`2esn` Contains $usn2}..][(`2esn` :`6esn`:_usn3)-[?:#usn8|:`3esn` *7..]-({`7esn`:9e12 =~@usn6})..] Where @usn5 Contains 9e0"),
    octest:ct_string("Unwind 0e0[$999..0.0][$`8esn`..1.e1] As `` Union Remove `6esn`($`2esn` Starts With `4esn` Starts With $usn1,.12 Starts With _usn3 Starts With $``).usn2!"),
    octest:ct_string("Unwind #usn7[0.12..] As `8esn`"),
    octest:ct_string("Optional Match _usn4=(`5esn` :``:usn2)-[?{_usn3:`4esn`[$_usn3..$`7esn`]}]-({usn2:.12[0X7..][12e12..],`6esn`:$`4esn`[`6esn`..$12]}),`2esn`=(:#usn8:`1esn`$`7esn`) Union Remove `3esn`:#usn7:`5esn`,[$123456789 In 0.12]._usn3!,None(usn2 In False[$usn1][0x0] Where 010 Starts With 0 Starts With 0.0).@usn6! Merge `4esn`=({`8esn`:.e0[999..1000][1e1..$`8esn`],`1esn`:$`3esn`[$_usn4..0Xa]}) On Create Set #usn7+=Single(usn2 In 7[12] Where `7esn` Is Null)[..Single(`6esn` In $`6esn`[``..][Count(*)..] Where $7 In $usn1 In 999)][..Any(#usn7 In True Contains 's_str' Contains $usn1 Where 12.e12 Contains #usn7 Contains $_usn4)] On Match Set `2esn` =9e1 Ends With Count(*) Ends With $7 Union All With  *,.e12[.12..],_usn4 Ends With _usn4 Ends With 9e0 As `` Skip None(`3esn` In `2esn`[..01][..True] Where usn1 In ``)[None(usn2 In 7[12] Where 12e12 =~$`7esn`)..] Limit Null[..0]"),
    octest:ct_string("Return $@usn6[..12] As #usn8,Single(@usn5 In 9e0 Ends With $#usn8 Where _usn3 Ends With 7 Ends With $`1esn`)[{`5esn`:`6esn`[$`8esn`][9e1]}] As `7esn` Create (:`2esn`{usn1:.0[..'s_str'][..01234567],usn2:9e12[..`3esn`][..0X0123456789ABCDEF]})<-[#usn8? *0Xa]-(`2esn` :`6esn`:_usn3) Union Detach Delete `4esn` Contains 9e0,`5esn` Contains `7esn` Merge #usn8=((`4esn` :@usn6)<-[@usn5?:usn2 *0..01]->(:`4esn`:`6esn`{#usn8:True[`3esn`],`1esn`:0x0 Starts With $`6esn`})) Union Return Distinct Single(usn2 In False[$usn1][0x0] Where $@usn6 Is Not Null Is Not Null) =~[#usn7 In $#usn7 Contains $`7esn` Contains .e12 Where 07 Is Not Null Is Not Null],010 Is Null Is Null As #usn8,All(`3esn` In `2esn`[..01][..True] Where usn2[12.e12..])[Any(#usn8 In `7esn` Where .e0 Is Null Is Null)..Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 1e1 Contains 0.e0 Contains 9e1|12.e12 Ends With $``)][{`5esn`:False[$usn1][0x0]}..`8esn`(Distinct .e0[01234567..$`8esn`])] As `8esn` Order By $_usn3[_usn4..] Asc,0.12 Is Null Is Null Desc,`6esn` Ends With _usn4 Ends With False Ascending Skip 1.e1 =~.12 Limit `1esn`[$@usn6][07] Return $_usn4 Is Null Is Null,usn2 Starts With .0 Order By 9e1[$#usn8][$1000] Descending Limit #usn7 =~9e12"),
    octest:ct_string("Optional Match `3esn`=(((:`6esn`:_usn3{`8esn`:.e12[..999][..@usn5],`3esn`:$_usn3 Is Null})<-[? *0X7..]->(`5esn` :``:usn2{usn1:$`1esn` Starts With $`4esn` Starts With $_usn3})-[_usn4]->(:`6esn`:_usn3{_usn3:usn1 Is Null Is Null,#usn8:9e1[$``..][0.e0..]}))),usn2=(:#usn8:`1esn`$`7esn`) Where 123456789 Is Null Is Null Delete (`2esn` $`6esn`)<-[`4esn`?:`4esn`|@usn5 *1000..0X0123456789ABCDEF]->(usn2 {usn1:.e12 Ends With 0Xa Ends With 0xabc}) Ends With Extract(@usn6 In False Contains 0 Contains $`6esn` Where .e1[usn2..$_usn3][.0..$#usn7]) Ends With Single(#usn7 In $999 In 1e1 Where `3esn`[0X0123456789ABCDEF..][07..]) Union Return *,1e1 Is Not Null Is Not Null Order By Single(@usn6 In 010[`5esn`] Where Count(*)[9e12..12.0])[(`2esn` {``:$0 =~9e1 =~$`2esn`,`8esn`:`5esn`[..123.654][...e12]})<-[:`1esn`|`3esn`{`2esn`:$`3esn` Ends With 01234567}]->(_usn3 :`5esn`)][`7esn`] Descending Skip 12 Contains 1.e1 Unwind 1000[$7..][_usn4..] As `5esn` Match ((_usn4 :#usn7:`5esn`)-[`4esn`:`1esn`|`3esn` *12..]->({`7esn`:9e12 =~@usn6})),((:`5esn`{`4esn`:$`5esn` =~$0 =~``,_usn3:$``[..$#usn7][..`6esn`]})<-[`1esn`:`8esn` *7..]-(`8esn` :@usn5{`5esn`:_usn3 In $`8esn` In @usn6,_usn4:$@usn6 Ends With 12.e12 Ends With @usn5})<-[?:usn2{@usn5:999[..`1esn`][..07],_usn4:Count ( * ) Ends With $123456789}]->(`` :`2esn`{`3esn`:0Xa In #usn7 In 's_str'})) Union Remove Extract(#usn7 In True Contains 's_str' Contains $usn1).#usn8!,#usn7().#usn7 Unwind 00[False..0e0] As `6esn` Remove ({``:.e1 Starts With 12.e12 Starts With `2esn`})<-[``:`5esn`|:usn2{`5esn`:_usn4[0]}]-(`8esn` :`8esn`)<-[`4esn` *0Xa{@usn6:999 Starts With `2esn` Starts With .e1,`4esn`:$@usn5[..0xabc][..$`3esn`]}]->(:`5esn`{_usn3:``[usn1][`5esn`],`1esn`:$@usn5 Contains 's_str' Contains \"d_str\"}).@usn5,`5esn`:`5esn`,Any(#usn7 In 9e0[$1000] Where `3esn` Starts With 9e0 Starts With usn1)._usn4?"),
    octest:ct_string("Optional Match #usn8=(((:usn1:`3esn`{`8esn`:12 Starts With True Starts With 12e12,`8esn`:`2esn` Starts With $`7esn`})<-[`7esn`?:`2esn`|`4esn` *..010{usn1:0e0[``..$1000][$7..12.e12],`5esn`:0x0 Starts With $`6esn`}]->(@usn5 {_usn4:`5esn` Contains #usn7 Contains 9e12})-[ *0..01{@usn6:$0[123.654..0.e0]}]-(@usn6 :`8esn`{`4esn`:$`7esn`[.e1][12.0],#usn8:$`7esn`[$_usn4][.e0]}))) Where .12[123.654..] Create ((usn1 :`2esn`{@usn6:True Contains 's_str' Contains $usn1,``:$`4esn` Starts With 0 Starts With `7esn`})-[?*..{`6esn`:01 Ends With 0Xa Ends With 0X7}]->(:usn1:`3esn`{_usn4:$#usn7 Contains $`7esn` Contains .e12})) Union All Return Distinct *,(usn2 :usn1:`3esn`{`3esn`:`2esn` Is Null})<-[:`8esn` *999..{@usn6:`7esn` Ends With $7 Ends With $@usn5,``:0e0 Starts With 999 Starts With `2esn`}]->(`6esn` :#usn7:`5esn`)<-[usn1:`1esn`|`3esn`]->(`1esn` {#usn8:$#usn7[..9e0][..123.654],`5esn`:9e12 Starts With 1e1}) =~(`7esn` {#usn7:$@usn6 Ends With `1esn`})<-[#usn8 *0x0..]->(_usn3 :usn2{#usn8:$`2esn` Is Null,_usn3:123.654 Is Not Null})-[? *0X0123456789ABCDEF..]-(usn2 :_usn3),[@usn5 In 9e0 Ends With $#usn8 Where 12.e12 =~0X0123456789ABCDEF =~1.e1|00[$`1esn`..][@usn6..]] As `1esn` Skip 01[07..][1.e1..] Limit All(usn2 In 7[12] Where #usn8 Is Null Is Null)[[usn2 In 7[12] Where #usn7[.e0]]..] Detach Delete `` Is Null,12 Starts With $123456789 Starts With .e12,#usn7[$`3esn`..$1000][0.0..`2esn`] Union Merge (((_usn4 :`8esn`{usn1:12.e12[..$`6esn`]})-[@usn6:@usn5|_usn3{`3esn`:usn2 Is Not Null,#usn7:123.654 In 12}]->(`7esn` {``:.e0 Is Null Is Null,`2esn`:01234567[Null..$_usn3]})-[?:`8esn`*]-(`7esn` :usn2{`3esn`:12.0 In 123.654 In _usn4})))"),
    octest:ct_string("Unwind [_usn4 In 12e12 In 123456789 Where 0x0 Starts With $`6esn`] As `6esn` Return Distinct 12 Starts With True Starts With 12e12 As _usn4 Order By None(`8esn` In 123456789 =~@usn6 Where True[`3esn`]) Is Not Null Is Not Null Desc"),
    octest:ct_string("Delete 12 Contains 01234567,[@usn5[$`6esn`..][$999..],`` Starts With $123456789] Is Null,`6esn` Is Null Is Null Union All With Distinct *,`3esn`(`7esn`,0x0 Contains $`6esn` Contains `4esn`) Is Null Is Null Limit usn2[..$usn1][..$#usn8] Merge `5esn`=({usn2:.0 Starts With `1esn`,`2esn`:00 Contains Count ( * ) Contains 0x0})<-[_usn4?:@usn6|:`7esn`]->(_usn3 :`2esn`{@usn5:`4esn` Is Not Null Is Not Null})<-[`8esn`:usn1|`4esn` *0Xa{`6esn`:Count(*) In #usn8 In \"d_str\",`1esn`:$`1esn` Ends With 0X0123456789ABCDEF}]->(:`8esn`) On Create Set {usn1:$_usn4 Starts With $1000 Starts With 12}.@usn6! =[1e1 Is Not Null Is Not Null,``[$`3esn`],$`8esn` Is Not Null Is Not Null][..[$usn1 Ends With _usn4 Ends With `2esn`]][..Extract(usn2 In False[$usn1][0x0] Where .e1[usn2..$_usn3][.0..$#usn7])] On Create Set `5esn`+=All(#usn7 In 9e1[$`1esn`..] Where 12 =~usn1)[Extract(#usn7 In $999 In 1e1)..][1.e1..],`2esn` =False Starts With 0X7 Starts With 01234567 Detach Delete 9e1 Contains $999"),
    octest:ct_string("With Distinct *,$_usn3 Is Not Null Is Not Null As @usn6,$0[#usn8] As `4esn` Order By 0.0 Ends With $`7esn` Asc,010 Starts With 0 Starts With 0.0 Desc,Extract(`6esn` In $`6esn`[``..][Count(*)..] Where 1.e1 Ends With $_usn4 Ends With #usn7|0xabc =~$@usn5) =~{_usn4:9e1[`1esn`..0][999..1e1]} Desc Limit `1esn`[$@usn6][07] Union All Unwind Filter(@usn5 In 's_str'[0..] Where #usn7[0.12..]) =~[_usn4 In 12e12 In 123456789 Where .0 Ends With Count ( * )|$`1esn` In .e0] As @usn5 Merge @usn6=((`5esn` {``:_usn3 Contains 9e12 Contains `8esn`,@usn6:``[7.._usn3]})<-[@usn5?:usn2 *00..0Xa{usn2:$usn2[`4esn`..9e12]}]->(:`3esn`{_usn3:1e1 Is Not Null Is Not Null,`2esn`:$usn1 Starts With usn1 Starts With True})-[usn2?:`5esn`|:usn2{`2esn`:`7esn`[$usn2..][$123456789..],@usn5:9e1 Starts With Count ( * )}]->(usn2 :usn1:`3esn`)) On Match Set [#usn8 In `7esn` Where 01 Ends With 0Xa Ends With 0X7|`8esn` Contains Count(*) Contains $#usn7].``? ={`5esn`:$`1esn` In .e0,``:`6esn` Ends With Count ( * ) Ends With Count ( * )} Is Null Is Null,`8esn`+=$7 Is Null,`7esn` =_usn4 In #usn7 Union All Remove (:`6esn`:_usn3$usn2)<-[:`4esn`|@usn5{`3esn`:Null[..0]}]->(:`4esn`:`6esn`{`4esn`:$`3esn`[..0X0123456789ABCDEF][..7],`5esn`:$0 =~9e1 =~$`2esn`})-[#usn7?{`5esn`:.e12 Starts With $#usn8 Starts With False}]->(#usn8 :@usn5{_usn4:$#usn7 Contains $`7esn` Contains .e12}).usn2 Delete $`1esn` Ends With 0X0123456789ABCDEF"),
    octest:ct_string("Remove {``:.0[..'s_str'][..01234567]}.@usn5!,[#usn7 In 9e0[$1000] Where $123456789[...12][..@usn6]].`3esn` Return Distinct *,Extract(_usn3 In _usn3 Contains _usn4 Contains $@usn5 Where 1e1 Contains 0.e0 Contains 9e1|12.e12 Ends With $``) Is Null Is Null Order By Extract(#usn7 In 9e1[$`1esn`..] Where $999[``]) Starts With (`6esn` :@usn6)<-[ *..07]-(:_usn3{`7esn`:9e0 Ends With $#usn8}) Starts With (#usn7 :@usn6)<-[? *01..123456789]-(`6esn` {`2esn`:9e1 Contains 12,usn2:_usn3[`5esn`..][usn2..]}) Ascending,$@usn5[..$#usn7] Descending,{`3esn`:.e1[..\"d_str\"][..$123456789]} Descending Skip 9e1 Starts With Count ( * ) Limit {`1esn`:$999[``],@usn5:#usn7 Starts With $123456789 Starts With 12e12}[(_usn3 :`7esn`)-[`2esn`? *1000..0X0123456789ABCDEF{`8esn`:$7 In $usn1 In 999,@usn5:00 Ends With `` Ends With 12.e12}]-(:usn2{`5esn`:True[0xabc..01234567][$`8esn`..$@usn6]})..] Union All Delete `7esn` In 010 In usn1").
