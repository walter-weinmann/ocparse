%%%-------------------------------------------------------------------
%%% File        : performance_command_legacy_SUITE.erl
%%% Description : Test Suite for rule: command.
%%%
%%% Created     : 29.12.2016
%%%-------------------------------------------------------------------
-module(performance_command_legacy_SUITE).

-compile(export_all).

-include_lib("common_test/include/ct.hrl").
-include_lib("eunit/include/eunit.hrl").

%%--------------------------------------------------------------------
%% COMMON TEST CALLBACK FUNCTIONS - SUITE
%%--------------------------------------------------------------------

suite() ->
    [
        {timetrap, {minutes, 10}}
    ].

init_per_suite(Config) ->
    Config.

end_per_suite(_Config) ->
    ok.

%%--------------------------------------------------------------------
%% COMMON TEST CALLBACK FUNCTIONS - ALL
%%--------------------------------------------------------------------

all() ->
    [test_command].

%%--------------------------------------------------------------------
%% TEST CASES
%%--------------------------------------------------------------------

test_command(_Config) ->
    octest_legacy:ct_string("Drop Constraint On()-[@usn6:_usn3]->()Assert Exists(None(`7esn` In 0.12 Is Not Null Where $0 Contains $7)._usn3!)"),
    octest_legacy:ct_string("Create Constraint On()<-[`5esn`:#usn8]-()Assert Exists({`6esn`:4.9e12 Is Not Null Is Not Null,_usn4:`4esn`[9e-12..true]}.`2esn`?.`8esn`?.usn1)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`3esn`)Assert Exists(Reduce(@usn5=$0 Contains $123456789 Contains {`3esn`},usn2 In .12e-12 Ends With `2esn`|010[..9e-1][..0X7])._usn3!)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`1esn`)Assert Exists(Single(usn1 In $@usn6 Is Null Is Null Where .9e1[$`1esn`..][$``..]).`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn7:usn1]->()Assert Exists(Extract(@usn6 In $usn2 Contains $`3esn` Contains 6.0e0 Where {`4esn`} Ends With Count(*)|{`7esn`} =~\"d_str\" =~{``})._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`3esn`)Assert (`4esn` :``{``:$`6esn` =~$#usn7 =~$`4esn`,_usn3:{usn2} In false})-[`7esn`:`2esn`|`5esn`{_usn4:\"d_str\"[0x0..{@usn6}][$@usn5..0],`1esn`:`8esn`[.12e12..]}]->($999)<-[#usn8?:_usn4|:`1esn`{usn1:$`4esn` Is Null Is Null}]->(:``{`2esn`:{`8esn`} In {_usn3} In 6.0e0,usn1:{`1esn`} Is Null})._usn3!.`4esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`4esn`)Assert Exists(Reduce(@usn6=true In 0.0,`6esn` In 010[{`1esn`}..]|2.9e1[2.12..1.9e0]).`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:_usn3)Assert Extract(usn1 In \"d_str\" Contains {@usn6} Where $`` =~.1e-1).`4esn`.usn1?._usn3? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[``:_usn4]-()Assert Exists((usn1 )<-[?:`6esn`{`1esn`:$`5esn` Is Not Null,`2esn`:.1e-1[2.9e1..][$`7esn`..]}]->(:@usn6:_usn3{#usn7:0Xa In 1.0 In $@usn5})-[?:`7esn`|usn1 *01234567..{usn1:9e12 Is Null Is Null}]-(`3esn` :`2esn`:`4esn`).`5esn`?.`3esn`!.#usn8)"),
    octest_legacy:ct_string("Drop Constraint On(``:`8esn`)Assert Exists(Filter(`` In `7esn` =~#usn8 =~\"d_str\" Where 07[{@usn5}..]).`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`5esn`:`1esn`]-()Assert Exists(Case When `2esn` Starts With 010 Starts With `` Then 00[$``] Else @usn6[0x0..][$_usn4..] End.@usn6)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:usn2)Assert Exists(Case When $`4esn` Ends With {999} Then 6.0e0[$#usn7..$1000] When .12e12 Is Not Null Then {`6esn`} Starts With .12e-12 End.`5esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:#usn8]-()Assert Exists(Case When 9e0[{7}...0e-0][Null..@usn5] Then $usn2 In #usn7 In #usn7 When 999 Ends With {#usn8} Then `1esn` =~{12} =~{999} Else {`1esn`} Is Null End.@usn6)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:_usn4)Assert [`8esn` In {_usn4} Ends With {0} Ends With `1esn` Where .12e-12[9e1]|.9e0[07..][4.9e12..]].usn2 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:`1esn`]-()Assert Exists(Single(#usn7 In .0e-0 In 12 Where {0}[.0e-0][$`2esn`]).`1esn`.@usn6?.@usn6!)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:#usn7)Assert Exists(Any(`` In `7esn` =~#usn8 =~\"d_str\" Where 12e12 Is Not Null Is Not Null).`5esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`3esn`)Assert {@usn6:12e12[{`4esn`}..`4esn`][999..{@usn6}]}.usn1?.`8esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn4:#usn7)Assert Shortestpath((({`7esn`:00 Is Not Null Is Not Null,_usn4:.12e12 Starts With 5.9e-12 Starts With `4esn`})-[`5esn`? *999..123456789{_usn4:$123456789[{usn1}][.12e-12],#usn8:$999 =~false =~{`8esn`}}]-(_usn3 :`1esn`:``))).@usn6! Is Unique"),
    octest_legacy:ct_string("Drop Index On:`1esn`(`2esn`)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`5esn`)Assert Any(@usn6 In 9e12[..usn2][.._usn3] Where $0 Ends With 9e-12 Ends With $_usn4).@usn6!.usn2? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:#usn8)Assert Exists(Extract(_usn3 In `8esn`[_usn4] Where 12.0[..Count ( * )][..@usn6]|00 Is Not Null Is Not Null).`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:@usn5)Assert Exists(Any(@usn6 In $usn2 Contains $`3esn` Contains 6.0e0 Where 3.9e-1 Starts With .9e0 Starts With {#usn7}).``!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:@usn5)Assert @usn5(Count ( * ) Starts With 0.12,$123456789).#usn8 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:usn1)Assert Any(usn1 In {#usn7} =~.12e12 =~9e0 Where \"d_str\" Starts With ``)._usn3 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`6esn`)Assert Shortestpath(((`8esn` :`8esn`)-[#usn7:@usn6|:`4esn`]->(:`6esn`{#usn7:{`6esn`} Starts With @usn6,`7esn`:{7}[0x0][1e1]})-[`8esn`*]-(`7esn` :``{usn2:$7}))).`3esn`.`4esn`!.`4esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`2esn`)Assert Reduce(``=$_usn3[0X0123456789ABCDEF..][0x0..],usn2 In $`5esn`[{`4esn`}][{0}]|1.9e0 In $@usn6 In $_usn3).usn1 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn2:``)Assert Exists(Any(usn2 In .12e-12 Ends With `2esn` Where `3esn` Contains 01 Contains 01).`5esn`!)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`6esn`)Assert Exists(usn1(Distinct 0e-0[{12}]).`3esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`5esn`)Assert ({`4esn`:$#usn7[01..2.12][2.12..3.9e-1]})<-[_usn3?:`6esn`{_usn4:07[{@usn5}..],usn2:$`4esn` Is Null Is Null}]->(@usn6 :`3esn`{usn2:0xabc Starts With {`3esn`} Starts With {``},#usn7:Count(*) Starts With 07 Starts With $#usn7})<-[:`2esn`|`5esn`{_usn4:{@usn5}[10.12e12..]}]->(:`5esn`:`7esn`{`3esn`:Count ( * )[_usn4..],`8esn`:false[..usn2][..999]}).`6esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`3esn`)Assert Extract(usn1 In {#usn7} =~.12e12 =~9e0 Where $`4esn`[12e-12..$`1esn`][$`2esn`...9e12]).@usn6? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:#usn7)Assert `7esn`(11.12e-12 In {usn1}).`5esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`3esn`)Assert [`8esn` In {_usn4} Ends With {0} Ends With `1esn` Where $`4esn`[usn2..]|$usn2[..$999][..#usn8]].@usn6?.``._usn4! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:`3esn`)Assert Exists([`6esn` In 010[{`1esn`}..] Where 9e-12[$7..]].`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[``:usn2]-()Assert Exists(Extract(usn2 In $_usn3[0X0123456789ABCDEF..][0x0..] Where .9e0 Ends With $0).`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`3esn`)Assert Exists(Reduce(usn2={`6esn`}[@usn5..{@usn6}],`5esn` In {123456789} Starts With $_usn4 Starts With 0x0|9e0[..{#usn7}][..`4esn`]).#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`8esn`)Assert Single(`6esn` In 010[{`1esn`}..] Where {`8esn`}[@usn5][$`2esn`]).`4esn`?.usn2!.`4esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:`8esn`)Assert exists(Distinct .0e-0[..``][..$7],$`3esn` =~0x0)._usn3?._usn3? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:_usn4]->()Assert Exists(Shortestpath((`7esn` {_usn4:$7[.1e-1..{@usn6}][$7..{`1esn`}]})<-[:`7esn`|usn1 *7]-(`8esn` :`5esn`:`7esn`{usn1:{``} Contains 0.0 Contains `4esn`})-[? *1000..{`1esn`:{`1esn`} Is Null}]->(`6esn` :`2esn`:`4esn`{@usn6:0e-0[$``..10.12e12]})).`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn3:`4esn`]-()Assert Exists(exists(0[$usn1..])._usn4)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:_usn3)Assert Exists(None(usn2 In $`5esn`[{`4esn`}][{0}] Where 7.0e-0 Is Not Null).@usn5?.usn1?)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn5:`3esn`]->()Assert Exists(`5esn`(Distinct $`7esn` Ends With 7.0e-0 Ends With $usn2).`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:#usn7)Assert Exists(Reduce(`1esn`=12.0[..Count ( * )][..@usn6],@usn6 In $usn2 Contains $`3esn` Contains 6.0e0|5.9e-12 Contains {12} Contains {#usn8}).``!.`2esn`!.#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:#usn8)Assert None(usn1 In $@usn6 Is Null Is Null Where {7} Starts With 0x0 Starts With 9e1).#usn7!.`1esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`4esn`:usn2]-()Assert Exists(All(usn1 In {#usn7} =~.12e12 =~9e0 Where 0xabc[01234567][.12e-12]).@usn5!)"),
    octest_legacy:ct_string("Create Constraint On()-[usn2:`6esn`]-()Assert Exists(Reduce(`1esn`=.9e0[07..][4.9e12..],_usn3 In `8esn`[_usn4]|`3esn` =~$#usn7).`5esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:_usn4)Assert {#usn8:$`6esn` Starts With 0.0,usn1:$`8esn`[0x0][.9e0]}.``? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:@usn5)Assert Case When .12e12[$usn1..][{@usn6}..] Then {1000}[..{usn1}][..1e-1] End._usn3! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[``:_usn4]-()Assert Exists((:usn1{usn1:true In 0.0,@usn5:{`1esn`} Is Null})-[@usn6?:`4esn`|:`2esn`{`2esn`:Count ( * )[9e0..$``]}]-(:usn2{usn1:_usn4 Is Not Null Is Not Null}).usn2?.#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`4esn`)Assert Exists(Case When 01234567 Ends With .0e0 Ends With 12e12 Then {`4esn`}[{`3esn`}][$`2esn`] When `` Contains {`6esn`} Contains 123456789 Then 2.9e1[2.12..1.9e0] End.usn2)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:#usn7)Assert Exists(Allshortestpaths((@usn6 {usn1:0Xa In 1.0 In $@usn5})-[`5esn`?:`2esn`|`5esn`]->(`5esn` :``{usn2:{_usn3} In $#usn8 In $12})).`4esn`!._usn3)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`2esn`)Assert Case When {usn2} Is Not Null Is Not Null Then false Contains {`7esn`} When {_usn3} Is Null Is Null Then .12e12 Ends With 07 Ends With 3.9e-1 End.#usn7! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`3esn`)Assert Exists(Reduce(`6esn`=.9e-12[.12e12..][0Xa..],#usn8 In 07[..$`5esn`]|.9e-12[.12e12..][0Xa..]).`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:@usn5)Assert Exists(Case When {1000}[..`5esn`][..9e12] Then Count(*)[..{#usn7}] End.`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`1esn`)Assert Reduce(`3esn`={usn2} Is Not Null Is Not Null,`7esn` In 0.12 Is Not Null|$@usn5 =~{`3esn`}).`2esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:_usn3)Assert Allshortestpaths((`7esn` {_usn4:$7[.1e-1..{@usn6}][$7..{`1esn`}]})<-[:`7esn`|usn1 *7]-(`8esn` :`5esn`:`7esn`{usn1:{``} Contains 0.0 Contains `4esn`})-[? *1000..{`1esn`:{`1esn`} Is Null}]->(`6esn` :`2esn`:`4esn`{@usn6:0e-0[$``..10.12e12]})).`8esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`6esn`)Assert `1esn`(true Is Null,$1000[..0e-0][..010]).#usn8!.usn1?.`3esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`1esn`:usn1]-()Assert Exists((#usn7 {#usn7:.0e-0[..01234567],#usn7:{1000}[0..]})-[?:`2esn`|`5esn` *..123456789$1000]-(:`8esn`{#usn7:$`1esn`[..12e-12][...9e12],usn1:{7} Starts With 0x0 Starts With 9e1})<-[`3esn`?:`6esn`{@usn6:{`5esn`} Is Not Null Is Not Null,@usn6:$usn1 Contains 4.9e12 Contains $`2esn`}]->(`` {#usn7:{_usn3}[{0}...9e-1][9e-1...0e0]})._usn4?)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`8esn`)Assert Exists(usn1(.9e-12[.12e12..][0Xa..],$`6esn` =~$#usn7 =~$`4esn`).`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`3esn`)Assert Exists(None(#usn7 In .0e-0 In 12 Where $12 In {usn2}).usn1!.#usn8?.`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn2:`8esn`]-()Assert Exists(Shortestpath((({usn1:`4esn` Ends With 9e12 Ends With {`5esn`},_usn4:$`5esn` Is Not Null})-[?:`8esn`|:#usn8{`5esn`:$1000 Starts With {@usn6} Starts With $@usn5}]->(:`6esn`{`8esn`:{123456789} =~.9e1 =~$_usn3,#usn7:Count(*)[Null..][01234567..]}))).`4esn`?)"),
    octest_legacy:ct_string("Create Constraint On(``:`3esn`)Assert Case .9e0 =~#usn7 When 999[..$@usn5][..``] Then {#usn8} In {12} In .9e12 When 0e0 Contains {`2esn`} Then {1000}[0..] Else 2.9e1 Ends With `5esn` Ends With 1000 End.@usn6 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:#usn7)Assert ({`1esn`:`3esn` =~$#usn7,_usn3:@usn6[999][1000]})<-[usn2:_usn3 *0xabc..12]-(:@usn6:_usn3{`5esn`:0X0123456789ABCDEF Is Not Null Is Not Null,`8esn`:\"d_str\" Is Not Null Is Not Null})-[``?:#usn8|:``*{`2esn`:`4esn` =~010}]-(`4esn` {`6esn`:Count ( * ) Contains 9.1e-1 Contains {`2esn`},`6esn`:$#usn8 Is Not Null Is Not Null}).`5esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:#usn8)Assert Case When $`5esn` =~Count(*) =~1.9e0 Then .1e-1 Starts With @usn6 Starts With _usn3 When $_usn3[0X0123456789ABCDEF..][0x0..] Then #usn8 =~{@usn5} Else 1e1[$_usn3] End.`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:usn2)Assert Single(`8esn` In {usn1}[7.0e-0..][3.9e-1..] Where $7[.1e-1..{@usn6}][$7..{`1esn`}]).`7esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`5esn`)Assert All(@usn6 In 9e12[..usn2][.._usn3] Where $12 Ends With {_usn4} Ends With $`8esn`).usn1 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[``:@usn5]-()Assert Exists(Shortestpath((({usn1:`4esn` Ends With 9e12 Ends With {`5esn`},_usn4:$`5esn` Is Not Null})-[?:`8esn`|:#usn8{`5esn`:$1000 Starts With {@usn6} Starts With $@usn5}]->(:`6esn`{`8esn`:{123456789} =~.9e1 =~$_usn3,#usn7:Count(*)[Null..][01234567..]}))).`8esn`.`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On(``:`1esn`)Assert Exists(Case {0} In {`1esn`} When 999[..$@usn5][..``] Then {#usn8} In {12} In .9e12 When 9e12 Ends With 9e-1 Ends With 9e1 Then {`4esn`}[00..] End.`7esn`._usn3?.@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:@usn5)Assert Exists(Allshortestpaths(((_usn4 )-[`6esn`?*]->(:`8esn`{@usn6:Null,_usn4:0e-0[{12}]}))).`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn5:`3esn`]-()Assert Exists(_usn3(Distinct 9e1 Starts With $@usn6 Starts With 0e-0,0.12 =~`6esn` =~.9e-1).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`6esn`)Assert Exists(Reduce(`7esn`=$usn2 Starts With $999 Starts With .0e0,@usn6 In 9e12[..usn2][.._usn3]|$@usn6 Is Null Is Null).`8esn`?.usn2!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:usn2)Assert usn2({`1esn`} Is Null).`8esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:#usn7)Assert Exists(Extract(`3esn` In 8.1e1 Contains .9e-1 Contains false Where 0e-0[..$usn2]).#usn7?._usn4!)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`4esn`)Assert Exists([usn1 In $@usn6 Is Null Is Null].@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`6esn`)Assert Exists(Reduce(`7esn`=11.12e-12 Contains usn1,_usn3 In `8esn`[_usn4]|#usn7 =~$@usn5 =~{7}).`6esn`.`1esn`?.`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`5esn`)Assert Case When usn2[..$0][..`3esn`] Then $0 Contains $7 End.`3esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`4esn`)Assert Exists(Extract(`6esn` In 010[{`1esn`}..] Where {`3esn`}[_usn4][2.9e1]|'s_str' =~$usn2 =~{7}).`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:@usn6)Assert Extract(usn1 In \"d_str\" Contains {@usn6} Where $`` =~.1e-1|$`3esn` =~0x0).`7esn`.`6esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:@usn5]->()Assert Exists(Reduce(_usn3=1.9e0[.12e-12][9e-12],`2esn` In $@usn5 Is Not Null Is Not Null|9e-12 Ends With 9e1 Ends With 4.9e12).``.`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:``)Assert Exists(Any(usn2 In .12e-12 Ends With `2esn` Where 12[@usn6][{`2esn`}]).`5esn`!.`7esn`!.#usn7)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`1esn`)Assert Exists({usn1:{0}[.0e-0][$`2esn`],@usn5:7 Starts With 9e-12}.`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:usn1)Assert Exists(Extract(usn2 In $_usn3[0X0123456789ABCDEF..][0x0..] Where $`3esn`[0e-0]).usn2?.`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`8esn`)Assert Exists((`6esn` :`4esn`:usn2)<-[?:`6esn`{`1esn`:$`5esn` Is Not Null,`2esn`:.1e-1[2.9e1..][$`7esn`..]}]-(`7esn` :#usn8:@usn6{#usn7:{`6esn`} Starts With @usn6,`7esn`:{7}[0x0][1e1]}).`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`5esn`:@usn5]-()Assert Exists({usn1:0Xa In 1.0 In $@usn5}.@usn5.`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:#usn7]->()Assert Exists({#usn8:7[..123456789][..true]}.`2esn`.usn2.`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:#usn8)Assert Extract(usn1 In $@usn6 Is Null Is Null Where Count(*)[Count ( * )][{0}]|2.9e1[Count ( * )..]).`8esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`6esn`)Assert usn2($12 =~4.9e12).`4esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`2esn`:`3esn`]->()Assert Exists(Shortestpath((((#usn8 :`4esn`:usn2{#usn7:{`3esn`}[#usn7],`4esn`:010[..9e-1][..0X7]})-[usn1? *..123456789{`8esn`:00[$``],``:$`4esn`[12e-12..$`1esn`][$`2esn`...9e12]}]->({usn1:12[..$`5esn`]})-[?:@usn5|:#usn7 *0]->(`7esn` :`8esn`)))).usn1?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`4esn`:`8esn`]-()Assert Exists({@usn6:$@usn5 Starts With #usn7,@usn6:$@usn5[.9e-1]}.@usn5)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`2esn`)Assert Shortestpath((@usn5 :_usn4:`2esn`{@usn5:07[{@usn5}..],`3esn`:$1000 Starts With {@usn6} Starts With $@usn5})).`4esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:_usn3)Assert Exists(0.12.usn1)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:@usn6)Assert Exists(All(`8esn` In {_usn4} Ends With {0} Ends With `1esn` Where {`3esn`}[999..$`4esn`])._usn4!.@usn5!.#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:@usn5]->()Assert Exists(Any(#usn7 In .0e-0 In 12 Where {#usn8}[..@usn5]).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[`8esn`:_usn3]-()Assert Exists(Filter(`5esn` In {123456789} Starts With $_usn4 Starts With 0x0 Where 9e12 Is Null Is Null).`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:@usn5]-()Assert Exists(None(#usn7 In .0e-0 In 12 Where 0xabc[..{usn1}][..\"d_str\"]).usn1)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:@usn6)Assert Case When 0X0123456789ABCDEF Ends With {1000} Then {0} Is Not Null When .12e12 Is Not Null Then {`6esn`} Starts With .12e-12 Else 7[{`4esn`}..] End.@usn6! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`8esn`)Assert [#usn7 In .0e-0 In 12 Where .0e-0 Ends With $`2esn` Ends With `5esn`|{usn1} Contains `4esn`]._usn4?._usn3!.`7esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`2esn`)Assert `2esn`($12 Is Not Null Is Not Null,12e12[usn2..$`6esn`]).`2esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`6esn`)Assert Exists(Extract(usn2 In .12e-12 Ends With `2esn` Where $999 Ends With `2esn` Ends With 12.0|{_usn3} Is Null Is Null).`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:usn2)Assert Single(usn2 In .12e-12 Ends With `2esn` Where $999 Ends With `2esn` Ends With 12.0).`1esn`?.``! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:`3esn`]-()Assert Exists({usn2:`7esn` =~#usn8 =~\"d_str\",`4esn`:$usn1 Contains 4.9e12 Contains $`2esn`}._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn8:`6esn`]-()Assert Exists(Single(usn2 In .12e-12 Ends With `2esn`)._usn3!)"),
    octest_legacy:ct_string("Create Constraint On(usn2:_usn4)Assert Reduce(_usn4=5.9e-12 Contains {12} Contains {#usn8},`7esn` In 0.12 Is Not Null|{`5esn`}[.1e-1..1e-1][999..{_usn3}]).#usn8.``? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:usn2)Assert Exists(Reduce(#usn8=$``[1.0..][_usn3..],`6esn` In 010[{`1esn`}..]|{1000} =~4.9e12 =~9e1).`6esn`.@usn6!)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:#usn8]->()Assert Exists(Extract(`8esn` In {_usn4} Ends With {0} Ends With `1esn` Where `2esn`|01 =~07).`2esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:usn2)Assert [`1esn` In $12 In {usn2} Where {usn1} Is Not Null]._usn4!.`8esn`!.`6esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`6esn`)Assert (:`1esn`:``{`8esn`:0X0123456789ABCDEF Ends With {1000}})-[`4esn`?:`4esn`|:`2esn` *0Xa..12{``:$`` Starts With $`4esn` Starts With `3esn`,``:7 In 1e1 In {``}}]-(:`5esn`:`7esn`$usn2)<-[? *01{_usn4:07 Ends With {1000} Ends With 01234567}]-(`6esn` :`4esn`:usn2).`5esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:`1esn`]-()Assert Exists(Case $@usn5[``..] When `6esn`[0X0123456789ABCDEF..][`8esn`..] Then `2esn`[`7esn`][1000] When {`6esn`} Starts With .12e-12 Then $`8esn` =~{`1esn`} =~$7 End.#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`2esn`)Assert Exists(Single(`3esn` In 8.1e1 Contains .9e-1 Contains false Where 0e-0[..$usn2]).@usn6)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`5esn`)Assert Case When 8.1e1 Contains .9e-1 Contains false Then 12e12 Ends With `5esn` Ends With .0e0 When $1000[_usn4][{@usn5}] Then 4.9e12[{_usn4}..] End.@usn6?.#usn8! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:`1esn`]-()Assert Exists(Single(`` In `7esn` =~#usn8 =~\"d_str\" Where 6.0e0[{`2esn`}..$``]).`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:usn1)Assert Shortestpath(((`8esn` :`8esn`)<-[?:_usn4|:`1esn` *..07{``:12.0[..Count ( * )][..@usn6],`6esn`:.9e-12[usn2]}]-(#usn8 :`4esn`:usn2{@usn6:`6esn`[3.9e-1..`8esn`][12.0..0.0]}))).@usn5! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`8esn`)Assert Extract(usn1 In {#usn7} =~.12e12 =~9e0 Where 0xabc[01234567][.12e-12]|{123456789} Starts With $_usn4 Starts With 0x0).``.`` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:usn1)Assert None(`3esn` In 8.1e1 Contains .9e-1 Contains false Where 1000[{`1esn`}..][$`3esn`..]).#usn8? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:`3esn`]->()Assert Exists(Filter(#usn8 In 07[..$`5esn`] Where 2.9e1 =~Count(*) =~{123456789}).`5esn`._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:#usn8]->()Assert Exists(None(`5esn` In {123456789} Starts With $_usn4 Starts With 0x0 Where .9e12 Is Not Null Is Not Null)._usn3!.``.usn1?)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`1esn`)Assert Exists(Case When `1esn`[{usn1}..] Then $`6esn`[@usn6...9e-12] When $usn2 Starts With $999 Starts With .0e0 Then {`6esn`} =~2.12 =~123.654 End.`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:#usn8)Assert Exists(Extract(@usn6 In 9e12[..usn2][.._usn3]|01234567[1000..][$`8esn`..])._usn4!.usn1!.``!)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn8:`2esn`]->()Assert Exists(Reduce(#usn8=$``[1.0..][_usn3..],`6esn` In 010[{`1esn`}..]|{1000} =~4.9e12 =~9e1)._usn4)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:usn2]->()Assert Exists(Shortestpath((`` :``{usn1:010[...12e-12],#usn7:1e1[$_usn3]})-[`3esn`?:_usn3 *..123456789]-(:`1esn`:``{`8esn`:{12} Ends With $`3esn` Ends With 0xabc})<-[ *999..123456789{`8esn`:{``}[usn1..][{`8esn`}..]}]->({_usn4:.1e1 Is Null Is Null,`5esn`:{1000}[`2esn`...0e-0][9e-1..0X7]})).`4esn`?.`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:#usn7)Assert Exists(Reduce(`5esn`={@usn6} In 1.0,_usn3 In `8esn`[_usn4]|@usn6 Starts With #usn7).`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:_usn4]-()Assert Exists(#usn8(Distinct `6esn`[3.9e-1..`8esn`][12.0..0.0],@usn5 In Null).`7esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`6esn`)Assert Exists(Case $`3esn` =~0x0 When `3esn` Is Null Is Null Then $@usn6 Starts With 0xabc Starts With {`7esn`} Else Count(*)[Null..][01234567..] End._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`4esn`)Assert Reduce(`6esn`={usn1} Contains `4esn`,`8esn` In {_usn4} Ends With {0} Ends With `1esn`|$usn1[9e1][{999}]).`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:usn1]->()Assert Exists({_usn4:999[..$@usn5][..``],usn2:\"d_str\" Starts With $`7esn` Starts With 999}.`7esn`)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`7esn`)Assert (:usn2{`7esn`:`2esn` Starts With 010 Starts With ``,``:010 Starts With 9e12 Starts With 1000})-[`3esn`?{`2esn`:.9e-1 Contains .9e0 Contains ``,@usn6:4.9e12 Is Not Null Is Not Null}]->(`2esn` :@usn5)-[`8esn`:_usn4|:`1esn`]->({@usn6:.12e12 Starts With 5.9e-12 Starts With `4esn`}).#usn7 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`3esn`:`2esn`]-()Assert Exists((#usn8 {usn1:$999 Ends With `2esn` Ends With 12.0,_usn3:`1esn`[{usn1}..]})<-[`8esn`? *0X7..0Xa{_usn3:$`4esn`[$@usn6...12e12]}]-(`4esn` :usn2{_usn4:123.654[01..][Count(*)..],`8esn`:12e12})-[? *12{@usn6:$`` =~.1e-1}]->(`1esn` {usn2:.9e-12[.12e12..][0Xa..]}).`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:``)Assert All(`3esn` In 8.1e1 Contains .9e-1 Contains false Where 999 Starts With 7.0e-0 Starts With true).`7esn`!.usn2?.`6esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn2:_usn4]-()Assert Exists(Any(usn1 In {#usn7} =~.12e12 =~9e0 Where 4.9e12[{_usn4}..]).`4esn`!.@usn5!)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`5esn`)Assert Extract(#usn8 In 07[..$`5esn`] Where 07[{@usn5}..]|9e-1 Contains 3.9e-1).`3esn`?.usn1 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`3esn`:``]-()Assert Exists(Reduce(`8esn`=Count(*)[$7],`2esn` In $@usn5 Is Not Null Is Not Null|$@usn5 Contains _usn3).`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`5esn`)Assert Case When `4esn` =~010 Then {7}[$@usn5..123456789][1e1..1.9e0] Else 1e-1 =~$`7esn` =~1e1 End.usn1? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:usn2)Assert [`` In `7esn` =~#usn8 =~\"d_str\" Where 2.12 =~$999].@usn5? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:@usn6]-()Assert Exists(Reduce(@usn5=0xabc[..Count(*)][..$`5esn`],usn1 In \"d_str\" Contains {@usn6}|123456789[#usn7..9e-1][10.12e12..{0}]).`2esn`!.`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:_usn3)Assert Exists([@usn6 In $usn2 Contains $`3esn` Contains 6.0e0 Where 1.9e0 In $@usn6 In $_usn3].`7esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:`7esn`]->()Assert Exists(({``:true Is Null,_usn3:$12 Ends With 7.0e-0 Ends With 9e-12})-[?{@usn6:{_usn4} In 0X7 In 0e0}]-(:`6esn`{`2esn`:`5esn` Ends With Count(*)}).usn2)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:_usn3)Assert Exists(Allshortestpaths(((_usn4 :_usn4:`2esn`{usn1:$`6esn` In 999 In {_usn3},usn1:1.0 Is Null Is Null})<-[_usn4? *7{`1esn`:.0e0['s_str'..][0Xa..]}]->(_usn3 :`6esn`{#usn7:{`6esn`} Starts With @usn6,`7esn`:{7}[0x0][1e1]}))).`3esn`?.usn2?)"),
    octest_legacy:ct_string("Drop Constraint On(``:`5esn`)Assert Exists(Allshortestpaths(((#usn8 :usn2)<-[? *1000..{_usn3:\"d_str\" Starts With ``,`4esn`:{`3esn`}[..0xabc][..{`6esn`}]}]->(usn2 :`5esn`:`7esn`)<-[@usn5:usn1|usn2{`8esn`:{usn2} Is Not Null Is Not Null}]->(usn2 :`2esn`:`4esn`{`6esn`:$#usn7[01..2.12][2.12..3.9e-1],usn1:$_usn3 Starts With 010}))).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:usn2)Assert Case Count ( * ) =~123456789 =~{@usn5} When 0e0 Contains {`2esn`} Then $`8esn`[..12][..9e12] When {`1esn`}[{usn2}] Then {`7esn`} Is Not Null Is Not Null End.`8esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:`6esn`]-()Assert Exists(Extract(`6esn` In 010[{`1esn`}..] Where {`4esn`}[00..]|`6esn` =~999 =~$999).`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`8esn`:`8esn`]-()Assert Exists({``:01234567[10.12e12][0Xa]}._usn3)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`8esn`)Assert All(usn2 In $_usn3[0X0123456789ABCDEF..][0x0..]).#usn7!.`1esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:#usn8)Assert Allshortestpaths((`2esn` )-[ *..123456789{@usn5:$`8esn`}]-(:`1esn`:``{_usn3:\"d_str\" Starts With ``,`4esn`:{`3esn`}[..0xabc][..{`6esn`}]})).usn1? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:#usn8]->()Assert Exists(Allshortestpaths(((usn2 :``{#usn7:1e-1 =~$`7esn` =~1e1,`7esn`:{0}[`4esn`..{`8esn`}]})-[?{@usn6:{_usn4} In 0X7 In 0e0}]-(_usn4 :`1esn`:``{`1esn`:{123456789}[...9e-1][..1.0],#usn8:$`4esn` Ends With {999}})<-[_usn3? *..123456789{`6esn`:.0e-0[..``][..$7],usn2:{usn2} Ends With {@usn6} Ends With 1000}]-(`8esn` :`4esn`:usn2{@usn6:$#usn7 Starts With $123456789})))._usn4!)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:_usn4)Assert Exists(Any(#usn7 In .0e-0 In 12 Where .0e-0 Ends With $`2esn` Ends With `5esn`).``.@usn6?)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`6esn`)Assert `8esn`(Distinct 12e12 Contains {0}).`4esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:``)Assert [#usn7 In .0e-0 In 12 Where `8esn`[.12e12..]].usn1._usn3.`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn5:`4esn`]->()Assert Exists(Reduce(`1esn`=12.0[..Count ( * )][..@usn6],@usn6 In $usn2 Contains $`3esn` Contains 6.0e0|5.9e-12 Contains {12} Contains {#usn8}).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:#usn7]->()Assert Exists(None(usn1 In {#usn7} =~.12e12 =~9e0 Where {1000} Starts With 10.12e12 Starts With .0e-0).`7esn`?.usn2.`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On(usn1:@usn6)Assert {@usn5:999 Ends With {#usn8},_usn4:Null In {7}}.`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:_usn4)Assert Reduce(`7esn`=#usn7 =~$@usn5 =~{7},usn2 In $_usn3[0X0123456789ABCDEF..][0x0..]|3.9e-1[..$1000][..0.12]).`8esn`?.@usn6 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:usn2)Assert Reduce(`3esn`=.9e0[$#usn8][Count ( * )],#usn7 In .0e-0 In 12|Count(*) Starts With 07 Starts With $#usn7).`6esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn4:`5esn`]-()Assert Exists(Case $`3esn`[0e-0] When $12[$@usn5] Then $_usn4 Ends With {#usn8} When {0} In {`1esn`} Then 1.9e0[`6esn`][`7esn`] Else 12e12 Ends With `5esn` Ends With .0e0 End._usn4.`2esn`?.`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:@usn5)Assert Exists(Any(usn1 In \"d_str\" Contains {@usn6} Where $`8esn`)._usn4)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:#usn8)Assert Exists(@usn5(`4esn` Contains 0X0123456789ABCDEF Contains $usn2,{@usn5}[10.12e12..]).`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`2esn`)Assert Reduce(``=$`3esn` =~#usn8 =~0x0,usn2 In $`5esn`[{`4esn`}][{0}]|_usn3 =~{7} =~123.654).usn1! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`5esn`)Assert Filter(`6esn` In 010[{`1esn`}..] Where `6esn` Ends With 1e1 Ends With $#usn7).@usn5! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`4esn`:`1esn`]-()Assert Exists(Case `1esn` In 6.0e0 In 12 When 2.9e1[2.12..1.9e0] Then {`1esn`}[{usn2}] Else 12e12 Ends With `5esn` Ends With .0e0 End.`8esn`.usn1)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:#usn8)Assert Exists(Any(usn1 In {#usn7} =~.12e12 =~9e0 Where @usn6[true..])._usn4._usn3!.usn1!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:usn2)Assert Filter(usn1 In \"d_str\" Contains {@usn6} Where .12e-12[9e1]).`5esn`!._usn3! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`5esn`:@usn5]-()Assert Exists([#usn7 In .0e-0 In 12 Where `8esn`[.12e12..]].usn1._usn3.`8esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:`3esn`]->()Assert Exists((:`3esn`)-[`1esn`]->(`3esn` :`6esn`{_usn3:.12e-12 Ends With `2esn`,usn1:Null[#usn7..][9.1e-1..]})-[`3esn`?:`6esn`{@usn6:{`5esn`} Is Not Null Is Not Null,@usn6:$usn1 Contains 4.9e12 Contains $`2esn`}]->({#usn8:_usn4[$_usn4]}).`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:`1esn`]-()Assert Exists(Filter(`` In `7esn` =~#usn8 =~\"d_str\" Where 3.9e-1 Starts With .9e0 Starts With {#usn7}).@usn6!)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:#usn8)Assert Exists(All(usn2 In $`5esn`[{`4esn`}][{0}] Where Null[$`3esn`..][`1esn`..]).#usn8!.#usn8.`7esn`)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`6esn`)Assert Single(#usn7 In .0e-0 In 12 Where 0.0[00..][0xabc..]).`1esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[``:usn2]->()Assert Exists([@usn6 In 9e12[..usn2][.._usn3] Where $0 Ends With 9e-12 Ends With $_usn4|{12}[$`7esn`..usn2][0X0123456789ABCDEF..1e1]].``.`5esn`!)"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn3:`5esn`]-()Assert Exists(usn1(.9e-12[.12e12..][0Xa..],$`6esn` =~$#usn7 =~$`4esn`).`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`7esn`)Assert `2esn`(Distinct 9e-12 Ends With {1000},{`1esn`} Contains 1.0 Contains 4.9e12).``! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:usn1)Assert Reduce(_usn4={`8esn`} Is Not Null Is Not Null,usn1 In $@usn6 Is Null Is Null|$`3esn` =~#usn8 =~0x0).#usn8._usn4 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`8esn`)Assert Exists({#usn8:{``}[usn1..][{`8esn`}..]}.@usn6?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:_usn3)Assert _usn3(Distinct 9e1 Starts With $@usn6 Starts With 0e-0,0.12 =~`6esn` =~.9e-1).usn2? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`7esn`:@usn5]-()Assert Exists(({`5esn`:{123456789} Contains $0,_usn4:2.9e1 Ends With `5esn` Ends With 1000})<-[`7esn`{`7esn`:6.0e0 =~12.0 =~9e1}]-({_usn4:.1e1 Is Null Is Null,`5esn`:{1000}[`2esn`...0e-0][9e-1..0X7]})-[:`8esn`|:#usn8 *01]-(usn2 :`2esn`:`4esn`).`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:``)Assert Extract(`3esn` In 8.1e1 Contains .9e-1 Contains false Where 0[..{0}][..true]|$`4esn` Is Null Is Null).`3esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:`5esn`)Assert (`2esn` :_usn3)-[? *..0x0{usn2:Null[$`3esn`..][`1esn`..],`2esn`:\"d_str\" Contains {@usn6}}]-(`8esn` :usn1)-[`8esn`?:_usn3]->(`2esn` :`4esn`:usn2{`7esn`:$_usn4 =~$#usn8 =~{`4esn`}}).`4esn`?.@usn6.`5esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:`5esn`)Assert Exists({`4esn`:$`1esn`[..1000][..\"d_str\"],#usn7:{`5esn`}[.1e-1..1e-1][999..{_usn3}]}.#usn7)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:usn1)Assert count(01234567 =~12e12 =~.0e-0,$999 Is Not Null).@usn6?.`1esn`.`8esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:usn2)Assert Extract(usn1 In {#usn7} =~.12e12 =~9e0 Where 9e-1 Is Not Null|$123456789 Is Not Null Is Not Null).usn2! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:`5esn`]-()Assert Exists({_usn3:{`3esn`} =~$@usn5 =~`2esn`,`5esn`:$#usn7 Starts With $123456789}.`1esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn5:usn2]-()Assert Exists((`6esn` :usn2{`6esn`:{usn1}[7.0e-0..][3.9e-1..]})<-[#usn7?:_usn3 *999..123456789{@usn5:$12 In {usn2},usn1:5.9e-12 Is Null Is Null}]-(`3esn` :#usn7:`8esn`{`4esn`:$`5esn`[$_usn3][$12],#usn8:`8esn`[.12e12..]}).#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:_usn3)Assert Case 9e0[{7}...0e-0][Null..@usn5] When {`6esn`}[@usn5..{@usn6}] Then 1.9e0 In $@usn6 In $_usn3 Else $`8esn` =~{`6esn`} =~12 End.`5esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:#usn7)Assert Extract(`3esn` In 8.1e1 Contains .9e-1 Contains false Where 0[..{0}][..true]|$`4esn` Is Null Is Null).`3esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:_usn4)Assert Case When {`8esn`} Starts With .9e-1 Starts With 1000 Then $`6esn`[$_usn3..{1000}] When 3.9e-1 Starts With .9e0 Starts With {#usn7} Then .0e-0 Ends With $`2esn` Ends With `5esn` Else _usn4[$_usn4] End.usn2! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`5esn`)Assert Exists((:#usn8:@usn6{`3esn`:$#usn7})<-[?:`8esn`|:#usn8{`5esn`:$1000 Starts With {@usn6} Starts With $@usn5}]->(@usn6 :usn1{`2esn`:$`6esn` Starts With 0.0}).``?.#usn8)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:#usn7)Assert Exists([`2esn` In $@usn5 Is Not Null Is Not Null Where {`3esn`} =~$@usn5 =~`2esn`].`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:#usn8)Assert Exists(`8esn`(Distinct 8.1e1 Contains $@usn6,{0}[`4esn`..{`8esn`}]).usn2!.#usn7!)"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:`5esn`]-()Assert Exists({_usn4:{`5esn`}[.1e-1..1e-1][999..{_usn3}],`2esn`:{`1esn`}[..$_usn4]}.``)"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn8:`4esn`]-()Assert Exists(12.@usn5.``!.`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn5:usn2]-()Assert Exists({usn1:.9e-1 Is Null Is Null}.usn1.usn2?)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:usn2)Assert Exists({_usn4:#usn8 =~{@usn5}}.`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:@usn6]->()Assert Exists(Case 12e12 When {#usn7} =~$@usn6 =~$7 Then 6.0e0 =~12.0 =~9e1 When 0.0[00..][0xabc..] Then .9e1[$`1esn`..][$``..] Else `5esn` Is Not Null Is Not Null End.`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:usn1)Assert [`5esn` In {123456789} Starts With $_usn4 Starts With 0x0 Where {`3esn`}[01234567][{#usn7}]|$`8esn`[..5.9e-12][..`8esn`]].usn2.`2esn`!._usn3? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:@usn5)Assert exists(`3esn` Starts With 9.1e-1 Starts With .9e-1,{#usn8} Starts With {`2esn`}).``! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:usn2)Assert Allshortestpaths(({@usn6:12e12[{`4esn`}..`4esn`][999..{@usn6}]})-[#usn8?:_usn3 *..123456789]-({#usn8:3.9e-1 Ends With {usn1} Ends With {`5esn`},`7esn`:8.1e1[..9.1e-1][...9e1]})-[_usn3?:``|:`7esn` *0X0123456789ABCDEF]-(#usn7 {usn2:0X7[#usn7..][$@usn5..]})).usn2 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:``)Assert Any(_usn3 In `8esn`[_usn4] Where $1000[_usn4][{@usn5}]).``?.`1esn`.usn1? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:@usn5)Assert (`5esn` {`4esn`:{`3esn`}[_usn4][2.9e1]})<-[#usn8?:#usn7|:@usn5]-(`7esn` {@usn5:07[{@usn5}..],`3esn`:$1000 Starts With {@usn6} Starts With $@usn5}).usn1! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:usn2)Assert Filter(`2esn` In $@usn5 Is Not Null Is Not Null Where {`6esn`} In .0e0 In $0).`4esn`.#usn8?.`3esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:`4esn`]-()Assert Exists(Shortestpath((:`3esn`{usn1:`6esn`[0X0123456789ABCDEF..][`8esn`..],@usn5:{`8esn`}[9e12..][{_usn4}..]})<-[#usn8?:`7esn`|usn1*..$`1esn`]->(:#usn7:`8esn`{``:_usn4 Ends With {`8esn`} Ends With usn2,_usn3:$@usn6 Is Null Is Null})-[?:`1esn`|:`1esn` *999..123456789]-(usn1 {@usn6:3.9e-1[..$1000][..0.12]})).usn2!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:@usn5)Assert Shortestpath(((`2esn` {``:{#usn7} =~$@usn6 =~$7})<-[@usn6 *0X7..0Xa{`7esn`:{#usn7}[.12e-12]}]->(:`2esn`:`4esn`{@usn5:Count(*) Starts With 07 Starts With $#usn7,usn2:`6esn` Ends With 1e1 Ends With $#usn7})<-[_usn4?{_usn3:999[..$@usn5][..``],`8esn`:.0e0[usn1..7.0e-0][$`5esn`...9e-12]}]->({`4esn`:{7}[0x0][1e1]}))).`6esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:``)Assert Exists(None(usn2 In $_usn3[0X0123456789ABCDEF..][0x0..] Where 0xabc[..{usn1}][..\"d_str\"]).`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[``:_usn4]-()Assert Exists(Filter(usn2 In $_usn3[0X0123456789ABCDEF..][0x0..] Where .9e-1 Is Null Is Null).#usn8)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`6esn`)Assert Case When {1000}[..`5esn`][..9e12] Then Count(*)[..{#usn7}] End.`3esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:@usn5]-()Assert Exists(({usn1:$@usn5 Is Null Is Null,`3esn`:999[..$@usn5][..``]})<-[usn1?{`5esn`:$0 Ends With 9e-12 Ends With $_usn4}]-(:`5esn`:`7esn`{_usn3:{`3esn`} =~$@usn5 =~`2esn`,`5esn`:$#usn7 Starts With $123456789})-[?:_usn3]->(_usn3 :`1esn`:``).`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:#usn8)Assert Exists((`8esn` :usn1)<-[? *01234567..{_usn3:12.0[..Count ( * )][..@usn6]}]-(`4esn` :usn2{_usn4:123.654[01..][Count(*)..],`8esn`:12e12}).#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`6esn`)Assert Exists(Any(`6esn` In 010[{`1esn`}..] Where `6esn` Ends With 1e1 Ends With $#usn7).`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`3esn`)Assert Exists(Reduce(`2esn`={1000}[..{usn1}][..1e-1],_usn3 In `8esn`[_usn4]|Count(*)[$7]).@usn5?)"),
    octest_legacy:ct_string("Create Constraint On(``:`2esn`)Assert Exists({_usn3:12.0[..Count ( * )][..@usn6]}.``!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:usn1)Assert Exists(Extract(usn2 In $_usn3[0X0123456789ABCDEF..][0x0..] Where {`6esn`} =~2.12 =~123.654|`6esn` Ends With 1e1 Ends With $#usn7).@usn5!.``!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:usn2]-()Assert Exists([_usn3 In `8esn`[_usn4] Where @usn6 Ends With $`2esn` Ends With 1.0|{`3esn`}[...1e1][..0]].usn2!._usn3!._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`2esn`)Assert All(`7esn` In 0.12 Is Not Null Where 4.9e12 Starts With {``}).`7esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`6esn`)Assert Exists(Reduce(`2esn`=$1000 Contains $123456789 Contains #usn8,`` In `7esn` =~#usn8 =~\"d_str\"|_usn4 Is Not Null Is Not Null).`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:#usn8)Assert Exists(Extract(`3esn` In 8.1e1 Contains .9e-1 Contains false Where 0[10.12e12]|$usn2[..$999][..#usn8]).`6esn`!.#usn7!)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`6esn`)Assert _usn3(Distinct .12e12 Is Not Null,.9e0[07..][4.9e12..]).`2esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`2esn`:`3esn`]->()Assert Exists(Reduce(#usn7=`1esn`[{@usn5}..][{_usn4}..],`8esn` In {_usn4} Ends With {0} Ends With `1esn`|{usn2} Is Not Null Is Not Null).usn1)"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn7:`6esn`]-()Assert Exists(usn1(Distinct 6.0e0[$#usn7..$1000],_usn4 Is Not Null Is Not Null).``?)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`1esn`)Assert Single(_usn3 In `8esn`[_usn4] Where $@usn5 Is Null Is Null).`4esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn8:`1esn`]-()Assert Exists({@usn6:$`` =~.1e-1}.usn1?)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:@usn6)Assert Exists(Any(`1esn` In $12 In {usn2} Where {usn1} Is Not Null).@usn6?.usn2?)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`3esn`)Assert Exists(Any(`` In `7esn` =~#usn8 =~\"d_str\" Where `6esn` Ends With 1e1 Ends With $#usn7).`8esn`!.`2esn`!.`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:_usn4)Assert (`` :``)-[?:`6esn` *0]-(`1esn` {`6esn`:#usn8[\"d_str\"..usn2],`3esn`:{`3esn`}[01234567][{#usn7}]})<-[`4esn`?]-(:usn1{#usn8:2.9e1[{`2esn`}]}).`3esn`!.@usn6!.@usn6! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:``]-()Assert Exists((:`5esn`:`7esn`{``:{@usn5}[10.12e12..]})-[`3esn`? *..07]->(`` :`5esn`:`7esn`{`8esn`:2.9e1[Count ( * )..]})._usn4?)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`1esn`)Assert {@usn6:$_usn3 Starts With 010}.`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`5esn`)Assert Case #usn7 Is Null Is Null When $`8esn` Is Null Is Null Then _usn4[{``}..{`6esn`}][$7..$_usn3] When {`3esn`}[999..$`4esn`] Then \"d_str\" In usn2 In $`7esn` End.``? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn4:usn1)Assert Exists(Any(#usn8 In 07[..$`5esn`] Where .9e0[07..][4.9e12..]).`8esn`.`6esn`.`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:@usn5)Assert Exists([`5esn` In {123456789} Starts With $_usn4 Starts With 0x0 Where $`4esn`[usn2..]].`8esn`._usn4!)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`6esn`)Assert Exists([`` In `7esn` =~#usn8 =~\"d_str\" Where $`4esn` In {999}|{1000} Is Null].usn2!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:#usn8)Assert Exists([_usn3 In `8esn`[_usn4] Where $@usn5 Is Null Is Null|$7].@usn5!.usn2?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:#usn8]->()Assert Exists(Case When 's_str'[`2esn`][12.0] Then `8esn`[_usn4] Else .12e12 Starts With 5.9e-12 Starts With `4esn` End.`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:``)Assert Exists(@usn5(Count ( * ) Starts With 0.12,$123456789).`6esn`?.`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn4:@usn5]-()Assert Exists([#usn7 In .0e-0 In 12 Where 0xabc[..{usn1}][..\"d_str\"]|0.12 =~`6esn` =~.9e-1]._usn3?.@usn6!)"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:`1esn`]->()Assert Exists(Case When {`3esn`}[01234567][{#usn7}] Then $#usn8[$0..`3esn`][1e-1..$7] When #usn8[$`2esn`] Then 3.9e-1 Starts With .9e0 Starts With {#usn7} End.``)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`7esn`)Assert Shortestpath(((:`1esn`:``{`4esn`:{`3esn`} =~$`` =~$`8esn`,@usn6:Null[$`3esn`..][`1esn`..]})-[`1esn`?:`3esn`|`3esn` *..00]-(`5esn` {@usn5:`2esn`}))).`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`2esn`)Assert Exists(Allshortestpaths((({usn1:$@usn5 Is Null Is Null,`3esn`:999[..$@usn5][..``]}))).``!.`5esn`!.#usn8!)"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:#usn8]-()Assert Exists(`3esn`(Distinct $@usn5 Contains _usn3,{`1esn`} Contains 1.0 Contains 4.9e12).`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`7esn`)Assert Exists((`3esn` {#usn8:$`6esn` Starts With 0.0,usn1:$`8esn`[0x0][.9e0]})<-[?{`1esn`:{123456789}[...9e-1][..1.0],#usn8:$`4esn` Ends With {999}}]->({`2esn`:$`6esn` Starts With 0.0})<-[?:`5esn`{_usn4:$12[$`6esn`..][01..]}]->(:`5esn`:`7esn`{`4esn`:2.9e1[{`2esn`}]})._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:`3esn`]->()Assert Exists(12.@usn5.``!.`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:usn2)Assert Exists({``:_usn4 Ends With {`8esn`} Ends With usn2,_usn3:$@usn6 Is Null Is Null}.`1esn`!.`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:`3esn`]->()Assert Exists(Any(usn2 In $_usn3[0X0123456789ABCDEF..][0x0..] Where $usn1[..$999][..0e0]).`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`8esn`)Assert All(#usn8 In 07[..$`5esn`] Where $_usn3[0X0123456789ABCDEF..][0x0..]).usn2 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:usn1)Assert Exists(Shortestpath(({`1esn`:`3esn` =~$#usn7,_usn3:@usn6[999][1000]})).#usn7.``)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn8:usn1]->()Assert Exists(Case #usn8 Is Null Is Null When $1000[..0e-0][..010] Then 010 Starts With 9e12 Starts With 1000 End.`8esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:``)Assert {#usn8:9e1 Starts With $@usn6 Starts With 0e-0,usn2:.9e1 In .1e-1}._usn4! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`7esn`)Assert Reduce(`6esn`={`8esn`}[..999][.._usn3],`3esn` In 8.1e1 Contains .9e-1 Contains false|{123456789} Ends With 11.12e-12 Ends With 00).`8esn`!.#usn7!.``! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:@usn5)Assert Exists(@usn6(Distinct 0e0 Contains {`2esn`}).`7esn`.`3esn`?._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:``)Assert Exists(Shortestpath((((:`1esn`:``{`8esn`:5.9e-12[0x0..]})-[?:`1esn`|:`1esn` *999..123456789]-(usn2 :@usn6:_usn3)<-[_usn4:`2esn`|`5esn` *7{`2esn`:999 Ends With {#usn8},#usn8:.12e12 Is Not Null}]-(:``{`2esn`:{`8esn`} In {_usn3} In 6.0e0,usn1:{`1esn`} Is Null})))).`7esn`)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`5esn`)Assert Exists(Single(`3esn` In 8.1e1 Contains .9e-1 Contains false Where 999 Starts With 7.0e-0 Starts With true).@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:_usn4)Assert None(usn1 In \"d_str\" Contains {@usn6} Where $`8esn` Is Null Is Null).#usn8! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:_usn3]-()Assert Exists({`5esn`:$usn1[9e1][{999}]}.#usn7?)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`3esn`)Assert [@usn6 In 9e12[..usn2][.._usn3]|$1000[_usn4][{@usn5}]].#usn8 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`5esn`)Assert Exists(All(`5esn` In {123456789} Starts With $_usn4 Starts With 0x0 Where $@usn5 Starts With #usn7)._usn4!)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:usn2)Assert {`5esn`:`3esn` Starts With 9.1e-1 Starts With .9e-1}._usn3 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn4:`5esn`]-()Assert Exists(Extract(#usn8 In 07[..$`5esn`] Where $`5esn` Is Not Null).@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:`5esn`]->()Assert Exists({@usn5:`5esn` Ends With Count(*),usn1:$12[$@usn5]}.usn2!)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:`3esn`]-()Assert Exists(Filter(`` In `7esn` =~#usn8 =~\"d_str\" Where 3.9e-1 Starts With .9e0 Starts With {#usn7}).#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:``)Assert ({_usn4:\"d_str\"[0x0..{@usn6}][$@usn5..0],`1esn`:`8esn`[.12e12..]})-[:`6esn` *12{#usn7:`3esn` =~$#usn7,`8esn`:0e-0[{@usn6}]}]->(usn1 :#usn7:`8esn`{@usn5:Count(*) Starts With 07 Starts With $#usn7,usn2:`6esn` Ends With 1e1 Ends With $#usn7})-[``? *..00{@usn5:$`8esn` =~{`1esn`} =~$7,#usn7:.12e-12 Starts With .12e-12}]->({_usn4:\"d_str\"[0x0..{@usn6}][$@usn5..0],`1esn`:`8esn`[.12e12..]}).usn2! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:`3esn`]->()Assert Exists(All(#usn7 In .0e-0 In 12 Where 123.654 Ends With {1000} Ends With 9e12).`6esn`.`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:_usn4]-()Assert Exists({usn2:\"d_str\" Starts With ``}.`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn4:`1esn`]-()Assert Exists((:#usn7:`8esn`{`8esn`:_usn4['s_str'][8.1e1]})-[_usn4*{`3esn`:{``} Is Null Is Null}]-({`6esn`:9e-1[0.0..],`8esn`:0X0123456789ABCDEF In false})<-[#usn7? *0xabc..12]-(@usn6 :`3esn`{usn2:0xabc Starts With {`3esn`} Starts With {``},#usn7:Count(*) Starts With 07 Starts With $#usn7}).`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`8esn`)Assert Case 01[`6esn`..][0e0..] When {0}[`4esn`..{`8esn`}] Then \"d_str\" In usn2 In $`7esn` When `8esn`[_usn4] Then $`4esn`[usn2..] End.#usn7! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`4esn`)Assert Allshortestpaths(((`1esn` :#usn8:@usn6{usn1:#usn8 Is Null Is Null,_usn3:{`4esn`} In 1000 In {@usn5}})<-[:`7esn`|usn1{usn1:$usn2 Starts With $999 Starts With .0e0,#usn7:$`5esn`[$_usn3][$12]}]-(`7esn` {`7esn`:9e-1 Contains 3.9e-1,@usn6:{`6esn`} =~2.12 =~123.654}))).`3esn`.@usn6? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`8esn`:`4esn`]-()Assert Exists({`6esn`:12[@usn6][{`2esn`}]}.@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:``]-()Assert Exists(Single(#usn8 In 07[..$`5esn`] Where {`8esn`} In {_usn3} In 6.0e0).usn1)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:usn2)Assert Exists(Extract(usn2 In .12e-12 Ends With `2esn` Where $`4esn` Ends With .12e12 Ends With 123.654|0X7 Is Not Null Is Not Null).usn1?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`8esn`)Assert Exists(Reduce(`8esn`={0}[`4esn`..{`8esn`}],#usn8 In 07[..$`5esn`]|12e12 Contains {0}).`5esn`!.`6esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:usn2]-()Assert Exists(Reduce(#usn8=1e1 Ends With $_usn3 Ends With .1e1,`7esn` In 0.12 Is Not Null|true[1.9e0..]).`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`4esn`)Assert Exists(Reduce(_usn3={123456789}[...9e-1][..1.0],@usn6 In 9e12[..usn2][.._usn3]|\"d_str\" Is Not Null Is Not Null).@usn6?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`4esn`)Assert Exists(Case 6.0e0[$#usn7..$1000] When 1e-1 =~$`7esn` =~1e1 Then {`1esn`} Is Null When `7esn` =~#usn8 =~\"d_str\" Then 010[..9e-1][..0X7] Else Null In {7} End.`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`3esn`)Assert Exists(@usn6(Distinct)._usn4?.usn2?)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:usn2)Assert Filter(@usn6 In $usn2 Contains $`3esn` Contains 6.0e0 Where .9e1[$`1esn`..][$``..]).@usn5 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:@usn6)Assert Exists(Reduce(``=`2esn`[`7esn`][1000],usn2 In $`5esn`[{`4esn`}][{0}]|{123456789} Ends With 11.12e-12 Ends With 00).@usn5._usn3.@usn5)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:`7esn`]->()Assert Exists(Single(`6esn` In 010[{`1esn`}..] Where usn2[12e-12..{`8esn`}][.12e12..{123456789}]).#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`7esn`)Assert None(`2esn` In $@usn5 Is Not Null Is Not Null Where {`6esn`}[@usn5..{@usn6}]).@usn6.usn1? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`2esn`:_usn4]-()Assert Exists(Extract(`` In `7esn` =~#usn8 =~\"d_str\" Where $`6esn` Starts With 0.0|$#usn7 Starts With $123456789)._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:#usn8)Assert Exists(Single(`8esn` In {_usn4} Ends With {0} Ends With `1esn` Where 999 Starts With 7.0e-0 Starts With true).`2esn`)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`6esn`)Assert Exists((:#usn7:`8esn`{@usn5:{0} In {`1esn`}})<-[$#usn8]->(:`7esn`{`7esn`:{`3esn`} =~$@usn5 =~`2esn`,#usn7:.9e0[$#usn8][Count ( * )]})<-[`3esn`?:`6esn`{usn1:#usn7 In 07,usn1:0[..{0}][..true]}]->(:`1esn`:``{`8esn`:5.9e-12[0x0..]}).``?)"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn4:``]-()Assert Exists(Extract(`3esn` In 8.1e1 Contains .9e-1 Contains false Where 0xabc Starts With 12 Starts With 0e-0).@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:``)Assert Exists(Case When .9e1 In .1e-1 Then $7 =~01234567 =~12.0 When $usn2[..$999][..#usn8] Then #usn7 Contains .0e0 Contains $@usn6 Else $`7esn` In $@usn5 End.#usn8)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:usn2)Assert Exists({@usn6:{123456789} Starts With `6esn`}.`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:``)Assert Single(`6esn` In 010[{`1esn`}..] Where {`3esn`} Is Not Null Is Not Null)._usn4 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`2esn`)Assert Exists(Extract(`5esn` In {123456789} Starts With $_usn4 Starts With 0x0 Where $`4esn`[usn2..]|{`6esn`}[6.0e0..9e0][.9e1..12e12]).`2esn`)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:_usn4)Assert Reduce(`7esn`={12}[$`7esn`..usn2][0X0123456789ABCDEF..1e1],@usn6 In 9e12[..usn2][.._usn3]|10.12e12[usn2])._usn4! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:``]->()Assert Exists([usn1 In $@usn6 Is Null Is Null Where {`3esn`}[#usn7]|#usn7[$`8esn`][{`3esn`}]]._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:`7esn`]-()Assert Exists(Reduce(`1esn`=.9e1 Ends With 0x0,usn2 In .12e-12 Ends With `2esn`|_usn4 Is Not Null Is Not Null)._usn3!.@usn5!)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:``)Assert Exists({``:{``} Is Null Is Null,_usn4:{`6esn`} =~2.12 =~123.654}.#usn8?.@usn6?)"),
    octest_legacy:ct_string("Drop Index On:`6esn`(`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:@usn6)Assert Single(@usn6 In $usn2 Contains $`3esn` Contains 6.0e0 Where $#usn7[01..2.12][2.12..3.9e-1]).`3esn`!.`8esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn4:#usn7)Assert Exists(Shortestpath(((_usn3 {#usn7:$999 =~false =~{`8esn`}})-[?*{@usn6:$999 Ends With `2esn` Ends With 12.0}]-(#usn8 :`8esn`)-[?:_usn3]->(:`1esn`:``{`6esn`:$#usn7[01..2.12][2.12..3.9e-1],usn1:$_usn3 Starts With 010}))).usn2!.``)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:usn1)Assert Exists(None(#usn8 In 07[..$`5esn`] Where .1e1 Ends With #usn7 Ends With {#usn7}).`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:#usn7)Assert Exists(Extract(usn1 In \"d_str\" Contains {@usn6}).`8esn`?.`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`1esn`)Assert Exists(Reduce(`5esn`=8.1e1 Contains $@usn6,#usn7 In .0e-0 In 12|{1000} Starts With 10.12e12 Starts With .0e-0).usn1!)"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:``]-()Assert Exists({@usn5:4.9e12 Ends With $@usn6,`2esn`:0e-0 In 0X0123456789ABCDEF In `3esn`}.`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:``)Assert Single(usn2 In $_usn3[0X0123456789ABCDEF..][0x0..] Where 00 =~`4esn` =~.9e-12).@usn6!.`4esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`6esn`)Assert All(`8esn` In {usn1}[7.0e-0..][3.9e-1..] Where 1.9e0[.12e-12][9e-12])._usn3!.`4esn`?.#usn7! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:_usn3)Assert Exists(All(`7esn` In 0.12 Is Not Null Where .12e-12[@usn6..'s_str']).`5esn`?.``!)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`3esn`)Assert Reduce(@usn6=7.0e-0[$`6esn`..],`6esn` In 010[{`1esn`}..]|$``[9e12..])._usn4 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:@usn6)Assert Exists(None(#usn7 In .0e-0 In 12 Where $123456789).#usn8?)"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn7:`4esn`]-()Assert Exists(All(`3esn` In 8.1e1 Contains .9e-1 Contains false Where 0[10.12e12]).usn1!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`5esn`)Assert Exists(Extract(_usn3 In `8esn`[_usn4] Where usn2[..$0][..`3esn`]|{``}[usn1..][{`8esn`}..]).`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`8esn`)Assert Extract(`` In `7esn` =~#usn8 =~\"d_str\" Where 9e1 Ends With 9e12 Ends With 0x0|`1esn` In 6.0e0 In 12).usn2! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:``)Assert Exists(Extract(usn1 In {#usn7} =~.12e12 =~9e0 Where 4.9e12[{_usn4}..])._usn4!)"),
    octest_legacy:ct_string("Create Constraint On()-[``:`4esn`]-()Assert Exists((`3esn` :`2esn`:`4esn`{`2esn`:{usn1} Is Not Null,`8esn`:999[..$@usn5][..``]})<-[#usn8?:`7esn`|usn1*..$`1esn`]->(`1esn` :#usn7:`8esn`).@usn6!)"),
    octest_legacy:ct_string("Create Constraint On()<-[`1esn`:@usn5]-()Assert Exists([_usn3 In `8esn`[_usn4] Where 0[..{#usn7}][..$_usn3]|usn2 Contains `2esn` Contains {1000}].`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:_usn4)Assert Exists(Reduce(_usn4=1e-1 =~$`7esn` =~1e1,usn2 In .12e-12 Ends With `2esn`|0e-0[4.9e12..00][0X0123456789ABCDEF..{_usn4}]).usn2!)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`5esn`)Assert None(`7esn` In 0.12 Is Not Null Where $`7esn` Starts With 's_str').@usn5?.#usn7? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn6:_usn4)Assert Case 0e-0[..7.0e-0][..{`8esn`}] When $`8esn`[0x0][.9e0] Then #usn8 =~{@usn5} End._usn3.`8esn`.#usn8! Is Unique"),
    octest_legacy:ct_string("Create Index On:_usn3(`7esn`)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`5esn`)Assert All(usn2 In $`5esn`[{`4esn`}][{0}] Where 7.0e-0 Is Not Null).`2esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:_usn3)Assert Exists({}._usn3!.usn2)"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:@usn6]-()Assert Exists(Filter(#usn7 In .0e-0 In 12 Where 123.654 Ends With {1000} Ends With 9e12).#usn8!.`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:`2esn`]->()Assert Exists(Filter(usn1 In $@usn6 Is Null Is Null Where {12} Starts With $`` Starts With 0X0123456789ABCDEF).`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn5:`8esn`]->()Assert Exists({`6esn`:9e-1 Is Not Null,#usn7:`1esn`[{@usn5}..][{_usn4}..]}.`5esn`)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`6esn`)Assert (@usn6 {usn1:0Xa In 1.0 In $@usn5})-[?:`1esn`|:`1esn` *999..123456789]-(usn1 {@usn6:3.9e-1[..$1000][..0.12]}).#usn7.`8esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:#usn8)Assert Exists(None(`8esn` In {_usn4} Ends With {0} Ends With `1esn` Where 0xabc[..{usn1}][..\"d_str\"]).``?.`2esn`!.`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`2esn`)Assert Exists(Case When $`6esn`[..01][..{_usn3}] Then .9e-1 Ends With .0e-0 Ends With {_usn3} When usn2 Contains `2esn` Contains {1000} Then $`4esn`[$@usn6...12e12] End.`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:usn2)Assert Case When {usn2} Is Not Null Is Not Null Then false Contains {`7esn`} When $12[$`6esn`..][01..] Then .0e-0[..``][..$7] End.#usn8.@usn6? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`7esn`)Assert `3esn`({`3esn`}[...1e1][..0]).`7esn`?.usn1! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:#usn7]->()Assert Exists([`5esn` In {123456789} Starts With $_usn4 Starts With 0x0 Where {0}[.1e-1..][_usn4..]|$usn2 Starts With $999 Starts With .0e0].usn1)"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:#usn7]->()Assert Exists((:``{``:`6esn`[0X0123456789ABCDEF..][`8esn`..],`8esn`:$7[.1e-1..{@usn6}][$7..{`1esn`}]})<-[#usn8?:_usn3 *..123456789]->(usn1 :_usn4:`2esn`).`2esn`.``)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`7esn`)Assert Exists(@usn5(Count(*)[Count ( * )][{0}],`4esn` =~010).`7esn`._usn4?.@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:#usn8)Assert Exists(Extract(`3esn` In 8.1e1 Contains .9e-1 Contains false Where 0[10.12e12]|$usn2[..$999][..#usn8]).`6esn`!.#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[``:`7esn`]-()Assert Exists(Extract(usn1 In $@usn6 Is Null Is Null Where {_usn4} Ends With {0} Ends With `1esn`|{`3esn`}[..0xabc][..{`6esn`}]).`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`8esn`)Assert Exists([@usn6 In 9e12[..usn2][.._usn3] Where 0xabc[..Count(*)][..$`5esn`]].`2esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn3:`3esn`]-()Assert Exists(All(`2esn` In $@usn5 Is Not Null Is Not Null Where `6esn`[3.9e-1..`8esn`][12.0..0.0]).`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`2esn`)Assert count(Distinct $`8esn` =~{`6esn`} =~12,0[..{#usn7}][..$_usn3]).#usn8 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[``:@usn5]->()Assert Exists(Filter(`7esn` In 0.12 Is Not Null Where .1e-1 Contains .12e-12)._usn3.`5esn`!)"),
    octest_legacy:ct_string("Create Constraint On(``:`6esn`)Assert Exists(Shortestpath((`4esn` :_usn3)<-[`8esn`?:`2esn`|`5esn` *..123456789{usn2:12.0[..Count ( * )][..@usn6]}]-(:`1esn`:``{`8esn`:{12} Ends With $`3esn` Ends With 0xabc})-[?:@usn6|:`4esn` *..123456789]-(:``{``:`6esn`[0X0123456789ABCDEF..][`8esn`..],`8esn`:$7[.1e-1..{@usn6}][$7..{`1esn`}]})).``!)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`8esn`)Assert (`4esn` :@usn5)-[usn1?:`3esn`|`3esn`*..]-(`1esn` ).#usn8?._usn4.`7esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:@usn5]->()Assert Exists([`8esn` In {_usn4} Ends With {0} Ends With `1esn` Where {`7esn`} Is Not Null Is Not Null].`8esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[`7esn`:#usn8]-()Assert Exists(Any(usn1 In $@usn6 Is Null Is Null Where `3esn` Is Null).`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:@usn5]->()Assert Exists(Filter(usn1 In {#usn7} =~.12e12 =~9e0 Where 9e-1 Is Not Null).`3esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`7esn`)Assert Exists(Reduce(#usn7=9e1[0.0],usn2 In $_usn3[0X0123456789ABCDEF..][0x0..]|0.0[$`4esn`]).#usn8!.`1esn`!.`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:usn2)Assert {`3esn`:`5esn` Ends With Count(*)}.@usn6! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:_usn4)Assert Any(`2esn` In $@usn5 Is Not Null Is Not Null Where `1esn` Is Not Null Is Not Null).@usn5!._usn4.@usn5! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`8esn`)Assert Exists(`8esn`(Distinct 8.1e1 Contains $@usn6,999 Contains {999} Contains 12).usn2?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`1esn`)Assert Allshortestpaths(((`2esn` :`2esn`:`4esn`{#usn7:0 Starts With `7esn` Starts With 9e0})-[?:`4esn`|:`2esn` *01]->(`2esn` :_usn3{`6esn`:_usn4[{``}..{`6esn`}][$7..$_usn3],`6esn`:$`4esn` Ends With {999}})))._usn4? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:``]-()Assert Exists(Case When 0e-0[$``..10.12e12] Then 3.9e-1[{@usn6}..][01234567..] End.`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:_usn4)Assert Exists((@usn6 )-[@usn5{`1esn`:0e-0[..7.0e-0][..{`8esn`}],`8esn`:\"d_str\" Starts With $`7esn` Starts With 999}]->(_usn4 {#usn8:{`3esn`} =~$`` =~$`8esn`})-[`3esn`?:usn2]-(`8esn` {`6esn`:12[@usn6][{`2esn`}]}).usn2.`7esn`.#usn7)"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:`3esn`]-()Assert Exists([`` In `7esn` =~#usn8 =~\"d_str\" Where $_usn4[..$999]|7 Starts With 9e-12].usn2?.`6esn`)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:usn2)Assert Reduce(usn2={1000}[`2esn`...0e-0][9e-1..0X7],#usn8 In 07[..$`5esn`]|{`3esn`}[..{`4esn`}][..usn2]).`4esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`4esn`)Assert Reduce(#usn7=$`8esn`[..5.9e-12][..`8esn`],#usn8 In 07[..$`5esn`]|$@usn5[``..]).`2esn`.usn2?.usn2! Is Unique"),
    octest_legacy:ct_string("Drop Index On:#usn8(`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`5esn`)Assert None(usn1 In $@usn6 Is Null Is Null Where {12} Starts With $`` Starts With 0X0123456789ABCDEF)._usn3! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:`2esn`]-()Assert Exists(Any(`7esn` In 0.12 Is Not Null Where 0.0[00..][0xabc..]).`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`7esn`)Assert (`8esn` :@usn6:_usn3)<-[$#usn8]->(:`7esn`{`7esn`:{`3esn`} =~$@usn5 =~`2esn`,#usn7:.9e0[$#usn8][Count ( * )]}).usn2._usn4? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:@usn6)Assert (usn1 :`8esn`{`3esn`:$#usn8 Is Not Null Is Not Null,_usn4:$usn2 Ends With 00 Ends With 9e12})-[#usn7?:`1esn`|:`1esn`{`5esn`:`2esn`[`7esn`][1000],``:010[...12e-12]}]-(`7esn` {@usn5:Count ( * )[_usn4..]}).`8esn`.``!.usn1? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:_usn3)Assert Exists([#usn7 In .0e-0 In 12 Where Count ( * ) Is Not Null Is Not Null|5.9e-12[\"d_str\"..][{`6esn`}..]].usn2)"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:`3esn`]->()Assert Exists(Single(usn1 In \"d_str\" Contains {@usn6} Where false Contains {`7esn`}).`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:usn2)Assert Case 9e-12[$7..] When .1e-1 Contains .12e-12 Then true Is Null Else 0[..{#usn7}][..$_usn3] End.`` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn6:_usn3]-()Assert Exists(exists(_usn3 =~{7} =~123.654,12e12 Contains {0}).`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`6esn`)Assert Case #usn8 Is Null Is Null When $1000[..0e-0][..010] Then 010 Starts With 9e12 Starts With 1000 End.`8esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:``)Assert None(`3esn` In 8.1e1 Contains .9e-1 Contains false Where $123456789)._usn4!.@usn6 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:`3esn`]->()Assert Exists(Single(usn1 In $@usn6 Is Null Is Null Where .9e1[$`1esn`..][$``..]).`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn6:`5esn`]-()Assert Exists(Single(usn1 In \"d_str\" Contains {@usn6} Where {`1esn`} Is Null).`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:usn1)Assert Single(usn2 In $`5esn`[{`4esn`}][{0}] Where $`4esn` In {999}).#usn8? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn6:`3esn`]-()Assert Exists(Reduce(#usn7=0Xa[999],usn1 In {#usn7} =~.12e12 =~9e0|$@usn5[.9e-1]).#usn7)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`7esn`)Assert Extract(`6esn` In 010[{`1esn`}..] Where {`4esn`}[00..]|`6esn` =~999 =~$999).`1esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:``)Assert None(`3esn` In 8.1e1 Contains .9e-1 Contains false).``.`7esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:_usn3)Assert [`3esn` In 8.1e1 Contains .9e-1 Contains false Where `7esn` =~#usn8 =~\"d_str\"].#usn7! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`5esn`)Assert Exists({#usn8:$`8esn` =~{`6esn`} =~12,_usn3:11.12e-12 Contains usn1}.#usn8?)"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:`7esn`]->()Assert Exists(0Xa.@usn6._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:@usn5)Assert ({`1esn`:10.12e12 In Null In .12e12})<-[`6esn`?:@usn6|:`4esn` *12{`6esn`:{12} Starts With $`` Starts With 0X0123456789ABCDEF,@usn6:0 Starts With `7esn` Starts With 9e0}]->(`2esn` :`4esn`:usn2{`8esn`:.9e-1 Contains .9e0 Contains ``,_usn4:8.1e1 Contains .9e-1 Contains false}).``! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:_usn4)Assert Allshortestpaths(((usn1 :@usn6:_usn3)-[?:`2esn`|`5esn` *..123456789$1000]-(:`8esn`{#usn7:$`1esn`[..12e-12][...9e12],usn1:{7} Starts With 0x0 Starts With 9e1}))).`1esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`8esn`:`7esn`]-()Assert Exists(Extract(`7esn` In 0.12 Is Not Null Where 9e1 Ends With `7esn` Ends With 2.12|01[`4esn`..]).`7esn`._usn3?.``)"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:`5esn`]-()Assert Exists(Single(#usn7 In .0e-0 In 12 Where 9e1[$``.._usn4][999..`3esn`]).@usn6?)"),
    octest_legacy:ct_string("Create Constraint On(usn2:#usn8)Assert {_usn4:3.9e-1[{@usn6}..][01234567..],`2esn`:.12e-12[9e1]}.usn2! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`3esn`)Assert Exists(Extract(`` In `7esn` =~#usn8 =~\"d_str\" Where 1e-1 =~$`7esn` =~1e1|{`6esn`}[@usn5..{@usn6}]).usn1!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:@usn6)Assert Exists(Extract(`5esn` In {123456789} Starts With $_usn4 Starts With 0x0 Where {123456789}[...9e-1][..1.0]|010[{`1esn`}..]).`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[``:@usn6]->()Assert Exists(Extract(usn2 In .12e-12 Ends With `2esn` Where 1e-1 Contains 0.0).@usn6.`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`5esn`)Assert Allshortestpaths((:usn1$1000)).`8esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:#usn8)Assert Exists(Extract(`8esn` In {_usn4} Ends With {0} Ends With `1esn` Where {0}[.1e-1..][_usn4..]|0e-0[..$usn2])._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:_usn3)Assert {@usn6:12e12[{`4esn`}..`4esn`][999..{@usn6}]}.usn1?.`8esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:#usn8)Assert Case When `1esn`[{@usn5}..][{_usn4}..] Then {`3esn`}[..{`4esn`}][..usn2] Else `4esn` Contains 0X0123456789ABCDEF Contains $usn2 End.`8esn`.`4esn`?.@usn5? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`6esn`:``]-()Assert Exists(Reduce(`3esn`=.0e0 =~0 =~.0e0,usn1 In \"d_str\" Contains {@usn6}|01234567[\"d_str\"..][$`4esn`..]).@usn5?)"),
    octest_legacy:ct_string("Create Constraint On()-[``:usn1]->()Assert Exists({`5esn`:{`4esn`}[00..]}.#usn8)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn5:usn2]-()Assert Exists({_usn4:{7} Starts With 0x0 Starts With 9e1,#usn8:{@usn6} In 9e12}.`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:#usn7)Assert (`3esn` :`2esn`:`4esn`{`2esn`:{usn1} Is Not Null,`8esn`:999[..$@usn5][..``]})<-[#usn8?:`7esn`|usn1*..$`1esn`]->(`1esn` :#usn7:`8esn`).@usn5.`5esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[usn2:@usn6]-()Assert Exists({`1esn`:$999 Is Not Null}.`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:@usn6)Assert Exists(Case {`7esn`} Is Not Null Is Not Null When {@usn6} In 9e12 Then {7}[0x0][1e1] End.usn1.usn2!)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:@usn5)Assert Reduce(usn1=$123456789 Is Not Null Is Not Null,`7esn` In 0.12 Is Not Null|.12e12 Ends With 07 Ends With 3.9e-1).`1esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`2esn`)Assert Exists(usn1(Distinct 1.9e0[..0][.._usn3],$@usn5 Is Null Is Null).``)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`6esn`)Assert Exists([`` In `7esn` =~#usn8 =~\"d_str\" Where 3.9e-1 Starts With .9e0 Starts With {#usn7}|$usn1 =~.9e12 =~`6esn`].`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`5esn`)Assert usn2(Distinct 1.0 In {usn1},10.12e12[usn2]).`1esn`?.`3esn`!.`7esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[``:_usn4]-()Assert Exists(Case When 6.0e0 =~12.0 =~9e1 Then $12 Ends With 7.0e-0 Ends With 9e-12 When $usn2[..$999][..#usn8] Then $1000[_usn4][{@usn5}] End.`8esn`!._usn3)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn2:#usn8]-()Assert Exists(Single(usn1 In \"d_str\" Contains {@usn6} Where {`1esn`} Is Null).@usn6!)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:usn1)Assert Exists(Single(@usn6 In 9e12[..usn2][.._usn3] Where $12 Ends With {_usn4} Ends With $`8esn`).``!)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:usn1)Assert None(usn2 In $`5esn`[{`4esn`}][{0}]).`5esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`7esn`:``]-()Assert Exists(Single(`2esn` In $@usn5 Is Not Null Is Not Null Where {`3esn`} =~$@usn5 =~`2esn`).@usn5?.@usn6!)"),
    octest_legacy:ct_string("Create Constraint On(usn2:#usn7)Assert Filter(`5esn` In {123456789} Starts With $_usn4 Starts With 0x0 Where .12e12 Starts With 5.9e-12 Starts With `4esn`).`3esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:`2esn`)Assert Exists(Allshortestpaths((`5esn` :`1esn`:``{usn2:`7esn` =~#usn8 =~\"d_str\",`4esn`:$usn1 Contains 4.9e12 Contains $`2esn`})).``?)"),
    octest_legacy:ct_string("Create Constraint On(``:`7esn`)Assert All(usn1 In \"d_str\" Contains {@usn6} Where .12e-12[9e1]).``! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:``)Assert Exists(Reduce(_usn3=0e-0[..$usn2],@usn6 In $usn2 Contains $`3esn` Contains 6.0e0|01234567[10.12e12][0Xa])._usn3!._usn3?.@usn5?)"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:`8esn`]->()Assert Exists(Filter(`6esn` In 010[{`1esn`}..] Where `6esn` Ends With 1e1 Ends With $#usn7).`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:#usn7)Assert Any(_usn3 In `8esn`[_usn4] Where $_usn3[usn2..][usn1..]).`8esn`.`2esn`.#usn8! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`6esn`:``]-()Assert Exists((`5esn` {`4esn`:{`3esn`}[_usn4][2.9e1]})<-[?:`8esn`|:#usn8{`5esn`:$1000 Starts With {@usn6} Starts With $@usn5}]-(:`6esn`{@usn5:{#usn8}[..@usn5],`6esn`:0.0[$`4esn`]})<-[?:@usn5|:#usn7 *0]->(_usn3 {`2esn`:5.9e-12[0x0..]}).@usn6!.`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`7esn`)Assert None(`5esn` In {123456789} Starts With $_usn4 Starts With 0x0 Where usn1 =~false =~{999}).#usn8! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn2:_usn4]-()Assert Exists({`6esn`:{usn1}[7.0e-0..][3.9e-1..]}._usn4?)"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:_usn4]-()Assert Exists(Extract(`8esn` In {_usn4} Ends With {0} Ends With `1esn` Where `2esn`|01 =~07).`2esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`6esn`)Assert Any(`5esn` In {123456789} Starts With $_usn4 Starts With 0x0 Where {#usn8}[..@usn5]).`7esn`.@usn6 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`4esn`)Assert Reduce(_usn4=1e-1 =~$`7esn` =~1e1,usn2 In .12e-12 Ends With `2esn`|0e-0[4.9e12..00][0X0123456789ABCDEF..{_usn4}]).usn2! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:@usn6]->()Assert Exists(Allshortestpaths(((usn1 :@usn6:_usn3)-[?:`2esn`|`5esn` *..123456789$1000]-(:`8esn`{#usn7:$`1esn`[..12e-12][...9e12],usn1:{7} Starts With 0x0 Starts With 9e1}))).`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`3esn`)Assert Reduce(#usn8=$_usn3 In `2esn` In `3esn`,`2esn` In $@usn5 Is Not Null Is Not Null|5.9e-12[12e-12][$`8esn`])._usn4! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`2esn`)Assert Case When {usn2} Is Not Null Is Not Null Then false Contains {`7esn`} When {_usn3} Is Null Is Null Then .12e12 Ends With 07 Ends With 3.9e-1 End.#usn7! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:@usn5)Assert Exists(#usn7(.12e12 Is Not Null).@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:#usn8)Assert Reduce(`2esn`=$1000 Contains $123456789 Contains #usn8,`` In `7esn` =~#usn8 =~\"d_str\"|_usn4 Is Not Null Is Not Null).`4esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:`1esn`]-()Assert Exists(Reduce(`2esn`=$usn2 Starts With $999 Starts With .0e0,`8esn` In {usn1}[7.0e-0..][3.9e-1..]|0xabc[0Xa..]).@usn5)"),
    octest_legacy:ct_string("Create Constraint On()<-[`6esn`:_usn4]-()Assert Exists(Case 0e-0 In 0X0123456789ABCDEF In `3esn` When $12[10.12e12][.1e1] Then usn1 Ends With 11.12e-12 Ends With 5.9e-12 Else {123456789} Starts With $_usn4 Starts With 0x0 End.`8esn`?.`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:usn2)Assert Exists({usn1:`3esn` Contains `2esn` Contains {_usn4},#usn8:010[{`1esn`}..]}._usn4)"),
    octest_legacy:ct_string("Create Constraint On(``:`5esn`)Assert Shortestpath((`8esn` :#usn8:@usn6{#usn7:`6esn`[0X0123456789ABCDEF..][`8esn`..],#usn8:Count(*)[..{#usn7}]})<-[usn1:`2esn`|`5esn`{`2esn`:$`7esn` Starts With 's_str',``:2.12[{12}]}]-({`5esn`:.0e-0 In 12,_usn4:{_usn3}[{0}...9e-1][9e-1...0e0]})).@usn6? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`2esn`)Assert #usn7($12[10.12e12][.1e1]).`6esn`!.usn2?.usn2! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`8esn`)Assert Reduce(`2esn`=.1e-1[..$_usn3][..0],@usn6 In $usn2 Contains $`3esn` Contains 6.0e0|5.9e-12[12e-12][$`8esn`])._usn3.`6esn`?.`3esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`6esn`)Assert All(`7esn` In 0.12 Is Not Null Where 01234567[1000..][$`8esn`..]).`1esn`!.usn1? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`6esn`)Assert Exists(Any(#usn8 In 07[..$`5esn`] Where $`5esn` Is Not Null).`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`6esn`)Assert [usn1 In \"d_str\" Contains {@usn6} Where $`8esn` Is Null Is Null].`1esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:_usn4]->()Assert Exists((#usn7 {@usn6:9e12 Ends With 9e-1 Ends With 9e1})<-[ *7{usn2:.9e1 Ends With 0x0,``:.1e1 Contains 1e-1 Contains #usn8}]->(_usn3 {`1esn`:`3esn` =~$#usn7,_usn3:@usn6[999][1000]})<-[`7esn`?]-(@usn6 {usn2:1e1 Ends With $_usn3 Ends With .1e1}).`6esn`.#usn7._usn3!)"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn8:@usn6]-()Assert Exists(None(usn2 In .12e-12 Ends With `2esn` Where {``} Is Null Is Null).@usn6?.`4esn`?._usn4)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`6esn`)Assert Reduce(``=01234567[1000..][$`8esn`..],usn1 In $@usn6 Is Null Is Null|6.0e0[$12..0.12]).``.`5esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`6esn`)Assert Exists([`1esn` In $12 In {usn2} Where 0 Starts With `7esn` Starts With 9e0|$12 Is Null Is Null].`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`6esn`)Assert Reduce(_usn3=@usn5[9e-1..{`1esn`}],`5esn` In {123456789} Starts With $_usn4 Starts With 0x0|{123456789} Starts With `6esn`).`4esn`.`6esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:_usn4)Assert Exists(Case .9e-1 Ends With .0e-0 Ends With {_usn3} When $12 Is Not Null Is Not Null Then {``}[$usn2..00][{_usn3}..123.654] When .1e-1 Starts With @usn6 Starts With _usn3 Then 9e0[{7}...0e-0][Null..@usn5] Else $12 =~4.9e12 End._usn4!)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`1esn`)Assert Extract(#usn8 In 07[..$`5esn`] Where 00 Is Not Null Is Not Null|`5esn` Is Not Null Is Not Null).`3esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:#usn8)Assert Any(@usn6 In $usn2 Contains $`3esn` Contains 6.0e0 Where 9e1[$``.._usn4][999..`3esn`])._usn3!.#usn7! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:usn1)Assert Exists(Extract(usn1 In {#usn7} =~.12e12 =~9e0 Where {@usn5} Ends With 0Xa Ends With .12e-12|{`8esn`} In {_usn3} In 6.0e0)._usn4?)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`2esn`)Assert Exists(Reduce(`2esn`={12} Ends With $`3esn` Ends With 0xabc,#usn7 In .0e-0 In 12|.9e-12[usn2]).`3esn`)"),
    octest_legacy:ct_string("Create Constraint On(usn2:_usn3)Assert Exists(All(usn1 In $@usn6 Is Null Is Null Where 9e0[`4esn`..$_usn4][9.1e-1..0e0])._usn4!.`1esn`.`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:#usn8]->()Assert Exists(Allshortestpaths(((#usn8 :usn2)<-[? *1000..{_usn3:\"d_str\" Starts With ``,`4esn`:{`3esn`}[..0xabc][..{`6esn`}]}]->(usn2 :`5esn`:`7esn`)<-[@usn5:usn1|usn2{`8esn`:{usn2} Is Not Null Is Not Null}]->(usn2 :`2esn`:`4esn`{`6esn`:$#usn7[01..2.12][2.12..3.9e-1],usn1:$_usn3 Starts With 010}))).@usn5?)"),
    octest_legacy:ct_string("Create Constraint On(``:`8esn`)Assert @usn5(Distinct 0.0[00..][0xabc..]).#usn8! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`1esn`)Assert Exists(All(`6esn` In 010[{`1esn`}..] Where usn2[12e-12..{`8esn`}][.12e12..{123456789}]).`5esn`.@usn6!.`5esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:usn1]-()Assert Exists([`8esn` In {usn1}[7.0e-0..][3.9e-1..] Where 2.12[{12}]|123.654[10.12e12..$12][6.0e0..{#usn8}]].usn2?.#usn7)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`6esn`)Assert Exists([`7esn` In 0.12 Is Not Null Where 0X0123456789ABCDEF In false].`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:usn2)Assert (`2esn` :`4esn`:usn2{`8esn`:.9e-1 Contains .9e0 Contains ``,_usn4:8.1e1 Contains .9e-1 Contains false})<-[`4esn`? *..123456789{#usn7:$`6esn`[@usn6...9e-12]}]-(:`1esn`:``{_usn3:\"d_str\" Starts With ``,`4esn`:{`3esn`}[..0xabc][..{`6esn`}]})-[:#usn7|:@usn5]-(_usn3 :_usn3{@usn6:$999 Ends With `2esn` Ends With 12.0}).``.@usn5._usn3 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:#usn7)Assert [`6esn` In 010[{`1esn`}..]|.1e-1[2.9e1..][$`7esn`..]].usn2 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`3esn`:#usn8]-()Assert Exists([`6esn` In 010[{`1esn`}..] Where 9e-12[$7..]].`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`2esn`:usn1]-()Assert Exists(Filter(#usn7 In .0e-0 In 12 Where 00[$``])._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:usn2]-()Assert Exists(All(`` In `7esn` =~#usn8 =~\"d_str\").`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:usn1)Assert Single(`7esn` In 0.12 Is Not Null Where 010[{`1esn`}..]).`3esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`7esn`:usn2]-()Assert Exists(Any(usn1 In \"d_str\" Contains {@usn6} Where $`8esn` Is Null Is Null).usn1)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`1esn`:@usn6]-()Assert Exists(Filter(usn2 In $_usn3[0X0123456789ABCDEF..][0x0..] Where $12 Is Null Is Null).`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`7esn`)Assert All(`6esn` In 010[{`1esn`}..] Where {`4esn`}[00..]).`8esn`.`4esn`.`5esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:@usn5)Assert Shortestpath(((:_usn3{@usn5:`2esn`[`7esn`][1000]})<-[`2esn` *7]->(:`8esn`{@usn6:$`6esn`[$_usn3..{1000}],_usn3:0xabc[..{usn1}][..\"d_str\"]})<-[:_usn4|:`1esn`{`7esn`:{1000}[`2esn`...0e-0][9e-1..0X7],`5esn`:$`5esn` =~Count(*) =~1.9e0}]-(_usn3 ))).`4esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:@usn6)Assert (`` $999)<-[? *010..0]-(#usn7 :``)-[:`4esn`|:`2esn`{usn1:3.9e-1 Contains $@usn5}]->(:`5esn`:`7esn`{`8esn`:{12} Ends With $`3esn` Ends With 0xabc}).`3esn`?.`6esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:`5esn`]-()Assert Exists(Extract(usn2 In .12e-12 Ends With `2esn` Where `7esn`[1.9e0..5.9e-12][9e0..@usn5]).#usn7!.`3esn`?.`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On(usn2:@usn6)Assert ``(Distinct {_usn3}[{0}...9e-1][9e-1...0e0],$`4esn`[12e-12..$`1esn`][$`2esn`...9e12]).`3esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`1esn`)Assert Case {`6esn`}[6.0e0..9e0][.9e1..12e12] When 3.9e-1 Ends With {usn1} Ends With {`5esn`} Then 5.9e-12 Is Null Is Null When 7 Is Null Is Null Then 2.12[`4esn`][.9e-1] End.``?.#usn8?.`3esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:usn1)Assert Exists(Extract(`6esn` In 010[{`1esn`}..] Where {1000}[0..]|1e-1 Contains 0.0)._usn4?)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`5esn`)Assert Filter(#usn7 In .0e-0 In 12 Where 123.654 Ends With {1000} Ends With 9e12).#usn8!.`6esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn7:`1esn`]-()Assert Exists([@usn6 In $usn2 Contains $`3esn` Contains 6.0e0 Where {1000}[..`5esn`][..9e12]].#usn7!.`5esn`!._usn3)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`3esn`)Assert Exists((`8esn` :`8esn`)-[`2esn` *1000..{`2esn`:{@usn6} In 9e12}]->(:usn1{usn1:true In 0.0,@usn5:{`1esn`} Is Null}).`7esn`.#usn7!)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`8esn`)Assert Exists((@usn5 )<-[`5esn`?{usn1:2.9e1[2.12..1.9e0]}]-(`5esn` :``{usn2:{_usn3} In $#usn8 In $12}).@usn6?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`6esn`:`2esn`]-()Assert Exists({`4esn`:`3esn` Starts With 9.1e-1 Starts With .9e-1,#usn8:1e-1[$`4esn`]}._usn4)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:_usn3)Assert Exists(_usn3($`5esn`[$_usn3][$12]).`7esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:`8esn`]-()Assert Exists(All(`5esn` In {123456789} Starts With $_usn4 Starts With 0x0 Where .9e12 Is Not Null Is Not Null).`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:#usn7)Assert Exists((usn1 {`6esn`:9e-1 Is Not Null,#usn7:`1esn`[{@usn5}..][{_usn4}..]})-[_usn3?:@usn5|:#usn7]->(`2esn` :usn1)<-[?:usn1|usn2{#usn8:'s_str'[`2esn`][12.0]}]->(_usn3 :``).`5esn`)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:usn1)Assert Exists(Extract(#usn7 In .0e-0 In 12 Where 0xabc =~123456789|Null[$`3esn`..][`1esn`..]).usn2!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`7esn`)Assert Exists(Extract(@usn6 In $usn2 Contains $`3esn` Contains 6.0e0 Where .9e1[$`1esn`..][$``..]|11.12e-12 Contains usn1)._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`3esn`)Assert Allshortestpaths((((#usn8 :`5esn`:`7esn`{`5esn`:$usn1[9e1][{999}]})<-[_usn4 *..07{``:{#usn8} In {12} In .9e12,`7esn`:.0e0 =~0 =~.0e0}]->(:``{usn1:.12e-12 Starts With .12e-12,`3esn`:\"d_str\"[0x0..{@usn6}][$@usn5..0]})-[`1esn`?:``|:`7esn`{#usn7:01[`4esn`..]}]->(@usn6 {usn2:1e1 Ends With $_usn3 Ends With .1e1})))).`5esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:`1esn`)Assert Exists(Filter(usn1 In {#usn7} =~.12e12 =~9e0 Where 4.9e12[{_usn4}..]).#usn8.`5esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:`1esn`]-()Assert Exists(Reduce(`7esn`=$usn2 Starts With $999 Starts With .0e0,@usn6 In 9e12[..usn2][.._usn3]|$@usn6 Is Null Is Null)._usn4?.usn1?)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:@usn5)Assert Exists(All(usn1 In \"d_str\" Contains {@usn6} Where .12e-12[9e1]).``!)"),
    octest_legacy:ct_string("Create Constraint On()-[usn2:@usn6]->()Assert Exists(Shortestpath((:`3esn`)-[#usn8*..]-(`5esn` :#usn8:@usn6)<-[`4esn`?]-(:@usn5{#usn7:Null,`5esn`:{@usn5} Ends With 0Xa Ends With .12e-12})).`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`1esn`)Assert Exists(Filter(#usn8 In 07[..$`5esn`] Where $`5esn` Is Not Null).@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`1esn`)Assert Exists(Single(_usn3 In `8esn`[_usn4] Where 01234567 Ends With .0e0 Ends With 12e12).#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:`4esn`]->()Assert Exists((_usn3 :`6esn`{#usn7:{`6esn`} Starts With @usn6,`7esn`:{7}[0x0][1e1]})-[_usn3?:`7esn`|usn1]-(`6esn` :`7esn`{@usn5:999 Is Null Is Null,`4esn`:Count(*)[Null..][01234567..]})-[:`4esn`|:`2esn` *0X0123456789ABCDEF{_usn4:$`1esn`[4.9e12..][_usn3..],@usn6:`3esn` =~$#usn7}]-(`2esn` ).`4esn`.`8esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn3:@usn5]-()Assert Exists(Case When $12[$`6esn`..][01..] Then $`4esn`[$@usn6...12e12] When .9e-12[.12e12..][0Xa..] Then {`7esn`} Is Not Null Is Not Null Else {`6esn`}[6.0e0..9e0][.9e1..12e12] End.#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`5esn`)Assert Exists(Extract(`8esn` In {usn1}[7.0e-0..][3.9e-1..] Where `6esn` =~999 =~$999|`1esn` In 6.0e0 In 12).usn1?.``)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`6esn`)Assert Exists((@usn5 :#usn8:@usn6{`3esn`:$@usn6[.1e-1][9e12],_usn3:$12 Is Null Is Null})<-[#usn7? *0xabc..12]-(_usn3 :`6esn`).#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`2esn`)Assert Exists((#usn7 :_usn3{`4esn`:$@usn6[.1e-1][9e12],`6esn`:Null[#usn7..][9.1e-1..]})-[`3esn`?:`3esn`|`3esn`*..]-({`6esn`:1000[{`1esn`}..][$`3esn`..]})-[@usn6:`1esn`|:`1esn`{#usn8:12.0[..Count ( * )][..@usn6]}]-(@usn6 :`3esn`{`4esn`:$`5esn`[$_usn3][$12],#usn8:`8esn`[.12e12..]}).#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`6esn`)Assert Exists(Single(`3esn` In 8.1e1 Contains .9e-1 Contains false Where $0 Contains $123456789 Contains {`3esn`}).@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`3esn`)Assert Exists(Shortestpath(((({@usn5:`2esn`})<-[`8esn`? *0X7..0Xa{_usn3:$`4esn`[$@usn6...12e12]}]-(`4esn` :usn2{_usn4:123.654[01..][Count(*)..],`8esn`:12e12})-[{#usn8:\"d_str\" Contains {@usn6}}]->(@usn6 {#usn8:$`6esn` Starts With 0.0,usn1:$`8esn`[0x0][.9e0]})))).`4esn`?.``?._usn4!)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`4esn`)Assert Exists(Single(usn2 In .12e-12 Ends With `2esn` Where 1e-1 Contains 0.0).`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:usn2)Assert {#usn8:$`6esn` =~$#usn7 =~$`4esn`,`1esn`:999[..$@usn5][..``]}.#usn7? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`4esn`)Assert Exists(Filter(@usn6 In $usn2 Contains $`3esn` Contains 6.0e0 Where 9e1[$``.._usn4][999..`3esn`]).``?.`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(``:`3esn`)Assert Single(`6esn` In 010[{`1esn`}..] Where {`8esn`}[@usn5][$`2esn`]).#usn7 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`8esn`)Assert Exists(`5esn`.`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`6esn`)Assert Filter(usn2 In $_usn3[0X0123456789ABCDEF..][0x0..] Where .9e-1 Is Null Is Null).@usn6._usn4! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`6esn`)Assert Any(usn1 In {#usn7} =~.12e12 =~9e0 Where @usn6[true..])._usn4._usn3!.usn1! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`8esn`)Assert Case 0xabc[..{usn1}][..\"d_str\"] When $1000[..0e-0][..010] Then 999 Starts With 7.0e-0 Starts With true When {123456789} Starts With $_usn4 Starts With 0x0 Then .9e-12[usn2] End.`4esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:#usn7)Assert {``:@usn6[0x0..][$_usn4..],@usn5:$@usn5[`8esn`][12e12]}.`2esn`?.`6esn`!.`3esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[usn2:`6esn`]-()Assert Exists([`` In `7esn` =~#usn8 =~\"d_str\" Where 3.9e-1 Starts With .9e0 Starts With {#usn7}|$usn1 =~.9e12 =~`6esn`]._usn3.usn1!)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:_usn3)Assert _usn3(Distinct 12[..$`5esn`],@usn6[999][1000]).`3esn`?.@usn5!.@usn6 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`3esn`)Assert Exists({`1esn`:{1000}[..`5esn`][..9e12]}.`4esn`?.`3esn`!.``!)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:#usn8)Assert None(`7esn` In 0.12 Is Not Null Where 01234567[1000..][$`8esn`..]).#usn8 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn3:`8esn`]-()Assert Exists([`` In `7esn` =~#usn8 =~\"d_str\" Where #usn7[$`8esn`][{`3esn`}]].@usn6?)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`8esn`)Assert Exists(Any(#usn7 In .0e-0 In 12 Where 00[$``]).`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn2:`1esn`]-()Assert Exists(Single(`8esn` In {usn1}[7.0e-0..][3.9e-1..] Where 2.12[{12}]).`1esn`?.#usn7?.#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`6esn`:`3esn`]-()Assert Exists(Case When {1000} =~4.9e12 =~9e1 Then $12 Is Not Null Is Not Null When @usn6[true..] Then {0} Is Not Null Is Not Null Else @usn5 =~$#usn7 =~{usn1} End.``.usn2)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:#usn8)Assert Reduce(`5esn`=.9e1 Ends With 0x0,`8esn` In {usn1}[7.0e-0..][3.9e-1..]|Count ( * ) Contains 9.1e-1 Contains {`2esn`}).`6esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn4:_usn4)Assert Exists(Case When {`8esn`} Starts With .9e-1 Starts With 1000 Then $`6esn`[$_usn3..{1000}] When 3.9e-1 Starts With .9e0 Starts With {#usn7} Then .0e-0 Ends With $`2esn` Ends With `5esn` Else _usn4[$_usn4] End.usn2!)"),
    octest_legacy:ct_string("Create Constraint On()<-[`5esn`:`3esn`]-()Assert Exists(None(`3esn` In 8.1e1 Contains .9e-1 Contains false Where 12e12 Ends With `5esn` Ends With .0e0).`4esn`.`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:``)Assert Exists(Single(`5esn` In {123456789} Starts With $_usn4 Starts With 0x0 Where {`6esn`} In {_usn4} In $12).`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:usn2)Assert Exists((`6esn` :`4esn`:usn2)<-[?:`6esn`{`1esn`:$`5esn` Is Not Null,`2esn`:.1e-1[2.9e1..][$`7esn`..]}]-(`7esn` :#usn8:@usn6{#usn7:{`6esn`} Starts With @usn6,`7esn`:{7}[0x0][1e1]}).`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`4esn`)Assert Exists((`3esn` :#usn7:`8esn`{`4esn`:$`5esn`[$_usn3][$12],#usn8:`8esn`[.12e12..]})<-[?{`1esn`:{123456789}[...9e-1][..1.0],#usn8:$`4esn` Ends With {999}}]->({`2esn`:$`6esn` Starts With 0.0}).`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:usn1)Assert Exists(Any(usn2 In $_usn3[0X0123456789ABCDEF..][0x0..] Where .1e1 Is Null Is Null)._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`7esn`)Assert Exists(({``:true Is Null,_usn3:$12 Ends With 7.0e-0 Ends With 9e-12})-[?{@usn6:{_usn4} In 0X7 In 0e0}]-(:`6esn`{`2esn`:`5esn` Ends With Count(*)})._usn4!)"),
    octest_legacy:ct_string("Create Constraint On(``:`2esn`)Assert Exists(All(usn1 In \"d_str\" Contains {@usn6} Where {`1esn`} Is Null).``?)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:`7esn`]->()Assert Exists((`7esn` {@usn5:Count ( * )[_usn4..]})<-[_usn4:`2esn`|`5esn` *7{`2esn`:999 Ends With {#usn8},#usn8:.12e12 Is Not Null}]-(@usn5 :#usn7:`8esn`{`1esn`:0e-0[4.9e12..00][0X0123456789ABCDEF..{_usn4}],@usn6:999 Starts With 7.0e-0 Starts With true}).@usn5!.#usn7.`7esn`)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:_usn4)Assert Exists(None(`5esn` In {123456789} Starts With $_usn4 Starts With 0x0 Where $``[1.0..][_usn3..])._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:`2esn`]-()Assert Exists(Shortestpath((usn2 :`2esn`:`4esn`{`7esn`:@usn5 =~$#usn7 =~{usn1}})).@usn5.@usn6)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`3esn`)Assert Exists(Allshortestpaths((`2esn` :`2esn`:`4esn`{#usn7:0 Starts With `7esn` Starts With 9e0})).`2esn`.usn2?.`4esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:@usn6)Assert Shortestpath((:usn1{`5esn`:{`6esn`} =~2.12 =~123.654})<-[`5esn`:@usn6|:`4esn` *010..0{`8esn`:0xabc Starts With 12 Starts With 0e-0}]-(:`4esn`:usn2{``:$usn1 Ends With {`2esn`} Ends With $usn1})<-[?:@usn6|:`4esn`{`2esn`:$12[10.12e12][.1e1],#usn7:9e0[..{#usn7}][..`4esn`]}]-(`7esn` :usn2{`2esn`:9e1 Starts With $@usn6 Starts With 0e-0,`2esn`:0xabc[0Xa..]})).#usn8!.`6esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:#usn7]->()Assert Exists(Filter(`` In `7esn` =~#usn8 =~\"d_str\" Where `3esn` Contains `2esn` Contains {_usn4}).`8esn`!._usn3!._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:_usn3)Assert Filter(usn2 In .12e-12 Ends With `2esn` Where 7.0e-0 Is Not Null).usn2!.#usn8 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:_usn3)Assert `4esn`($#usn7[01..2.12][2.12..3.9e-1])._usn3 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn2:@usn5)Assert Exists(All(usn1 In {#usn7} =~.12e12 =~9e0 Where {7}[$@usn5..123456789][1e1..1.9e0])._usn4.`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[``:`4esn`]-()Assert Exists({usn2:01[$`1esn`..$`7esn`][{usn2}..12.0],@usn5:{#usn7} Starts With .1e-1}.`8esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`6esn`)Assert Exists(Case When .1e-1[2.9e1..][$`7esn`..] Then `4esn` Is Not Null When `4esn` =~010 Then .12e12[$usn1..][{@usn6}..] End.`8esn`?)"),
    octest_legacy:ct_string("Create Index On:usn2(`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn2:`1esn`]-()Assert Exists(Any(`` In `7esn` =~#usn8 =~\"d_str\" Where `6esn` Ends With 1e1 Ends With $#usn7).`8esn`!.`2esn`!.`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On(usn2:@usn5)Assert {#usn7:$usn2[..$999][..#usn8],`6esn`:`2esn`}.`6esn`?.#usn7? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:_usn3)Assert Exists(Filter(`` In `7esn` =~#usn8 =~\"d_str\" Where $`6esn` Starts With 0.0).@usn5!)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`1esn`)Assert Exists(Shortestpath((`7esn` {_usn4:$7[.1e-1..{@usn6}][$7..{`1esn`}]})<-[:`7esn`|usn1 *7]-(`8esn` :`5esn`:`7esn`{usn1:{``} Contains 0.0 Contains `4esn`})-[? *1000..{`1esn`:{`1esn`} Is Null}]->(`6esn` :`2esn`:`4esn`{@usn6:0e-0[$``..10.12e12]})).`2esn`?._usn4)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:usn1)Assert Exists(Extract(usn2 In .12e-12 Ends With `2esn` Where 9e1 =~$`8esn` =~10.12e12|$`8esn`[0x0][.9e0]).usn1)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`1esn`)Assert `5esn`(Distinct {`3esn`} =~$`` =~$`8esn`,#usn7 In 07).`3esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`7esn`)Assert Filter(usn2 In .12e-12 Ends With `2esn` Where $7).usn1.#usn7!.`5esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:#usn8)Assert Exists(Any(#usn8 In 07[..$`5esn`] Where `1esn` Is Not Null Is Not Null)._usn3!.`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`6esn`)Assert None(`3esn` In 8.1e1 Contains .9e-1 Contains false Where 010[...12e-12]).usn2? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:_usn3)Assert Any(usn2 In .12e-12 Ends With `2esn` Where $12 =~4.9e12)._usn4 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:_usn3]->()Assert Exists(Case $usn1 Ends With {`2esn`} Ends With $usn1 When $`6esn`[0..{@usn6}][@usn5..1000] Then .0e-0[..01234567] End.@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`2esn`)Assert [_usn3 In `8esn`[_usn4] Where {#usn7} Starts With .1e-1|$@usn5 Is Null Is Null].usn1! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:``)Assert Exists(Any(`8esn` In {_usn4} Ends With {0} Ends With `1esn` Where 0 In 2.9e1 In 7).#usn7?._usn3.``!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`2esn`)Assert Exists(All(#usn7 In .0e-0 In 12 Where _usn4 Is Not Null Is Not Null).`3esn`.usn1?.usn2)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:``)Assert Exists(`4esn`(Distinct $#usn7,{`4esn`} Ends With Count(*)).`6esn`.usn1!.`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:`1esn`]-()Assert Exists([`3esn` In 8.1e1 Contains .9e-1 Contains false Where `7esn` Ends With 10.12e12|00[$``]]._usn4?.@usn5)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`1esn`)Assert Exists(Extract(`5esn` In {123456789} Starts With $_usn4 Starts With 0x0 Where usn1 =~false =~{999}|{`6esn`}[6.0e0..9e0][.9e1..12e12]).usn1.`3esn`!.@usn5?)"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:`8esn`]->()Assert Exists(Extract(#usn7 In .0e-0 In 12 Where {#usn7} Is Not Null).`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:#usn7)Assert Exists(Single(`5esn` In {123456789} Starts With $_usn4 Starts With 0x0 Where $`4esn`[$@usn6...12e12]).``?.`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`5esn`)Assert Case $12 =~4.9e12 When $`4esn`[$@usn6...12e12] Then .12e-12[@usn6..'s_str'] Else {0} In {`1esn`} End.#usn8.#usn8! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn2:usn2)Assert Exists(Extract(`` In `7esn` =~#usn8 =~\"d_str\" Where 1.9e0[.12e-12][9e-12]).#usn8.`2esn`?.``?)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:`8esn`]->()Assert Exists([`7esn` In 0.12 Is Not Null Where 0X0123456789ABCDEF In false].`7esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:`3esn`]->()Assert Exists(Allshortestpaths(((:usn1{`5esn`:{`6esn`} =~2.12 =~123.654})-[?:`4esn`|:`2esn`{usn1:{123456789} Starts With `6esn`,@usn5:9e1 Ends With 9e12 Ends With 0x0}]-(`2esn` :usn1))).usn1!)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`4esn`)Assert Exists(Reduce(#usn7=$`5esn` Is Null,usn2 In $`5esn`[{`4esn`}][{0}]|@usn5 In Null).`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`4esn`)Assert Single(`1esn` In $12 In {usn2} Where 12e12[{`4esn`}..`4esn`][999..{@usn6}]).@usn5? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`6esn`)Assert Extract(#usn8 In 07[..$`5esn`] Where `1esn` Is Not Null Is Not Null).usn2 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`6esn`)Assert Case \"d_str\" Contains {@usn6} When Count(*) =~01234567 =~.1e-1 Then 0xabc Starts With 12 Starts With 0e-0 When {0} In {`1esn`} Then `3esn` Contains 01 Contains 01 End.#usn7! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`6esn`)Assert Case When 0e0 Contains {`2esn`} Then 8.1e1[.1e1..][`4esn`..] End.`4esn`.`3esn`!._usn4 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:usn2)Assert [`8esn` In {usn1}[7.0e-0..][3.9e-1..] Where 6.0e0 =~12.0 =~9e1|#usn7 =~$@usn5 =~{7}]._usn4?.`7esn`.#usn8! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[usn2:`8esn`]-()Assert Exists((usn1 :#usn8:@usn6)-[`7esn`?:@usn5|:#usn7]->(`7esn` :@usn5)-[:#usn7|:@usn5]->(`` :usn1{@usn5:7[{`4esn`}..],_usn4:999 Is Null Is Null}).usn1!.`2esn`._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`3esn`)Assert None(#usn8 In 07[..$`5esn`] Where $`5esn` Is Not Null).`5esn`?.#usn8! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`2esn`)Assert Exists(None(@usn6 In $usn2 Contains $`3esn` Contains 6.0e0 Where {_usn3} In $#usn8 In $12).`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:#usn7)Assert Case When 9e12 Is Null Is Null Then \"d_str\" Is Not Null Is Not Null When {`3esn`} Is Not Null Is Not Null Then {``} Is Null Is Null End.usn1?.`2esn`.`5esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn2:#usn7)Assert Reduce(`4esn`=.12e12[..$123456789],usn1 In $@usn6 Is Null Is Null|2.9e1 Ends With `5esn` Ends With 1000).@usn5? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`6esn`)Assert Exists(Any(usn1 In \"d_str\" Contains {@usn6} Where $`8esn` Is Null Is Null).usn1)"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:`7esn`]-()Assert Exists({`7esn`:.9e1[$`1esn`..][$``..]}.`8esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:#usn8)Assert Extract(#usn7 In .0e-0 In 12 Where $12 In {usn2}|0Xa Starts With 9e0 Starts With Count(*)).#usn8? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:`3esn`]->()Assert Exists(Extract(`6esn` In 010[{`1esn`}..] Where {1000}[0..]|{_usn3} In $#usn8 In $12).#usn7)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:`3esn`]-()Assert Exists(count(Distinct 1e-1[$`4esn`]).`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:``)Assert Exists(Extract(usn2 In .12e-12 Ends With `2esn` Where $`4esn` Ends With .12e12 Ends With 123.654|0X7 Is Not Null Is Not Null).usn1?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:#usn7)Assert Exists(({@usn5:{#usn8}[..@usn5],`6esn`:0.0[$`4esn`]})<-[usn2 *999..123456789{usn1:12e12 Ends With `5esn` Ends With .0e0}]-(`3esn` :#usn8:@usn6)<-[`5esn`?:`1esn`|:`1esn` *12]->(`6esn` {`3esn`:Count ( * )[_usn4..]}).@usn6!)"),
    octest_legacy:ct_string("Create Constraint On(``:`5esn`)Assert Exists(Allshortestpaths(((#usn8 :usn2)<-[? *1000..{_usn3:\"d_str\" Starts With ``,`4esn`:{`3esn`}[..0xabc][..{`6esn`}]}]->(usn2 :`5esn`:`7esn`)<-[@usn5:usn1|usn2{`8esn`:{usn2} Is Not Null Is Not Null}]->(usn2 :`2esn`:`4esn`{`6esn`:$#usn7[01..2.12][2.12..3.9e-1],usn1:$_usn3 Starts With 010}))).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:@usn5]->()Assert Exists(Reduce(`2esn`=.9e0 In 8.1e1,`6esn` In 010[{`1esn`}..]|Count ( * )[9e0..$``]).#usn8)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`4esn`)Assert Exists(Reduce(`4esn`=.12e12[..$123456789],usn1 In $@usn6 Is Null Is Null|2.9e1 Ends With `5esn` Ends With 1000).#usn7.usn1)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`8esn`:``]-()Assert Exists({`8esn`:00[$``]}.`1esn`?.usn2?.`2esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:@usn6)Assert (:`5esn`:`7esn`)-[?:`2esn`|`5esn` *..123456789$1000]-({`1esn`:$`8esn` Is Null Is Null,`1esn`:0.12 =~2.9e1 =~9e1})<-[?:_usn4|:`1esn` *..07{``:12.0[..Count ( * )][..@usn6],`6esn`:.9e-12[usn2]}]-(#usn8 :`4esn`:usn2{@usn6:`6esn`[3.9e-1..`8esn`][12.0..0.0]}).``! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`7esn`)Assert `5esn`(`3esn` Starts With 9.1e-1 Starts With .9e-1,.12e-12 Ends With `2esn`).`6esn`._usn4.`7esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`5esn`)Assert Reduce(``={`1esn`} Contains 1.0 Contains 4.9e12,usn1 In {#usn7} =~.12e12 =~9e0|{#usn7} Ends With 999 Ends With 12).`7esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`3esn`)Assert ``(00[Null..usn2]).usn1?._usn3! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:`6esn`)Assert (`3esn` {`7esn`:$_usn4 =~$#usn8 =~{`4esn`}})-[`3esn`?:`1esn`|:`1esn`]-(:`5esn`:`7esn`{_usn3:{`3esn`} =~$@usn5 =~`2esn`,`5esn`:$#usn7 Starts With $123456789}).#usn8! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:@usn5)Assert Exists(@usn6(Distinct 0e0 Contains {`2esn`}).`7esn`.`3esn`?._usn4?)"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:`4esn`]->()Assert Exists(`3esn`(Distinct 0e-0[4.9e12..00][0X0123456789ABCDEF..{_usn4}],01[`4esn`..]).`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:``)Assert Exists((`8esn` {`4esn`:$@usn6[.1e-1][9e12],`6esn`:Null[#usn7..][9.1e-1..]})<-[#usn8?:_usn4|:`1esn`{usn1:$`4esn` Is Null Is Null}]->(:usn1{`2esn`:$`7esn` In $`4esn`,_usn4:12e12 Ends With `5esn` Ends With .0e0})<-[ *1000..{`2esn`:0.12[Count ( * )..Count ( * )][$999..`5esn`]}]->(`` ).#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`2esn`:_usn4]->()Assert Exists([`1esn` In $12 In {usn2} Where 0.12 In $``|{`1esn`}[..$_usn4]].@usn5.`7esn`?.``!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:usn2]->()Assert Exists([`7esn` In 0.12 Is Not Null Where @usn6[0x0..][$_usn4..]].`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`2esn`)Assert Exists({`8esn`:5.9e-12[0x0..]}.`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:_usn3]-()Assert Exists([usn2 In $_usn3[0X0123456789ABCDEF..][0x0..] Where _usn4[{``}..{`6esn`}][$7..$_usn3]].@usn5!)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`8esn`)Assert Allshortestpaths((`7esn` {#usn8:2.9e1[{`2esn`}]})<-[`7esn`?:`7esn`|usn1 *1000..{@usn6:#usn7 In 07,#usn8:$999[usn1..0e-0]}]->(#usn7 {usn1:2.12[{12}]})).@usn5?.`3esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:`7esn`]-()Assert Exists(Single(usn1 In {#usn7} =~.12e12 =~9e0 Where 0X0123456789ABCDEF Is Not Null Is Not Null)._usn4._usn3!.``?)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`1esn`)Assert Filter(usn2 In .12e-12 Ends With `2esn` Where 7.0e-0 Is Not Null).`1esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:_usn3)Assert Exists(Case 0xabc[..Count(*)][..$`5esn`] When `6esn`[0X0123456789ABCDEF..][`8esn`..] Then `2esn`[`7esn`][1000] When 0X0123456789ABCDEF[1e1..] Then 0X0123456789ABCDEF Ends With {1000} Else 12e12[{`4esn`}..`4esn`][999..{@usn6}] End.`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:_usn3)Assert exists($#usn7 Starts With $123456789,Count(*) =~01234567 =~.1e-1).usn2! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`1esn`:`6esn`]-()Assert Exists(Single(#usn8 In 07[..$`5esn`] Where 8.1e1 Contains .9e-1 Contains false).`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On(``:@usn5)Assert Case When 0e-0 In 0X0123456789ABCDEF In `3esn` Then $`1esn`[..12e-12][...9e12] Else .1e-1[..$_usn3][..0] End.`2esn`?.`4esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:``)Assert Exists(Case _usn4 Ends With {`8esn`} Ends With usn2 When .12e-12 Ends With `2esn` Then 9e-12[$7..] When 9e0[..{#usn7}][..`4esn`] Then .12e12 Is Not Null End.`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`8esn`)Assert Exists(Reduce(#usn8=$0 Ends With 9e-12 Ends With $_usn4,usn1 In \"d_str\" Contains {@usn6}|12e12[.9e12..07]).`3esn`.`8esn`._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`4esn`)Assert {`7esn`:{12},`2esn`:$_usn3 Is Not Null}.#usn8.`5esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:_usn3)Assert Exists(Single(usn2 In $`5esn`[{`4esn`}][{0}] Where .1e-1[2.9e1..][$`7esn`..]).`3esn`!.`8esn`?._usn4?)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:`6esn`]->()Assert Exists(Any(usn1 In \"d_str\" Contains {@usn6} Where 10.12e12 Contains .9e0).`6esn`.#usn8!)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`5esn`)Assert Exists(Case When `1esn`[{usn1}..] Then $`6esn`[@usn6...9e-12] When $usn2 Starts With $999 Starts With .0e0 Then {`6esn`} =~2.12 =~123.654 End.``?.`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`3esn`)Assert Case 0e0 =~{12} =~{1000} When `7esn` =~#usn8 =~\"d_str\" Then 00 =~`4esn` =~.9e-12 End.`3esn`.`8esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`2esn`)Assert Exists(Case $12[10.12e12][.1e1] When 9e-12 Is Not Null Is Not Null Then {12} Ends With 1e1 When 9e1 Ends With `7esn` Ends With 2.12 Then `4esn`[9e-12..true] End.`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:#usn7)Assert Exists(@usn5({`3esn`}[01234567][{#usn7}],@usn6 Starts With #usn7).#usn7?.``?.`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`6esn`)Assert Single(#usn8 In 07[..$`5esn`] Where $_usn3[0X0123456789ABCDEF..][0x0..])._usn3._usn4 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`1esn`)Assert Case .12e12 Starts With 5.9e-12 Starts With `4esn` When 9e12 Ends With 9e-1 Ends With 9e1 Then {`4esn`}[00..] When $usn2 Contains $`3esn` Contains 6.0e0 Then $`4esn` Ends With {999} End.usn2? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`8esn`)Assert Exists(Allshortestpaths(((#usn8 :usn2)<-[? *1000..{_usn3:\"d_str\" Starts With ``,`4esn`:{`3esn`}[..0xabc][..{`6esn`}]}]->(usn2 :`5esn`:`7esn`)<-[@usn5:usn1|usn2{`8esn`:{usn2} Is Not Null Is Not Null}]->(usn2 :`2esn`:`4esn`{`6esn`:$#usn7[01..2.12][2.12..3.9e-1],usn1:$_usn3 Starts With 010}))).`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`5esn`)Assert Exists({`7esn`:00 Is Not Null Is Not Null,_usn4:.12e12 Starts With 5.9e-12 Starts With `4esn`}._usn4)"),
    octest_legacy:ct_string("Create Constraint On(usn1:_usn3)Assert Exists(None(`6esn` In 010[{`1esn`}..] Where $`4esn` Is Null Is Null).`2esn`?.`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`4esn`)Assert Exists(Extract(usn1 In $@usn6 Is Null Is Null Where $999 =~false =~{`8esn`}).`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:`2esn`]->()Assert Exists({`6esn`:{123456789} Contains $0,`8esn`:2.9e1[2.9e1..][`4esn`..]}.`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`2esn`)Assert Exists(Allshortestpaths(((_usn3 {`1esn`:`3esn` =~$#usn7,_usn3:@usn6[999][1000]}))).`6esn`!.#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`2esn`)Assert ({``:true Is Null,_usn3:$12 Ends With 7.0e-0 Ends With 9e-12})-[:#usn8|:`` *..07{@usn5:01234567[\"d_str\"..][$`4esn`..],`6esn`:$usn1 Ends With {`2esn`} Ends With $usn1}]-(`3esn` :`2esn`:`4esn`{`2esn`:{usn1} Is Not Null,`8esn`:999[..$@usn5][..``]}).``?.`8esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:`1esn`]->()Assert Exists(Allshortestpaths((((`7esn` {`8esn`:0x0 Ends With #usn8 Ends With .9e-1})-[?{`6esn`:{123456789} Starts With `6esn`,usn1:$`8esn` =~{`6esn`} =~12}]->(:``{usn2:$_usn3[0X0123456789ABCDEF..][0x0..],`8esn`:0Xa In 1.0 In $@usn5})-[`8esn`:`4esn`|:`2esn`]->(`7esn` {`8esn`:0x0 Ends With #usn8 Ends With .9e-1})))).`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`5esn`:`4esn`]-()Assert Exists(`3esn`(Distinct $@usn5 Contains _usn3,{`1esn`} Contains 1.0 Contains 4.9e12)._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn5:``]-()Assert Exists(Allshortestpaths((`8esn` :`2esn`:`4esn`)-[`8esn`:_usn4|:`1esn`]->(@usn5 :`3esn`{`4esn`:12e12[.9e12..07]})).``?.`3esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`3esn`)Assert (`5esn` {`4esn`:{`3esn`}[_usn4][2.9e1]})<-[?:`8esn`|:#usn8{`5esn`:$1000 Starts With {@usn6} Starts With $@usn5}]-(:`6esn`{@usn5:{#usn8}[..@usn5],`6esn`:0.0[$`4esn`]})<-[?:@usn5|:#usn7 *0]->(_usn3 {`2esn`:5.9e-12[0x0..]}).usn2? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:@usn5)Assert Exists(All(usn1 In $@usn6 Is Null Is Null Where $7[.1e-1..{@usn6}][$7..{`1esn`}]).`5esn`!._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:@usn6)Assert (_usn3 :#usn7:`8esn`)<-[_usn4? *999..123456789{@usn6:$`4esn` Ends With .12e12 Ends With 123.654}]->({`1esn`:10.12e12 In Null In .12e12})-[`6esn`?{`6esn`:1000[{`1esn`}..][$`3esn`..]}]->({`8esn`:8.1e1[.1e1..][`4esn`..],`2esn`:{@usn6} In 9e12}).#usn7!.`8esn`.`6esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn2:`5esn`)Assert Any(@usn6 In 9e12[..usn2][.._usn3] Where 7[{`4esn`}..]).`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`2esn`:@usn6]-()Assert Exists({_usn3:$`6esn`[0..{@usn6}][@usn5..1000]}.`2esn`.``)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:@usn5)Assert Exists(``($12 =~4.9e12,4.9e12 Is Not Null Is Not Null).@usn5.@usn6)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:``]->()Assert Exists(All(#usn7 In .0e-0 In 12 Where $12 In {usn2}).usn2)"),
    octest_legacy:ct_string("Drop Constraint On(``:`1esn`)Assert None(#usn7 In .0e-0 In 12 Where {#usn8} In {12} In .9e12).`6esn`.`5esn`!.``! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:usn1)Assert [`6esn` In 010[{`1esn`}..] Where {``}[$usn2..00][{_usn3}..123.654]|.9e-12[usn2]].`5esn`!._usn3?.`2esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:#usn8)Assert Exists({#usn7:7 Starts With 9e-12}.#usn8.`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`2esn`)Assert Allshortestpaths(((:@usn6:_usn3{`5esn`:0X0123456789ABCDEF Is Not Null Is Not Null,`8esn`:\"d_str\" Is Not Null Is Not Null}))).`4esn`?._usn3! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`7esn`)Assert {`6esn`:0e-0[4.9e12..00][0X0123456789ABCDEF..{_usn4}],_usn4:0.0[$`4esn`]}._usn3! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`7esn`)Assert Exists(Shortestpath((_usn4 :usn2)-[@usn5?:#usn7|:@usn5]-(usn1 :#usn8:@usn6))._usn3?.`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:`3esn`]-()Assert Exists({@usn6:{usn2} Ends With {@usn6} Ends With 1000,#usn7:2.12[{12}]}.@usn6?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`6esn`)Assert [@usn6 In 9e12[..usn2][.._usn3] Where `8esn`[_usn4]].#usn8 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:#usn8]->()Assert Exists(#usn8(Distinct 0X7[#usn7..][$@usn5..],0e0[12.0][{#usn7}])._usn4)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:_usn4)Assert [#usn8 In 07[..$`5esn`] Where $@usn6 Starts With 0xabc Starts With {`7esn`}|{1000} Starts With 10.12e12 Starts With .0e-0].@usn6 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:_usn4)Assert All(usn1 In \"d_str\" Contains {@usn6} Where $`5esn` =~Count(*) =~1.9e0).`2esn`.`2esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`3esn`)Assert (`4esn` :``{``:$`6esn` =~$#usn7 =~$`4esn`,_usn3:{usn2} In false})-[`7esn`:`2esn`|`5esn`{_usn4:\"d_str\"[0x0..{@usn6}][$@usn5..0],`1esn`:`8esn`[.12e12..]}]->($999)<-[#usn8?:_usn4|:`1esn`{usn1:$`4esn` Is Null Is Null}]->(:``{`2esn`:{`8esn`} In {_usn3} In 6.0e0,usn1:{`1esn`} Is Null})._usn3!.`4esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:_usn4)Assert Shortestpath((#usn8 {usn2:$0 Ends With 9e-12 Ends With $_usn4,`5esn`:0e-0[{@usn6}]})-[`8esn`?:_usn3]->(`2esn` :`4esn`:usn2{`7esn`:$_usn4 =~$#usn8 =~{`4esn`}})).@usn5 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`6esn`)Assert Exists(All(_usn3 In `8esn`[_usn4] Where $_usn3[usn2..][usn1..]).usn1?)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:_usn4)Assert Exists(Any(usn1 In {#usn7} =~.12e12 =~9e0 Where 4.9e12[{_usn4}..]).`7esn`!.`1esn`?.usn2?)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`6esn`)Assert Exists({#usn8:.0e-0 Ends With $`2esn` Ends With `5esn`}.`1esn`!.`1esn`!.usn2!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:_usn3)Assert Exists(Reduce(``=01[`4esn`..],#usn8 In 07[..$`5esn`]|8.1e1[usn2..{1000}][0X7..9e12]).usn2.@usn6!.`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`7esn`)Assert (_usn4 :`2esn`:`4esn`{#usn8:$12 Ends With 12.0 Ends With $`4esn`,`5esn`:9e12 Ends With \"d_str\" Ends With 0X7})<-[_usn3:`7esn`|usn1]->(:_usn3{usn2:6.0e0[$12..0.12],#usn7:`2esn`}).`2esn`?.@usn6 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:`2esn`]->()Assert Exists({usn1:$`3esn` =~#usn8 =~0x0}.@usn6.`7esn`?.#usn7?)"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:`4esn`]->()Assert Exists(Shortestpath((`` :``{usn1:010[...12e-12],#usn7:1e1[$_usn3]})-[`3esn`?:_usn3 *..123456789]-(:`1esn`:``{`8esn`:{12} Ends With $`3esn` Ends With 0xabc})<-[ *999..123456789{`8esn`:{``}[usn1..][{`8esn`}..]}]->({_usn4:.1e1 Is Null Is Null,`5esn`:{1000}[`2esn`...0e-0][9e-1..0X7]})).`4esn`?.`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:_usn3)Assert Allshortestpaths((`7esn` {@usn5:07[{@usn5}..],`3esn`:$1000 Starts With {@usn6} Starts With $@usn5})-[`7esn`:`2esn`|`5esn`{_usn4:\"d_str\"[0x0..{@usn6}][$@usn5..0],`1esn`:`8esn`[.12e12..]}]->(_usn4 :`2esn`:`4esn`{#usn8:$12 Ends With 12.0 Ends With $`4esn`,`5esn`:9e12 Ends With \"d_str\" Ends With 0X7})<-[#usn7? *0xabc..12]-(@usn6 :`3esn`{usn2:0xabc Starts With {`3esn`} Starts With {``},#usn7:Count(*) Starts With 07 Starts With $#usn7})).@usn6.`` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:``)Assert Exists(All(`2esn` In $@usn5 Is Not Null Is Not Null Where `6esn`[3.9e-1..`8esn`][12.0..0.0]).`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:@usn5)Assert Allshortestpaths(((_usn3 {`1esn`:`3esn` =~$#usn7,_usn3:@usn6[999][1000]}))).`6esn`!.#usn8! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`7esn`)Assert Exists({`5esn`:`3esn` Starts With 9.1e-1 Starts With .9e-1}._usn3)"),
    octest_legacy:ct_string("Create Constraint On()<-[`7esn`:@usn6]-()Assert Exists(All(`8esn` In {_usn4} Ends With {0} Ends With `1esn` Where .12e-12[9e1]).`8esn`?.`3esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:#usn7)Assert Single(usn2 In $_usn3[0X0123456789ABCDEF..][0x0..] Where .9e0 Ends With $0).`6esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:usn1)Assert Exists(Shortestpath((#usn8 :`4esn`:usn2{@usn6:`6esn`[3.9e-1..`8esn`][12.0..0.0]})).@usn5)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:usn1]-()Assert Exists(Extract(`2esn` In $@usn5 Is Not Null Is Not Null Where $usn1 Contains 4.9e12 Contains $`2esn`).`7esn`)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`4esn`)Assert Reduce(`2esn`=\"d_str\" Contains {@usn6},`6esn` In 010[{`1esn`}..]|`1esn`[..$1000]).`2esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`3esn`)Assert Case When 3.9e-1 Ends With {usn1} Ends With {`5esn`} Then `3esn` Contains 01 Contains 01 When {`1esn`} Is Null Then .1e1[{@usn6}][true] End.`` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:#usn7)Assert None(`5esn` In {123456789} Starts With $_usn4 Starts With 0x0 Where {`6esn`} In {_usn4} In $12).`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`8esn`)Assert None(`2esn` In $@usn5 Is Not Null Is Not Null Where {`6esn`}[@usn5..{@usn6}]).`3esn`?._usn4? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`5esn`)Assert Exists(Extract(usn1 In {#usn7} =~.12e12 =~9e0|11.12e-12 Contains usn1)._usn4.``?)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:`3esn`]-()Assert Exists(Shortestpath(((usn1 :#usn7:`8esn`{@usn5:Count(*) Starts With 07 Starts With $#usn7,usn2:`6esn` Ends With 1e1 Ends With $#usn7}))).usn2.``?.usn1?)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`3esn`)Assert Exists(Single(@usn6 In $usn2 Contains $`3esn` Contains 6.0e0).#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:_usn4)Assert Exists((:`5esn`:`7esn`{``:{@usn5}[10.12e12..]})-[usn1? *..123456789{`8esn`:00[$``],``:$`4esn`[12e-12..$`1esn`][$`2esn`...9e12]}]->({usn1:12[..$`5esn`]}).usn2.`5esn`?.`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`7esn`:_usn4]-()Assert Exists(Shortestpath((`3esn` :`2esn`:`4esn`)).`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:#usn7)Assert Exists(_usn3().`8esn`!.`2esn`!.`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn4:`5esn`]-()Assert Exists(Case $`8esn`[...1e-1] When $`4esn` Ends With {999} Then {123456789}[...9e-1][..1.0] When {#usn8}[..@usn5] Then `3esn` Is Null End.`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:_usn4)Assert Exists(Single(`1esn` In $12 In {usn2} Where 12e12[{`4esn`}..`4esn`][999..{@usn6}]).@usn5!)"),
    octest_legacy:ct_string("Create Constraint On()-[usn2:#usn8]-()Assert Exists(Reduce(_usn3={@usn6} In 9e12,@usn6 In 9e12[..usn2][.._usn3]|07[{@usn5}..]).@usn6.`4esn`.usn2)"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn5:usn2]-()Assert Exists([@usn6 In $usn2 Contains $`3esn` Contains 6.0e0 Where .9e1[$`1esn`..][$``..]|{#usn7} Ends With 999 Ends With 12].@usn5)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`8esn`)Assert All(`` In `7esn` =~#usn8 =~\"d_str\" Where `3esn` Contains `2esn` Contains {_usn4}).`4esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:_usn3]-()Assert Exists({``:{#usn8} Ends With _usn3 Ends With `2esn`,usn1:5.9e-12[\"d_str\"..][{`6esn`}..]}.`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On(``:#usn8)Assert Reduce(`2esn`=$usn1 =~.9e12 =~`6esn`,@usn6 In $usn2 Contains $`3esn` Contains 6.0e0|1.9e0[..0][.._usn3]).#usn7?.`5esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:`4esn`]->()Assert Exists(Single(`6esn` In 010[{`1esn`}..] Where Count ( * ) Starts With 0.12).`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:@usn6)Assert Exists(Case $7[.1e-1..{@usn6}][$7..{`1esn`}] When $_usn3 In `2esn` In `3esn` Then 9.1e-1 Contains {`3esn`} Contains $12 Else \"d_str\" Contains {@usn6} End.@usn6)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:usn2)Assert (:`3esn`{usn1:`6esn`[0X0123456789ABCDEF..][`8esn`..],@usn5:{`8esn`}[9e12..][{_usn4}..]})<-[`1esn`?{`2esn`:`8esn`[.12e12..],_usn3:usn1 =~0Xa =~0}]->(:usn2{`7esn`:`2esn` Starts With 010 Starts With ``,``:010 Starts With 9e12 Starts With 1000}).`8esn`!.`6esn`!.usn2 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`3esn`)Assert {usn1:`6esn`[0X0123456789ABCDEF..][`8esn`..],@usn5:{`8esn`}[9e12..][{_usn4}..]}.`3esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`3esn`)Assert Exists(Reduce(`5esn`=$``[9e0..][5.9e-12..],#usn7 In .0e-0 In 12|0xabc[..Count(*)][..$`5esn`]).`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:usn2)Assert Exists(Reduce(`1esn`={`5esn`}[01234567..][5.9e-12..],usn1 In {#usn7} =~.12e12 =~9e0|$`6esn`[..01][..{_usn3}])._usn3?.`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn6:#usn7]-()Assert Exists({usn2:#usn7[123.654][{12}]}.``)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:@usn6)Assert usn2(Distinct .9e-1 Is Null Is Null).`2esn`!.`6esn`!.`7esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:@usn6)Assert Exists((#usn7 :usn2{_usn4:{#usn7} =~$@usn6 =~$7})<-[_usn4:usn2]->(:_usn4:`2esn`{`5esn`:`1esn` In 010 In 1e-1})<-[#usn7?:_usn3 *999..123456789{@usn5:$12 In {usn2},usn1:5.9e-12 Is Null Is Null}]->(`` {`1esn`:$`5esn` Is Null,_usn4:_usn3 =~{7} =~123.654}).usn1._usn4)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`7esn`)Assert (_usn4 {#usn8:2.9e1[2.12..1.9e0],`6esn`:Count ( * ) Starts With 0.12})<-[{`4esn`:{_usn3}[{0}...9e-1][9e-1...0e0]}]->(`3esn` {#usn8:$`6esn` Starts With 0.0,usn1:$`8esn`[0x0][.9e0]}).@usn5? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:usn1)Assert {`7esn`:{`8esn`} In {_usn3} In 6.0e0,``:{`5esn`}[01234567..][5.9e-12..]}.`6esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`4esn`)Assert Exists(Filter(`3esn` In 8.1e1 Contains .9e-1 Contains false Where {`1esn`}[..$_usn4]).#usn7)"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:@usn6]-()Assert Exists(Allshortestpaths(((`1esn` :@usn5{@usn6:$`7esn` Ends With 7.0e-0 Ends With $usn2})<-[?:`3esn`|`3esn` *999..123456789{_usn3:$`4esn`[$@usn6...12e12]}]->(usn1 {#usn8:@usn6 Ends With $`2esn` Ends With 1.0,`3esn`:$1000[_usn4][{@usn5}]}))).`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`3esn`)Assert Exists(None(usn1 In {#usn7} =~.12e12 =~9e0 Where \"d_str\" Starts With $`7esn` Starts With 999).`2esn`)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`7esn`)Assert Exists([usn2 In $`5esn`[{`4esn`}][{0}] Where 6.0e0 Is Not Null Is Not Null|3.9e-1[{@usn6}..][01234567..]]._usn4.#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:#usn8)Assert {@usn6:{usn2} Ends With {@usn6} Ends With 1000,#usn7:2.12[{12}]}.@usn6.#usn8! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:#usn8)Assert Case When $`4esn`[usn2..] Then 1e1 Ends With 12 Ends With 999 Else 2.9e1 Ends With `5esn` Ends With 1000 End.`4esn`!.@usn6!._usn4 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:usn2)Assert Exists(Allshortestpaths((((:usn2)-[]->(:usn1)-[:usn1|usn2]->({`7esn`:{`3esn`}[$#usn8..],`4esn`:{`8esn`}[..999][.._usn3]})))).`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:usn1)Assert {#usn8:_usn4[$_usn4]}.`1esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:@usn6)Assert Shortestpath((`8esn` :`2esn`:`4esn`)-[`8esn`:_usn4|:`1esn`]->(@usn5 :`3esn`{`4esn`:12e12[.9e12..07]})).`7esn`.`6esn`._usn3! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`1esn`)Assert Exists(Case When 1000[{`1esn`}..][$`3esn`..] Then {`4esn`}[00..] Else {`5esn`}[.1e-1..1e-1][999..{_usn3}] End.`8esn`!.@usn6!.usn2)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:usn2)Assert `5esn`(Null In {7},3.9e-1[..$1000][..0.12]).`5esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:#usn8]-()Assert Exists(Case When {`3esn`} Is Not Null Is Not Null Then {``} Is Null Is Null When 00[$``] Then {`5esn`}[.1e-1..1e-1][999..{_usn3}] End.`1esn`?._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:_usn4)Assert Exists(({`1esn`:999 Contains {999} Contains 12})-[? *..00$_usn3]-(:usn2)<-[?:usn2 *010..0{`4esn`:9e-12[$7..]}]-({#usn7:12e12[.9e12..07]}).`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:#usn7)Assert All(`5esn` In {123456789} Starts With $_usn4 Starts With 0x0 Where {`6esn`} In {_usn4} In $12).#usn7.`1esn`!.`5esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:_usn4)Assert Exists(Case 12e12 When {#usn7} =~$@usn6 =~$7 Then 6.0e0 =~12.0 =~9e1 When 0.0[00..][0xabc..] Then .9e1[$`1esn`..][$``..] Else `5esn` Is Not Null Is Not Null End.usn1?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`2esn`)Assert Exists([usn1 In $@usn6 Is Null Is Null|`5esn` Is Not Null Is Not Null].#usn8)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:#usn7)Assert {#usn8:0xabc[..{usn1}][..\"d_str\"]}.`7esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:usn2)Assert Filter(`` In `7esn` =~#usn8 =~\"d_str\" Where 07[{@usn5}..]).`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:_usn4)Assert ({`7esn`:{#usn7}[.12e-12]})<-[?:usn1|usn2{#usn8:'s_str'[`2esn`][12.0]}]->(_usn3 :``)-[_usn3:`6esn`]-({`6esn`:1000[{`1esn`}..][$`3esn`..]}).`6esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn7:`5esn`]-()Assert Exists(Reduce(`7esn`=3.9e-1 Starts With .9e0 Starts With {#usn7},`8esn` In {_usn4} Ends With {0} Ends With `1esn`|#usn8 Is Null Is Null).#usn8.@usn6?.`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:@usn6)Assert Reduce(`1esn`={12},`2esn` In $@usn5 Is Not Null Is Not Null|010[..9e-1][..0X7])._usn4! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:_usn3]-()Assert Exists(None(`1esn` In $12 In {usn2} Where 12e12[{`4esn`}..`4esn`][999..{@usn6}]).`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`4esn`)Assert Exists(Any(`3esn` In 8.1e1 Contains .9e-1 Contains false Where {`1esn`}[..$_usn4]).#usn7.`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:@usn5)Assert {`4esn`:{`1esn`} Is Null,`8esn`:0xabc Contains {12} Contains {`6esn`}}.#usn7? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn6:`1esn`]->()Assert Exists(Reduce(`5esn`=1e1 Ends With $_usn3 Ends With .1e1,`7esn` In 0.12 Is Not Null|`1esn`[{usn1}..]).usn1)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:@usn6)Assert Exists((_usn4 :`5esn`:`7esn`{_usn4:$_usn3[.0e-0..999]})-[?:_usn3]->(_usn3 :`1esn`:``).`7esn`.`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn8:`6esn`]-()Assert Exists(Shortestpath((({`7esn`:00 Is Not Null Is Not Null,_usn4:.12e12 Starts With 5.9e-12 Starts With `4esn`})-[`5esn`? *999..123456789{_usn4:$123456789[{usn1}][.12e-12],#usn8:$999 =~false =~{`8esn`}}]-(_usn3 :`1esn`:``))).@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:usn2]-()Assert Exists([`3esn` In 8.1e1 Contains .9e-1 Contains false Where {0} Is Not Null|Count ( * ) Is Not Null Is Not Null].`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`6esn`)Assert Exists(Single(usn1 In {#usn7} =~.12e12 =~9e0 Where @usn6[999][1000]).`1esn`.`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:@usn5)Assert Exists((`1esn` :`7esn`)-[`3esn`?:`8esn`|:#usn8{@usn6:$0 Contains $7}]->(_usn4 :#usn8:@usn6).@usn5?)"),
    octest_legacy:ct_string("Create Constraint On(``:`1esn`)Assert None(#usn7 In .0e-0 In 12 Where {#usn8} In {12} In .9e12).`6esn`.`5esn`!.``! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`6esn`)Assert Extract(usn1 In \"d_str\" Contains {@usn6} Where {`1esn`} Is Null|`` Contains {`6esn`} Contains 123456789).usn1?.`4esn`!.`2esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`1esn`)Assert Filter(@usn6 In 9e12[..usn2][.._usn3] Where 123.654 Ends With {1000} Ends With 9e12).`3esn`?.`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:_usn4]->()Assert Exists(({`1esn`:10.12e12 In Null In .12e12})<-[`6esn`?:@usn6|:`4esn` *12{`6esn`:{12} Starts With $`` Starts With 0X0123456789ABCDEF,@usn6:0 Starts With `7esn` Starts With 9e0}]->(`2esn` :`4esn`:usn2{`8esn`:.9e-1 Contains .9e0 Contains ``,_usn4:8.1e1 Contains .9e-1 Contains false}).`8esn`!.`3esn`!.`5esn`)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:@usn5)Assert Exists([#usn7 In .0e-0 In 12 Where 0.0[00..][0xabc..]|0xabc[0Xa..]].@usn6?._usn4!.`7esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:_usn3)Assert Exists(Reduce(_usn3=$`8esn` Is Null Is Null,`3esn` In 8.1e1 Contains .9e-1 Contains false|`4esn` Is Not Null).usn2?)"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:`4esn`]-()Assert Exists([`2esn` In $@usn5 Is Not Null Is Not Null Where {`6esn`}[@usn5..{@usn6}]|{_usn4}[{`6esn`}]].@usn6?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`5esn`)Assert Any(usn1 In \"d_str\" Contains {@usn6} Where .9e12[6.0e0..][@usn5..]).`5esn` Is Unique"),
    octest_legacy:ct_string("Drop Index On:@usn6(usn2)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`5esn`)Assert Exists((`7esn` {_usn4:$7[.1e-1..{@usn6}][$7..{`1esn`}]})-[usn1?:`3esn`|`3esn`*..]->({usn1:$@usn5 Is Null Is Null,`3esn`:999[..$@usn5][..``]})-[`2esn`?:`4esn`|:`2esn`{`4esn`:4.9e12 Starts With {``},`8esn`:$12 Ends With {_usn4} Ends With $`8esn`}]->(#usn8 :`4esn`:usn2{#usn7:{`3esn`}[#usn7],`4esn`:010[..9e-1][..0X7]}).@usn5?.`3esn`.`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:@usn5)Assert _usn3(Distinct .12e12 Is Not Null,.9e0[07..][4.9e12..]).`2esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:``]-()Assert Exists(Allshortestpaths((@usn5 )).`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:`4esn`]-()Assert Exists(Reduce(usn1=$@usn6 Ends With 123456789 Ends With $``,_usn3 In `8esn`[_usn4]|{``}[$usn2..00][{_usn3}..123.654]).#usn7?)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`7esn`)Assert Exists(Allshortestpaths(((usn2 :``{#usn7:1e-1 =~$`7esn` =~1e1,`7esn`:{0}[`4esn`..{`8esn`}]})-[?{@usn6:{_usn4} In 0X7 In 0e0}]-(_usn4 :`1esn`:``{`1esn`:{123456789}[...9e-1][..1.0],#usn8:$`4esn` Ends With {999}})<-[_usn3? *..123456789{`6esn`:.0e-0[..``][..$7],usn2:{usn2} Ends With {@usn6} Ends With 1000}]-(`8esn` :`4esn`:usn2{@usn6:$#usn7 Starts With $123456789})))._usn4!)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:usn1)Assert Exists(Any(@usn6 In 9e12[..usn2][.._usn3] Where $7).`1esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[`8esn`:usn1]-()Assert Exists([#usn7 In .0e-0 In 12 Where $999 Is Not Null].`8esn`.@usn6!.`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:usn1)Assert Case $999 =~0x0 When 3.9e-1[..$1000][..0.12] Then #usn8 =~{@usn5} When 9e0[..{#usn7}][..`4esn`] Then 1e1 Ends With 12 Ends With 999 Else $`6esn`[$_usn3..{1000}] End.@usn6?.`1esn`!.@usn5 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`7esn`)Assert Exists(Reduce(`1esn`=$`1esn` =~`8esn`,usn2 In $`5esn`[{`4esn`}][{0}]|{`1esn`}[..$_usn4]).#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`3esn`)Assert Exists(Case 9e0[`3esn`][0] When 7 In 1e1 In {``} Then 0[..{0}][..true] End.`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`4esn`)Assert Exists([`1esn` In $12 In {usn2} Where $12 In {usn2}|9e-12 Ends With {1000}].@usn6?._usn3?.`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`7esn`)Assert Exists(Single(`8esn` In {_usn4} Ends With {0} Ends With `1esn` Where 0xabc[..{usn1}][..\"d_str\"]).#usn7?.`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:usn1)Assert All(usn2 In $`5esn`[{`4esn`}][{0}] Where $`8esn` Is Not Null Is Not Null)._usn4!._usn3? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn4:usn1)Assert Single(_usn3 In `8esn`[_usn4] Where 0.0[..9e1][..2.12]).#usn7.`6esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`5esn`)Assert `4esn`(12.0 Starts With 00,8.1e1 Contains .9e-1 Contains false)._usn3!.`1esn`.@usn5! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn8:`3esn`]-()Assert Exists(All(`1esn` In $12 In {usn2} Where 0.12 In $``).@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:usn2)Assert Exists(Filter(@usn6 In 9e12[..usn2][.._usn3] Where 123.654 Ends With {1000} Ends With 9e12).`3esn`?.`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`4esn`)Assert {@usn6:9e-12[010..{#usn7}][{123456789}..7],`3esn`:$123456789[..$999][..`6esn`]}.#usn8! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:usn1)Assert Exists(Single(`8esn` In {usn1}[7.0e-0..][3.9e-1..] Where 01 =~07).`4esn`!.`8esn`?.`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`8esn`:@usn5]-()Assert Exists(Extract(#usn8 In 07[..$`5esn`] Where 0.0[$`4esn`]|#usn7 In 07)._usn4?.`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:@usn6)Assert All(`8esn` In {_usn4} Ends With {0} Ends With `1esn` Where 0 In 2.9e1 In 7).#usn7! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:_usn4)Assert Shortestpath((_usn3 :`6esn`{#usn7:{`6esn`} Starts With @usn6,`7esn`:{7}[0x0][1e1]})<-[:`6esn` *..0x0{``}]-(#usn8 :``{usn2:9e1 =~$`8esn` =~10.12e12})).`8esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[usn1:#usn7]-()Assert Exists(Any(@usn6 In $usn2 Contains $`3esn` Contains 6.0e0 Where 0[10.12e12]).usn2.usn1?.`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`5esn`)Assert `4esn`(Distinct $`6esn`[$_usn3..{1000}],0xabc =~123456789)._usn3! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`2esn`)Assert Exists(None(usn1 In \"d_str\" Contains {@usn6} Where $`5esn` =~Count(*) =~1.9e0).`6esn`!.`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:`8esn`]-()Assert Exists($123456789.`1esn`!.@usn6?.``!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`4esn`:_usn3]-()Assert Exists(Shortestpath((((`1esn` {@usn6:6.0e0[$#usn7..$1000]})-[``?:#usn8|:``*{`2esn`:`4esn` =~010}]-(`4esn` {`6esn`:Count ( * ) Contains 9.1e-1 Contains {`2esn`},`6esn`:$#usn8 Is Not Null Is Not Null})-[usn2 *7]-(`8esn` {_usn3:.0e-0[..``][..$7],_usn4:{#usn8} Ends With _usn3 Ends With `2esn`})))).`1esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:`4esn`]->()Assert Exists({`3esn`:$@usn5 Is Null Is Null}.usn2.usn2!.usn2)"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn6:@usn5]-()Assert Exists(Reduce(usn2=07 Ends With {1000} Ends With 01234567,`1esn` In $12 In {usn2}|`3esn` Contains `2esn` Contains {_usn4}).`2esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:usn2]-()Assert Exists(Case 2.9e1 Ends With `5esn` Ends With 1000 When {`4esn`} Ends With Count(*) Then {0} In {`1esn`} Else _usn4 Ends With {`8esn`} Ends With usn2 End._usn4!.#usn7!.usn2!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[``:@usn5]-()Assert Exists(({`4esn`:#usn8[\"d_str\"..usn2],`1esn`:12.0[..Count ( * )][..@usn6]})<-[:_usn4|:`1esn`{`7esn`:{1000}[`2esn`...0e-0][9e-1..0X7],`5esn`:$`5esn` =~Count(*) =~1.9e0}]-(_usn3 ).`7esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:@usn6]-()Assert Exists((@usn5 :`3esn`{`8esn`:0x0 Ends With #usn8 Ends With .9e-1})-[{``:{`3esn`}[01234567][{#usn7}],_usn4:999 Is Null Is Null}]->(`2esn` {`7esn`:{123456789} Contains $0,#usn8:{`3esn`}[$#usn8..]})<-[#usn7?:`7esn`|usn1{_usn4:.1e1 Contains 1e-1 Contains #usn8,`5esn`:0e-0 In 0X0123456789ABCDEF In `3esn`}]->(:`8esn`{#usn7:$`1esn`[..12e-12][...9e12],usn1:{7} Starts With 0x0 Starts With 9e1}).`3esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:usn2]-()Assert Exists([usn2 In $`5esn`[{`4esn`}][{0}] Where {1000} =~4.9e12 =~9e1]._usn4?.`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`6esn`)Assert Exists(Reduce(_usn4=07 Ends With $_usn3 Ends With $#usn8,`6esn` In 010[{`1esn`}..]|`6esn`[$@usn5][01]).`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:_usn3)Assert Allshortestpaths(({@usn6:{`5esn`} Is Not Null Is Not Null,`6esn`:`4esn`[9e-12..true]})<-[#usn7?]-(`4esn` :`7esn`{@usn5:`2esn`[`7esn`][1000]})).@usn6? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:``)Assert Single(`3esn` In 8.1e1 Contains .9e-1 Contains false Where `7esn` =~#usn8 =~\"d_str\").@usn5?._usn4?.`6esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:usn2)Assert Reduce(``=$#usn7 Ends With 999 Ends With {12},`2esn` In $@usn5 Is Not Null Is Not Null|{`6esn`} Starts With .12e-12).`8esn`.#usn7.@usn5! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:usn1)Assert [`6esn` In 010[{`1esn`}..] Where {`4esn`} In 1000 In {@usn5}].``? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:#usn8]-()Assert Exists(Case When {usn2} In false Then {12} Ends With 1e1 When {``}[usn1..][{`8esn`}..] Then {usn1} Is Not Null Is Not Null End.#usn8?._usn4?.@usn6?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:@usn5)Assert None(`` In `7esn` =~#usn8 =~\"d_str\" Where 7 In 1e1 In {``})._usn4! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:usn2)Assert Exists({usn1:$`3esn` =~#usn8 =~0x0}.`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:`2esn`]-()Assert Exists(`5esn`({#usn8} Ends With _usn3 Ends With `2esn`,.9e0 =~#usn7).#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:``)Assert None(@usn6 In 9e12[..usn2][.._usn3] Where 01[`4esn`..]).#usn8? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:usn2)Assert Exists(Allshortestpaths((((#usn7 :`6esn`{usn1:`4esn` Ends With 9e12 Ends With {`5esn`},_usn4:$`5esn` Is Not Null})-[_usn4? *7]-({`7esn`:00 Is Not Null Is Not Null,_usn4:.12e12 Starts With 5.9e-12 Starts With `4esn`})-[_usn4 *..0x0{usn2:{_usn3} In $#usn8 In $12}]-(`` :`5esn`:`7esn`{`8esn`:2.9e1[Count ( * )..]})))).usn1!.#usn7.`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`8esn`)Assert Extract(`1esn` In $12 In {usn2} Where $`8esn` Is Not Null Is Not Null|2.9e1 =~Count(*) =~{123456789}).`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:usn2)Assert Extract(`8esn` In {_usn4} Ends With {0} Ends With `1esn` Where _usn4['s_str'][8.1e1]|0.12 =~2.9e1 =~9e1).`1esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:@usn6]-()Assert Exists(Any(usn1 In {#usn7} =~.12e12 =~9e0 Where usn1 Ends With 11.12e-12 Ends With 5.9e-12)._usn3!.`4esn`?.`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`2esn`)Assert Exists(Filter(usn2 In $`5esn`[{`4esn`}][{0}] Where 2.12 Is Not Null Is Not Null).usn1?.`5esn`!.@usn5)"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:usn2]->()Assert Exists((:`3esn`)-[`1esn`]->(`3esn` :`6esn`{_usn3:.12e-12 Ends With `2esn`,usn1:Null[#usn7..][9.1e-1..]})-[`3esn`?:`6esn`{@usn6:{`5esn`} Is Not Null Is Not Null,@usn6:$usn1 Contains 4.9e12 Contains $`2esn`}]->({#usn8:_usn4[$_usn4]}).`7esn`.`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:@usn6]->()Assert Exists(Single(`3esn` In 8.1e1 Contains .9e-1 Contains false Where 999 Starts With 7.0e-0 Starts With true).@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:``)Assert Exists([#usn8 In 07[..$`5esn`] Where $1000[_usn4][{@usn5}]].`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn3:#usn7]-()Assert Exists(`5esn`(Distinct {`3esn`} =~$`` =~$`8esn`,#usn7 In 07)._usn4!)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`6esn`)Assert Exists(None(@usn6 In $usn2 Contains $`3esn` Contains 6.0e0 Where {_usn3} In $#usn8 In $12).`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:@usn6)Assert ({`4esn`:0.12 In $``,usn2:.1e-1 Contains .12e-12})-[ *12{#usn8:0e0 =~{12} =~{1000}}]->(:@usn6:_usn3{@usn6:`6esn`[3.9e-1..`8esn`][12.0..0.0]}).#usn7! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`4esn`)Assert `4esn`(Distinct \"d_str\" In usn2 In $`7esn`).#usn7.#usn7!.#usn8! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`3esn`)Assert [`1esn` In $12 In {usn2} Where 12e-12 Starts With $`7esn`].`8esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:#usn7)Assert Exists(None(`6esn` In 010[{`1esn`}..] Where {`3esn`} Is Not Null Is Not Null).@usn6.``!)"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn7:`7esn`]-()Assert Exists(Filter(`2esn` In $@usn5 Is Not Null Is Not Null Where $@usn6[``..][3.9e-1..]).#usn7?.#usn8?._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`3esn`:#usn8]-()Assert Exists(All(#usn7 In .0e-0 In 12 Where `8esn`[.12e12..])._usn4._usn4!.`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On()<-[`7esn`:`3esn`]-()Assert Exists(Reduce(`7esn`={1000} Starts With 10.12e12 Starts With .0e-0,`1esn` In $12 In {usn2}|{`4esn`} In 1000 In {@usn5}).`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On()<-[`2esn`:`6esn`]-()Assert Exists((`5esn` {`4esn`:{`3esn`}[_usn4][2.9e1]})<-[?:`8esn`|:#usn8{`5esn`:$1000 Starts With {@usn6} Starts With $@usn5}]-(:`6esn`{@usn5:{#usn8}[..@usn5],`6esn`:0.0[$`4esn`]})<-[?:@usn5|:#usn7 *0]->(_usn3 {`2esn`:5.9e-12[0x0..]}).@usn5.`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`3esn`:usn1]-()Assert Exists(Shortestpath((`1esn` {@usn5:$12 Is Null,@usn6:.1e1 Ends With #usn7 Ends With {#usn7}})<-[?{@usn5:@usn6[999][1000]}]-(:usn1{#usn8:2.9e1[{`2esn`}]})).`3esn`.`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:_usn3)Assert Allshortestpaths(({`6esn`:{`5esn`}[01234567..][5.9e-12..]})-[`2esn` *1000..{`2esn`:{@usn6} In 9e12}]->(:usn1{usn1:true In 0.0,@usn5:{`1esn`} Is Null})<-[``:usn1|usn2{`7esn`:{`8esn`}[..999][.._usn3],usn2:Count ( * )[_usn4..]}]->(`7esn` {@usn5:0.12 =~`6esn` =~.9e-1})).#usn7 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:usn2)Assert {#usn8:12e12 Is Not Null Is Not Null,`8esn`:9e-1[0.0..]}.#usn7?.`7esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`8esn`)Assert [usn1 In $@usn6 Is Null Is Null Where _usn3 =~{7} =~123.654|`3esn` =~$#usn7].`8esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:@usn5]-()Assert Exists(Allshortestpaths(((_usn3 :`7esn`{_usn4:$12[$`6esn`..][01..]})-[`4esn`{_usn3:010[..9e-1][..0X7]}]-(:`7esn`{#usn7:$999 =~false =~{`8esn`}})-[{`6esn`:\"d_str\" Contains {@usn6},`4esn`:12e12 Contains {0}}]-(`7esn` :@usn6:_usn3)))._usn4)"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:usn1]->()Assert Exists(`3esn`(Distinct 0 Starts With `7esn` Starts With 9e0,$`4esn` Is Null Is Null).`3esn`!.#usn7?.#usn7?)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`7esn`)Assert [`8esn` In {_usn4} Ends With {0} Ends With `1esn` Where .9e0 =~#usn7|7 In 1e1 In {``}].`2esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn5:`8esn`]->()Assert Exists(Extract(usn2 In $`5esn`[{`4esn`}][{0}] Where {0}[.1e-1..][_usn4..]|.0e0[usn1..7.0e-0][$`5esn`...9e-12]).#usn8?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:``)Assert usn1(Distinct `4esn`[12.0..][9.1e-1..],{`6esn`} Starts With @usn6).usn2? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:_usn4)Assert Reduce(`2esn`={1000}[..`5esn`][..9e12],usn1 In $@usn6 Is Null Is Null|$@usn5 Is Not Null Is Not Null).`7esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:``)Assert Exists({`4esn`:{`3esn`}[_usn4][2.9e1]}.`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`7esn`)Assert Exists((`3esn` {`4esn`:$#usn7[01..2.12][2.12..3.9e-1]})<-[?:`4esn`|:`2esn` *01]-(`` :``).`1esn`.@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On()-[``:`4esn`]->()Assert Exists(None(usn1 In $@usn6 Is Null Is Null Where $999 =~false =~{`8esn`}).`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:usn1)Assert Exists(Reduce(`4esn`=9e12 Ends With \"d_str\" Ends With 0X7,_usn3 In `8esn`[_usn4]|0xabc Starts With {`3esn`} Starts With {``}).`4esn`.``!)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`5esn`)Assert Case When false Starts With 0 Starts With 2.9e1 Then false[..usn2][..999] Else `1esn`[{usn1}..] End.#usn7.`6esn`!.`6esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`8esn`)Assert Exists(None(#usn8 In 07[..$`5esn`] Where $usn2[..$999][..#usn8]).`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:usn1)Assert Exists((_usn4 :`1esn`:``)<-[_usn4:`2esn`|`5esn` *7{`2esn`:999 Ends With {#usn8},#usn8:.12e12 Is Not Null}]-(@usn5 :#usn7:`8esn`{`1esn`:0e-0[4.9e12..00][0X0123456789ABCDEF..{_usn4}],@usn6:999 Starts With 7.0e-0 Starts With true}).#usn7!.usn1?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`8esn`)Assert [usn2 In $_usn3[0X0123456789ABCDEF..][0x0..] Where 01[`6esn`..][0e0..]|$1000 Starts With {@usn6} Starts With $@usn5].`7esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:_usn4)Assert [@usn6 In $usn2 Contains $`3esn` Contains 6.0e0 Where .12e12 Ends With 07 Ends With 3.9e-1|7 Is Null Is Null].`2esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn6:_usn3]-()Assert Exists(Case When {0}[`4esn`..{`8esn`}] Then \"d_str\" In usn2 In $`7esn` When 12e12[usn2..$`6esn`] Then usn1 Ends With 11.12e-12 Ends With 5.9e-12 End.`1esn`?.``.`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn5:`3esn`]-()Assert Exists(All(usn1 In $@usn6 Is Null Is Null Where 9e0[`3esn`][0]).`8esn`.``!)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:``]-()Assert Exists(Case When `4esn` =~010 Then {7}[$@usn5..123456789][1e1..1.9e0] Else 1e-1 =~$`7esn` =~1e1 End.`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:usn1)Assert Exists(#usn7(Distinct usn2[12e-12..{`8esn`}][.12e12..{123456789}]).usn1.`5esn`)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:#usn7)Assert Exists(Allshortestpaths((`2esn` :`2esn`:`4esn`{#usn7:0 Starts With `7esn` Starts With 9e0})).#usn7)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`8esn`)Assert Reduce(``=_usn3[{#usn7}],usn1 In $@usn6 Is Null Is Null|Count ( * )[`5esn`..\"d_str\"][01234567..{1000}]).#usn7?.@usn5.`6esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:`8esn`]->()Assert Exists(Case {`5esn`}[.1e-1..1e-1][999..{_usn3}] When 7.0e-0 Is Not Null Then {`8esn`}[@usn5][$`2esn`] End.usn1)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`6esn`)Assert Exists([usn1 In $@usn6 Is Null Is Null Where 0X0123456789ABCDEF Ends With {1000}].``!.usn2.usn1?)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:#usn7)Assert Exists(Extract(`6esn` In 010[{`1esn`}..] Where {1000}[0..]|1e-1 Contains 0.0)._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:_usn3)Assert All(#usn7 In .0e-0 In 12 Where 0xabc[..{usn1}][..\"d_str\"]).`3esn`?.#usn7 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:``)Assert ({usn1:12[..$`5esn`]})-[?{#usn7:12e12,`7esn`:$#usn8[$0..`3esn`][1e-1..$7]}]->(_usn3 :#usn7:`8esn`)._usn3.`2esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn6:usn1]-()Assert Exists(None(@usn6 In $usn2 Contains $`3esn` Contains 6.0e0 Where .9e0 In 8.1e1).`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`3esn`)Assert Exists(Any(`2esn` In $@usn5 Is Not Null Is Not Null Where usn1 Ends With 11.12e-12 Ends With 5.9e-12).usn1?)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:`3esn`]->()Assert Exists(None(usn1 In {#usn7} =~.12e12 =~9e0 Where {#usn7} =~$@usn6 =~$7)._usn4?)"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:``]->()Assert Exists(Filter(#usn7 In .0e-0 In 12 Where $123456789).`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(``:`6esn`)Assert Exists({@usn6:9e12 Ends With 9e-1 Ends With 9e1}.#usn7)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`7esn`)Assert Exists(`5esn`(Distinct 00[{1000}],false =~{`8esn`} =~00).`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:@usn5)Assert (#usn8 )<-[`3esn`?:`6esn`{@usn6:{`5esn`} Is Not Null Is Not Null,@usn6:$usn1 Contains 4.9e12 Contains $`2esn`}]->(_usn3 :_usn3{@usn6:$999 Ends With `2esn` Ends With 12.0}).usn2 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn6:@usn5)Assert _usn3({`5esn`} Is Not Null Is Not Null,$usn1 Contains 4.9e12 Contains $`2esn`)._usn4? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`2esn`:``]->()Assert Exists([`1esn` In $12 In {usn2} Where $12 In {usn2}|9e-12 Ends With {1000}].@usn6?._usn3?.`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`3esn`)Assert Exists(Case $`3esn` =~#usn8 =~0x0 When $12 Ends With 7.0e-0 Ends With 9e-12 Then 07[..$`5esn`] End._usn4.`5esn`!.`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`7esn`)Assert (#usn7 {@usn6:9e12 Ends With 9e-1 Ends With 9e1})<-[?:#usn8|:``]-(`` {#usn7:{_usn3}[{0}...9e-1][9e-1...0e0]}).usn1!._usn3? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`4esn`)Assert Exists(Case 0.12 Is Not Null When 1e-1 =~$`7esn` =~1e1 Then $`6esn` =~$#usn7 =~$`4esn` End._usn4)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`5esn`)Assert None(usn2 In $`5esn`[{`4esn`}][{0}] Where .1e-1[2.9e1..][$`7esn`..]).usn2?.@usn5?.#usn8! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`7esn`)Assert Exists(Allshortestpaths(((`4esn` :usn2{_usn4:123.654[01..][Count(*)..],`8esn`:12e12})<-[?:usn2 *010..0{`4esn`:9e-12[$7..]}]-({#usn7:12e12[.9e12..07]})<-[ *999..123456789{`8esn`:{``}[usn1..][{`8esn`}..]}]-(:`4esn`:usn2{``:$usn1 Ends With {`2esn`} Ends With $usn1}))).`8esn`.`7esn`?.`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`7esn`)Assert Exists((usn2 :`5esn`:`7esn`)<-[$#usn8]->(:`7esn`{`7esn`:{`3esn`} =~$@usn5 =~`2esn`,#usn7:.9e0[$#usn8][Count ( * )]})<-[ *999..123456789{`8esn`:{``}[usn1..][{`8esn`}..]}]-(#usn7 {`4esn`:0X0123456789ABCDEF In false,`2esn`:0X7[#usn7..][$@usn5..]})._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`5esn`)Assert Extract(usn2 In $_usn3[0X0123456789ABCDEF..][0x0..] Where {`6esn`} =~2.12 =~123.654|`6esn` Ends With 1e1 Ends With $#usn7).@usn5!.``! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:_usn3]->()Assert Exists({@usn5:`8esn`[.12e12..],usn1:$#usn8[$0..`3esn`][1e-1..$7]}.`3esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`6esn`)Assert Reduce(`4esn`=`3esn` Is Null,`1esn` In $12 In {usn2}|1.9e0[..0][.._usn3]).#usn8! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:_usn3)Assert Case Count(*)[Count ( * )][{0}] When @usn6[true..] Then {0} Is Not Null Is Not Null Else 12.0[..Count ( * )][..@usn6] End.`6esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:@usn5]-()Assert Exists(Single(`1esn` In $12 In {usn2} Where {0} Ends With 0Xa).#usn7.``)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:_usn4)Assert Reduce(``=$`4esn` Contains `4esn` Contains .0e-0,usn2 In .12e-12 Ends With `2esn`|.12e-12 Ends With `2esn`).`1esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`4esn`)Assert Extract(`` In `7esn` =~#usn8 =~\"d_str\" Where @usn6 Starts With #usn7|6.0e0[{`2esn`}..$``]).`4esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:`3esn`]-()Assert Exists({@usn6:$999 Ends With `2esn` Ends With 12.0}.``)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:`6esn`]-()Assert Exists([usn2 In .12e-12 Ends With `2esn` Where `7esn`[1.9e0..5.9e-12][9e0..@usn5]|0 In 2.9e1 In 7].@usn6?.#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:usn2)Assert Filter(`2esn` In $@usn5 Is Not Null Is Not Null Where Null[$`3esn`..][`1esn`..]).`3esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`2esn`)Assert `5esn`(`3esn` Starts With 9.1e-1 Starts With .9e-1,.12e-12 Ends With `2esn`)._usn3?.`6esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`4esn`)Assert Case When usn2[..$0][..`3esn`] Then 0.12[Count ( * )..Count ( * )][$999..`5esn`] When 9e0[{7}...0e-0][Null..@usn5] Then 01 =~07 Else 8.1e1[usn2..{1000}][0X7..9e12] End.`1esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`2esn`)Assert Exists((`3esn` :`2esn`:`4esn`)-[`3esn`?:`1esn`|:`1esn`]-(@usn6 :`4esn`:usn2).`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:#usn8)Assert Exists((`2esn` :`4esn`:usn2{`7esn`:$_usn4 =~$#usn8 =~{`4esn`}})-[``:usn1|usn2{`7esn`:{`8esn`}[..999][.._usn3],usn2:Count ( * )[_usn4..]}]-(@usn5 :`3esn`{`8esn`:0x0 Ends With #usn8 Ends With .9e-1})-[? *1000..{`1esn`:{`1esn`} Is Null}]->(`1esn` :usn2{`8esn`:12.0[...0e0]}).`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:@usn5)Assert Extract(`6esn` In 010[{`1esn`}..] Where `6esn`[0X0123456789ABCDEF..][`8esn`..]|7.0e-0[$`6esn`..]).usn2 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:`8esn`]->()Assert Exists((_usn4 {`3esn`:.0e-0 In 12})-[`4esn`{_usn3:010[..9e-1][..0X7]}]-(@usn5 :`8esn`{12})-[_usn3:`6esn`]->(:`4esn`:usn2{``:$usn1 Ends With {`2esn`} Ends With $usn1}).@usn5)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:usn2)Assert Exists(Allshortestpaths(((`8esn` {`4esn`:$@usn6[.1e-1][9e12],`6esn`:Null[#usn7..][9.1e-1..]})-[`3esn`? *..07]->(`` :`5esn`:`7esn`{`8esn`:2.9e1[Count ( * )..]}))).@usn5?)"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn3:#usn7]-()Assert Exists((`3esn` :#usn7:`8esn`{`4esn`:$`5esn`[$_usn3][$12],#usn8:`8esn`[.12e12..]})<-[*..{`4esn`:{1000} Starts With 10.12e12 Starts With .0e-0,`2esn`:$#usn7 Ends With {`5esn`} Ends With 01}]-({`3esn`:{`6esn`}[@usn5..{@usn6}],_usn3:@usn6 Starts With #usn7})._usn3.`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:_usn4)Assert Filter(`2esn` In $@usn5 Is Not Null Is Not Null Where `6esn`[3.9e-1..`8esn`][12.0..0.0]).usn1 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:_usn4]-()Assert Exists(Case When {1000} =~4.9e12 =~9e1 Then $12 Is Not Null Is Not Null When .0e-0[..01234567] Then $#usn7 Starts With $123456789 End.`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:_usn4]-()Assert Exists(Any(#usn7 In .0e-0 In 12 Where $123456789).#usn8?.`7esn`?.#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:`6esn`]-()Assert Exists(Allshortestpaths(((_usn3 :`1esn`:``)<-[@usn5?:`6esn` *..00{`3esn`:Count(*)[$7],_usn3:$#usn7[01..2.12][2.12..3.9e-1]}]->($12)-[_usn3?:@usn5|:#usn7]->(`7esn` {``:Null,_usn4:10.12e12 Starts With $`4esn` Starts With 0e0}))).usn2!.`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:`8esn`]-()Assert Exists(Extract(`` In `7esn` =~#usn8 =~\"d_str\" Where 1.9e0[.12e-12][9e-12]).usn2?.`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:``)Assert Exists(``(Distinct {usn1}[7.0e-0..][3.9e-1..],2.9e1 In {``}).`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:usn2)Assert Shortestpath((`8esn` {`4esn`:$@usn6[.1e-1][9e12],`6esn`:Null[#usn7..][9.1e-1..]})<-[{`3esn`:Count ( * )[_usn4..]}]->(_usn3 :_usn4:`2esn`{usn1:`3esn` Contains `2esn` Contains {_usn4},#usn8:010[{`1esn`}..]})<-[?:`5esn`]-(`4esn` {`3esn`:Count(*)[$7],_usn3:$#usn7[01..2.12][2.12..3.9e-1]})).usn1! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:@usn5)Assert Extract(#usn8 In 07[..$`5esn`] Where 1e1[$_usn3]|'s_str' =~$usn2 =~{7}).``? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`6esn`)Assert Exists(All(#usn7 In .0e-0 In 12 Where 11.12e-12 Contains usn1).@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:usn2)Assert Exists(Case When .9e-12[.12e12..][0Xa..] Then Null[$`3esn`..][`1esn`..] End.`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:@usn6)Assert Exists(#usn7(_usn4 Ends With {`8esn`} Ends With usn2).#usn7?.`5esn`!._usn3!)"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn7:@usn5]-()Assert Exists(Reduce(`6esn`=2.9e1 Ends With `5esn` Ends With 1000,`3esn` In 8.1e1 Contains .9e-1 Contains false|9e12 Ends With \"d_str\" Ends With 0X7).`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`7esn`)Assert Exists(None(`8esn` In {_usn4} Ends With {0} Ends With `1esn`).`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`5esn`)Assert Reduce(_usn3=\"d_str\" Starts With ``,`8esn` In {usn1}[7.0e-0..][3.9e-1..]|$usn2 Ends With 00 Ends With 9e12).#usn7? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:@usn6)Assert Exists(Reduce(usn2=12e12[{`4esn`}..`4esn`][999..{@usn6}],`1esn` In $12 In {usn2}|$`8esn`).``?)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:#usn8)Assert Exists(``($usn1[..$999][..0e0]).#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`2esn`)Assert {`5esn`:`1esn` In 010 In 1e-1}._usn4! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:@usn6)Assert Exists(({`4esn`:#usn8[\"d_str\"..usn2],`1esn`:12.0[..Count ( * )][..@usn6]})<-[:_usn4|:`1esn`{`7esn`:{1000}[`2esn`...0e-0][9e-1..0X7],`5esn`:$`5esn` =~Count(*) =~1.9e0}]-(_usn3 ).`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:#usn8)Assert Case {#usn7}[.12e-12] When $`4esn`[$@usn6...12e12] Then .12e-12[@usn6..'s_str'] Else .12e-12 Starts With .12e-12 End.`5esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn6:_usn3)Assert (@usn5 {`8esn`:.1e1 Ends With #usn7 Ends With {#usn7}})<-[#usn8?:`7esn`|usn1*..$`1esn`]->(:#usn7:`8esn`{``:_usn4 Ends With {`8esn`} Ends With usn2,_usn3:$@usn6 Is Null Is Null})<-[`3esn`?*{`7esn`:.9e12 Contains 0 Contains $0}]->(:@usn5{usn1:`6esn`[0X0123456789ABCDEF..][`8esn`..],@usn5:{`8esn`}[9e12..][{_usn4}..]}).`5esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`8esn`)Assert Filter(usn2 In $`5esn`[{`4esn`}][{0}] Where $usn1[0e0...9e-12]).``? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[usn1:#usn8]-()Assert Exists($999.`1esn`?.`8esn`.@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:_usn4)Assert Exists(`2esn`(Distinct \"d_str\" Starts With $`7esn` Starts With 999).#usn8?)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn2:#usn8]-()Assert Exists(Reduce(`7esn`=$@usn5[``..],`7esn` In 0.12 Is Not Null|.1e-1 Starts With @usn6 Starts With _usn3).`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`7esn`)Assert Any(`3esn` In 8.1e1 Contains .9e-1 Contains false Where 07 Ends With {1000} Ends With 01234567).usn2? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:`7esn`]-()Assert Exists(Single(`1esn` In $12 In {usn2} Where {_usn4} In 0X7 In 0e0).`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:usn1)Assert Exists(``(Distinct $1000 Is Null).#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On(``:#usn7)Assert Extract(usn1 In {#usn7} =~.12e12 =~9e0 Where {1000} Starts With 10.12e12 Starts With .0e-0).`8esn`!.`5esn`?.`5esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:`7esn`]-()Assert Exists(Reduce(@usn6='s_str' =~$usn2 =~{7},usn2 In .12e-12 Ends With `2esn`|$`5esn`[$_usn3][$12])._usn3?)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:#usn7]->()Assert Exists((@usn6 :@usn6:_usn3)-[_usn4? *..0x0{`1esn`:2.12 Is Not Null Is Not Null,`6esn`:07[{@usn5}..]}]->(:`1esn`:``{_usn4:123.654[01..][Count(*)..],`8esn`:12e12}).`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:#usn7)Assert Exists(Allshortestpaths((((usn2 :`2esn`:`4esn`{`6esn`:Count(*)[$7]})<-[_usn3:@usn5|:#usn7 *..07]-({`5esn`:{123456789} Contains $0,_usn4:2.9e1 Ends With `5esn` Ends With 1000})<-[?:_usn3{#usn7:3.9e-1[..$1000][..0.12]}]-(_usn3 {#usn8:12e12 Is Not Null Is Not Null,`8esn`:9e-1[0.0..]})))).`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn7:_usn4]-()Assert Exists(`4esn`(6.0e0 =~12.0 =~9e1).#usn8?)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`7esn`)Assert (:#usn8:@usn6{usn2:{_usn3} In $#usn8 In $12})-[:`5esn` *0xabc..12{``:Count(*) Starts With {usn2} Starts With `2esn`,`1esn`:12e12[{`4esn`}..`4esn`][999..{@usn6}]}]->(_usn3 :``)<-[usn2?:`2esn`|`5esn`{``:{#usn7} =~$@usn6 =~$7}]->({`1esn`:`3esn` =~$#usn7,_usn3:@usn6[999][1000]})._usn4? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:#usn7)Assert Single(usn2 In .12e-12 Ends With `2esn` Where $999 Ends With `2esn` Ends With 12.0).`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn7:_usn4]-()Assert Exists(Filter(usn2 In .12e-12 Ends With `2esn` Where $_usn3[0X0123456789ABCDEF..][0x0..]).`2esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`6esn`)Assert [usn1 In \"d_str\" Contains {@usn6} Where $`8esn` Is Null Is Null].`1esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`5esn`)Assert Exists(Reduce(@usn5=0[10.12e12],usn2 In $`5esn`[{`4esn`}][{0}]|$12 Is Null Is Null).#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:_usn3)Assert Exists(Reduce(`1esn`={12},`2esn` In $@usn5 Is Not Null Is Not Null|010[..9e-1][..0X7])._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`3esn`)Assert count(usn1 =~0Xa =~0).`5esn`!.`1esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[``:@usn6]->()Assert Exists(Case 2.9e1 Ends With `5esn` Ends With 1000 When {`4esn`} Ends With Count(*) Then {0} In {`1esn`} Else _usn4 Ends With {`8esn`} Ends With usn2 End._usn4!.#usn7!.usn2!)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:usn2)Assert Exists(Case When $`5esn` =~Count(*) =~1.9e0 Then .1e-1 Starts With @usn6 Starts With _usn3 When $_usn3[0X0123456789ABCDEF..][0x0..] Then #usn8 =~{@usn5} Else 1e1[$_usn3] End.#usn8.@usn5)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`3esn`)Assert Exists(Case 0[10.12e12] When $7[.1e-1..{@usn6}][$7..{`1esn`}] Then 0xabc[0Xa..] Else 0 In 2.9e1 In 7 End.@usn5!.`2esn`!.@usn5)"),
    octest_legacy:ct_string("Drop Constraint On(``:_usn3)Assert {`7esn`:`3esn` Starts With 9.1e-1 Starts With .9e-1}.@usn6? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn4:``]-()Assert Exists(Any(usn2 In .12e-12 Ends With `2esn` Where {usn1}[`7esn`..Count(*)]).usn1.usn2!.usn1?)"),
    octest_legacy:ct_string("Create Constraint On()-[``:#usn8]-()Assert Exists(None(`5esn` In {123456789} Starts With $_usn4 Starts With 0x0 Where $``[1.0..][_usn3..])._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:@usn6)Assert Exists(Case When {`5esn`}[01234567..][5.9e-12..] Then 01 Contains 9e-12 Contains $7 When $`4esn` In {999} Then 010[{`1esn`}..] End.`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`4esn`)Assert Exists([usn1 In {#usn7} =~.12e12 =~9e0 Where usn1 Ends With 11.12e-12 Ends With 5.9e-12]._usn3?)"),
    octest_legacy:ct_string("Create Constraint On(``:_usn4)Assert (`5esn` )<-[?:@usn5|:#usn7 *0]-(`7esn` :`5esn`:`7esn`).``? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`4esn`)Assert Exists(Reduce(`8esn`=123456789[_usn4..`1esn`][$`6esn`..{@usn6}],@usn6 In $usn2 Contains $`3esn` Contains 6.0e0|.12e12[..7]).usn1!)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:#usn7)Assert All(@usn6 In 9e12[..usn2][.._usn3] Where {`8esn`}[@usn5][$`2esn`]).#usn8?.#usn8?.`2esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:usn2)Assert Exists(Extract(`2esn` In $@usn5 Is Not Null Is Not Null Where Null[$`3esn`..][`1esn`..]|Count ( * )[_usn4..]).`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:_usn3)Assert Exists([#usn8 In 07[..$`5esn`] Where .9e0[07..][4.9e12..]].usn2?.`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`2esn`)Assert Exists(All(#usn7 In .0e-0 In 12 Where 123.654[01..][Count(*)..]).`1esn`!.usn1?._usn4)"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:`7esn`]-()Assert Exists({#usn8:@usn6 Ends With $`2esn` Ends With 1.0,`3esn`:$1000[_usn4][{@usn5}]}.`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:#usn8)Assert ({`6esn`:{`5esn`}[01234567..][5.9e-12..]})<-[usn1? *12{@usn6:{_usn4}[{`6esn`}],#usn7:.1e1[{@usn6}][true]}]->({usn1:$999 Ends With `2esn` Ends With 12.0,_usn3:`1esn`[{usn1}..]})<-[?:_usn3{usn2:010[{`1esn`}..],`1esn`:`5esn` Contains 0 Contains $12}]->(:`3esn`).`3esn`!.`1esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`2esn`)Assert _usn3({`5esn`} Is Not Null Is Not Null,$usn1 Contains 4.9e12 Contains $`2esn`).usn2? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`5esn`:_usn4]-()Assert Exists({_usn4:9e-12[010..{#usn7}][{123456789}..7]}.usn1?)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn2:usn1]-()Assert Exists(All(@usn6 In $usn2 Contains $`3esn` Contains 6.0e0 Where Count(*)[Null..][01234567..]).`6esn`.#usn7?)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`3esn`)Assert Exists(Filter(usn1 In {#usn7} =~.12e12 =~9e0 Where ``[$#usn7]).``?)"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:usn2]->()Assert Exists(All(@usn6 In 9e12[..usn2][.._usn3]).#usn8)"),
    octest_legacy:ct_string("Drop Constraint On(``:`5esn`)Assert #usn8(Distinct 9e0[{7}...0e-0][Null..@usn5],1.0 Is Not Null).`7esn`!.`3esn`!.@usn5! Is Unique"),
    octest_legacy:ct_string("Create Index On:`4esn`(`5esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn5:_usn3]-()Assert Exists({`1esn`:999 Contains {999} Contains 12}.`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`6esn`)Assert All(usn2 In $_usn3[0X0123456789ABCDEF..][0x0..])._usn4.`3esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:@usn6]-()Assert Exists(Allshortestpaths((:`5esn`:`7esn`)).`2esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`2esn`)Assert Exists(Extract(_usn3 In `8esn`[_usn4] Where $_usn3[usn2..][usn1..]|$999 =~0e0 =~0X7).`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn3:`8esn`]-()Assert Exists(Case When .9e-1 Is Not Null Is Not Null Then $12[$`6esn`..][01..] When {`3esn`}[01234567][{#usn7}] Then 12[4.9e12..] Else {`8esn`}[9e12..][{_usn4}..] End._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:``)Assert Exists((usn2 {``:`7esn`[1.9e0..5.9e-12][9e0..@usn5]})<-[:`2esn`|`5esn`{`8esn`:$`4esn`[$@usn6...12e12]}]-(usn1 {@usn6:{_usn4}[{`6esn`}],#usn7:.1e1[{@usn6}][true]})<-[@usn5:usn1|usn2{`8esn`:{usn2} Is Not Null Is Not Null}]-(`2esn` :`2esn`:`4esn`{#usn7:0 Starts With `7esn` Starts With 9e0}).#usn8)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:#usn8)Assert Exists(Allshortestpaths((:usn1$1000)).`1esn`?.@usn5?.usn1)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:_usn3)Assert Exists(Extract(@usn6 In $usn2 Contains $`3esn` Contains 6.0e0 Where 0X0123456789ABCDEF Ends With {1000})._usn4?)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:_usn4)Assert Any(_usn3 In `8esn`[_usn4] Where 1e1 =~{@usn5} =~`7esn`).`8esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:usn1)Assert Reduce(`5esn`=$999 Ends With `2esn` Ends With 12.0,_usn3 In `8esn`[_usn4]|_usn3 =~{7} =~123.654).`2esn`.`6esn`!.``? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:``)Assert Exists(Any(usn1 In {#usn7} =~.12e12 =~9e0 Where ``[$#usn7]).`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[``:usn2]-()Assert Exists((`4esn` :`8esn`{12})-[?:`1esn`|:`1esn` *999..123456789]-(usn2 :@usn6:_usn3).`1esn`.`5esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn2:`1esn`]-()Assert Exists(Any(`` In `7esn` =~#usn8 =~\"d_str\" Where `6esn` Ends With 1e1 Ends With $#usn7).`8esn`!.`2esn`!.`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`7esn`)Assert Exists(Single(usn2 In $_usn3[0X0123456789ABCDEF..][0x0..] Where false[..usn2][..999]).`5esn`.`1esn`!.`7esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`2esn`)Assert Case 0xabc[..{usn1}][..\"d_str\"] When $1000[..0e-0][..010] Then 999 Starts With 7.0e-0 Starts With true When {123456789} Starts With $_usn4 Starts With 0x0 Then .9e-12[usn2] End.`4esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`3esn`:_usn4]-()Assert Exists((`3esn` {#usn8:$`6esn` Starts With 0.0,usn1:$`8esn`[0x0][.9e0]})<-[?{`1esn`:{123456789}[...9e-1][..1.0],#usn8:$`4esn` Ends With {999}}]->({`2esn`:$`6esn` Starts With 0.0})<-[?:`5esn`{_usn4:$12[$`6esn`..][01..]}]->(:`5esn`:`7esn`{`4esn`:2.9e1[{`2esn`}]})._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:``)Assert Exists(Case When usn2[..$0][..`3esn`] Then $0 Contains $7 End.@usn5!.`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`5esn`)Assert Exists((#usn7 {usn1:2.12[{12}]})-[_usn4? *0Xa..12{`4esn`:{`3esn`} =~$`` =~$`8esn`,@usn6:Null[$`3esn`..][`1esn`..]}]-({usn1:`4esn` Ends With 9e12 Ends With {`5esn`},_usn4:$`5esn` Is Not Null})-[#usn8:`5esn`]-({`6esn`:12[@usn6][{`2esn`}]}).`6esn`!.``?.`5esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:#usn8]-()Assert Exists((:usn1{#usn8:$`8esn` Is Not Null Is Not Null,`5esn`:3.9e-1 Starts With .9e0 Starts With {#usn7}})-[:#usn8|:`` *..07{@usn5:01234567[\"d_str\"..][$`4esn`..],`6esn`:$usn1 Ends With {`2esn`} Ends With $usn1}]-(`3esn` :`2esn`:`4esn`{`2esn`:{usn1} Is Not Null,`8esn`:999[..$@usn5][..``]})<-[? *0X7..0Xa]->(`1esn` ).`6esn`?.`3esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[``:usn1]-()Assert Exists(Single(`7esn` In 0.12 Is Not Null).#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On()-[``:`6esn`]->()Assert Exists(Any(usn2 In $_usn3[0X0123456789ABCDEF..][0x0..] Where $`` Starts With $`4esn` Starts With `3esn`).`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`4esn`)Assert Exists(Any(#usn8 In 07[..$`5esn`] Where 01234567 Ends With .0e0 Ends With 12e12).usn2)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`8esn`)Assert Filter(`8esn` In {usn1}[7.0e-0..][3.9e-1..]).`4esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:@usn5)Assert Exists(Filter(#usn7 In .0e-0 In 12 Where {`6esn`}[6.0e0..9e0][.9e1..12e12])._usn3!)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:usn2)Assert Exists((`4esn` :``{``:$`6esn` =~$#usn7 =~$`4esn`,_usn3:{usn2} In false})-[{`2esn`:9e1[$``.._usn4][999..`3esn`],usn1:0.0[`7esn`]}]->(#usn8 :`5esn`:`7esn`{usn2})<-[?:`5esn`]-(`4esn` {`3esn`:Count(*)[$7],_usn3:$#usn7[01..2.12][2.12..3.9e-1]}).`5esn`!.@usn6.`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`3esn`)Assert Exists(Reduce(`8esn`=12e12[{`4esn`}..`4esn`][999..{@usn6}],usn1 In $@usn6 Is Null Is Null|$`5esn` =~Count(*) =~1.9e0).``!.`2esn`?.`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:usn2)Assert Exists(Reduce(#usn7=Count(*)[Count ( * )][{0}],@usn6 In $usn2 Contains $`3esn` Contains 6.0e0|{`2esn`} Contains 0xabc)._usn3?)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:@usn5)Assert Exists(_usn3(Distinct 999 Ends With {#usn8}).usn1!)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:`2esn`]->()Assert Exists({_usn3:{`8esn`} Is Not Null Is Not Null,`1esn`:_usn4 Is Not Null Is Not Null}.@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn3:`8esn`]-()Assert Exists(count().usn1?.@usn6!)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:@usn5)Assert Case 010[...12e-12] When .9e1[$`1esn`..][$``..] Then Count ( * ) Starts With 0.12 End.`8esn`!.#usn8 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn5:_usn3]-()Assert Exists(Case When 1000[{`1esn`}..][$`3esn`..] Then {`4esn`}[00..] Else {`5esn`}[.1e-1..1e-1][999..{_usn3}] End.`8esn`!.@usn6!.usn2)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`4esn`)Assert None(`2esn` In $@usn5 Is Not Null Is Not Null Where `6esn`[3.9e-1..`8esn`][12.0..0.0]).`7esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`5esn`)Assert Exists([@usn6 In $usn2 Contains $`3esn` Contains 6.0e0 Where {`4esn`} Ends With Count(*)|$0 Ends With $usn1 Ends With {``}].`7esn`?.``!.`3esn`)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:#usn8)Assert Exists(count(Count ( * )[`5esn`..\"d_str\"][01234567..{1000}],{`4esn`} In 1000 In {@usn5}).``?.`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`5esn`)Assert Exists(Allshortestpaths(((`8esn` :`8esn`)-[#usn7:@usn6|:`4esn`]->(:`6esn`{#usn7:{`6esn`} Starts With @usn6,`7esn`:{7}[0x0][1e1]})-[`8esn`*]-(`7esn` :``{usn2:$7}))).`2esn`!._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:#usn8)Assert Any(`` In `7esn` =~#usn8 =~\"d_str\" Where `6esn` Ends With 1e1 Ends With $#usn7)._usn3 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:#usn7)Assert Case .12e12 Is Not Null When {1000} =~4.9e12 =~9e1 Then `3esn` =~$#usn7 When 12[..$`5esn`] Then usn1 =~0Xa =~0 Else 0e-0[{12}] End.`7esn`!.`8esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:``)Assert Any(@usn6 In $usn2 Contains $`3esn` Contains 6.0e0 Where 0[10.12e12]).usn2.usn1?.`8esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`3esn`)Assert Exists([`6esn` In 010[{`1esn`}..] Where .1e-1[..$_usn3][..0]].@usn6?.`1esn`!.`5esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:_usn3]->()Assert Exists(Any(usn1 In \"d_str\" Contains {@usn6} Where $`` =~.1e-1).`3esn`?.#usn7!)"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:`5esn`]-()Assert Exists(Reduce(@usn5=.9e1 In {#usn7} In .9e-12,`2esn` In $@usn5 Is Not Null Is Not Null|$usn1[9e1][{999}]).usn1!)"),
    octest_legacy:ct_string("Create Index On:`7esn`(`5esn`)"),
    octest_legacy:ct_string("Create Constraint On(``:_usn4)Assert Exists(Case When 9e12 Is Null Is Null Then \"d_str\" Is Not Null Is Not Null When {`3esn`} Is Not Null Is Not Null Then {``} Is Null Is Null End.usn1?.`2esn`.`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn4:`1esn`]-()Assert Exists((#usn7 {usn2:0X7[#usn7..][$@usn5..]})<-[`7esn`?]-(:_usn3{@usn5:`2esn`[`7esn`][1000]}).#usn7)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`2esn`)Assert Extract(`1esn` In $12 In {usn2}).`1esn`?.`5esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[``:`6esn`]-()Assert Exists(_usn3(0Xa In 1.0 In $@usn5,$@usn6[.1e-1][9e12]).`7esn`?.``!.@usn6?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`2esn`:`3esn`]-()Assert Exists([`7esn` In 0.12 Is Not Null Where 01234567[1000..][$`8esn`..]].@usn5?.#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:#usn7)Assert Exists({`6esn`:$_usn3[0x0][{0}]}.#usn8)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:#usn7)Assert Exists(Filter(`` In `7esn` =~#usn8 =~\"d_str\" Where `3esn` Contains `2esn` Contains {_usn4}).`8esn`!._usn3!._usn3!)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`3esn`)Assert Exists((`3esn` :`2esn`:`4esn`{`2esn`:{usn1} Is Not Null,`8esn`:999[..$@usn5][..``]})<-[ *999..123456789{`8esn`:{``}[usn1..][{`8esn`}..]}]->({_usn4:.1e1 Is Null Is Null,`5esn`:{1000}[`2esn`...0e-0][9e-1..0X7]})<-[`3esn`?:@usn5|:#usn7]->({usn1:0X7[#usn7..][$@usn5..],usn2:01 Ends With .0e0 Ends With 7.0e-0}).@usn6)"),
    octest_legacy:ct_string("Create Constraint On(usn2:_usn3)Assert Reduce(_usn3={0}[.0e-0][$`2esn`],usn2 In $_usn3[0X0123456789ABCDEF..][0x0..]|.0e-0[..``][..$7]).`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Index On:`5esn`(#usn7)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`5esn`)Assert Exists(Reduce(@usn6=999[..$@usn5][..``],usn2 In $_usn3[0X0123456789ABCDEF..][0x0..]|0.0[00..][0xabc..]).`7esn`?._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`6esn`)Assert Exists(Extract(_usn3 In `8esn`[_usn4] Where $1000 Is Null|9e-12 Ends With 9e1 Ends With 4.9e12)._usn3)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn7:`5esn`]-()Assert Exists((`4esn` {`6esn`})<-[?{@usn6:0xabc Starts With {`3esn`} Starts With {``}}]->(:`1esn`:``{`8esn`:{12} Ends With $`3esn` Ends With 0xabc})<-[?:`5esn`]-(`4esn` {`3esn`:Count(*)[$7],_usn3:$#usn7[01..2.12][2.12..3.9e-1]})._usn3.`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`2esn`)Assert Exists((_usn3 :`8esn`)-[:#usn7|:@usn5]->(`` :usn1{@usn5:7[{`4esn`}..],_usn4:999 Is Null Is Null})<-[`5esn`?{usn1:2.9e1[2.12..1.9e0]}]->(`4esn` ).usn2?)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:#usn8)Assert Case .1e-1[2.9e1..][$`7esn`..] When `2esn` Then usn2 Contains `2esn` Contains {1000} End.usn2! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[``:`4esn`]->()Assert Exists(None(usn2 In .12e-12 Ends With `2esn` Where {#usn7} Starts With .1e-1).`6esn`!.`3esn`!.`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`1esn`)Assert {_usn4:1e1 =~{@usn5} =~`7esn`}.@usn6? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:usn2)Assert Exists(`3esn`(9e12 Ends With 9e-1 Ends With 9e1).`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:@usn6]->()Assert Exists(Reduce(``={`7esn`} Is Not Null Is Not Null,usn1 In \"d_str\" Contains {@usn6}|8.1e1 Contains $@usn6).#usn8!)"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:``]-()Assert Exists(Reduce(`7esn`=$usn2 Starts With $999 Starts With .0e0,@usn6 In 9e12[..usn2][.._usn3]|$@usn6 Is Null Is Null).`8esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`3esn`)Assert Exists(Case $#usn8 =~9e1 =~{``} When {0}[.0e-0][$`2esn`] Then 0[..12][..{`8esn`}] When 7 In 1e1 In {``} Then {0}[.0e-0][$`2esn`] Else `4esn` =~010 End.`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:#usn8)Assert {#usn7:1e-1[$`4esn`]}.#usn8 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:_usn3)Assert Exists(Case When $usn1 Contains 4.9e12 Contains $`2esn` Then {usn1} Contains `4esn` Else {0} Ends With 0Xa End.@usn6!)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`2esn`)Assert [`` In `7esn` =~#usn8 =~\"d_str\" Where 3.9e-1 Starts With .9e0 Starts With {#usn7}|$usn1 =~.9e12 =~`6esn`]._usn3.usn1! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`4esn`)Assert {@usn6:0Xa In 1.0 In $@usn5,`8esn`:$1000 Starts With {@usn6} Starts With $@usn5}.@usn6? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`3esn`)Assert Any(`` In `7esn` =~#usn8 =~\"d_str\" Where 07[{@usn5}..]).#usn7 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`3esn`)Assert Exists((`8esn` {``:`6esn`[0X0123456789ABCDEF..][`8esn`..],`8esn`:$7[.1e-1..{@usn6}][$7..{`1esn`}]})<-[? *01234567..{_usn3:12.0[..Count ( * )][..@usn6]}]->(usn2 {#usn8:$12 Ends With 12.0 Ends With $`4esn`,`5esn`:9e12 Ends With \"d_str\" Ends With 0X7}).@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:@usn6)Assert {`2esn`:{`2esn`} Ends With 9e-1 Ends With .1e-1}.`4esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`2esn`)Assert Exists([`1esn` In $12 In {usn2} Where $`8esn` Is Not Null Is Not Null|8.1e1 Contains $@usn6].`8esn`.`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[``:`3esn`]-()Assert Exists(Case When .1e-1[2.9e1..][$`7esn`..] Then `4esn` Is Not Null When `4esn` =~010 Then .12e12[$usn1..][{@usn6}..] End.@usn6)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`8esn`:usn2]-()Assert Exists(Extract(@usn6 In $usn2 Contains $`3esn` Contains 6.0e0 Where {1000}[..`5esn`][..9e12]|@usn5 Ends With $`8esn` Ends With $1000).`2esn`?._usn3!)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:_usn4)Assert Exists([#usn7 In .0e-0 In 12 Where `1esn` In 6.0e0 In 12|9e-1 Contains 3.9e-1].`3esn`!.`1esn`._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:`1esn`]->()Assert Exists(#usn8(Distinct `6esn`[3.9e-1..`8esn`][12.0..0.0],@usn5 In Null).usn2.usn1?.@usn5!)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`3esn`)Assert Exists(Extract(`8esn` In {usn1}[7.0e-0..][3.9e-1..] Where 01 =~07).`8esn`.`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`6esn`)Assert `1esn`(Null[$`3esn`..][`1esn`..],{`5esn`}[.1e-1..1e-1][999..{_usn3}]).`4esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`8esn`)Assert Exists(Filter(`` In `7esn` =~#usn8 =~\"d_str\" Where `1esn`[Null][{@usn6}]).`4esn`!.#usn8)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:`4esn`]-()Assert Exists(All(usn2 In $_usn3[0X0123456789ABCDEF..][0x0..] Where true[1.9e0..]).`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:#usn7]-()Assert Exists({#usn8:2.9e1[2.12..1.9e0]}.usn2?)"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn8:_usn4]-()Assert Exists(Reduce(`2esn`={1000}[..{usn1}][..1e-1],_usn3 In `8esn`[_usn4]|Count(*)[$7]).usn1!._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:@usn6)Assert Exists(Single(`7esn` In 0.12 Is Not Null)._usn4!.usn1!)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`7esn`)Assert [usn2 In $_usn3[0X0123456789ABCDEF..][0x0..] Where `4esn` Ends With 9e12 Ends With {`5esn`}].`6esn`.`2esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:_usn4)Assert Exists(Single(`6esn` In 010[{`1esn`}..] Where Count(*) Starts With {usn2} Starts With `2esn`).usn2?)"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:@usn6]-()Assert Exists({@usn6:$@usn6 Is Null Is Null}.``.`7esn`!.`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On(``:`6esn`)Assert Exists(None(`2esn` In $@usn5 Is Not Null Is Not Null Where {#usn8}[..@usn5]).`7esn`!)"),
    octest_legacy:ct_string("Create Index On:`1esn`(`2esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:`1esn`]->()Assert Exists((`` :``{`7esn`:.9e1[$`1esn`..][$``..]})<-[:@usn5|:#usn7 *1000..{``:{usn2} Ends With {@usn6} Ends With 1000,`7esn`:010[..9e-1][..0X7]}]-({#usn7:12e12[.9e12..07]})<-[`2esn`?:`4esn`|:`2esn`]-(`4esn` {`8esn`:5.9e-12[0x0..]}).`5esn`!.`5esn`!.``!)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:`3esn`]->()Assert Exists(Single(#usn8 In 07[..$`5esn`] Where 123.654 Ends With {1000} Ends With 9e12)._usn3.`1esn`?._usn4?)"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:usn1]->()Assert Exists(Case When .9e-12[.12e12..][0Xa..] Then Null[$`3esn`..][`1esn`..] Else $`4esn` Ends With {999} End.``!)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:``)Assert Extract(`7esn` In 0.12 Is Not Null Where $12 Ends With 7.0e-0 Ends With 9e-12|$0 Contains $7).`4esn`.`1esn`.#usn8 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:usn2)Assert Any(`8esn` In {usn1}[7.0e-0..][3.9e-1..] Where $7[.1e-1..{@usn6}][$7..{`1esn`}]).#usn8 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`2esn`:@usn6]-()Assert Exists(All(usn1 In $@usn6 Is Null Is Null Where .9e1[$`1esn`..][$``..]).``)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`4esn`)Assert Single(`7esn` In 0.12 Is Not Null Where 010[{`1esn`}..]).`7esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:@usn6]-()Assert Exists(Single(usn1 In {#usn7} =~.12e12 =~9e0 Where 0X0123456789ABCDEF Is Not Null Is Not Null).#usn8!.`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[``:`5esn`]-()Assert Exists({`1esn`:Count(*)[Count ( * )][{0}],`8esn`:{12} Ends With 1e1}.`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn5:``]-()Assert Exists({`1esn`:{@usn5}[10.12e12..]}._usn4?.@usn6!.`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`3esn`)Assert {`5esn`:$999 Is Not Null}.`3esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:`7esn`]-()Assert Exists(Reduce(@usn5=$0 Contains $123456789 Contains {`3esn`},usn2 In .12e-12 Ends With `2esn`|010[..9e-1][..0X7]).`4esn`.usn2?.`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:usn2)Assert (`3esn` :#usn8:@usn6)<-[_usn4?:usn1|usn2{``:.9e1 In {#usn7} In .9e-12}]->(#usn7 :#usn7:`8esn`).@usn6.@usn5.`5esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn6:usn2]-()Assert Exists(Reduce(_usn4=$`5esn` Ends With 's_str' Ends With $`6esn`,usn1 In \"d_str\" Contains {@usn6}|Count(*) Starts With 07 Starts With $#usn7)._usn3?._usn4!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:@usn6)Assert {`5esn`:$0 Ends With 9e-12 Ends With $_usn4}.usn1!.`7esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn4:_usn3)Assert Case When .9e1 In .1e-1 Then $7 =~01234567 =~12.0 When $usn2[..$999][..#usn8] Then #usn7 Contains .0e0 Contains $@usn6 Else $`7esn` In $@usn5 End.#usn8 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:@usn6)Assert Exists(All(`8esn` In {_usn4} Ends With {0} Ends With `1esn` Where {`3esn`}[999..$`4esn`])._usn4!.@usn5!.#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`3esn`)Assert Exists(Reduce(usn1=\"d_str\" Is Not Null Is Not Null,`5esn` In {123456789} Starts With $_usn4 Starts With 0x0|{#usn8} Ends With _usn3 Ends With `2esn`).`6esn`!.`2esn`)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`7esn`)Assert Exists(Case $`3esn` =~#usn8 =~0x0 When $12 Ends With 7.0e-0 Ends With 9e-12 Then 07[..$`5esn`] End.`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`5esn`)Assert Any(@usn6 In 9e12[..usn2][.._usn3] Where 7[{`4esn`}..]).`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`6esn`:_usn4]-()Assert Exists({`4esn`:$#usn7[01..2.12][2.12..3.9e-1]}.``!.`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`3esn`)Assert Case $_usn3 Starts With 010 When 2.9e1 In {``} Then $`4esn` Ends With {999} When {#usn8}[..@usn5] Then `3esn` Is Null End.`4esn`.`6esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn2:#usn7)Assert Case 9e-12[$7..] When $@usn6 Starts With 0xabc Starts With {`7esn`} Then false Contains {`7esn`} When 1.0 In {usn1} Then 10.12e12 In Null In .12e12 End.`3esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`2esn`)Assert Exists((`6esn` :`4esn`:usn2)-[$#usn8]->(`3esn` :`5esn`:`7esn`).`8esn`.`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:`1esn`]-()Assert Exists(Filter(@usn6 In $usn2 Contains $`3esn` Contains 6.0e0 Where 0X0123456789ABCDEF Is Not Null Is Not Null).@usn6)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`1esn`)Assert Exists(Reduce(`8esn`=12e12[{`4esn`}..`4esn`][999..{@usn6}],usn1 In $@usn6 Is Null Is Null|$`5esn` =~Count(*) =~1.9e0).``!.`2esn`?.`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`7esn`)Assert 3.9e-1.usn1! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:_usn3)Assert [usn1 In $@usn6 Is Null Is Null Where {12} Starts With $`` Starts With 0X0123456789ABCDEF].usn2! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn3:_usn4]-()Assert Exists(Reduce(usn1=$123456789 Is Not Null Is Not Null,`7esn` In 0.12 Is Not Null|.12e12 Ends With 07 Ends With 3.9e-1).`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:_usn4)Assert Exists(All(usn1 In \"d_str\" Contains {@usn6} Where $1000 Is Null)._usn3?._usn4!.`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`1esn`)Assert Single(`` In `7esn` =~#usn8 =~\"d_str\" Where .9e-1 Ends With .0e-0 Ends With {_usn3}).`5esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`2esn`)Assert Exists(Case Count(*) =~01234567 =~.1e-1 When {1000} Starts With 10.12e12 Starts With .0e-0 Then $_usn3[usn2..][usn1..] When {`4esn`} In 1000 In {@usn5} Then 123456789[_usn4..`1esn`][$`6esn`..{@usn6}] End.`2esn`.`1esn`!.`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:``)Assert [`8esn` In {usn1}[7.0e-0..][3.9e-1..] Where 2.12[{12}]|123.654[10.12e12..$12][6.0e0..{#usn8}]].``?.#usn7!.@usn5? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:`2esn`]->()Assert Exists(Shortestpath(((`2esn` :@usn5{_usn3:0[..12][..{`8esn`}]})<-[`2esn`? *7{`5esn`:false[..usn2][..999]}]->(_usn3 :usn1))).#usn8?)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:usn1)Assert Exists(Case $7[.1e-1..{@usn6}][$7..{`1esn`}] When .0e-0 Ends With $`2esn` Ends With `5esn` Then 7[{`4esn`}..] End.``.`2esn`)").
