%%%-------------------------------------------------------------------
%%% File        : performance_command_legacy_SUITE.erl
%%% Description : Test Suite for rule: command.
%%%
%%% Created     : 15.12.2016
%%%-------------------------------------------------------------------
-module(performance_command_legacy_SUITE).

-compile(export_all).

-include_lib("common_test/include/ct.hrl").
-include_lib("eunit/include/eunit.hrl").

%%--------------------------------------------------------------------
%% COMMON TEST CALLBACK FUNCTIONS - SUITE
%%--------------------------------------------------------------------

suite() ->
    [
        {timetrap, {minutes, 10}}
    ].

init_per_suite(Config) ->
    Config.

end_per_suite(_Config) ->
    ok.

%%--------------------------------------------------------------------
%% COMMON TEST CALLBACK FUNCTIONS - ALL
%%--------------------------------------------------------------------

all() ->
    [test_command].

%%--------------------------------------------------------------------
%% TEST CASES
%%--------------------------------------------------------------------

test_command(_Config) ->
    octest_legacy:ct_string("Create Constraint On(`2esn`:@usn6)Assert Reduce(``=`6esn`[{`6esn`}..],_usn4 In 0.0[..{999}][..0.0]|0.e0[{999}][{`1esn`}]).`5esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:_usn4]-()Assert Exists(Shortestpath(((@usn6 :@usn6)-[{`7esn`:01234567 In $123456789}]->(:@usn5{`6esn`:{12} Contains `7esn` Contains $_usn3,@usn6:`2esn`[$1000..9e12][{#usn8}..{7}]})-[{`2esn`:1000 Is Null Is Null}]->(`5esn` :`2esn`{#usn8:True[$`7esn`..{1000}]}))).`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:usn2)Assert Allshortestpaths(((#usn7 {`1esn`:$123456789 Starts With $123456789 Starts With Count ( * )})-[:`5esn`{`6esn`:_usn3 Contains .e0 Contains {usn2}}]->(usn1 :_usn3{#usn7:$_usn3 Is Null Is Null,@usn5:{@usn6}[0Xa..$@usn6][0..`5esn`]}))).@usn6 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn6:`3esn`]->()Assert Exists({_usn3:0Xa Contains {`7esn`} Contains $999}.usn1!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn6:`7esn`]-()Assert Exists(Allshortestpaths(((({@usn6:07 =~@usn5,_usn4:12e12 Starts With `1esn` Starts With usn2})<-[:_usn4|:usn1 *07]-(#usn8 :#usn8{`1esn`:{`2esn`} In 0Xa In {_usn3},`8esn`:9e0 Starts With .e0 Starts With \"d_str\"})-[`3esn`?:`5esn`]->({`5esn`:$``['s_str'..][0x0..],`1esn`:{@usn5}[Count(*)..]})))).``!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn1:@usn6]-()Assert Exists(Single(#usn7 In 0Xa[@usn5][{`7esn`}] Where 12[..$@usn6]).@usn5?)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:_usn4)Assert Case When $`7esn`[$``..][999..] Then {_usn3} Contains 9e0 Contains $999 When 1000 Is Null Is Null Then .e1[@usn5]['s_str'] End.`6esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:_usn4]->()Assert Exists(Extract(_usn4 In 0.0[..{999}][..0.0] Where {`7esn`} Is Not Null Is Not Null|{`1esn`} =~{_usn4}).`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:@usn5)Assert [{usn2} =~@usn6 =~{`4esn`},Count(*) Is Not Null].`6esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`7esn`)Assert Exists([\"d_str\"[{`8esn`}..],{123456789} Is Not Null,123.654 Contains $_usn3 Contains 0X0123456789ABCDEF].`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn3:`5esn`]-()Assert Exists({`2esn`:9e12 Is Not Null Is Not Null}._usn3)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:_usn4)Assert None(#usn7 In 0Xa[@usn5][{`7esn`}] Where $0[_usn4..{`3esn`}][$#usn7..$#usn7]).`4esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:`6esn`]->()Assert Exists(Case 9e1[$_usn4..0xabc] When $1000[..$999] Then $`7esn` In 12 Else @usn5 =~'s_str' End.@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:@usn6)Assert Reduce(#usn8=$`4esn` Starts With 0e0,_usn3 In True[7][$999]|1e1[1.e1..][123.654..]).@usn5! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:`5esn`]-()Assert Exists(Extract(`8esn` In $12[{7}..0X0123456789ABCDEF] Where 123.654[$`1esn`..Null][1000..{_usn3}]|0.0 Contains $_usn4 Contains {`2esn`}).usn2)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`4esn`:@usn6]-()Assert Exists({`1esn`:$usn2 Is Null Is Null}._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:`5esn`]-()Assert Exists(Shortestpath(((_usn4 :`8esn`:@usn5))).``!)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:@usn5)Assert Exists(Filter(`8esn` In $12[{7}..0X0123456789ABCDEF] Where {`7esn`} Is Not Null Is Not Null).``)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:#usn7)Assert [0.0[..{999}][..0.0],{usn1} =~123.654 =~\"d_str\",True Is Not Null Is Not Null].#usn8? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`5esn`)Assert [`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where 0x0[{999}..][{_usn4}..]].`6esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:`7esn`)Assert Exists(All(_usn3 In {@usn5}[..#usn7] Where {_usn4} Is Null)._usn4?)"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:#usn7]-()Assert Exists({`4esn`:`8esn` Contains 1e1,#usn7:{`2esn`}[..{@usn6}][..1.e1]}.@usn6!)"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn7:`4esn`]-()Assert Exists(`8esn`(Distinct 00[07..],_usn3[$usn2..0]).`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:``)Assert _usn3(12.e12[2.12..][0xabc..],.e1[0.12]).`5esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`5esn`)Assert None(_usn4 In `2esn` Where 0Xa Contains {`7esn`} Contains $999)._usn3? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn2:`6esn`)Assert Exists(Shortestpath((_usn3 {_usn4:{_usn3} Is Not Null})<-[`6esn`:_usn3|`8esn`{`5esn`:$usn2 Is Null Is Null,``:123.654 Starts With $``}]-(`` )).`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:#usn7)Assert Case $usn1[@usn6][#usn7] When 12.0[2.12..][{`5esn`}..] Then 0X0123456789ABCDEF[0X7..] When {`6esn`}[..{`2esn`}] Then {`5esn`} Contains 's_str' Contains 9e1 Else 00 Starts With $`6esn` End.`8esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:_usn3)Assert Exists({`8esn`:{`7esn`} Is Not Null Is Not Null}.#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:_usn4)Assert Exists(Extract(_usn3 In True[7][$999] Where $7 Is Null Is Null).`3esn`)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:_usn4)Assert [`2esn` In {999} Is Not Null Where $0[{`2esn`}..{`1esn`}][{@usn5}..$`7esn`]].@usn6 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:`8esn`)Assert Exists(Reduce(`7esn`=7 Contains `2esn` Contains $`8esn`,_usn4 In `2esn`|12.e12[..1e1]).`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`3esn`)Assert Case usn2 =~0X7 =~{#usn7} When $123456789 Is Not Null Then 1.e1[{#usn8}] When 12 Ends With 01 Then $#usn7[123.654] End.`1esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[``:#usn7]-()Assert Exists(All(`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where $usn2 =~\"d_str\" =~_usn3).`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`2esn`)Assert [00[07..],$1000 Starts With $`8esn` Starts With {`5esn`}].usn1! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:_usn4)Assert Reduce(usn2=`8esn` Contains $`3esn` Contains {`4esn`},_usn3 In True[7][$999]|0x0 Ends With {``}).`4esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`8esn`)Assert None(`5esn` In $`2esn`[12.e12][$@usn5] Where `1esn` =~1000 =~1000).#usn7! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:usn1)Assert {#usn8:`3esn` Is Not Null Is Not Null}.@usn5? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[``:usn2]->()Assert Exists(`4esn`(Distinct 12e12 Is Not Null,{#usn8} =~{999} =~{#usn7}).#usn8!)"),
    octest_legacy:ct_string("Create Constraint On()-[usn2:`5esn`]->()Assert Exists([{`2esn`} Starts With @usn6].`7esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:#usn7)Assert Extract(`8esn` In $12[{7}..0X0123456789ABCDEF] Where Count ( * )[Count ( * )][12]|$`6esn`[`8esn`][0.0]).`4esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:``]->()Assert Exists(({`8esn`:0e0[$#usn8...e12],usn2:{``}[_usn4..$`1esn`]})-[`6esn`?{#usn7:`5esn`[..9e0][..01234567],#usn7:1e1[..$1000][..999]}]-({`3esn`:9e1 =~999})<-[`1esn`? *0X0123456789ABCDEF{`5esn`:1.e1 Starts With $`2esn` Starts With $0}]->({_usn4:{usn1} =~123.654 =~\"d_str\"})._usn3?)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:_usn4)Assert Exists(Allshortestpaths(((`4esn` :`1esn`)-[usn1:@usn5|:`7esn` *..00{`7esn`:1.e1 =~$usn2,`7esn`:$usn1[$123456789..0][{`1esn`}..12.0]}]-(`2esn` :#usn8{_usn3:usn2 Ends With Count ( * ) Ends With $@usn6}))).`2esn`)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:_usn4)Assert Any(usn1 In 12.e12 In {0} In 9e1 Where 123.654[$`1esn`..Null][1000..{_usn3}]).`6esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:_usn4]-()Assert Exists(Extract(`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where $usn1[0X7]|{999}[$123456789..][12..]).`4esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:#usn7]-()Assert Exists(All(`1esn` In 0.e0 =~`1esn` =~`6esn` Where {@usn5} Starts With 1.0 Starts With 00).`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`2esn`)Assert Exists(None(#usn7 In 0Xa[@usn5][{`7esn`}] Where 0[`4esn`][12.e12]).`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn5:`2esn`]-()Assert Exists((`2esn` :`5esn`:@usn5{_usn4:{`2esn`} Is Not Null Is Not Null,usn2:{`4esn`} In _usn4})-[`1esn`?:usn2|#usn7]->(`4esn` :`4esn`:@usn6)-[ *0xabc..7{`2esn`:0.0 Contains $_usn4 Contains {`2esn`},_usn4:0e0 Contains `3esn` Contains `7esn`}]-(usn1 )._usn4?)"),
    octest_legacy:ct_string("Create Constraint On(usn2:@usn6)Assert Case $@usn6 Contains $`7esn` Contains 1e1 When 0e0[$#usn8...e12] Then $7 Is Null Is Null Else {#usn8} =~{999} =~{#usn7} End._usn4? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:``)Assert Exists(Case Count(*) Is Not Null When {`4esn`} Starts With $7 Starts With $`` Then {`4esn`} Starts With $7 Starts With $`` Else 0X0123456789ABCDEF[`5esn`..][$#usn8..] End.usn2)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`5esn`)Assert Exists(Any(_usn4 In 0.0[..{999}][..0.0]).`4esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[``:`1esn`]->()Assert Exists(Reduce(@usn5=$usn1 =~010 =~07,_usn4 In 0.0[..{999}][..0.0]|01234567[$7..{12}]).usn1!)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:_usn3]-()Assert Exists([`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where 1.e1[0X0123456789ABCDEF..]|.e1 Starts With $_usn4 Starts With {`1esn`}].@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:usn2]->()Assert Exists((:#usn7{usn2:{`8esn`}[0X7][$`3esn`]})<-[usn2]-(@usn6 :@usn6{`5esn`:@usn5[$12..\"d_str\"],usn2:1.e1[0X0123456789ABCDEF..]})<-[?:@usn6|``{#usn7:\"d_str\"[..0.e0],`7esn`:{``} Ends With .e12 Ends With 0.e0}]->(_usn4 :_usn4).`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:usn1)Assert [`` In {`1esn`} Starts With @usn6 Where {`3esn`}[$``..#usn7][0X0123456789ABCDEF..`2esn`]|0[`4esn`][12.e12]].usn1? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:usn1)Assert [#usn7 In 123.654 Starts With $`` Where $999 In 999].@usn6! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:@usn6)Assert Exists(Any(`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where {`1esn`} Starts With @usn6).``!)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:``)Assert Exists(Filter(_usn3 In True[7][$999] Where 's_str'[..0X7]).#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:@usn6)Assert [$`4esn` Starts With 0e0].`7esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:_usn4)Assert Exists([`2esn` Ends With 12.e12 Ends With `2esn`,{`3esn`} Is Not Null Is Not Null,9e1 =~`` =~{`7esn`}].`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:usn2)Assert All(`2esn` In {999} Is Not Null Where $0[{`2esn`}..{`1esn`}][{@usn5}..$`7esn`]).`3esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn5:#usn7]-()Assert Exists(Allshortestpaths((({#usn7:0.12 Contains 12.0,`6esn`:\"d_str\" Is Null Is Null}))).`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`8esn`)Assert Extract(`6esn` In 00 Where $12 Is Not Null|1000 Is Null).`7esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`2esn`)Assert Exists(#usn8(Distinct).`8esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:_usn3)Assert [#usn7 In 0Xa[@usn5][{`7esn`}] Where $0[_usn4..{`3esn`}][$#usn7..$#usn7]|{#usn8}[#usn7..{`2esn`}]].@usn6? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`3esn`)Assert None(`1esn` In `3esn`[07..] Where 07 Is Null).@usn5? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:`3esn`]->()Assert Exists(All(usn1 In 12.e12 In {0} In 9e1 Where {12} Contains `7esn` Contains $_usn3).`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:#usn8)Assert Exists({`6esn`:1.0[{999}][$999],`1esn`:@usn5[$12..\"d_str\"]}.`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On(``:#usn8)Assert #usn8(Distinct 9e1[$_usn4..0xabc],123.654 Ends With usn2 Ends With 0).#usn8! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:usn2)Assert Exists(None(`8esn` In $12[{7}..0X0123456789ABCDEF] Where $`5esn`[$#usn7..][0xabc..]).`4esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`6esn`:#usn8]-()Assert Exists(Extract(`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where 0x0[$`8esn`.._usn3]).usn2?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`3esn`)Assert {#usn7:12 Starts With 7 Starts With $`5esn`,`3esn`:1000}.`` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:_usn3]-()Assert Exists(Extract(`` In {`1esn`} Starts With @usn6 Where 12 Starts With 7 Starts With $`5esn`|$`5esn` Is Not Null).`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:#usn7)Assert Exists(All(_usn3 In True[7][$999] Where $`3esn`[{``}..]).@usn6?)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:``)Assert Shortestpath((`6esn` :`2esn`{`7esn`:#usn8 =~{999}})).#usn8! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`6esn`)Assert Exists(None(#usn7 In 123.654 Starts With $`` Where #usn8[`7esn`..]).usn2!)"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:`7esn`]->()Assert Exists(Filter(#usn7 In 0Xa[@usn5][{`7esn`}] Where $0 In _usn4).`5esn`)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:usn2)Assert Exists(Filter(`` In {`1esn`} Starts With @usn6 Where $`5esn`[`1esn`][0X0123456789ABCDEF])._usn3)"),
    octest_legacy:ct_string("Create Constraint On(``:`8esn`)Assert Exists(Filter(_usn4 In 0.0[..{999}][..0.0] Where {999}[$123456789..][12..]).`2esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`1esn`)Assert Exists(Single(`1esn` In $12 Is Not Null Where Count(*)[..``][..#usn8]).`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:usn2)Assert Exists(Extract(`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where 0x0[$`8esn`.._usn3]).usn2?)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:_usn3)Assert Reduce(``={999} Is Null,_usn4 In 0.0[..{999}][..0.0]|\"d_str\" Ends With False Ends With {@usn6}).`1esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn2:`1esn`]-()Assert Exists([`1esn` In `3esn`[07..] Where {`4esn`}[{`4esn`}..999]|0e0[..$@usn5][..$`8esn`]].`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`6esn`)Assert `1esn`(Distinct).usn2 Is Unique"),
    octest_legacy:ct_string("Drop Index On:`5esn`(#usn8)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`1esn`)Assert {`4esn`:{999} Is Not Null,@usn6:123.654 Ends With usn2 Ends With 0}.`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:_usn4)Assert Extract(`8esn` In $12[{7}..0X0123456789ABCDEF] Where `7esn` Starts With 0X7 Starts With $`7esn`|9e1 Ends With $@usn5 Ends With $123456789).@usn5? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:_usn4)Assert Case When $`` Is Null Then 0.12 Ends With {1000} Ends With `6esn` When True[7][$999] Then 0Xa Contains Count ( * ) End._usn3 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:``)Assert Exists([`1esn` In $12 Is Not Null Where 1e1[..$1000][..999]|{@usn6}[True..{_usn3}]]._usn4)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:_usn3)Assert Exists((:`4esn`:@usn6{`7esn`:Count(*)[.e12..]})<-[:`3esn`|:@usn5*..]->({usn1:0e0[..$@usn5][..$`8esn`],usn1:01[..{`7esn`}][..01234567]}).@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:usn1)Assert Exists({`5esn`:123456789 Starts With {@usn6} Starts With $12}.@usn6!)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`1esn`)Assert Exists(({#usn7:#usn8 =~{999}})-[_usn3?:usn1 *12..{#usn7:0e0 Contains `3esn` Contains `7esn`}]-({_usn3}).`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`8esn`)Assert Case {#usn8}[usn1][1.0] When .e12 =~.e0 Then 12 Starts With 7 Starts With $`5esn` End.`3esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:`3esn`)Assert Exists(1e1.@usn6)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`8esn`)Assert Exists((`2esn` :@usn6{7})-[?:`1esn`|:`3esn`{@usn5:{`6esn`} Ends With 0e0 Ends With {``},@usn5:{`1esn`} Starts With `4esn` Starts With {0}}]->(:`6esn`:`8esn`{`5esn`:$12 Is Not Null Is Not Null,`4esn`:{@usn5}[..@usn6]}).`5esn`)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:usn1)Assert Exists({`6esn`:.e0[..{`5esn`}][..999]}.usn2!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`2esn`:``]-()Assert Exists((`` :`4esn`:@usn6{``:.e12 =~$_usn4})-[?:`7esn`*{`6esn`:{0} =~12.0,usn2:9e12 Ends With 123456789}]->(:#usn8{`3esn`:`2esn` Starts With `` Starts With 1e1,`8esn`:0Xa[..{1000}][..$#usn7]}).@usn5)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`8esn`)Assert Exists((`2esn` :@usn6{7})-[?:`1esn`|:`3esn`{@usn5:{`6esn`} Ends With 0e0 Ends With {``},@usn5:{`1esn`} Starts With `4esn` Starts With {0}}]->(:`6esn`:`8esn`{`5esn`:$12 Is Not Null Is Not Null,`4esn`:{@usn5}[..@usn6]}).`5esn`)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`2esn`)Assert Reduce(`8esn`=`2esn` Starts With `` Starts With 1e1,usn1 In 12.e12 In {0} In 9e1|#usn7 Starts With 1000 Starts With .e1)._usn3! Is Unique"),
    octest_legacy:ct_string("Drop Index On:_usn4(usn2)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`6esn`)Assert Case When $999 Ends With {0} Then $`2esn` Is Null Is Null End.`3esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:_usn4)Assert Exists(Allshortestpaths(((_usn3 :#usn8{@usn5:{1000} Ends With {`8esn`},`2esn`:$`5esn`[..{`2esn`}][..{0}]})<-[?:`1esn`|:`3esn`{`2esn`:12 Starts With $#usn7}]-(:`2esn`{`2esn`:123456789[0..]}))).`8esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`6esn`)Assert Any(`6esn` In Count(*) Ends With $`` Ends With {7} Where 7 Contains `2esn` Contains $`8esn`).@usn5? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`3esn`)Assert Exists((`7esn` :@usn5{`7esn`:{1000}[{usn1}][Null],`3esn`:7[$0..][{_usn4}..]})<-[_usn4?:`2esn`{`2esn`}]-(`3esn` :`2esn`{`8esn`:Null In .e0})-[`2esn`?:`` *999{`6esn`:{@usn5}[..@usn6],#usn7:0e0 Contains 9e12}]-(usn2 {`7esn`:{usn1}[$`8esn`..0.0]}).`4esn`?)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`4esn`)Assert Exists(Reduce(`2esn`=$#usn7[123.654],`` In {usn1} Ends With {`6esn`} Ends With 123456789|False Contains 0.e0 Contains Count(*)).`3esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`3esn`:#usn7]-()Assert Exists(({@usn5:Count ( * ) Is Null})-[:#usn8|`2esn`]->(`` :usn2:`2esn`)<-[`3esn`?:`3esn`|:@usn5 *0x0..]-(:`1esn`{`5esn`:False Ends With $``,_usn4:0.e0[{999}][{`1esn`}]}).`5esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:`6esn`]->()Assert Exists(All(`1esn` In 0.e0 =~`1esn` =~`6esn` Where $usn1 In 0.12 In $``).`1esn`)"),
    octest_legacy:ct_string("Create Constraint On(``:@usn6)Assert [$usn1[0X7],010 In `1esn`]._usn3? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:#usn7)Assert Extract(`` In {`1esn`} Starts With @usn6 Where {_usn3}[$usn2..])._usn4? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:`3esn`)Assert Reduce(#usn7=9e1[123456789..],`5esn` In $`2esn`[12.e12][$@usn5]|{`7esn`} Is Not Null Is Not Null).`2esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:_usn3)Assert Exists(`8esn`(Distinct $123456789[..$7][..$`6esn`],0e0 Contains `3esn` Contains `7esn`).`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:usn1)Assert Exists(Allshortestpaths((((@usn5 )<-[?:`1esn`|:`3esn`*]->(_usn4 :#usn8{`2esn`})<-[@usn6 *07{`5esn`:12.e12[{7}..7],_usn4:`2esn` Starts With `` Starts With 1e1}]->(_usn3 :_usn4{`7esn`:00 Starts With $`6esn`,`6esn`:{12}[999][{_usn3}]})))).`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:@usn5)Assert Exists(Extract(_usn4 In 0.0[..{999}][..0.0] Where #usn8 Is Null|07 Is Null).@usn6?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`5esn`)Assert Case {@usn5}[..#usn7] When $@usn6 Starts With {`1esn`} Starts With 12 Then {usn1} Ends With {`6esn`} Ends With 123456789 End.`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`7esn`)Assert Exists([{``}[_usn4..$`1esn`],9e0[#usn8]].`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn3:`6esn`]-()Assert Exists(Case 9e1[$_usn4..0xabc] When $1000[..$999] Then $`7esn` In 12 Else @usn5 =~'s_str' End.#usn7)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`1esn`)Assert Exists(Reduce(usn2={12} Contains 9e0,`` In {usn1} Ends With {`6esn`} Ends With 123456789|1e1[..$1000][..999])._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`2esn`)Assert {`4esn`:1.e1[{#usn8}]}.usn2! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`7esn`)Assert Exists({`1esn`:``[{123456789}..]}._usn3)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`5esn`)Assert (#usn8 {``:@usn5[$12..\"d_str\"],`4esn`:'s_str'[.._usn4][..``]})<-[`6esn` *..7$0]->({#usn7:12 Starts With 7 Starts With $`5esn`,`3esn`:1000}).`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:_usn4]-()Assert Exists((@usn6 {usn1:$#usn7 =~{12} =~False})-[`1esn`?:_usn4|:usn1*]-({`3esn`:{0} Is Null,#usn7:{0} Is Null}).`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:@usn5)Assert Allshortestpaths((usn1 :usn2:`2esn`{`1esn`:{123456789}[12..][$12..]})).`3esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:_usn4]->()Assert Exists(Case When 1.e1[..12.e12][..$usn2] Then 123.654 Contains $_usn3 Contains 0X0123456789ABCDEF When 0xabc[$@usn5] Then $@usn6 Starts With $@usn5 End.`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`4esn`)Assert Shortestpath((((usn2 :``)-[@usn5?:#usn7|`2esn`{`6esn`:True =~{`1esn`},`7esn`:0Xa[$1000..$123456789]}]->(`2esn` :@usn6{7})<-[:@usn5|:`7esn`{`6esn`:$`1esn`[#usn8][$@usn5],@usn6:123.654[1e1..][{#usn8}..]}]-(`4esn` :`2esn`)))).@usn6! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:@usn6)Assert (:#usn8{`2esn`:{7}[$7..],#usn7:`1esn` In 07})-[?:`8esn`|:_usn4 *12..]->(@usn6 {`2esn`:.e1[0.12],`6esn`:0.0[..{999}][..0.0]}).`6esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:``)Assert {#usn7:$_usn3 Is Null Is Null,@usn5:{@usn6}[0Xa..$@usn6][0..`5esn`]}._usn3 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`8esn`)Assert Extract(#usn7 In 0Xa[@usn5][{`7esn`}] Where $0 In _usn4|@usn5 Is Not Null Is Not Null).`6esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:@usn5)Assert None(`8esn` In $12[{7}..0X0123456789ABCDEF] Where Count ( * )[Count ( * )][12]).`7esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`3esn`:usn1]-()Assert Exists(#usn7(``[$0..][`1esn`..],{7} Starts With $usn1 Starts With 1.0).usn1?)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:``)Assert Exists((`6esn` :`8esn`:@usn5)-[@usn5?:`6esn` *12..]->(`4esn` :`7esn`)-[?:usn2|#usn7]-(`2esn` :_usn3{`8esn`:usn1 Contains $7 Contains $``})._usn4!)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`3esn`)Assert All(`6esn` In Count(*) Ends With $`` Ends With {7} Where .e1 Contains $`3esn`).@usn5? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:_usn3)Assert [#usn7 In 0Xa[@usn5][{`7esn`}] Where #usn7 Starts With $999|$@usn5[$`4esn`][$@usn6]].`4esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`6esn`)Assert Reduce(@usn6=7 Contains `2esn` Contains $`8esn`,`2esn` In {999} Is Not Null|{12} Contains `7esn` Contains $_usn3).`` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`7esn`)Assert Exists(Case When $7 Is Null Then {`1esn`} =~{_usn4} End.`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:_usn4)Assert Exists(({_usn4:{usn1} =~123.654 =~\"d_str\"})-[`5esn`?:`2esn`{`2esn`:$7[$`3esn`]}]-(:#usn7{_usn3:12e12 Ends With `6esn` Ends With {`3esn`}})._usn4)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:_usn4)Assert Exists(None(`5esn` In $`2esn`[12.e12][$@usn5] Where $``[.e12..]).#usn7)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:usn2]->()Assert Exists(Extract(`3esn` In 123.654[1e1..][{#usn8}..]|Null[{_usn4}..]).#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:@usn5)Assert Reduce(`7esn`=7 Contains `2esn` Contains $`8esn`,_usn4 In `2esn`|12.e12[..1e1]).`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:#usn7]-()Assert Exists(Any(`6esn` In 00 Where usn1 Is Null Is Null).`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On(``:`3esn`)Assert All(#usn7 In 123.654 Starts With $`` Where {_usn4}[...e12][..0xabc]).`4esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`1esn`)Assert Reduce(`3esn`=123456789[0..],_usn3 In True[7][$999]|`2esn` Ends With $`4esn` Ends With {#usn7}).`8esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`4esn`)Assert Filter(`8esn` In $12[{7}..0X0123456789ABCDEF] Where False Contains 0.e0 Contains Count(*)).usn1? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`7esn`)Assert Exists(Extract(#usn7 In 123.654 Starts With $`` Where 9e1 =~`` =~{`7esn`}|@usn6[{0}..]).usn1?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`3esn`:`1esn`]-()Assert Exists(Case When $`5esn`[..{`2esn`}][..{0}] Then {@usn6} Is Not Null End.@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:#usn7)Assert Exists(Reduce(`2esn`=01234567 In $123456789,`1esn` In $12 Is Not Null|#usn7 =~{`4esn`} =~123456789).`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:``]->()Assert Exists(Reduce(usn2=True[7][$999],`` In {`1esn`} Starts With @usn6|{`4esn`}[$_usn4..][9e0..]).`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(``:usn2)Assert [$@usn6 Contains `7esn`].usn2 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`4esn`)Assert Exists((#usn7 :@usn6{`8esn`:{@usn6}[True..{_usn3}],`1esn`:07 Is Null})<-[:`7esn` *..01234567{`3esn`:.e12[$7..][{`6esn`}..]}]->(`` :`4esn`:@usn6{_usn4:False[0Xa..$usn1]}).`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:_usn3)Assert {``:0.12[..$`6esn`][..$1000]}.@usn6! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`2esn`)Assert {#usn8:{999} Ends With 123456789 Ends With {@usn5},`8esn`:$`8esn`[..$999][..0]}.`1esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:`6esn`]->()Assert Exists([_usn4 In `2esn` Where 12e12 Is Not Null|1000 Is Null Is Null].`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:@usn5)Assert Exists(Shortestpath((usn2 {#usn8:123456789 Starts With {@usn6} Starts With $12,_usn3:07[..`6esn`][..'s_str']})<-[usn1? *..0Xa{`2esn`:\"d_str\" Is Null Is Null}]-(`2esn` :`3esn`:`6esn`))._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`1esn`)Assert `3esn`(Distinct 1.e1[0xabc..],$@usn5[`1esn`..]).``? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`6esn`)Assert Exists(All(`6esn` In Count(*) Ends With $`` Ends With {7} Where {@usn5} =~_usn4 =~0.12).#usn7?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`7esn`:`4esn`]-()Assert Exists(Allshortestpaths((`4esn` {_usn4:12 Starts With {_usn4} Starts With $#usn8,_usn4:$@usn5[$`4esn`][$@usn6]})<-[? *0X7..0Xa]->({`6esn`:`2esn` Ends With 12.e12 Ends With `2esn`})).usn1)"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:`5esn`]->()Assert Exists(Reduce(`4esn`=9e1 =~`` =~{`7esn`},`6esn` In 00|0X0123456789ABCDEF[$`2esn`..][`2esn`..]).`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:_usn3)Assert All(`3esn` In 123.654[1e1..][{#usn8}..] Where `2esn` Ends With $`4esn` Ends With {#usn7}).`6esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`7esn`:`7esn`]-()Assert Exists([_usn4 In `2esn` Where 0Xa Contains {`7esn`} Contains $999].`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:usn1)Assert Exists([$12 Is Not Null,True[True..]]._usn4)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`3esn`)Assert All(`6esn` In 00 Where usn1 Is Null Is Null).`7esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`1esn`)Assert Exists(Reduce(@usn5=$@usn6 =~#usn8,`5esn` In $`2esn`[12.e12][$@usn5]|{`1esn`} In 12.e12 In 9e1).`4esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:``]-()Assert Exists(Extract(#usn7 In 0Xa[@usn5][{`7esn`}] Where 1e1[1.e1..][123.654..]|{999} Starts With {_usn4} Starts With 00).`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:``)Assert Exists(Extract(`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where 0.12[..$`6esn`][..$1000]).``?)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`2esn`)Assert Exists(@usn6(12e12 Starts With `1esn` Starts With usn2,00[..$123456789][..$`5esn`])._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`3esn`)Assert Exists(Any(`8esn` In $12[{7}..0X0123456789ABCDEF] Where {@usn6} Is Not Null).`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`2esn`)Assert (`3esn` :#usn7)<-[usn2?:``*]-({`4esn`:$`1esn` Is Not Null Is Not Null,`2esn`:$7 Is Null}).`6esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:usn1)Assert $0.``? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn2:`3esn`]-()Assert Exists(Reduce(`8esn`=`7esn`[0..$usn2][{usn2}..0.e0],`6esn` In Count(*) Ends With $`` Ends With {7}|12.e12 In {0} In 9e1).@usn5)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn2:#usn7]-()Assert Exists(Filter(`8esn` In $12[{7}..0X0123456789ABCDEF] Where {`2esn`}[Count(*)]).@usn6?)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:usn1)Assert Exists({@usn6:$`` Starts With 12 Starts With $usn2}.usn2!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn5:#usn8]-()Assert Exists(Case When 2.12 In $`8esn` In {`7esn`} Then $usn1 In 01234567 In .e1 Else $`3esn` Contains 0 Contains 07 End.`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:@usn6)Assert Exists(Filter(#usn7 In 0Xa[@usn5][{`7esn`}] Where 12[..$@usn6]).`2esn`)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:usn2)Assert Single(`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where 9e1 =~999).`5esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:@usn5]->()Assert Exists(Single(`` In {`1esn`} Starts With @usn6 Where 999 Starts With $123456789 Starts With {``})._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:`8esn`]-()Assert Exists({`3esn`:{_usn4}[...e12][..0xabc]}.usn2)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn2:@usn6]-()Assert Exists([12.e12[{7}..7],_usn3[\"d_str\"]].`2esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[``:`5esn`]-()Assert Exists(Shortestpath(({`6esn`:$``['s_str'..][0x0..]})).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`1esn`)Assert Exists(00.`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`3esn`)Assert Case When 9e12 Is Not Null Is Not Null Then .e12 Ends With 1000 Ends With 010 Else `1esn` Is Null Is Null End.@usn5? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:@usn5)Assert Exists(Allshortestpaths((({`6esn`:{`3esn`} Ends With `1esn` Ends With $@usn6,@usn6:$usn1 In 0.12 In $``}))).usn1?)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:`1esn`]->()Assert Exists(0xabc.`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:#usn7)Assert [00 Starts With $`6esn`].`3esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:@usn6]-()Assert Exists({`2esn`:{`4esn`}[$_usn4..][9e0..]}.usn2?)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:@usn6)Assert Exists($`6esn`.`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:`4esn`]->()Assert Exists((:usn1:_usn4{@usn5:1000 Is Null Is Null})<-[`1esn`:`8esn`|:_usn4 *123456789..0X7$12]->(:`1esn`{`3esn`:{`8esn`}[0X7][$`3esn`],usn2:True[True..]})<-[? *0X0123456789ABCDEF]->(@usn6 :`8esn`:@usn5{`6esn`:{`6esn`}[..{`2esn`}],`5esn`:_usn4[Count(*)]}).usn2!)"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:`4esn`]->()Assert Exists(Any(`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where 0x0[$`8esn`.._usn3]).usn2!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:_usn3)Assert Shortestpath((`1esn` {@usn5:$usn1 In 0.12 In $``}))._usn3! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:_usn4)Assert Exists((_usn3 {_usn4:{_usn3} Is Not Null})-[`4esn`?:usn1 *0xabc..7]-(`` :_usn4).#usn7!)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`2esn`)Assert (@usn6 {@usn5:0X0123456789ABCDEF[$999..][@usn5..]})-[_usn3?:`8esn`|:_usn4{@usn6:{`1esn`}[`6esn`..12e12]}]-(@usn6 {`8esn`:123456789 Ends With usn1 Ends With usn2,`6esn`:0[{usn2}..][usn1..]})._usn3 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:#usn8)Assert Extract(`` In {`1esn`} Starts With @usn6 Where 12.0 =~$#usn7 =~9e12|{@usn6} Contains 123.654 Contains 01)._usn4! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`1esn`)Assert Case {usn1} In Count ( * ) When 9e12 Is Not Null Is Not Null Then $999 Ends With {0} End.`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:usn1)Assert Exists({`4esn`:$`5esn` Is Not Null}.`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`4esn`)Assert Exists(Shortestpath(((:usn2:`2esn`{`5esn`:1.e1 Starts With $`2esn` Starts With $0})<-[`5esn`:usn2|#usn7 *999]-(:`8esn`:@usn5)<-[?:`1esn`|:`3esn`{`2esn`:12 Starts With $#usn7}]-(`1esn` :@usn6))).#usn8)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:#usn7)Assert Exists(exists(Distinct #usn8 =~{999},$`2esn` Ends With 0.12 Ends With .e1).@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:_usn4)Assert Exists([#usn7 In 123.654 Starts With $`` Where _usn3 Contains .e0 Contains {usn2}|$usn1 In 01234567 In .e1].`8esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:`8esn`]-()Assert Exists(Reduce(usn1=$_usn3[{999}],`2esn` In {999} Is Not Null|$``['s_str'..][0x0..]).`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:_usn4)Assert Exists(Shortestpath((:_usn3{@usn5:.e1[..\"d_str\"],#usn8:{`1esn`}[`6esn`..12e12]})<-[`7esn`?*..]-(usn1 :`1esn`{#usn7:$`` Is Null,`6esn`:01[..{`7esn`}][..01234567]})).@usn6!)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`7esn`)Assert Exists({``:0e0[..$@usn5][..$`8esn`],`7esn`:$#usn7 =~{12} =~False}.usn1?)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`8esn`)Assert Exists(All(`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where False Contains 0.e0 Contains Count(*)).@usn6)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:@usn5)Assert Reduce(#usn8=$`4esn` Starts With 0e0,_usn3 In True[7][$999]|1e1[1.e1..][123.654..]).`2esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:_usn4)Assert Exists(Reduce(`2esn`=01234567 In $123456789,`1esn` In $12 Is Not Null|#usn7 =~{`4esn`} =~123456789).`7esn`)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`5esn`)Assert Exists(None(`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where 123456789 Is Not Null Is Not Null).`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`6esn`)Assert Exists([$`7esn` Contains {`1esn`} Contains 9e12,Count(*)[010..][#usn7..]].`6esn`)"),
    octest_legacy:ct_string("Drop Index On:`6esn`(``)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`2esn`)Assert Exists(Case When {@usn6} Contains 123.654 Contains 01 Then #usn8 Is Not Null Else 0.12 Ends With {1000} Ends With `6esn` End._usn3?)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:#usn7)Assert [`5esn` In $`2esn`[12.e12][$@usn5] Where `6esn`[{@usn5}..Count ( * )][{`6esn`}..{@usn6}]].`3esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:@usn5)Assert Exists(Extract(_usn4 In 0.0[..{999}][..0.0] Where 12 Ends With 01|Count(*) Is Not Null)._usn3?)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`4esn`)Assert [_usn4 In `2esn` Where 0Xa Contains {`7esn`} Contains $999].`1esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:_usn3]-()Assert Exists(Allshortestpaths((`6esn` :`7esn`)-[:_usn3|`8esn` *12..{`8esn`:Count(*)[.e12..],`5esn`:{#usn8}[12.0][$@usn6]}]-(`1esn` {_usn4:`3esn`[_usn4..{0}][`5esn`..usn2]})-[@usn5?:_usn4|:usn1]->(:usn2:`2esn`)).#usn8)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:_usn3]->()Assert Exists({`1esn`:$123456789[..$7][..$`6esn`]}.`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`3esn`)Assert Single(_usn4 In 0.0[..{999}][..0.0] Where #usn8 Is Null).`7esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn6:#usn7]-()Assert Exists({usn1:999[12.0..][#usn7..],@usn5:123.654[$`1esn`..Null][1000..{_usn3}]}.`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`3esn`)Assert None(`8esn` In $12[{7}..0X0123456789ABCDEF] Where {@usn6} Contains 123.654 Contains 01).`5esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn4:`3esn`]-()Assert Exists(Filter(`2esn` In {999} Is Not Null Where #usn8 =~{_usn3} =~``).`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`6esn`)Assert Allshortestpaths(({`3esn`:9e1 =~999})<-[@usn5?:`5esn`]->({`3esn`:0e0 Contains 9e12,@usn6:`6esn`[{@usn5}..Count ( * )][{`6esn`}..{@usn6}]})-[``? *01..07{`1esn`:usn2 Ends With Count ( * ) Ends With $@usn6,`1esn`:1.e1[{#usn8}]}]->(usn1 {`5esn`})).`6esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:@usn5)Assert Exists([_usn3 In True[7][$999] Where 12.0 =~$#usn7 =~9e12|_usn4[Count(*)]].usn1!)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:@usn6)Assert Exists([$`5esn`[$#usn7..][0xabc..],1000[$7..$123456789],$`7esn`[$``..][999..]].`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:``)Assert Exists(`4esn`(Distinct 12e12 Is Not Null,{#usn8} =~{999} =~{#usn7}).``)"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:#usn7]->()Assert Exists((`1esn` :_usn4)<-[`3esn`:`8esn`|:_usn4 *..01234567]->(:`3esn`:`6esn`{`4esn`:{`6esn`} Contains {usn2} Contains $1000,usn2:{#usn8}[12.0][$@usn6]})<-[ *123456789..0X7]-({`6esn`:`2esn` Ends With 12.e12 Ends With `2esn`})._usn3)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:_usn3)Assert ({#usn7:12 Starts With $#usn7,#usn7:`6esn` Ends With 2.12 Ends With @usn6})-[{@usn5:1000 Is Null Is Null}]-(_usn3 :@usn5{`2esn`:@usn5[$12..\"d_str\"]})-[?:`8esn`|:_usn4{usn1:999[12.0..][#usn7..],@usn5:123.654[$`1esn`..Null][1000..{_usn3}]}]-(`5esn` :@usn6).`1esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:`3esn`)Assert [`6esn` In 00 Where 0X0123456789ABCDEF Is Null Is Null].`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:usn1)Assert Reduce(usn2=12.e12 In $0 In $0,`` In {`1esn`} Starts With @usn6|{`4esn`}[$123456789..]).`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`7esn`)Assert {`6esn`:1000,#usn8:$`5esn`[$#usn7..][0xabc..]}.@usn6! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`2esn`:`6esn`]-()Assert Exists(['s_str' Starts With 12e12 Starts With $_usn4,$7 In @usn5 In {@usn5}]._usn4)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:usn1)Assert (:`5esn`:@usn5{`5esn`:`7esn` Contains `5esn` Contains 0X7})<-[?:@usn6|`` *..01234567]-(`2esn` :@usn6).`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:@usn6]->()Assert Exists(Shortestpath(((#usn8 :@usn5)<-[_usn3{@usn6:{7} Contains $123456789}]->(:`2esn`{``:1.e1 =~`2esn`,`3esn`:$`6esn`[`8esn`][0.0]})<-[_usn3:`4esn`|:#usn7{@usn5:12 Is Not Null,`2esn`:$999 In 999}]->({``:False Contains $#usn8 Contains 9e1}))).`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:`2esn`]-()Assert Exists([0xabc[$@usn5]].``!)"),
    octest_legacy:ct_string("Create Constraint On(``:@usn5)Assert Exists(All(_usn3 In {`2esn`} Ends With {12} Ends With 7 Where $`6esn`[{`3esn`}..12]).@usn6)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn7:`2esn`]->()Assert Exists(Case 9e0 Starts With .e0 Starts With \"d_str\" When $`1esn` Is Not Null Is Not Null Then `3esn`[$@usn5..@usn5][9e1..$``] End.#usn8?)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:#usn8)Assert [{12}[00..{@usn6}][1.e1..0],usn2[`7esn`..{`3esn`}][$7..{#usn7}]].usn2? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:_usn3)Assert Case When {`1esn`} =~{_usn4} Then 7 Is Not Null End.`5esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`3esn`:`7esn`]-()Assert Exists((`2esn` :_usn3{`8esn`:usn1 Contains $7 Contains $``})<-[`1esn` *..00{`8esn`:{999}[$123456789..][12..],`2esn`:{123456789} Is Not Null}]-(`3esn` {usn1:$`6esn`[`8esn`][0.0],`8esn`:2.12 In $`8esn` In {`7esn`}})<-[_usn4{`7esn`:01234567[..9e1]}]-(`` {#usn7:{``}[_usn4..$`1esn`],_usn4:$`6esn` Ends With {0} Ends With {`7esn`}}).@usn6?)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:usn2)Assert {_usn4:0Xa Contains $``,@usn6:@usn6[$_usn4]}.usn1 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:#usn7)Assert {`6esn`:_usn3 Contains .e0 Contains {usn2},_usn4:1000[$7..$123456789]}.@usn5! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:@usn5)Assert Extract(usn1 In 12.e12 In {0} In 9e1 Where {12}[usn2])._usn4! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn6:`7esn`]-()Assert Exists(`6esn`(Distinct #usn7 =~{`4esn`} =~123456789,1e1[1.e1..][123.654..]).usn1)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:_usn4)Assert Exists(Allshortestpaths((:`2esn`{`6esn`:_usn3 Contains .e0 Contains {usn2}})<-[?{@usn6:@usn6[{0}..],``:$usn1[0X7]}]->(`3esn` :`6esn`:`8esn`{`7esn`:{0}[..{`7esn`}],@usn6:_usn4 In $usn1})).`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:_usn4)Assert Exists([12.e12[$`4esn`..],\"d_str\" Contains @usn6 Contains 12.e12,$7 Is Not Null].@usn6!)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`7esn`)Assert Exists(Reduce(`5esn`=1.e1 =~`2esn`,`1esn` In $12 Is Not Null|{1000}[01234567..$_usn4][{@usn6}..$_usn3]).`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:usn2)Assert Case When 0X0123456789ABCDEF[$`5esn`..] Then ``[$0..][`1esn`..] When {``} Ends With .e12 Ends With 0.e0 Then {_usn3} Is Not Null End.`3esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn4:#usn7)Assert `6esn`(Distinct 12 Starts With $#usn7,12e12 Ends With `4esn` Ends With 123456789).usn2? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`7esn`)Assert [`1esn` Is Null Is Null,$`3esn` Contains 0 Contains 07,0 Contains $usn2 Contains 12e12].usn2! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:``)Assert Exists(All(`2esn` In {999} Is Not Null Where {1000}[1000][$usn1]).@usn5)"),
    octest_legacy:ct_string("Drop Index On:`3esn`(`8esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:`5esn`]->()Assert Exists(Any(`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where 1.e1[0X0123456789ABCDEF..]).#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`8esn`)Assert ({usn2:`1esn` In 07})<-[usn2? *0xabc..7{usn1:$123456789 Starts With `5esn`}]->(:`8esn`:@usn5{`6esn`:_usn3 Contains .e0 Contains {usn2}})-[`6esn`?:_usn3|`8esn`]->({usn1:0e0[..$@usn5][..$`8esn`],usn1:01[..{`7esn`}][..01234567]}).@usn5! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`6esn`)Assert All(`3esn` In 123.654[1e1..][{#usn8}..] Where .e1[0.12]).`1esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:_usn4)Assert Extract(`1esn` In 0.e0 =~`1esn` =~`6esn` Where Count(*) In {``}).`` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`5esn`)Assert Reduce(@usn6=0X0123456789ABCDEF[7...e0][`1esn`..usn2],#usn7 In 123.654 Starts With $``|0e0[$#usn8...e12]).#usn8 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:@usn6]->()Assert Exists(Single(@usn5 In Null =~12e12).@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:``]-()Assert Exists(Any(`8esn` In $12[{7}..0X0123456789ABCDEF] Where `6esn`[..{999}]).#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On(``:usn1)Assert Filter(`1esn` In $12 Is Not Null Where $@usn6[01..@usn5][0x0..`4esn`]).#usn8! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`6esn`)Assert Exists(Reduce(`5esn`=`2esn` Starts With `` Starts With 1e1,usn1 In 12.e12 In {0} In 9e1|$usn2 Ends With $`5esn`)._usn3?)"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:#usn7]-()Assert Exists(Reduce(usn1=$7[$`3esn`],`5esn` In $`2esn`[12.e12][$@usn5]|9e1 =~999).`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn1:`8esn`]-()Assert Exists([0Xa[..{1000}][..$#usn7],$`6esn` Ends With {0} Ends With {`7esn`},0Xa[..{1000}][..$#usn7]].`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`2esn`)Assert [`` In {`1esn`} Starts With @usn6 Where 's_str'[.._usn4][..``]].`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn2:#usn8)Assert Exists(Filter(`6esn` In Count(*) Ends With $`` Ends With {7} Where `7esn` Starts With 0X7 Starts With $`7esn`).`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`3esn`)Assert Case 0.e0 =~`1esn` =~`6esn` When $`1esn`[$12][Count ( * )] Then 0Xa Contains {`7esn`} Contains $999 Else 0.12[..$`6esn`][..$1000] End.`2esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn6:usn2)Assert Exists([12 Starts With 7 Starts With $`5esn`].usn2!)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`4esn`)Assert [.e1[0.12]].`6esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[usn2:#usn7]-()Assert Exists(Single(`6esn` In 00 Where {@usn5} Starts With 1.0 Starts With 00).``)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn1:`1esn`]-()Assert Exists(Allshortestpaths((`8esn` :#usn8{``:@usn5[$12..\"d_str\"],`4esn`:'s_str'[.._usn4][..``]})<-[_usn4:`3esn`|:@usn5 *0x0..]->(`7esn` :usn2:`2esn`)).@usn5)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:@usn6)Assert Exists([`6esn` In Count(*) Ends With $`` Ends With {7} Where `7esn` Starts With 0X7 Starts With $`7esn`].#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:`8esn`]-()Assert Exists((:`4esn`:@usn6{`7esn`:Count(*)[.e12..]})<-[:`3esn`|:@usn5*..]->({usn1:0e0[..$@usn5][..$`8esn`],usn1:01[..{`7esn`}][..01234567]})._usn3)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:usn2)Assert {usn2:{`1esn`} Is Not Null}.@usn5! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`5esn`)Assert Exists(Allshortestpaths((@usn6 :usn1:_usn4)<-[?:@usn6|`` *..01234567]->(#usn8 {usn1:$123456789 Starts With `5esn`})-[? *01..07]->(`8esn` :#usn7)).`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`1esn`)Assert (#usn7 :`8esn`:@usn5{`8esn`:False Ends With $``})-[?:@usn6|`` *1000]-(`5esn` :`7esn`)-[? *01..07]->(`8esn` :#usn7).`1esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`4esn`)Assert Filter(_usn3 In {`2esn`} Ends With {12} Ends With 7 Where $7[{`1esn`}]).@usn5 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:usn2)Assert {`6esn`:$_usn3[010..False],_usn4:$123456789 Starts With $123456789 Starts With Count ( * )}._usn4? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`2esn`)Assert Extract(`` In {`1esn`} Starts With @usn6 Where $`7esn`[$``..][999..]|True Is Null Is Null).`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn5:#usn7]-()Assert Exists(Any(`2esn` In {999} Is Not Null Where $usn1[$123456789..0][{`1esn`}..12.0]).`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:_usn3)Assert Exists([`6esn` In Count(*) Ends With $`` Ends With {7} Where $12 Is Not Null]._usn3?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:#usn8)Assert Exists(Filter(`2esn` In {999} Is Not Null Where $``['s_str'..][0x0..]).usn2)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`2esn`)Assert [07 =~$`8esn` =~9e1].usn1 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`8esn`)Assert Exists((#usn8 {`2esn`:{#usn8} =~{999} =~{#usn7}})-[#usn7? *999{`4esn`:#usn8 Is Null}]-(:_usn4{`1esn`:$_usn4 Starts With 's_str' Starts With {7},usn1:#usn8 =~{_usn3} =~``})._usn3)"),
    octest_legacy:ct_string("Create Constraint On(usn2:usn2)Assert Exists((`7esn` {`3esn`:0.0 =~12.e12 =~1.0,`1esn`:$usn1 Starts With {_usn3}})-[ *..0{`4esn`:0.12 Starts With 9e12 Starts With $`1esn`,`4esn`:1000 Is Not Null}]->(:usn1:_usn4{`4esn`:01234567 In $123456789}).`2esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:#usn7]->()Assert Exists([`3esn` In 123.654[1e1..][{#usn8}..]].@usn6!)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:`8esn`]->()Assert Exists([`1esn` In `3esn`[07..] Where 00[07..]|0[$`6esn`...e1][`1esn`..$`7esn`]].`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:usn1)Assert Exists((:``{`1esn`:#usn8 Is Not Null,`5esn`:$@usn6[$0..usn1][0X0123456789ABCDEF..$999]})-[`5esn`?:`2esn`{`2esn`:$7[$`3esn`]}]-(:_usn3{#usn8:\"d_str\" Ends With False Ends With {@usn6}})-[?:_usn3|`8esn` *12..{`8esn`:$999 Ends With {0},`2esn`:`1esn`[Null..]}]-(`6esn` :`2esn`{`7esn`:#usn8 =~{999}}).#usn8?)"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:usn1]-()Assert Exists(Extract(usn1 In 12.e12 In {0} In 9e1 Where {12}[usn2])._usn4!)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn2:`3esn`]-()Assert Exists((:`2esn`{_usn3:00,`2esn`:12e12 Is Not Null})-[`5esn`? *..010{`7esn`:$_usn3 =~{_usn4} =~$`6esn`}]-(#usn7 :@usn6{`8esn`:{@usn6}[True..{_usn3}],`1esn`:07 Is Null})-[?:@usn6|``{#usn7:\"d_str\"[..0.e0],`7esn`:{``} Ends With .e12 Ends With 0.e0}]->(`2esn` :#usn8{@usn6:`7esn` Ends With $_usn3 Ends With usn2,_usn4:{12} Starts With #usn8 Starts With 0e0})._usn3!)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:``]->()Assert Exists([True Is Not Null,12.e12[{@usn5}..][9e1..],$`3esn`[{``}..]].`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`6esn`)Assert Exists(Single(`1esn` In $12 Is Not Null Where {``}[010]).`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`2esn`:`6esn`]-()Assert Exists(Shortestpath((:`2esn`{`6esn`:@usn6[{0}..]})<-[usn2?:usn2|#usn7]->(`4esn` :`4esn`:@usn6{`8esn`:{usn1}[$`8esn`..0.0],_usn4:{123456789}[12..][$12..]})).@usn6?)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:@usn6)Assert Case When #usn8 Is Not Null Then 12.e12 In $0 In $0 Else $`8esn`[..$999][..0] End.@usn5! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`5esn`:#usn7]-()Assert Exists(None(`2esn` In {999} Is Not Null Where {1000}[1000][$usn1]).`4esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:@usn5)Assert None(`1esn` In $12 Is Not Null Where 12.e12[{@usn5}..][9e1..]).`3esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:``]->()Assert Exists(Reduce(`3esn`=1.0 Is Null Is Null,`1esn` In `3esn`[07..]|{`4esn`} In _usn4)._usn4!)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:@usn6)Assert Exists(Reduce(#usn7=$@usn5[..usn2][..$#usn7],_usn3 In {@usn5}[..#usn7]|0.12[Count(*)..][$#usn7..]).`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:`2esn`]-()Assert Exists(`2esn`(Distinct 0Xa[$1000..$123456789]).`3esn`)"),
    octest_legacy:ct_string("Create Constraint On(usn1:_usn3)Assert Exists(Extract(`3esn` In 123.654[1e1..][{#usn8}..] Where $`2esn`[12.e12][$@usn5]|$usn2 Is Null Is Null).@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`2esn`)Assert Exists((:_usn3{0})-[`1esn`?:usn1{@usn6:{`1esn`} Starts With @usn6,usn2:1e1 Contains usn2}]->({@usn5:``[{123456789}..]})<-[`4esn`:`3esn`|:@usn5 *..010]->({`4esn`:12 Starts With {_usn4} Starts With $#usn8}).#usn7?)"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:`2esn`]-()Assert Exists(Single(_usn3 In {@usn5}[..#usn7] Where 9e0 Starts With .e0 Starts With \"d_str\").#usn8!)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:``)Assert Exists([_usn3 In {`2esn`} Ends With {12} Ends With 7 Where $`6esn`[`8esn`][0.0]|00[07..]].`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`4esn`)Assert usn1(12.e12[$`4esn`..]).#usn8! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn6:#usn8)Assert [{1000}].#usn8? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:_usn4)Assert 9e1.`3esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:`2esn`]-()Assert Exists(Filter(`1esn` In $12 Is Not Null Where {@usn5}[1e1..][9e1..]).@usn6!)"),
    octest_legacy:ct_string("Create Constraint On(``:`4esn`)Assert Exists({`2esn`:\"d_str\" Is Null Is Null}.``)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`6esn`)Assert Exists((:``{``:$0[..{usn2}][..$usn1]})<-[`8esn`? *999]->(_usn3 {`1esn`:0.0 Contains $_usn4 Contains {`2esn`},`4esn`:\"d_str\" Is Null Is Null}).`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`8esn`)Assert [_usn4 In 0.0[..{999}][..0.0] Where `5esn`[..9e0][..01234567]].`1esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn1:``]-()Assert Exists(Reduce(`5esn`=$123456789[$`5esn`][$_usn4],`` In {`1esn`} Starts With @usn6|1e1 Contains usn2).#usn7)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:_usn4)Assert Exists(Allshortestpaths(({`5esn`:0Xa[0e0..{#usn7}]})<-[@usn5? *07{`7esn`:1.e1 =~$usn2,`7esn`:$usn1[$123456789..0][{`1esn`}..12.0]}]-(`4esn` :_usn4{`2esn`:#usn7 =~00})).`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`1esn`)Assert Filter(usn1 In 12.e12 In {0} In 9e1).`7esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:_usn3)Assert Reduce(`3esn`=123456789[0..],_usn3 In True[7][$999]|`2esn` Ends With $`4esn` Ends With {#usn7}).`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn6:@usn5]-()Assert Exists(Reduce(_usn3=$`1esn` Is Not Null Is Not Null,`8esn` In $12[{7}..0X0123456789ABCDEF]|$`4esn` Starts With 0e0).`4esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:`2esn`]->()Assert Exists(Reduce(`2esn`=9e0 In .e1 In 1.e1,`8esn` In $12[{7}..0X0123456789ABCDEF]|$`7esn`[$``..][999..]).`3esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`6esn`:`7esn`]-()Assert Exists([_usn4 In 0.0[..{999}][..0.0] Where $`2esn` Is Null Is Null].`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`5esn`)Assert Extract(`1esn` In 0.e0 =~`1esn` =~`6esn` Where $usn1 Starts With {_usn3}|Count ( * )[..12][..{@usn6}]).usn2? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:`3esn`]-()Assert Exists(None(`2esn` In {999} Is Not Null Where 's_str'[.._usn4][..``]).`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`7esn`)Assert Case When 0x0[{7}..] Then 1.e1 =~`2esn` Else `` Ends With $`4esn` Ends With 0X0123456789ABCDEF End.`3esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:#usn7)Assert Exists([_usn4 In 0.0[..{999}][..0.0] Where 12 Ends With 01].`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`7esn`)Assert Single(`2esn` In {999} Is Not Null Where {`5esn`}[$`8esn`..$`1esn`][0.12..0.12]).@usn6! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:``)Assert Exists(Shortestpath(((({#usn8:12 Ends With 01,`8esn`:``[{#usn8}]})<-[`7esn`?:_usn3|`8esn`*..]->(:`8esn`:@usn5{`8esn`:True =~_usn3 =~123456789,usn2:$usn1[$123456789..0][{`1esn`}..12.0]})<-[`1esn`?:_usn4|:usn1*]->(usn1 :`5esn`:@usn5)))).@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:``)Assert Extract(_usn3 In {@usn5}[..#usn7] Where `2esn` Starts With `` Starts With 1e1).`2esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`6esn`)Assert Exists(Reduce(`6esn`=`4esn`[usn1],#usn7 In 123.654 Starts With $``|$`6esn`['s_str'..][{_usn4}..]).`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:``)Assert Filter(_usn4 In `2esn` Where `1esn` =~1000 =~1000)._usn4! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:_usn3)Assert Exists(Case 1.e1 =~`2esn` When Count(*) Is Not Null Then ``[..$#usn7] When {`3esn`}[{`5esn`}] Then \"d_str\" Contains @usn6 Contains 12.e12 Else $12 Contains 0Xa End.``?)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`7esn`)Assert _usn4(Distinct $``[.e12..]).`4esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`6esn`)Assert Exists(Allshortestpaths((usn2 :#usn8{usn1:010 In `1esn`,`5esn`:{`4esn`}[$123456789]})<-[?:`6esn` *07]->(_usn3 {#usn7:1.e1 =~`2esn`,@usn6:$`5esn`[`1esn`][0X0123456789ABCDEF]})<-[`3esn`:`8esn`|:_usn4 *..01234567]->(:`3esn`:`6esn`{`4esn`:{`6esn`} Contains {usn2} Contains $1000,usn2:{#usn8}[12.0][$@usn6]})).usn1!)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:_usn4]-()Assert Exists(Shortestpath((@usn5 :_usn4{_usn4:0X0123456789ABCDEF[$999..][@usn5..],`1esn`:_usn4 Is Null Is Null})-[:`3esn`|:@usn5{@usn5:{`8esn`}[0X7][$`3esn`],_usn4:.e12 Contains $`1esn` Contains $@usn6}]-(usn1 :@usn5)-[``? *01..07{`1esn`:usn2 Ends With Count ( * ) Ends With $@usn6,`1esn`:1.e1[{#usn8}]}]->({#usn8:12 Ends With 01,`8esn`:``[{#usn8}]})).``!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:#usn8)Assert Reduce(usn2={`4esn`}[..07][..$`6esn`],`2esn` In {999} Is Not Null|{12} Starts With #usn8 Starts With 0e0).``! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn6:usn2]-()Assert Exists([{999} Is Not Null,{`7esn`}[0X7..][0x0..]].@usn5)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`5esn`)Assert Exists({@usn6:{7} Contains $123456789}.`8esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[`6esn`:usn1]-()Assert Exists(Case When 0.0 Is Not Null Then 1.e1 =~9e12 =~`4esn` When 9e12 Is Not Null Is Not Null Then $999 Ends With {0} End.`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:``)Assert Exists([1.e1 =~$usn2,1000].``!)"),
    octest_legacy:ct_string("Create Constraint On()<-[`2esn`:@usn5]-()Assert Exists({_usn3:$1000 Is Not Null Is Not Null,_usn3:`5esn`[0xabc..]}.`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`2esn`:#usn7]-()Assert Exists(Any(`5esn` In $`2esn`[12.e12][$@usn5] Where 's_str' Starts With 12e12 Starts With $_usn4)._usn3)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`3esn`)Assert Extract(`1esn` In 0.e0 =~`1esn` =~`6esn` Where True[True..]).usn2? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn3:#usn7]-()Assert Exists(({usn1:{123456789} =~01234567 =~`3esn`})-[_usn3:#usn7|`2esn`]-(_usn3 :#usn8).`5esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`8esn`)Assert Extract(`1esn` In `3esn`[07..] Where 12 Ends With 01|{#usn7}[Count ( * )..12][$`2esn`..`4esn`]).usn1? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:@usn5)Assert Case When Count(*)[.e12..] Then 9e0 Starts With .e0 Starts With \"d_str\" When 0.0[..{999}][..0.0] Then {usn1} =~123.654 =~\"d_str\" Else `3esn`[..{_usn4}][..{@usn5}] End.#usn7 Is Unique"),
    octest_legacy:ct_string("Create Index On:`3esn`(usn2)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:_usn4)Assert [`1esn` In $12 Is Not Null Where {`3esn`}[{`5esn`}]|{`2esn`}[..{@usn6}][..1.e1]].`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:@usn6]-()Assert Exists(Reduce(``=1000,_usn4 In 0.0[..{999}][..0.0]|{`5esn`}[$`8esn`..$`1esn`][0.12..0.12]).`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:usn2)Assert Exists([$0[`7esn`],0.12 Contains 12.0,True Is Null Is Null].``?)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:usn2]->()Assert Exists(Reduce(#usn8=$@usn6[$0..usn1][0X0123456789ABCDEF..$999],`8esn` In $12[{7}..0X0123456789ABCDEF]|$`` Starts With 12 Starts With $usn2).usn2!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:@usn5)Assert Reduce(`8esn`=$@usn6[01..@usn5][0x0..`4esn`],`2esn` In {999} Is Not Null|{#usn8}[$#usn7..]).`7esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:@usn5]-()Assert Exists(#usn7(Distinct `5esn` Is Null Is Null).usn1?)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:usn1)Assert Exists(Case When $7 Ends With 0X7 Then Count(*)[.e12..] Else 00 Ends With `8esn` End.``?)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:``)Assert Exists(None(`3esn` In 123.654[1e1..][{#usn8}..] Where $`2esn`[12.e12][$@usn5]).#usn7)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:_usn4)Assert Filter(`6esn` In 00 Where $`1esn`[#usn8][$@usn5]).`3esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:_usn3]-()Assert Exists(None(`1esn` In $12 Is Not Null Where `8esn`[..`4esn`][..$usn1]).`5esn`)"),
    octest_legacy:ct_string("Create Index On:_usn4(@usn5)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`8esn`)Assert ``(Distinct `1esn` Is Null Is Null,0.0 Contains $_usn4 Contains {`2esn`})._usn3! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`6esn`)Assert {`1esn`:12 Starts With 0x0}.`8esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:#usn7)Assert Any(`2esn` In {999} Is Not Null Where 1e1[{_usn4}..123.654])._usn3! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:_usn4)Assert Case _usn3 Contains .e0 Contains {usn2} When $#usn7[$`4esn`] Then usn2 Ends With Count ( * ) Ends With $@usn6 Else 1e1[..$1000][..999] End.`6esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:_usn4)Assert Allshortestpaths((`6esn` :@usn5{`4esn`:{#usn8}[$#usn7..],`4esn`:0[{@usn5}..][7..]})).usn1 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:``)Assert Filter(`1esn` In $12 Is Not Null Where {``}[010]).`1esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`1esn`)Assert Exists(({#usn7:#usn8 =~{999}})-[_usn3?:usn1 *12..{#usn7:0e0 Contains `3esn` Contains `7esn`}]-({_usn3}).`6esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[``:@usn6]->()Assert Exists(All(usn1 In 12.e12 In {0} In 9e1 Where {12} Contains `7esn` Contains $_usn3).`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On(``:`4esn`)Assert Exists({@usn5:@usn5[$12..\"d_str\"]}.@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On(``:`7esn`)Assert {@usn6:0X0123456789ABCDEF[7...e0][`1esn`..usn2],``:{`7esn`} Is Not Null Is Not Null}.#usn8! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:``)Assert Exists({`1esn`:12 Starts With 0x0}.`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`7esn`)Assert Exists([_usn3 In {`2esn`} Ends With {12} Ends With 7 Where 9e12 Is Not Null].`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On(``:`2esn`)Assert Shortestpath((`4esn` :`6esn`:`8esn`{`7esn`:Count(*)[.e12..]})<-[#usn7?:#usn8|`2esn`]-(usn2 {`8esn`:{@usn6}[0Xa..$@usn6][0..`5esn`],``:{@usn5} Starts With 1.0 Starts With 00})).#usn7 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`2esn`)Assert Single(`1esn` In $12 Is Not Null Where $0[{`2esn`}..{`1esn`}][{@usn5}..$`7esn`]).`2esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:@usn5)Assert Case .e12 Ends With 1000 Ends With 010 When 's_str'[.._usn4][..``] Then Count ( * )[$12..] When {`4esn`}[{`4esn`}..999] Then 07 =~$`8esn` =~9e1 Else {`1esn`} =~{_usn4} End.`1esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:``)Assert Exists([{`2esn`}[Count(*)],0.0 =~12.e12 =~1.0].`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`4esn`)Assert Reduce(usn1=\"d_str\"[..0.e0],`` In {`1esn`} Starts With @usn6|$`6esn`[{`3esn`}..12]).`8esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn4:#usn7)Assert Exists({`2esn`:$`7esn` In 12,`5esn`:True[..010]}.#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:``)Assert Case #usn7 =~{`4esn`} =~123456789 When 1.e1 =~`2esn` Then 0Xa[$1000..$123456789] When $123456789 Starts With $123456789 Starts With Count ( * ) Then 07 Is Null Else $`6esn`[`8esn`][0.0] End.`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:`7esn`]->()Assert Exists(Shortestpath((((:`2esn`{_usn3:00,`2esn`:12e12 Is Not Null})-[?:@usn6|`` *..0Xa]-(_usn4 {`3esn`:\"d_str\"[..0.e0],usn1:$`` In 0 In {1000}})<-[`3esn`]-({_usn4:0.e0[{999}][{`1esn`}]})))).`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:`1esn`]-()Assert Exists(Extract(_usn4 In 0.0[..{999}][..0.0] Where True Starts With $`4esn` Starts With 12e12|`4esn`[usn1]).`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn2:usn2]-()Assert Exists(Filter(`` In {`1esn`} Starts With @usn6 Where {`7esn`}[9e1..][@usn6..]).#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`7esn`)Assert Exists(All(`6esn` In Count(*) Ends With $`` Ends With {7} Where .e12 =~$_usn4).`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:`2esn`]-()Assert Exists(All(#usn7 In 0Xa[@usn5][{`7esn`}] Where 1e1[1.e1..][123.654..]).`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn4:#usn8]-()Assert Exists(Single(`1esn` In 0.e0 =~`1esn` =~`6esn` Where {@usn5} =~_usn4 =~0.12)._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`4esn`)Assert {`1esn`:{123456789}[12..][$12..]}.`5esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:_usn3]->()Assert Exists(@usn5(Distinct $0 Starts With `2esn`).`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`3esn`)Assert Exists([{7}[$123456789..{1000}][$`3esn`..`7esn`],\"d_str\" Ends With False Ends With {@usn6},usn1 Contains $7 Contains $``].usn2)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:@usn5)Assert Extract(_usn4 In `2esn` Where #usn8[`7esn`..]).`1esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[``:`1esn`]-()Assert Exists(Case When 12 Starts With 7 Starts With $`5esn` Then {0} =~12.0 End.`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:``]->()Assert Exists([{@usn6}[True..{_usn3}],$_usn4,$999 Is Null].`3esn`)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`4esn`)Assert Exists([#usn7 In 123.654 Starts With $`` Where {usn2}[$`4esn`]].#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:@usn6)Assert Reduce(@usn5={@usn6}[True..{_usn3}],#usn7 In 123.654 Starts With $``|12.e12 In {0} In 9e1).`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:_usn4]-()Assert Exists({@usn6:07 =~@usn5,_usn4:12e12 Starts With `1esn` Starts With usn2}.`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`7esn`)Assert Filter(`6esn` In Count(*) Ends With $`` Ends With {7} Where `7esn` Starts With 0X7 Starts With $`7esn`).`1esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:usn1)Assert Exists({``:.e1 Ends With {7} Ends With $usn1}.@usn6?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:@usn5)Assert Exists(({`2esn`:$_usn4[$`4esn`..$12]})<-[`3esn`?:usn2|#usn7 *0X0123456789ABCDEF]->(`4esn` :@usn6).#usn7!)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:`3esn`]-()Assert Exists(#usn8(Distinct False Contains $#usn8 Contains 9e1).#usn7?)"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:`2esn`]->()Assert Exists(Reduce(`2esn`=`7esn` Contains {@usn5} Contains $123456789,`6esn` In 00|$@usn6[01..@usn5][0x0..`4esn`]).`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:@usn5]->()Assert Exists(Reduce(_usn4=0Xa Contains Count ( * ),`1esn` In 0.e0 =~`1esn` =~`6esn`|0x0[$`8esn`.._usn3]).usn2)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:@usn5]-()Assert Exists((:`5esn`:@usn5{@usn6:.e1[..{`7esn`}][..{_usn3}]})<-[ *123456789..0X7]-({`6esn`:`2esn` Ends With 12.e12 Ends With `2esn`})._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On()-[``:_usn4]->()Assert Exists([usn1 In 12.e12 In {0} In 9e1 Where $0[`7esn`]|`5esn`[0xabc..]].usn1)"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:usn1]->()Assert Exists(Filter(`1esn` In 0.e0 =~`1esn` =~`6esn` Where 0e0).`7esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:_usn4)Assert Exists(Extract(#usn7 In 123.654 Starts With $`` Where 12.e12[`7esn`]).@usn5)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`5esn`)Assert [`6esn` In Count(*) Ends With $`` Ends With {7} Where $12 Is Not Null]._usn4 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:@usn5)Assert Exists(Extract(#usn7 In 123.654 Starts With $`` Where $999 In 999).`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:usn2)Assert [{``} Starts With 123456789 Starts With usn2].#usn7! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:usn1)Assert {`2esn`:$0[{`2esn`}..{`1esn`}][{@usn5}..$`7esn`],_usn4:#usn8 Is Null}.`7esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`3esn`:`3esn`]-()Assert Exists([9e1[9e1...e0],$999 Contains {7},\"d_str\"[..0.e0]].`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:#usn8]->()Assert Exists(Extract(`6esn` In Count(*) Ends With $`` Ends With {7} Where $usn1 Starts With {_usn3}|{123456789}[12..][$12..]).usn1?)"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:`2esn`]-()Assert Exists([999[12.0..][#usn7..],12.e12 In $0 In $0,1000]._usn3?)"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:`6esn`]-()Assert Exists(Shortestpath(((usn1 :#usn8)<-[`4esn` *..010]->(usn1 :`6esn`:`8esn`))).#usn7!)"),
    octest_legacy:ct_string("Create Constraint On()<-[`7esn`:`2esn`]-()Assert Exists((usn1 :``{`6esn`})<-[?{`5esn`:0X0123456789ABCDEF[9e1..{12}][{0}..$`6esn`],#usn7:{`2esn`} Starts With @usn6}]->(`5esn` {usn2:{`6esn`} Contains 07,`2esn`:{7} Is Null})-[`7esn`? *123456789..0X7{`6esn`:{0}[..{`7esn`}]}]-(`3esn` :usn2:`2esn`{@usn6:9e12 Is Not Null Is Not Null,`4esn`:0Xa Contains {`7esn`} Contains $999}).usn1)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`5esn`)Assert Exists([`7esn` Ends With $_usn3 Ends With usn2].@usn6?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:#usn8)Assert Exists(_usn3().#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`2esn`:@usn5]->()Assert Exists([_usn4 In 0.0[..{999}][..0.0] Where $`2esn` Is Null Is Null].`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`4esn`)Assert [00[..$123456789][..$`5esn`],{_usn3} Contains $`1esn` Contains 12.0].``? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`1esn`)Assert [_usn4 In `2esn` Where {`5esn`}[#usn8..0x0][\"d_str\"..{`4esn`}]|00[Count(*)...e0][$#usn7..0X0123456789ABCDEF]].``! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:usn1)Assert Exists((:`4esn`:@usn6{`7esn`:Count(*)[.e12..]})<-[?:usn2|#usn7]->(#usn8 :#usn7)-[#usn7{usn1:1.0[{999}][$999]}]->(:#usn7{`7esn`:$_usn4[$`4esn`..$12],`3esn`:{`5esn`}[#usn8..0x0][\"d_str\"..{`4esn`}]}).`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:`6esn`]->()Assert Exists([{999} Starts With {12}].#usn7!)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:``)Assert Exists(Single(#usn7 In 0Xa[@usn5][{`7esn`}] Where 12[..$@usn6]).`3esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`4esn`)Assert Exists((_usn4 :usn1:_usn4{`7esn`:{usn2} =~`7esn` =~07})<-[ *0x0..{`2esn`:9e0 In .e1 In 1.e1,usn2:{@usn6}[$`7esn`..][False..]}]->(`3esn` {`1esn`:$`6esn` Starts With 12.e12 Starts With $#usn7})-[_usn4 *0x0..]-(:``$_usn4).#usn8!)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`7esn`)Assert Allshortestpaths(({`7esn`:123456789[0..]})-[`6esn`?:_usn3|`8esn`]->({usn1:0e0[..$@usn5][..$`8esn`],usn1:01[..{`7esn`}][..01234567]})).#usn8 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`8esn`)Assert (`8esn` :#usn8{``:@usn5[$12..\"d_str\"],`4esn`:'s_str'[.._usn4][..``]})<-[`3esn`?:`3esn`|:@usn5 *0x0..]->(usn1 :`6esn`:`8esn`)-[#usn7? *999{`4esn`:#usn8 Is Null}]->(@usn6 :usn1:_usn4{`5esn`:{`1esn`} =~{_usn4},`5esn`:_usn4 Is Null Is Null}).`6esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[``:`2esn`]-()Assert Exists(Case $usn1 =~010 =~07 When $`2esn`[$usn2..][{``}..] Then .e1[0.12] End._usn4)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`1esn`)Assert [01234567[..9e1],``[{#usn8}],12e12 Is Not Null Is Not Null]._usn3! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn7:`4esn`]-()Assert Exists(Case `6esn` Ends With 2.12 Ends With @usn6 When 00[..$123456789][..$`5esn`] Then True =~{`1esn`} When {`3esn`} Starts With 0X0123456789ABCDEF Starts With `5esn` Then 0.0 Is Not Null End.`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`1esn`:_usn4]-()Assert Exists(@usn5(Distinct 9e1[$_usn4..0xabc],.e12 Ends With 1000 Ends With 010).usn1!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`8esn`)Assert Allshortestpaths((_usn3 :_usn3)-[?:#usn7|`2esn` *0x0..]->(_usn3 {#usn7:1.e1 =~`2esn`,@usn6:$`5esn`[`1esn`][0X0123456789ABCDEF]})<-[:@usn5|:`7esn`{`8esn`:12e12 Starts With `1esn` Starts With usn2}]->(:`6esn`:`8esn`$usn2))._usn4! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`7esn`:@usn6]->()Assert Exists({usn1:0e0[0X0123456789ABCDEF..010][$@usn6..010]}.`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:#usn8)Assert Exists([_usn4 In `2esn` Where 9e12 Ends With 123456789].@usn6!)"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:`4esn`]-()Assert Exists(Reduce(@usn5=12.e12[``..usn2][{#usn7}..@usn5],#usn7 In 0Xa[@usn5][{`7esn`}]|$`2esn`[$usn2..][{``}..]).`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:@usn5)Assert Exists(Single(_usn3 In {@usn5}[..#usn7] Where `5esn`[0xabc..]).`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`6esn`)Assert Exists(Extract(`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where 0x0[{999}..][{_usn4}..]|{12}[00..{@usn6}][1.e1..0]).@usn6?)"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:_usn4]-()Assert Exists(Shortestpath((((_usn3 :`4esn`:@usn6{`3esn`:0e0[$#usn8...e12],`2esn`:{usn1} In Count ( * )})-[?:usn2|#usn7]-(`1esn` {#usn7:Count ( * )[$12..]})<-[?:#usn8|`2esn`{_usn4:{usn1} In Count ( * )}]->(_usn4 {_usn3:`1esn`[..00][..{7}]})))).`3esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`6esn`)Assert None(_usn4 In `2esn` Where .e1[0.12]).`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:``]->()Assert Exists(None(_usn3 In {@usn5}[..#usn7] Where {`4esn`}[{`1esn`}][{1000}]).``!)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`3esn`)Assert Extract(_usn4 In `2esn` Where {_usn3}[$usn2..]|9e1[9e1...e0]).``? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:_usn4)Assert Exists(None(_usn3 In {`2esn`} Ends With {12} Ends With 7 Where $`6esn`[{`3esn`}..12]).#usn8)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:usn2)Assert Exists({usn1:True Is Not Null}.`7esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:_usn3)Assert Exists(All(_usn4 In `2esn` Where 9e12 Ends With 123456789).usn2!)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:_usn4)Assert Exists({usn2:{1000} Ends With {`8esn`}}._usn4)"),
    octest_legacy:ct_string("Drop Constraint On(``:`3esn`)Assert Exists({`7esn`:{@usn5}[..#usn7],@usn6:{_usn3}[`3esn`..$#usn8]}.`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:@usn5)Assert Exists(Extract(#usn7 In 0Xa[@usn5][{`7esn`}] Where $0[_usn4..{`3esn`}][$#usn7..$#usn7]|$`7esn` Contains {`1esn`} Contains 9e12).``)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`3esn`)Assert Exists([`1esn` In 0.e0 =~`1esn` =~`6esn`].#usn7)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:`3esn`]->()Assert Exists((:usn2:`2esn`)<-[{`2esn`:@usn5[$12..\"d_str\"]}]-(@usn6 :usn1:_usn4)<-[``?:#usn8|`2esn`]->(:`8esn`:@usn5).#usn7)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn7:`2esn`]->()Assert Exists(Single(`1esn` In 0.e0 =~`1esn` =~`6esn` Where {@usn5} =~_usn4 =~0.12)._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:#usn8)Assert {#usn7:`5esn`[..9e0][..01234567],#usn7:1e1[..$1000][..999]}.#usn8 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:usn1)Assert Exists([`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where 0e0[$#usn8...e12]].`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:``)Assert [usn1 In 12.e12 In {0} In 9e1 Where .e12 =~$_usn4|0.e0 Ends With False].#usn8! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:usn1]-()Assert Exists((`4esn` {`2esn`:@usn5[$12..\"d_str\"]})<-[`2esn`:`5esn` *0x0..{`4esn`:{`5esn`}[#usn8..0x0][\"d_str\"..{`4esn`}],@usn6:0X0123456789ABCDEF[7...e0][`1esn`..usn2]}]-(`8esn` {@usn5:$@usn6 Starts With $@usn5,`6esn`:@usn5[..$@usn5][..0Xa]})<-[`6esn`?:#usn8|`2esn`*..{`5esn`:@usn5 =~'s_str'}]->({`6esn`:{12} Contains `7esn` Contains $_usn3,@usn6:`2esn`[$1000..9e12][{#usn8}..{7}]}).#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`2esn`)Assert Exists(Case {_usn3} Contains True Contains 0X7 When ``[{123456789}..] Then `1esn` =~1000 =~1000 When #usn8 =~{_usn3} =~`` Then 7 Contains `2esn` Contains $`8esn` End.`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:@usn5]->()Assert Exists((:`4esn`:@usn6{`1esn`:{12}[00..{@usn6}][1.e1..0],usn1:``[..0X0123456789ABCDEF]})<-[@usn5?:`8esn`|:_usn4 *0X0123456789ABCDEF{usn1:False Contains $#usn8 Contains 9e1}]->(usn2 :`4esn`:@usn6)<-[`5esn`{`6esn`:12 Is Not Null Is Not Null,`8esn`:`3esn` Is Not Null Is Not Null}]->(_usn3 {@usn5:.e12 =~.e0}).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:``)Assert [`8esn` In $12[{7}..0X0123456789ABCDEF] Where $@usn6[01..@usn5][0x0..`4esn`]].`2esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[``:`2esn`]->()Assert Exists(Any(`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where $`8esn`[..$999][..0]).`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:`4esn`]-()Assert Exists(Filter(_usn4 In 0.0[..{999}][..0.0] Where True Starts With $`4esn` Starts With 12e12).@usn5!)"),
    octest_legacy:ct_string("Create Constraint On(``:@usn5)Assert Exists({``:`3esn` =~9e0 =~@usn6}.`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:``]->()Assert Exists(None(`6esn` In Count(*) Ends With $`` Ends With {7} Where 1000 Is Null).`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:@usn6)Assert Reduce(`4esn`=`3esn`[..{_usn4}][..{@usn5}],`2esn` In {999} Is Not Null|123456789 Starts With {@usn6} Starts With $12).usn2 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`4esn`)Assert Exists(Case When 9e1 Ends With $@usn5 Ends With $123456789 Then usn2[True] When .e12 =~$_usn4 Then $7 Is Null Is Null Else .e1 Ends With 0Xa Ends With .e1 End.usn1!)"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:usn2]->()Assert Exists(Any(`3esn` In 123.654[1e1..][{#usn8}..]).usn2!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`7esn`)Assert Single(`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where False Contains 0.e0 Contains Count(*)).usn1! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:#usn7]-()Assert Exists([`7esn` Ends With $_usn3 Ends With usn2].@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn6:`7esn`]->()Assert Exists(Case #usn7 =~{`4esn`} =~123456789 When Count(*) Starts With $usn1 Starts With {usn2} Then $`6esn`[{`3esn`}..12] End.@usn5)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:#usn8)Assert Exists([`8esn` In $12[{7}..0X0123456789ABCDEF] Where {@usn6} Contains 123.654 Contains 01].`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:_usn4)Assert Exists(Single(_usn4 In 0.0[..{999}][..0.0]).`5esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn6:@usn6]-()Assert Exists(Shortestpath((((:@usn5{#usn8:$`` Starts With 12 Starts With $usn2,`1esn`:00})<-[{#usn7:'s_str'[_usn4..0x0]}]-(:`6esn`:`8esn`{`5esn`:$12 Is Not Null Is Not Null,`4esn`:{@usn5}[..@usn6]})<-[ *0x0..{`2esn`:9e0 In .e1 In 1.e1,usn2:{@usn6}[$`7esn`..][False..]}]->(`2esn` :_usn3{`8esn`:usn1 Contains $7 Contains $``})))).usn2!)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:@usn5)Assert Exists(Shortestpath(((:`2esn`{`6esn`:_usn3 Contains .e0 Contains {usn2}})<-[@usn5{`7esn`:123456789[0..]}]->(`7esn` {`5esn`:1.e1[..12.e12][..$usn2]})<-[? *..0Xa]->(`1esn` :`4esn`:@usn6))).`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`1esn`)Assert Exists([$@usn6[$0..usn1][0X0123456789ABCDEF..$999]].`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:usn2)Assert {`5esn`:12.e12[{7}..7],_usn4:`2esn` Starts With `` Starts With 1e1}.`3esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:``)Assert Exists(_usn3(usn2[`7esn`..{`3esn`}][$7..{#usn7}],.e1[..{`7esn`}][..{_usn3}]).#usn7)"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:`8esn`]->()Assert Exists(Extract(_usn4 In 0.0[..{999}][..0.0] Where Count(*)[.e12]|_usn4[Count(*)]).@usn5?)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`3esn`)Assert Exists((:_usn3$usn1)<-[`1esn`?:_usn4|:usn1*]->(usn1 :`5esn`:@usn5)-[?{``:{#usn8} =~{999} =~{#usn7},``:usn1 Is Null Is Null}]-(_usn4 {`2esn`:$0[{`2esn`}..{`1esn`}][{@usn5}..$`7esn`],_usn4:#usn8 Is Null}).#usn7)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`2esn`)Assert Exists(usn1({usn1}[$7..0x0]).`2esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[`3esn`:usn1]-()Assert Exists([9e1 Ends With $@usn5 Ends With $123456789].`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`6esn`)Assert Exists(All(_usn3 In {@usn5}[..#usn7] Where {`4esn`}[{`1esn`}][{1000}]).`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn8:`7esn`]->()Assert Exists(All(#usn7 In 123.654 Starts With $`` Where _usn3 Contains .e0 Contains {usn2}).@usn6!)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`2esn`)Assert Exists([12.e12[{7}..7]]._usn3)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`3esn`)Assert [{``}[_usn4..$`1esn`],9e0[#usn8]].`7esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`6esn`)Assert Exists(``(True[True..],$_usn4).`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:_usn4)Assert Exists(Allshortestpaths(((@usn6 :`2esn`)))._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`8esn`)Assert Exists({@usn5:0 Contains $usn2 Contains 12e12,`2esn`:12e12}.usn2?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`4esn`:@usn5]-()Assert Exists(#usn7(``[$0..][`1esn`..],{7} Starts With $usn1 Starts With 1.0).usn1?)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`2esn`)Assert Exists([`5esn` In $`2esn`[12.e12][$@usn5] Where $``[.e12..]].``)"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn4:@usn5]-()Assert Exists(@usn5(Distinct 9e12 Is Not Null).``?)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:usn1]-()Assert Exists(Reduce(`8esn`=999 Starts With 's_str',`2esn` In {999} Is Not Null|{12} Contains 9e0).#usn8!)"),
    octest_legacy:ct_string("Create Constraint On()-[usn2:`6esn`]->()Assert Exists([_usn3 In {`2esn`} Ends With {12} Ends With 7|Count ( * )[$12..]].`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:@usn6)Assert Extract(`1esn` In $12 Is Not Null Where 0X0123456789ABCDEF[7...e0][`1esn`..usn2]).#usn8 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:_usn3)Assert Exists(None(`1esn` In 0.e0 =~`1esn` =~`6esn` Where True[True..]).usn2?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`3esn`)Assert Allshortestpaths(((({`7esn`:0.12 Starts With 9e12 Starts With $`1esn`})<-[?:``]-(`1esn` :#usn7)-[?:`4esn`|:#usn7]->(_usn3 :#usn8{`6esn`:{`3esn`}[$``..#usn7][0X0123456789ABCDEF..`2esn`]})))).`5esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`2esn`)Assert Case When 123.654[1e1..][{#usn8}..] Then .e12[$7..][{`6esn`}..] When _usn4 Is Null Then {`1esn`} In 12.e12 In 9e1 End.usn2? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:_usn4]-()Assert Exists(Any(`1esn` In `3esn`[07..] Where `7esn`[0..$usn2][{usn2}..0.e0]).#usn7)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:usn2]->()Assert Exists((@usn6 {`2esn`:{@usn6}[$`7esn`..][False..]})<-[usn1?:`6esn` *12..{`6esn`:999 Starts With $123456789 Starts With {``}}]->({_usn4}).@usn6)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:#usn8]->()Assert Exists(None(`6esn` In 00 Where 0.12[..$`6esn`][..$1000]).`2esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[``:_usn4]->()Assert Exists(Case When 00[Count(*)...e0][$#usn7..0X0123456789ABCDEF] Then $usn1 In 01234567 In .e1 End._usn3)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:usn2)Assert [_usn3 In {`2esn`} Ends With {12} Ends With 7 Where 9e12 Is Not Null].`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`6esn`:`6esn`]-()Assert Exists([True Is Not Null,0e0 Contains 9e12,$`6esn`[{`3esn`}..12]].`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:_usn3)Assert Exists(Any(`5esn` In $`2esn`[12.e12][$@usn5] Where $1000[..$999]).``)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn7:`5esn`]->()Assert Exists(All(`2esn` In {999} Is Not Null Where $0[{`2esn`}..{`1esn`}][{@usn5}..$`7esn`]).`3esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn5:@usn5]-()Assert Exists(Extract(#usn7 In 123.654 Starts With $`` Where 12.e12[`7esn`]).@usn5)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:``)Assert Exists({usn1:{`4esn`}[$123456789]}.`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn8:`3esn`]-()Assert Exists(Reduce(`6esn`={usn2} =~@usn6 =~{`4esn`},_usn3 In {`2esn`} Ends With {12} Ends With 7|{_usn3} Contains True Contains 0X7)._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:``)Assert Shortestpath(((:`5esn`:@usn5{`5esn`:`7esn` Contains `5esn` Contains 0X7}))).`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`2esn`)Assert Exists(Filter(`2esn` In {999} Is Not Null Where $7 Ends With $`8esn`).`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:`8esn`]-()Assert Exists(Filter(#usn7 In 0Xa[@usn5][{`7esn`}] Where #usn7 Starts With $999).`4esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`6esn`)Assert All(`8esn` In $12[{7}..0X0123456789ABCDEF] Where $`5esn`[$#usn7..][0xabc..]).#usn7? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`7esn`)Assert Exists(None(_usn4 In 0.0[..{999}][..0.0] Where {999}[$123456789..][12..]).`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`3esn`)Assert Case $usn1[@usn6][#usn7] When 12.0[2.12..][{`5esn`}..] Then 0X0123456789ABCDEF[0X7..] When {`6esn`}[..{`2esn`}] Then {`5esn`} Contains 's_str' Contains 9e1 Else 00 Starts With $`6esn` End.`8esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:@usn6]->()Assert Exists(Filter(`1esn` In 0.e0 =~`1esn` =~`6esn` Where {@usn5} =~_usn4 =~0.12).`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On(``:_usn3)Assert Filter(_usn3 In {@usn5}[..#usn7] Where $7 Is Null Is Null).`5esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:`3esn`]->()Assert Exists(Reduce(`2esn`=.e1[0.12],#usn7 In 0Xa[@usn5][{`7esn`}]|0Xa[0e0..{#usn7}]).#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:``)Assert Extract(_usn4 In 0.0[..{999}][..0.0] Where $`` Is Null|{0} =~12.0).`7esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:`7esn`]->()Assert Exists(None(#usn7 In 0Xa[@usn5][{`7esn`}] Where $0 In _usn4).``)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`6esn`)Assert Exists(Extract(_usn3 In {`2esn`} Ends With {12} Ends With 7 Where $@usn6[01..@usn5][0x0..`4esn`]).`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:``)Assert Exists([`` In {`1esn`} Starts With @usn6 Where 0.0 =~12.e12 =~1.0|Count(*)[.e12..]].`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:usn2)Assert None(`1esn` In $12 Is Not Null Where 0X0123456789ABCDEF[7...e0][`1esn`..usn2])._usn4! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`2esn`:@usn5]-()Assert Exists([`6esn` In Count(*) Ends With $`` Ends With {7} Where `1esn` =~1000 =~1000|$7 Ends With 0X7]._usn4)"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:`8esn`]->()Assert Exists(#usn8(Distinct 9e1[$_usn4..0xabc],123.654 Ends With usn2 Ends With 0).usn1)"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:#usn7]-()Assert Exists(Any(`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where 0x0[{999}..][{_usn4}..])._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:_usn4)Assert Case When $`` Is Null Then 0.12 Ends With {1000} Ends With `6esn` When True[7][$999] Then 0Xa Contains Count ( * ) End._usn3 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:_usn4]->()Assert Exists([_usn3 In True[7][$999] Where {usn2}|`8esn`[..`4esn`][..$usn1]].usn2)"),
    octest_legacy:ct_string("Create Constraint On(usn1:`5esn`)Assert Reduce(`1esn`={`3esn`} Is Not Null Is Not Null,_usn3 In True[7][$999]|.e12 Ends With 1000 Ends With 010).`2esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:#usn8)Assert Exists(`8esn`(Distinct).@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`4esn`)Assert {#usn7:9e12 Ends With 123456789}.@usn5! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`2esn`:#usn7]-()Assert Exists(Any(`5esn` In $`2esn`[12.e12][$@usn5] Where 's_str' Starts With 12e12 Starts With $_usn4)._usn3)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:_usn4)Assert Exists(Any(`8esn` In $12[{7}..0X0123456789ABCDEF] Where {12}[00..{@usn6}][1.e1..0]).``)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:`8esn`]-()Assert Exists(All(`6esn` In 00 Where {usn1} Ends With {`6esn`} Ends With 123456789).`4esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:usn1)Assert Exists(Extract(`1esn` In 0.e0 =~`1esn` =~`6esn`|Count ( * ) Starts With 010 Starts With 0x0).`8esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[``:usn2]->()Assert Exists(Extract(`8esn` In $12[{7}..0X0123456789ABCDEF] Where 12 Starts With {_usn4} Starts With $#usn8|@usn5 Is Not Null Is Not Null)._usn3!)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`7esn`)Assert `7esn`(Distinct {usn1}[$7..0x0]).`6esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:usn2)Assert Exists(Extract(_usn4 In 0.0[..{999}][..0.0] Where Count(*)[.e12]|$``[..1.e1][..12]).`5esn`)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`4esn`)Assert Exists(Reduce(#usn8=12e12 Is Not Null Is Not Null,@usn5 In Null =~12e12|$`4esn` Starts With 0e0 Starts With _usn3).`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:`4esn`]->()Assert Exists(Single(`` In {`1esn`} Starts With @usn6 Where 12.e12 In {0} In 9e1).``?)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`2esn`)Assert `8esn`.@usn5? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`4esn`)Assert Exists(None(#usn7 In 123.654 Starts With $`` Where Count(*)[010..][#usn7..]).#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:_usn4]->()Assert Exists(None(`3esn` In 123.654[1e1..][{#usn8}..] Where $`2esn`[12.e12][$@usn5]).#usn7)"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:``]-()Assert Exists(Allshortestpaths((:_usn4{`1esn`:{123456789}[12..][$12..]})).`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`4esn`)Assert Exists((@usn5 :usn1:_usn4)<-[``? *1000]->(:`4esn`:@usn6{usn1:07 Is Null,@usn6:{_usn3}[$usn2..]}).`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`3esn`)Assert Exists({`3esn`:0.0 =~12.e12 =~1.0,`1esn`:$usn1 Starts With {_usn3}}.`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`5esn`)Assert Case {@usn5}[..#usn7] When $@usn6 Starts With {`1esn`} Starts With 12 Then {usn1} Ends With {`6esn`} Ends With 123456789 End.`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:usn1)Assert Exists(({``:$0[..{usn2}][..$usn1]})<-[:#usn8|`2esn` *12..{`5esn`:.e12 =~$_usn4}]->(`` {`5esn`:0[`4esn`][12.e12],_usn4:00})-[?:`7esn`]->(#usn7 :@usn6).@usn5?)"),
    octest_legacy:ct_string("Create Constraint On(``:``)Assert Case When Count(*)[..``][..#usn8] Then {0}[..{`7esn`}] End._usn3? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn5:`1esn`]-()Assert Exists(Filter(`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where .e12 Is Null Is Null)._usn3?)"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:`4esn`]->()Assert Exists(None(_usn3 In True[7][$999] Where $`3esn`[{``}..]).`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:_usn4)Assert Exists({_usn4:Count ( * ) Starts With 010 Starts With 0x0,_usn3:0x0 Ends With {``}}.@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn5:_usn4]-()Assert Exists(Reduce(`2esn`=Count(*) Starts With $usn1 Starts With {usn2},#usn7 In 0Xa[@usn5][{`7esn`}]|`2esn` Ends With 12.e12 Ends With `2esn`).`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn8:@usn6]-()Assert Exists(Case `5esn`[..9e0][..01234567] When 1e1[1.e1..][123.654..] Then True =~{`1esn`} End.`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On()<-[`7esn`:`7esn`]-()Assert Exists([`5esn` In $`2esn`[12.e12][$@usn5] Where 12[..$@usn6]].`3esn`)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:usn1)Assert Case When {#usn7} In Count ( * ) In $#usn8 Then $usn1 Starts With {_usn3} Else ``[{#usn8}] End.#usn7 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn6:`4esn`]->()Assert Exists(Reduce(`4esn`=9e1 Ends With Count(*) Ends With False,`2esn` In {999} Is Not Null|0X7[0.e0][{`4esn`}]).`7esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:#usn8]->()Assert Exists(Extract(_usn3 In {@usn5}[..#usn7] Where $1000 Is Not Null Is Not Null|7 Contains `2esn` Contains $`8esn`).``?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`1esn`:usn2]-()Assert Exists(All(`6esn` In 00 Where $12 Is Not Null).`4esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[`1esn`:_usn3]-()Assert Exists(Extract(`` In {`1esn`} Starts With @usn6 Where 0X0123456789ABCDEF[{_usn4}..9e12][$`6esn`..1.0]|{@usn5}[Count(*)..]).`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:_usn4)Assert Exists(Reduce(`5esn`={_usn3} Contains $`1esn` Contains 12.0,`8esn` In $12[{7}..0X0123456789ABCDEF]|123456789 Is Not Null Is Not Null).`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn6:`4esn`]-()Assert Exists([`1esn` In `3esn`[07..] Where $`1esn`[..{_usn3}]].`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On(usn1:@usn6)Assert Reduce(`5esn`=12.e12[2.12..][0xabc..],_usn4 In `2esn`|9e12 Ends With 123456789).`4esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`6esn`)Assert [$usn1[..'s_str'][..$#usn8],$`` Is Null,{#usn8} =~{999} =~{#usn7}].#usn8 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`7esn`)Assert _usn4(Distinct {999}[$123456789..][12..],0.e0[{999}][{`1esn`}]).usn2 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:usn1]-()Assert Exists(usn2(Distinct $usn2 =~\"d_str\" =~_usn3).`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`3esn`)Assert Exists(Allshortestpaths((({#usn7:#usn8 =~{999}})-[?{`5esn`:0X0123456789ABCDEF[9e1..{12}][{0}..$`6esn`],#usn7:{`2esn`} Starts With @usn6}]-(:`7esn`{``:123456789 Ends With usn1 Ends With usn2}))).usn1!)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`2esn`)Assert Exists(Case When {_usn3}[..$`8esn`] Then 1.e1[..12.e12][..$usn2] End.``?)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:#usn7)Assert Exists(Filter(`1esn` In `3esn`[07..] Where 12 Starts With {_usn4} Starts With $#usn8).`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`6esn`)Assert [usn1 In 12.e12 In {0} In 9e1 Where `4esn` Contains #usn8 Contains 7|usn2[`7esn`..{`3esn`}][$7..{#usn7}]].`5esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:_usn3)Assert Exists({#usn7:$0[$1000..00][{0}..{usn1}],#usn7:$`6esn`['s_str'..][{_usn4}..]}.#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`6esn`)Assert (#usn8 {``:@usn5[$12..\"d_str\"],`4esn`:'s_str'[.._usn4][..``]})<-[`6esn` *..7$0]->({#usn7:12 Starts With 7 Starts With $`5esn`,`3esn`:1000})._usn3! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:@usn6)Assert Exists(Allshortestpaths((usn2 {#usn8:123456789 Starts With {@usn6} Starts With $12,_usn3:07[..`6esn`][..'s_str']})-[?:@usn6|``]-(:_usn4{`1esn`:{123456789}[12..][$12..]})).@usn5)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:@usn6)Assert Shortestpath(((usn1 :`5esn`:@usn5)-[?{@usn6:@usn6[{0}..],``:$usn1[0X7]}]-(:usn2:`2esn`{usn1:$7 Is Null Is Null})-[? *01..07]->(@usn6 :`8esn`:@usn5{`6esn`:{`6esn`}[..{`2esn`}],`5esn`:_usn4[Count(*)]}))).`1esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:_usn4)Assert Exists([{999} Starts With {_usn4} Starts With 00,$@usn5 In 's_str' In $12]._usn3?)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:@usn5)Assert Exists(None(`1esn` In `3esn`[07..] Where $@usn5[..usn2][..$#usn7]).@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:@usn6)Assert Extract(`3esn` In 123.654[1e1..][{#usn8}..] Where $`5esn`[..{`2esn`}][..{0}]|`3esn` Is Not Null Is Not Null).#usn7! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`7esn`)Assert Exists(Extract(`` In {`1esn`} Starts With @usn6 Where {`2esn`}[..{@usn6}][..1.e1]|True =~{`1esn`})._usn4!)"),
    octest_legacy:ct_string("Create Constraint On()<-[`1esn`:@usn5]-()Assert Exists(Any(`` In {`1esn`} Starts With @usn6 Where 12.e12 In {0} In 9e1).`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn7:`5esn`]-()Assert Exists(Reduce(`8esn`={`4esn`}[$123456789],`6esn` In 00|#usn7 =~{`4esn`} =~123456789).usn1?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:``)Assert Extract(_usn4 In 0.0[..{999}][..0.0] Where $usn1[$123456789..0][{`1esn`}..12.0])._usn3! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`7esn`)Assert Exists([`5esn` Is Null Is Null,{0}[False..@usn5]].`4esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn2:`1esn`]-()Assert Exists([`1esn` In `3esn`[07..] Where {`4esn`}[{`4esn`}..999]|0e0[..$@usn5][..$`8esn`]].`3esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:`8esn`]-()Assert Exists([123.654 Ends With usn2 Ends With 0,{#usn7}[Count ( * )..12][$`2esn`..`4esn`]].`4esn`?)"),
    octest_legacy:ct_string("Create Constraint On(usn1:@usn5)Assert Case When 9e12 Is Not Null Is Not Null Then .e12 Ends With 1000 Ends With 010 Else `1esn` Is Null Is Null End._usn4! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn6:#usn8)Assert Exists({``:$1000 Is Not Null Is Not Null}.`3esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`2esn`)Assert Extract(`5esn` In $`2esn`[12.e12][$@usn5]|$_usn4 Contains {#usn7} Contains `1esn`).#usn8 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn4:@usn5)Assert Case {@usn5} =~_usn4 =~0.12 When 9e1[123456789..] Then 9e0 In .e1 In 1.e1 Else 12 Ends With 01 End.#usn7! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:`4esn`]-()Assert Exists([`3esn` In 123.654[1e1..][{#usn8}..] Where 9e12[$`5esn`]].`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:_usn3)Assert Exists([{7}[$7..],``[..$#usn7],01234567[$7..{12}]].#usn8)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:`4esn`]-()Assert Exists(Reduce(`5esn`=$999 In 999,`` In {`1esn`} Starts With @usn6|$`1esn`[$12][Count ( * )]).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:`1esn`]-()Assert Exists((#usn7 {usn1:$#usn7 =~{12} =~False,#usn7:0x0 =~123.654 =~{999}})-[?:#usn7|`2esn` *0x0..]->(_usn3 {#usn7:1.e1 =~`2esn`,@usn6:$`5esn`[`1esn`][0X0123456789ABCDEF]}).usn2!)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`4esn`)Assert Reduce(#usn8=07 Is Null,`5esn` In $`2esn`[12.e12][$@usn5]|$`` In 0 In {1000}).@usn5? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:_usn3)Assert Exists(`6esn`(Distinct).usn2?)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`8esn`)Assert All(`6esn` In Count(*) Ends With $`` Ends With {7} Where .e1 Contains $`3esn`).usn1 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`2esn`)Assert Exists(`3esn`(Distinct {usn2} =~@usn6 =~{`4esn`}).@usn6?)"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn7:#usn7]-()Assert Exists([`2esn` Ends With $`4esn` Ends With {#usn7},'s_str'[..0X7],{#usn8} =~{999} =~{#usn7}].#usn8?)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:@usn6]->()Assert Exists(Extract(`3esn` In 123.654[1e1..][{#usn8}..] Where .e1[0.12]|0.12[Count(*)..][$#usn7..]).`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:#usn7)Assert Exists(Filter(#usn7 In 0Xa[@usn5][{`7esn`}] Where $usn1 In 01234567 In .e1)._usn4!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`6esn`)Assert Reduce(`3esn`=#usn7 Starts With 1000 Starts With .e1,@usn5 In Null =~12e12|.e1 Ends With {7} Ends With $usn1).`7esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:_usn3]-()Assert Exists({`3esn`:{7} Starts With $usn1 Starts With 1.0,usn2:{@usn5}[..{12}][..0x0]}.`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On(``:`4esn`)Assert Reduce(@usn6=Count(*) Starts With $usn1 Starts With {usn2},`3esn` In 123.654[1e1..][{#usn8}..]|$`8esn` In $`2esn` In {7}).`7esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`6esn`)Assert Exists(Filter(`8esn` In $12[{7}..0X0123456789ABCDEF] Where 2.12 In $`8esn` In {`7esn`}).@usn5?)"),
    octest_legacy:ct_string("Create Constraint On(``:@usn5)Assert Exists(Case When $12[{7}..0X0123456789ABCDEF] Then #usn7 Starts With 1000 Starts With .e1 When .e12 =~.e0 Then \"d_str\" Contains @usn6 Contains 12.e12 End.`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[``:_usn4]-()Assert Exists({@usn6:0X0123456789ABCDEF[7...e0][`1esn`..usn2],``:{`7esn`} Is Not Null Is Not Null}.#usn8!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`7esn`)Assert Filter(@usn5 In Null =~12e12 Where 1.e1 Starts With $`2esn` Starts With $0).usn2 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`4esn`)Assert Extract(`3esn` In 123.654[1e1..][{#usn8}..] Where usn2[`7esn`..{`3esn`}][$7..{#usn7}]|1e1[..01]).`6esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:@usn6)Assert [`3esn` In 123.654[1e1..][{#usn8}..] Where {_usn3}[..$`8esn`]|\"d_str\" =~`1esn` =~{`5esn`}].usn2! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:#usn8]-()Assert Exists(Extract(_usn3 In {`2esn`} Ends With {12} Ends With 7 Where `1esn` =~1000 =~1000)._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:`7esn`]-()Assert Exists(Filter(#usn7 In 123.654 Starts With $`` Where $0[_usn4..{`3esn`}][$#usn7..$#usn7]).usn1)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:`8esn`]->()Assert Exists(None(`8esn` In $12[{7}..0X0123456789ABCDEF] Where {`2esn`}[Count(*)]).@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On(``:@usn6)Assert Filter(`5esn` In $`2esn`[12.e12][$@usn5] Where 's_str'[.._usn4][..``]).@usn5? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`3esn`)Assert Exists((`1esn` :@usn6)<-[@usn5:_usn4|:usn1*]->(:@usn5)<-[`2esn`:#usn8|`2esn` *0xabc..7]-(usn1 :#usn8).`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`5esn`)Assert Filter(`8esn` In $12[{7}..0X0123456789ABCDEF] Where {`2esn`}[Count(*)]).@usn6? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:usn2)Assert Exists(Case `1esn` In 07 When 0.e0 =~`1esn` =~`6esn` Then 0x0 Ends With {``} When {usn1}[$7..0x0] Then _usn3[\"d_str\"] End.`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`4esn`)Assert (@usn5 :usn1:_usn4)<-[:`6esn`{`2esn`:0.0 Contains $_usn4 Contains {`2esn`},`6esn`:``[..$#usn7]}]->({_usn4:False[0Xa..$usn1]})<-[``{`3esn`:{`3esn`}[{`5esn`}]}]-({@usn5:``[{123456789}..]}).`4esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:`6esn`)Assert Exists({`6esn`:`3esn`[..{_usn4}][..{@usn5}],`2esn`:$`5esn`[`1esn`][0X0123456789ABCDEF]}.`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(``:``)Assert Case {`5esn`}[#usn8..0x0][\"d_str\"..{`4esn`}] When `8esn` Starts With {123456789} Then {`1esn`} Is Not Null When {0}[..{`7esn`}] Then {1000}[{#usn8}] End.usn2 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:@usn5)Assert All(_usn4 In `2esn` Where 9e12 Is Not Null Is Not Null).#usn7? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:`5esn`]->()Assert Exists([7[1000.._usn3][9e0..\"d_str\"],123.654[1e1..][{#usn8}..],`6esn` Is Null Is Null].`7esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`2esn`)Assert All(`1esn` In $12 Is Not Null Where 12 Is Not Null).usn2! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:@usn5]->()Assert Exists(`4esn`({`2esn`} Starts With @usn6,{`2esn`}[..{@usn6}][..1.e1]).`3esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:_usn4)Assert Exists(`8esn`({@usn5}[..#usn7]).@usn6!)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:_usn3)Assert [9e1[9e1...e0],$999 Contains {7},\"d_str\"[..0.e0]].usn2! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`8esn`)Assert Exists({#usn7:\"d_str\"[..0.e0],`7esn`:{``} Ends With .e12 Ends With 0.e0}.@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`1esn`)Assert Exists(Filter(_usn3 In {@usn5}[..#usn7] Where {_usn4} Is Null).@usn6!)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:#usn7)Assert Exists(Shortestpath((((#usn7 :@usn6{`8esn`:{@usn6}[True..{_usn3}],`1esn`:07 Is Null})-[ *..0{`4esn`:0.12 Starts With 9e12 Starts With $`1esn`,`4esn`:1000 Is Not Null}]->(:usn1:_usn4{`4esn`:01234567 In $123456789})-[#usn7:@usn6|`` *01..07]-(`6esn` :`8esn`:@usn5)))).#usn8)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`3esn`)Assert Exists(#usn8(`7esn` Contains {@usn5} Contains $123456789,`3esn` =~9e0 =~@usn6).`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`4esn`)Assert Exists([{@usn5}[12.0..1000][{`3esn`}..{7}],`6esn`[{`6esn`}..],{_usn3}[`3esn`..$#usn8]].`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:usn1)Assert Allshortestpaths((((#usn7 :@usn5)<-[`4esn`?*..]-(:`4esn`:@usn6{`3esn`:123456789 Is Not Null Is Not Null})-[#usn8:`` *..0{@usn5:0 Contains $usn2 Contains 12e12,`2esn`:12e12}]->(#usn8 {`3esn`:\"d_str\"[..0.e0],usn1:$`` In 0 In {1000}})))).`2esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`8esn`)Assert Exists([`2esn` In {999} Is Not Null Where $7 Ends With $`8esn`|0Xa[@usn5][{`7esn`}]].`8esn`!)"),
    octest_legacy:ct_string("Create Constraint On(usn2:usn2)Assert Exists((`3esn` :`7esn`{`2esn`:07[`8esn`],`8esn`:{1000} Ends With {`8esn`}})<-[{_usn4:{1000} Ends With {`8esn`}}]-(@usn5 :`7esn`{_usn3:{``}[_usn4..$`1esn`]})<-[`2esn`?*]->({#usn7:1e1[1.e1..][123.654..],`3esn`:True Starts With $`4esn` Starts With 12e12}).`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:@usn6)Assert Exists(Single(`1esn` In $12 Is Not Null Where {1000}[{usn1}][Null]).usn1?)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:`4esn`)Assert Reduce(usn2=`8esn` Contains $`3esn` Contains {`4esn`},_usn3 In True[7][$999]|0x0 Ends With {``}).`4esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`5esn`)Assert Case When .e1[@usn5]['s_str'] Then 123456789 Starts With {@usn6} Starts With $12 End.usn1! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:`1esn`)Assert Exists((`2esn` :#usn8{#usn7:$1000 Starts With $`8esn` Starts With {`5esn`}})<-[`1esn`? *0X0123456789ABCDEF{`5esn`:1.e1 Starts With $`2esn` Starts With $0}]->({_usn4:{usn1} =~123.654 =~\"d_str\"})-[:`1esn`|:`3esn` *..010{#usn7:$`1esn`[#usn8][$@usn5],usn1:{`2esn`}[Count(*)]}]-(_usn4 {`6esn`:$0[$1000..00][{0}..{usn1}],_usn4:{`5esn`}[$`8esn`..$`1esn`][0.12..0.12]}).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(``:usn2)Assert Exists([`1esn` In 0.e0 =~`1esn` =~`6esn` Where 's_str' Starts With 12e12 Starts With $_usn4|usn1 Is Null Is Null].@usn6?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn2:#usn7]-()Assert Exists((_usn3 {@usn5:.e12 =~.e0})<-[? *0X7..0Xa]->(:`4esn`:@usn6).`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:usn2)Assert Exists(Single(`6esn` In Count(*) Ends With $`` Ends With {7} Where $`2esn` In {123456789}).`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`5esn`)Assert Exists(_usn3(Distinct 1e1[{_usn4}..123.654],{`7esn`}[0X7..][0x0..])._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:#usn8)Assert Exists(@usn6(1000 Is Null Is Null,.e1 Ends With {7} Ends With $usn1).@usn6?)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`2esn`)Assert Exists([#usn8 Is Null].``!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:`4esn`]-()Assert Exists([12 Starts With 7 Starts With $`5esn`,$@usn5[$`4esn`][$@usn6]].`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:usn1)Assert Reduce(@usn6=1.e1 =~$usn2,`6esn` In Count(*) Ends With $`` Ends With {7}|123456789 Ends With usn1 Ends With usn2).`2esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:`2esn`]-()Assert Exists(Case @usn6[{0}..] When {usn2} Then @usn5[$12..\"d_str\"] End._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:`5esn`]-()Assert Exists((@usn6 :`1esn`{`5esn`:$`2esn`[$usn2..][{``}..]})-[_usn4? *07{1000}]-(`4esn` :`3esn`:`6esn`{usn1:Count ( * ) Is Null,`5esn`:1e1[1.e1..][123.654..]}).usn1!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`6esn`)Assert Exists({`8esn`:.e1 Ends With {7} Ends With $usn1,@usn6:7[$0..][{_usn4}..]}.usn2?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:#usn8)Assert Exists(Reduce(_usn4=$0 Is Not Null,`2esn` In {999} Is Not Null|12.e12[2.12..][0xabc..]).``!)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:@usn5)Assert Exists((_usn3 {usn2:_usn3[$usn2..0]})<-[@usn6?:`8esn`|:_usn4 *0X7..0Xa{`3esn`:9e1 =~999}]-(`2esn` :`7esn`{`2esn`:Count(*)[010..][#usn7..]}).`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`5esn`)Assert Exists(Allshortestpaths((((:@usn5{#usn8:$`` Starts With 12 Starts With $usn2,`1esn`:00})<-[{#usn7:'s_str'[_usn4..0x0]}]-(:`6esn`:`8esn`{`5esn`:$12 Is Not Null Is Not Null,`4esn`:{@usn5}[..@usn6]})<-[ *0x0..{`2esn`:9e0 In .e1 In 1.e1,usn2:{@usn6}[$`7esn`..][False..]}]->(`2esn` :_usn3{`8esn`:usn1 Contains $7 Contains $``})))).`6esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[``:#usn7]-()Assert Exists({#usn8:123.654[$`1esn`..Null][1000..{_usn3}],`6esn`:12.0 =~$#usn7 =~9e12}.@usn6)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`5esn`)Assert Exists({#usn7:$_usn3 Is Null Is Null,@usn5:{@usn6}[0Xa..$@usn6][0..`5esn`]}.`8esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:``]-()Assert Exists(Case 0X0123456789ABCDEF Is Null Is Null When Count ( * ) Is Null Then #usn7[$`5esn`..] When $999 Ends With {0} Then $`2esn` Is Null Is Null Else {999}[$123456789..][12..] End.usn1!)"),
    octest_legacy:ct_string("Create Constraint On()<-[`6esn`:`4esn`]-()Assert Exists(None(_usn3 In {@usn5}[..#usn7] Where 12.e12[{7}..7]).#usn8?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`8esn`:``]-()Assert Exists(`4esn`().`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`4esn`:usn1]-()Assert Exists({`7esn`:{@usn5}[..#usn7],@usn6:{_usn3}[`3esn`..$#usn8]}.`7esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:usn2)Assert Exists([0.0[..{999}][..0.0],{usn1} =~123.654 =~\"d_str\",True Is Not Null Is Not Null].#usn8?)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:#usn7)Assert Exists([12[..$@usn6],Null Ends With 12 Ends With usn2].``?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`8esn`)Assert [`7esn` Starts With 0X7 Starts With $`7esn`,$`` In 0 In {1000}].`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`4esn`:`2esn`]-()Assert Exists([_usn3 In True[7][$999] Where $usn1[$123456789..0][{`1esn`}..12.0]].`8esn`)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:usn2)Assert Exists(Extract(`6esn` In Count(*) Ends With $`` Ends With {7} Where .e12 =~$_usn4).@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:``)Assert {`5esn`:`2esn`[$1000..9e12][{#usn8}..{7}]}._usn4 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:usn2)Assert Exists([$`5esn`[..{`2esn`}][..{0}],7 Contains `2esn` Contains $`8esn`].`6esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[usn1:`1esn`]->()Assert Exists(Case 123.654[$`1esn`..Null][1000..{_usn3}] When 9e12 Is Not Null Then {@usn6} Contains 123.654 Contains 01 When {12} =~0.e0 =~{_usn3} Then _usn4[Count(*)] Else $@usn6 Starts With $@usn5 End.@usn6!)"),
    octest_legacy:ct_string("Create Constraint On(``:#usn7)Assert Any(_usn3 In {@usn5}[..#usn7] Where {_usn4} Is Null).`` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`6esn`)Assert Exists([1e1[1.e1..][123.654..],$usn1 =~010 =~07,0X7 Starts With {999} Starts With 12e12].#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:#usn7)Assert Exists({`2esn`:$`7esn` In 12,`5esn`:True[..010]}.#usn8!)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`8esn`)Assert Exists(Reduce(_usn3=`2esn`[$1000..9e12][{#usn8}..{7}],`2esn` In {999} Is Not Null|{``} Ends With .e12 Ends With 0.e0).`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(``:_usn4)Assert [$0 Is Not Null,#usn7 Starts With $999,$`6esn`[`8esn`][0.0]].`5esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:@usn5)Assert Exists((`4esn` {`6esn`:True =~{`1esn`},`7esn`:0Xa[$1000..$123456789]})<-[#usn8:_usn4|:usn1 *0X0123456789ABCDEF{`2esn`:$7 Is Null}]-(`3esn` :``).#usn8?)"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:@usn5]->()Assert Exists({`8esn`:{_usn3} Contains 9e0 Contains $999,`4esn`:{12}[usn2]}._usn3?)"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn5:`3esn`]-()Assert Exists(Extract(_usn4 In `2esn` Where {`5esn`}[#usn8..0x0][\"d_str\"..{`4esn`}]).`7esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`6esn`:`5esn`]-()Assert Exists(Extract(`5esn` In $`2esn`[12.e12][$@usn5] Where _usn4 Is Null Is Null).``!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:_usn3)Assert Exists((:@usn5{`1esn`:$_usn4 Starts With 's_str' Starts With {7},usn1:#usn8 =~{_usn3} =~``})-[`3esn`:`6esn`{`3esn`}]-({`1esn`:$123456789[..$7][..$`6esn`]})-[`4esn`?:_usn4|:usn1{@usn6:$#usn7 Ends With 0.12 Ends With {@usn6}}]->(#usn8 {usn1:$123456789 Starts With `5esn`}).#usn8)"),
    octest_legacy:ct_string("Create Constraint On()-[`1esn`:_usn3]-()Assert Exists(Allshortestpaths((((`6esn` :`7esn`{``:1000 Is Null,`4esn`:#usn7[$`5esn`..]})-[?:`3esn`|:@usn5 *0X7..0Xa{`5esn`:$`2esn`[$usn2..][{``}..]}]-(:`5esn`:@usn5{`5esn`:`7esn` Contains `5esn` Contains 0X7})<-[:`6esn`{@usn5:$7[$`3esn`],`2esn`:0Xa[0e0..{#usn7}]}]->(`5esn` :``{@usn6:123.654[$`1esn`..Null][1000..{_usn3}]})))).`2esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[`4esn`:usn2]-()Assert Exists(({`5esn`:$``['s_str'..][0x0..],`1esn`:{@usn5}[Count(*)..]})-[:`1esn`|:`3esn` *..010{#usn7:$`1esn`[#usn8][$@usn5],usn1:{`2esn`}[Count(*)]}]-(#usn7 :`8esn`:@usn5{`8esn`:False Ends With $``}).`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`6esn`)Assert Single(`5esn` In $`2esn`[12.e12][$@usn5] Where $`1esn`[#usn8][$@usn5]).`4esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:_usn3)Assert Exists([`1esn` In `3esn`[07..] Where 's_str'[_usn4..0x0]].`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`5esn`)Assert Any(`5esn` In $`2esn`[12.e12][$@usn5] Where `6esn`[{`6esn`}..])._usn4 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[usn2:`6esn`]-()Assert Exists(Reduce(usn1=``[00..$7],`5esn` In $`2esn`[12.e12][$@usn5]|12 Starts With 0x0)._usn3)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn1:@usn5]-()Assert Exists([.e12[$#usn8..@usn6],$`6esn`[{`3esn`}..12]].`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn3:_usn4]-()Assert Exists(Reduce(`6esn`=$`2esn`[12.e12][$@usn5],`` In {usn1} Ends With {`6esn`} Ends With 123456789|{1000}[{#usn8}]).`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:`3esn`]-()Assert Exists((`3esn` :`3esn`:`6esn`)-[]->(`7esn` :#usn8).usn1)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`4esn`)Assert Exists({`3esn`:{usn1}[$7..0x0]}.`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:_usn4)Assert Exists(Case Count(*)[..``][..#usn8] When True[$`7esn`..{1000}] Then 1.0 In 9e1 In {`7esn`} End.`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:#usn7)Assert Exists({`8esn`:True Is Null Is Null,`5esn`:07 Is Null}.`7esn`)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:_usn4)Assert Exists(exists(Distinct 9e1[123456789..]).`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On(``:`3esn`)Assert [.e1[..\"d_str\"],{0} =~12.0,1.e1[_usn4..][07..]]._usn3! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:_usn3)Assert Reduce(#usn8=$#usn7[`5esn`],usn1 In 12.e12 In {0} In 9e1|{_usn4} In {1000}).`1esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`8esn`)Assert Any(`3esn` In 123.654[1e1..][{#usn8}..] Where 7[$0..][{_usn4}..]).`3esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`7esn`)Assert Exists({_usn4:0.12 Starts With 9e12 Starts With $`1esn`}.`6esn`)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`6esn`)Assert [_usn4 In 0.0[..{999}][..0.0] Where usn1 Contains $7 Contains $``].#usn7! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:usn2)Assert Case 12.e12[..1e1] When $_usn4[9e0..] Then 0e0 Contains 9e12 When `5esn` Is Null Is Null Then .e1[..{`7esn`}][..{_usn3}] Else {`2esn`} Ends With {12} Ends With 7 End.usn2! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`1esn`)Assert #usn7.`7esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn4:_usn4]-()Assert Exists(Single(`2esn` In {999} Is Not Null Where #usn8 =~{_usn3} =~``).`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`6esn`)Assert Exists(Case When 0X7[0X7..][Count ( * )..] Then `7esn` Contains `5esn` Contains 0X7 Else 123.654[1e1..][{#usn8}..] End.#usn7?)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`8esn`)Assert Exists(Any(`1esn` In `3esn`[07..] Where @usn6[{0}..]).@usn6)"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn6:@usn6]-()Assert Exists(None(`8esn` In $12[{7}..0X0123456789ABCDEF] Where `7esn` Starts With 0X7 Starts With $`7esn`).`7esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn6:`4esn`]-()Assert Exists(Extract(usn1 In 12.e12 In {0} In 9e1 Where usn1 Contains $7 Contains $``|$`5esn`[..{`2esn`}][..{0}]).usn2!)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`6esn`)Assert Exists(Case 9e1[$_usn4..0xabc] When $1000[..$999] Then $`7esn` In 12 Else @usn5 =~'s_str' End.#usn7)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:usn2)Assert Shortestpath((((`3esn` :``)<-[:`1esn`|:`3esn` *..010{#usn7:$`1esn`[#usn8][$@usn5],usn1:{`2esn`}[Count(*)]}]->(`4esn` :`1esn`{@usn5:{1000} Ends With {`8esn`},`2esn`:$`5esn`[..{`2esn`}][..{0}]})<-[?:`1esn`|:`3esn`{`2esn`:12 Starts With $#usn7}]-(#usn8 {usn1:$123456789 Starts With `5esn`})))).`3esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn4:#usn7)Assert Exists({``}._usn4)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`2esn`)Assert Exists(Reduce(`7esn`=7 Contains `2esn` Contains $`8esn`,_usn4 In `2esn`|12.e12[..1e1]).`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:`5esn`]->()Assert Exists(Single(_usn3 In {`2esn`} Ends With {12} Ends With 7 Where $@usn6[01..@usn5][0x0..`4esn`]).`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:#usn8]->()Assert Exists(exists(Distinct 7 Contains `2esn` Contains $`8esn`,$`2esn` Starts With {`8esn`} Starts With {usn1}).#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`6esn`)Assert [{usn2} =~@usn6 =~{`4esn`},Count(*) Is Not Null]._usn3? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:`6esn`)Assert Extract(#usn7 In 123.654 Starts With $`` Where 123.654 Contains $_usn3 Contains 0X0123456789ABCDEF).`5esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:`8esn`)Assert {_usn3:00,`2esn`:12e12 Is Not Null}.usn1 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:@usn5)Assert Exists(Single(usn1 In 12.e12 In {0} In 9e1 Where usn1 Contains $7 Contains $``).`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn7:`1esn`]-()Assert Exists(Any(`` In {`1esn`} Starts With @usn6 Where 999 Starts With $123456789 Starts With {``}).@usn5!)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`6esn`)Assert None(_usn4 In `2esn` Where Count(*)[..``][..#usn8]).#usn7? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn3:`5esn`]-()Assert Exists(Extract(#usn7 In 123.654 Starts With $`` Where .e1[@usn5]['s_str']|{@usn5} Starts With 1.0 Starts With 00).`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:_usn4)Assert Exists(Filter(`3esn` In 123.654[1e1..][{#usn8}..] Where {@usn6} In {#usn7} In 12.e12).`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On()<-[`1esn`:`7esn`]-()Assert Exists(All(`8esn` In $12[{7}..0X0123456789ABCDEF] Where Count ( * )[Count ( * )][12]).`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`1esn`)Assert Case When 0.0 Is Not Null Then 1.e1 =~9e12 =~`4esn` When 9e12 Is Not Null Is Not Null Then $999 Ends With {0} End.`6esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`7esn`)Assert Case When {@usn6} Contains 123.654 Contains 01 Then usn2 Ends With Count ( * ) Ends With $@usn6 End.`5esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:usn1)Assert [12.0 =~$#usn7 =~9e12].`1esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:usn2)Assert Exists(`3esn`(\"d_str\"[..0.e0]).`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:`8esn`]-()Assert Exists(Filter(`5esn` In $`2esn`[12.e12][$@usn5] Where 12.e12[``..usn2][{#usn7}..@usn5]).`3esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:#usn8)Assert Extract(_usn4 In 0.0[..{999}][..0.0] Where {`3esn`} Starts With 0X0123456789ABCDEF Starts With `5esn`|{`6esn`} Ends With 0e0 Ends With {``}).`4esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn7:_usn3]-()Assert Exists(Any(`6esn` In Count(*) Ends With $`` Ends With {7} Where True Starts With $`2esn` Starts With {@usn6})._usn4!)"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:`1esn`]->()Assert Exists(({`6esn`:0X0123456789ABCDEF[`5esn`..][$#usn8..]})<-[`5esn`?:`7esn`]->(:@usn5)<-[`4esn`:`4esn`|:#usn7{`2esn`:{`4esn`}[$_usn4..][9e0..]}]-({usn2:`1esn` In 07}).@usn6?)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:#usn7)Assert Exists(Case $_usn3 =~{_usn4} =~$`6esn` When {``}[010] Then {`3esn`} Is Null End.`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`6esn`)Assert Filter(`1esn` In $12 Is Not Null Where {``}[010]).`4esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:_usn3)Assert Exists(All(`1esn` In `3esn`[07..] Where 9e12 Is Not Null).#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On()-[``:_usn3]-()Assert Exists({`5esn`:$0 Starts With `2esn`,`2esn`:12 Starts With {_usn4} Starts With $#usn8}.#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:_usn4)Assert Exists(Single(`2esn` In {999} Is Not Null Where 123.654 Ends With usn2 Ends With 0).@usn5)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`1esn`)Assert Extract(`` In {`1esn`} Starts With @usn6 Where $usn1[@usn6][#usn7]|$7 Ends With 0X7).#usn8! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:@usn5)Assert Extract(@usn5 In Null =~12e12 Where _usn4 In $usn1|12.e12 In {0} In 9e1)._usn3! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn4:usn2)Assert {`2esn`:12e12 Starts With `1esn` Starts With usn2,#usn8:0X0123456789ABCDEF[{_usn4}..9e12][$`6esn`..1.0]}.`5esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:`4esn`]-()Assert Exists(None(#usn7 In 123.654 Starts With $`` Where $999 In 999).`3esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:usn1)Assert Reduce(`8esn`=12.e12[``..usn2][{#usn7}..@usn5],`3esn` In 123.654[1e1..][{#usn8}..]|$12[{7}..0X0123456789ABCDEF]).`4esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn8:usn1)Assert Exists(Extract(`1esn` In `3esn`[07..] Where 999 Starts With 's_str'|$999 Contains {7}).`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`4esn`)Assert Exists(#usn7(Distinct $usn1[..'s_str'][..$#usn8],\"d_str\"[..0.e0]).`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:``)Assert Single(_usn4 In `2esn` Where 0X0123456789ABCDEF[$`5esn`..]).usn2? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn5:``]-()Assert Exists(Reduce(@usn6=12.e12[{7}..7],_usn3 In True[7][$999]|$`3esn`[..$`2esn`][..123.654]).`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:@usn5)Assert Exists([0X0123456789ABCDEF[0X7..],$usn2 Ends With $`5esn`,{12} Starts With #usn8 Starts With 0e0].#usn8!)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:@usn6)Assert Exists(`1esn`(Distinct {`2esn`} In $123456789 In True).usn2?)"),
    octest_legacy:ct_string("Drop Constraint On(``:`6esn`)Assert None(_usn4 In 0.0[..{999}][..0.0] Where #usn7 =~{`4esn`} =~123456789).#usn7! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:``]->()Assert Exists([$_usn3[{999}],$`2esn`[123.654][1e1]].`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On(usn2:usn1)Assert Filter(`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where 1.e1[0X0123456789ABCDEF..]).`3esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:@usn5)Assert Exists(Extract(`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where 0x0[$`8esn`.._usn3]).`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:#usn7)Assert {_usn3:0X0123456789ABCDEF[0X7..],@usn5:0.e0[{999}][{`1esn`}]}.`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:_usn4)Assert Exists(Filter(`1esn` In `3esn`[07..] Where @usn6[{0}..]).usn1!)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:#usn8)Assert (_usn3 {usn2:_usn3[$usn2..0]})<-[usn1?:usn2|#usn7 *01..07]-(@usn6 {`5esn`:\"d_str\" =~`1esn` =~{`5esn`}})<-[#usn7?:`3esn`|:@usn5 *..010{`5esn`:{999} Starts With {_usn4} Starts With 00,usn1:$``['s_str'..][0x0..]}]-(`8esn` {@usn5:$@usn6 Starts With $@usn5,`6esn`:@usn5[..$@usn5][..0Xa]}).#usn7! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:`8esn`]-()Assert Exists(Allshortestpaths(((:usn1:_usn4{``:@usn5[$12..\"d_str\"],`4esn`:'s_str'[.._usn4][..``]}))).`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:`2esn`]-()Assert Exists(Extract(`8esn` In $12[{7}..0X0123456789ABCDEF] Where 12 Starts With {_usn4} Starts With $#usn8).``?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`1esn`:`4esn`]-()Assert Exists([$`1esn`[..{_usn3}],1.e1 Starts With $`2esn` Starts With $0].@usn5?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`7esn`)Assert {`3esn`:9e1 =~`` =~{`7esn`},usn2:$`3esn` Ends With $999 Ends With 0X0123456789ABCDEF}.`3esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:usn2)Assert Exists({`3esn`:.e12[$7..][{`6esn`}..]}.@usn5)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:usn1)Assert Exists(Filter(`6esn` In 00 Where 0.12 In 0X7).#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:usn1)Assert Exists(Case ``[{#usn8}] When 1e1[{_usn4}..123.654] Then @usn6[$usn2..#usn7] When .e1[@usn5]['s_str'] Then {_usn3}[..$`8esn`] Else {``}[_usn4..$`1esn`] End.`2esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`4esn`)Assert Exists(Reduce(#usn7={#usn8}[#usn7..{`2esn`}],`` In {`1esn`} Starts With @usn6|$@usn5 In $usn2 In {1000}).`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:#usn7)Assert (:#usn7{_usn3:12e12 Ends With `6esn` Ends With {`3esn`}})<-[@usn6?:`7esn`]->(`3esn` :_usn3{_usn3:{_usn3} Contains 9e0 Contains $999,`2esn`:{_usn3}[$usn2..]})._usn4? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn2:`3esn`)Assert All(`1esn` In $12 Is Not Null Where $`1esn` Is Not Null Is Not Null).#usn8 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:_usn3]-()Assert Exists(`8esn`(Distinct).@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`1esn`)Assert [usn1 In 12.e12 In {0} In 9e1 Where $0[`7esn`]|`5esn`[0xabc..]].`1esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[``:@usn5]->()Assert Exists(Case `4esn` Contains #usn8 Contains 7 When {#usn7} Contains @usn5 Contains Count ( * ) Then `4esn`[usn1] When $_usn4 Is Not Null Is Not Null Then $`2esn`[$usn2..][{``}..] Else $1000 =~{1000} =~`5esn` End.@usn6)"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:@usn5]->()Assert Exists(Single(`3esn` In 123.654[1e1..][{#usn8}..] Where $7 Is Not Null).`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:usn2)Assert Exists(Filter(`` In {`1esn`} Starts With @usn6 Where 0X0123456789ABCDEF[{_usn4}..9e12][$`6esn`..1.0]).`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`6esn`)Assert Exists((`` :`6esn`:`8esn`)-[`5esn`?:usn2|#usn7 *..01234567]-({usn1:1000 Is Null Is Null})<-[`6esn`?:_usn3|`8esn`]->(`` :_usn4{`6esn`:0.0 Contains $_usn4 Contains {`2esn`},`3esn`:.e1[..{`7esn`}][..{_usn3}]})._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`2esn`:`1esn`]->()Assert Exists([_usn3 In {@usn5}[..#usn7] Where True Is Null Is Null|1.e1[0xabc..]]._usn3?)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:@usn5)Assert Exists(Shortestpath(((usn2 {#usn8:@usn5[$12..\"d_str\"]})<-[#usn7? *999{usn2:{1000}[{``}][999]}]-({`2esn`:$#usn7[`5esn`],``:{`2esn`} In $123456789 In True})<-[usn1? *..0Xa{`2esn`:\"d_str\" Is Null Is Null}]-(`2esn` :`3esn`:`6esn`)))._usn4)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`8esn`)Assert Exists(None(_usn3 In {`2esn`} Ends With {12} Ends With 7 Where `3esn`[..{_usn4}][..{@usn5}]).#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:#usn8)Assert Exists(_usn4(Distinct {#usn7} Contains 0.0 Contains $0).#usn8!)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:_usn4)Assert Case 00 =~0.e0 =~$`8esn` When {`7esn`}[``..] Then Count(*)[.e12] End.`2esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`5esn`)Assert Any(_usn3 In {`2esn`} Ends With {12} Ends With 7 Where {`4esn`}[..{`4esn`}]).``? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:``)Assert Single(`3esn` In 123.654[1e1..][{#usn8}..] Where $`2esn`[12.e12][$@usn5]).`8esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:`7esn`]-()Assert Exists(Filter(`1esn` In `3esn`[07..] Where 07 Is Null).@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:@usn6)Assert Exists([`5esn` In $`2esn`[12.e12][$@usn5] Where 's_str' Starts With 12e12 Starts With $_usn4|`3esn`[$@usn5..@usn5][9e1..$``]].`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:`3esn`]-()Assert Exists((`5esn` :_usn3)<-[`5esn`?{`2esn`:`3esn`[07..],_usn3:{``} Is Null Is Null}]->(usn2 :_usn3{_usn4:{`6esn`} Contains 07,_usn3:{`6esn`} Contains {usn2} Contains $1000})-[#usn7? *999{`4esn`:#usn8 Is Null}]-(:`8esn`:@usn5).`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn2:`7esn`]-()Assert Exists((@usn5 :usn1:_usn4)<-[#usn7?:`4esn`|:#usn7 *..0{`5esn`:@usn5 =~'s_str'}]->(usn1 :`8esn`:@usn5{`1esn`:{#usn7} Contains 0.0 Contains $0,`2esn`:.e12[010..$123456789]})._usn4)"),
    octest_legacy:ct_string("Create Constraint On(``:`5esn`)Assert Reduce(`5esn`=12.e12[2.12..][0xabc..],_usn4 In `2esn`|9e12 Ends With 123456789).`2esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:usn2)Assert Extract(_usn4 In `2esn` Where 0X0123456789ABCDEF[9e12]|07 =~$`8esn` =~9e1)._usn3! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:`4esn`)Assert Exists(Reduce(``=True Is Not Null,@usn5 In Null =~12e12|True Starts With $`2esn` Starts With {@usn6}).`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On(``:`6esn`)Assert [{1000}[{usn1}][Null],$usn1[$123456789..0][{`1esn`}..12.0],$`2esn`[{``}..{1000}][#usn8..`2esn`]].#usn7? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`2esn`)Assert Single(`1esn` In 0.e0 =~`1esn` =~`6esn` Where 's_str' Starts With 12e12 Starts With $_usn4).#usn8? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:`6esn`)Assert Reduce(#usn8=$@usn6[$0..usn1][0X0123456789ABCDEF..$999],`1esn` In 0.e0 =~`1esn` =~`6esn`|999[12.0..][#usn7..]).`4esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[_usn4:`7esn`]-()Assert Exists(Case 123.654[$`1esn`..Null][1000..{_usn3}] When 9e12 Is Not Null Then {@usn6} Contains 123.654 Contains 01 When {12} =~0.e0 =~{_usn3} Then _usn4[Count(*)] Else $@usn6 Starts With $@usn5 End._usn3?)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn1:@usn5]-()Assert Exists(None(_usn3 In {`2esn`} Ends With {12} Ends With 7 Where $`6esn`[{`3esn`}..12]).`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn4:#usn8]-()Assert Exists(Allshortestpaths((`4esn` {_usn4:12 Starts With {_usn4} Starts With $#usn8,_usn4:$@usn5[$`4esn`][$@usn6]})<-[? *0X7..0Xa]->({`6esn`:`2esn` Ends With 12.e12 Ends With `2esn`})).`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`6esn`)Assert [123.654[{@usn5}..123.654][1.0..$12],$@usn5[`6esn`..]].@usn6! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`7esn`)Assert Extract(`` In {`1esn`} Starts With @usn6 Where \"d_str\"[{`8esn`}..]|0X7[0.e0][{`4esn`}]).``! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:@usn5)Assert Exists({usn1:`2esn`[$1000..9e12][{#usn8}..{7}],_usn4:$usn1 In 0.12 In $``}.`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`7esn`)Assert [123.654 Contains $_usn3 Contains 0X0123456789ABCDEF,`6esn` Is Null Is Null,Count(*)[.e12]].`1esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:usn1)Assert Any(`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where $`7esn` Contains {`1esn`} Contains 9e12)._usn3! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn5:`1esn`]-()Assert Exists(Reduce(_usn3=`2esn`[$1000..9e12][{#usn8}..{7}],`2esn` In {999} Is Not Null|{``} Ends With .e12 Ends With 0.e0).`6esn`)"),
    octest_legacy:ct_string("Create Constraint On(usn2:usn2)Assert (@usn6 :`1esn`{`5esn`:$`2esn`[$usn2..][{``}..]})<-[:@usn6|`` *12..{`3esn`:#usn8 =~{999}}]-({`2esn`:{7}[$7..],#usn7:`1esn` In 07})<-[`3esn`?:`3esn`|:@usn5 *0x0..]->(usn1 :`6esn`:`8esn`).usn1 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:usn2)Assert Exists(All(usn1 In 12.e12 In {0} In 9e1 Where False Starts With 010).`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:_usn4)Assert Case $usn2 Is Null Is Null When {usn2}[$`4esn`] Then $1000[..$999] Else {_usn3} Contains 9e0 Contains $999 End.`5esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:usn1]-()Assert Exists(Extract(`1esn` In $12 Is Not Null Where {``}[010]|0x0[$`8esn`.._usn3]).`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`5esn`)Assert Extract(_usn4 In 0.0[..{999}][..0.0])._usn4! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`5esn`)Assert Reduce(usn1={_usn4}[...e12][..0xabc],_usn3 In {`2esn`} Ends With {12} Ends With 7|{`5esn`}[#usn8..0x0][\"d_str\"..{`4esn`}]).usn1 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(``:#usn7)Assert Extract(`` In {`1esn`} Starts With @usn6 Where $`7esn`[$``..][999..]|True Is Null Is Null).`7esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn6:@usn6]-()Assert Exists({`1esn`:$`6esn`['s_str'..][{_usn4}..],@usn6:`3esn`[_usn4..{0}][`5esn`..usn2]}.usn2)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:_usn4)Assert Exists({`1esn`}.`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:`3esn`]-()Assert Exists(Single(_usn3 In {@usn5}[..#usn7] Where ``[..$#usn7]).usn1!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`5esn`)Assert Exists(Reduce(usn1=1e1 Contains usn2,`8esn` In $12[{7}..0X0123456789ABCDEF]|#usn7 =~{`4esn`} =~123456789).usn1!)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn3:`4esn`]->()Assert Exists(Extract(_usn4 In 0.0[..{999}][..0.0] Where {`3esn`} Starts With 0X0123456789ABCDEF Starts With `5esn`).@usn6?)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:usn1]->()Assert Exists(False.#usn7!)"),
    octest_legacy:ct_string("Create Constraint On(``:_usn3)Assert Exists([_usn4 In `2esn` Where 0X0123456789ABCDEF[9e12]|$usn1 In 0.12 In $``]._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:`7esn`)Assert Reduce(_usn3={7}[$123456789..{1000}][$`3esn`..`7esn`],#usn7 In 0Xa[@usn5][{`7esn`}]|Count(*)[.e12..]).`1esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[``:`3esn`]->()Assert Exists((_usn3 {usn1:0Xa[0e0..{#usn7}],`1esn`:.e0[True..Count ( * )][#usn7..0X7]})<-[:@usn6|`` *12..{`3esn`:#usn8 =~{999}}]-({`2esn`:{7}[$7..],#usn7:`1esn` In 07})<-[_usn3:`4esn`|:#usn7{@usn5:12 Is Not Null,`2esn`:$999 In 999}]->({``:False Contains $#usn8 Contains 9e1}).`1esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn8:_usn4]-()Assert Exists([`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where 12 Is Not Null Is Not Null].@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn8:`3esn`]-()Assert Exists(Extract(_usn3 In {`2esn`} Ends With {12} Ends With 7 Where 1.e1 =~9e12 =~`4esn`|9e1[9e1...e0]).usn1!)"),
    octest_legacy:ct_string("Create Constraint On(usn1:_usn4)Assert {_usn4:@usn6[$_usn4]}._usn4 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:usn1)Assert (:`4esn`:@usn6{usn1:07 Is Null,@usn6:{_usn3}[$usn2..]})-[`2esn`:`2esn`{`3esn`:9e1 =~`` =~{`7esn`},usn2:$`3esn` Ends With $999 Ends With 0X0123456789ABCDEF}]-(:usn1:_usn4{#usn8:$7 Ends With 0X7,`5esn`:12 Is Not Null})._usn4! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:@usn6]->()Assert Exists([`2esn` In {999} Is Not Null Where $usn2 Ends With $`5esn`|#usn8 Is Not Null].`3esn`)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`8esn`)Assert Exists(Reduce(`1esn`={@usn5}[..#usn7],`6esn` In 00|$`6esn`[{`3esn`}..12]).`4esn`!)"),
    octest_legacy:ct_string("Create Constraint On()<-[usn1:`1esn`]-()Assert Exists(Extract(_usn3 In {@usn5}[..#usn7] Where $`4esn` Starts With 0e0|$_usn3[{999}]).#usn7!)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:_usn4)Assert ({`8esn`:0e0[$#usn8...e12],usn2:{``}[_usn4..$`1esn`]})<-[`4esn`?]->(usn1 {`6esn`:$0[$1000..00][{0}..{usn1}],_usn4:{`5esn`}[$`8esn`..$`1esn`][0.12..0.12]})<-[:#usn8|`2esn` *12..{`5esn`:.e12 =~$_usn4}]->(`` {`5esn`:0[`4esn`][12.e12],_usn4:00}).`5esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:usn2]-()Assert Exists((#usn8 :#usn8{`1esn`:{`2esn`} In 0Xa In {_usn3},`8esn`:9e0 Starts With .e0 Starts With \"d_str\"})<-[`3esn`:`` *123456789..0X7{#usn8:12 Starts With $#usn7}]->(@usn5 {#usn7:$`7esn` In 12}).`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(usn2:_usn3)Assert Single(_usn3 In {@usn5}[..#usn7] Where Null Ends With 12 Ends With usn2)._usn3? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:`4esn`)Assert Reduce(`4esn`=`3esn`[..{_usn4}][..{@usn5}],`2esn` In {999} Is Not Null|123456789 Starts With {@usn6} Starts With $12).usn1? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`2esn`:#usn8]->()Assert Exists(`6esn`({_usn4} Is Null).``!)"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:`6esn`]-()Assert Exists(Case $#usn7[123.654] When .e1[@usn5]['s_str'] Then @usn5[$12..\"d_str\"] Else 12.e12[``..usn2][{#usn7}..@usn5] End.usn1?)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`8esn`)Assert [`3esn`[_usn4..{0}][`5esn`..usn2],0x0[{7}..],{#usn8}[#usn7..{`2esn`}]].`7esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:usn1)Assert #usn8(Distinct 9e1[$_usn4..0xabc],123.654 Ends With usn2 Ends With 0).usn1 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[`2esn`:usn1]-()Assert Exists(Case When 07 =~@usn5 Then 9e0[#usn8] Else {``} Ends With .e12 Ends With 0.e0 End.`6esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:@usn5)Assert {`6esn`}.``? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:@usn5)Assert Exists(Reduce(#usn7={999} Ends With 123456789 Ends With {@usn5},@usn5 In Null =~12e12|{7}[$7..]).`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`7esn`:`6esn`]-()Assert Exists(Case When $7 Ends With 0X7 Then $1000[..$999] Else $`2esn` In {123456789} End.@usn6!)"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn7:`1esn`]-()Assert Exists(Any(#usn7 In 123.654 Starts With $`` Where Count(*)[010..][#usn7..]).`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`6esn`)Assert None(`5esn` In $`2esn`[12.e12][$@usn5] Where $7 Ends With $`8esn`).usn2 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`6esn`)Assert Exists([`` In {`1esn`} Starts With @usn6 Where $`5esn`[`1esn`][0X0123456789ABCDEF]|False Starts With 010].`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`3esn`)Assert Exists(Allshortestpaths(((:`5esn`:@usn5{#usn8:123.654[$`1esn`..Null][1000..{_usn3}],`6esn`:12.0 =~$#usn7 =~9e12})<-[`3esn`:`` *123456789..0X7{#usn8:12 Starts With $#usn7}]->(:`1esn`{_usn4:{`6esn`} Ends With 0e0 Ends With {``}}))).#usn8)"),
    octest_legacy:ct_string("Create Constraint On(``:`2esn`)Assert Exists((`3esn` :`1esn`)-[?:#usn8|`2esn`{_usn4:{usn1} In Count ( * )}]-(usn1 {`2esn`:0.0 Contains $_usn4 Contains {`2esn`},_usn4:0e0 Contains `3esn` Contains `7esn`})-[`3esn`:`` *123456789..0X7{#usn8:12 Starts With $#usn7}]-(`8esn` :`7esn`).`3esn`)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`4esn`)Assert Exists([_usn4 In 0.0[..{999}][..0.0]|010 In `1esn`].`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`5esn`:`4esn`)Assert Reduce(#usn8=0.12 In 0X7,_usn3 In {@usn5}[..#usn7]|123.654 Ends With usn2 Ends With 0).`3esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:usn1)Assert {`6esn`:$#usn7[..@usn6][..$0]}.usn1? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:`3esn`]->()Assert Exists(Reduce(_usn3=$`7esn`[$``..][999..],`` In {usn1} Ends With {`6esn`} Ends With 123456789|{`4esn`}[..{`4esn`}]).``?)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:usn2)Assert Exists([$`1esn`[$12][Count ( * )],9e1 Ends With $@usn5 Ends With $123456789].usn1)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:#usn8)Assert Exists(Shortestpath((({`5esn`:False Ends With $``,_usn4:0.e0[{999}][{`1esn`}]})<-[:@usn5|:`7esn`{`6esn`:$`1esn`[#usn8][$@usn5],@usn6:123.654[1e1..][{#usn8}..]}]-(`4esn` :`2esn`))).#usn7)"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:_usn3]->()Assert Exists({_usn3:{`2esn`} Ends With {12} Ends With 7,usn2:0.e0[{999}][{`1esn`}]}.#usn7!)"),
    octest_legacy:ct_string("Create Index On:#usn7(usn2)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:@usn5)Assert Exists(Shortestpath(((@usn6 :`4esn`:@usn6{#usn8:12 Ends With 01,`8esn`:``[{#usn8}]})<-[:#usn7|`2esn` *0x0..]-({`4esn`:0X0123456789ABCDEF[0X7..],#usn7:{1000} Ends With {`8esn`}}))).#usn7!)"),
    octest_legacy:ct_string("Create Constraint On(usn2:#usn8)Assert None(#usn7 In 0Xa[@usn5][{`7esn`}] Where $usn1 In 01234567 In .e1).`6esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`5esn`)Assert Exists(Single(`5esn` In $`2esn`[12.e12][$@usn5] Where 's_str'[.._usn4][..``]).#usn8)"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn5:@usn6]-()Assert Exists(None(`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where 0x0[{999}..][{_usn4}..]).`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(``:`2esn`)Assert {`5esn`:$#usn7[..@usn6][..$0]}.usn2 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`5esn`)Assert Exists({``:$`2esn` In {123456789},_usn3:999 Ends With .e12 Ends With .e1}._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`7esn`)Assert All(`1esn` In 0.e0 =~`1esn` =~`6esn` Where {@usn5} Starts With 1.0 Starts With 00).`6esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn3:`5esn`]-()Assert Exists([9e0 Starts With .e0 Starts With \"d_str\",`3esn`[..{_usn4}][..{@usn5}],1.e1 =~`2esn`]._usn4)"),
    octest_legacy:ct_string("Create Constraint On()<-[`2esn`:`3esn`]-()Assert Exists([`5esn` In $`2esn`[12.e12][$@usn5] Where 1.e1[12e12..{`6esn`}]].`4esn`!)"),
    octest_legacy:ct_string("Drop Index On:`3esn`(`1esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:`5esn`)Assert Exists({@usn6:12.e12[$`8esn`..{`8esn`}],#usn8:#usn7 =~00}.@usn6?)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:#usn8]-()Assert Exists(Any(#usn7 In 123.654 Starts With $`` Where 12 Is Not Null)._usn4)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:_usn3)Assert None(#usn7 In 123.654 Starts With $`` Where $999 In 999).`2esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn6:usn1)Assert Case False Contains $#usn8 Contains 9e1 When Count(*) In {``} Then {`8esn`}[..$`6esn`][..123.654] When {`2esn`} In 0Xa In {_usn3} Then 12 Starts With 7 Starts With $`5esn` End.`6esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:#usn8)Assert Reduce(``=`7esn`[0..$usn2][{usn2}..0.e0],_usn3 In {@usn5}[..#usn7]|$999 In 999).`7esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:#usn7)Assert (@usn5 :@usn5)<-[`1esn`?:`4esn`|:#usn7{_usn4:True[7][$999],`8esn`:12.e12[2.12..][0xabc..]}]->(`1esn` :usn2:`2esn`{@usn5:.e12 =~.e0})-[:_usn4|:usn1 *..7{`1esn`:@usn6[$usn2..#usn7]}]->(:`5esn`:@usn5{``:.e12 =~$_usn4}).usn2? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`1esn`)Assert Extract(`6esn` In Count(*) Ends With $`` Ends With {7} Where 123.654[{@usn5}..123.654][1.0..$12]|12.e12[$`8esn`..{`8esn`}])._usn3? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:usn2)Assert Extract(usn1 In 12.e12 In {0} In 9e1 Where {`5esn`} Contains 's_str' Contains 9e1).`6esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:`3esn`)Assert Exists(Case When `8esn` Contains 1e1 Then 12.e12 In $0 In $0 Else $0[$1000..00][{0}..{usn1}] End.#usn7?)"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:`8esn`]->()Assert Exists([`6esn` In 00 Where 0.12 In 0X7].#usn7)"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:_usn3]-()Assert Exists({``:.e12[\"d_str\"..][.e1..]}.`2esn`)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:_usn3)Assert `3esn`(Distinct .e12[$7..][{`6esn`}..]).`1esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:usn2]-()Assert Exists(Filter(`2esn` In {999} Is Not Null Where 's_str'[.._usn4][..``]).`2esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(``:@usn6)Assert Exists([{usn2},0e0 Contains `3esn` Contains `7esn`].usn1?)"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:`1esn`]->()Assert Exists({`5esn`:9e12 =~123456789 =~$999,@usn5:$0 In _usn4}.``!)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:_usn3)Assert Exists(Reduce(`6esn`={#usn7} Contains 0.0 Contains $0,`1esn` In `3esn`[07..]|0X7[0.e0][{`4esn`}]).@usn6)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`2esn`)Assert Exists(Case {`2esn`} Is Not Null Is Not Null When 0.e0 Contains #usn7 Then $``[.e12..] When $`1esn`[07] Then {`8esn`}[0X7][$`3esn`] End.@usn6?)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:``)Assert Shortestpath((`1esn` {@usn5:$usn1 In 0.12 In $``}))._usn3! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[``:usn2]->()Assert Exists(exists(Distinct {@usn6} Is Not Null,{`2esn`} Starts With @usn6)._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`2esn`)Assert Reduce(`6esn`={#usn8}[#usn7..{`2esn`}],`8esn` In $12[{7}..0X0123456789ABCDEF]|$`2esn`[123.654][1e1]).#usn8! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[#usn8:@usn5]->()Assert Exists(exists(Distinct 12.e12 In $0 In $0).`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`1esn`)Assert Exists(({`6esn`:0X0123456789ABCDEF[`5esn`..][$#usn8..]})<-[?:#usn7|`2esn`{@usn5:$0 Is Not Null}]-(:#usn7{usn2:{`8esn`}[0X7][$`3esn`]}).#usn8?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:_usn4)Assert Exists(Any(#usn7 In 123.654 Starts With $`` Where `` Ends With $`4esn` Ends With 0X0123456789ABCDEF).usn2)"),
    octest_legacy:ct_string("Drop Constraint On()-[`8esn`:#usn7]-()Assert Exists(Reduce(`4esn`=@usn5[12.0][{1000}],_usn4 In `2esn`|0[$`6esn`...e1][`1esn`..$`7esn`]).usn2)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:#usn7)Assert [`1esn` In $12 Is Not Null Where $0[{`2esn`}..{`1esn`}][{@usn5}..$`7esn`]|{`3esn`} Starts With 0X0123456789ABCDEF Starts With `5esn`].#usn7? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn5:usn1]->()Assert Exists([9e0 In usn1,{@usn6}[0Xa..$@usn6][0..`5esn`]].`8esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[`8esn`:`1esn`]-()Assert Exists(Single(`1esn` In $12 Is Not Null Where {usn1} In Count ( * )).`1esn`)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:usn1)Assert Exists(Extract(`3esn` In 123.654[1e1..][{#usn8}..] Where usn2[`7esn`..{`3esn`}][$7..{#usn7}]|01234567[..9e1]).`2esn`!)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:`5esn`)Assert {`3esn`:0e0 Contains 9e12,@usn6:`6esn`[{@usn5}..Count ( * )][{`6esn`}..{@usn6}]}.@usn5? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`7esn`)Assert Extract(`5esn` In $`2esn`[12.e12][$@usn5] Where `6esn`[{`6esn`}..]).@usn6 Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`8esn`)Assert [$0 In _usn4,$#usn7[`5esn`]].@usn5? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:usn2)Assert Case {`1esn`} In 12.e12 In 9e1 When {usn2}[$`4esn`] Then $1000 Starts With $`8esn` Starts With {`5esn`} Else {1000}[{#usn8}] End.`1esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`7esn`)Assert `4esn`(Distinct).`4esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`3esn`)Assert (`8esn` :`5esn`:@usn5)<-[?:``]-(:`8esn`:@usn5{`7esn`:$_usn4[$`4esn`..$12],`3esn`:{`5esn`}[#usn8..0x0][\"d_str\"..{`4esn`}]}).@usn5! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`3esn`)Assert Case 0e0[$#usn8...e12] When {`8esn`}[..$`6esn`][..123.654] Then $@usn6 Starts With {`1esn`} Starts With 12 Else $``['s_str'..][0x0..] End.#usn7! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:@usn6)Assert Exists((:@usn5)<-[`1esn`?:`4esn`|:#usn7{_usn4:True[7][$999],`8esn`:12.e12[2.12..][0xabc..]}]->(`1esn` :usn2:`2esn`{@usn5:.e12 =~.e0})-[`3esn`:`6esn`{`3esn`}]-(@usn6 {`2esn`:{@usn6}[$`7esn`..][False..]}).`5esn`?)"),
    octest_legacy:ct_string("Create Constraint On(@usn5:_usn3)Assert Exists(Filter(`5esn` In $`2esn`[12.e12][$@usn5] Where {999} Starts With {12}).`5esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn6:`4esn`]->()Assert Exists({`8esn`:{`7esn`} Is Not Null Is Not Null}.#usn8!)"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:usn2]->()Assert Exists(Reduce(`5esn`={`4esn`}[$123456789..],@usn5 In Null =~12e12|``[$0..][`1esn`..]).@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`4esn`)Assert Single(`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where {12} Starts With #usn8 Starts With 0e0).``? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:usn2)Assert None(_usn4 In 0.0[..{999}][..0.0] Where 01234567[..9e1]).`1esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn2:usn1)Assert (`6esn` :_usn3)<-[?:`1esn`|:`3esn`{`2esn`:12 Starts With $#usn7}]-(:`2esn`{`2esn`:123456789[0..]})<-[`8esn`?:`5esn` *12..{#usn7:$1000 Is Not Null Is Not Null}]-(#usn8 {@usn5:_usn4 Is Null}).`3esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:_usn3)Assert Exists(Filter(`2esn` In {999} Is Not Null Where `` Ends With $`4esn` Ends With 0X0123456789ABCDEF).@usn6)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`8esn`)Assert @usn5(Distinct 0X0123456789ABCDEF[0X7..])._usn3 Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:@usn6)Assert Reduce(@usn6={_usn3}[..$`8esn`],usn1 In 12.e12 In {0} In 9e1|$`2esn`[{``}..{1000}][#usn8..`2esn`]).`2esn`? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[``:``]->()Assert Exists((_usn4 )<-[@usn5?:`5esn`]->({`3esn`:0e0 Contains 9e12,@usn6:`6esn`[{@usn5}..Count ( * )][{`6esn`}..{@usn6}]})-[_usn3?:``]-(:usn1:_usn4{`4esn`:01234567 In $123456789}).`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`7esn`)Assert Exists(All(`1esn` In 0.e0 =~`1esn` =~`6esn` Where 0.12 In 0X7).`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn6:#usn8)Assert Extract(`` In {`1esn`} Starts With @usn6 Where .e1[@usn5]['s_str']|{7} Is Null).`` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`4esn`:_usn3)Assert Exists(#usn7(Distinct 7 Is Not Null,{`7esn`}[0X7..][0x0..]).`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`3esn`)Assert Exists((`4esn` {`2esn`:@usn5[$12..\"d_str\"]})<-[`2esn`:`5esn` *0x0..{`4esn`:{`5esn`}[#usn8..0x0][\"d_str\"..{`4esn`}],@usn6:0X0123456789ABCDEF[7...e0][`1esn`..usn2]}]-(`8esn` {@usn5:$@usn6 Starts With $@usn5,`6esn`:@usn5[..$@usn5][..0Xa]})<-[`6esn`?:#usn8|`2esn`*..{`5esn`:@usn5 =~'s_str'}]->({`6esn`:{12} Contains `7esn` Contains $_usn3,@usn6:`2esn`[$1000..9e12][{#usn8}..{7}]}).#usn8!)"),
    octest_legacy:ct_string("Create Constraint On(``:usn1)Assert Exists(Single(`1esn` In $12 Is Not Null Where 0Xa Contains Count ( * )).`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:`2esn`]->()Assert Exists(Reduce(``=7[$0..][{_usn4}..],`6esn` In Count(*) Ends With $`` Ends With {7}|12[..$@usn6])._usn3)"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`5esn`)Assert Exists([{1000}].#usn8?)"),
    octest_legacy:ct_string("Drop Constraint On()-[_usn4:_usn4]->()Assert Exists((@usn5 :@usn5)<-[`1esn`?:`4esn`|:#usn7{_usn4:True[7][$999],`8esn`:12.e12[2.12..][0xabc..]}]->(`1esn` :usn2:`2esn`{@usn5:.e12 =~.e0})-[:_usn4|:usn1 *..7{`1esn`:@usn6[$usn2..#usn7]}]->(:`5esn`:@usn5{``:.e12 =~$_usn4}).`8esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:`8esn`]->()Assert Exists(`7esn`(#usn7 Starts With $999,{`1esn`} Starts With `4esn` Starts With {0}).`1esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`5esn`:`7esn`)Assert Exists(Reduce(@usn5=$0[..{usn2}][..$usn1],`` In {`1esn`} Starts With @usn6|{@usn6} Contains 123.654 Contains 01).`6esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[`3esn`:usn2]-()Assert Exists(Any(`2esn` In {999} Is Not Null Where {`1esn`} In 12.e12 In 9e1).@usn6?)"),
    octest_legacy:ct_string("Drop Constraint On(``:usn1)Assert Exists([`6esn`[{`6esn`}..],$0[_usn4..{`3esn`}][$#usn7..$#usn7],0Xa[..{1000}][..$#usn7]].`2esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`6esn`:`6esn`)Assert Exists(All(`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where {7} Contains $123456789).`4esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[`8esn`:_usn3]->()Assert Exists(Reduce(usn1={`2esn`} In 0Xa In {_usn3},`1esn` In 0.e0 =~`1esn` =~`6esn`|07 =~@usn5).`8esn`)"),
    octest_legacy:ct_string("Create Constraint On()-[_usn4:@usn5]-()Assert Exists(Shortestpath(((:`8esn`:@usn5)-[@usn5?:@usn5|:`7esn`]-(#usn7 :`6esn`:`8esn`{``:@usn5 In 1e1})))._usn4?)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`4esn`)Assert Exists(Shortestpath(((`5esn` :``{@usn6:123.654[$`1esn`..Null][1000..{_usn3}]})-[`5esn`?:usn1]-(usn2 :`4esn`:@usn6)<-[#usn7]-(@usn6 ))).`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`3esn`:`7esn`]-()Assert Exists({@usn6:$usn1[$123456789..0][{`1esn`}..12.0]}.`7esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:@usn5)Assert Exists([`` In {`1esn`} Starts With @usn6 Where {`1esn`} Starts With `4esn` Starts With {0}|#usn8 In `8esn` In 07].`6esn`?)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`3esn`)Assert Exists(Extract(`` In {`1esn`} Starts With @usn6 Where .e1[@usn5]['s_str']|{7} Is Null).``)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:`4esn`]-()Assert Exists(Extract(`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where 0e0 Contains 9e12|9e1 =~`` =~{`7esn`}).#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On(`1esn`:`3esn`)Assert Exists((@usn5 :`7esn`{_usn3:{``}[_usn4..$`1esn`]})<-[#usn7{#usn8:{`1esn`} Is Not Null}]->(@usn6 :`1esn`).usn2)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:usn1)Assert {`5esn`:00[07..]}.usn1! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`2esn`)Assert Filter(_usn4 In 0.0[..{999}][..0.0] Where 12 Ends With 01)._usn3! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:`3esn`)Assert Exists(Extract(`6esn` In Count(*) Ends With $`` Ends With {7} Where {@usn5} =~_usn4 =~0.12|00 =~0.e0 =~$`8esn`)._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`2esn`:_usn3]-()Assert Exists(All(_usn3 In {`2esn`} Ends With {12} Ends With 7 Where {`4esn`}[..{`4esn`}]).#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn1:`6esn`]-()Assert Exists(`2esn`(1.e1[0X0123456789ABCDEF..]).#usn7?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`7esn`:`6esn`]-()Assert Exists(usn2.@usn5)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:`4esn`)Assert Exists(Extract(#usn7 In 123.654 Starts With $`` Where ``[{#usn8}]).usn2)"),
    octest_legacy:ct_string("Drop Constraint On()-[`2esn`:@usn6]->()Assert Exists(Shortestpath(((({`3esn`:{`2esn`} In 0Xa In {_usn3},`2esn`:$``['s_str'..][0x0..]})-[`5esn`{`7esn`:@usn5[..$@usn5][..0Xa]}]-(:`4esn`:@usn6)<-[`3esn`? *0x0..{_usn3:0.0[9e1..][Null..],#usn7:{`3esn`} Is Not Null Is Not Null}]-(:_usn4{`1esn`:$_usn4 Starts With 's_str' Starts With {7},usn1:#usn8 =~{_usn3} =~``})))).`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[`4esn`:_usn3]->()Assert Exists([`1esn` In `3esn`[07..] Where 0X0123456789ABCDEF[`5esn`..][$#usn8..]].@usn6?)"),
    octest_legacy:ct_string("Drop Constraint On()-[``:``]-()Assert Exists(`8esn`($#usn7[123.654],$`7esn` Is Null Is Null).`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`4esn`)Assert (:`5esn`:@usn5{`2esn`:Count(*)[010..][#usn7..]})-[#usn8? *..01234567]-(@usn5 {``:`3esn` =~9e0 =~@usn6})<-[_usn4:`3esn`|:@usn5 *0x0..]->(`7esn` :usn2:`2esn`).`8esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn2:`6esn`]->()Assert Exists(Case When {12}[00..{@usn6}][1.e1..0] Then 9e12 Is Not Null When {@usn5}[12.0..1000][{`3esn`}..{7}] Then 0[$`6esn`...e1][`1esn`..$`7esn`] End.`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()-[@usn6:#usn8]-()Assert Exists(All(@usn5 In Null =~12e12 Where _usn4 In $usn1).`1esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:_usn3)Assert Exists(Shortestpath(((:`1esn`{`6esn`:$_usn3[010..False],_usn4:$123456789 Starts With $123456789 Starts With Count ( * )})-[:usn2|#usn7 *0X7..0Xa]->(#usn7 :@usn5)-[ *..0Xa{`1esn`:1e1[..01],`7esn`:12.e12[`7esn`]}]-({`1esn`:12 Starts With 0x0})))._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:_usn3)Assert `8esn`({1000}[{``}][999],_usn4 Is Null Is Null)._usn3? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`3esn`)Assert Exists((#usn8 :`6esn`:`8esn`{_usn3:$@usn5[`1esn`..]})<-[`7esn`?:`7esn` *..7{`3esn`:0X0123456789ABCDEF[7...e0][`1esn`..usn2],#usn7:$`4esn`[..'s_str'][..`8esn`]}]->(`` {`5esn`:0[`4esn`][12.e12],_usn4:00}).`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:@usn5)Assert {@usn6:123.654[$`1esn`..Null][1000..{_usn3}]}.#usn8? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`6esn`:`6esn`]-()Assert Exists(Single(#usn7 In 123.654 Starts With $`` Where $_usn3[{999}])._usn3?)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:#usn7)Assert Exists([_usn3 In {@usn5}[..#usn7] Where $0[..{usn2}][..$usn1]|$usn1 Starts With $999 Starts With {@usn5}].``?)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:#usn8)Assert Exists({`5esn`:{#usn8}[usn1][1.0]}._usn4?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:`4esn`)Assert [`` In {`1esn`} Starts With @usn6 Where $@usn6 Starts With $@usn5|{_usn4} In {1000}].#usn8! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(_usn3:usn1)Assert Exists(Case When $`2esn`[{``}..{1000}][#usn8..`2esn`] Then {`2esn`}[$_usn3..{_usn4}][$`1esn`..`2esn`] Else #usn8 =~{999} End.`5esn`)"),
    octest_legacy:ct_string("Create Constraint On(`2esn`:`4esn`)Assert {@usn6:123.654[$`1esn`..Null][1000..{_usn3}]}.`7esn`! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[`1esn`:`3esn`]-()Assert Exists((:`6esn`:`8esn`{`8esn`:1e1[{_usn4}..123.654],`2esn`:0X0123456789ABCDEF[$999..][@usn5..]})-[`5esn`?:`2esn`{`2esn`:$7[$`3esn`]}]-(:`8esn`:@usn5{usn2:$1000 Starts With $`8esn` Starts With {`5esn`},`7esn`:{@usn6} Contains 123.654 Contains 01}).`7esn`)"),
    octest_legacy:ct_string("Create Constraint On(`3esn`:`7esn`)Assert Exists([@usn5 In 1e1,{`2esn`} Ends With {12} Ends With 7,$@usn5[`6esn`..]].`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On()-[usn2:#usn8]-()Assert Exists(Shortestpath(((`1esn` :`4esn`:@usn6))).`2esn`)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`3esn`)Assert None(`` In {usn1} Ends With {`6esn`} Ends With 123456789 Where $`7esn` Contains {`1esn`} Contains 9e12).`8esn`? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(``:`7esn`)Assert Exists(Reduce(#usn7={_usn4}[{``}..],_usn3 In {`2esn`} Ends With {12} Ends With 7|{`6esn`} Ends With 0e0 Ends With {``}).#usn7!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn2:`6esn`]-()Assert Exists(Any(`3esn` In 123.654[1e1..][{#usn8}..] Where usn2[`7esn`..{`3esn`}][$7..{#usn7}]).`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:`4esn`)Assert Exists(All(_usn4 In 0.0[..{999}][..0.0] Where {999} Ends With 123456789 Ends With {@usn5}).@usn6!)"),
    octest_legacy:ct_string("Create Constraint On()-[`4esn`:#usn7]-()Assert Exists((:_usn4{_usn4:#usn7 =~{`4esn`} =~123456789})<-[`7esn`?:`6esn`]-({``:$@usn5[..usn2][..$#usn7],_usn4:.e1 Contains $`3esn`})<-[``? *1000]-(:`3esn`:`6esn`{`4esn`:{`6esn`} Contains {usn2} Contains $1000,usn2:{#usn8}[12.0][$@usn6]}).#usn7?)"),
    octest_legacy:ct_string("Create Constraint On(``:`1esn`)Assert Exists(Reduce(#usn8=$@usn6[$0..usn1][0X0123456789ABCDEF..$999],`1esn` In 0.e0 =~`1esn` =~`6esn`|999[12.0..][#usn7..]).`4esn`?)"),
    octest_legacy:ct_string("Create Constraint On(#usn8:`5esn`)Assert Exists(Case $12 Contains 0Xa When 0Xa Contains Count ( * ) Then {`3esn`}[$``..#usn7][0X0123456789ABCDEF..`2esn`] When 2.12 In $`8esn` In {`7esn`} Then $usn1 In 01234567 In .e1 End.`1esn`!)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:_usn3]-()Assert Exists([`2esn` In {999} Is Not Null Where $7 Ends With 0X7|{`1esn`} In 12.e12 In 9e1]._usn3)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`1esn`)Assert Exists([`1esn` In $12 Is Not Null Where {`3esn`} Starts With 0X0123456789ABCDEF Starts With `5esn`|{`4esn`}[$123456789]].`7esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:_usn3)Assert Exists(Case $`6esn` Starts With 12.e12 Starts With $#usn7 When $`2esn`[12.e12][$@usn5] Then $usn1[0X7] When True =~_usn3 =~123456789 Then {usn1}[$7..0x0] Else {1000}[\"d_str\"..{@usn5}][$1000..$#usn8] End.``)"),
    octest_legacy:ct_string("Drop Constraint On()<-[usn1:`4esn`]-()Assert Exists(Reduce(`2esn`=0e0,`6esn` In Count(*) Ends With $`` Ends With {7}|'s_str'[.._usn4][..``]).`4esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(``:`8esn`)Assert Exists(Single(_usn3 In {@usn5}[..#usn7] Where $`4esn` Starts With 0e0)._usn3)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`4esn`:`1esn`]-()Assert Exists(Case {`2esn`}[$_usn3..{_usn4}][$`1esn`..`2esn`] When .e0[True..Count ( * )][#usn7..0X7] Then $@usn5[`6esn`..] Else {_usn3} Contains 9e0 Contains $999 End.@usn5)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:`3esn`)Assert (usn1 {usn2:#usn8 =~{_usn3} =~``})-[?{`2esn`:0X0123456789ABCDEF[9e12],`7esn`:{`4esn`}[..07][..$`6esn`]}]->(`1esn` {@usn5:$usn1 In 0.12 In $``}).`6esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(usn2:`4esn`)Assert Exists(Case When $`2esn`[{``}..{1000}][#usn8..`2esn`] Then {`2esn`}[$_usn3..{_usn4}][$`1esn`..`2esn`] Else #usn8 =~{999} End.`5esn`)"),
    octest_legacy:ct_string("Create Constraint On()<-[@usn5:usn2]-()Assert Exists(Filter(`1esn` In 0.e0 =~`1esn` =~`6esn` Where 1000).``)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`3esn`)Assert Exists(None(#usn7 In 0Xa[@usn5][{`7esn`}] Where $0[_usn4..{`3esn`}][$#usn7..$#usn7]).`4esn`)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:#usn7)Assert Extract(`2esn` In {999} Is Not Null Where {12} Contains 9e0).@usn5? Is Unique"),
    octest_legacy:ct_string("Create Index On:usn1(`3esn`)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:@usn5)Assert Exists([`8esn` In $12[{7}..0X0123456789ABCDEF] Where Count ( * )[Count ( * )][12]|{@usn5} Is Null].#usn7?)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:`1esn`)Assert Exists([$usn1 In 01234567 In .e1,$@usn5[..usn2][..$#usn7],True Is Not Null].`4esn`)"),
    octest_legacy:ct_string("Create Constraint On(@usn6:_usn4)Assert Exists({`8esn`:{999}[$123456789..][12..],`2esn`:{123456789} Is Not Null}.`1esn`)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`3esn`)Assert Shortestpath(((`5esn` {`3esn`:9e1 =~999})<-[`5esn`{`6esn`:12 Is Not Null Is Not Null,`8esn`:`3esn` Is Not Null Is Not Null}]->(_usn3 {@usn5:.e12 =~.e0})-[`5esn`?{`2esn`:`3esn`[07..],_usn3:{``} Is Null Is Null}]-(:#usn7{#usn7:$`8esn` In $`2esn` In {7}})))._usn3? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:usn1)Assert {_usn3:{12} =~0.e0 =~{_usn3}}.usn2! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn1:``)Assert Single(`6esn` In Count(*) Ends With $`` Ends With {7}).@usn6? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`5esn`)Assert Exists({`1esn`:$usn1 Starts With $999 Starts With {@usn5}}.@usn6!)"),
    octest_legacy:ct_string("Drop Constraint On(_usn3:_usn3)Assert Reduce(`8esn`={`4esn`}[$123456789],`6esn` In 00|#usn7 =~{`4esn`} =~123456789).usn1? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()<-[#usn8:`5esn`]-()Assert Exists([{999} Is Not Null,Count ( * )[Count ( * )][12],{`8esn`}[0X7][$`3esn`]].`6esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:_usn3)Assert Extract(`` In {`1esn`} Starts With @usn6 Where 12.0 =~$#usn7 =~9e12|{@usn6} Contains 123.654 Contains 01).@usn6 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:`2esn`]-()Assert Exists(Extract(_usn4 In `2esn` Where 12e12 Is Not Null).`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On()<-[`7esn`:`6esn`]-()Assert Exists([_usn4 In `2esn` Where False Ends With $``|{0}[..{`7esn`}]].@usn5?)"),
    octest_legacy:ct_string("Create Constraint On(usn2:`7esn`)Assert Case #usn8[$0..False][$`1esn`..$#usn7] When 1.0[{999}][$999] Then {1000}[1000][$usn1] Else 0[`4esn`][12.e12] End.@usn6! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[@usn5:`6esn`]-()Assert Exists(All(`8esn` In $12[{7}..0X0123456789ABCDEF] Where 123.654[$`1esn`..Null][1000..{_usn3}]).#usn8!)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn7:_usn3]-()Assert Exists({`3esn`:$`3esn` In 9e12 In ``,@usn6:'s_str'[.._usn4][..``]}.@usn6?)"),
    octest_legacy:ct_string("Create Constraint On()-[``:``]->()Assert Exists(Allshortestpaths((`5esn` :_usn4)<-[#usn7{``:.e1 Contains $`3esn`}]->(`7esn` :`2esn`{`6esn`:{`3esn`}[{`5esn`}],_usn4:0X0123456789ABCDEF[$`5esn`..]})).`2esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(#usn7:`1esn`)Assert [#usn7 In 123.654 Starts With $`` Where _usn3 Contains .e0 Contains {usn2}|`4esn` Contains #usn8 Contains 7].`4esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[usn1:_usn3]-()Assert Exists(Case #usn8[$0..False][$`1esn`..$#usn7] When 1.0[{999}][$999] Then {1000}[1000][$usn1] Else 0[`4esn`][12.e12] End.@usn6)"),
    octest_legacy:ct_string("Drop Constraint On()-[`1esn`:_usn4]-()Assert Exists([_usn3 In {`2esn`} Ends With {12} Ends With 7 Where 9e12 Is Not Null].@usn5)"),
    octest_legacy:ct_string("Create Constraint On(``:`6esn`)Assert Exists(Extract(`1esn` In $12 Is Not Null Where 0X0123456789ABCDEF[7...e0][`1esn`..usn2]).#usn8)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:_usn4)Assert Exists((:`4esn`:@usn6{@usn6:_usn4 In $usn1,`8esn`:07 Is Null})-[ *0x0..{`2esn`:9e0 In .e1 In 1.e1,usn2:{@usn6}[$`7esn`..][False..]}]->(`7esn` {`3esn`:0X0123456789ABCDEF[7...e0][`1esn`..usn2],#usn7:$`4esn`[..'s_str'][..`8esn`]}).@usn5!)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:`3esn`)Assert Exists(Extract(_usn3 In {`2esn`} Ends With {12} Ends With 7 Where Count ( * )[$12..]).`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`7esn`:`8esn`]-()Assert Exists(None(`1esn` In 0.e0 =~`1esn` =~`6esn` Where `8esn`[..`4esn`][..$usn1])._usn4!)"),
    octest_legacy:ct_string("Drop Constraint On()-[`6esn`:usn2]->()Assert Exists({`5esn`:$_usn4 Is Not Null Is Not Null}.`1esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(#usn8:@usn6)Assert Extract(`3esn` In 123.654[1e1..][{#usn8}..] Where .e1[0.12]|0.12[Count(*)..][$#usn7..]).`8esn` Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:usn2)Assert Exists(Filter(_usn3 In True[7][$999] Where {@usn5}[Count(*)..])._usn4?)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:`2esn`)Assert Extract(`6esn` In Count(*) Ends With $`` Ends With {7} Where {7}[$123456789..{1000}][$`3esn`..`7esn`]).#usn8! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(_usn4:`4esn`)Assert {`4esn`:.e12[$#usn8..@usn6]}.usn1! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(#usn7:`6esn`)Assert Exists([_usn3 In True[7][$999] Where Count(*) Is Not Null].`7esn`)"),
    octest_legacy:ct_string("Drop Constraint On()<-[_usn3:`3esn`]-()Assert Exists(({`7esn`:0.12 Starts With 9e12 Starts With $`1esn`})-[?:#usn7|`2esn` *0x0..]->(_usn3 {#usn7:1.e1 =~`2esn`,@usn6:$`5esn`[`1esn`][0X0123456789ABCDEF]}).`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On()<-[`2esn`:#usn7]-()Assert Exists({usn1:0e0[0X0123456789ABCDEF..010][$@usn6..010]}.`8esn`?)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:usn1)Assert Exists(All(`6esn` In 00 Where #usn7 Starts With $999).``!)"),
    octest_legacy:ct_string("Drop Constraint On()<-[#usn7:#usn8]-()Assert Exists(Case {`1esn`} Starts With `4esn` Starts With {0} When 0e0 Contains `3esn` Contains `7esn` Then $`5esn` Is Not Null End.@usn5!)"),
    octest_legacy:ct_string("Create Constraint On(`6esn`:_usn3)Assert Exists(Reduce(_usn3=$7 Ends With $`8esn`,_usn4 In 0.0[..{999}][..0.0]|{7} Starts With $usn1 Starts With 1.0).#usn8!)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`7esn`)Assert Any(`8esn` In $12[{7}..0X0123456789ABCDEF] Where `7esn` Starts With 0X7 Starts With $`7esn`).`6esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()-[`5esn`:`2esn`]-()Assert Exists([`` In {`1esn`} Starts With @usn6 Where {12}[00..{@usn6}][1.e1..0]|$12 Is Not Null].usn1!)"),
    octest_legacy:ct_string("Drop Constraint On(`7esn`:`6esn`)Assert [`6esn` In 00 Where #usn7 Starts With $999|{_usn4}[...e12][..0xabc]].usn2 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`3esn`:#usn8]->()Assert Exists(Case $usn1 Starts With $999 Starts With {@usn5} When `7esn` Contains `5esn` Contains 0X7 Then {1000}[{usn1}][Null] When {#usn7} In Count ( * ) In $#usn8 Then 07 Is Null End.`2esn`?)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:_usn4)Assert Exists((`1esn` :@usn6)-[ *..7{`5esn`:$_usn3[{999}],`3esn`:0.0 Is Not Null}]-({@usn6:$`` Starts With 12 Starts With $usn2})._usn3)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:@usn5)Assert Exists(Extract(_usn4 In 0.0[..{999}][..0.0] Where 12 Ends With 01|Count(*) Is Not Null)._usn3?)"),
    octest_legacy:ct_string("Create Constraint On(_usn3:#usn7)Assert Any(_usn4 In 0.0[..{999}][..0.0] Where {999} Ends With 123456789 Ends With {@usn5}).usn1? Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn5:#usn7)Assert Exists(Shortestpath((_usn3 :`3esn`:`6esn`{`3esn`:{`4esn`}[$123456789],`7esn`:`1esn`[Null..]})-[:_usn4|:usn1 *07]->(#usn8 :usn2:`2esn`{`6esn`:0x0 =~123.654 =~{999},`1esn`:1.e1[{#usn8}]})<-[`1esn` *..00{`8esn`:{999}[$123456789..][12..],`2esn`:{123456789} Is Not Null}]-(`3esn` {usn1:$`6esn`[`8esn`][0.0],`8esn`:2.12 In $`8esn` In {`7esn`}})).#usn8?)"),
    octest_legacy:ct_string("Create Constraint On(`7esn`:#usn8)Assert @usn6(Distinct `7esn` Contains `5esn` Contains 0X7).`7esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`5esn`)Assert Exists(`4esn`({`2esn`} Starts With @usn6,{`2esn`}[..{@usn6}][..1.e1]).`3esn`?)"),
    octest_legacy:ct_string("Create Constraint On(_usn4:`5esn`)Assert Shortestpath((@usn5 )<-[#usn7{``:.e1 Contains $`3esn`}]->(`7esn` :`2esn`{`6esn`:{`3esn`}[{`5esn`}],_usn4:0X0123456789ABCDEF[$`5esn`..]})).@usn6! Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[``:`6esn`]->()Assert Exists([{`4esn`}[$123456789],@usn6[$usn2..#usn7],{`7esn`}[9e1..][@usn6..]].`5esn`?)"),
    octest_legacy:ct_string("Drop Constraint On(usn1:`8esn`)Assert ``(Distinct `1esn` Is Null Is Null,0.0 Contains $_usn4 Contains {`2esn`})._usn3! Is Unique"),
    octest_legacy:ct_string("Create Constraint On(usn2:@usn6)Assert Exists({`6esn`:$`1esn`[#usn8][$@usn5],@usn6:123.654[1e1..][{#usn8}..]}.#usn8?)"),
    octest_legacy:ct_string("Create Constraint On()-[`6esn`:_usn3]-()Assert Exists((:`4esn`:@usn6{usn1:07 Is Null,@usn6:{_usn3}[$usn2..]})-[`2esn`:`2esn`{`3esn`:9e1 =~`` =~{`7esn`},usn2:$`3esn` Ends With $999 Ends With 0X0123456789ABCDEF}]-(:usn1:_usn4{#usn8:$7 Ends With 0X7,`5esn`:12 Is Not Null})._usn4!)"),
    octest_legacy:ct_string("Create Constraint On()-[#usn8:`6esn`]->()Assert Exists(Extract(`3esn` In 123.654[1e1..][{#usn8}..] Where Count(*) Starts With $usn1 Starts With {usn2}).`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On(#usn7:#usn8)Assert Exists([{12} =~0.e0 =~{_usn3},$#usn7 =~{12} =~False,1000 Is Null].#usn7)"),
    octest_legacy:ct_string("Drop Constraint On()-[``:``]->()Assert Exists({_usn4:12.e12[2.12..][0xabc..],_usn4:$_usn4[{``}..][1e1..]}.`5esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`3esn`:#usn7)Assert (:`5esn`:@usn5{``:.e12 =~$_usn4})-[?:`8esn`|:_usn4{usn1:999[12.0..][#usn7..],@usn5:123.654[$`1esn`..Null][1000..{_usn3}]}]->(usn1 {`2esn`:0.0 Contains $_usn4 Contains {`2esn`},_usn4:0e0 Contains `3esn` Contains `7esn`}).`7esn` Is Unique"),
    octest_legacy:ct_string("Create Constraint On(@usn6:`6esn`)Assert Any(`3esn` In 123.654[1e1..][{#usn8}..] Where 9e12[$`5esn`]).usn1? Is Unique"),
    octest_legacy:ct_string("Drop Constraint On()<-[``:`8esn`]-()Assert Exists(#usn8.``)"),
    octest_legacy:ct_string("Create Constraint On()-[`7esn`:usn1]-()Assert Exists(Filter(_usn3 In {`2esn`} Ends With {12} Ends With 7 Where $7[{`1esn`}]).#usn7!)"),
    octest_legacy:ct_string("Create Constraint On(`4esn`:#usn7)Assert Exists(Single(`1esn` In `3esn`[07..] Where 999 Starts With 's_str').#usn8)"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`7esn`)Assert Exists(({`3esn`:{@usn5} Is Null,`5esn`:{`2esn`} Ends With {12} Ends With 7})<-[@usn6?:@usn5|:`7esn` *1000{`2esn`:$0[{`2esn`}..{`1esn`}][{@usn5}..$`7esn`],_usn4:#usn8 Is Null}]->(:`8esn`:@usn5{`5esn`:$`3esn`[..$`2esn`][..123.654]})-[:`5esn`{`6esn`:_usn3 Contains .e0 Contains {usn2}}]->(`4esn` :`4esn`:@usn6).`4esn`!)"),
    octest_legacy:ct_string("Drop Constraint On(`2esn`:`2esn`)Assert Extract(`6esn` In 00 Where {@usn5} Starts With 1.0 Starts With 00)._usn3 Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[@usn5:_usn4]-()Assert Exists([1.e1 =~`2esn`,$@usn6[$0..usn1][0X0123456789ABCDEF..$999],$123456789 Starts With `5esn`].usn2?)"),
    octest_legacy:ct_string("Drop Index On:`5esn`(`8esn`)"),
    octest_legacy:ct_string("Drop Constraint On(@usn5:usn1)Assert Extract(@usn5 In Null =~12e12 Where 7 Is Not Null|True =~_usn3 =~123456789)._usn3? Is Unique"),
    octest_legacy:ct_string("Create Constraint On()-[`5esn`:`7esn`]->()Assert Exists(None(@usn5 In Null =~12e12 Where {`5esn`} Contains 's_str' Contains 9e1)._usn3?)"),
    octest_legacy:ct_string("Create Constraint On()-[@usn6:`8esn`]->()Assert Exists(Any(_usn3 In {@usn5}[..#usn7] Where `2esn` Starts With `` Starts With 1e1).@usn5!)"),
    octest_legacy:ct_string("Create Constraint On(`1esn`:`5esn`)Assert Exists([`` Ends With $`4esn` Ends With 0X0123456789ABCDEF].`6esn`!)"),
    octest_legacy:ct_string("Create Constraint On(`8esn`:`7esn`)Assert Allshortestpaths((:``{``:$`2esn`[12.e12][$@usn5],``:`8esn` Contains 1e1})-[?:`4esn`|:#usn7]->(`1esn` :@usn6)<-[`1esn`?]->({usn1:0e0[..$@usn5][..$`8esn`],usn1:01[..{`7esn`}][..01234567]})).`5esn`! Is Unique"),
    octest_legacy:ct_string("Drop Constraint On(`8esn`:`6esn`)Assert Exists(Filter(_usn3 In {@usn5}[..#usn7] Where 9e0 Starts With .e0 Starts With \"d_str\").`1esn`!)").
